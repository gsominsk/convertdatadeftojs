external procedure ToolWebOutNoteText(record NoteVc,Integer,string);
external procedure ToolWebOutMailText(record MailVc,string);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebStartPage();
external procedure ToolWebHBSStartBody(string,string);
external procedure ToolWebEndPage(Boolean);
external procedure ToolWebHBSMenuItem(string,string,string,string,Boolean);
external procedure ToolWebHBSNavLink(string,string,string,string,Boolean);
external procedure ToolWebHBSMailPopup(string,string,LongInt);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external function string 200 GetWebLanguage();
external procedure ToolWebGetTextLang(record MailVc,LongInt,record MailVc,string);
external procedure ToolWebGetTheText(Integer,var string);

global
procedure PrintHeaderLang(string theheader,string tothead,string langhead)
begin
  if ((Left(tothead,3)<>"000") and (nonblank(theheader))) then begin
    WebOutNL;
    WebOutString("<p class=""heading3"">");
    if (nonblank(langhead)) then begin
      WebOutString(langhead);
    end else begin
      WebOutString(theheader);
    end;
    WebOutString("</p>");
    WebOutNL;
    WebOutNL;
  end;
  return;
end;

global
procedure ToolWebOutTextLang(record MailVc Mailr,string tothead)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  string 255 theheader;
  Integer cnt;
  Boolean printf;
  
  printf = false;
  cnt = 1;
  theheader = Right(tothead,Len(tothead)-3);
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (GetWebLanguage==Noter.LangCode) then begin // WebLanguage(1)
      PrintHeaderLang(theheader,tothead,Right(RLr.Comment,Len(RLr.Comment)-3));
      WebOutNL;
      WebOutString("<div class=""deftxt"">");
      ToolWebOutNoteText(Noter,Mailr.HtmlTranslation,"");
      WebOutString("</div>");
      WebOutNL;
      printf = true;
      goto LWebOutTextLang;
    end;
  end;
  if (printf==false) then begin
    PrintHeaderLang(theheader,tothead,"");
    WebOutNL;
    WebOutString("<div class=""deftxt"">");
    ToolWebOutMailText(Mailr,"");
    WebOutString("</div>");
    WebOutNL;
  end;
LWebOutTextLang:;
  WebOutNL;
  return;
end;

global
procedure ToolWebOutTextLangOnly(record MailVc Mailr)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean printf;
  
  printf = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (GetWebLanguage==Noter.LangCode) then begin // WebLanguage(1)
      ToolWebOutNoteText(Noter,Mailr.HtmlTranslation,"");
      WebOutNL;
      printf = true;
      goto LWebOutTextLang;
    end;
  end;
  if (printf==false) then begin
    ToolWebOutMailText(Mailr,"");
    WebOutNL;
  end;
LWebOutTextLang:;
  WebOutNL;
  return;
end;

global
procedure ToolWebGetHeaderLang(record MailVc Mailr,var string tothead)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean foundf;
  
  foundf = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (GetWebLanguage==Noter.LangCode) then begin // WebLanguage(1)
      tothead = RLr.Comment;
      foundf = true;
      goto LWebGetHeaderLang;
    end;
  end;
  if (foundf==false) then begin
    tothead = Right(Mailr.Header,Len(Mailr.Header)-3);
  end;
LWebGetHeaderLang:;
  return;
end;

global
procedure ToolWebGetConfNameLang(record ConfVc Confr,var string tothead)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean foundf;
  
  foundf = false;
  cnt = 1;
  while (ReadRecordLink(Confr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (GetWebLanguage==Noter.LangCode) then begin // WebLanguage(1)
      tothead = RLr.Comment;
      foundf = true;
      goto LWebGetConfNameLang;
    end;
  end;
  if (foundf==false) then begin
    tothead = Confr.Comment;
  end;
LWebGetConfNameLang:;
  return;
end;

procedure CutStringNicely(var string tstr)
begin
  string 255 tstr2;
  string 10 astr;
  Integer i,slen;
  Integer apoint;
  Integer aspace;
  
  apoint = 0;
  aspace = 0;
  tstr2 = tstr;
  slen = len(tstr2)-1;
  for (i=slen;i>0;i=i-1) begin
    astr = Mid(tstr2,i,1);
    if (astr==".") then begin
      apoint = i+1;
      i = 0;
    end;
    if (aspace==0) then begin
      if (astr==" ") then begin
        aspace = i;
      end;
    end;
  end;
  if (apoint>0) then begin
    if (apoint>slen-80) then begin
      tstr = Left(tstr2,apoint);
    end else begin
      tstr = Left(tstr2,aspace);
    end;
  end;
  return;
end;

procedure ToolWebHBSPublicMailView(record MailVc Mailr,LongInt maxchars)
begin
  record MailVc Mail2r;
  string 200 tstr;
  
  ToolWebGetTextLang(Mailr,maxchars,Mail2r,GetWebLanguage);
  ToolWebGetTheText(20057,tstr);
  WebOutString("<table width=""100%"" cellspacing=""0"" cellpadding=""3"" border=""1"" class=""deftbl"">");
  ToolWebLineStart;
  WebOutString("<th>" & tstr & "</th>");
  ToolWebLineEnd;
  WebOutString("<tr class=""even"">");
  WebOutString("<TD class=""mnu-lvl-1"" height=""11"" VALIGN=top align=""left"">");
  WebOutString("<b>" & Right(Mail2r.Header,Len(Mail2r.Header)-3) & "</b><br><br>");
  ToolWebOutMailText(Mail2r,"");
  ToolWebHBSMailPopup("WebHBSMailView.hal","",Mailr.SerNr);
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSPublicNews(string thecode,LongInt maxchars)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 60 confname;
  string 60 confcode;
  LongInt loopcnt,looppos,maxmail;
  Boolean foundf;

  loopcnt = 0;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "UserTime:" & confcode;
  looppos = RecordsInIndex("MailVc",ckey)+1;
  SetLoopPosition(Mailr,looppos);
  foundf = true;
  while (LoopBackKey(ckey,Mailr,1,foundf)) begin
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        ToolWebHBSPublicMailView(Mailr,maxchars);
      end;
    end;
  end;
  return;
end;

// Not used...
global
procedure ToolWebPublicListConference(string whichone,LongInt norofmails,LongInt maxchars)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  string 60 ckey;
  string 10 sortorder;
  LongInt loopcnt;
  LongInt maxmail;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;

  loopcnt = 0;
  GetConfInfo(whichone,confname,confcode,maxmail);
  if (norofmails>0) then begin
    maxmail = norofmails;
  end;
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        ToolWebGetTextLang(Mailr,maxchars,Mail2r,GetWebLanguage);
        WebOutString("<p>");
        WebOutNL;
        WebOutString("<a href=""");
        WebOutLink("WebHBSEntireConf2.hal?sessionid=" & WebGetArg("sessionid") & "&confcode=" & whichone & "&langcode=" & WebGetArg("langcode"));
        WebOutString(""">");
        WebOutNL;
        ToolWebOutMailText(Mail2r,"");
        WebOutString("</a>");
        WebOutNL;
        WebOutString("</p>");
        WebOutNL;
      end;
    end;
  end;
  return;
end;

procedure ToolWebDisplayLink(record WebMenuVc WebMenur,string comment,string theclickstr,Boolean stacked)
begin
  record WebPagesVc WPr;
  
  WPr.Code = WebMenur.LinkTo;
  if (ReadFirstMain(WPr,1,true)) then begin
    switch (WPr.PageType) begin
      case 0:
        if (stacked) then begin
          ToolWebHBSMenuItem(comment,"WebHBSMagicList.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1);
        end else begin
          ToolWebHBSNavLink(comment,"WebHBSMagicList.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1);
        end;
      case 1:
        if (stacked) then begin
          ToolWebHBSMenuItem(comment,"WebHBSMagicList.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1);
        end else begin
          ToolWebHBSNavLink(comment,"WebHBSMagicList.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1);
        end;
      case 2:
        if (stacked) then begin
          ToolWebHBSMenuItem(comment,WPr.HALFunc,WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1);
        end else begin
          ToolWebHBSNavLink(comment,WPr.HALFunc,WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1);
        end;
    end;
  end else begin
    if (stacked) then begin
      ToolWebHBSMenuItem(comment,WebMenur.LinkTo,WebMenur.ExtraArgs & theclickstr,WebMenur.Target,WebMenur.NoSession==1);
    end else begin
      ToolWebHBSNavLink(comment,WebMenur.LinkTo,WebMenur.ExtraArgs & theclickstr,WebMenur.Target,WebMenur.NoSession==1);
    end;
  end;
  return;
end;

global
procedure ToolWebAddLeftMenubar(string menustr,string clicked,string langstr)
begin
  record WebMenuVc WebMenur;
  record WebMenuVc WebMenu2r;
  row WebMenuVc WebMenurw;
  string 60 ckey;
  string 60 ckey2;
  string 200 comment;
  Boolean found,found2;
  Integer rwcnt,i;
  string 60 theclick;
  string 100 theclickstr;
  Integer oldcomp;
  Boolean res;
  Boolean firstf;
  
  firstf = true;
  oldcomp = CurrentCompany;  
  res = SetCompany(1,false);
  if (WebGetArg("clbefore")==clicked) then begin
    theclick = "";
  end else begin
    theclick = clicked;
  end;
  if (nonblank(theclick)) then begin
    theclickstr = "&clbefore=" & theclick;
  end else begin
    theclickstr = "";
  end;
  ckey = "MenuCode:" & menustr;
  found = true;
  WebMenur.Code = "";
  while (LoopKey(ckey,WebMenur,1,found)) begin
    if (found) then begin
      comment = WebMenur.Comment;
      rwcnt = MatRowCnt(WebMenur);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WebMenur,i,WebMenurw);
        if (langstr==WebMenurw.LangCode) then begin
          comment = WebMenurw.Comment;
        end;
      end;
      if (nonblank(comment)) then begin
      if (firstf==false) then begin
        webOutString("<tr><td colspan=""2""><img src=""gfx/mnu_tk03.gif"" width=""157"" height=""1"" alt="""" vspace=""6""></td></tr>");
      end;
      firstf = false;
      ToolWebDisplayLink(WebMenur,comment,theclickstr,true);
      if (WebMenur.Code==theclick) then begin
        ckey2 = "MenuCode:" & theclick;
        found2 = true;
        WebMenu2r.Code = "";
        ResetLoop(WebMenu2r);
        while (LoopKey(ckey2,WebMenu2r,1,found2)) begin
          if (found2) then begin
            comment = "&nbsp;&nbsp;&nbsp;&nbsp;" & WebMenu2r.Comment;
            rwcnt = MatRowCnt(WebMenu2r);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WebMenu2r,i,WebMenurw);
              if (langstr==WebMenurw.LangCode) then begin
                comment = "&nbsp;&nbsp;&nbsp;&nbsp;" & WebMenurw.Comment;
              end;
            end;
            ToolWebDisplayLink(WebMenu2r,comment,"",true);
          end;
        end;
        end;
      end;
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure ToolWebAddTopMenubar(string menustr,string langstr)
begin
  record WebMenuVc WebMenur;
  row WebMenuVc WebMenurw;
  string 60 ckey;
  string 200 comment;
  Boolean found;
  Integer rwcnt,i;
  Integer oldcomp;
  Boolean res;
  
  oldcomp = CurrentCompany;  
  res = SetCompany(1,false);
  ckey = "MenuCode:" & menustr;
  found = true;
  WebMenur.Code = "";
  while (LoopKey(ckey,WebMenur,1,found)) begin
    if (found) then begin
      comment = WebMenur.Comment;
      rwcnt = MatRowCnt(WebMenur);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WebMenur,i,WebMenurw);
        if (langstr==WebMenurw.LangCode) then begin
          comment = WebMenurw.Comment;
        end;
      end;
      ToolWebDisplayLink(WebMenur,comment,"",false);
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

