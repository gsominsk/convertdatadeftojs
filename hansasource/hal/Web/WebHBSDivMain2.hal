external procedure ToolWebHBSDivExtraLink(string,string,string,string,string,Boolean);
external procedure ToolWebHBSDivMenuItem(string,string,string,string,string,Boolean,Integer,Boolean,Boolean);
external procedure ToolWebHBSDivStartDiv(string);
external procedure ToolWebHBSDivEndDiv(string);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebEndTable();
external function string 255 ToolWebBuildLink(string,string);
external function string 200 ToolWebReturnTheText(Integer);
external function Boolean ToolWebHBSUseLink();

procedure DisplayWebLink(record WebLinkVc WebLinkr,string langcode)
begin
  record WebPagesVc WPr;
  record MailVc Mailr;
  record ConfVc Confr;
  record WebMenuVc WebMenur;
  row WebLinkVc WebLinkrw;
  record RLinkVc RLr;
  string 200 comment;
  Boolean wpfoundf;
  Integer i,rwcnt;
  Integer menulevel;
  string 20 mailsernr;
  string 20 confcode;
  string 60 thefunc;

  WebOutNL;
  if (ReadRecordLink(WebLinkr,1,WebMenur,RLr)) begin
    comment = WebLinkr.Comment;
    rwcnt = MatRowCnt(WebLinkr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(WebLinkr,i,WebLinkrw);
      if (langcode==WebLinkrw.LangCode) then begin
        comment = WebLinkrw.Comment;
      end;
    end;
    confcode = "";
    mailsernr = "";
    thefunc = "";
    wpfoundf = ReadRecordLink(WebLinkr,1,WPr,RLr);
    if (wpfoundf==false) then begin
      WPr.Code = WebMenur.LinkTo;
      wpfoundf = ReadFirstMain(WPr,1,true);
    end;
    if (nonblank(WebLinkr.TheFunction)) then begin
      thefunc = "&function=" & WebLinkr.TheFunction;
    end;
    if (ReadRecordLink(WebLinkr,1,Confr,RLr)) then begin
      confcode = "&theconf=" & Confr.SerNr;
    end;
    if (ReadRecordLink(WebLinkr,1,Mailr,RLr)) then begin
      mailsernr = "&mailnumber=" & Mailr.SerNr;
    end;
    menulevel = 0;
    WebOutString("<br>");
    if (wpfoundf) then begin
      switch (WPr.PageType) begin
        case 0:
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&webpage=" & WPr.Code & mailsernr & confcode & thefunc,WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 1:
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&webpage=" & WPr.Code & mailsernr & confcode & thefunc,WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 2:
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&function=" & WPr.HALFunc & "&webpage=" & WPr.Code & mailsernr & confcode,WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 4: // Logout
          ToolWebHBSDivExtraLink(comment,"WebHBSDivDoLogout.hal",WebMenur.ExtraArgs & "&function=" & WPr.HALFunc & "&webpage=" & WPr.Code & mailsernr & confcode,WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 5: // Shopping Basket
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&function=WebHBSDivShopBasket",WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 6: // Item Browse
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&function=WebHBSDivCustProd",WebMenur.Target,langcode,WebMenur.NoSession==1);
/*
   7-10 used in HBSFunc
        case 11: // Version
          WebHBSDivVersion(WPr,WebMenur,comment,theclickstr,langcode,stacked);
        case 12: // checkout page
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMainUpdate.hal",WebMenur.ExtraArgs & "&function=WebHBSDivCheckout",WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 13: // credit card payment page
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&function=WebHBSDivPayCC",WebMenur.Target,langcode,WebMenur.NoSession==1);
*/
        case 19: // Forum
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&webpage=" & WPr.Code & mailsernr & confcode & thefunc,WebMenur.Target,langcode,WebMenur.NoSession==1);
        case 20: // Forum
          ToolWebHBSDivExtraLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&function=WebISShopMyServices" & "&webpage=" & WPr.Code & mailsernr & confcode,WebMenur.Target,langcode,WebMenur.NoSession==1);
      end;
    end else begin
      ToolWebHBSDivExtraLink(comment,WebMenur.LinkTo,WebMenur.ExtraArgs,WebMenur.Target,langcode,WebMenur.NoSession==1);
    end;
//    WebOutString("</p>");
  end;
  return;
end;

procedure DisplayWebAdvertLinks(record WebNewAdvertVc WebNewAdvertr,string langcode)
begin
  record WebLinkVc WebLinkr;
  record RLinkVc RLr;
  Integer linknr;
  
  linknr = 1;
  while (ReadRecordLink(WebNewAdvertr,linknr,WebLinkr,RLr)) begin
    DisplayWebLink(WebLinkr,langcode);
    linknr = linknr + 1;
  end;
  return;
end;

global
procedure DisplayMailLinks(record MailVc Mailr,string langcode)
begin
  record WebLinkVc WebLinkr;
  record RLinkVc RLr;
  Integer linknr;
  
  linknr = 1;
  while (ReadRecordLink(Mailr,linknr,WebLinkr,RLr)) begin
    DisplayWebLink(WebLinkr,langcode);
    linknr = linknr + 1;
  end;
  return;
end;

global
procedure WebHBSDivDisplayAdvert(string langcode)
begin
  record WebNewAdvertVc WebNewAdvertr;
  Integer oldcomp;
  
  oldcomp = CurrentCompany;  
  if (SetCompany(1,false)) then begin end;
  WebNewAdvertr.Code = WebGetArg("webadvertpage");
  WebNewAdvertr.Language = langcode;
  if (ReadFirstMain(WebNewAdvertr,2,true)) then begin
    WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
    ToolWebLineStart;
    WebOutString("<td colspan=2 align=right>");
    ToolWebHBSDivMenuItem(ToolWebReturnTheText(20186),"WebHBSDivMain.hal","&webpage=" & WebGetArg("theconf") & "&company=" & oldcomp & "&theconf=" & WebGetArg("theconf") & "&showmealladv=YES","",langcode,false,0,false,false);
    WebOutString("</td>");
    ToolWebLineEnd;
    ToolWebEndTable;
    WebOutString("<p class=""heading3"">");
    WebOutString(WebNewAdvertr.Comment);
    WebOutString("</p>");
    WebOutText(WebNewAdvertr,1,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&company=" & oldcomp & "&webadvertpage=" & WebGetArg("webadvertpage")));
    DisplayWebAdvertLinks(WebNewAdvertr,langcode);
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure ToolWebHBSDivAddAdvert(Integer typ)
begin
  string 50 aw,ah,as;
  
  switch (typ) begin
    case 1:
      aw = "160";
      ah = "600";
      as = "160x600_as";
    case 2:
      aw = "120";
      ah = "600";
      as = "120x600_as";
    case 3:
      aw = "728";
      ah = "90";
      as = "720x90_as";
    case 4:
      aw = "180";
      ah = "150";
      as = "180x150_as";
  end;
  WebOutNL;
  WebOutString("<script type=""text/javascript""><!--");
  WebOutNL;
  WebOutString("google_ad_client = ""pub-9071305647384679"";");
  WebOutNL;
  WebOutString("google_ad_width = " & aw & ";");
  WebOutNL;
  WebOutString("google_ad_height = " & ah & ";");
  WebOutNL;
  WebOutString("google_ad_format = """ & as & """;");
  WebOutNL;
  WebOutString("google_ad_type = ""text_image"";");
  WebOutNL;
  WebOutString("google_ad_channel = """";");
  WebOutNL;
  WebOutString("//--></script>");
  WebOutNL;
  WebOutString("<script type=""text/javascript""");
  WebOutNL;
  WebOutString("  src=""http://pagead2.googlesyndication.com/pagead/show_ads.js"">");
  WebOutNL;
  WebOutString("</script>");
  WebOutNL;
  return;
end;

function string 255 NewAdvertText(record WebNewAdvertVc WebNewAdvertr,Integer whichone)
begin
  row WebNewAdvertVc WebNewAdvertrw;
  LongInt i,rwcnt;
  string 255 res;
  
  rwcnt = MatRowCnt(WebNewAdvertr);
  Randomize;
  i = Random(0,rwcnt);
  if (i>=rwcnt) then begin
    i = 0;
  end;
  MatRowGet(WebNewAdvertr,i,WebNewAdvertrw);
  if (whichone==0) then begin
    res = WebNewAdvertrw.Linktext;
  end else begin
    res = WebNewAdvertrw.Linktext2;
  end;
  NewAdvertText = res;
  return;
end;

procedure DisplayTheNewAdvert(record WebNewAdvertVc WebNewAdvertr,string langcode)
begin
  record WebPagesVc WPr;
  string 255 llink;
  string 200 thelink;
  Integer rwcnt;

  rwcnt = MatRowCnt(WebNewAdvertr);
  if (nonblank(WebNewAdvertr.LinkTo) or (rwcnt>0)) then begin
    ToolWebHBSDivStartDiv("our_banner_container");
    ToolWebHBSDivStartDiv("our_banner_top"); ToolWebHBSDivEndDiv("our_banner_top");
    ToolWebHBSDivStartDiv("our_banner_left"); ToolWebHBSDivEndDiv("our_banner_left");
    ToolWebHBSDivStartDiv("our_banner_content");
    if (nonblank(WebNewAdvertr.LinkTo)) then begin
      if (WebNewAdvertr.NoSession) then begin
        llink = WebNewAdvertr.LinkTo;
        if (InString(llink,"hansa=")==0) then begin
          llink = llink & "?" & WebNewAdvertr.ExtraArgs & "&langcode=" & langcode;
        end;
      end else begin
        WPr.Code = WebNewAdvertr.LinkTo;
        if (ReadFirstMain(WPr,1,true)) then begin
          thelink = "WebHBSDivMain.hal";
        end else begin
          WPr.Code = "";
          thelink = WebNewAdvertr.LinkTo;
        end;
        llink = ToolWebBuildLink(thelink,WebNewAdvertr.ExtraArgs & "&webpage=" & WPr.Code & "&langcode=" & langcode);
      end;
    end else begin
      llink = ToolWebBuildLink("WebHBSDivMain.hal",WebNewAdvertr.ExtraArgs & "&function=WebHBSDivDisplayAdvert&webadvertpage=" & WebNewAdvertr.Code & "&langcode=" & langcode);
    end;
    if (nonblank(llink)) then begin
      WebOutString("<a class=""leftBannerMenuLink"" href=""");
    end;
    if (WebNewAdvertr.NoSession) then begin
      WebOutString(llink);
    end else begin
      if (ToolWebHBSUseLink) then begin
        WebOutLink(llink);
      end else begin
        WebOutString(llink);
      end;
    end;
    if (nonblank(llink)) then begin
      WebOutString(""">");
    end;
    WebOutString(NewAdvertText(WebNewAdvertr,0));
    if (nonblank(llink)) then begin
      WebOutString("</a>");  
      WebOutNL;
    end;
    llink = NewAdvertText(WebNewAdvertr,1);
    if (nonblank(llink)) then begin
      WebOutString("<br>" & llink);
    end;
    ToolWebHBSDivEndDiv("our_banner_content");
    ToolWebHBSDivStartDiv("our_banner_right"); ToolWebHBSDivEndDiv("our_banner_right");
    ToolWebHBSDivStartDiv("our_banner_bottom"); ToolWebHBSDivEndDiv("our_banner_bottom");
    ToolWebHBSDivEndDiv("our_banner_container");
  end;
  return;
end;

global
procedure RandomAddOwnNewAdverts(string whichone,string ilangcode)
begin
  record WebNewAdvertVc WebNewAdvertr;
  record WebAdvertBlock WAb;
  Boolean foundf;
  LongInt i,r;
  array string 20 acode;
  LongInt acnt;
  Boolean randomon;
  LongInt advtodisplay;
  Boolean shownf;
  string 20 langcode;
  
  langcode = ilangcode;
  if (blank(langcode)) then begin
    langcode = "EN";
  end;
  foundf = true;
  acnt = 0;
  WebNewAdvertr.Language = langcode;
  while (LoopKey("Language",WebNewAdvertr,1,foundf)) begin
    if (WebNewAdvertr.Language!=langcode) then begin
      foundf = false;
    end;
    if (foundf) then begin
      if (WebNewAdvertr.Closed==0 and WebNewAdvertr.AlwaysOnWeb==0) then begin
        acode[acnt] = WebNewAdvertr.Code;
        acnt = acnt + 1;
      end;
    end;
  end;
  BlockLoad(WAb);
  advtodisplay = WAb.NrOnWeb;
  if ((whichone=="HOMELI") or (WebGetArg("showmealladv")=="YES")) then begin
    advtodisplay = 1000;
  end;
  randomon = WAb.Random==1;
  if (acnt<=advtodisplay or advtodisplay<=0) then begin
    randomon = false;
  end;
  
  ResetLoop(WebNewAdvertr);
  WebNewAdvertr.AlwaysOnWeb = 1;
  WebNewAdvertr.Language = langcode;
  if (ReadFirstKey("AlwaysOnWeb",WebNewAdvertr,2,true)) then begin
    DisplayTheNewAdvert(WebNewAdvertr,langcode);
    advtodisplay = advtodisplay -1;
    shownf = true;
  end;
  if (randomon) then begin
    while (acnt>advtodisplay) begin
      Randomize;
      r = Random(0,acnt);
      for (i = r;i<acnt-1;i=i+1) begin // HalRandom(0,acnt)
        acode[i] = acode[i+1];
      end;
      acnt = acnt -1;
    end;
    for (i=acnt-1;i>=0;i=i-1) begin
      WebNewAdvertr.Code = acode[i];
      WebNewAdvertr.Language = langcode;
      if (ReadFirstMain(WebNewAdvertr,2,true)) then begin
        DisplayTheNewAdvert(WebNewAdvertr,langcode);
        shownf = true;
      end;
    end;
  end else begin
    for (i=0;i<acnt;i=i+1) begin
      if (i>=advtodisplay) then begin
        i = acnt;
      end else begin
        WebNewAdvertr.Code = acode[i];
        WebNewAdvertr.Language = langcode;
        if (ReadFirstMain(WebNewAdvertr,2,true)) then begin
          DisplayTheNewAdvert(WebNewAdvertr,langcode);
          shownf = true;
        end;
      end;
    end;
  end;
  if (shownf) then begin
    WebOutString("<br><br>");
  end;
  return;
end;

