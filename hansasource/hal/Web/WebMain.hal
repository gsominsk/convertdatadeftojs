// WebMain.hal
external function Boolean GetGlobalUserMainCompany(string,var string);
external function string 200 GetWebLanguage();
external procedure ToolWebOutWebHTMLText(record WebHTMLVc,Integer,string);
external function Time TimeDiff(Time,Time);
external function val GetStockQty(string,string,Date,Boolean);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external function Boolean LoggedInTest();
external function Boolean ToolWebItemHasPict(var record WebHTMLVc,string,string);
external procedure ToolWebDisplayHTMLExtra(record WebHTMLVc,string,string);
external procedure ToolWebViewShopList(record ORVc);
external procedure ToolWebGetDispGroup(string,var string);
external procedure ToolWebInfoCell(string,string,string);
external procedure WebStartNavBar();
external procedure WebEndNavBar();
external procedure FindUserMailboxName(string,var string,var string);
external procedure DoHttpReport();
external procedure ToolWebHiddenField(string,string);
external procedure WebEditField(string,string,string,string,Integer,Integer);
external procedure ToolWebPushButton(string,string,string);
external procedure ToolWebMenuItem(string,string,string,string,var Integer);
external procedure WebNavLink(string,string,string,string);
external procedure ToolWebSetMainTitle();
external procedure ToolWebStartPage();
external procedure ToolWebStartBody(string);
external procedure ToolWebEndPage(Boolean);
external procedure ToolWebStartTable();
external procedure ToolWebEndTable();
external procedure ToolWebStartHeader();
external procedure WebLink(string,string,string,string);
external procedure ToolWebListTable(Integer,Integer,string);
external procedure ToolWebListTableEnd();
external procedure ToolWebTableHdr(string,string,string);
external procedure ToolWebStartHeaderEnd();
external procedure WebMenuItemNoSess(string,string,string);
external procedure ToolWebOutHeaderBegin(string);
external procedure ToolWebOutHeaderEnd();
external procedure WebLeadText(string,string);
external procedure WebLeadText2(string,string);
external procedure ToolWebDispGroups(string,LongInt,Integer);
external procedure DisplaySearchResult(string,Integer,string,string,string,LongInt);
external procedure ToolWebTableData(string,string,string,string,string,string,Integer);
external procedure WebEditFieldBrowse(string,string,string,string,Integer,Integer,Integer);
external procedure ToolWebListAR(string,LongInt,Integer,var val,Boolean);
external procedure WebPublicConf(string,LongInt,Boolean);
external function Boolean ToolWebGetCustAndSettings(var record CUVc,var Boolean,var Boolean);
external updating function LongInt ToolWebStoreTheOrder(string);
external function Boolean BuildWebOrd(string,LongInt,var record ORVc,var Boolean,string);
external function val QtyInBasket(String,Integer);
external procedure ToolWebRadioButtonDiv(string,string,Integer,Boolean);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external procedure ToolWebGetTheText(Integer,var string);

global
procedure WebOutNoneHeader(string hstr)
begin
  string 60 itcode;

//  ToolWebGetDispGroup("",itcode);
  ToolWebOutHeaderBegin(hstr);
/*
  ToolWebLineStart;
  WebNavLink("Main Menu","WebMain.hal","","");
  WebNavLink("Intranet Login","WebIntrLogin.hal","","");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebNavLink("Products","WebMainCust.hal","itcode=" & itcode,"");
  WebNavLink("B2B Login","WebB2BLogin.hal","","");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebNavLink("","","","");
  WebNavLink("B2C Login","WebB2CLogin.hal","","");
  ToolWebLineEnd;
*/
//  ToolWebOutHeaderEnd;
  return;
end;

global
procedure WebOutUserHeader(string hstr)
begin
  ToolWebOutHeaderBegin(hstr);
  ToolWebLineStart;
  WebNavLink("Main Menu","WebMainUser.hal","","");
  if (nonblank(CurrentCust)) then begin
    WebNavLink("Shopping Basket","WebShopBask.hal","","");
  end;
  ToolWebLineEnd;
  ToolWebLineStart;
  WebNavLink("Search","WebSearchView.hal","","");
  if (nonblank(CurrentCust)) then begin
    WebNavLink("Customer Status","WebCustStatus.hal","","");;
  end;
  ToolWebLineEnd;
  ToolWebLineStart;
  WebNavLink("Download Files","WebDownload.hal","","");
  WebNavLink("Logout","WebDoLogout.hal","","");
  ToolWebLineEnd;
  ToolWebOutHeaderEnd;
  return;
end;

global
procedure WebOutCustHeader(string hstr)
begin
  ToolWebOutHeaderBegin(hstr);
  ToolWebLineStart;
  WebNavLink("Main Menu","WebMainCust.hal","","");
  WebNavLink("Shopping Basket","WebShopBask.hal","","");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebNavLink("Search","WebSearchView.hal","","");
  WebNavLink("Customer Status","WebCustStatus.hal","","");
//  WebNavLink("Customer Status","WebCustSalesLedger.hal","","");
// kyts  WebNavLink("Customer Status","WebCustStatusReport.hal","","");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebNavLink("Download Files","WebDownload.hal","","");
  WebNavLink("Logout","WebDoLogout.hal","","");
  ToolWebLineEnd;
  ToolWebOutHeaderEnd;
  return;
end;

global
procedure ToolWebOutHeader(string hstr)
begin
  ToolWebOutHeaderBegin(hstr);
  ToolWebLineStart;
  WebNavLink("Main Menu","WebMainForAll.hal","","");
  ToolWebLineEnd;
  return;
end;

global
procedure WebNavBar(string halfunc,Boolean prevf,Boolean nextf,LongInt nextval,LongInt prevval,string itcode,string confcode)
begin
  string 60 mainmenu;
  
  mainmenu = "WebMain.hal";
  if (WebLoginStatus==3) then begin
  if (blank(CurrentUser)) then begin
    if (nonblank(CurrentCust)) then begin
      mainmenu = "WebMainCust.hal";
    end;
  end else begin
    mainmenu = "WebMainUser.hal";
  end;
  end;
  if (prevf or nextf) then begin
    WebStartNavBar;
    WebNavLink("Main Menu",mainmenu,"&sernr=" & WebGetArg("backnr") & "&mailnumber=-1&confcode=" & confcode,"");
    if (prevf==true) then begin
      WebNavLink("Previous",halfunc,"sernr=" & prevval & "&itcode=" & itcode & "&confcode=" & confcode,"");
    end else begin
      WebNavLink("","","","");
    end;
    if (nextf==true) then begin
      WebNavLink("Next",halfunc,"sernr=" & nextval & "&itcode=" & itcode & "&confcode=" & confcode,"");
    end else begin
      WebNavLink("","","","");
    end;
    WebEndNavBar;
  end;
  return;
end;

global
procedure WebNavBar2(string halfunc,Boolean prevf,Boolean nextf,LongInt nextval,LongInt prevval,LongInt msernr,string itcode,string confcode,LongInt itempages, integer showmax)
begin
  Integer x;

//  if (prevf or nextf) then begin
    WebStartNavBar;

    WebNavLink("Back",WebGetArg("backpage"),"&sernr=" & WebGetArg("backnr") & "&mailnumber=-1&confcode=" & confcode,"");
    WebNavLink("New","WebMailView.hal","&backnr=" & msernr & "&mailnumber=-1&backpage=" & WebGetArg("backpage") & "&confcode=" & confcode,"");

    if (prevf==true) then begin
      WebNavLink("Previous",halfunc,"sernr=" & prevval & "&itcode=" & itcode & "&backpage=" & WebGetArg("backpage") & "&confcode=" & confcode,"");
    end else begin
      WebNavLink("","","","");
    end;
    if (nextf==true) then begin
      WebNavLink("Next",halfunc,"sernr=" & nextval & "&itcode=" & itcode & "&backpage=" & WebGetArg("backpage") & "&confcode=" & confcode,"");
    end else begin
      WebNavLink("","","","");
    end;

    WebEndNavBar;
//  end;
  return;
end;

global
procedure WebFormLine(string label,string fieldname,string type,string fldval,Integer wsize,Integer wlen)
begin
  ToolWebLineStart;
  WebLeadText2(label,"25%");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebEditField(fieldname,type,fldval,"70%",wsize,wlen);
  ToolWebLineEnd;
  return;
end;

global
procedure WebRegAct()
begin
  record ActVc Actr;
  record PRVc PRr;
  record ActTypeVc ATr;
  record INVc INr;
  record CYBlock CYr;
  LongInt todof;
  Boolean foundf;
  
  if (LoggedInTest()) then begin
  todof = WebGetArg("todof");
  Actr.SerNr = WebGetArg("mailnumber");
  if (ReadFirstMain(Actr,1,true)==false) then begin 
    RecordNew(Actr);
  end;
  BlockLoad(CYr);
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("act_text");
  ToolWebStartHeader;
  if (todof>0) then begin
    ToolWebOutHeader("New To Do: " & CYr.CompName);
  end else begin
    ToolWebOutHeader("New Activity: " & CYr.CompName);
  end;
  ToolWebStartHeaderEnd;
  WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
  WebOutLink("WebActStore.hal?sessionid=" & WebGetArg("sessionid") & "&sernr=" & WebGetArg("sernr") & "&mailnumber=" & WebGetArg("mailnumber") & "todof=" & todof);
  WebOutString(""">");
  WebOutNL;
  WebOutString("<table border=0 width=""100%"" cellspacing=0 cellpadding=1>");

  WebFormLine("Text:","act_text","text",Actr.Comment,66,60);

  ToolWebLineStart;
  WebLeadText2("Type:","25%");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebOutString("<td width=200>");
  WebOutString("<select name=""act_type""><option selected></option>");
  foundf = true;
  ATr.Comment = "";
  while(LoopKey("Comment",ATr,1,foundf)) begin
    if (foundf) then begin
      WebOutString("<option value=""" & ATr.Code & """>" & ATr.Comment & "</option>");
    end;
  end;
  WebOutString("</select></td>");
  ToolWebLineEnd;

  ToolWebLineStart;
  WebOutString("<td>");
  ToolWebRadioButtonDiv("Calendar Item","actTodoFlag",0,todof==0);
  ToolWebRadioButtonDiv("To Do","actTodoFlag",1,todof==1);
  ToolWebRadioButtonDiv("Timed To Do","actTodoFlag",2,todof==2);
  WebOutString("</td>");
  ToolWebLineEnd;

  begin
  WebFormLine("Customer:","act_cucode","text",Actr.CUCode,20,10);

  ToolWebLineStart;
  WebLeadText2("Project:","25%");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebOutString("<td width=200>");
  WebOutString("<select name=""act_project""><option selected></option>");
  foundf = true;
  PRr.Name = "";
  while(LoopKey("CustName",PRr,1,foundf)) begin
    if (PRr.Terminated==0) then begin
      WebOutString("<option value=""" & PRr.Code & """>" & PRr.Code & " " & PRr.Name & "</option>");
    end;
  end;
  WebOutString("</select></td>");
  ToolWebLineEnd;

  ToolWebLineStart;
  WebLeadText2("Item:","25%");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebOutString("<td width=200>");
  WebOutString("<select name=""act_item""><option selected value="""">From Activity Type</option>");
  foundf = true;
  INr.ItemType = 3;
  while(LoopKey("ItemType",INr,1,foundf)) begin
    if (INr.Terminated==0) then begin
      WebOutString("<option value=""" & INr.Code & """>" & INr.Name & "</option>");
    end;
  end;
  WebOutString("</select></td>");
  ToolWebLineEnd;
  end;

  WebFormLine("Start Date:","act_startdate","text",Actr.TransDate,10,10);
//  if (todof==0) then 
  begin

  WebFormLine("End Date:","act_enddate","text",Actr.EndDate,10,10);
  WebFormLine("Start Time:","act_starttime","text",Actr.StartTime,10,10);
  WebFormLine("End Time:","act_endtime","text",Actr.EndTime,10,10);
  WebFormLine("Cost Time:","act_costtime","text",Actr.CostTime,10,10);
  
  end;
  ToolWebLineStart;
  WebOutString("<td width=""" & "25%" & """ valign=""top"" align=""left"">");
  WebOutString("<input type=""checkbox"" name=""act_okflag"" value=""1"">");
  WebOutString("<font size=""1"" face=""Verdana, Arial, Helvetica, sans-serif"" color=""#ffffff""><b>" & "Done" & " </font>");
  WebOutString("</td>");
  ToolWebLineEnd;

  ToolWebLineStart;
//  WebOutString("<td width=""10%"" align=""right"" valign=""top""></td>");
  WebOutString("<td width=""90%"" align=""left"" valign=""top""><input type=""submit"" value=""Save"" name=""b1""></td>");
  ToolWebLineEnd;

  WebOutString("</table>");
  WebOutString("</p>");
  WebOutString("</form>");
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure ToolWebItemHeader()
begin
  ToolWebListTable(7,750,"0");
  ToolWebLineStart;
  ToolWebTableHdr("No.","left","100");
  ToolWebTableHdr("Ord.","center","70");
  ToolWebTableHdr("Unit","left","45");
  ToolWebTableHdr("Description","left","360");
  ToolWebTableHdr("Unit Price","right","100");
  ToolWebTableHdr("","center","30");
  ToolWebTableHdr("Reb","center","45");
  ToolWebLineEnd;
  return;
end;

global
procedure WebShopHeader()
begin
  ToolWebListTable(7,750,"0");
  ToolWebLineStart;
  ToolWebTableHdr("No.","left","100");
  ToolWebTableHdr("Ord.","center","70");
  ToolWebTableHdr("Unit","left","40");
  ToolWebTableHdr("Description","left","300");
  ToolWebTableHdr("Unit Price","right","100");
  ToolWebTableHdr("Reb","center","40");
  ToolWebTableHdr("Total","right","100");
  ToolWebLineEnd;
  return;
end;

global
updating procedure WebStoreOrder()
begin
  record WebHTMLVc WHr;
  LongInt orderno;

  if (LoggedInTest()) then begin
    orderno = ToolWebStoreTheOrder(GetWebLanguage);
    ToolWebStartPage;
    ToolWebSetMainTitle;
    ToolWebStartBody("");
    ToolWebStartHeader;
    if (orderno>-1) then begin
      ToolWebOutHeader("Your ordernumber is " & orderno);
    end else begin
      ToolWebOutHeader("The order was not stored");
    end;
    if (ToolWebItemHasPict(WHr,"AFTERORD","MESSAGE")==true) then begin
      WebOutString("<tr><td>");
      ToolWebDisplayHTMLExtra(WHr,"","");
      WebOutString("</td></tr>");
    end else begin
      ToolWebDisplayHTMLExtra(WHr,"","");
    end;
    ToolWebStartHeaderEnd;
    ToolWebEndPage(false);
  end;
  return;
end;

global
procedure WebShopBaskStep2()
begin
  record ORVc ORr;
  record CUVc CUr;
  record DMVc DMr;
  record DelAddrVc DelAddrr;
  string 10 defdelmodcode;
  string 60 defdelmod;
  Boolean foundf,freightf;
  Boolean res,proceedf;
  LongInt rwcnt;

  proceedf = false;
  if (LoggedInTest()) then begin
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    CUr.Name = "";
  end;
  res = BuildWebOrd(CurrentCust,-1,ORr,freightf,GetWebLanguage);
  rwcnt = MatRowCnt(ORr);
  if (rwcnt>0) then begin proceedf = true; end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Shopping Basket");
  ToolWebStartHeaderEnd;
  ToolWebListTable(7,750,"0");
/*
  WebOutString("<tr height=28>");
  ToolWebInfoCell("","50","left");
  ToolWebInfoCell("","70","left");
  ToolWebInfoCell("Default Leverans adress","160","left");
  ToolWebLineEnd;
*/
  WebOutString("<tr height=28>");
  ToolWebInfoCell("","50","left");
  ToolWebInfoCell("","70","left");
//  WebOutString("<td width=70 align=""right"" valign=""top""><input type=""submit"" value=""New"" name=""b1""></td>");
//  ToolWebInfoCell("","70","left");
//  ToolWebInfoCell("Delivery to:","70","left");
  foundf = true;
  DelAddrr.CustCode = CurrentCust;
  DelAddrr.DelCode = "";
  WebOutString("<td width=200>");
  WebOutString("<form name=""AddrForm"" method=""POST"" action=""");
  WebOutLink("WebShopBaskStep2.hal?sessionid=" & WebGetArg("sessionid") & "&itemcode=" & WebGetArg("itemcode"));
  WebOutString(""">");
  WebOutString("<select name=""deladdr""><option value="""" selected>Default address</option>"); //onchange=""post(AddrForm);""
  while(LoopKey("CustCode",DelAddrr,1,foundf)) begin
    if (DelAddrr.CustCode<>CurrentCust) then begin
      foundf = false;
    end;
    if (foundf) then begin
      WebOutString("<option value=""" & DelAddrr.DelCode & """>" & DelAddrr.Comment & "</option>");
    end;
  end;
  WebOutString("</select>");
  WebOutString("</form>");
  WebOutString("</td>");
  ToolWebLineEnd;
  
  ToolWebLineStart;
  ToolWebInfoCell("Customer Code:","50","left");
  ToolWebInfoCell(ORr.CustCode,"70","left");
  ToolWebInfoCell(ORr.Addr0,"160","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Order No:","50","left");
  ToolWebInfoCell(ORr.SerNr,"70","left");
  ToolWebInfoCell(ORr.Addr1,"160","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Order Date:","50","left");
  ToolWebInfoCell(ORr.OrdDate,"70","left");
  ToolWebInfoCell(ORr.Addr2,"160","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Currency:","50","left");
  ToolWebInfoCell(ORr.CurncyCode,"70","left");
  ToolWebInfoCell(ORr.Addr3,"160","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","50","left");
  ToolWebInfoCell("","70","left");
  ToolWebInfoCell(ORr.DelAddr3,"160","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","50","left");
  ToolWebInfoCell("","70","left");
  ToolWebInfoCell(ORr.DelAddr3,"160","left");
  ToolWebLineEnd;
  ToolWebListTableEnd;
  ToolWebListTable(7,750,"0");
  if (proceedf==true) then begin
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutLink("WebStoreOrder.hal?sessionid=" & WebGetArg("sessionid") & "&itemcode=" & WebGetArg("itemcode"));
    WebOutString(""">");
  end;
  WebOutString("<tr height=28>");
  ToolWebInfoCell("Reference:","60","left");
  WebEditField("custref","text","Internet","200",20,60);
  ToolWebLineEnd;
  WebOutString("<tr height=28>");
  ToolWebInfoCell("Delivery Term","60","left");
    defdelmod = "";
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)) then begin
      DMr.Code = CUr.ShipMode;
      if (ReadFirstMain(DMr,1,true)) then begin
        defdelmodcode = DMr.Code;
        defdelmod = DMr.Comment;
      end;
    end;
    WebOutString("<td width=200>");
    WebOutString("<select name=""delmode"">");
    foundf = true;
    DMr.Code = "";
    while(LoopMain(DMr,1,foundf)) begin
      WebOutString("<option");
      if (DMr.Code==defdelmodcode) then begin
        WebOutString(" selected");
      end;
      WebOutString(" value=""" & DMr.Code & """>" & DMr.Comment & "</option>");
    end;
    WebOutString("</select></td>");
  ToolWebLineEnd;
  if (proceedf==true) then begin
//    ToolWebListTable(7,750,"0");
    ToolWebLineStart;
    ToolWebInfoCell("","60","left");
    ToolWebInfoCell("","200","left");
    WebOutString("<td width=100 align=""right"" valign=""top""><input type=""submit"" value=""Confirm"" name=""b1""></td>");
    ToolWebLineEnd;
    WebOutString("</form>");
//    ToolWebListTableEnd;
  end;
  ToolWebListTableEnd;
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure WebShopBask()
begin
  record ORVc ORr;
  record CUVc CUr;
  Boolean res;
  Boolean proceedf,freightf;
  LongInt rwcnt;

  proceedf = false;
  if (LoggedInTest()) then begin
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    CUr.Name = "";
  end;
  res = BuildWebOrd(CurrentCust,-1,ORr,freightf,GetWebLanguage);
  rwcnt = MatRowCnt(ORr);
  if (rwcnt>0) then begin proceedf = true; end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Shopping Basket");
  ToolWebStartHeaderEnd;
  WebShopHeader;
  ToolWebViewShopList(ORr);
  ToolWebListTableEnd;
  ToolWebListTable(7,750,"0");
  ToolWebLineStart;
  ToolWebInfoCell("Sub Total:","75%","right");
  ToolWebInfoCell(ORr.Sum1,"20%","right");
  ToolWebInfoCell(ORr.CurncyCode,"5%","center");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("VAT:","75%","right");
  ToolWebInfoCell(ORr.Sum3,"20%","right");
  ToolWebInfoCell(ORr.CurncyCode,"5%","center");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Total:","75%","right");
  ToolWebInfoCell(ORr.Sum4,"20%","right");
  ToolWebInfoCell(ORr.CurncyCode,"5%","center");
  ToolWebLineEnd;
  ToolWebListTableEnd;
  if (proceedf==true) then begin
    ToolWebListTable(7,750,"0");
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutLink("WebShopBaskStep2.hal?sessionid=" & WebGetArg("sessionid") & "&itemcode=" & WebGetArg("itemcode"));
    WebOutString(""">");
    ToolWebLineStart;
    WebOutString("<td align=""right"" valign=""top""><input type=""submit"" value=""Proceed"" name=""b1""></td>");
    ToolWebLineEnd;
    WebOutString("</form>");
    ToolWebListTableEnd;
  end;
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure WebItemView()
begin
  record INVc INr;
  record CUVc CUr;
  record CCatVc CCr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,qtystr,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,ordqty,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Time blankt;
  
  showstocklevel = false;
  showprices = true;
  curitemno = WebGetArg("itemcode");
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  CCr.Code = CUr.CustCat;
  if (ReadFirstMain(CCr,1,true)) then begin
    if (blank(CUr.PLCode)) then begin
      CUr.PLCode = CCr.PLCode;
      CUr.RebCode = CCr.RebCode;
    end;
  end;
  qty = 1;
  if (GetItemPriceDiscount3(curitemno,qty,INr,CUr.CurncyCode,0,0,0,0,0,
                  CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                  price,curitemname,reb,vatcode,cost,salesacc,
                  CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
      INr.Name = "";
  end;
  if (showprices==false) then begin
    price = BlankVal;
  end;
  instock = GetStockQty(INr.Code,"",CurrentDate,false);
  qty = QtyInBasket(curitemno,0);
  qtystr = ValToString(qty,M4UVal," ",".",0);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  if (WebLoginStatus==3) then begin
    ToolWebStartBody("ord_qty");
  end else begin
    ToolWebStartBody("");
  end;
  ToolWebStartHeader;
  if (WebLoginStatus==3) then begin
    ToolWebOutHeader(CUr.Name);
  end else begin
    ToolWebOutHeader("You are not logged in");
  end;
  ToolWebStartHeaderEnd;
  if (ToolWebItemHasPict(WHr,curitemno,"BP")==true) then begin
    WebOutString("<tr><td>");
    ToolWebDisplayHTMLExtra(WHr,"","");
    WebOutString("</td></tr>");
  end else begin
    WebOutString("<p>");
    ToolWebDisplayHTMLExtra(WHr,"","");
    WebOutString("</p>");
  end;
  if (showstocklevel) then begin
    ToolWebListTable(6,750,"0");
    ToolWebLineStart;
    ToolWebTableHdr("Item No.","left","12%");
    ToolWebTableHdr("In Stock","center","10%");
    ToolWebTableHdr("Description","left","28%");
  end else begin
    ToolWebListTable(5,750,"0");
    ToolWebLineStart;
    ToolWebTableHdr("Item No.","left","15%");
    ToolWebTableHdr("Description","left","35%");
  end;
  ToolWebTableHdr("Unit Price","right","13%");
  ToolWebTableHdr("","right","2%");
  ToolWebTableHdr("Qty","left","30%");
  ToolWebLineEnd;
  ToolWebListTableEnd;
  if (showstocklevel) then begin
    ToolWebListTable(6,750,"0");
  end else begin
    ToolWebListTable(5,750,"0");
  end;
  WebOutString("<tr height=32>");
  if (WebLoginStatus==3) then begin
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutLink("WebStoreItem.hal?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
    WebOutString(""">");
  end;
  ToolWebHiddenField("backpage",WebGetArg("backpage"));
  if (showstocklevel) then begin
    ToolWebTableData(curitemno,"","","left","12%","",0);
    ToolWebTableData(instock,"","","center","10%","",0);
    ToolWebTableData(curitemname,"","","left","28%","",0);
  end else begin
    ToolWebTableData(curitemno,"","","left","15%","",0);
    ToolWebTableData(curitemname,"","","left","35%","",0);
  end;
  ToolWebTableData(price,"","","right","13%","",0);
  ToolWebTableData("","","","right","2%","",0);
  WebEditFieldBrowse("ord_qty","text",qtystr,"7%",5,7,0);
  ToolWebTableData(INr.Unittext,"","","left","8%","",0);
  qtystr = ValToString(qty,M4UVal,"","",0);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  WebOutString("<td bordercolor=white width=""15%"" align=""left"" bgcolor=""white"">");
  if (WebLoginStatus==3) then begin
    if (nonblank(CurrentCust)) then begin
      ToolWebPushButton("Order","submit","b1");
    end else begin
      WebLink("Select a Customer","WebMainUser.hal","","");
    end;
  end else begin
    WebLink("Sorry, not logged in",WebGetArg("backpage"),"","");
  end;
  WebOutString("</td>");
  ToolWebLineEnd;
  if (WebLoginStatus==3) then begin
    WebOutString("</form>");
  end;
  WebOutString("</table>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebSearchView()
begin
  record INVc INr;
  record CUVc CUr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode;
  val price,reb,cost,qty,instock,ordqty;
  Boolean calcprice;
  string 255 tstr;
  
  if (LoggedInTest()) then begin
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("search_field");
  ToolWebStartHeader;
  ToolWebGetTheText(20147,tstr); //"Item Search"
  ToolWebOutHeader(tstr);
  ToolWebStartHeaderEnd;

  WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
  WebOutLink("WebSearchResult.hal?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
  WebOutString(""">");
  WebOutString("<table border=""0"" cellpadding=0 width=""300"">");
  ToolWebLineStart;
  ToolWebGetTheText(20146,tstr); //"Search for:"
  ToolWebInfoCell(tstr,"30%","left");
  WebEditField("search_field","text",WebGetArg("searchstr"),"70%",20,50);
  ToolWebLineEnd;
/*
  ToolWebLineStart;
  ToolWebInfoCell("Search In:","30%","left");
  WebEditField("dispgroup","text","","70%",10,50);
  ToolWebLineEnd;
*/
  ToolWebLineStart;
  ToolWebGetTheText(20145,tstr); //"Max Hits"
  ToolWebInfoCell(tstr,"30%","left");
  WebEditField("maxhits","text","99","70%",5,50);
  ToolWebLineEnd;

  WebOutString("<tr><td colspan=2 align=right>");
  ToolWebGetTheText(20143,tstr); //"Search"
  ToolWebPushButton(tstr,"submit","b1");
  WebOutString("</td></tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure WebSearchResult()
begin
  string 200 searchstr;
  string 20 maxres;
  
  searchstr = WebGetArg("search_field");
  maxres = WebGetArg("maxhits");
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Search results on: " & searchstr);
  ToolWebStartHeaderEnd;
  ToolWebItemHeader;
  DisplaySearchResult(searchstr,2,WebGetArg("itemcode"),WebGetArg("itcode"),"",maxres);
  ToolWebListTableEnd;
  ToolWebEndPage(true);
  return;
end;

global
procedure WebCustView()
begin
  record CUVc CUr;
  string 20 curcustno;
  string 20 itcode;

  if (LoggedInTest()) then begin
  curcustno = WebGetArg("custcode");
  ToolWebGetDispGroup(curcustno,itcode);
  CUr.Code = curcustno;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    CUr.Name = "";
  end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Select Customer");
  ToolWebStartHeaderEnd;
  WebOutString("<form method=""POST"" action=""selcust?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&custcode=" & curcustno & "&itcode=" & itcode & """>");
  ToolWebHiddenField("backpage","WebMainCust.hal");
  ToolWebListTable(5,750,"0");
  ToolWebLineStart;
  ToolWebTableHdr("Code","left","100");
  ToolWebTableHdr("Name.","left","290");
  ToolWebTableHdr("Phone","left","120");
  ToolWebTableHdr("Fax","left","120");
  ToolWebTableHdr("Email","left","120");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell(curcustno,"100","left");
  ToolWebInfoCell(CUr.Name,"290","left");
  ToolWebInfoCell(CUr.Phone,"120","left");
  ToolWebInfoCell(CUr.Fax,"120","left");
  ToolWebInfoCell(CUr.eMail,"120","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","100","left");
  ToolWebInfoCell(CUr.Person,"290","left");
  ToolWebLineEnd;
  WebOutString("<tr><td height=20>");
  WebOutString("</td></tr>");
  ToolWebListTableEnd;
  
  ToolWebListTable(4,750,"0");
  ToolWebLineStart;
  ToolWebTableHdr("","left","30");
  ToolWebTableHdr("Invoice Address","left","350");
  ToolWebTableHdr("","left","30");
  ToolWebTableHdr("Delivery Address","left","350");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.InvAddr0,"350","left");
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.DelAddr0,"350","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.InvAddr1,"350","left");
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.DelAddr1,"350","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.InvAddr2,"350","left");
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.DelAddr2,"350","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.InvAddr3,"350","left");
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.DelAddr3,"350","left");
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.InvAddr4,"350","left");
  ToolWebInfoCell("","30","left");
  ToolWebInfoCell(CUr.DelAddr4,"350","left");
  ToolWebLineEnd;
  ToolWebLineEnd;
  WebOutString("<tr><td height=20>");
  WebOutString("</td></tr>");
  ToolWebListTableEnd;
  ToolWebListTable(1,750,"0");
  WebOutString("<tr><td align=center>");
  ToolWebPushButton("Select Customer for Web Shop","submit","b1");
  WebOutString("</td></tr>");
  WebOutString("</form>");
  ToolWebListTableEnd;
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure WebCustList(LongInt sernr,Integer maxlines)
begin
  record CUVc CUr;
  string 60 ckey;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt;
  string 255 linkargs;
  
  loopcnt = 1;
  rwt = 0;
  ckey = "Code:" & CurrentUser;
  looppos = sernr;
  SetLoopPosition(CUr,looppos);
  found = true;
  while (LoopKey(ckey,CUr,1,found)) begin
    if (found) then begin
      linkargs = "backpage=WebCustBrowse.hal&backnr=" & sernr & "&custcode=" & CUr.Code;
      ToolWebLineStart;
      ToolWebTableData(CUr.Code,"WebCustView.hal",linkargs,"left","","",rwt)
      ToolWebTableData(CUr.Name,"","","left","","",rwt);
      ToolWebTableData(CUr.Phone,"","","left","","",rwt);
      ToolWebTableData(CUr.Fax,"","","left","","",rwt);
      ToolWebTableData(CUr.eMail,"","","left","","",rwt);
      ToolWebLineEnd;
      rwt = rwt + 1;
      if (rwt>1) then begin rwt = 0; end;
      loopcnt = loopcnt + 1;
      if (loopcnt>maxlines) then begin
        found = false;
      end;
    end;
  end;
  return;
end;

global
procedure WebCustBrowse()
begin
  LongInt msernr;
  Integer showmax;
  record WebControlBlock WCr;
  string 60 ckey;
  LongInt prevval,nextval;
  LongInt maxval,pages;
  Boolean prevf,nextf;

  if (LoggedInTest()) then begin
  BlockLoad(WCr);
  msernr = WebGetArg("sernr");
  if (msernr==-1) then begin msernr = 0; end;
  showmax = 10;
  if (WCr.MatLines>0) then begin
    showmax = WCr.MatLines;
  end;
  ckey = "Code:" & CurrentUser;
  
  prevf = true;
  nextf = true;
  prevval = msernr-showmax;
  if (prevval<0) then begin 
    prevval = 0;
    prevf = false;
  end;
  nextval = msernr+showmax;
  maxval = RecordsInIndex("CUVc",ckey);
  if (nextval>maxval) then begin
    nextval = msernr;
    nextf = false;
  end;
  pages=maxval/showmax;
  if ((pages*showmax)!=maxval) then begin
    pages=pages+1;
  end; 
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Select Customer");
  ToolWebStartHeaderEnd;
//  WebNavBar("WebCustBrowse.hal",prevf,nextf,nextval,prevval,"","");  
  WebNavBar2("WebCustBrowse.hal",prevf,nextf,nextval,prevval,msernr,"","",pages,showmax);
  ToolWebListTable(5,750,"0");
  ToolWebLineStart;
  ToolWebTableHdr("Code","left","100");
  ToolWebTableHdr("Name.","left","290");
  ToolWebTableHdr("Phone","left","120");
  ToolWebTableHdr("Fax","left","120");
  ToolWebTableHdr("Email","left","120");
  ToolWebLineEnd;
  WebCustList(msernr,showmax);
  ToolWebListTableEnd;
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure WebCustStatus()
begin
  string 50 sesidstr;
  LongInt msernr;
  Integer showmax;
  val totsum;

  if (LoggedInTest()) then begin
  showmax = 1000;
  msernr = WebGetArg("sernr");
  if (msernr==-1) then begin msernr = 0; end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Customer Status");
  ToolWebOutHeaderEnd;
  ToolWebStartHeaderEnd;
  
  ToolWebListTable(6,750,"0");
  ToolWebLineStart;
  ToolWebTableHdr("Date","left","80");
  ToolWebTableHdr("No.","left","90");
  ToolWebTableHdr("Regarding","left","90");
  ToolWebTableHdr("Debit","right","90");
  ToolWebTableHdr("Credit","right","90");
  ToolWebTableHdr("Balance","right","90");
  ToolWebLineEnd;
  ToolWebListAR(CurrentCust,msernr,showmax,totsum,false);
  ToolWebListTableEnd;
  ToolWebEndPage(false);
  end;
  return;
end;
  
global
procedure WebReport()
begin
  record CYBlock CYr;

  if (LoggedInTest()) then begin
  BlockLoad(CYr);
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  
  ToolWebStartHeader;
  ToolWebOutHeaderBegin(CYr.CompName);
  ToolWebOutHeaderEnd;
  ToolWebStartHeaderEnd;
  DoHttpReport;
  ToolWebEndPage(true);
  end;
  return;
end;

global
procedure WebDownload()
begin
  if (LoggedInTest()) then begin
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Download Files");
  ToolWebStartHeaderEnd;
  ToolWebStartTable;
  WebMenuItemNoSess("Windows Client","Webcust.zip","");
  WebMenuItemNoSess("Mac Client","WebShopDemo.zip","");
  
//  WebMenuItemNoSess("Windows Client","hansawin.exe","");
//  WebMenuItemNoSess("Mac Client","ftp://192.168.0.87/hansamac.exe","");
  ToolWebEndTable;
  ToolWebEndPage(true);
  end;
  return;  
end;

global
procedure WebRepMenu()
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  record CYBlock CYr;
  Integer i,m;
  string 60 repname;
  string 60 modcode;
  string 255 linkarg;
  Integer rwt;

  if (LoggedInTest()) then begin
    modcode = WebGetArg("module");
    m = GetNumOfReports(modcode);
    BlockLoad(CYr);
  FindUserMailboxName(CurrentUser,mailboxcode,mailboxname);
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Reports for " & CYr.CompName);
  ToolWebStartHeaderEnd;
  WebOutstring("Reports removed for now, this seems to cause problems with multilanguage servers");
/*
  ToolWebStartTable;
  rwt = 0;
  for (i=1;i<=m;i=i+1) begin
    repname = GetReportDesc(modcode,i);
    linkarg = "report="&GetReportCode(modcode,i)&"&rcw="&GetReportWindow(modcode,i);
    ToolWebMenuItem(repname,"WebRepsel.hal",linkarg,"",rwt);
//    ToolWebMenuItem(repname,"Repsel.htm",linkarg,"",rwt);
  end;
  ToolWebEndTable;
*/  
  ToolWebEndPage(true);
  end;
  return;  
end;

global
procedure WebModRep()
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  record CYBlock CYr;
  Integer i,m;
  string 60 modname;
  Integer rwt;

  if (LoggedInTest()) then begin
  m = GetNumOfModules;
  BlockLoad(CYr);
  FindUserMailboxName(CurrentUser,mailboxcode,mailboxname);
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Modules in " & CYr.CompName);
  ToolWebStartHeaderEnd;
  
  ToolWebStartTable;
  rwt = 0;
  for (i=1;i<=m;i=i+1) begin
    modname = GetModuleDesc(i);
    ToolWebMenuItem(modname,"WebRepMenu.hal","module="&GetModuleCode(i),"",rwt);
  end;
  ToolWebEndTable;
  
  ToolWebEndPage(true);
  end;
  return;  
end;

procedure ShowHTMLExtra(string whichone)
begin
  record WebHTMLVc WHr;

  WHr.Code = CurrentUser;
  WHr.SubCode = whichone;
  if (ReadFirstMain(WHr,2,true)) then begin
    if (ToolWebItemHasPict(WHr,WHr.Code,WHr.SubCode)==true) then begin
      WebOutString("<tr><td>");
      ToolWebDisplayHTMLExtra(WHr,"","");
      WebOutString("</td></tr>");
    end else begin
      ToolWebDisplayHTMLExtra(WHr,"","");
    end;
  end else begin
    WHr.Code = "";
    WHr.SubCode = whichone;
    if (ReadFirstMain(WHr,2,true)) then begin
      if (blank(WHr.PicName)) then begin
        ToolWebOutWebHTMLText(WHr,0,"");
      end;
    end;
  end;
  return;
end;

global
procedure WebMainUser()
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  string 20 itcode;
  string 60 bgcolr;
  Integer rwt;

  if (LoggedInTest()) then begin
  FindUserMailboxName(CurrentUser,mailboxcode,mailboxname);
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Intranet Main Menu");
  ToolWebStartHeaderEnd;
  
  rwt = 0;
  WebOutString("<table width=""100%""><tr><td width=180 valign=top>");
  ToolWebStartTable;

  if (nonblank(CurrentCust)) then begin
    ToolWebMenuItem("Shopping Basket","WebShopBask.hal","","",rwt);
    ToolWebMenuItem("Customer Status","WebCustStatus.hal","","",rwt);
  end;

//  ToolWebMenuItem("Mailbox","WebMailBrowse.hal","backpage=WebMainUser.hal","",rwt);
  ToolWebMenuItem("Conferences","WebConfBrowse.hal","backpage=WebMainUser.hal","",rwt);
//  ToolWebMenuItem("Calendar","WebReport.hal","report=ActCalendarRn&rcw=ActTodoRClass","",rwt);
  ToolWebMenuItem("Calendar","WebCalendar.hal","","",rwt);
//  ToolWebMenuItem("Task Manager","WebReport.hal","report=ActTodo2Rn&rcw=ActTodo2RClass","",rwt);
  ToolWebMenuItem("New Activity","WebRegAct.hal","mailnumber=-1&todof=0","",rwt);
  ToolWebMenuItem("New To Do","WebRegAct.hal","mailnumber=-1&todof=1","",rwt);
  ToolWebMenuItem("Select Customer","WebCustBrowse.hal","","",rwt);
//  ToolWebMenuItem("Reports","WebModRep.hal","","",rwt);
//  ToolWebMenuItem("Who's Online","WebReport.hal","report=WhosOn3Rn","",rwt); // WhosOnRn (normal), WhosOn2Rn (detailed) WhosOn3Rn (per company)
  ToolWebMenuItem("Search","WebSearchView.hal","","",rwt);
//  ToolWebMenuItem("Download Clients","WebDownload.hal","","",rwt);
  ToolWebMenuItem("Download Clients","WebMainUser.hal","showfiles=yes","",rwt);
  ToolWebMenuItem("Video Presentations","WebMainUser.hal","showpresent=yes","",rwt);
  ToolWebMenuItem("University Tests","WebHWUUnivTests.hal","","",rwt);
  if (rwt!=0) then begin
    bgcolr = "#CCCCFF";
    rwt = 0;
  end else begin
    bgcolr = "#FFFFFF";
    rwt = 1;
  end;

  WebOutString("<TR><TD VALIGN=top width=""100%"" align=""left"" bgcolor=" & bgcolr & ">");
  WebOutString("<font size=2 color=""#000099"" face=""Verdana, Arial, Helvetica, sans-serif""><strong><small><small>");
  WebOutString("<A href=""http://bi.hansaworld.net/Qlikview"">");  
  WebOutString("Business Intelligence");
  WebOutString("</A>");  
  WebOutString("</font");
  WebOutString("</TD></TR>");  
  WebOutNL;
  ToolWebMenuItem("Logout","WebDoLogout.hal","","",rwt);
  ToolWebEndTable;
  WebOutString("</td>");
  WebOutString("<td valign=top>");
  if (nonblank(WebGetArg("showfiles"))) then begin
    ShowHTMLExtra("USERHOME");
  end;
  if (nonblank(WebGetArg("showpresent"))) then begin
    ShowHTMLExtra("PRESENT");
  end;
  WebOutString("</td></tr></table>");
  ToolWebEndPage(true);
  end;
  return;  
end;

global
procedure WebMainMenu()
begin
  WebMainUser;
  return;
end;

global
procedure WebMainCustResources()
begin
  Integer rwt;

  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Resources");
  ToolWebStartHeaderEnd;
  rwt = 0;
  WebOutString("<table width=""100%""> <tr> <td width=180 valign=top>");
  ToolWebStartTable;
  ToolWebMenuItem("Main Menu","WebMainCust.hal","","",rwt);
  ToolWebMenuItem("Book Resource","WebBookResource.hal","","",rwt);
  ToolWebMenuItem("Enable Resource","WebEnableResource.hal","","",rwt);
  ToolWebMenuItem("Shopping Basket","WebShopBask.hal","","",rwt);
  ToolWebMenuItem("Logout","WebDoLogout.hal","","",rwt);
  ToolWebEndTable;
  WebOutString("</td><td valign=top>");
//  WebPublicConf(confname,maxmail,false);
  WebOutString("</td></tr></table>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebMainCust()
begin
  record WebControlBlock WCr;
  string 60 confname;
  LongInt maxmail;
  string 60 itcode;
  Integer rwt;

  BlockLoad(WCr);
  confname = WebGetArg("confname");
  maxmail = WebGetArg("maxmail");
  if (maxmail==-1) then begin
    maxmail = "10";
  end;
  if (blank(confname)) then begin
    confname = WCr.WebStartConf;
    maxmail = WCr.WebStartConfNr;
  end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Customer Main Menu");
  ToolWebStartHeaderEnd;
  rwt = 0;
  WebOutString("<table width=""100%""> <tr> <td width=180 valign=top>");
  ToolWebStartTable;

  ToolWebGetDispGroup(CurrentCust,itcode);
  ToolWebMenuItem("Products","WebMainCust2.hal","itcode=" & itcode,"",rwt);

  ToolWebMenuItem("Shopping Basket","WebShopBask.hal","","",rwt);
  ToolWebMenuItem("Search","WebSearchView.hal","","",rwt);
  ToolWebMenuItem("Customer Status","WebCustStatus.hal","","",rwt);
  ToolWebMenuItem("Resources","WebMainCustResources.hal","","",rwt);
// kyts  ToolWebMenuItem("Customer Status","WebCustStatusReport.hal","","",rwt);
  ToolWebMenuItem("Download Files","WebDownload.hal","","",rwt);
  ToolWebMenuItem("Logout","WebDoLogout.hal","","",rwt);

  ToolWebMenuItem("News","WebMainCust.hal","confname=" & WCr.NewsConf & "&maxmail=" & WCr.NewsConfNr,"",rwt);
  ToolWebMenuItem("Terms & Conditions","WebMainCust.hal","confname=" & WCr.TermsConf & "&maxmail=" & WCr.TermsConfNr,"",rwt);
  ToolWebMenuItem("Company Info","WebMainCust.hal","confname=" & WCr.CompInfoConf & "&maxmail=" & WCr.CompInfoConfNr,"",rwt);
  ToolWebMenuItem("Partners & Investors","WebMainCust.hal","confname=" & WCr.PartnersConf & "&maxmail=" & WCr.PartnersConfNr,"",rwt);
  ToolWebMenuItem("Contact Us","WebMainCust.hal","confname=" & WCr.ContactUsConf & "&maxmail=" & WCr.ContactUsConfNr,"",rwt);
  ToolWebMenuItem("FAQ","WebMainCust.hal","confname=" & WCr.FAQConf & "&maxmail=" & WCr.FAQConfNr,"",rwt);
  ToolWebMenuItem("Help","WebMainCust.hal","confname=" & WCr.HelpConf & "&maxmail=" & WCr.HelpConfNr,"",rwt);
  ToolWebEndTable;
  WebOutString("</td><td valign=top>");
  WebPublicConf(confname,maxmail,false);
  WebOutString("</td></tr></table>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebMainCust2()
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  record CYBlock CYr;
  record WebHTMLVc WHr;
  record WebControlBlock WCr;
  record DIVc DIr;
  string 20 itcode;
  string 60 ckey;
  LongInt prevval,nextval,maxval;
  Boolean prevf,nextf,mainf;
  LongInt msernr,pages;
  Integer showmax;

  BlockLoad(CYr);
  BlockLoad(WCr);
  msernr = WebGetArg("sernr");
  if (msernr==-1) then begin msernr = 0; end;
  itcode = WebGetArg("itcode");
  if (blank(itcode)) then begin
    mainf = true;
    ToolWebGetDispGroup(CurrentCust,itcode);
  end;
  showmax = 10;
  if (WCr.MatLines>0) then begin
    showmax = WCr.MatLines;
  end;
  ckey = "DICode:" & itcode;
  maxval = RecordsInIndex("DIVc",ckey);
  maxval = maxval + RecordsInIndex("INVc",ckey);
  
  prevf = true;
  nextf = true;
  prevval = msernr-showmax;
  if (prevval<0) then begin 
    prevval = 0;
    prevf = false;
  end;
  nextval = msernr+showmax;
  if (nextval>maxval) then begin
    nextval = msernr;
    nextf = false;
  end;
  pages=maxval/showmax;
  if ((pages*showmax)!=maxval) then begin
    pages=pages+1;
  end; 
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Browse Products " & CYr.CompName);
  ToolWebStartHeaderEnd;
  WebNavBar("WebMainCust2.hal",prevf,nextf,nextval,prevval,itcode,"");
//  WebNavBar2("WebMainCust.hal",prevf,nextf,nextval,prevval,itcode,msernr,"",pages,showmax);
  WebOutString("<table width=""100%""><tr><td width=180 valign=top>");
  ToolWebStartTable;

  ToolWebDispGroups(itcode,msernr,showmax);
  ToolWebEndTable;
  WebOutString("</td>");
  WebOutString("<td valign=top>");
  if (ToolWebItemHasPict(WHr,itcode,"BDG")==true) then begin
    WebOutString("<tr><td>");
    ToolWebDisplayHTMLExtra(WHr,"","");
    WebOutString("</td></tr>");
  end else begin
    ToolWebDisplayHTMLExtra(WHr,"","");
  end;
  WebOutString("</td></tr></table>");
  ToolWebEndPage(true);
  return;  
end;

global
procedure WebIntrLogin()
begin
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("login");
  ToolWebStartHeader;
  ToolWebOutHeader("Login");
  ToolWebStartHeaderEnd;
  WebOutString("<form name=""HansaForm"" action=""dologin"" METHOD=""POST"">");
  WebOutNL;
  WebOutString("<table cellspacing=""0"" cellpadding=""0"" border=""0"" width=""200"">");
  ToolWebLineStart;
  ToolWebInfoCell("User ID","100","left");
  WebOutNL;
  WebEditField("login","text","","90",15,20);
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Password","100","left");
  WebOutNL;
  WebEditField("passwd","password","","90",15,32);
  WebOutNL;
  ToolWebHiddenField("userpage","WebMainUser.hal");
  WebOutNL;
  ToolWebHiddenField("custpage","WebMainCust.hal");
  WebOutNL;
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebPushButton("Log In","submit","name");
  WebOutString("</form>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebB2BLogin()
begin
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("login");
  ToolWebStartHeader;
  ToolWebOutHeader("Companies Login");
  ToolWebStartHeaderEnd;
  WebOutString("<form name=""HansaForm"" action=""dologin"" METHOD=""POST"">");
  WebOutString("<table cellspacing=""0"" border=""0"" width=""300"">");
  ToolWebLineStart;
  ToolWebInfoCell("User ID","150","left");
  WebEditField("login","text","","120",15,20);
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Password","150","left");
  WebEditField("passwd","password","","120",15,32);
  ToolWebHiddenField("userpage","WebMainUser.hal");
  ToolWebHiddenField("custpage","WebMainCust.hal");
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebPushButton("Log In","submit","name");
  WebOutString("</form>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebB2CLogin()
begin
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("login");
  ToolWebStartHeader;
  ToolWebOutHeader("Private Persons Login");
  ToolWebStartHeaderEnd;
  WebOutString("<form name=""HansaForm"" action=""dologin"" METHOD=""POST"">");
  WebOutString("<table cellspacing=""0"" border=""0"" width=""300"">");
  ToolWebLineStart;
  ToolWebInfoCell("User ID","150","left");
  WebEditField("login","text","","120",20,20);
  ToolWebLineEnd;
  ToolWebLineStart;
  ToolWebInfoCell("Password","150","left");
  WebEditField("passwd","password","","120",20,32);
  ToolWebHiddenField("userpage","WebMainUser.hal");
  ToolWebHiddenField("custpage","WebMainCust.hal");
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebPushButton("Log In","submit","name");
  WebOutString("</form>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebMain()
begin
  record CYBlock CYr;
  record WebControlBlock WCr;
  string 60 confname;
  LongInt maxmail;
  string 60 itcode;
  Integer rwt;

  BlockLoad(CYr);
  BlockLoad(WCr);
  confname = WebGetArg("confname");
  maxmail = WebGetArg("maxmail");
  if (maxmail==-1) then begin
    maxmail = "10";
  end;
  if (blank(confname)) then begin
    confname = WCr.WebStartConf;
    maxmail = WCr.WebStartConfNr;
  end;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Welcome to " & CYr.CompName);
  ToolWebStartHeaderEnd;
  
  rwt = 0;
  WebOutString("<table width=""100%""> <tr> <td width=180 valign=top>");
  ToolWebStartTable;

  ToolWebGetDispGroup("",itcode);
//  ToolWebMenuItem("Main Menu","WebMain.hal","","",rwt);
  ToolWebMenuItem("Login","WebIntrLogin.hal","","",rwt);
  ToolWebMenuItem("Products","WebMainCust2.hal","itcode=" & itcode,"",rwt);
//  ToolWebMenuItem("B2B Login","WebB2BLogin.hal","","");
//  ToolWebMenuItem("B2C Login","WebB2CLogin.hal","","");

  ToolWebMenuItem("News","WebMain.hal","confname=" & WCr.NewsConf & "&maxmail=" & WCr.NewsConfNr,"",rwt);
  ToolWebMenuItem("Terms & Conditions","WebMain.hal","confname=" & WCr.TermsConf & "&maxmail=" & WCr.TermsConfNr,"",rwt);
  ToolWebMenuItem("Company Info","WebMain.hal","confname=" & WCr.CompInfoConf & "&maxmail=" & WCr.CompInfoConfNr,"",rwt);
  ToolWebMenuItem("Partners & Investors","WebMain.hal","confname=" & WCr.PartnersConf & "&maxmail=" & WCr.PartnersConfNr,"",rwt);
  ToolWebMenuItem("Contact Us","WebMain.hal","confname=" & WCr.ContactUsConf & "&maxmail=" & WCr.ContactUsConfNr,"",rwt);
  ToolWebMenuItem("FAQ","WebMain.hal","confname=" & WCr.FAQConf & "&maxmail=" & WCr.FAQConfNr,"",rwt);
  ToolWebMenuItem("Help","WebMain.hal","confname=" & WCr.HelpConf & "&maxmail=" & WCr.HelpConfNr,"",rwt);
  ToolWebEndTable;
  WebOutString("</td><td valign=top>");
  WebPublicConf(confname,maxmail,false);
  WebOutString("</td></tr></table>");
  ToolWebEndPage(true);
  return;
end;

global
procedure WebMainForAll()
begin
  if (WebLoginStatus==3) then begin
  if (blank(CurrentUser)) then begin
    if (blank(CurrentCust)) then begin
      WebMain;
    end else begin
      WebMainCust;
    end;
  end else begin
    WebMainUser;
  end;
  end else begin
    WebMain;
  end;
  return;
end;

global
updating procedure WebDoLogout()
begin
  WebLogout;
  WebMain;
  return;
end;

global
procedure WebUnknownLogin()
begin
  string 255 tstr;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebGetTheText(20012,tstr); //"Unknown Login"
  ToolWebOutHeader(tstr);
  ToolWebStartHeaderEnd;
  WebStartNavBar;
  ToolWebGetTheText(20025,tstr); //"Return to Login"
  WebNavLink(tstr,WebGetArg("mainwinpath"),"","");
  WebEndNavBar;
  ToolWebEndPage(true);
  return;
end;

global
procedure ToolWebNotLoggedinMess()
begin
  string 255 tstr;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebGetTheText(20144,tstr); //"Not logged in"
  ToolWebOutHeader(tstr);
  ToolWebStartHeaderEnd;
  WebStartNavBar;
  ToolWebGetTheText(20025,tstr); //"Return to Login"
  WebNavLink(tstr,"WebMain.hal","","");
  WebEndNavBar;
  ToolWebEndPage(true);
  return;
end;

global
updating procedure WebActStore()
begin
  record ActVc Actr;
  record PRVc PRr;
  record CUVc CUr;
  record ActTypeVc ATr;
  record ActTypeGrVc ATGRr;
  LongInt todof;
  LongInt okfl;
  string 60 tstr,compcode;
  Integer oldcomp;

  if (LoggedInTest()) then begin

    oldcomp = CurrentCompany;
    if (GetGlobalUserMainCompany(CurrentUser,compcode)) then begin
      if (nonblank(compcode)) then begin
        if (SetCompanyCode(compcode,false)) then begin
        end;
      end;
    end;

    todof = WebGetArg("todof");
    okfl = WebGetArg("act_okflag");
    if (okfl==-1) then begin okfl = 0; end;
    RecordNew(Actr);
    Actr.SerNr = WebGetArg("mailnumber");
    if (Actr.SerNr==-1) then begin
      Actr.SerNr = NextSerNr("ActVc",Actr.TransDate,-1,false,"");  
    end;
    tstr = WebGetArg("actTodoFlag");
    todof = tstr;
    Actr.OKFlag = okfl;
    Actr.PrivateFlag = 0;
    Actr.TodoFlag = todof;
    Actr.CalTimeFlag = 1;
    Actr.EndDate = CurrentDate;
    Actr.Comment = WebGetArg("act_text");
    Actr.ActType = WebGetArg("act_type");
    Actr.CUCode = WebGetArg("act_cucode");
    Actr.PRCode = WebGetArg("act_project");
    Actr.ItemCode = WebGetArg("act_item");
    Actr.TransDate = WebGetArg("act_startdate");
    Actr.EndDate = WebGetArg("act_enddate");
    Actr.StartTime = WebGetArg("act_starttime");
    Actr.EndTime = WebGetArg("act_endtime");
    Actr.CostTime = WebGetArg("act_costtime");
    if (nonblank(Actr.ActType)) then begin
      ATr.Code = Actr.ActType;
      if (ReadFirstMain(ATr,1,true)) then begin
        if (blank(Actr.ItemCode)) then begin
          Actr.ItemCode = ATr.ItemCode;
        end;
        ATGRr.Code = ATr.ActTypeGr;
        if (ReadFirstMain(ATGRr,1,true)) then begin
          Actr.CalTimeFlag = ATGRr.DefTimeFlag;
        end;
      end;
    end;
    if (blankdate(Actr.EndDate)) then begin
      Actr.EndDate = Actr.TransDate;
    end;
    if (blanktime(Actr.CostTime)) then begin
      Actr.CostTime = TimeDiff(Actr.StartTime,Actr.EndTime);              
    end;
    if (nonblank(Actr.PRCode)) then begin
      PRr.Code = Actr.PRCode;
      if (ReadFirstMain(PRr,1,true)) then begin
        Actr.CUCode = PRr.CustCode;
        CUr.Code = Actr.CUCode;
        if (ReadFirstMain(CUr,1,true)) then begin
          Actr.CUName = CUr.Name;
          Actr.Contact = CUr.Person;
          Actr.Phone = CUr.Phone;
        end;
      end;
    end;
    if (RecordInsert(Actr,true)) then begin end;
    ResetCompany(oldcomp);
    WebMainForAll;
  end;
  return;
end;

