external function Integer CheckCreditCardData(LongInt,string,string,string,string,string, string,val,var string,string,string,var string,Integer);
external function Boolean LoggedInHWTest();
external updating function Integer CreditCardPurchaseAsync(string,string,string,val,string,string,string,string,string,string,string,string,
                                                          string,string,Integer,Integer,string,
                                                          string,string,string,string,string,string,string,string,
                                                          string,string,string,string,string,string,string,string,
                                                          longint,string,val,val,string,
                                                          string,string,string,var string,var string,var string,
                                                          string,string,Integer);
external updating function Integer CreditCardPurchasePaySvr(string,string,string,val,string,string,string,string,
                                             string,string,string,string,
                                             string,string,Integer,Integer,string,
                                             string,string,string,string,string,string,string,string,string,
                                             var string,var string,var string,string,var string,var string);
external updating procedure WebHBSDivShopBasketStep2();
external updating procedure WebHBSDivShopBasketStepPAY(Integer,string,string,string);
external updating procedure ToolWebHBSDivPAYWithPayServer2(Integer,string,string,string,string,string);
external function Integer InString2(string,string);
external function integer CardTransactionStatus(string,var string,string,var integer);
external Function Boolean WebHBSDivPublicMain(string,string,LongInt,LongInt,Boolean,Boolean);
external procedure ToolWebHWRedirectTo(string,string,integer);
external updating procedure ToolWebHBSDivShopBasketStep2Complete(longint);
external function string 200 ToolWebReturnTheText(Integer);

function Boolean OrderAlreadyDone(LongInt ordernr)
begin
  record ORVc ORr;
  Boolean res;
  
  ORr.CustOrdNr = ordernr;
  if (ReadFirstKey("CustOrdNr",ORr,1,true)) then begin
    res = true;
  end;
  OrderAlreadyDone = res;
  return;
end;

global
updating procedure WebHBSDivSendPayment(string langcode)
begin
  string 60 cardid,year,month,cardtype,ordernr,curncy,cardcvc,cardissue,smonth,syear,sessionid;
  Record CYBlock CYRec;
  val amount;
  LongInt test;
  Integer error;
  string 255 errmsg;
  string 255 errorcode,AuthCode;
  Integer res;
  string 255 ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry;
  string 255 gotofield,ccissue;

  if (LoggedInHWTest()) then begin
  error = -1;
  BlockLoad(CYRec);
  cardtype = WebGetArg("CreditCardType");
  cardid = WebGetArg("ccnumber");
  month = WebGetArg("ExpirationMonth");
  year = WebGetArg("ExpirationYear"); 
  smonth = WebGetArg("amexstartmonth");
  syear = WebGetArg("amexstartyear");
  ordernr = WebGetArg("orderid");
  cardcvc = WebGetArg("cvcsecurity");
  cardissue = WebGetArg("issuenumber");
  curncy = WebGetArg("currency");
  amount = StringToVal(WebGetArg("amount"),M4Val);
  test = StringToLongInt(cardtype);
  ccaddr1 = WebGetArg("ccaddr1");
  ccaddr2 = WebGetArg("ccaddr2");
  ccaddr3 = WebGetArg("ccaddr3");
  ccaddr4 = WebGetArg("ccaddr4");
  ccaddr5 = WebGetArg("ccaddr5");
  ccaddr6 = WebGetArg("ccaddr6");
  cccountry = WebGetArg("cccountry");
  sessionid = WebGetArg("sessionid");
  if (blank(test) or test<0) then begin
    error = 1;
  end;
  if (Len(cardid)<13) then begin
    error = 2;  
  end;
  test = StringToLongInt(cardcvc);
  if (blank(test) or test<0) then begin
    error = 3;
  end;
  if (Len(cardcvc)<3) then begin
    error = 4;  
  end;
  if (nonblank(smonth)) then begin
    test = StringToLongInt(smonth);
    if (blank(test) or test<1) then begin
      error = 5;
    end;
    if (Len(smonth)<2) then begin
      error = 6;
    end;
  end;
  if (nonblank(syear)) then begin
    test = StringToLongInt(syear);
    if (blank(test) or test<1) then begin
      error = 5;
    end;
    if (Len(syear)<4) then begin
      error = 7;
    end;
  end;
  if (StringToLongInt(ordernr)>0) then begin
    if (OrderAlreadyDone(ordernr)) then begin
      error = 8;
    end;
  end;
// Debug!!! Comment this out and next one in for Live
//  if (false) then begin
  if (error>0) then begin
    WebHBSDivShopBasketStepPAY(error,0,"",langcode);  
  end else begin
// Debug!!! Comment this out and next one in for Live
//    if (true) then begin
    res = CheckCreditCardData(ordernr,"",cardid,month,year,cardcvc,cardtype,amount,cardissue,smonth,syear,gotofield,kCardHolderNotPresent);  
    if (res!=0) then begin
      WebHBSDivShopBasketStepPAY(res,USetStr(res),0,langcode);
      goto LWebHBSDivSendPayment;
    end;

    res = CreditCardPurchaseAsync(ordernr,"product",CYRec.CompName,amount,cardtype,cardid,year,month,cardcvc,cardissue,smonth,syear,
                                  curncy,"",1,0,"WEB",
                                  ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry,"",
                                  "","","","","","","","",
                                  -1,"",0.0,0.0,"",
                                  sessionid,CurrentCust,"",errmsg,errorcode,AuthCode,
                                  "","",kCardHolderNotPresent);
    if (res==0) then begin
      ToolWebHWRedirectTo("WebHBSDivMainUpdate.hal","function=WebHBSDivWaitForCCPurchase&sessionid=" & WebGetArg("sessionid") & "&langcode=" & langcode & "&delmode=" & WebGetArg("delmode") & "&custref=" & WebGetArg("custref"),0);
    end else begin
      if (blank(errmsg)) then begin
        error = 9;
      end;
      switch (res) begin
        case 14669: error = 10;
      end;
      WebHBSDivShopBasketStepPAY(error,errmsg,errorcode,langcode);
    end;
  end;
  end;
LWebHBSDivSendPayment:;
  return;
end;

global
updating procedure WebHBSDivWaitForCCPurchase(string langcode)
begin
  integer status, callbackaction;
  boolean res;
  LongInt retryAttempts;
  string 60 orderid;

  status = CardTransactionStatus(CurrentCust,orderid,WebGetArg("sessionid"),callbackaction);

  if (status==kCCStatusPaymentOK) then begin
    // move on, credit card was approved
    ToolWebHBSDivShopBasketStep2Complete(StringToLongInt(orderid));
  end else begin
    if (status==kCCStatusProcessing) then begin
      retryAttempts = 0;
      if(nonBlank(WebGetArg("retryAttempts"))) then begin
        retryAttempts = WebGetArg("retryAttempts");
      end;
      retryAttempts = retryAttempts + 1;

      if(retryAttempts < 10) then begin
        res = WebHBSDivPublicMain("CCPAYMENTBUSY",langcode,-1,-1,false,false);
        
        if (res==false) then begin
          WebOutString("<h2>" & ToolWebReturnTheText(20252) &"</h2>");  WebOutNL;
          WebOutString("<p><b>" & ToolWebReturnTheText(20253) &"</b></p>");  WebOutNL;
        end;
        
        ToolWebHWRedirectTo("WebHBSDivMainUpdate.hal","function=WebHBSDivWaitForCCPurchase&langcode=" & langcode & "&orderid=" & "&sessionid=" & WebGetArg("sessionid") & "&retryAttempts=" & retryAttempts & "&delmode=" & WebGetArg("delmode") & "&custref=" & WebGetArg("custref"),3);
      end else begin
        res = WebHBSDivPublicMain("CCPAYMENTTIMEOUT",langcode,-1,-1,false,false);
        
        if (res==false) then begin
          WebOutString("<h2>" & ToolWebReturnTheText(20254) &"</h2>");  WebOutNL;
          WebOutString("<p><b>" & ToolWebReturnTheText(20255) &"</b></p>");  WebOutNL;
          WebOutString("<p><b>" & ToolWebReturnTheText(20256) &"</b></p>");  WebOutNL;
        end;
      end;
    end else begin
      //error occurred.
      if (status==kCCStatusCardRejected) then begin
        WebHBSDivShopBasketStepPAY(0,ToolWebReturnTheText(20257),"",langcode);
      end else begin
        WebHBSDivShopBasketStepPAY(10,ToolWebReturnTheText(20258),"",langcode);
      end;
    end;
  end;

  return;
end;

global
updating procedure WebHBSDivSendPayServerPayment(string langcode)
begin
  string 60 cardid,year,month,cardtype,ordernr,curncy,cardcvc,cardissue,smonth,syear,sessionid;
  Record CYBlock CYRec;
  val amount;
  LongInt test;
  Integer error;
  string 255 errmsg;
  string 255 errorcode,AuthCode;
  Integer res;
  string 255 ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry;
  string 255 gotofield,ccissue,backtowebshop;
  string 32 txnumber;
  string 255 frompayurl;
  boolean namecopyf;

  txnumber = WebGetArg("txnumber");
  
  if (nonblank(txnumber)) then begin
    error = -1;
    BlockLoad(CYRec);
    cardtype = WebGetArg("CreditCardType");
    cardid = WebGetArg("ccnumber");
    month = WebGetArg("ExpirationMonth");
    year = WebGetArg("ExpirationYear"); 
    smonth = WebGetArg("amexstartmonth");
    syear = WebGetArg("amexstartyear");
    ordernr = WebGetArg("orderid");
    cardcvc = WebGetArg("cvcsecurity");
    cardissue = WebGetArg("issuenumber");
    curncy = WebGetArg("currency");
    amount = StringToVal(WebGetArg("amount"),M4Val);
    test = StringToLongInt(cardtype);
    ccaddr1 = WebGetArg("ccaddr1");
    ccaddr2 = WebGetArg("ccaddr2");
    ccaddr3 = WebGetArg("ccaddr3");
    ccaddr4 = WebGetArg("ccaddr4");
    ccaddr5 = WebGetArg("ccaddr5");
    ccaddr6 = WebGetArg("ccaddr6");
    cccountry = WebGetArg("cccountry");
    sessionid = WebGetArg("sessionid");
    backtowebshop = WebGetArg("frompayurl");
    
    //DO THIS ONLY WHILE WE USE THE CURRENT/OLD CYBERSOURCE SERVICE
    ccaddr5 = ccaddr4;
    ccaddr4 = ccaddr3;
    ccaddr3 = ccaddr2;
    res = InString2(ccaddr1," ");
    if (res!=-1) then begin
      ccaddr2 = mid(ccaddr1,res+1,255); //lastname
      ccaddr1 = left(ccaddr1,res); //firstname
      namecopyf = false;
    end else begin
      ccaddr2 = ccaddr1;
      namecopyf = true;
    end;
    //END CYBERSOURCE ADAPTATION
    
    res = CheckCreditCardData(ordernr,"",cardid,month,year,cardcvc,cardtype,amount,cardissue,smonth,syear,gotofield,kCardHolderNotPresent);  
    if (res!=0) then begin
      ToolWebHBSDivPAYWithPayServer2(res,USetStr(res),0,langcode,frompayurl,sessionid);
      goto LWebHBSDivSendPayServerPayment;
    end;
    
    res = CreditCardPurchasePaySvr(ordernr,"product",CYRec.CompName,amount,cardtype,cardid,year,month,cardcvc,cardissue,smonth,syear,curncy,"",1,0,"WEB",ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry,sessionid,CurrentCust,errmsg,errorcode,AuthCode,txnumber,frompayurl,sessionid);
    if (res==0) then begin
/*
//      WebOutString("<html><head>");
      WebOutString("<meta http-equiv=""Refresh"" content=""0;url=");
      WebOutString(frompayurl);
      if (right(frompayurl,1)!="/") then begin
        WebOutString("/");
      end;
      WebOutString("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebHBSDivPayServerSuccess" & "&sessionid=" & sessionid);
      WebOutString("&txnumber=" & txnumber);
      WebOutString(""">");
//      WebOutString("<html><head>");
*/
      WebOutString("<form id=""ccsuccessform"" method=""POST"" action=""");
      if (right(frompayurl,1)!="/") then begin
        frompayurl = frompayurl & "/";
      end;
      WebOutString(frompayurl);
      switch (WebGetArg("shoptype")) begin
        case "HWU": WebOutLink("WebHWUCompleteCreditCardPayment.hal?langcode=" & langcode & "&txnumber=" & txnumber & "&sessionid=" & sessionid & "&ccnumber=" & right(cardid,4) & "&CreditCardType=" & cardtype);
        case "HWUWEBNG": WebOutString("WebAction.hal?action=university_returnfromcc&txnumber=" & txnumber & "&ccnumber=" & right(cardid,4) & "&cctype=" & cardtype);
        case "WEBNG": WebOutString("WebAction.hal?action=payserverdone&txnumber=" & txnumber & "&ccnumber=" & right(cardid,4) & "&cctype=" & cardtype);
        otherwise
          WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebHBSDivPayServerSuccess" & "&txnumber=" & txnumber & "&sessionid=" & sessionid & "&ccnumber=" & right(cardid,4) & "&CreditCardType=" & cardtype & "&shoptype=" & WebGetArg("shoptype"));
      end;
      WebOutString(""">");
      
      //BEGIN:CYBERSOURCE ADAPTATION
      if (namecopyf==false) then begin
        ccaddr1 = ccaddr1 & " " & ccaddr2;
      end;
      //END:CYBERSOURCE ADAPTATION
      WebOutString("<input type=""hidden"" name=""txnumber""  value=""" & txnumber  & """>");
      WebOutString("<input type=""hidden"" name=""firstname"" value=""" & ccaddr1   & """>");
      WebOutString("<input type=""hidden"" name=""addr1""     value=""" & ccaddr3   & """>");
      WebOutString("<input type=""hidden"" name=""addr2""     value=""" & ccaddr4   & """>");
      WebOutString("<input type=""hidden"" name=""addr3""     value=""" & ccaddr5   & """>");
      WebOutString("<input type=""hidden"" name=""postcode""  value=""" & ccaddr6   & """>");
      WebOutString("<input type=""hidden"" name=""country""   value=""" & cccountry & """>");
      WebOutString("<input type=""hidden"" name=""cardtype""  value=""" & cardtype  & """>");
      WebOutString("<input type=""hidden"" name=""frompayurl""  value=""" & backtowebshop  & """>");
      
      WebOutString("</form>");
      
      WebOutString("<script>");
      WebOutNL;
      WebOutString("<!--");
      WebOutNL;
      WebOutString("document.getElementById(""ccsuccessform"").submit();");
      WebOutString("//-->");
      WebOutNL;
      WebOutString("</script>");
      WeboutString("<noscript>");
      WebOutString("Your payment was successful. Please press the button to return to your webshop.");
      WebOutString("<input type=""submit"" name=""s1""   value=""submit"">");
      WeboutString("</noscript>");
    end else begin
      if (blank(errmsg)) then begin
        error = 9;
      end;
      switch (res) begin
        case 14669: error = 10;
      end;
      ToolWebHBSDivPAYWithPayServer2(error,errmsg,errorcode,langcode,frompayurl,sessionid);
    end;
  end;
LWebHBSDivSendPayServerPayment:;
  return;
end;

global
updating procedure WebHBSDivCreateInvoice(string langcode)
begin
  
  return;
end;
