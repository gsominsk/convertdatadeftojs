external procedure DisplayMailLinks(record MailVc,string);
external procedure ToolWebHBSDivOutTextLangOnly(record MailVc,string);
external procedure ToolWebHBSDivGetHeaderLang(record MailVc,var string,string);
external function string 200 GetWebLanguage();
external procedure ToolWebHBSDivStartPage();
external procedure ToolWebHBSDivEndPage();
external function string 20 GetWebVersion();
external procedure ToolWebHBSDivConfPopup(string,string,string);
external procedure ToolWebOutMailText(record MailVc,string);
external procedure ToolWebOutNoteText(record NoteVc,Integer,string);
external procedure ToolWebHBSDivShopLine(string,string,string,string,Boolean);
external function string 200 ToolWebReturnTheText(Integer);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebStartTable();
external procedure ToolWebEndTable();
external procedure ToolWebGetTextLang(record MailVc,LongInt,record MailVc,string);
external procedure ToolWebHBSDivOutTextLang(record MailVc,string,string,string);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebGetTheText(Integer,var string);
external procedure ToolWebHBSDivPrintHeaderLang(string,string,string);
external procedure ToolWebHBSDivReadMore(string);
external function Boolean ToolWebHBSUseLink();
external procedure ToolWebHBSDivMenuItem(string,string,string,string,string,Boolean,Integer,Boolean,Boolean);
external procedure ToolWebHBSDivTextLink(string,string,string,string,string,Boolean);
external function string 255 ToolWebBuildLink(string,string);

global
function Boolean IsOldStyle(string sortorder)
begin
  Boolean res;
  string 20 locsort;
  
  res = false;
  locsort = Left(sortorder,3);
  if (locsort=="000") then begin res = true; end;
  if (locsort=="999") then begin res = true; end;
  if (StringToInt(locsort)>0) then begin res = true; end;
  IsOldStyle = res;
  return;
end;

global
function Boolean GetShortCodeConf(var record ConfVc Confr,string theconf,var string shortcode,string thecode,var string confcode,var LongInt maxmail)
begin
  string 60 confname;
  Boolean foundf;
  
  GetConfInfo(thecode,confname,confcode,maxmail);
  if (nonblank(shortcode)) then begin
    Confr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Confr,1,true)) then begin
      foundf = true;
      shortcode = "";
      confcode = Confr.SerNr;
    end;
  end;
  if (foundf==false) then begin
    if (nonblank(theconf)) then begin
      Confr.SerNr = theconf;
      if (ReadFirstMain(Confr,1,true)) then begin
        foundf = true;
        confcode = Confr.SerNr;
      end;
    end else begin
      Confr.AddrName = confname;
      if (ReadFirstKey("AddrName",Confr,1,true)) then begin
        foundf = true;
        confcode = Confr.SerNr;
      end;
    end;
  end;
  GetShortCodeConf = foundf;
  return;
end;

procedure ToolWebOutTheMail(record MailVc Mailr,LongInt maxchars,string sortorder,string langcode,Boolean skipspecial,Boolean clickable,string confcode,Boolean incheader)
begin
  record MailVc Mail2r;
  string 255 llink;

  if (incheader) then begin
    ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
    ToolWebHBSDivPrintHeaderLang(Right(Mailr.Header,Len(Mailr.Header)-3),Mailr.Header,Right(Mail2r.Header,Len(Mail2r.Header)-3));
  end;
  if (clickable) then begin
    WebOutString("<a href=""");
    llink = ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr);
    if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
  end;
  if ((maxchars>-1) and (sortorder<>"000") and ((sortorder<>"999"))) then begin
    if (incheader==false) then begin // Speedup only
      ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
    end;
    ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
    DisplayMailLinks(Mailr,langcode);
  end else begin
    if ((sortorder=="000") or ((sortorder=="999"))) then begin
      if (skipspecial==false) then begin
        ToolWebHBSDivOutTextLang(Mailr,confcode,Mailr.Header,langcode);
      end;
    end else begin
      ToolWebHBSDivOutTextLang(Mailr,confcode,Mailr.Header,langcode);
    end;
  end;
  if (clickable) then begin
    WebOutString("</a>");
    WebOutString("<p>");
  end;
  return;
end;

procedure ToolWebOutTheMailMain(record MailVc Mailr,string confcode,string langcode,LongInt maxchars)
begin
  record MailVc Mail2r;

  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  ToolWebHBSDivPrintHeaderLang(Right(Mailr.Header,Len(Mailr.Header)-3),Mailr.Header,Right(Mail2r.Header,Len(Mail2r.Header)-3));
  if (maxchars>-1) then begin
    ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
//    DisplayMailLinks(Mailr,langcode);
  end else begin
    ToolWebHBSDivOutTextLang(Mailr,confcode,Mailr.Header,langcode);
  end;
  return;
end;

procedure ToolWebOutTheMailOneLink(record MailVc Mailr,string langcode,LongInt maxchars)
begin
  record MailVc Mail2r;
  string 250 tstr,tstr2;
  string 255 llink;

  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  tstr = Right(Mailr.Header,Len(Mailr.Header)-3);
  tstr2 = Right(Mail2r.Header,Len(Mail2r.Header)-3);
  if ((nonblank(tstr)) or (nonblank(tstr2))) then begin
    ToolWebLineStart;
    WebOutString("<td width=""20%"" class=""deftxt"">");
    WebOutString(Mailr.TransDate);
    WebOutString("</td>");
    WebOutString("<td width=""80%"">");
    WebOutNL;
    WebOutString("<a class=""readmoreMenuLink"" href=""");
    llink = ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr);
    if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
    if (nonblank(tstr2)) then begin
      WebOutString(tstr2);
    end else begin
      WebOutString(tstr);
    end;
    WebOutString("</a>");
    WebOutNL;
    WebOutString("</td>");
    WebOutNL;
    ToolWebLineEnd;
  end;
  return;
end;

procedure ToolWebOutTheMailLink(record MailVc Mailr,string langcode,LongInt maxchars,var Integer cnt)
begin
  record MailVc Mail2r;
  string 250 tstr,tstr2;
  string 255 llink;

  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  tstr = Right(Mailr.Header,Len(Mailr.Header)-3);
  tstr2 = Right(Mail2r.Header,Len(Mail2r.Header)-3);
  if ((nonblank(tstr)) or (nonblank(tstr2))) then begin
    if (Left(Mailr.Header,3)=="000") then begin
      WebOutString("<td class=""heading3"" colspan=""3"">");
      if (nonblank(tstr2)) then begin
        WebOutString(tstr2);
      end else begin
        WebOutString(tstr);
      end;
      WebOutString("</td>");
      WebOutNL;
      ToolWebLineEnd;
      ToolWebLineStart;
    end else begin
      if (Mid(Mailr.Header,1,2)=="00") then begin
        cnt = 0;
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td class=""headerlistMenuLink"" colspan=""3"">");
        WebOutString("&nbsp;");
        WebOutString("</td>");
        WebOutNL;
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td class=""headerlistMenuLink"" colspan=""3"">");
        WebOutNL;
      end else begin
        if (cnt==4) then begin
          cnt = 0;
          ToolWebLineEnd;
          ToolWebLineStart;
        end;
        WebOutString("<td width=""160"" class=""listsMenuLink"">");
        cnt = cnt + 1;
      end;
      WebOutNL;
      WebOutString("<a href=""");
      llink = ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr);
      if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
        WebOutLink(llink);
      end else begin
        WebOutString(llink);
      end;
      WebOutString(""">");
      if (nonblank(tstr2)) then begin
        WebOutString(tstr2);
      end else begin
        WebOutString(tstr);
      end;
      WebOutString("</a>");
      WebOutNL;
      WebOutString("</td>");
      WebOutNL;
      if (Mid(Mailr.Header,1,2)=="00") then begin
        ToolWebLineEnd;
        ToolWebLineStart;
      end;
    end;
  end;
  return;
end;

global
procedure WebHBSDivMailNewsView(string langcode)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  record RLinkVc RLr;
  Integer cnt;
  LongInt wmailnumber;
  string 200 hdr;

  WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
  ToolWebLineStart;
  WebOutString("<td bgcolor=""#4F5FB4""><img src=""/gfx/_en/label_newsandheadlines.gif"" width=""161"" height=""14"" hspace=""15"" alt="""" /></td>");
  WebOutString("<td width=""233""><img src=""/gfx/popup_logo.jpg"" width=""233"" height=""42"" alt="""" /></td>");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebOutString("<td colspan=2 align=right>");
  ToolWebHBSDivMenuItem(ToolWebReturnTheText(20187),"WebHBSDivMain.hal","&webpage=" & "news" & "&theconf=" & WebGetArg("theconf"),"",langcode,false,0,false,false);
  WebOutString("</td>");
  ToolWebLineEnd;
  ToolWebEndTable;
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebHBSDivGetHeaderLang(Mailr,hdr,langcode);
    WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""20"">");
    ToolWebLineStart;
    WebOutString("<td class=""deftxt"">");
    WebOutString("<div class=""heading3"">");
    WebOutString(hdr);
    WebOutString("</div>");
    WebOutString("<p>");
    ToolWebHBSDivOutTextLangOnly(Mailr,langcode);
    cnt = 1;
    while (ReadRecordLink(Mailr,cnt,Mail2r,RLr)) begin
      cnt = cnt + 1;
      ToolWebHBSDivOutTextLangOnly(Mailr,langcode);
    end;
    ToolWebEndTable;
  end;
  return;
end;

procedure ToolWebOutTheNewsStyle(record MailVc Mailr,string confcode,string langcode,LongInt maxchars)
begin
  record MailVc Mail2r;
  string 255 llink;

  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  WebOutString("<tr valign=""top""><td><img src=""/gfx/dot09.gif"" width=""11"" height=""13"" border=""0"" alt="""" /></td>");
  WebOutString("<td>");
  WebOutString("<a class=""listbulletsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailNewsView&mailnumber=" & Mailr.SerNr & "&langcode=" & langcode);
  if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
//  ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
// If info from Mail, remove 3 chars, if not, don't.....ugly....
  if (Mail2r.Header==Mailr.Header) then begin
    WebOutString(Right(Mail2r.Header,Len(Mail2r.Header)-3));
  end else begin
    WebOutString(Mail2r.Header);
  end;
  WebOutNL;
  WebOutString("</a>");
//  WebOutString("<div class=""dateInNews"">" & Right(Mailr.Header,Len(Mailr.Header)-3) & "</div>");
  WebOutString("<div class=""dateInNews"">");
  ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
  DisplayMailLinks(Mailr,langcode);
  WebOutString("</div>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("<p>");
  return;
end;

procedure ToolWebOutTheBulletStyle(record MailVc Mailr,string confcode,string langcode,LongInt maxchars)
begin
  record MailVc Mail2r;
  string 255 llink;

  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  WebOutString("<tr valign=""top""><td><img src=""/gfx/dot10.gif"" width=""11"" height=""13"" border=""0"" alt="""" /></td>");
  WebOutString("<td>");
  WebOutString("<a class=""listbulletsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr);
  if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
  WebOutNL;
  DisplayMailLinks(Mailr,langcode);
  WebOutString("</a>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("<p>");
  return;
end;

global
procedure ToolWebGetConfTextLang(record ConfVc Confr,string langcode,LongInt nrofchrs,var record MailVc Mail2r)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean printf;
  string 255 tstr;

  printf = false;
  cnt = 1;
  RecordNew(Mail2r);
  while (ReadRecordLink(Confr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (langcode==Noter.LangCode) then begin // WebLanguage(1)
      tstr = StringFromText(Noter,0,nrofchrs);
      Mail2r.Header = RLr.Comment;
      printf = true;
      goto LWebGetConfTextLang;
    end;
  end;
  if (printf==false) then begin
    Mail2r.Header = Confr.Comment;
  end;
LWebGetConfTextLang:;
//  CutStringNicely(tstr);
  AddToText(tstr,Mail2r);
  return;
end;

procedure DisplayConferenceStyle(record Mailvc Mail2r,LongInt sernr,string thecode,string theconf,string langcode,Boolean boldf)
begin
  string 255 llink;
  
  WebOutString("<tr valign=""top"">");
  WebOutString("<td>");
  if (boldf) then begin
    WebOutString("<a class=""headerlistMenuLink"" href=""");
  end else begin
    WebOutString("<a class=""listsMenuLink"" href=""");
  end;
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & sernr & "&theconf=" & theconf & "&version=" & GetWebVersion);
  if (ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString(Mail2r.Header);
  WebOutNL;
  WebOutString("</a>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("<p>");
  return;
end;

procedure ToolWebOutTheConfMailStyle(record MailVc Mailr,LongInt maxchars,string thecode,string theconf,string langcode,Boolean boldf,Boolean asamenu,string levelzero,record WebMenuVc WebMenur,Integer menulevel,Boolean activef)
begin
  record MailVc Mail2r;
  string 255 llink;

  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  if (asamenu) then begin
    llink = WebMenur.ExtraArgs;
    if (nonblank(llink)) then begin
      llink = "&";
    end;
    llink = "mailnumber=" & Mailr.SerNr & "&theconf=" & theconf & "&WEBPAGE=" & thecode & "&levelzero=" & levelzero & "&version=" & GetWebVersion;
    ToolWebHBSDivMenuItem(Mail2r.Header,"WebHBSDivMain.hal",llink,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,activef);
  end else begin
    DisplayConferenceStyle(Mail2r,Mailr.SerNr,thecode,theconf,langcode,boldf);
  end;
  return;
end;

procedure ToolWebOutTheConferenceStyle(record ConfVc Confr,LongInt maxchars,string thecode,string theconf,string langcode,Boolean boldf,Boolean asamenu,LongInt version,record WebMenuVc WebMenur,Integer menulevel)
begin
  record MailVc Mail2r;
  string 255 llink;

  if (Confr.Version<=version) then begin
    ToolWebGetConfTextLang(Confr,langcode,maxchars,Mail2r);
    if (asamenu) then begin
      llink = WebMenur.ExtraArgs;
      if (nonblank(llink)) then begin
        llink = "&";
      end;
      llink = "mailnumber=" & -1 & "&theconf=" & theconf & "&webpage=" & thecode & "&version=" & GetWebVersion;
      ToolWebHBSDivMenuItem(Mail2r.Header,"WebHBSDivMain.hal",llink,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
    end else begin
      DisplayConferenceStyle(Mail2r,-1,thecode,theconf,langcode,boldf);
    end;
  end;
  return;
end;

global
Function Boolean WebHBSDivPublicMain(string thecode,string langcode,LongInt norofmails,LongInt maxchars,Boolean skipspecial,Boolean clickable)
begin
  record ConfVc Confr;
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  LongInt loopcnt;
  LongInt maxmail;
  Boolean foundf;
  string 60 confcode;
  string 200 shortcode;
  Boolean res;

  loopcnt = 0;
  res = false;
  shortcode = WebGetArg("shortcode");
  foundf = GetShortCodeConf(Confr,"",shortcode,thecode,confcode,maxmail);
  if (norofmails>-1) then begin
    if (norofmails>1) then begin
      maxmail = norofmails;
    end else begin
      maxmail = 1;
    end;
  end;
  foundf = true;
  if (nonblank(shortcode)) begin
    Mailr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Mailr,1,true)) begin
      if (maxmail>1) then begin
        ToolWebOutTheMail(Mailr,maxchars,sortorder,langcode,skipspecial,clickable,confcode,true);
        ToolWebHBSDivReadMore(ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr));
      end else begin
        ToolWebOutTheMail(Mailr,maxchars,sortorder,langcode,skipspecial,clickable,confcode,false);
        DisplayMailLinks(Mailr,langcode);
        res = true;
      end;
      foundf = false;
    end;
  end;
  ckey = "UserSubject:" & confcode;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      if (sortorder<>"000") then begin
        loopcnt = loopcnt + 1;
      end;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        if (maxmail>1) then begin
          ToolWebOutTheMail(Mailr,maxchars,sortorder,langcode,skipspecial,clickable,confcode,true);
          ToolWebHBSDivReadMore(ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr));
        end else begin
          ToolWebOutTheMail(Mailr,maxchars,sortorder,langcode,skipspecial,clickable,confcode,false);
          DisplayMailLinks(Mailr,langcode);
          res = true;
        end;
      end;
    end;
  end;
  WebHBSDivPublicMain = res;
  return;
end;

global
procedure ToolWebHBSDivPublicMailMain(string thecode,string langcode,LongInt maxchars)
begin
  record ConfVc Confr;
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 200 shortcode;
  Boolean res;
  LongInt maxmail;

  res = false;
  shortcode = WebGetArg("shortcode");
  foundf = GetShortCodeConf(Confr,"",shortcode,thecode,confcode,maxmail);
  foundf = true;
  if (nonblank(shortcode)) begin
    Mailr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Mailr,1,true)) begin
      ToolWebOutTheMailMain(Mailr,confcode,langcode,maxchars);
      ToolWebHBSDivReadMore(ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr));
      foundf = false;
    end;
  end;
  ckey = "UserSubject:" & confcode;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      ToolWebOutTheMailMain(Mailr,confcode,langcode,maxchars);
      ToolWebHBSDivReadMore(ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivMailFAQView&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr));
    end;
  end;
  return;
end;

global
procedure ToolWebHBSDivPublicMailLink(string thecode,string langcode,LongInt maxchars)
begin
  record ConfVc Confr;
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 200 shortcode;
  Boolean res;
  LongInt maxmail;
  Integer cnt;

  cnt = 1;
  res = false;
  shortcode = WebGetArg("shortcode");
  foundf = GetShortCodeConf(Confr,"",shortcode,thecode,confcode,maxmail);
  foundf = true;
  WebOutString("<table width=""480""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
  ToolWebLineStart;
  if (nonblank(shortcode)) begin
    Mailr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Mailr,1,true)) begin
      ToolWebOutTheMailLink(Mailr,langcode,maxchars,cnt);
      foundf = false;
    end;
  end;
  ckey = "UserSubject:" & confcode;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      ToolWebOutTheMailLink(Mailr,langcode,maxchars,cnt);
    end;
  end;
  ToolWebLineEnd;
  ToolWebEndTable;
  return;
end;

global
procedure ToolWebHBSDivPublicMailNews(string thecode,string langcode,LongInt maxchars)
begin
  record ConfVc Confr;
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 200 shortcode;
  Boolean res;
  LongInt maxmail;

  res = false;
  WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
  ToolWebLineStart;
  WebOutString("<td bgcolor=""#4F5FB4""><img src=""/gfx/_en/label_newsandheadlines.gif"" width=""161"" height=""14"" hspace=""15"" alt="""" /></td>");
  WebOutString("<td width=""233""><img src=""/gfx/popup_logo.jpg"" width=""233"" height=""42"" alt="""" /></td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("<table width=""100%"" cellspacing=""6"" border=""0"">");
  shortcode = WebGetArg("shortcode");
  foundf = GetShortCodeConf(Confr,"",shortcode,thecode,confcode,maxmail);
  foundf = true;
  if (nonblank(shortcode)) begin
    Mailr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Mailr,1,true)) begin
      ToolWebOutTheNewsStyle(Mailr,confcode,langcode,maxchars);
      foundf = false;
    end;
  end;
  ckey = "UserSubject:" & confcode;
  Mailr.Header = "9999999";
  while (LoopBackKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      ToolWebOutTheNewsStyle(Mailr,confcode,langcode,maxchars);
    end;
  end;
  WebOutString("</table>");
  return;
end;

global
procedure ToolWebHBSDivPublicMailBullet(string thecode,string langcode,LongInt maxchars)
begin
  record ConfVc Confr;
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 200 shortcode;
  Boolean res;
  LongInt maxmail;

  res = false;
  WebOutString("<table cellspacing=""6"" border=""0"">");
  shortcode = WebGetArg("shortcode");
  foundf = GetShortCodeConf(Confr,"",shortcode,thecode,confcode,maxmail);
  foundf = true;
  if (nonblank(shortcode)) begin
    Mailr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Mailr,1,true)) begin
      ToolWebOutTheBulletStyle(Mailr,confcode,langcode,maxchars);
      foundf = false;
    end;
  end;
  ckey = "UserSubject:" & confcode;
  Mailr.Header = "9999999";
  while (LoopBackKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      ToolWebOutTheBulletStyle(Mailr,confcode,langcode,maxchars);
    end;
  end;
  WebOutString("</table>");
  return;
end;

global
procedure ToolWebHBSDivOutTaggedText(record MailVc Mailr,LongInt originalmailno,string thecode,string theconf,string langcode)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean printf;
  
  printf = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (langcode==Noter.LangCode) then begin // WebLanguage(1)
      ToolWebOutNoteText(Noter,Mailr.HtmlTranslation,ToolWebBuildLink("WebHBSDivMain.hal","&mailnumber=" & originalmailno & "&theconf=" & theconf & "&WEBPAGE=" & thecode & "&version=" & GetWebVersion & "&langcode=" & langcode));
      WebOutNL;
      DisplayMailLinks(Mailr,langcode);
      printf = true;
      goto LWebHBSDivOutTaggedText;
    end;
  end;
  if (printf==false) then begin
    ToolWebOutMailText(Mailr,ToolWebBuildLink("WebHBSDivMain.hal","&mailnumber=" & originalmailno & "&theconf=" & theconf & "&WEBPAGE=" & thecode & "&version=" & GetWebVersion & "&langcode=" & langcode));
    DisplayMailLinks(Mailr,langcode);
    WebOutNL;
  end;
LWebHBSDivOutTaggedText:;
  WebOutNL;
  return;
end;

global
function Integer ToolWebGetProperVersion(record MailVc Mailr,var record MailVc MailVersionr,LongInt version,string confcode)
begin
  record MailVc lMailr;
  record MailVc tempMailr;
  Boolean foundf;
  Integer res;
  String 200 ckey;
  
  res = 0;
  foundf = true;
  RecordCopy(MailVersionr,Mailr);
  if (nonblank(Mailr.Identifier)) then begin
    RecordCopy(lMailr,Mailr);
    if (LoopKey("Identifier",lMailr,0,foundf)) then begin // First is same as Mailr
    end;
    while (LoopKey("Identifier",lMailr,1,foundf)) begin
      if (lMailr.Identifier!=Mailr.Identifier) then begin
        foundf = false;
      end;
      if (foundf) then begin
        ckey = "UserSer:" & confcode;
        tempMailr.SerNr = lMailr.SerNr; // We must know if this record exists in that conference...
        if ((blank(confcode)) or (ReadFirstKey(ckey,tempMailr,1,true))) then begin
          if (lMailr.Version<=version) then begin
            RecordCopy(MailVersionr,lMailr);
          end;
          res = res + 1;
        end;
      end;
    end;
  end;
  ToolWebGetProperVersion = res;
  return;
end;

function Integer CharsTheSame(string as,string bs)
begin
  Integer res;
  Integer i,l,l2;
  
  res = 0;
  l = len(as);
  l2 = len(bs);
  if (l>l2) then begin
    l = l2;
  end;
  for(i=0;i<l;i=i+1) begin
    if ((Mid(as,i,1))==(Mid(bs,i,1))) then begin
      res = res + 1;
    end else begin
      i = l;
    end;  
  end;
  CharsTheSame = res;
  return;
end;

function Boolean IndentBySort()
begin
  IndentBySort = true;
end;

global
procedure GetNextAndPrevMail(string ckey,record MailVc Mailr,var record MailVc MailPrevr,var record MailVc MailNextr,var string prevlink,var string nextlink,var string prevlevelzero,var string nextlevelzero,string confcode,LongInt version)
begin
  record MailVc Mail2r;
  record MailVc tempMailr;
  LongInt versions;
  Boolean foundf;
  Integer maxc,cnt;
  
  prevlevelzero = "";
  nextlevelzero = "";
  if (nonblank(ckey)) then begin
    if (IndentBySort) then begin
      maxc = 2;
    end else begin
      maxc = 7;
    end;
    ResetLoop(Mail2r);
    Mail2r.Sortorder = Mailr.Sortorder;
    if (LoopBackKey(ckey,Mail2r,1,true)) then begin
      foundf = true;
      while (LoopBackKey(ckey,Mail2r,1,foundf)) begin
        if (Mail2r.Sortorder!=Mailr.Sortorder) then begin
          foundf = false;
        end;
        if (blank(Mail2r.Sortorder)) then begin
          foundf = false;
        end;
        if (foundf==false) then begin
          if ((Mail2r.SerNr!=Mailr.SerNr) and ((blank(Mailr.Identifier)) or (Mail2r.Identifier!=Mailr.Identifier))) then begin
            versions = ToolWebGetProperVersion(Mail2r,MailPrevr,version,confcode);
            prevlink = "WebHBSDivMain.hal";
            if ((MailPrevr.Version>version) or (Left(MailPrevr.Header,5)=="XXXXX")) then begin // Loop again.
              foundf = true;
            end;
          end;
        end;
      end;
    end;
    ResetLoop(Mail2r);
    Mail2r.Sortorder = Mailr.Sortorder;
    if (LoopKey(ckey,Mail2r,1,true)) then begin
      foundf = true;
      while (LoopKey(ckey,Mail2r,1,foundf)) begin
        if (Mail2r.Sortorder!=Mailr.Sortorder) then begin
          foundf = false;
        end;
        if (blank(Mail2r.Sortorder)) then begin
          foundf = false;
        end;
        if (foundf==false) then begin
          if ((Mail2r.SerNr!=Mailr.SerNr) and ((blank(Mailr.Identifier)) or (Mail2r.Identifier!=Mailr.Identifier))) then begin
            versions = ToolWebGetProperVersion(Mail2r,MailNextr,version,confcode);
            nextlink = "WebHBSDivMain.hal";
            if ((MailNextr.Version>version) or (Left(MailNextr.Header,5)=="XXXXX")) then begin // Loop again.
              foundf = true;
            end;
          end;
        end;
      end;
    end;
    ResetLoop(Mail2r);
    Mail2r.Sortorder = MailPrevr.Sortorder; // To find the previous top menu
    if (LoopBackKey(ckey,Mail2r,1,true)) then begin
      foundf = true;
      while (LoopBackKey(ckey,Mail2r,1,foundf)) begin
        if (IndentBySort) then begin
          cnt = CharsTheSame(Mail2r.Sortorder,MailPrevr.Sortorder);
        end else begin
          cnt = CharsTheSame(Mail2r.Header,MailPrevr.Header);
        end;
        if (cnt>maxc) then begin
          versions = ToolWebGetProperVersion(Mail2r,tempMailr,version,confcode);
          prevlevelzero = StringToLongInt(tempMailr.SerNr);
        end else begin
          foundf = false;
        end;
      end;
    end;
    ResetLoop(Mail2r);
    Mail2r.Sortorder = MailNextr.Sortorder; // To find the previous top menu
    if (LoopBackKey(ckey,Mail2r,1,true)) then begin
      foundf = true;
      while (LoopBackKey(ckey,Mail2r,1,foundf)) begin
        if (IndentBySort) then begin
          cnt = CharsTheSame(Mail2r.Sortorder,MailNextr.Sortorder);
        end else begin
          cnt = CharsTheSame(Mail2r.Header,MailNextr.Header);
        end;
        if (cnt>maxc) then begin
          versions = ToolWebGetProperVersion(Mail2r,tempMailr,version,confcode);
          nextlevelzero = StringToLongInt(tempMailr.SerNr);
        end else begin
          foundf = false;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure PrintBreadCrumbs(string thecode,string langcode,LongInt confserno,LongInt version,record WebMenuVc WebMenur)
begin
  record ConfVc Confr;
  record MailVc Mail2r;
  array LongInt aconflevser;
  array string 200 aconflevcom;
  Integer acnt,i;

  if (confserno>0) begin
    acnt = 0;
    Confr.SerNr = confserno;
    while (Confr.SerNr>0) begin
      if (ReadFirstMain(Confr,1,true)) then begin
        ToolWebGetConfTextLang(Confr,langcode,255,Mail2r);
        if (nonblank(Mail2r.Header)) then begin
          aconflevser[acnt] = Confr.SerNr;
          aconflevcom[acnt] = Mail2r.Header;
          acnt = acnt + 1;
        end;
        Confr.SerNr = Confr.MotherConf;
      end else begin
        Confr.SerNr = -1;
      end;
    end;
    WebOutString("<p class=""textMenuLink"">");
    for (i=acnt-1;i>-1;i=i-1) begin
      ToolWebHBSDivTextLink(aconflevcom[i],"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&webpage=" & thecode & "&theconf=" & aconflevser[i] & "&mailnumber=" & -1 & "&version=" & version,WebMenur.Target,langcode,WebMenur.NoSession==1);
      if (i!=0) then begin
        WebOutString(">>");
      end;
    end;
    WebOutString("</p>");
  end;
  return;
end;

procedure ToolWebHBSDivOutFullMail(record MailVc Mailr,string ckey,string thecode,string theconf,string confcode,string langcode,LongInt confserno,LongInt version,record WebMenuVc WebMenur)
begin
  record MailVc Mail2r;
  record MailVc MailPrevr;
  record MailVc MailNextr;
  string 255 prevlink;
  string 255 nextlink;
  string 60 prevlevelzero;
  string 60 nextlevelzero;

  GetNextAndPrevMail(ckey,Mailr,MailPrevr,MailNextr,prevlink,nextlink,prevlevelzero,nextlevelzero,confcode,version);
  PrintBreadCrumbs(thecode,langcode,confserno,version,WebMenur);
  WebOutString("<p class=""textMenuLink"">");
  
  ToolWebHBSDivTextLink(ToolWebReturnTheText(20138),prevlink,WebMenur.ExtraArgs & "&webpage=" & thecode & "&levelzero=" & prevlevelzero & "&theconf=" & theconf & "&mailnumber=" & MailPrevr.SerNr & "&version=" & version,WebMenur.Target,langcode,WebMenur.NoSession==1);
  ToolWebHBSDivTextLink(ToolWebReturnTheText(20139),nextlink,WebMenur.ExtraArgs & "&webpage=" & thecode & "&levelzero=" & nextlevelzero & "&theconf=" & theconf & "&mailnumber=" & MailNextr.SerNr & "&version=" & version,WebMenur.Target,langcode,WebMenur.NoSession==1);
  if ((nonblank(prevlink)) or (nonblank(nextlink))) then begin
    WebOutString("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
    ToolWebHBSDivConfPopup(ToolWebReturnTheText(20140),"WebHBSDivConfView.hal",WebMenur.ExtraArgs & "&langcode=" & langcode & "&webpage=" & thecode & "&theconf=" & theconf & "&mailnumber=" & Mailr.SerNr & "&version=" & version);
    WebOutString("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
    ToolWebHBSDivTextLink(ToolWebReturnTheText(20143),"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&webpage=" & "WebHBSDivSearchConf" & "&theconf=" & theconf & "&mailnumber=" & Mailr.SerNr & "&version=" & version,WebMenur.Target,langcode,WebMenur.NoSession==1);
  end;
  WebOutString("</p>");
  if (Mailr.Version>0) then begin
    WebOutString("<p class=""textMenuLink"">");  
    ToolWebHBSDivTextLink(ToolWebReturnTheText(20142) & " " & Left(Mailr.Version,1) & "." & Right(Mailr.Version,1),"","","",langcode,0);
    WebOutString("</p>");
  end;
  ToolWebGetTextLang(Mailr,-1,Mail2r,langcode);
  ToolWebHBSDivPrintHeaderLang(Mailr.Header,Mailr.Header,Mail2r.Header);
  ToolWebHBSDivOutTaggedText(Mailr,Mailr.SerNr,thecode,theconf,langcode);
  WebOutString("<p class=""textMenuLink"">");  
  ToolWebHBSDivTextLink(ToolWebReturnTheText(20138),prevlink,WebMenur.ExtraArgs & "&webpage=" & thecode & "&levelzero=" & prevlevelzero & "&theconf=" & theconf & "&mailnumber=" & MailPrevr.SerNr & "&version=" & version,WebMenur.Target,langcode,WebMenur.NoSession==1);
  ToolWebHBSDivTextLink(ToolWebReturnTheText(20139),nextlink,WebMenur.ExtraArgs & "&webpage=" & thecode & "&levelzero=" & nextlevelzero & "&theconf=" & theconf & "&mailnumber=" & MailNextr.SerNr & "&version=" & version,WebMenur.Target,langcode,WebMenur.NoSession==1);
  WebOutString("<a class=""textMenuLink"" href=""#toplink"">" & ToolWebReturnTheText(20141) & "</a>");  
  if ((nonblank(prevlink)) or (nonblank(nextlink))) then begin
    WebOutString("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
    ToolWebHBSDivConfPopup(ToolWebReturnTheText(20140),"WebHBSDivConfView.hal",WebMenur.ExtraArgs & "&langcode=" & langcode & "&webpage=" & thecode & "&theconf=" & theconf & "&mailnumber=" & Mailr.SerNr & "&version=" & version);
  end;
  WebOutString("</p>");
  return;
end;

procedure ToolWebConferenceList(string thecode,string theconf,string langcode,LongInt maxchars,Boolean asamenu,Boolean displaylink,record WebMenuVc WebMenur)
begin
  record ConfVc Confr;
  record ConfVc Conf2r;
  record MailVc Mailr;
  record MailVc Mail2r;
  record MailVc MailVersionr;
  row MailVc Mailrw;
  record RLinkVc RLr;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  Boolean res;
  string 200 ltheconf;
  Boolean boldf,firstf,displaysubones;
  Longint mailno,levelzero,maxmail;
  string 200 shortcode;
  string 200 lastheader;
  string 200 lastsortorder;
  Integer cnt,i,maxc,cnt2;
  LongInt versions,version;
  Boolean activef;

  version = StringToLongInt(GetWebVersion);
  versions = 0;
  res = false;
  firstf = true;
  mailno = WebGetArg("mailnumber");
  levelzero = WebGetArg("levelzero");
  shortcode = WebGetArg("shortcode");
  foundf = GetShortCodeConf(Confr,theconf,shortcode,thecode,confcode,maxmail);
  if (Confr.Version>version) then begin
    foundf = false;
  end;
  if (foundf) then begin
    if (Confr.Class==kConfClassFolder) then begin
      foundf = true;
      ckey = "SubConfSortorder:" & Confr.SerNr;
      Conf2r.Sortorder = "";
      while (LoopKey(ckey,Conf2r,1,foundf)) begin
        if (foundf) then begin
          if (Conf2r.Class==kConfClassFolder) then begin
            boldf = true;
          end else begin
            boldf = false;
          end;
          ltheconf = Conf2r.SerNr;
          if (displaylink) then begin
            ToolWebOutTheConferenceStyle(Conf2r,maxchars,thecode,ltheconf,langcode,boldf,asamenu,version,WebMenur,0);
          end;
        end;
      end;
      if (asamenu==false) then begin
        cnt = 1;
        while (ReadRecordLink(Confr,cnt,Mailr,RLr)) begin
          versions = ToolWebGetProperVersion(Mailr,MailVersionr,version,"");
          MailVersionr.Header = MailVersionr.Header;
          ToolWebHBSDivOutFullMail(MailVersionr,"",thecode,ltheconf,confcode,langcode,Confr.SerNr,version,WebMenur);
          cnt = cnt + 1 + versions;
        end;
        if (cnt==1) then begin
          RecordNew(Mailr);
          versions = ToolWebGetProperVersion(Mailr,MailVersionr,version,"");
          ToolWebHBSDivOutFullMail(MailVersionr,"",thecode,ltheconf,confcode,langcode,Confr.SerNr,version,WebMenur);
        end;
      end;
    end else begin
      ltheconf = Confr.SerNr;
      ckey = "UserSortorder:" & confcode;
      foundf = true;
      Mailr.Sortorder = "";
      if (nonblank(shortcode)) begin
        Mail2r.Identifier = shortcode;
        if (ReadFirstKey("Identifier",Mail2r,1,true)) begin
          mailno = Mail2r.SerNr;
          if (MatRowCnt(Mail2r)>0) then begin
            MatRowGet(Mail2r,1,Mailrw);
            Confr.AddrName = Mailrw.AddrCode;
            if (ReadFirstKey("AddrName",Confr,1,true)) then begin
              ltheconf = Confr.SerNr;
              ckey = "UserSortorder:" & Confr.SerNr;
            end;
          end;
        end;
      end;
      if (mailno>0) then begin
        if (asamenu==false) then begin
          Mail2r.SerNr = mailno;
          if (ReadFirstMain(Mail2r,1,true)) then begin
            Mailr.Sortorder = Mail2r.Sortorder;
          end;
        end;
      end;
      while (LoopKey(ckey,Mailr,1,foundf)) begin
        if (foundf) then begin
          versions = ToolWebGetProperVersion(Mailr,MailVersionr,version,confcode);
          StepForward(Mailr,versions);
          if (MailVersionr.Version<=version) then begin
            if (asamenu) then begin
              if (IndentBySort) then begin
                maxc = 2;
              end else begin
                maxc = 7;
              end;
              cnt2 = CharsTheSame(MailVersionr.Header,lastheader);
              if (IndentBySort) then begin
                cnt = CharsTheSame(MailVersionr.Sortorder,lastsortorder);
              end else begin
                cnt = CharsTheSame(MailVersionr.Header,lastheader);
              end;
              if (displaylink) then begin
                if (MailVersionr.SerNr==mailno) then begin
                  activef = true;
                end else begin
                  activef = false;
                end;
                if ((mailno==-1) and (firstf)) then begin
                  activef = true;
                end;
                firstf = false;
                if (cnt<=maxc) then begin
                  ToolWebOutTheConfMailStyle(MailVersionr,maxchars,thecode,ltheconf,langcode,false,asamenu,MailVersionr.SerNr,WebMenur,0,activef);
                  lastsortorder = MailVersionr.Sortorder;
                  lastheader = MailVersionr.Header;
                  if ((MailVersionr.SerNr==mailno) or (MailVersionr.SerNr==levelzero)) then begin
                    displaysubones = true;
                  end else begin
                    displaysubones = false;
                  end;
                end else begin
                  if (displaysubones) then begin
                    MailVersionr.Header = Right(MailVersionr.Header,len(MailVersionr.Header)-cnt2);
                    ToolWebOutTheConfMailStyle(MailVersionr,maxchars,thecode,ltheconf,langcode,false,asamenu,WebGetArg("levelzero"),WebMenur,2,activef);
                  end;
                end;
              end;
            end;
            if (asamenu==false) then begin
              if (firstf) then begin
                ToolWebHBSDivOutFullMail(MailVersionr,ckey,thecode,ltheconf,confcode,langcode,Confr.SerNr,version,WebMenur);
                lastsortorder = MailVersionr.Sortorder;
                lastheader = MailVersionr.Header;
                firstf = false;
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure ToolWebHBSDivDisplaySearchResult(string searchstr,string theconf,string thecode,LongInt version,string disel,string langcode,LongInt maxres)
begin
  record MailVc Mailr;
  record MailVc MailVersionr;
  record MailVc Mail2r;
  string 200 ckey;
  Boolean foundf,testf;
  LongInt maxmail;
  LongInt versions;
  LongInt cnt;

  cnt = 0;
  ckey = "UserSortorder:" & theconf;
  Mailr.Sortorder = "";
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    versions = ToolWebGetProperVersion(Mailr,MailVersionr,version,theconf);
    StepForward(Mailr,versions);
    testf = foundf;
    if (MailVersionr.Version>version) then begin
      testf = false;
    end;
    if (testf) then begin
      AddToText(MailVersionr.Header,MailVersionr);
      if (StringInText(searchstr,MailVersionr)) then begin
        ToolWebGetTextLang(MailVersionr,-1,Mail2r,langcode);
        WebOutString("<p class=""textMenuLink"">");
        if (nonblank(Mail2r.Header)) then begin
          ToolWebHBSDivTextLink(Mail2r.Header,"WebHBSDivMain.hal","&webpage=" & thecode & "&theconf=" & theconf & "&mailnumber=" & Mailr.SerNr & "&version=" & version,"",langcode,false);
        end else begin
          ToolWebHBSDivTextLink(MailVersionr.Header,"WebHBSDivMain.hal","&webpage=" & thecode & "&theconf=" & theconf & "&mailnumber=" & Mailr.SerNr & "&version=" & version,"",langcode,false);
        end;
        WebOutString("</p>");
        cnt = cnt + 1;
      end;
    end;
    if (cnt>maxres) then begin
      foundf = false;
    end;
  end;
  return;
end;

global
function Boolean WebDisplayContentMenu(record WebMenuVc WebMenur,string langcode)
begin
  Boolean res;
  record WebPagesVc WPr;
  row WebPagesVc WPrw;
  Integer rwcnt,i;
  
  WPr.Code = WebMenur.LinkTo;
  if (ReadFirstMain(WPr,1,true)) then begin
    if ((WPr.PageType==0) and (WPr.OnePerWhat)) then begin
      rwcnt = MatRowCnt(WPr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WPr,i,WPrw);
        ToolWebConferenceList(WPrw.ConfCode,WebGetArg("theconf"),langcode,-1,true,true,WebMenur);
      end;
      res = true;
    end;
  end;
  WebDisplayContentMenu = res;
  return;
end;

global
procedure ToolWebHBSDivPublicConference(string thecode,string langcode,LongInt maxchars)
begin
  record WebMenuVc WebMenur;
  
  RecordNew(WebMenur);
//  WebOutString("<table cellspacing=""6"" border=""0"">");
  ToolWebConferenceList(thecode,WebGetArg("theconf"),langcode,maxchars,false,false,WebMenur);
//  WebOutString("</table>");
  return;
end;

//## HANSAMANUALS is hardcoded, should NOT be, should remember previous webpage in a variable. ##
global
procedure ToolWebHBSDivListVersions(record WebPagesVc WPr,string langcode)
begin
  record WebMenuVc WebMenur;
  row WebMenuVc WebMenurw;
  row WebPagesVc WPrw;
  string 200 thesel;
  Integer rownr,i,rwcnt;
  Integer menulevel;
  string 200 comment;
  
  WebMenur.Code = WebGetArg("vermenucode");
  if (ReadFirstMain(WebMenur,1,true)) then begin
    comment = WebMenur.Comment;
    rwcnt = MatRowCnt(WebMenur);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(WebMenur,i,WebMenurw);
      if (langcode==WebMenurw.LangCode) then begin
        comment = WebMenurw.Comment;
      end;
    end;
    menulevel = 0;
    rownr = 0;
    rwcnt = MatRowCnt(WPr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(WPr,i,WPrw);
      ToolWebHBSDivMenuItem(comment & " " & WPrw.DropDownNewsCode,"WebHBSDivMain.hal",WebMenur.ExtraArgs & "&function=" & WPr.HALFunc & "&version=" & WPrw.ConfCode & "&webpage=" & "HANSAMANUALS" /*WPr.Code*/ & "&levelzero=" & WebGetArg("levelzero") & "&theconf=" & WebGetArg("theconf") & "&mailnumber=" & WebGetArg("mailnumber"),WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
    end;
  end;
  return;
end;

/*
global
procedure ToolWebFAQNewQuestion(string whichone,string langcode,LongInt norofmails,LongInt maxchars)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  LongInt loopcnt;
  LongInt maxmail;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  string 255 llink;

  loopcnt = 0;
  GetConfInfo(whichone,confname,confcode,maxmail);
  if (norofmails>0) then begin
    maxmail = norofmails;
  end;
  WebOutNL;
  WebOutString("<table width=""480"" border=""0"" cellpadding=""3"">");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"">");
  WebOutNL;
  WebOutString("<form name=""HansaForm"" method=""post"" action=""");
  llink = ToolWebBuildLink("WebHBSDivFAQDoNewQuest.hal","&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  ToolWebHiddenField("WEBPAGE",WebGetArg("WEBPAGE"));
//  ToolWebHiddenField("WEBPAGE","NEWQUEST"); // Hardcoded code, not good.
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        ToolWebHBSDivOutTextLang(Mailr,confcode,Mailr.Header,langcode);
      end;
    end;
  end;
  WebOutString("</form>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutNL;
  return;
end;
*/

global
procedure ToolWebHBSDivFAQNewQuestionThanks(string whichone,LongInt norofmails,LongInt maxchars)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  LongInt loopcnt;
  LongInt maxmail;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  string 20 langcode;

  loopcnt = 0;
  langcode = GetWebLanguage; //Fine
  GetConfInfo(whichone,confname,confcode,maxmail);
  if (norofmails>0) then begin
    maxmail = norofmails;
  end;
  WebOutNL;
  ckey = "UserSubject:" & confcode;
  foundf = true;
  WebOutString("<table width=""480"" border=""0"" cellpadding=""3"">");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"">");
  WebOutNL;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        ToolWebHBSDivOutTextLang(Mailr,confcode,Mailr.Header,langcode);
      end;
    end;
  end;
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutNL;
  return;
end;

Function
Boolean ToolWebSearchMailLang(record MailVc Mailr,string searchstr,string langcode,Boolean alllangs)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean res,langfound;

  res = false;
  langfound = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (alllangs==false) then begin
      if (langcode==Noter.LangCode) then begin
        langfound = true;
        AddToText(Right(RLr.Comment,Len(RLr.Comment)-3),Noter);
        if (StringInText(searchstr,Noter)) then begin
          res = true;
          goto LWebSML;
        end;
      end;
    end else begin
      AddToText(Right(RLr.Comment,Len(RLr.Comment)-3),Noter);
      if (StringInText(searchstr,Noter)) then begin
        res = true;
        goto LWebSML;
      end;
    end;
  end;
  if ((langfound==false) or (alllangs)) then begin
    AddToText(Right(Mailr.Header,Len(Mailr.Header)-3),Mailr);
    if (StringInText(searchstr,Mailr)) then begin
      res = true;
    end;
  end;
LWebSML:;
  ToolWebSearchMailLang = res;
  return;
end;

// We don't have attachements anymore, but I will leave the code, it might be useful
Function
Boolean ToolWebSearchMailLangAnswers(record MailVc Mailr,string searchstr,string langcode,Boolean alllangs)
begin
  record MailVc Mail2r;
  record RLinkVc RLr;
  Integer cnt;
  Boolean res,langfound;

  res = false;
  langfound = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Mail2r,RLr)) begin
    cnt = cnt + 1;
    if (ToolWebSearchMailLang(Mail2r,searchstr,langcode,alllangs)) then begin
      res = true;
      goto LWebSMLA;
    end;
  end;
  if ((langfound==false) or (alllangs)) then begin
    AddToText(Right(Mailr.Header,Len(Mailr.Header)-3),Mailr);
    if (StringInText(searchstr,Mailr)) then begin
      res = true;
    end;
  end;
LWebSMLA:;
  ToolWebSearchMailLangAnswers = res;
  return;
end;

procedure ToolWebFAQSearchConf(string whichone,string searchstr,string langprefix,string langcode,Boolean squestion,Boolean sanswer,Boolean alllangs)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf,testf;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;

  GetConfInfo(whichone,confname,confcode,maxmail);
  ckey = "UserSubject:" & confcode;
  foundf = true;
  Mailr.Header = langprefix;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    testf = true;
    if (foundf==false) then begin
      testf = false;
    end;
    if ((squestion==false) and (sanswer==false)) then begin
      testf = false;
    end;
    if (nonblank(langprefix)) then begin
      if (Left(Mailr.Header,3)!=langprefix) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      if (squestion) then begin
        if (ToolWebSearchMailLang(Mailr,searchstr,langcode,alllangs)==false) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      if (sanswer) then begin
        if (ToolWebSearchMailLangAnswers(Mailr,searchstr,langcode,alllangs)==false) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      ToolWebOutTheMailOneLink(Mailr,langcode,255);
    end;
  end;
  return;
end;

procedure GetLangPrefix(var string langprefix)
begin
  switch (CurrentCompany) begin
    case 19: langprefix = "DEN";
    case 25: langprefix = "EST";
    case 74: langprefix = "RAM";
    case 40: langprefix = "FIN";
    case 26: langprefix = "LAT";
    case 28: langprefix = "LIT";
    case 24: langprefix = "NOR";
    case 36: langprefix = "POL";
    case 29: langprefix = "RUS";
    case 39: langprefix = "SWE";
    case 63: langprefix = "ENG";
    case 37: langprefix = "ENG";
    otherwise langprefix = "";
  end;
  return;
end;

global
procedure ToolWebHBSDivFAQSearchResult(var string searchstr,string frompage,string prod,string langcode,string where)
begin
  record WebPagesVc WPr;
  row WebPagesVc WPrw;
  Integer rwcnt,i;
  Boolean squestion,sanswer,alllangs;
  Integer oldcomp;
  Boolean res;
  string 20 langprefix;

  GetLangPrefix(langprefix);
  if (searchstr=="*") then begin
    searchstr = " ";
  end;
  squestion = true;
  sanswer = false;
  alllangs = false;
  oldcomp = CurrentCompany;  
  res = SetCompany(1,false);
  WPr.Code = frompage;
  if (ReadFirstMain(WPr,1,true)) then begin
    rwcnt = MatRowCnt(WPr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(WPr,i,WPrw);
      ToolWebFAQSearchConf(WPrw.ConfCode,searchstr,langprefix,langcode,squestion,sanswer,alllangs);
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure ToolWebHBSDivFAQDoNewQuest2(string custcode,string langcode)
begin
  record CUVc CUr;
  record WebPagesVc WPr;
  record ConfVc Confr;
  row WebPagesVc WPrw;
  Integer rwcnt,i,selected;
  Boolean foundf;
  string 10 cucodpart;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  string 200 tstr;
  string 200 defmailaddr;
  string 20 langprefix;
  string 255 llink;

  GetLangPrefix(langprefix);
  CUr.Code = custcode;
  foundf = ReadFirstMain(CUr,1,true);
  defmailaddr = CUr.eMail;
  WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
  llink = ToolWebBuildLink("/WebMailSend.hal","&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("<p>");
  WebOutString("<table width=""480"" border=""0"" cellpadding=""3"">");
  GetConfInfo("WEBQUESTIONS" & langprefix,confname,confcode,maxmail);
  if (blank(confname)) then begin
    GetConfInfo("WEBQUESTIONS",confname,confcode,maxmail);
  end;
  ToolWebHiddenField("to_field",confname);
  ToolWebHiddenField("cc_field","");
  ToolWebHiddenField("subject_field","Question from " & CUr.Name);
  ToolWebHiddenField("date_field",CurrentDate);
  ToolWebHiddenField("backpage",ToolWebBuildLink("WebHBSDivNewQuestThanks.hal",""));
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20060) & "(*)","from_field","text",defmailaddr,false);
  ToolWebHiddenField("dummy","dummy");

  WebOutString("<tr>");
  WebOutString("<td colspan=""2"" valign=""top"" align=""left"">");
  WebOutString("<textarea rows=""20"" name=""mail_body"" cols=""60"" class=""deftxt"">");
  WebOutString("</textarea>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("<tr>");
  ToolWebGetTheText(20074,tstr);
  WebOutString("<td colspan=""2"" align=""left"" valign=""top""><input type=""submit"" value=""" & tstr & """ name=""b1""></td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  return;
end;

