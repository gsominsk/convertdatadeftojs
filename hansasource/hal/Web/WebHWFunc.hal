external function string 200 GetWebLanguage();
external procedure ToolWebOutMailText(record MailVc,string);

// WebHBSFunc.hal (can stay)
external procedure ToolWebGetHeaderLang(record MailVc,var string);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external procedure ToolWebOutTextLang(record MailVc,string); // Should be redone, three first chars for sorting is wierd
external procedure ToolWebGetTheText(Integer,var string); // For now...
external procedure ToolWebGetTextLang(record MailVc,LongInt,record MailVc,string);
external procedure PrintHeaderLang(string,string,string);

// WebHWHtml.hal
external procedure WebHWDisplayLink2(Boolean,string,string,string,string,Boolean,string,string,Boolean);

// WebHWMain.hal
external procedure WebHWReadMore(string);

procedure WebHWDisplayLink(record WebMenuVc WebMenur,string comment,string theclickstr,Boolean stacked,Boolean withframes)
begin
  record WebPagesVc WPr;
  
  WPr.Code = WebMenur.LinkTo;
  if (ReadFirstMain(WPr,1,true)) then begin
    switch (WPr.PageType) begin
      case 0: // Page with Conferece Contents
        WebHWDisplayLink2(stacked,comment,"WebHWMagicList.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 1: // Dropdown list
        WebHWDisplayLink2(stacked,comment,"WebHWMagicList.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 2: // Own HAL Function
        WebHWDisplayLink2(stacked,comment,WPr.HALFunc,WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 3: // Login
        WebHWDisplayLink2(stacked,comment,"WebHWLogin.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 4: // Logout
        WebHWDisplayLink2(stacked,comment,"WebWHLogout.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 5: // Shopping Basket
        WebHWDisplayLink2(stacked,comment,"WebHWShopBasket.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 6: // Item Browse
        WebHWDisplayLink2(stacked,comment,"WebHWCustItems.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 7: // Search
        WebHWDisplayLink2(stacked,comment,"WebHWSearchView.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 8: // New Customer
        WebHWDisplayLink2(stacked,comment,"WebHWRegister.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 9: // New Password
        WebHWDisplayLink2(stacked,comment,"WebHWNewPasswd.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 10: // Order Report
        WebHWDisplayLink2(stacked,comment,"WebCustOrderJournal.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
// 11 - 20 used in HBSDivFunc
      case 21: // PO Shopping Basket
        WebHWDisplayLink2(stacked,comment,"WebHWPOShopBasket.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 22: // PO Item Browse
        WebHWDisplayLink2(stacked,comment,"WebHWPOItems.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 23: // PO Search
        WebHWDisplayLink2(stacked,comment,"WebHWPOSearchView.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
      case 24: // PO Report
        WebHWDisplayLink2(stacked,comment,"WebCustPOJournal.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
    end;
  end else begin
    WebHWDisplayLink2(stacked,comment,WebMenur.LinkTo,WebMenur.ExtraArgs & theclickstr,WebMenur.Target,WebMenur.NoSession==1,WebMenur.GoToURL,WebMenur.LinkPict,withframes);
  end;
  return;
end;

global
procedure WebHWAddLeftMenubar(string menustr,string clicked,string langstr,Boolean withframes)
begin
  record WebMenuVc WebMenur;
  record WebMenuVc WebMenu2r;
  row WebMenuVc WebMenurw;
  string 60 ckey;
  string 60 ckey2;
  string 200 comment;
  Boolean found,found2;
  Integer rwcnt,i;
  string 60 theclick;
  string 100 theclickstr;
  Integer oldcomp;
  Boolean res;
  
  oldcomp = CurrentCompany;  
  res = SetCompany(1,false);
  if (WebGetArg("clbefore")==clicked) then begin
    theclick = "";
  end else begin
    theclick = clicked;
  end;
  if (nonblank(theclick)) then begin
    theclickstr = "&clbefore=" & theclick;
  end else begin
    theclickstr = "";
  end;
  ckey = "MenuCode:" & menustr;
  found = true;
  WebMenur.Code = "";
  while (LoopKey(ckey,WebMenur,1,found)) begin
    if (found) then begin
      comment = WebMenur.Comment;
      rwcnt = MatRowCnt(WebMenur);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WebMenur,i,WebMenurw);
        if (langstr==WebMenurw.LangCode) then begin
          comment = WebMenurw.Comment;
        end;
      end;
      WebHWDisplayLink(WebMenur,comment,theclickstr,true,withframes);
      if (WebMenur.Code==theclick) then begin
        ckey2 = "MenuCode:" & theclick;
        found2 = true;
        WebMenu2r.Code = "";
        ResetLoop(WebMenu2r);
        while (LoopKey(ckey2,WebMenu2r,1,found2)) begin
          if (found2) then begin
            comment = "&nbsp;&nbsp;&nbsp;&nbsp;" & WebMenu2r.Comment;
            rwcnt = MatRowCnt(WebMenu2r);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WebMenu2r,i,WebMenurw);
              if (langstr==WebMenurw.LangCode) then begin
                comment = "&nbsp;&nbsp;&nbsp;&nbsp;" & WebMenurw.Comment;
              end;
            end;
            WebHWDisplayLink(WebMenu2r,comment,"",true,withframes);
          end;
        end;
      end;
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure WebHWAddTopMenubar(string menustr,string langstr,Boolean withframes)
begin
  record WebMenuVc WebMenur;
  row WebMenuVc WebMenurw;
  string 60 ckey;
  string 200 comment;
  Boolean found;
  Integer rwcnt,i;
  Integer oldcomp;
  Boolean res;
  
  oldcomp = CurrentCompany;  
  res = SetCompany(1,false);
  ckey = "MenuCode:" & menustr;
  found = true;
  WebMenur.Code = "";
  while (LoopKey(ckey,WebMenur,1,found)) begin
    if (found) then begin
      comment = WebMenur.Comment;
      rwcnt = MatRowCnt(WebMenur);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WebMenur,i,WebMenurw);
        if (langstr==WebMenurw.LangCode) then begin
          comment = WebMenurw.Comment;
        end;
      end;
      WebHWDisplayLink(WebMenur,comment,"",false,withframes);
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure WebHWAddCounter(string whichone)
begin
  // Dummy so far...
  return;
end;

procedure WebOutTheMail(record MailVc Mailr,LongInt maxchars,string sortorder,Boolean skipspecial,Boolean clickable,Boolean incheader)
begin
  record MailVc Mail2r;
  string 255 theheader;

  if (incheader) then begin
    theheader = Right(Mailr.Header,Len(Mailr.Header)-3);
    PrintHeaderLang(theheader,Mailr.Header,"");
  end;
  WebOutString("<font face=""Verdana, Arial, Helvetica, sans-serif"" size=""-1"">");
  if (clickable) then begin
    WebOutString("<a href=""");
    WebOutLink("WebHWMailFAQView.hal?mailnumber=" & Mailr.SerNr);
    WebOutString(""" target=""_blank"">");
  end;
  if ((maxchars>-1) and (sortorder<>"000") and ((sortorder<>"999"))) then begin
    ToolWebGetTextLang(Mailr,maxchars,Mail2r,GetWebLanguage);
    ToolWebOutMailText(Mail2r,"");
  end else begin
    if ((sortorder=="000") or ((sortorder=="999"))) then begin
      if (skipspecial==false) then begin
        ToolWebOutTextLang(Mailr,Mailr.Header);
      end;
    end else begin
      ToolWebOutTextLang(Mailr,Mailr.Header);
    end;
  end;
  if (clickable) then begin
    WebOutString("</a>");
    WebOutString("<p>");
  end;
  WebOutString("</font>");
  return;
end;

global
procedure WebHWMailPopup(string linkto,string target,LongInt sernr)
begin
  string 200 tstr;
  string 200 thetarget;

  if (blank(target)) then begin
    thetarget = "_blank";
  end else begin
    thetarget = target;
  end;
  WebOutString("<p>");
  WebOutNL;
  WebOutString("<a href=""");
  WebOutLink(linkto & "?mailnumber=" & sernr);
  WebOutString(""" target=""" & thetarget & """>");
  ToolWebGetTheText(20056,tstr);
  WebOutString(tstr & "</a>");
  WebOutNL;
  WebOutString("</p>");
  WebOutNL;
  return;
end;

global
Function Boolean WebHWPublicMain(string thecode,LongInt norofmails,LongInt maxchars,Boolean skipspecial,Boolean clickable)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  LongInt loopcnt;
  LongInt maxmail;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  Boolean res;

  loopcnt = 0;
  res = false;
  GetConfInfo(thecode,confname,confcode,maxmail);
  if (norofmails>-1) then begin
    if (norofmails>1) then begin
      maxmail = norofmails;
    end else begin
      maxmail = 1;
    end;
  end;
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      if (sortorder<>"000") then begin
        loopcnt = loopcnt + 1;
      end;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        if (maxmail>1) then begin
          WebOutTheMail(Mailr,maxchars,sortorder,skipspecial,clickable,true);
          WebHWMailPopup("WebHWMailFAQView.hal","content",Mailr.SerNr);
        end else begin
          WebOutTheMail(Mailr,maxchars,sortorder,skipspecial,clickable,false);
          res = true;
        end;
      end;
    end;
  end;
  WebHWPublicMain = res;
  return;
end;

global
procedure WebHWPublicMailMain(string thecode,LongInt maxchars,Boolean skipspecial,Boolean clickable)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  Boolean res;
  LongInt maxmail;

  res = false;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      WebOutTheMail(Mailr,maxchars,sortorder,skipspecial,clickable,false);
      WebHWReadMore("WebHWMailView.hal?mailnumber=" & Mailr.SerNr);
    end;
  end;
  return;
end;

procedure WebHWPublicMailView(record MailVc Mailr,LongInt maxchars)
begin
  record MailVc Mail2r;
  string 100 fromfield;
  string 100 tofield;
  string 200 tstr;
  
  ToolWebGetTextLang(Mailr,maxchars,Mail2r,GetWebLanguage);
  WebOutString("<table width=""170"" border=""0"" cellpadding=""0"" cellspacing=""0"">");
  WebOutString("<tr bgcolor=""#999999"">");
  WebOutString("<td>");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""1"">");
  WebOutString("<tr bgcolor=""FF6600""> ");
  WebOutString("<td>");
  ToolWebGetTheText(20057,tstr);
  WebOutString("<div align=""right"">");
//  WebOutString("<img src=""../picts/news.gif"" width=""65"" height=""14"">");
  WebOutString("<font size=""2"" face=""Verdana, Arial, Helvetica, sans-serif""><b>");
  WebOutString(tstr);
  WebOutString("</b></font>");
  WebOutString("</div>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("<tr bgcolor=""#999999""> ");
  WebOutString("<td> ");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""1"">");
  WebOutString("<tr bgcolor=""FFFF99"">");
  WebOutString("<td>");
  WebOutString("<p align=""right""><font size=""-2"" face=""Verdana, Arial, Helvetica, sans-serif"">");
  ToolWebOutMailText(Mail2r,"");
  WebOutString("</font></p>");
  WebOutString("<p align=""right""><font size=""-2"" face=""Verdana, Arial, Helvetica, sans-serif"">");

  WebHWMailPopup("WebHWMailView.hal","",Mailr.SerNr);
  
  WebOutString("</font></p>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutNL;
  return;
end;

global
procedure WebHWPublicNews(string thecode,LongInt maxchars)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 60 confname;
  string 60 confcode;
  LongInt loopcnt,looppos,maxmail;
  Boolean foundf;

  loopcnt = 0;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "UserTime:" & confcode;
  looppos = RecordsInIndex("MailVc",ckey)+1;
  SetLoopPosition(Mailr,looppos);
  foundf = true;
  while (LoopBackKey(ckey,Mailr,1,foundf)) begin
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        WebHWPublicMailView(Mailr,maxchars);
      end;
    end;
  end;
  return;
end;

global
function Boolean WebGetItemDetails(var record WebHTMLVc WHr,string curitemno,string subcode,var Boolean onlypict)
begin
  Boolean res;

  res = false;
  onlypict = false;
  WHr.Code = curitemno;
  WHr.SubCode = subcode;
  if (ReadFirstMain(WHr,2,true)) then begin
    res = true;
    if (nonblank(WHr.PicName)) then begin
      onlypict = true;
    end;
  end;
  WebGetItemDetails = res;
  return;
end;

global
procedure WebCustOrderJournal()
begin
  record RcVc RepSpec;
  string 60 rcw;
  string 10 rep,rclass;
  record WebOrdRepBlock WebOrdRec;
  date edat;
  
  BlockLoad(WebOrdRec);
  RecordNew(RepSpec);
  RepSpec.Media = mtHttp;
  RepSpec.repname = "OrdRn";
  rcw = WebGetArg("rcw");
  rcw = "ORJRClass";
  ReportDefaults(RepSpec,rcw);
  RepSpec.f2 = CurrentCust;
  edat = AddMonth(AddDay(CurrentDate,-GetDay(CurrentDate)+1),1);
  RepSpec.sStartDate = AddMonth(edat,-WebOrdRec.NrOfMonth);
  RepSpec.sEndDate = edat;
  RepSpec.Period2Str = RepSpec.sStartDate;
  RepSpec.Period2Str = RepSpec.Period2Str & ":";
  RepSpec.Period2Str = RepSpec.Period2Str & RepSpec.sEndDate;
  RepSpec.ArtMode = WebOrdRec.DefArtMode;
  RepSpec.flags[4] = WebOrdRec.DefInvNotDel;
  RepSpec.flags[1] = WebOrdRec.DefNotInv;
  RepSpec.flags[2] = WebOrdRec.DefPartDel;
  RepSpec.flags[3] = WebOrdRec.DefFinnished;
  RepSpec.flags[9] = WebOrdRec.DefDelNotInv;
  RepSpec.flags[5] = 1;
  RepSpec.flags[12] = 1;
  RepSpec.flags[6] = 1;
  RepSpec.flags[7] = 1;
  RepSpec.AccStr = "";
  RunReport(RepSpec,0);
  return;
end;

global
procedure WebCustPOJournal()
begin
  record RcVc RepSpec;
  string 60 rcw;
  string 10 rep,rclass;
  record WebOrdRepBlock WebOrdRec;
  date edat;
  
  BlockLoad(WebOrdRec);
  RecordNew(RepSpec);
  RepSpec.Media = mtHttp;
  RepSpec.repname = "PurOrdJRn";
  rcw = WebGetArg("rcw");
  rcw = "PurOrdJRClass";
  ReportDefaults(RepSpec,rcw);
  edat = CurrentDate; //AddMonth(AddDay(CurrentDate,-GetDay(CurrentDate)+1),1);
  RepSpec.sStartDate = CurrentDate; // AddMonth(edat,-WebOrdRec.NrOfMonth);
  RepSpec.sEndDate = edat;
  RepSpec.Period2Str = RepSpec.sStartDate;
  RepSpec.Period2Str = RepSpec.Period2Str & ":";
  RepSpec.Period2Str = RepSpec.Period2Str & RepSpec.sEndDate;
  RepSpec.ArtMode = WebOrdRec.DefArtMode;
  RunReport(RepSpec,0);
  return;
end;
