external procedure ToolWebSetCustInfo(var record CUVc);
external function Boolean GetNextCustNr(var string);
external procedure ToolWebHBSDivShopLine(string,string,string,string,Boolean);
external procedure ToolWebPushButton(string,string,string);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebHBSDivInfoCell(string,string,string);
external function Boolean LoggedInTest();
external function string 200 ToolWebReturnTheText(Integer);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHBSDivSetMainTitle();
external procedure ToolWebHBSDivSetMainWithTimeout(string,string);
external procedure ToolWebHBSDivStartPage();
external procedure ToolWebHBSDivStartBody(string,string);
external procedure ToolWebHBSDivEndPage();
external procedure ToolWebStartTable();
external procedure ToolWebEndTable();
external procedure ToolWebHBSDivContactLine(string,string,string,Boolean);
external updating procedure ToolWebAddCounter(string);
external procedure ToolWebHBSDivOutTextLang(record MailVc,string,string,string);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external Function Boolean WebHBSDivPublicMain(string,string,LongInt,LongInt,Boolean,Boolean);
external function LongInt HalRandom(LongInt,LongInt);
external procedure AddTextLineToMail(string,record MailVc);
external procedure ToolWebGetTheText(Integer,var string);
external procedure ToolWebHBSDivGetConfNameLang(record ConfVc,var string,string);
external function string 200 GetWebLanguage();
external procedure ToolWebHBSDivRadioButton(string,string,Integer,Boolean);
external procedure ToolWebHBSDivStartDiv(string);
external procedure ToolWebHBSDivEndDiv(string);
external function Boolean ToolWebHBSUseLink();
external procedure WebHBSDivMain();
external function string 255 ToolWebBuildLink(string,string);

global
procedure ToolWebHBSDivDropDown(string thetext,string thename,string thecode,string langcode)
begin
  record ConfVc Confr;
  string 60 ckey;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  string 200 tstr;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  ToolWebGetTheText(20055,tstr);
  WebOutString("<option value="""">" & tstr & "</option>");
  WebOutNL;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "SubConfAddrName:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Confr,1,foundf)) begin
    if (Confr.Class!=kConfClassFolder) then begin
      ToolWebHBSDivGetConfNameLang(Confr,tstr,langcode);
      WebOutString("<option value=""" & Confr.SerNr & """>" & tstr & "</option>");
      WebOutNL;
    end;
  end;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

global
procedure WebHBSDivContactUs()
begin
  Boolean res;
  string 200 tstr;
  LongInt interestf;
  string 255 llink;
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  if ((nonblank(WebGetArg("country"))) and (nonblank(WebGetArg("companyname"))) and (nonblank(WebGetArg("phone"))) and (StringToLongInt(WebGetArg("interestFlag"))>=0) and (nonblank(WebGetArg("contactcomplete")))) then begin
    WebOutString("<p class=""heading3"">");
    WebOutString("Thank you!");
    WebOutString("</p>");
  end else begin
  WebOutString("<form method=""post"" action=""");
  llink = ToolWebBuildLink("WebHBSDivStoreContact.hal","&langcode=" & langcode & "&contactcomplete=completed");
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20059) & " (*)","companyname",WebGetArg("companyname"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20058) & " (*)","personname",WebGetArg("personname"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20069),"address1",WebGetArg("address1"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20070),"address2",WebGetArg("address2"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20071),"address3",WebGetArg("address3"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20072),"address4",WebGetArg("address4"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20073),"address5",WebGetArg("address5"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20060),"email",WebGetArg("email"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20061),"url",WebGetArg("url"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20062) & " (*)","phone",WebGetArg("phone"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20063),"fax",WebGetArg("fax"),false);
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20064),"message","",true);
  ToolWebHBSDivDropDown(ToolWebReturnTheText(20065) & "  (*)","country","CONTACTMAIN",langcode);
  interestf = -1;
  if (nonblank(WebGetArg("interestFlag"))) then begin
    interestf = StringToInt(WebGetArg("interestFlag"));
  end;
  WebOutString("<tr valign=""top""><td class=""feedback-txt"">");
  WebOutString(ToolWebReturnTheText(20134));
  WebOutString("</td>");
  WebOutString("<td class=""feedback"">");
  ToolWebHBSDivRadioButton(ToolWebReturnTheText(20129),"interestFlag",0,interestf==0);
  ToolWebHBSDivRadioButton(ToolWebReturnTheText(20130),"interestFlag",1,interestf==1);
  ToolWebHBSDivRadioButton(ToolWebReturnTheText(20131),"interestFlag",2,interestf==2);
  ToolWebHBSDivRadioButton(ToolWebReturnTheText(20132),"interestFlag",3,interestf==3);
  ToolWebHBSDivRadioButton(ToolWebReturnTheText(20133),"interestFlag",4,interestf==4);
  WebOutString("</td>");
  ToolWebLineEnd;
  ToolWebHiddenField("function",WebGetArg("function"));
  ToolWebHBSDivContactLine(ToolWebReturnTheText(20066),"","",false);
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  ToolWebGetTheText(20067,tstr);
  WebOutString("<input type=""submit"" name=""Submit"" value=""" & tstr & """>");
  ToolWebGetTheText(20068,tstr);
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & tstr & """>");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("</form>");
  end;
  return;
end;

global
updating procedure WebHBSDivStoreContact()
begin
  record ConfVc Confr;
  record MailVc Mail;
  row MailVc Mailrw;
  Boolean mailstored;
  string 255 tstr;

  Confr.SerNr = WebGetArg("country");
  if ((blank(WebGetArg("country"))) or (blank(WebGetArg("companyname"))) or (blank(WebGetArg("phone"))) or (StringToLongInt(WebGetArg("interestFlag"))<0)) then begin
    WebHBSDivMain;
  end else begin
  if (ReadFirstMain(Confr,1,true)) then begin
    RecordNew(Mail);
    Mail.SendFlag = 1;
    Mailrw.RowTyp = 1;
    Mailrw.AddrCode = "Contact Registration";
    MatRowPut(Mail,0,Mailrw);
    Mailrw.RowTyp = 0;
    Mailrw.AddrCode = Confr.AddrName;
    MatRowPut(Mail,1,Mailrw);
    Mail.Header = "Please contact: " & WebGetArg("companyname");
    AddTextLineToMail(WebGetArg("personname"),Mail);
    AddTextLineToMail(WebGetArg("companyname"),Mail);
    AddTextLineToMail(WebGetArg("address1"),Mail);
    AddTextLineToMail(WebGetArg("address2"),Mail);
    AddTextLineToMail(WebGetArg("address3"),Mail);
    AddTextLineToMail(WebGetArg("address4"),Mail);
    AddTextLineToMail(WebGetArg("address5"),Mail);
    AddTextLineToMail(WebGetArg("email"),Mail);
    AddTextLineToMail(WebGetArg("url"),Mail);
    AddTextLineToMail(WebGetArg("phone"),Mail);
    AddTextLineToMail(WebGetArg("fax"),Mail);
    AddTextLineToMail("",Mail);
    AddTextLineToMail("",Mail);
    tstr = WebGetArg("message");
    AddTextLineToMail(Left(tstr,250),Mail);
    switch (WebGetArg("interestFlag")) begin
      case 0:
        Confr.AddrName = Confr.AddrName & " FO";
        if (ReadFirstKey("AddrName",Confr,1,true)) then begin
          Mailrw.RowTyp = 0;
          Mailrw.AddrCode = Confr.AddrName;
          MatRowPut(Mail,1,Mailrw);
        end;
        ToolWebGetTheText(20129,tstr);
      case 1: ToolWebGetTheText(20130,tstr); 
      case 2: ToolWebGetTheText(20131,tstr); 
      case 3: ToolWebGetTheText(20132,tstr); 
      case 4: ToolWebGetTheText(20133,tstr); 
    end;
    AddTextLineToMail("Interested in: " & tstr,Mail);
    mailstored = RecordInsert(Mail,false);
    WebHBSDivMain;
  end;
  end;
  return;
end;

procedure AddSourceLink(string thetext,string source,string langcode)
begin
  string 255 llink;
  
  WebOutString("<p>");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivRegisterLead.hal","&company=" & WebGetArg("company") & "&langcode=" & langcode & "&leadsource=" & source & "&leadindustry=" & WebGetArg("leadindustry"));
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSDivRegisterLeadChooseSource()
begin
  Boolean found;
  record CClassVc CClassr;
  string 20 langcode;
  
  if (WebLoginStatus==3) then begin
    langcode = GetWebLanguage; //Fine
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    found = true;
    CClassr.CType = "106";
    while (LoopKey("CType",CClassr,1,found)) begin
      if (CClassr.CType!="106") then begin found = false; end;
      if (found) then begin
        AddSourceLink(CClassr.Comment,CClassr.Code,langcode);
      end;
    end;
    ToolWebHBSDivEndPage;
  end;
  return;
end;

procedure AddIndustryLink(string thetext,string industry,string langcode)
begin
  string 255 llink;
  
  WebOutString("<p>");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivRegisterLead.hal","&company=" & WebGetArg("company") & "&langcode=" & langcode & "&leadsource=" & WebGetArg("leadsource") & "&leadindustry=" & industry);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSDivRegisterLeadChooseIndustry()
begin
  Boolean found;
  record CClassVc CClassr;
  string 20 langcode;
  
  if (WebLoginStatus==3) then begin
    langcode = GetWebLanguage; //Fine
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    found = true;
    CClassr.CType = "102";
    while (LoopKey("CType",CClassr,1,found)) begin
      if (CClassr.CType!="102") then begin found = false; end;
      if (found) then begin
        AddIndustryLink(CClassr.Comment,CClassr.Code,langcode);
      end;
    end;
    ToolWebHBSDivEndPage;
  end;
  return;
end;

procedure WebHBSDivRegisterLeadSimpleLink(string thetext,string wheretogo,string langcode)
begin
  string 255 llink;
  
  WebOutString("<a href=""");
  llink = ToolWebBuildLink(wheretogo,"&company=" & WebGetArg("company") & "&langcode=" & langcode & "&leadsource=" & WebGetArg("leadsource") & "&leadindustry=" & WebGetArg("leadindustry") & "&WEBPAGE=HOME");
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  return;
end;

procedure HBSRegisterLead(Integer messageid,string langcode)
begin
  string 255 tstr,source,industry;
  string 255 llink;
  record CClassVc CClassr;
 
  if (WebLoginStatus==3) then begin
    source = WebGetArg("leadsource");
    industry = WebGetArg("leadindustry");

    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");

    WebOutString("<div>");
    WebHBSDivRegisterLeadSimpleLink(ToolWebReturnTheText(20125),"WebHBSDivRegisterLeadChooseSource.hal",langcode);
    WebOutString("&nbsp&nbsp");
    WebHBSDivRegisterLeadSimpleLink(ToolWebReturnTheText(20126),"WebHBSDivRegisterLeadChooseIndustry.hal",langcode);
    WebOutString("</div>");

    WebOutString("<form method=""post"" action=""");
    llink = ToolWebBuildLink("WebHBSDivRegisterLeadStore.hal","&company=" & WebGetArg("company") & "&langcode=" & langcode & "&leadsource=" & source & "&leadindustry=" & industry);
    if (ToolWebHBSUseLink) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
    WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
    if (messageid>0) then begin
      WebOutString("<tr>");
      WebOutNL;
      WebOutString("<td width=""28%"">&nbsp;</td>");
      WebOutNL;
      WebOutString("</tr>");
      WebOutNL;
      tstr = ToolWebReturnTheText(messageid);
      ToolWebLineStart;
      WebOutString("<td colspan=2 class=""heading3"">" & tstr & "</td>");
      ToolWebLineEnd;
    end;
    ToolWebHBSDivContactLine(ToolWebReturnTheText(20124) & " (*)","leadvatnr",WebGetArg("leadvatnr"),false);
    ToolWebHBSDivContactLine(ToolWebReturnTheText(20084),"comment",WebGetArg("comment"),false);
    
    WebOutString("<tr>");
    WebOutNL;
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutNL;
    WebOutString("</tr>");
    WebOutNL;
    WebOutString("<tr>");
    WebOutNL;
    CClassr.Code = source;
    if (ReadFirstMain(CClassr,1,true)) then begin end;
    WebOutString("<td width=""28%"" class=""feedback-txt"">" & ToolWebReturnTheText(20122) & " (*)" & "</td>");
    WebOutNL;
    WebOutString("<td width=""72%"">" & CClassr.Comment & "</td>");
    WebOutNL;       
    WebOutString("</tr>");
    WebOutNL;
    WebOutString("<tr>");
    WebOutNL;
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutNL;
    WebOutString("</tr>");
    WebOutNL;
    CClassr.Code = industry;
    if (ReadFirstMain(CClassr,1,true)) then begin end;
    WebOutString("<tr>");
    WebOutString("<td width=""28%"" class=""feedback-txt"">" & ToolWebReturnTheText(20123) & " (*)" & "</td>");
    WebOutNL;       
    WebOutString("<td width=""7%"">" & CClassr.Comment & "</td>");
    WebOutNL;       
    WebOutString("</tr>");
    WebOutNL;

    ToolWebHBSDivContactLine(ToolWebReturnTheText(20066),"","",false);
    WebOutString("<tr valign=""top"">");
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutString("<td width=""72%"">");
    ToolWebGetTheText(20067,tstr);
    WebOutString("<input type=""submit"" name=""Submit"" value=""" & tstr & """>");
    ToolWebGetTheText(20068,tstr);
    WebOutString("<input type=""reset"" name=""Reset"" value=""" & tstr & """>");
    WebOutString("</td>");
    ToolWebLineEnd;  
    WebOutString("</table>");    
    WebOutString("</form>");
    if (messageid==20115) then begin
      WebOutString("<div>");
      WebHBSDivRegisterLeadSimpleLink(ToolWebReturnTheText(20109),"WebHBSDivRegisterLeadNewCustomer.hal",langcode);
      WebOutString("</div>");
    end;
    WebOutString("<p>&nbsp;</p>");
    WebOutString("</head>");
    WebOutString("</html>");    
  end;
  return;
end;

procedure AddLeadCountryLink(string link,string thetext,string langcode,Integer company)
begin
  string 255 llink;
  
  WebOutString("<p>");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink(link,"&company=" & company & "&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSDivRegisterLeadChooseCountry()
begin
  string 20 langcode;
  
  langcode = GetWebLanguage; //Fine
  if (WebLoginStatus==3) then begin
    HBSRegisterLead(0,langcode);
  end else begin
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Denmark",langcode,19);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Estonia",langcode,25);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Estonia HansaRaama",langcode,74);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Finland",langcode,40);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Latvia",langcode,26);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Lithuania",langcode,28);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Norway",langcode,24);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Poland",langcode,36);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Russia",langcode,29);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","South Africa",langcode,37);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","Sweden",langcode,39);
    AddLeadCountryLink("WebHBSDivRegisterLeadLogin.hal","United Kingdom",langcode,63);
    ToolWebHBSDivEndPage;
  end;
  return;
end;

global
procedure WebHBSDivRegisterDealerChooseCountry()
begin
  string 20 langcode;
  
  langcode = GetWebLanguage; //Fine
  if (WebLoginStatus==3) then begin
    HBSRegisterLead(0,langcode);
  end else begin
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Denmark",langcode,19);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Estonia",langcode,25);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Estonia HansaRaama",langcode,74);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Finland",langcode,40);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Latvia",langcode,26);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Lithuania",langcode,28);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Norway",langcode,24);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Poland",langcode,36);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Russia",langcode,29);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","South Africa",langcode,37);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","Sweden",langcode,39);
    AddLeadCountryLink("WebHBSDivRegisterDealer.hal","United Kingdom",langcode,63);
    ToolWebHBSDivEndPage;
  end;
  return;
end;

global
procedure WebHBSDivRegisterLead()
begin
  string 20 langcode;
  
  langcode = GetWebLanguage; //Fine
  HBSRegisterLead(0,langcode);
  return;
end;

procedure AddCategoryLink(string thetext,string custcat,string langcode)
begin
  string 255 llink;
  
  WebOutString("<p>");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivRegisterLead.hal","&company=" & WebGetArg("company") & "&langcode=" & langcode & "&custcat=" & custcat);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

procedure WebHBSDivDropDownLeadCategory(string thetext,string thename,string defvalue)
begin
  string 200 tstr;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  if (blank(defvalue)) then begin
    ToolWebGetTheText(20055,tstr);
    WebOutString("<option value="""">" & tstr & "</option>");
  end else begin
    switch (defvalue) begin
      case "57": tstr = ToolWebReturnTheText(20127);
      case "58": tstr = ToolWebReturnTheText(20120);
    end;
    WebOutString("<option value="""">" & tstr & "</option>");
  end;
  WebOutNL;
  WebOutString("<option value=""" & "57" & """>" & ToolWebReturnTheText(20127) & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "58" & """>" & ToolWebReturnTheText(20120) & "</option>");
  WebOutNL;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

procedure WebHBSPrintRegisterDealer(string link,string langcode,Boolean dealerf)
begin
  string 255 llink;
  
  WebOutString("<form method=""post"" action=""");
  llink = ToolWebBuildLink(link,"&company=" & WebGetArg("company") & "&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20059) & "(*)","customername","text",WebGetArg("customername"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20058) & "(*)","personname","text",WebGetArg("personname"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20069),"address1","text",WebGetArg("address1"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20070),"address2","text",WebGetArg("address2"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20071),"address3","text",WebGetArg("address3"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20072),"address4","text",WebGetArg("address4"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20073),"address5","text",WebGetArg("address5"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20082) & "(*)","orgnr","text",WebGetArg("orgnr"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20062) & "(*)","phone","text",WebGetArg("phone"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20060),"email","text",WebGetArg("email"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20063),"fax","text",WebGetArg("fax"),false);
  if (dealerf) then begin
    ToolWebHBSDivShopLine(ToolWebReturnTheText(20083) & "(*)","passwd","password",WebGetArg("passwd"),false);
  end;
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20084),"message","text",WebGetArg("message"),false);
  ToolWebHBSDivShopLine(ToolWebReturnTheText(20066),"","text","",false);
  if (dealerf) then begin
    WebHBSDivDropDownLeadCategory(ToolWebReturnTheText(20112) & "(*)","custcat",WebGetArg("custcat"));
  end;
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  WebOutString("<input type=""submit"" name=""Submit"" value=""" & ToolWebReturnTheText(20067) & """>");
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & ToolWebReturnTheText(20068) & """>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  return;
end;

global
procedure WebHBSDivRegisterLeadNewCustomer()
begin
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","");
  WebHBSPrintRegisterDealer("WebHBSDivRegisterLeadStoreCustomer.hal",langcode,false);
  ToolWebHBSDivEndPage;
  return;
end;

global
updating procedure WebHBSDivRegisterLeadStoreCustomer()
begin
  record CUVc CUr;
  record CUVc tempCUr;
  Boolean storef;
  string 255 passw;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  string 20 langcode;
  
  oldcomp = CurrentCompany;
  storef = true;
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","");
  langcode = GetWebLanguage; //Fine
//  res = WebHBSDivPublicMain("WWWREGISTER",langcode,-1,-1,false,false);
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  newcomp = StringToInt(WebGetArg("company"));
  if (newcomp==0) then begin
    ToolWebHBSDivInfoCell(ToolWebReturnTheText(20087),"100%","false");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
    WebHBSPrintRegisterDealer("WebHBSDivRegisterLeadStoreCustomer.hal",langcode,false);
    storef = false;
  end;
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  

  CUr.Name = WebGetArg("customername");
  if ((storef) and (nonblank(CUr.Name))) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivRegisterLeadStoreCustomer.hal",langcode,false);
      storef = false;
    end;
  end;
  CUr.VATNr = WebGetArg("orgnr");
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivRegisterLeadStoreCustomer.hal",langcode,false);
      storef = false;
    end;
  end;
  if (storef) then begin
    RecordNew(CUr);
    CUr.Name = WebGetArg("customername");
    CUr.Person = WebGetArg("personname");
    CUr.InvAddr0 = WebGetArg("address1");
    CUr.InvAddr1 = WebGetArg("address2");
    CUr.InvAddr2 = WebGetArg("address3");
    CUr.InvAddr3 = WebGetArg("address4");
    CUr.InvAddr4 = WebGetArg("address5");
    CUr.VATNr = WebGetArg("orgnr");
    CUr.eMail = WebGetArg("email");
    CUr.Phone = WebGetArg("phone");
    CUr.Fax = WebGetArg("fax");
    CUr.AllowLogin = 1;
    CUr.Comment = WebGetArg("message");
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    RecordCopy(tempCUr,CUr);
    if (ReadFirstMain(tempCUr,1,true)) then begin
      storef = false;
    end;
    if (blank(CUr.Code)) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20086),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivRegisterLeadStoreCustomer.hal",langcode,false);
      storef = false;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone))
       ) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20087),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivRegisterLeadStoreCustomer.hal",langcode,false);
      storef = false;
    end;
  end;
  if (storef) then begin
    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    ToolWebHBSDivInfoCell(ToolWebReturnTheText(20128) & " " & CUr.Code,"100%","false");
  end else begin
    WebOutString("</td>");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("<div>");
  WebHBSDivRegisterLeadSimpleLink(ToolWebReturnTheText(20111),"WebHBSDivRegisterLead.hal",langcode);
  WebOutString("</div>");
  if (storef) then begin
    res = WebHBSDivPublicMain("WWWREGISTERDONE",langcode,-1,-1,false,false);
  end;
  ToolWebHBSDivEndPage;
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
updating procedure WebHBSDivStoreRegisterDealer()
begin
  record CUVc CUr;
  record CUVc tempCUr;
  Boolean storef;
  string 255 passw;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  string 20 langcode;
  
  oldcomp = CurrentCompany;
  langcode = GetWebLanguage; //Fine
  storef = true;
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","");
//  res = WebHBSDivPublicMain("WWWREGISTER",langcode,-1,-1,false,false);
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  newcomp = StringToInt(WebGetArg("company"));
  if (newcomp==0) then begin
    ToolWebHBSDivInfoCell(ToolWebReturnTheText(20087),"100%","false");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
    WebHBSPrintRegisterDealer("WebHBSDivStoreRegisterDealer.hal",langcode,true);
    storef = false;
  end;
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  

  CUr.Name = WebGetArg("customername");
  if ((storef) and (nonblank(CUr.Name))) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivStoreRegisterDealer.hal",langcode,true);
      storef = false;
    end;
  end;
  CUr.VATNr = WebGetArg("orgnr");
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivStoreRegisterDealer.hal",langcode,true);
      storef = false;
    end;
  end;
  if (storef) then begin
    RecordNew(CUr);
    CUr.Name = WebGetArg("customername");
    CUr.Person = WebGetArg("personname");
    CUr.InvAddr0 = WebGetArg("address1");
    CUr.InvAddr1 = WebGetArg("address2");
    CUr.InvAddr2 = WebGetArg("address3");
    CUr.InvAddr3 = WebGetArg("address4");
    CUr.InvAddr4 = WebGetArg("address5");
    CUr.VATNr = WebGetArg("orgnr");
    CUr.eMail = WebGetArg("email");
    CUr.Phone = WebGetArg("phone");
    CUr.Fax = WebGetArg("fax");
    CUr.AllowLogin = 1;
    CUr.CustCat = WebGetArg("custcat");
    CUr.Comment = WebGetArg("message");
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    RecordCopy(tempCUr,CUr);
    if (ReadFirstMain(tempCUr,1,true)) then begin
      storef = false;
    end;
    passw = WebGetArg("passwd");
    if (blank(CUr.Code)) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20086),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivStoreRegisterDealer.hal",langcode,true);
      storef = false;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone)) or
        (blank(passw))) then begin
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20087),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegisterDealer("WebHBSDivStoreRegisterDealer.hal",langcode,true);
      storef = false;
    end;
  end;
  if (storef) then begin
    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    ToolWebHBSDivInfoCell(ToolWebReturnTheText(20088) & " " & CUr.Code,"100%","false");
  end else begin
    WebOutString("</td>");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  if (storef) then begin
    res = WebHBSDivPublicMain("WWWREGISTERDEAL",langcode,-1,-1,false,false);
  end;
  ToolWebHBSDivEndPage;
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure WebHBSDivRegisterDealer()
begin
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","");
  WebHBSPrintRegisterDealer("WebHBSDivStoreRegisterDealer.hal",langcode,true);
  ToolWebHBSDivEndPage;
  return;
end;

global
procedure WebHBSDivRegisterLeadLogin()
begin
  string 255 tstr;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  string 255 llink;
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  if (WebLoginStatus==3) then begin
    WebHBSDivRegisterLead;
  end else begin
    oldcomp = CurrentCompany;
    newcomp = StringToInt(WebGetArg("company"));
    if ((newcomp>0) and (oldcomp!=newcomp)) then begin
      res1 = SetCompany(newcomp,false);
    end;  
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    WebOutString("<form name=""HansaForm"" METHOD=""POST"" action=""");
    llink = "dologin?company=" & WebGetArg("company") & "&failed=WebHBSDivRegisterLeadLogin.hal";
    if (ToolWebHBSUseLink) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
    ToolWebStartTable;
    if (nonblank(WebGetArg("failed_log_in"))) then begin
      ToolWebLineStart;
      ToolWebHBSDivInfoCell("","28%","left");
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20081),"72%","left");
      ToolWebLineEnd;
    end;
    ToolWebHBSDivContactLine(ToolWebReturnTheText(20051),"login",WebGetArg("login"),false);
    ToolWebHBSDivShopLine(ToolWebReturnTheText(20083),"passwd","password",WebGetArg("passwd"),false);
    ToolWebHiddenField("custpage",ToolWebBuildLink("WebHBSDivRegisterLead.hal","langcode=" & langcode));
//    WebHBSDivDropDownLeadCountries(ToolWebReturnTheText(20065) & " (*)","company",WebGetArg("storeincomp"));
    ToolWebEndTable;
    ToolWebPushButton(ToolWebReturnTheText(20049),"submit","name");
    WebOutString("</form>");
    ToolWebHBSDivEndPage;
    if (res1) then begin
      ResetCompany(oldcomp);
    end;
  end;
  return;
end;

global
updating procedure WebHBSDivRegisterLeadStore()
begin
  string 255 leadvatnr,country;
  record CUVc LeadCUr,oldLeadCUr,PartCUr;
  record ActVc Actr;
  row ActVc Actrw;
  record CUToCUVc CUToCUr;
  record LeadRegistBlock LRb;
  Boolean failed,reset;
  string 255 messagestr,leadindustry,leadsource;
  Integer oldcomp;
  Integer messagestrid;
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  leadvatnr = WebGetArg("leadvatnr");
  country = WebGetArg("company");
  leadindustry = WebGetArg("leadindustry");
  leadsource = WebGetArg("leadsource");

  if (blank(leadvatnr) or blank(country) or blank(leadindustry) or blank(leadsource)) then begin
    messagestrid = 20113;
    failed = true;     
  end;
  oldcomp = CurrentCompany;  
  if (SetCompanyCode(country,false)) then begin
    reset = true;
  end else begin
    messagestrid = 20114;
    failed = true;
  end;
  if (failed==false) then begin
    LeadCUr.VATNr = leadvatnr;
    if (ReadFirstKey("VATNr",LeadCUr,1,true)==false) then begin
      messagestrid = 20115;
      failed = true;
    end;
  end;  
  if (failed==false) then begin
    PartCUr.Code = CurrentCust;
    if (ReadFirstMain(PartCUr,1,true)==false) then begin
      messagestrid = 20116;
      failed = true;
    end else begin
      if (PartCUr.CustCat!="57") and (PartCUr.CustCat!="58") then begin
        messagestrid = 20117;
        failed = true;
      end;
    end;
  end;
  if (failed==false) then begin
    CUToCUr.FromCU = PartCUr.Code;
    CUToCUr.ToCU = LeadCUr.Code;
    oldcomp = CurrentCompany;  
    if (ReadLastKey("FromCU",CUToCUr,2,true)) then begin
      if (CurrentDate<=AddDay(CUToCUr.StartDate,10)) and blankdate(CUToCUr.EndDate) then begin
        messagestrid = 20118;        
        failed = true;
      end;
    end;
  end;
  if (failed) then begin
    HBSRegisterLead(messagestrid,langcode);
  end else begin
    BlockLoad(LRb);
    RecordNew(Actr);
    Actr.MainPersons = PartCUr.Code;
    Actr.TransDate = CurrentDate;
    Actr.StartTime = CurrentTime;
    Actr.CUCode = LeadCUr.Code;
    Actr.CUName = LeadCUr.Name;
    Actr.Contact = LeadCUr.Person;
    Actr.Phone = LeadCUr.Phone;
    Actr.ActType = LRb.LeadActType;
    if (blank(Actr.ActType)) then begin
      Actr.ActType = "LEAD";
    end;
    Actr.OKFlag = 1;
    Actr.TodoFlag = 1;
    Actr.CalTimeFlag = 0;
    Actr.Comment = WebGetArg("comment");
    Actr.SymbNr = kActivitySymbolOther;
    Actr.CreationDate = CurrentDate;
    if (RecordStore(Actr,false)) then begin end;
    RecordCopy(oldLeadCUr,LeadCUr);
    LeadCUr.Classification = leadindustry & "," & leadsource;
    if (RecordUpdate(oldLeadCUr,LeadCUr,true)) then begin end;    
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    WebOutString("<p class=""heading3"">");
    WebOutString(ToolWebReturnTheText(20121));
    WebOutString("</p>");
    ToolWebHBSDivEndPage;
    RecordNew(CUToCUr);
    CUToCUr.FromCU = PartCUr.Code;
    CUToCUr.ToCU = LeadCUr.Code;
    CUToCUr.StartDate = CurrentDate;
    CUToCUr.SerNr = NextSerNr("CUToCUVc",CurrentDate,-1,false,"");
    if (RecordStore(CUToCUr,false)) then begin
    end;
    
  end;
  if (reset) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

/*

procedure WebProduceProspect(string whatpage,string pageid)
begin
  WebOutString("<!-- ProspectFinder code for " & whatpage & "-->");
  WebOutString("<script language=""JavaScript"">document.write('<img src=""http://www.enecto.com/track?cust_id=54772fa9f7caf7f500f83ab6d72a7990&page_id=""");
  WebOutstring(pageid);
  WebOutString("&ref='+escape(document.referrer)+ '&tm=' + new Date().getTime() +'"" height=""1"" width=""1"" alt="""" />');</script><noscript>");
  WebOutString("<img src=""http://www.enecto.com/track?cust_id=54772fa9f7caf7f500f83ab6d72a7990&page_id=");
  WebOutstring(pageid);
  WebOutstring(""" alt="""" /></noscript><!-- End ProspectFinder -->");
  return;
end;

procedure WebHBSSetProspect(string thecode)
begin
  switch (thecode) begin
    case "COMPANY": WebProduceProspect("The Company","ff808081f923539200f9ef964e046a7b");
    case "PRODUCTS": WebProduceProspect("Products","ff808081f923539200f9ef984c1d6b7b");
    case "PRODUCTSHANSA": WebProduceProspect("Products - HF (Read More)","ff808081f923539200f9ef99cb806c6f");
    case "SOLUTIONHANSAACC": WebProduceProspect("Solutions - HF for Accounting (Read More)","ff808081f923539200f9ef9f34bc6f22");
    case "SOLUTIONHANSASALES": WebProduceProspect("Solutions - HF for Sales (Read More)","ff808081f923539200f9efa282317095");
    case "TECHNODESIGN": WebProduceProspect("Technology - Hansa and Design (Read More)","ff808081f923539200f9efa49bfb717c");
    case "TECHNOCOMM": WebProduceProspect("Technology - Hansa and Communication (Read More)","ff808081f923539200f9efa59af871fe");
    case "EDUCATION": WebProduceProspect("Education","ff808081f923539200f9efa6d7ab7294");
    case "CASESTUDIES": WebProduceProspect("Customer Stories","ff808081f923539200f9efa77f4272fb");
    case "NEWS": WebProduceProspect("News - Newsletter (Read More)","ff808081f923539200f9efa8cca77398");
  end;
  return;
end;

*/

/*
global
Function Boolean ToolWebHBSRandomMail(string thecode,string langcode)
begin
  record MailVc Mailr;
  string 60 ckey;
  LongInt maxmail,pos;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  Boolean res;

  res = false;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "UserSubject:" & confcode;
  maxmail = RecordsInIndex("MailVc",ckey);
  pos = HalRandom(0,maxmail);
  if ((pos>=0) and (pos<maxmail)) then begin
    if (LoopKey(ckey,Mailr,1,true)) then begin
      SetLoopPosition(Mailr,pos);
      if (LoopKey(ckey,Mailr,1,true)) then begin
        ToolWebHBSDivOutTextLang(Mailr,confcode,Mailr.Header,langcode);
        res = true;
      end;
    end;
  end;
  ToolWebHBSRandomMail = res;
  return;
end;

global
updating procedure WebHBSDivRandom()
begin
  Boolean res;
  string 20 langcode;
  
  langcode = GetWebLanguage; //Fine
  if (WebLoginStatus==3) then begin
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    ToolWebHBSFirstPart;
    res = WebHBSDivPublicMain("LOGGEDIN",langcode,-1,-1,false,false);
    ToolWebHBSThirdPart;
    ToolWebHBSDivEndPage;
  end else begin
    ToolWebAddCounter("COUNTER");
    ToolWebHBSDivSetMainWithTimeout(10,ToolWebBuildLink("WebHBSDivMain.hal","&company=" & WebGetArg("company") & "&langcode=" & langcode & "&WEBPAGE=HOME"));
    ToolWebHBSDivStartBody("","");
    ToolWebHBSFirstPart;
    res = ToolWebHBSRandomMail("RANDOM");
    ToolWebHBSThirdPart;
    ToolWebHBSDivEndPage;
  end;
  return;
end;

*/
/*
global
procedure WebHBSDivDropDownLead(string thetext,string thename,string classtype,string defvalue)
begin
  string 200 tstr;
  record CClassVc CClassr;
  Boolean found;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  ToolWebGetTheText(20055,tstr);
  WebOutString("<option value="""">" & tstr & "</option>");
  WebOutNL;  
  ResetLoop(CClassr);
  found = true;
  CClassr.CType = classtype;
  while (LoopKey("CType",CClassr,1,found)) begin
    if (CClassr.CType!=classtype) then begin found = false; end;
    if (found) then begin
      WebOutString("<option value=""" & CClassr.Code & """>" & CClassr.Comment & "</option>");
      WebOutNL;
    end;
  end;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

global
procedure WebHBSDivDropDownLeadCountries(string thetext,string thename,string defvalue)
begin
  string 200 tstr;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  if (blank(defvalue)) then begin
    ToolWebGetTheText(20055,tstr);
    WebOutString("<option value="""">" & tstr & "</option>");
  end else begin
    switch (defvalue) begin
      case "19": tstr = "Denmark";
      case "25": tstr = "Estonia";
      case "74": tstr = "Estonia HansaRaama";
      case "40": tstr = "Finland";
      case "24": tstr = "Norway";
      case "36": tstr = "Poland";
      case "29": tstr = "Russia";
      case "39": tstr = "Sweden";
      case "83": tstr = "United Kingdom";
    end;
    WebOutString("<option value="""">" & tstr & "</option>");
  end;
  WebOutNL;
  WebOutString("<option value=""" & "19" & """>" & "Denmark" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "25" & """>" & "Estonia" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "74" & """>" & "Estonia HansaRaama" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "40" & """>" & "Finland" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "24" & """>" & "Norway" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "36" & """>" & "Poland" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "29" & """>" & "Russia" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "39" & """>" & "Sweden" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "63" & """>" & "United Kingdom" & "</option>");
  WebOutNL;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;
*/
