external function string 200 GetWebLanguage();
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebWinBarTitle(String);
external procedure ToolWebGetTheText(Integer,var string);

global
function Boolean ToolWebHBSUseLink()
begin
  Boolean res;
  
  res = false;
  if (WebLoginStatus==3) then begin
    res = true;
  end;  
  ToolWebHBSUseLink = res;
  return;
end;


function Boolean ConvertParameter(string param,var string convparam)
begin
  Boolean res;
  record WebParamConvVc WPCr;
  
  res = false;
  convparam = "";
  WPCr.Parameter = param;
  WPCr.Paramf = 0;
  if (ReadFirstMain(WPCr,2,true)) then begin
    convparam = WPCr.Converted;
    convparam = convparam;
    res = true;
  end else begin
    goto LConvertParameter;
  end;
LConvertParameter:;
  ConvertParameter = res;
  return;
end;

function string 255 ConvertToUnderscore(string param)
begin
  Integer i,l;
  Boolean firstpart;
  string 255 fstr;
  string 255 sstr;
  string 255 res;
    
  i = 0;
  l = len(param);
  firstpart = true;
  while (i<l) begin
    switch (mid(param,i,1)) begin
      case "=":
        firstpart = false;
      case "/":
          goto LConvertToUnderscore;
      case "&":
          goto LConvertToUnderscore;
      otherwise
        if (firstpart) then begin
          fstr = fstr & mid(param,i,1);
        end else begin
          sstr = sstr & mid(param,i,1);
        end;
    end;
    i = i + 1;
  end;
LConvertToUnderscore:;
  if ((nonblank(sstr)) and (nonblank(fstr))) then begin
    res = fstr & "___" & sstr & "/";
  end else begin
    res = "";
  end;
  ConvertToUnderscore = res;
  return;
end;

function Boolean ConvertAllParameters(string linkto,string webarg,var string strres)
begin
  record WebParamConvVc WPCr;
  Integer i,l;
  Boolean addtoparam;
  string 255 param;
  string 255 converted;
  Integer oldcomp;
  Boolean res;
  
  oldcomp = CurrentCompany;
  res = SetCompany(1,false);
  if (ConvertParameter(linkto,converted)) then begin
    strres = converted & "/";
    res = true;
  end else begin
    if (left(linkto,1)!="/") then begin
      strres = "/" & linkto & "?" & webarg;
    end else begin
      strres = linkto & "?" & webarg;
    end;
    res = false;
    goto LConvertAllParameters;
  end;
  i = 0;
  addtoparam = false;
  l = len(webarg);
  while (i<l) begin
    switch (mid(webarg,i,1)) begin
      case "&":
        if (addtoparam) then begin
          if ((len(param)>0) and (right(param,1)!="=")) then begin
            if (ConvertParameter(param,converted)) then begin
              strres = strres & converted & "/";
            end else begin
              strres = strres & ConvertToUnderscore(param);
            end;
          end;
        end;
        param = "";
        addtoparam = true;
      otherwise
        if (addtoparam) then begin
          param = param & mid(webarg,i,1);
        end else begin
        end;
    end;
    i = i + 1;
  end;
  if (addtoparam) then begin
    if ((len(param)>0) and (right(param,1)!="=")) then begin
      if (ConvertParameter(param,converted)) then begin
        strres = strres & converted & "/";
      end else begin
        strres = strres & ConvertToUnderscore(param);
     end;
    end;
  end;
  WPCr.Parameter = Left(strres,len(strres)-1);
  WPCr.Paramf = 0;
  if (ReadFirstMain(WPCr,2,true)) then begin
    strres = WPCr.Converted & "/";
  end;
  strres = "/" & strres & "hwconvindex.htm"; // Hardcoded name to indicate it is a converted linkname
LConvertAllParameters:;
  ResetCompany(oldcomp);
  ConvertAllParameters = res;
  return;
end;

global
function string 255 ToolWebBuildLink(string linkto,string webarg)
begin
  string 255 res;
  string 255 lwebarg;
  Boolean testf;

  if (nonblank(webarg)) then begin
    if (left(webarg,1)!="&") then begin
      lwebarg = "&";
    end;
    lwebarg = lwebarg & webarg;
  end;
  if (true) then begin
    testf = ConvertAllParameters(linkto,lwebarg,res);
    if (InString(lwebarg,"sessionid=")==0) then begin
      if (nonblank(WebGetArg("sessionid"))) then begin
        if (testf) then begin
          res = res & "?";
        end else begin
          res = res & "&";
        end;
        res = res & "sessionid=" & WebGetArg("sessionid");
      end;
    end;
  end else begin
    res = linkto;
    if (nonblank(WebGetArg("sessionid"))) then begin
      res = res & "?sessionid=" & WebGetArg("sessionid") & lwebarg;
    end else begin
      if (nonblank(lwebarg)) then begin
        res = res & "?" & lwebarg;
      end;
    end;
  end;


/*
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
*/
  ToolWebBuildLink = res;
  return;
end;

global
procedure ToolWebHBSDivStartPage()
begin
  string 255 lang;
  
  if (nonblank(WebGetArg("langcode"))) then begin
    lang = WebGetArg("langcode");
  end else begin
    lang = "EN";
  end;
  WebOutString("<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/2000/REC-xhtml1-20000126/DTD/xhtml1-transitional.dtd"">");
  WebOutNL;
  WebOutString("<html xmlns=""http://www.w3.org/1999/xhtml"" xml:lang=""" & lang & """>");
  WebOutNL;
  WebOutString("<head>");
  WebOutNL;
  return;
end;  

global
procedure ToolWebHBSDivEndPage()
begin
  WebOutNL;
  WebOutString("</body>");
  WebOutNL;
  WebOutString("</html>");
  WebOutNL;
  return;
end;

procedure BasicMainTitle(var string wcharset)
begin
  record WebControlBlock WCr;
  string 20 lang;
  Integer oldcomp;
  Boolean res;
  
  oldcomp = CurrentCompany; // I think...
  res = SetCompany(1,false);
  BlockLoad(WCr);
  wcharset = WCr.WebCharSet;
  if (blank(wcharset)) then begin
    wcharset = "iso-8859-1";
  end;
  lang = GetWebLanguage; //Not fine, but will stay....too much work...
  switch(lang) begin
    case "lv":
      wcharset = "windows-1257";
    case "pl":
      wcharset = "iso-8859-2";
  end;
  ToolWebWinBarTitle("HansaWorld - Integrated ERP and CRM");
  WebOutNL;
  ResetCompany(oldcomp);
  return;
end;

global
procedure ToolWebHBSDivSetMainTitle()
begin
  string 60 wcharset;

  BasicMainTitle(wcharset);
  WebOutString("<meta http-equiv=""Content-Type"" content=""text/html; charset=" & wcharset & """ />");
  WebOutNL;
  WebOutString("<meta name=""robots"" content=""index, follow"" />");
  WebOutNL;
  WebOutString("<meta name=""description"" content=""");
  WebOutString("A global provider of integrated business information systems for small, medium and large companies. ");
  WebOutString("Client-server software is multiplatform, running on Windows, Mac OS X, Linux and Symbian. The solutions support WAN, online mobile access and ASP. ");
  WebOutString("Products include HansaWorld Standard ERP, HansaWorld Express and HansaWorld FirstOffice.");
  WebOutString(""" />");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivSetMainWithTimeout(string timeout,string newaddress)
begin
  string 60 wcharset;

  BasicMainTitle(wcharset);
//  WebOutString("<meta http-equiv=""Content-Type"" content=""text/html; charset=" & wcharset & """ />");
  WebOutString("<meta http-equiv=""refresh"" content=""" & timeout & "; url=" & newaddress & """ />");
  WebOutNL;
  return;
end;

function string 20 DefaultStyleName()
begin
  string 20 res;
  
  if (InString(WebHost,"firstoffice")!=0) then begin
    res = "fostyle.css";
  end else begin
    switch (WebGetArg("shoptype")) begin
      case "HWU": res = "hwustyle.css";
      case "SMARTAPP": res = "smartappstyle.css";
      otherwise
        res = "style.css";
    end;
  end;
  DefaultStyleName = res;
  return;
end;

procedure AddTheGoogleTracker(string whichone)
begin
  WebOutString("<script type=""text/javascript"" src=""http://hansaworld.com/lib/qtobject.js""></script>");
  WebOutNL;
  WebOutString("<script src=""http://www.google-analytics.com/urchin.js"" type=""text/javascript"">");
  WebOutNL;
  WebOutString("</script>");
  WebOutNL;
  WebOutString("<script type=""text/javascript"">");
  WebOutNL;
  WebOutString("_uacct = """ & whichone & """;");
  WebOutNL;
  WebOutString("urchinTracker();");
  WebOutNL;
  WebOutString("</script>");
  WebOutNL;
end;

procedure AddGoogleTracker()
begin
  switch (WebHost) begin
    case "www.hwexpress.com": ;
    case     "hwexpress.com": ;
    case "www.firstoffice.fi":  AddTheGoogleTracker("UA-324126-2");
    case     "firstoffice.fi":  AddTheGoogleTracker("UA-324126-2");
    case "www.firstoffice.nu":  AddTheGoogleTracker("UA-324126-1");
    case     "firstoffice.nu":  AddTheGoogleTracker("UA-324126-1");
    case "www.firstoffice.org": AddTheGoogleTracker("UA-123454-6");
    case     "firstoffice.org": AddTheGoogleTracker("UA-123454-6");
    case "www.firstoffice.dk":  AddTheGoogleTracker("UA-123454-6");
    case     "firstoffice.dk":  AddTheGoogleTracker("UA-123454-6");
    case "www.firstoffice.lv":  AddTheGoogleTracker("UA-123454-6");
    case     "firstoffice.lv":  AddTheGoogleTracker("UA-123454-6");
    case "www.hansaworld.fi":   AddTheGoogleTracker("UA-324126-3");
    case     "hansaworld.fi":   AddTheGoogleTracker("UA-324126-3");
    case "www.pirmaisofiss.lv": AddTheGoogleTracker("UA-1597620-2");
    case     "pirmaisofiss.lv": AddTheGoogleTracker("UA-1597620-2");
    case "shop.hansaworld.com": AddTheGoogleTracker("UA-324126-7");
    otherwise                   AddTheGoogleTracker("UA-123454-1"); // HansaWorld
  end;      
  return;
end;

global
procedure ToolWebHBSDivStartBody(string wfocusfield,string astylename)
begin
  string 200 stylename;
  
  if (nonblank(astylename)) then begin
    stylename = astylename;
  end else begin
    stylename = DefaultStyleName;
  end;
  WebOutString("<link rel=""stylesheet"" href=""/lib/" & stylename & """ type=""text/css"" />");
  WebOutNL;
  WebOutString("<script language=""JavaScript"" type=""text/javascript"">");
  WebOutNL;
  WebOutNL;
  WebOutString("function jsOpenReadMore(theURL) {");
  WebOutNL;
  WebOutString("  hansawindow = window.open(theURL,""HansaWorld"",""menubar=1,resizable=yes,scrollbars=yes,width=580"");");
//  WebOutString("  hansawindow.moveTo(0,0);");
  WebOutNL;
  WebOutString("}");
  WebOutNL;

  WebOutString("function jsOpenMovie(theURL) {");
  WebOutNL;
  WebOutString("  hansawindow = window.open(theURL,""HansaWorld"",""menubar=1,resizable=yes,scrollbars=yes,width=900,height=800"");");
//  WebOutString("  hansawindow.moveTo(0,0);");
  WebOutNL;
  WebOutString("}");
  WebOutNL;

  WebOutString("function jsOpenChat(theURL) {");
  WebOutNL;
  WebOutString("  hansawindow = window.open(theURL,""Chat"",""menubar=1,resizable=yes,scrollbars=yes,width=500,height=320"");");
//  WebOutString("  hansawindow.moveTo(0,0);");
  WebOutNL;
  WebOutString("}");
  WebOutNL;

  WebOutString("function clearDefault(el) {");
  WebOutNL;
  WebOutString("  if (el.defaultValue==el.value) el.value="""";");
  WebOutNL;
  WebOutString("}");
  WebOutNL;
  WebOutNL;

  WebOutString("function jsGoDown() {");
  WebOutNL;
  WebOutString("  location.href = ""#bottom"";");
  WebOutNL;
  WebOutString("}");
  WebOutNL;
  WebOutNL;
  
  WebOutString("</script>");
  WebOutNL;

  AddGoogleTracker;
  
  WebOutString("</head>");
  WebOutNL;
  WebOutNL;
  WebOutString("<body");
  if (nonblank(wfocusfield)) then begin
    WebOutString(" onload=""document.HansaForm." & wfocusfield & ".focus()""");
  end;
  WebOutString(">");
  WebOutNL;
  WebOutString("<a name=""toplink""/>");
  WebOutNL;
  return;
end;  

global
procedure ToolWebHBSDivNavLink(string webname,string weblink,string webarg,string webtarget,string langcode,Boolean nosess,Integer menulevel)
begin
  string 255 llink;
  string 255 plink;
  Integer i;

  if (nonblank(weblink)) then begin
    WebOutString("<a class=""topMenuLink"" href=""");  
    if (nosess) then begin
      llink = weblink;
      WebOutString(llink);
    end else begin
      plink = "&company=" & WebGetArg("company");
      plink = plink & "&langcode=" & langcode;
      if (nonblank(webarg)) then begin
        if (left(webarg,1)!="&") then begin
          plink = plink & "&";
        end;
        plink = plink & webarg;
      end;
      if (left(weblink,4)=="http") then begin
          WebOutString(weblink & "?sessionid=" & WebGetArg("sessionid") & plink);
      end else begin
        llink = ToolWebBuildLink(weblink,plink);
        if (ToolWebHBSUseLink) then begin
          WebOutLink(llink);
        end else begin
          WebOutString(llink);
        end;
      end;
    end;
    WebOutString(""">");  
  end;
  WebOutNL;
  for (i=0;i<menulevel;i=i+1) begin
    WebOutString("&nbsp;");
  end;
  WebOutString(webname);
  WebOutNL;
  if (nonblank(weblink)) then begin
    WebOutString("</a>");
  end;
//  WebOutString("&nbsp;");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivTextLink(string webname,string weblink,string webarg,string webtarget,string langcode,Boolean nosess)
begin
  string 255 llink;
  string 255 plink;

  if (nonblank(weblink)) then begin
    WebOutString("<a class=""textMenuLink"" href=""");  
    if (nosess) then begin
      llink = weblink;
      WebOutString(llink);
    end else begin
      plink = "&company=" & WebGetArg("company");
      plink = plink & "&langcode=" & langcode;
      if (nonblank(webarg)) then begin
        if (left(webarg,1)!="&") then begin
          plink = plink & "&";
        end;
        plink = plink & webarg;
      end;
      if (left(weblink,4)=="http") then begin
          WebOutString(weblink & "?sessionid=" & WebGetArg("sessionid") & plink);
      end else begin
        llink = ToolWebBuildLink(weblink,plink);
        if (ToolWebHBSUseLink) then begin
          WebOutLink(llink);
        end else begin
          WebOutString(llink);
        end;
      end;
    end;
    if (nonblank(webtarget)) then begin
      WebOutString(""" target=""" & webtarget & """>");
    end else begin
      WebOutString(""">");
    end;
  end;
  WebOutNL;
  WebOutString(webname);
  WebOutNL;
  if (nonblank(weblink)) then begin
    WebOutString("</a>");
  end;
  WebOutString("&nbsp;");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivExtraLink(string webname,string weblink,string webarg,string webtarget,string langcode,Boolean nosess)
begin
  string 255 llink;
  string 255 plink;

  if (nonblank(weblink)) then begin
    WebOutString("<img src=""/gfx/dot04.gif""/>");
    WebOutString("<a href=""");  // class=""listsMenuLink""
    if (nosess) then begin
      llink = weblink;
      WebOutString(llink);
    end else begin
      plink = "&company=" & WebGetArg("company");
      plink = plink & "&langcode=" & langcode;
      if (nonblank(webarg)) then begin
        if (left(webarg,1)!="&") then begin
          plink = plink & "&";
        end;
        plink = plink & webarg;
      end;
      if (left(weblink,4)=="http") then begin
          WebOutString(weblink & "?sessionid=" & WebGetArg("sessionid") & plink);
      end else begin
        llink = ToolWebBuildLink(weblink,plink);
        if (ToolWebHBSUseLink) then begin
          WebOutLink(llink);
        end else begin
          WebOutString(llink);
        end;
      end;
    end;
    WebOutString(""">");
  end;
  WebOutNL;
  WebOutString(webname);
  WebOutNL;
  if (nonblank(weblink)) then begin
    WebOutString("</a>");
  end;
  WebOutString("&nbsp;");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivMenuItem(string webname,string weblink,string webarg,string webtarget,string langcode,Boolean nosess,Integer menulevel,Boolean withicon,Boolean activef)
begin
  string 255 plink;
  string 255 llink;
  Integer i;
  
  if (withicon) then begin
    WebOutString("<img src=""/art/dot01.gif"" class=""dot01"" height=""11"" width=""21"" alt="""" />");
  end;
  if (activef==false) then begin
    WebOutString("<a class=""leftMenuLink"" href=""");
  end else begin
    WebOutString("<a class=""leftMenuLinkClicked"" href=""");
  end;
  if (nosess) then begin
    llink = weblink;
    WebOutString(llink);
  end else begin
    plink = "&company=" & WebGetArg("company");
    plink = plink & "&langcode=" & langcode;
    if (nonblank(webarg)) then begin
      if (left(webarg,1)!="&") then begin
        plink = plink & "&";
      end;
      plink = plink & webarg;
    end;
    if (left(weblink,4)=="http") then begin
        WebOutString(weblink & "?sessionid=" & WebGetArg("sessionid") & plink);
    end else begin
      llink = ToolWebBuildLink(weblink,plink);
      if (ToolWebHBSUseLink) then begin
        WebOutLink(llink);
      end else begin
        WebOutString(llink);
      end;
    end;
  end;
  WebOutString(""">");
  for (i=0;i<menulevel;i=i+1) begin
    WebOutString("&nbsp;");
  end;
  if (len(webname)>19) then begin
    llink = Left(webname,18) & "...";
//    llink = Left(webname,18) & "<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" & Mid(webname,18,len(webname)-18);
  end else begin
    llink = webname;
  end;
  WebOutString(llink);
  WebOutNL;
  WebOutString("</a>");  
  WebOutNL;
  WebOutString("<br />");  
  WebOutNL;
  return;
end;

// Should probably be removed...
global
procedure ToolWebHBSDivMenuFile(string webname,string webarg,Boolean withicon)
begin
  string 255 plink;
  string 255 llink;
  Integer i;
  
  if (withicon) then begin
    WebOutString("<img src=""/art/dot01.gif"" class=""dot01"" height=""11"" width=""21"" alt="""" />");
  end;
  WebOutString("<a class=""leftMenuLink"" href=""");
  if (nonblank(webarg)) then begin
    plink = plink & webarg;
  end;
//  llink = ToolWebBuildLink("http://localhost:1080/WebHBSDivFileOut.hal",plink);
//  WebOutLink("/WebHBSDivFileOut.hal?" & plink);
  WebOutString("http://localhost:1080/WebHBSDivFileOut.hal"); // & plink);
  WebOutString(""">");
  if (len(webname)>19) then begin
    llink = Left(webname,18) & "...";
  end else begin
    llink = webname;
  end;
  WebOutString(llink);
  WebOutNL;
  WebOutString("</a>");  
  WebOutNL;
  WebOutString("<br />");  
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivContactLine(string thetext,string thename,string preval,Boolean freetext)
begin  
  WebOutString("<tr>");
  WebOutNL;
  if (nonblank(thename)) then begin
    WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
    WebOutNL;
    WebOutString("<td width=""72%"">");
    WebOutNL;
    if (freetext) then begin
      WebOutString("<textarea name=""" & thename & """ maxlength=255 cols=""30"" rows=""5"" class=""feedback""></textarea>");
    end else begin
      WebOutString("<input value=""" & left(preval,60) & """ type=""text"" maxlength=60 name=""" & thename & """ size=""31"" class=""feedback"">");
    end;
    WebOutNL;
    WebOutString("</td>");
  end else begin
    WebOutString("<td colspan=2 class=""feedback-comment"">" & thetext & "</td>");
  end;
  WebOutNL;
  WebOutString("</tr>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivLoginLine(string thetext,string thename,string webtype,string preval)
begin  
  WebOutString("<tr>");
  WebOutNL;
  if (nonblank(thename)) then begin
    WebOutString("<td class=""partnerlogin"" align=""right"">" & thetext & "</td>");
    WebOutNL;
    WebOutString("<td class=""partnerlogin"">");
    WebOutNL;
    WebOutString("<input value=""" & left(preval,60) & """ type=""" & webtype & """ maxlength=60 name=""" & thename & """ size=""6"">");
    WebOutNL;
    WebOutString("</td>");
  end else begin
    WebOutString("<td colspan=2 class=""partnerlogin"">" & thetext & "</td>");
  end;
  WebOutNL;
  WebOutString("</tr>");
  WebOutNL;
  return;
end;


// WebHBSShop files uses these functions

global
procedure ToolWebHBSDivListTable(Integer wcols,Integer wwidth,string bsize)
begin
  string 20 locwidth;
  string 5 thebsize;
  
  thebsize = bsize;
  if (blank(thebsize)) then begin
    thebsize = "1";
  end;
  locwidth = "100%";
  if (wwidth>0) then begin
    locwidth = wwidth;
  end;
  WebOutString("<table BORDER=""" & thebsize & """ cellpadding=""0"" cellspacing=""0"" bordercolorlight=black "); // bgcolor=""#CCCCCC""
  WebOutSTring("bordercolordark=black bordercolor=black COLS=""" & wcols & """ WIDTH=""" & locwidth & """ align=left>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivListTableEnd()
begin
  WebOutString("</table>");
  return;
end;

global
procedure ToolWebHBSDivTableHdr(string webname,string thealign,string webwidth)
begin
  string 20 localign;

  localign = thealign;
  if (blank(localign)) then begin
    localign = "left";
  end;
  WebOutString("<td width=""" & webwidth & """ align=""" & thealign & """ class=""heading3"">");
  WebOutNL;
  WebOutString(webname);
  WebOutNL;
  WebOutString("</td>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivEditFieldBrowse(string webname,string webtype,string wvalue,string wwidth,Integer wsize,Integer wlen,Integer rwt)
begin
  string 20 bgcolr;

  if (rwt==1) then begin
    bgcolr = "#CCCCFF";
  end;
  if (rwt!=1) then begin
    bgcolr = "#FFFFFF";
  end;
  WebOutString("<td bgcolor=""" & bgcolr & """ width=""" & wwidth & """ valign=""center"" align=""left"">");
  WebOutString("<input class=""s10"" type=""" & webtype & """ name=""" & webname & """  size=""" & wsize & """ MAXLENGTH=""" & wlen & """ value=""" & wvalue & """></td>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivTableData(string webname,string weblink,string webarg,string thealign,string thesize,string target,Integer rwt)
begin
  string 255 llink,tstr;
  string 20 localign;

  localign = thealign;
  if (blank(localign)) then begin
    localign = "left";
  end;

  tstr = "<td size=""2"" align=""" & localign & """ class=""listsMenuLink"" ";
  if (nonblank(thesize)) then begin
    tstr = tstr & "width=""" & thesize & """";
  end;
  tstr = tstr & ">";
  WebOutNL;
  WebOutString(tstr);
  WebOutNL;
  if (nonblank(weblink)) then begin
    tstr = "<a";
    tstr = tstr & " href=""";
    WebOutString(tstr);
    llink = ToolWebBuildLink(weblink,webarg);
    if (ToolWebHBSUseLink) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
  end;
  WebOutNL;
  
  if (webname=="READ") then begin
    WebOutSTring("<img src=""read.jpg"" border=""0"" alt="""" />");
    goto L55;
  end;
  if (webname=="UNREAD") then begin
    WebOutSTring("<img src=""unread.jpg"" border=""0"" alt="""" />");
    goto L55;
  end;
  
  if (nonblank(webname)) then begin
    WebOutString(webname);
  end else begin
    WebOutString("&nbsp;");
  end;

L55:;
  if (nonblank(weblink)) then begin
    WebOutString("</a>");
  end;
  WebOutString("</td>");
  return;
end;

global
procedure ToolWebHBSDivItemListMenu(string webname,string weblink,string webarg,string webtarget,var Integer rwt)
begin
  string 255 llink;

  WebOutString("<tr><td width=""100%"" align=""left"">");
  WebOutNL;
  WebOutString("<a class=""headerlistMenuLink"" href=""");
  llink = ToolWebBuildLink(weblink,webarg);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");  
  WebOutString(webname);
  WebOutNL;
  WebOutString("</a>");  
  WebOutString("</td></tr>");  
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivCommentAndLink(string webcomment,string webname,string weblink,string webarg,string webtarget)
begin
  string 255 llink;

  ToolWebLineStart;
  WebOutString("<td class=""deftxt"">" & webcomment & "&nbsp;&nbsp;</td>");
  WebOutNL;
  WebOutString("<td class=""deftxt"">");  
  WebOutString("<a class=""shopprodMenuLink"" href=""");
  llink = ToolWebBuildLink(weblink,webarg);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");  
  WebOutString(webname);
  WebOutNL;
  WebOutString("</a>");  
  WebOutString("</td>");  
  ToolWebLineEnd;
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivBanner(string webcomment,string weblink,string webdeflink,string webarg,string webtarget)
begin
  string 255 llink;
  Boolean decryptf;

  if (blank(weblink)) then begin
    if (nonblank(webarg)) then begin
      llink = ToolWebBuildLink(webdeflink,webarg);
      decryptf = ToolWebHBSUseLink;
    end;
  end else begin
    if (nonblank(webarg)) then begin
      llink = ToolWebBuildLink(weblink,webarg);
      decryptf = ToolWebHBSUseLink;
    end else begin
      llink = weblink;
      decryptf = false;
    end;
  end;
  if (nonblank(llink)) then begin
    WebOutString("<a href=""");
    WebOutNL;
    if (decryptf) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
    WebOutNL;
  end;
  WebOutString("<img border=""0"" src=""/" & webcomment & """ alt="""" />");
  WebOutNL;
  if (nonblank(llink)) then begin
    WebOutString("</a>");  
    WebOutNL;
  end;
  return;
end;

global
procedure ToolWebHBSDivInfoCell(string weba,string wwidth,string thealign)
begin
  string 20 localign;

  localign = thealign;
  if (blank(localign)) then begin
    localign = "left";
  end;
  WebOutString("<td  width=""" & wwidth & """ align=""" & localign & """ class=""heading3"">");
  WebOutNL;
  WebOutString(weba);
  WebOutNL;
  WebOutString("</td> ");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivShopLine(string thetext,string thename,string webtype,string preval,Boolean freetext)
begin
  WebOutString("<tr>");
  WebOutNL;
  if (nonblank(thename)) then begin
    WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
    WebOutNL;
    WebOutString("<td width=""72%"">");
    WebOutNL;
    if (freetext) then begin
      WebOutString("<textarea name=""" & thename & """ maxlength=255 cols=""30"" rows=""5"" class=""feedback""></textarea>");
    end else begin
      WebOutString("<input value=""" & left(preval,60) & """ type=""" & webtype & """ type=""text"" maxlength=60 name=""" & thename & """ size=""31"" class=""feedback"">");
    end;
    WebOutNL;
    WebOutString("</td>");
  end else begin
    WebOutString("<td colspan=2 class=""feedback-comment"">" & thetext & "</td>");
  end;
  WebOutNL;
  WebOutString("</tr>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivSimpleLink(string thetext,string wheretogo,string langcode)
begin
  string 255 llink;
  
  WebOutString("<a class=""leftMenuLink"" href=""");
  llink = ToolWebBuildLink(wheretogo,"&company=" & WebGetArg("company") & "&langcode=" & langcode & "&WEBPAGE=HOME");
//  llink = "/" & wheretogo & "?company=" & WebGetArg("company") & "&langcode=" & langcode & "&WEBPAGE=HOME";
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  return;
end;

global
procedure ToolWebHBSDivRadioButton(string webname,string varname,Integer ival,Boolean checked)
begin

  WebOutString("<div id="""&varname&""" ><input type=""radio"" name=""" & varname & """");
  WebOutString(" value=""" & ival & """ ");
  if (checked) then begin
    WebOutString("checked ");
  end;
  WeboutString(">" & webname & "</div>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivStartDiv(string divname)
begin
  WebOutNL;
  WebOutString("<!-- " & divname & " start -->");
  WebOutNL;
  WebOutString("<div id=""" & divname & """>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivEndDiv(string divname)
begin
  WebOutNL;
  WebOutString("</div>");
  WebOutNL;
  WebOutString("<!-- " & divname & " end -->");
  WebOutNL;
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivStartDivClass(string divname)
begin
  WebOutNL;
  WebOutString("<!-- " & divname & " start -->");
  WebOutNL;
  WebOutString("<div class=""" & divname & """>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivEndDivClass(string divname)
begin
  ToolWebHBSDivEndDiv(divname);
  return;
end;
