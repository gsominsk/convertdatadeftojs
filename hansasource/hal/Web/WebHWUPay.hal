external procedure ToolWebHBSDivStartPage();
external procedure ToolWebHBSDivSetMainTitle();
external procedure ToolWebHBSDivStartBody(string,string);
external procedure WebSetLanguage(var string);
external procedure GetBaseCurncy(Integer,var string);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external function Boolean PasteCustInOR(var record ORVc);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure ORSumup(var record ORVc);
external procedure CalcSum(val,val,val,val,var val,Integer);
external function string 255 FindINObjects(string,string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure FindSalesExVat(record TaxMatrixVc,string,val,Integer,Integer,var val);
remote updating function Integer RecordAction_raPasteOrdInInv(var record IVVc,LongInt,Boolean,var Integer);
external function string 200 GetWebLanguage();
external function string 200 ToolWebReturnTheText(Integer);
external procedure ToolWebHBSDivEndPage();
external updating function boolean OpenCCPurchaseTransaction(val,string,string,string,var string,string,string,string,string,string,string,
                                                              integer,string,integer,
                                                              string,string,string,string,string,string,string,
                                                              var LongInt,var string);
external function Integer GetCCPurchaseParameters(string,string,integer,var string,var string,var string,var string,
                                          var string,var string,var integer,var string,var integer);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebHBSThirdPart();
external procedure WebOutStringNL(string);
external procedure ToolWebLineEnd;
// WebHBSDivShop2.hal
external function string 5 FindBestCreditCardCurrency(string);
external procedure GetCourseStr(record CourseVc,var string,var string,var string, string, var boolean);
external updating procedure WebHWUStoreForm(longint,longint,longint,string,string,string,string,string,string,string,array string,string,string,string,string);
external function string 255 TranslateString(string,string);
external procedure GetCustDetails(string,var string,var string,var string,var string,var string,var string,var string);

global
function Boolean BuildHWUWebOrd(string custcode,var record ORVc ORr,string itemcode,val participantqty,val courseprice,string langcode)
begin
  record CCatVc CCatr;
  row ORVc ORrw;
  record INVc INr;
  record PIVc PIr;
  string 100 ckey,tax2code;
  Integer rwcnt;
  Boolean Accs;
  Boolean testf,error,frf;
  Date tpd;
  Boolean res,dummyf;
  val rowsum,s,t,sum,totwe,tax2prc;
  Longint order_number;
  string 20 curitemno;
  string 100 curitemname,vecode;
  string 20 salesacc,vatcode,taxtemplatecode;
  val price,reb,cost,qty,instock;
  Boolean calcprice;
  val fr,to1,to2,br1,br2;
  record GeneralOptionBlock GenOptRec;
  record WebFreightVc WFr;
  record CUVc CUr;
  string 10 basecur1;
  string 5 ovrcurrency;
  record TaxMatrixVc TMr;
  Time blankt;

  GetBaseCurncy(1,basecur1);
  BlockLoad(GenOptRec);
  totwe = 0;
  res = false;
  rwcnt = 0;
  ovrcurrency = ORr.CurncyCode;
  RecordNew(ORr);
  ORr.CustCode = custcode;
  if (PasteCustInOR(ORr)) then begin
    ORr.CurncyCode = ovrcurrency;
    GetFullCurncyRate(ORr.CurncyCode,ORr.OrdDate,fr,to1,to2,br1,br2);
    ORr.FrRate = fr;
    ORr.ToRateB1 = to1;
    ORr.ToRateB2 = to2;
    ORr.BaseRate1 = br1;
    ORr.BaseRate2 = br2;
    
    if (ORr.CustCat<>"") then begin
      CCatr.Code = ORr.CustCat;
      if (ReadFirstMain(CCatr,1,true)) then begin
        ORr.OrderClass = CCatr.WebOrderClass;
      end;
    end;
    CUr.Code = custcode;
    if (ReadFirstMain(CUr,1,true)) then begin
      WFr.Code = CUr.FreightCode;
      frf = ReadFirstMain(WFr,1,true);
    end;

    if (true) then begin
      testf = true;
      INr.Code = itemcode;
      if (ReadFirstMain(INr,1,true)==false) then begin testf = false; end;
      if (testf) then begin
        ClearRow(ORr,ORrw,1);
        reb = BlankVal;
        price = BlankVal;
        cost = BlankVal;
        salesacc = "";
        vatcode = "";
        vecode = "";
        ORrw.vRebate = BlankVal;
        ORrw.stp = 1;
        ORrw.ArtCode = itemcode;
        ORrw.Quant = participantqty;
        qty = ORrw.Quant;
        curitemno = ORrw.ArtCode;
        if (GetItemPriceDiscount3(curitemno,qty,INr,ORr.CurncyCode,
                  ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,
                  langcode,ORr.CustCat,ORr.PriceList,ORr.RebCode,
                  price,curitemname,reb,vatcode,cost,salesacc,
                  ORr.ExportFlag,calcprice,CurrentDate,blankt,custcode,true,dummyf,ORr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)) then begin
          if (price==0) then begin
            price = courseprice;
          end;
          ORrw.Price = price;
          ORrw.vRebate = reb;
          ORrw.VATCode = vatcode;
          ORrw.BasePrice = cost;
          ORrw.SalesAcc = salesacc;
          ORrw.Spec = curitemname;
          ORrw.Objects = FindINObjects(INr.Objects,INr.Group);
        end;
        if (blank(ORrw.Spec)) then begin
          ORrw.Spec = INr.Name;
        end;
        CalcSum(ORrw.Quant,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,rowsum,GenOptRec.UseDiscount);
        ORrw.Sum = rowsum;
        if (nonblank(ORrw.ArtCode)) then begin
          t = qty*ORrw.BasePrice;
          if (ORrw.PriceFactor!=0) then begin
            t = t/ORrw.PriceFactor;
          end;
          sum = ORrw.Sum;
          s = MulRateToBase1(ORr.CurncyCode,sum,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
          UnpackRowFieldMatrix(ORrw,"TaxMatrix",TMr);
          FindSalesExVat(TMr,ORrw.VATCode,s,ORr.InclVAT,ORr.NoTAXonVAT,rowsum);
          ORrw.rowGP = rowsum - t;      /* GP    */
        end else begin
          ORrw.rowGP = 0;
          ORrw.BasePrice = 0;
        end;        
        MatRowPut(ORr,rwcnt,ORrw);
        switch (WFr.BasedOn) begin
          case 0: totwe = totwe + ORrw.Quant*INr.Volume;
          case 1: totwe = totwe + ORrw.Quant*INr.Weight;
          case 2: 
            if (INr.Volume>INr.Weight) then begin
              totwe = totwe + ORrw.Quant*INr.Volume;
            end else begin
              totwe = totwe + ORrw.Quant*INr.Weight;
            end;
          case 3: totwe = totwe + ORrw.Quant;
          case 4: totwe = totwe + ORrw.Sum;
        end;
        rwcnt = rwcnt + 1;
      end;
    end;
  end;
  ORSumup(ORr);
  if (rwcnt>0) then begin res = true; end;
  BuildHWUWebOrd = res;
  return;
end;

procedure SetCCPayTerm(var record ORVc ORr,string ccpaytype)
begin
  record CredCardTypeVc CredCardTyper;
  record WebControlBlock WCb;
  
  CredCardTyper.Code = ccpaytype;
  if (ReadFirstMain(CredCardTyper,1,true)) then begin
    ORr.PayDeal = CredCardTyper.PayTerm;
  end;
  if (blank(ORr.PayDeal)) then begin
    BlockLoad(WCb);
    ORr.PayDeal = WCb.CCPayTerm;
  end;
  return;
end;

procedure SetIVPayTerm(var record ORVc ORr)
begin
  record CustomerSettingBlock CSr;
  record PDVc PDr;
  
  BlockLoad(CSr);
  if (nonblank(CSr.DefPayDeal)) then begin
    ORr.PayDeal = CSr.DefPayDeal;
  end else begin
    if (LoopMain(PDr,0,true)) then begin
      ORr.PayDeal = PDr.Code;
    end;
  end;
  
  return;
end;

procedure AddParamsToOrder(var record ORVc ORr)
begin
  array string 20 args;
  integer i,cnt;
  row ORVc ORrw;
  
  args[0] = "courseno";
    args[1] = "companyname";
    args[2] = "addr1";
    args[3] = "postalcode";
    args[4] = "country";
    args[5] = "city";
    args[6] = "phone";
    args[7] = "email";
    args[8] = "personname1";
    args[9] = "personname2";
    args[10] = "personname3";
    args[11] = "personname4";
    args[12] = "personname5";
    args[13] = "department";
    args[14] = "title";
    args[15] = "order_personname";
    args[16] = "cust_code";
  cnt = 17;
  for (i=0;i<cnt;i=i+1) begin
    ClearRow(ORr,ORrw,17);
    ORrw.Spec = args[i] & "=" & WebGetArg(args[i]);
    MatRowPut(ORr,MatRowCnt(ORr),ORrw);
  end;
  return;
end;

procedure DoHWUBuildTheOrder(string custcode,string itemcode,val qty,val courseprice,string cctype,string shipmode,string deladdrcode,string custordnr,string ovrcurrency,var record ORVc ORr)
begin
  record INVc INr;
  record IVVc IVr;
  record IVVc oldIVr;
  record ShopBaskVc ShopBaskr;
  record ShopBaskVc oldShopBaskr;
  record DelAddrVc DelAddrr;
  row ORVc ORrw;
  string 60 cunamn;
  Integer error;
  Integer i,rwcnt;
  val totqty;
  Boolean okflag,freightf;
  Boolean foundf,testf;
  LongInt invno;
  record ORVc oldORr;
  record WebControlBlock WebControlr;
  string 5 ordclass,newordclass;
  record MainStockBlock MainStockr;
  LongInt baskno;
  LongInt orderno;
  Integer cei;

  baskno = -1;
  orderno = -1;
  invno = -1;
  BlockLoad(WebControlr);
  BlockLoad(MainStockr);
  
  okflag = BuildHWUWebOrd(custcode,ORr,itemcode,qty,courseprice,GetWebLanguage);
  if (nonblank(ovrcurrency)) then begin
    if (ovrcurrency!=ORr.CurncyCode) then begin
      RecordNew(ORr);
      ORr.CurncyCode = ovrcurrency;
      okflag = BuildHWUWebOrd(custcode,ORr,itemcode,qty,courseprice,GetWebLanguage);
    end;
  end;
  if (okflag) then begin
    ordclass = "WEB";
    newordclass = "WEB";
    if nonblank(WebControlr.FirstORClass) then begin
      newordclass = WebControlr.FirstORClass;
    end;
    if nonblank(WebControlr.ORClass) then begin
      ordclass = WebControlr.ORClass;
    end;
    ORr.OrderClass = newordclass;
    oldORr.CustCode = custcode;
    if ReadFirstKey("CustCode",oldORr,1,true) begin
      ORr.OrderClass = ordclass;
    end;
    ordclass = ORr.OrderClass;
    ORr.ShipMode = shipmode;
    ORr.DelAddrCode = deladdrcode;
    if (ORr.DelAddrCode<>"") then begin
      DelAddrr.CustCode = custcode;
      DelAddrr.DelCode = ORr.DelAddrCode;
      if (ReadFirstMain(DelAddrr,2,true)) then begin
        ORr.ShipAddr0 = ORr.Addr0;
        ORr.ShipAddr1 = DelAddrr.DelAddr0;
        ORr.ShipAddr2 = DelAddrr.DelAddr1;
        ORr.ShipAddr3 = DelAddrr.DelAddr2;
        ORr.DelAddr3 = DelAddrr.DelAddr3;
        ORr.DelAddr4 = DelAddrr.DelAddr4;
        ORr.Region = DelAddrr.Region;
      end;
    end;
    if (blank(cctype)) then begin
      if (blank(ORr.PayDeal)) then begin
        SetIVPayTerm(ORr);
      end;
    end else begin
      SetCCPayTerm(ORr,cctype);
    end;
    ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");
    if (ORr.SerNr>0) then begin
      if (blank(ORr.CustOrdNr)) then begin
        ORr.CustOrdNr = ORr.SerNr;//custordnr;
      end;
      // not entirely sure 'bout this one, especially the second part
      // not needed as function is in halcust, but consider it for standard
      if (WebControlr.ShopBaskCheckOut==1) then begin
        ORr.InvBeforeShip = 1;
      end else begin
        if (MainStockr.AllowInvBeforeShip==1) then begin
          ORr.InvBeforeShip = 1;
        end;
      end;
      if (nonblank(WebGetArg("personname1"))) then begin
        ClearRow(ORr,ORrw,1);
        ORrw.Spec = WebGetArg("personname1");
        MatRowPut(ORr,MatRowCnt(ORr),ORrw);
      end;
      if (nonblank(WebGetArg("personname2"))) then begin
        ClearRow(ORr,ORrw,1);
        ORrw.Spec = WebGetArg("personname2");
        MatRowPut(ORr,MatRowCnt(ORr),ORrw);
      end;
      if (nonblank(WebGetArg("personname3"))) then begin
        ClearRow(ORr,ORrw,1);
        ORrw.Spec = WebGetArg("personname3");
        MatRowPut(ORr,MatRowCnt(ORr),ORrw);
      end;      
      if (nonblank(WebGetArg("personname4"))) then begin
        ClearRow(ORr,ORrw,1);
        ORrw.Spec = WebGetArg("personname4");
        MatRowPut(ORr,MatRowCnt(ORr),ORrw);
      end;      
      if (nonblank(WebGetArg("personname5"))) then begin
        ClearRow(ORr,ORrw,1);
        ORrw.Spec = WebGetArg("personname5");
        MatRowPut(ORr,MatRowCnt(ORr),ORrw);
      end;      
    end;
    orderno = ORr.SerNr;
  end;
  
  return;
end;

global
updating function LongInt DoHWUStoreTheOrder(string custcode,string itemcode,val qty,val courseprice,string cctype,string shipmode,string deladdrcode,string custordnr,string ovrcurrency)
begin
  record ORVc ORr;
  boolean okflag;
  
  DoHWUBuildTheOrder(custcode,itemcode,qty,courseprice,cctype,shipmode,deladdrcode,custordnr,ovrcurrency,ORr);
  ORr.InvBeforeShip = 1;
  if (MatRowCnt(ORr)>0 and ORr.SerNr>0) then begin
    okflag = RecordInsert(ORr,true);
  end;
  
  DoHWUStoreTheOrder = ORr.SerNr;
  return;
end;

updating function LongInt HWUCreateIVFromOrder(LongInt orderno)
begin
  record IVVc IVr,oldIVr;
  LongInt invno;
  Integer errcode;
  
  invno = -1;
  RecordNew(IVr);
  IVr.OrderNr = orderno;
  if (RecordAction_raPasteOrdInInv(IVr,orderno,false,errcode)==0) then begin 
    invno = IVr.SerNr;
    RecordCopy(oldIVr,IVr);
    IVr.OKFlag = 1;
    if (RecordUpdate(oldIVr,IVr,true)) then begin end;
  end else begin        
    invno = IVr.SerNr;
  end;

  HWUCreateIVFromOrder = invno;  
  return;
end;

procedure CreateFormToPaySiteWithID(string id,string halfunc,string webargs)
begin
  record WebControlBlock WCr;
  
  BlockLoad(WCr);
  WebOutString("<form name=""HansaForm"" id=""" & id & """ method=""POST"" action=""");
  if (nonblank(WCr.ToPaySSLURL)) then begin
    WebOutString(WCr.ToPaySSLURL);
    if (right(WCr.ToPaySSLURL,1)!="/") then begin
      WebOutString("/");
    end;
  end;
  WebOutLink(halfunc & "?sessionid=" & WebGetArg("sessionid") & "&" & webargs);
  WebOutString(""" target=""_parent"">");
  return;
end;

global
updating procedure ToolWebHWUCreditCardCheckout(string langcode,string itemcode,val qty,record CourseEventVc CourseEventr)
begin
  boolean res;
  string 255 tstr;
  record WebControlBlock WCb;
  string 255 TXNumber,errmsg;
  val amount;
  string 3 curncy;
  LongInt err;
  record CUVc CUr;
  record ORVc ORr,oldORr;
  Boolean freight;
  string 20 partner;
  string 60 merchantid;
  string 20 merchantcode;
  string 10 merchantaccref;
  string 255 merchantkey;
  string 10 merchantrefundpw;
  integer merchanttestaddr;
  string 60 merchantserialnr;
  integer merchantlivef;
  string 60 name;
  string 60 addr1;
  string 60 addr2;
  string 60 addr3;
  string 60 postcode;
  string 60 country;
  string 60 lastname;
  longint orderno;
  string 10 tmpcur,localcurrency;
  val localamount;
  Array string 255 personnames;
  string 255 frompayurl;
  
  if (true) then begin
    BlockLoad(WCb);
    WebOutString("<table border=""0"" width=""100%""><tr><td width=180 valign=top>");
    WebOutString("<table border=""0"" cellspacing=""0"" cellpadding=""1"">");
    WebOutString("<tr><td>&nbsp;</td></tr>");
    WebOutString("<tr><td>");
    WebOutString("<table border=""0"" cellspacing=""0"" cellpadding=""1"" width=""100%"">");
    WebOutString("<tr><td align=""center"">");
    if (WCb.UsePaymentServer) then begin
      CreateFormToPaySiteWithID("ccpayform","WebHBSDivMainUpdate.hal","langcode=" & langcode & "&function=WebHBSDivPAYWithPayServer&shoptype=HWU" & "&sessionid=" & WebGetArg("sessionid"));
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)==false) then begin
        CUr.Name = "";
      end;

      RecordNew(ORr);
      DoHWUBuildTheOrder(CUr.Code,itemcode,qty,CourseEventr.Price,"","","","","",ORr); //temp build to get local currency & amount
      
      localcurrency = ORr.CurncyCode;
      localamount = ORr.Sum4;

      tmpcur = FindBestCreditCardCurrency(ORr.CurncyCode);
      if (tmpcur==localcurrency) then begin
        tmpcur = ""; //dont override currency
      end;
      
      orderno = DoHWUStoreTheOrder(CUr.Code,itemcode,qty,CourseEventr.Price,"","","","",tmpcur);
      ORr.SerNr = orderno;
      if (ReadFirstMain(ORr,1,true)) then begin end;
      
      txnumber = -1;
      frompayurl = "http://" & WebHost; //WCb.FromPaySSLURL; //so we dont limit ourselves to one return address
      if (GetCCPurchaseParameters(ORr.CurncyCode,"",1,
            partner,merchantid,merchantcode,merchantaccref,merchantkey,merchantrefundpw,
            merchanttestaddr,merchantserialnr,merchantlivef)==0) then begin
            
        GetCustDetails(CurrentCust,name,lastname,addr1,addr2,addr3,postcode,country);
        if (OpenCCPurchaseTransaction(ORr.Sum4,ORr.CurncyCode,frompayurl,WebGetArg("sessionid"),TXNumber,
                                      partner,merchantid,merchantcode,merchantaccref,merchantkey,merchantrefundpw,
                                      merchanttestaddr,merchantserialnr,merchantlivef,
                                      name,lastname,addr1,addr2,addr3,postcode,country,
                                      err,errmsg)) then begin
        end else begin
          LogText(0,"OpenCCPurch==false");
        end;
        
      end else begin
        LogText(0,"GetCCPurch!=0");
      end;
      ToolWebHiddenField("orderid",ORr.CustOrdNr);
      ToolWebHiddenField("currency",ORr.CurncyCode);
      ToolWebHiddenField("amount",ORr.Sum4);
      ToolWebHiddenField("txnumber",txnumber);
      ToolWebHiddenField("frompayurl",frompayurl);
      if (nonblank(tmpcur)) then begin
        ToolWebHiddenField("l_amount",localamount);
        ToolWebHiddenField("l_curncy",localcurrency);
      end;
      //add txnumber to order
      RecordCopy(oldORr,ORr);
      ORr.Addr0 = txnumber;
      ORr.Closed = 1; //to mark is as temporary
      AddParamsToOrder(ORr);
      if (RecordUpdate(oldORr,ORr,false)) then begin end;
    end else begin
      CreateFormToPaySiteWithID("ccpayform","WebHBSDivMainUpdate.hal","langcode=" & langcode & "&function=WebHBSDivShopBasketStepPAY" & "&sessionid=" & WebGetArg("sessionid"));
    end;

    WebOutString("</form>");
    WebOutString("</td></tr>");
    WebOutString("</table>");
    WebOutString("</td></tr>");
    WebOutString("<tr><td>&nbsp;</td></tr>");
    WebOutString("<tr><td>");
    WebOutString("</td></tr>");
    WebOutString("</table>");
    ToolWebHBSThirdPart;
    if (true) then begin
      WebOutString("<script>");
      WebOutNL;
      WebOutString("<!--");
      WebOutNL;
      WebOutString("document.getElementById(""ccpayform"").submit();");
      WebOutString("//-->");
      WebOutNL;
      WebOutString("</script>");
    end;
  end;
  return;
end;

updating procedure FixCCPaymentTempOrder(var record ORVc ORr)
begin
  record ORVc oldORr;
  record CUVc CUr;
  row ORVc ORrw;
  integer i,cnt;
  
  RecordCopy(oldORr,ORr);
  CUr.Code = ORr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    ORr.Addr0 = CUr.Name;
  end else begin
    ORr.Addr0 = "";
  end;
  
  ORr.Closed = 0; //this is no longer a temp invoice

  cnt = MatRowCnt(ORr);
  for (i=cnt-1;i>=0;i=i-1) begin
    MatRowGet(ORr,i,ORrw);
    if (ORrw.stp==17) then begin
      MatRowDelete(ORr,i);
    end;
  end;
  
  if (RecordUpdate(oldORr,ORr,false)) then begin end;
  return;
end;

procedure SplitText(string intext,var string name,var string value)
begin
  integer i,cnt;
  boolean before;
  string 5 ch;
  
  before = true;
  name = "";
  value = "";
  for (i=0;i<len(intext);i=i+1) begin
    ch = mid(intext,i,1); 
    if (ch=="=") then begin
      before = false;
    end else begin
      if (before) then begin
        name = name & ch;
      end else begin
        value = value & ch;
      end;
    end;
  end;
  return;
end;

procedure GetBookingParameters(longint orderno,var string courseno,var string companyname,var string addr1,var string postalcode,var string country,var string phone,var string email,var string city,
                               var array string personnames,var string department,var string title,
                               var string order_personname,var string cust_code,boolean loadparams)
begin
  record ORVc ORr;
  row ORVc ORrw;
  integer i,cnt;
  string 255 name,value;
  
  if (loadparams==false) then begin
    courseno    = WebGetArg("courseno");
    companyname = WebGetArg("companyname");
    addr1       = WebGetArg("addr1");
    postalcode  = WebGetArg("postalcode");
    country     = WebGetArg("country");
    city        = WebGetArg("city");
    phone       = WebGetArg("phone");
    email       = WebGetArg("email");
    personnames[1] = WebGetArg("personname1");
    personnames[2] = WebGetArg("personname2");
    personnames[3] = WebGetArg("personname3");
    personnames[4] = WebGetArg("personname4");
    personnames[5] = WebGetArg("personname5");
    department  = WebGetArg("department");
    title       = WebGetArg("title");
    order_personname = WebGetArg("order_personname");
    cust_code   = WebGetArg("cust_code");
  end else begin
    ORr.SerNr = orderno;
    if (ReadFirstMain(ORr,1,true)) then begin
      cnt = MatRowCnt(ORr);
      for (i=0;i<cnt;i=i+1) begin
        MatRowGet(ORr,i,ORrw);
        if (ORrw.stp==17) then begin //consider only "header lines"
          SplitText(ORrw.Spec,name,value);
          switch (name) begin
            case "courseno" : courseno = value;
            case "companyname" : companyname = value;
            case "addr1": addr1 = value;
            case "postalcode" : postalcode = value;
            case "country" : country = value;
            case "city" : city = value;
            case "phone" : phone = value;
            case "email" : email = value;
            case "personname1" : personnames[1] = value;
            case "personname2" : personnames[2] = value;
            case "personname3" : personnames[3] = value;
            case "personname4" : personnames[4] = value;
            case "personname5" : personnames[5] = value;
            case "department": department = value;
            case "title": title = value;
            case "order_personname": order_personname = value;
            case "cust_code": cust_code = value;
          end;
        end;
      end;
    end;
  end;
  return;
end;                              

procedure WebHWUShowErrorWindow(string title,string message,string langcode)
begin
    WebOutStringNL("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class="""">");
    WebOutStringNL("<tr valign=""top"">");
    WebOutStringNL("<td class=""heading2"">&nbsp;</td>");
    WebOutStringNL("</tr>");
    WebOutStringNL("</table>");
    
    WebOutStringNL("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class=""deftbl"">");
    WebOutStringNL("  <tr><th>" & title & "</th></tr>");
    WebOutStringNL("</table>");
    WebOutString("<table align=""center"" bgcolor=""#FFFFFF"" width=""90%"" cellspacing=""3"" cellpadding=""3"" border=""0"" class="""">");
    WebOutString("<tr><td colspan=""2"" width=""100%"" class=""feedback-txt"">");
    WebOutString(message);
    WebOutString("</td></tr>");

    WebOutString("<tr><td width=""28%"" class=""feedback-txt"">&nbsp;</td><td width=""72%"">&nbsp;</td></tr>");
    WebOutString("<tr valign=""top"">");
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutString("<td align=""right"" width=""72%"">");
//    WebOutString("<a href=""/WebHWUApplyForTraining.hal?company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&courseno=" & WebGetArg("courseno") 
//      & "&currentcust=" & WebGetARg("currentcust") & "&sessionid=" & WebGetArg("sessionid") & """>");
    WebOutString("<a href=""#"" onclick=""javascript:window.close()"">");
    WebOutString("<input type=""button"" name=""s1"" value=""" & TranslateString("30051",langcode) & """></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
    WebOutString("</td></tr>");
    ToolWebLineEnd;

    WebOutStringNL("</table>");  
  
  return;
end;

global
updating procedure WebHWUCompleteCreditCardPayment()
begin
  record ORVc ORr;
  string 60 txnumber;
  string 60 langcode;
  boolean res;
  LongInt invno;
  string 255 cust_code,courseno,companyname,addr1,postalcode,country,phone,email,city;
  array string 255 personnames;
  string 255 department,Title,order_personname;
  
  WebSetLanguage(langcode);

  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("",""); 
  
  ORr.Addr0 = WebGetArg("txnumber");
  if (ReadFirstKey("Name",ORr,1,true)) then begin

    GetBookingParameters(ORr.SerNr,courseno,companyname,addr1,postalcode,country,phone,email,city,
      personnames,department,title,order_personname,cust_code,true);

    FixCCPaymentTempOrder(ORr);
    invno = HWUCreateIVFromOrder(ORr.SerNr);
      
    if (invno>=0) then begin
      // return to HWU pages, create course event as per normal.
      WebHWUStoreForm(invno,ORr.SerNr,StringToLongInt(courseno),companyname,addr1,postalcode,country,phone,email,city,
        personnames,department,title,order_personname,cust_code);
      res = true;
    end;
  end;
  if (res==false) then begin
    WebHWUShowErrorWindow(TranslateString("30052",langcode),TranslateString("30053",langcode),langcode);
  end;
  
  ToolWebHBSDivEndPage;
  
  return;
end;

global
procedure WebHWUAbortCreditCardPayment()
begin
  record ORVc ORr;
  string 60 txnumber;
  string 60 langcode;
  boolean res;
  LongInt invno;
  
  WebSetLanguage(langcode);

  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","");
  
  WebHWUShowErrorWindow(TranslateString("30054",langcode),TranslateString("30055",langcode),langcode);  
  
  ToolWebHBSDivEndPage;
  
  return;
end;

function val CountParticipants()
begin
  integer i,cnt;
  
  cnt = 0;
  for (i=1;i<=5;i=i+1) begin
    if (nonblank(WebGetArg("personname" & i))) then begin cnt = cnt + 1; end;
  end;
  
  CountParticipants = cnt;
  return;
end;

updating procedure WebHWUInvoicePayment(string langcode)
begin  
  longint courseno;
  record ResVc Resr;
  record CUVc CUr;
  LongInt invno,orderno;
  boolean found_cust,translated,res;
  record CourseEventVc CourseEventr;
  record CourseVc Courser;
  string 200 tstr,currentcu;
  string 255 cust_code,coursenostr,companyname,addr1,postalcode,country,phone,email,city,artcode;
  array string 255 personnames;
  string 255 department,Title,order_personname;

  courseno = WebGetArg("courseno");
  
  CourseEventr.SerNr = courseno;
  if (ReadFirstMain(CourseEventr,1,true)) then begin end;
  Courser.Code = CourseEventr.CourseCode;
  if (ReadFirstMain(Courser,1,true)) then begin end;
  currentcu = WebGetArg("currentcust");

  artcode = CourseEventr.ItemCode;
  if (blank(artcode)) then begin
    artcode = Courser.ItemCode;
  end;
  orderno = DoHWUStoreTheOrder(currentcu,artcode,CountParticipants,CourseEventr.Price,"","","","","");
  invno = HWUCreateIVFromOrder(orderno);
  
  if (invno>=0) then begin
  
    GetBookingParameters(orderno,coursenostr,companyname,addr1,postalcode,country,phone,email,city,
      personnames,department,title,order_personname,cust_code,false);

    // return to HWU pages, create course event as per normal.
    WebHWUStoreForm(invno,orderno,courseno,companyname,addr1,postalcode,country,phone,email,city,
      personnames,department,title,order_personname,cust_code);

  end else begin
    WebHWUShowErrorWindow(TranslateString("30056",langcode),TranslateString("30057",langcode),langcode);
  end;
  return;
end;

updating procedure WebHWUCreditCardPayment(string langcode)
begin
  longint courseno;
  record CourseEventVc CourseEventr;
  record CourseVc Courser;
  string 255 artcode;

  courseno = WebGetArg("courseno");
  
  CourseEventr.SerNr = courseno;
  if (ReadFirstMain(CourseEventr,1,true)) then begin end;
  Courser.Code = CourseEventr.CourseCode;
  if (ReadFirstMain(Courser,1,true)) then begin end;

  artcode = CourseEventr.ItemCode;
  if (blank(artcode)) then begin
    artcode = Courser.ItemCode;
  end;

  // Do checkout/payment with Credit Card
  ToolWebHWUCreditCardCheckout(langcode,artcode,CountParticipants,CourseEventr);
  return;
end;

global
updating procedure WebHWUPayment()
begin
  string 60 langcode;
  integer oldcomp,newcomp;
  boolean res;
  
  WebSetLanguage(langcode);

  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res = SetCompany(newcomp,false);
  end;

  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("",""); 

  if (nonblank(WebGetArg("SubmitIV"))) then begin //invoice
    WebHWUInvoicePayment(langcode);
  end else begin 
    if (nonblank(WebGetArg("SubmitCC"))) then begin //credit card
      WebHWUCreditCardPayment(langcode);
    end;
  end;

  ToolWebHBSDivEndPage;
  
  if (res) then begin
    ResetCompany(oldcomp);
  end;
  
  return;
end;
