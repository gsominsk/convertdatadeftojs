external procedure PrintBreadCrumbs(string,string,LongInt,LongInt,record WebMenuVc);
external procedure ToolWebHBSDivStartDiv(string);
external procedure ToolWebHBSDivEndDiv(string);
external function string 20 GetWebVersion();
external function Integer ToolWebGetProperVersion(record MailVc,var record MailVc,LongInt,string);
external procedure ToolWebHBSDivOutTaggedText(record MailVc,LongInt,string,string,string);
external procedure ToolWebHBSDivPrintHeaderLang(string,string,string);
external procedure ToolWebHBSDivDisplaySearchResult(string,string,string,LongInt,string,string,LongInt);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external procedure ToolWebHBSDivGetHeaderLang(record MailVc,var string,string);
external procedure ToolWebGetTextLang(record MailVc,LongInt,record MailVc,string);
external procedure ToolWebGetTheText(Integer,var string);
external procedure ToolWebHBSDivOutTextLang(record MailVc,string,string,string);
external function string 200 GetWebLanguage();
external procedure ToolWebHBSDivShopLine(string,string,string,string,Boolean);
external procedure ToolWebPushButton(string,string,string);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebHBSDivInfoCell(string,string,string);
external function string 200 ToolWebReturnTheText(Integer);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHBSDivSetMainTitle();
external procedure ToolWebHBSDivStartPage();
external procedure ToolWebHBSDivStartBody(string,string);
external procedure ToolWebHBSDivEndPage();
external procedure ToolWebStartTable();
external procedure ToolWebEndTable();
external procedure ToolWebHBSDivContactLine(string,string,string,Boolean);
//external procedure ToolWebFAQNewQuestion(string,LongInt,LongInt);
external procedure ToolWebHBSDivFAQNewQuestionThanks(string,LongInt,LongInt);
external procedure ToolWebHBSDivFAQDoNewQuest2(string,string);
external procedure ToolWebHBSDivFAQSearchResult(var string,string,string,string,string);
external Function Boolean WebHBSDivPublicMain(string,string,LongInt,LongInt,Boolean,Boolean);
external Function Boolean CustHasEmail(string);
external procedure ToolWebHBSFirstPart();
external procedure ToolWebHBSSecondPart();
external procedure ToolWebHBSThirdPart();
external function Boolean LoggedInHBSDivTest();
external function Boolean ToolWebHBSUseLink();
external procedure AddListLink(string,string,Integer,Integer,string);
external updating procedure ToolWebAddCounter(string);
external function string 255 ToolWebBuildLink(string,string);

/*
global
updating procedure WebHBSNewQuest()
begin
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("customercode","");
  ToolWebHBSFirstPart;
  ToolWebFAQNewQuestion("FAQNEWQUEST",-1,-1);
  ToolWebHBSThirdPart;
  ToolWebHBSDivEndPage;
  return;
end;
*/

global
updating procedure WebHBSDivFAQDoNewQuest()
begin
  Boolean res;
  string 20 langcode;
  
  if (LoggedInHBSDivTest) then begin
    langcode = GetWebLanguage; //Fine
    if (CustHasEmail(CurrentCust)==false) then begin
      res = WebHBSDivPublicMain("WWWFAQNOEMAIL",langcode,-1,-1,false,false);
    end else begin
      res = WebHBSDivPublicMain("WWWFAQHASEMAIL",langcode,-1,-1,false,false);
    end;
    ToolWebAddCounter("NEWQUEST");
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("from_field","");
    ToolWebHBSDivFAQDoNewQuest2(CurrentCust,langcode);
    ToolWebHBSDivEndPage;
  end;
  return;
end;

global
updating procedure WebHBSDivNewQuestThanks()
begin
//  if (LoggedInHBSDivTest) then begin
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    ToolWebHBSFirstPart;
    ToolWebHBSDivFAQNewQuestionThanks("WWWFAQQUESTTHANKS",-1,-1);
    ToolWebHiddenField("backpage",ToolWebBuildLink("WebHBSDivNewQuestThanks.hal",""));
    ToolWebHBSThirdPart;
    ToolWebHBSDivEndPage;
//  end;
  return;
end;

procedure ToolWebShowSearchOption(string conftoshow,string langcode)
begin
  string 200 comment;
  string 200 langstr;
  string 255 llink;
  Boolean res;

  res = WebHBSDivPublicMain(conftoshow,langcode,-1,-1,false,false);
  WebOutString("<form method=""post"" action=""");
  llink = ToolWebBuildLink("WebHBSDivFAQSearch.hal","&WEBPAGE=" & WebGetArg("WEBPAGE") & "&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
  WebOutNL;
  ToolWebLineStart;
  WebOutString("<td class=""deftxt"">");
  WebOutString("<input type=""text"" name=""searchstr"" size=""40"">");
  WebOutString("</td>");
  WebOutNL;
  WebOutString("<td class=""deftxt"">");
  WebOutString("<input type=""submit"" name=""butt"" value=""Search"">");
  WebOutString("</td>");
  WebOutNL;
  ToolWebLineEnd;
  ToolWebEndTable;
  WebOutString("</form>");

  WebOutString("<p class=""deftxt"">");
  WebOutString("<a href=""");
  llink = ToolWebBuildLink("WebHBSDivFAQSearch.hal","&searchstr=*" & "&WEBPAGE=" & WebGetArg("WEBPAGE") & "&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("Show all Questions");
  WebOutString("</a>");
  WebOutNL;
  WebOutString("</p>");
  WebOutNL;
  WebOutString("<p class=""deftxt"">");
  WebOutString("<a href=""");
  llink = ToolWebBuildLink("WebHBSDivFAQDoNewQuest.hal","&WEBPAGE=" & WebGetArg("WEBPAGE") & "&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("Ask a New Question");
  WebOutString("</a>");
  WebOutNL;
  WebOutString("</p>");
  WebOutNL;
  ToolWebLineEnd;
  ToolWebEndTable;
  return;
end;

global
procedure WebHBSDivFAQ(string langcode)
begin
  string 200 comment;
  string 200 langstr;
  Boolean res;
  
  if (LoggedInHBSDivTest) then begin
    langstr = langcode;
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    ToolWebShowSearchOption("WWWFAQBEFSEARCH",langcode);
    ToolWebHBSDivEndPage;
  end;
  return;
end;

global
updating procedure WebHBSDivFAQSearch()
begin
  string 200 searchstr;
  string 20 langcode;
  
  if (LoggedInHBSDivTest) then begin
    langcode = GetWebLanguage; //Fine
    searchstr = WebGetArg("searchstr");
    if (nonblank(searchstr)) then begin
      ToolWebAddCounter("FAQSEARCH");
      ToolWebHBSDivStartPage;
      ToolWebHBSDivSetMainTitle;
      ToolWebHBSDivStartBody("","");
      ToolWebShowSearchOption("WWWFAQBEFSEARCH2",langcode);
      WebOutString("<p>");
      WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
      WebOutNL;
      ToolWebHBSDivFAQSearchResult(searchstr,WebGetArg("WEBPAGE"),WebGetArg("prod"),langcode,WebGetArg("where"));
      ToolWebEndTable;
      ToolWebHBSDivEndPage;
    end else begin
      WebHBSDivFAQ(langcode);
    end;
  end;
  return;
end;

procedure ToolWebHBSDivFAQHome(string langcode)
begin
  Boolean res;
  
  if (LoggedInHBSDivTest) then begin
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    res = WebHBSDivPublicMain("WWWFAQWELCOME",langcode,-1,-1,false,false);
    ToolWebHBSDivEndPage;
  end;
  return;
end;

// Not used?
global
procedure WebHBSDivFAQLogin()
begin
  string 255 tstr;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  string 255 llink;
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  if (WebLoginStatus==3) then begin
    ToolWebHBSDivFAQHome(langcode);
  end else begin
    oldcomp = CurrentCompany;
    newcomp = StringToInt(WebGetArg("company"));
    if ((newcomp>0) and (oldcomp!=newcomp)) then begin
      res1 = SetCompany(newcomp,false);
    end;  
    ToolWebHBSDivStartPage;
    ToolWebHBSDivSetMainTitle;
    ToolWebHBSDivStartBody("","");
    res = WebHBSDivPublicMain("WWWFAQLOGIN",langcode,-1,-1,false,false);
    WebOutString("<form name=""HansaForm"" METHOD=""POST"" action=""");
    llink = "dologin?company=" & WebGetArg("company") & "&failed=WebHBSDivFAQIndexFail.hal";
    if (ToolWebHBSUseLink) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
    ToolWebStartTable;
    if (nonblank(WebGetArg("failed_log_in"))) then begin
      ToolWebLineStart;
      ToolWebHBSDivInfoCell("","28%","left");
      ToolWebHBSDivInfoCell(ToolWebReturnTheText(20081),"72%","left");
      ToolWebLineEnd;
    end;
    ToolWebHBSDivContactLine(ToolWebReturnTheText(20051),"login",WebGetArg("login"),false);
    ToolWebHBSDivShopLine(ToolWebReturnTheText(20083),"passwd","password",WebGetArg("passwd"),false);
    ToolWebHiddenField("custpage",ToolWebBuildLink("WebHBSDivFAQMain.hal","&langcode=" & langcode));
    ToolWebEndTable;
    ToolWebPushButton(ToolWebReturnTheText(20049),"submit","name");
    WebOutString("</form>");
    ToolWebHBSDivEndPage;
    if (res1) then begin
      ResetCompany(oldcomp);
    end;
  end;
  return;
end;

global
procedure ToolWebHBSDivFAQChoose(string langcode)
begin
  Boolean res;

  res = WebHBSDivPublicMain("FAQCOUNTRY",langcode,-1,-1,false,false);
  AddListLink("WebHBSDivFAQMain","Denmark",19,1,langcode);
  AddListLink("WebHBSDivFAQMain","Estonia",25,1,langcode);
//  AddListLink("WebHBSDivFAQMain","Estonia HansaRaama",74,1,langcode);
  AddListLink("WebHBSDivFAQMain","Finland",40,1,langcode);
  AddListLink("WebHBSDivFAQMain","Latvia",26,1,langcode);
  AddListLink("WebHBSDivFAQMain","Lithuania",28,1,langcode);
  AddListLink("WebHBSDivFAQMain","Norway",24,1,langcode);
  AddListLink("WebHBSDivFAQMain","Poland",36,1,langcode);
  AddListLink("WebHBSDivFAQMain","Russia",29,1,langcode);
  AddListLink("WebHBSDivFAQMain","South Africa",37,1,langcode);
  AddListLink("WebHBSDivFAQMain","Sweden",39,1,langcode);
  AddListLink("WebHBSDivFAQMain","United Kingdom",63,1,langcode);
  return;
end;

global
procedure ToolWebHBSDivDropDownMail(string thecode,string hallink,string linkarg,string langcode,var LongInt selected)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  Boolean res;
  string 200 hdr;
  string 255 llink;

  selected = WebGetArg("dropdownmail");
  GetConfInfo(thecode,confname,confcode,maxmail);
  WebOutString("<form method=""post"" action=""");
  llink = ToolWebBuildLink(hallink,linkarg & "&langcode=" & langcode);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("<table width=""170"" border=""0"" cellpadding=""0"" cellspacing=""0"">");
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""100%"">");
  WebOutString("<select name=""dropdownmail"" onchange=""submit(this.form)"">");
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      if (foundf) then begin
        if ((sortorder<>"000") and ((sortorder<>"999"))) then begin
          WebOutString("<option value=""" & Mailr.SerNr & """ ");
          if (selected==Mailr.SerNr) then begin
            WebOutString("selected");
            RecordCopy(Mail2r,Mailr);
          end;
          ToolWebHBSDivGetHeaderLang(Mailr,hdr,langcode);
          WebOutString(">" & hdr &"</option>");
        end else begin
          if (sortorder=="000") then begin
            RecordCopy(Mail2r,Mailr);
            WebOutString("<option value=""" & -1 & """ ");
            if (selected==-1) then begin
              WebOutString("selected");
            end;
            ToolWebHBSDivGetHeaderLang(Mailr,hdr,langcode);
            WebOutString(">" & hdr & "</option>");
            WebOutString("<option value=""0"" ");
            if (selected==0) then begin
              WebOutString("selected");
            end;
            ToolWebGetTheText(20054,hdr);
            WebOutString(">" & hdr & "</option>");
          end;
        end;
      end;
    end;
  end;
  WebOutString("</select>");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("</form>");
  if (selected==0) then begin
    res = WebHBSDivPublicMain(thecode,langcode,-1,-1,true,false);
  end;
  if (selected>0) then begin
    ToolWebHBSDivOutTextLang(Mail2r,confcode,Mail2r.Header,langcode);
  end;
  return;
end;

global
procedure ToolWebHBSDivReadMore(string linkto)
begin
  string 200 tstr;
  
  WebOutString("<div>");
  WebOutNL;
  WebOutString("<a class=""readmoreMenuLink"" href=""");
  if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(linkto);
  end else begin
    WebOutString(linkto);
  end;
  WebOutString(""">");
  WebOutNL;
  ToolWebGetTheText(20056,tstr);
  WebOutString("<img src=""/gfx/dot04.gif"" width=""15"" height=""9"" border=""0"" alt=""" & tstr & """ />");
  WebOutString(tstr & "</a>");
  WebOutNL;
  WebOutString("</div><p></p>");
  WebOutNL;
  return;
end;

global
procedure WebHBSDivMailView()
begin
  record MailVc Mailr;
  LongInt wmailnumber;
  string 200 tstr;
  string 20 langcode;

  langcode = GetWebLanguage; //Fine
  ToolWebGetTheText(20057,tstr);
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","");
  WebOutString("<table bgcolor=""#FFFFFF"" width=""100%"" cellspacing=""0"" cellpadding=""3"" border=""1"" class=""deftbl"">");
  ToolWebLineStart;
  WebOutString("<th>" & tstr & "</th>");
  ToolWebLineEnd;
  ToolWebLineStart;
  WebOutString("<td>");
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebHBSDivOutTextLang(Mailr,"",Mailr.Header,langcode); // Confcode...
  end;
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebHBSDivEndPage;
  return;
end;

global
procedure WebHBSDivConfView()
begin
  record MailVc Mailr;
  record MailVc MailVersionr;
  record MailVc Mail2r;
  LongInt wmailnumber;
  string 200 thecode,theconf,confname,confcode,ckey;
  string 20 langcode;
  Boolean foundf;
  LongInt maxmail;
  LongInt versions,version;

  version = StringToLongInt(GetWebVersion);
  theconf = WebGetArg("theconf");
  thecode = WebGetArg("thecode");
  langcode = GetWebLanguage; //Fine
  GetConfInfo(thecode,confname,confcode,maxmail);
  ToolWebHBSDivStartPage;
  ToolWebHBSDivSetMainTitle;
  ToolWebHBSDivStartBody("","printable.css");
  ToolWebHBSDivStartDiv("txtbody");
  ckey = "UserSortorder:" & theconf;
  Mailr.Sortorder = "";
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    versions = ToolWebGetProperVersion(Mailr,MailVersionr,version,theconf);
    StepForward(Mailr,versions);
    if (foundf) then begin
      ToolWebGetTextLang(MailVersionr,-1,Mail2r,langcode);
      ToolWebHBSDivPrintHeaderLang(MailVersionr.Header,MailVersionr.Header,Mail2r.Header);
      ToolWebHBSDivOutTaggedText(MailVersionr,MailVersionr.SerNr,thecode,theconf,langcode); // Mailr.SerNr
    end;
  end;
  ToolWebHBSDivEndDiv("txtbody");
  ToolWebHBSDivEndPage;
  return;
end;

global
procedure WebHBSDivSearchConf(string langcode)
begin
  record WebMenuVc WebMenur;
  string 200 searchstr;
  string 60 theconf;
  string 60 thecode;
  string 20 maxres;
  string 200 llink;
  LongInt version;
  string 255 tstr;
  
  searchstr = WebGetArg("search_field");
  maxres = WebGetArg("maxhits");
  thecode = WebGetArg("thecode");
  theconf = WebGetArg("theconf");
  version = StringToLongInt(WebGetArg("version"));
  RecordNew(WebMenur);
  if (blank(maxres)) then begin
    maxres = 20;
  end;
  if (StringToLongInt(maxres)>99) then begin
    maxres = "99";
  end;
  PrintBreadCrumbs(thecode,langcode,StringToLongInt(theconf),version,WebMenur);
  WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=WebHBSDivSearchConf&levelzero=" & WebGetArg("levelzero") & "&thecode=" & thecode & "&theconf=" & theconf & "&mailnumber=" & WebGetArg("mailnumber") & "&version=" & version);
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutString("<table border=""0"" cellpadding=0 width=""500"">");
  ToolWebGetTheText(20146,tstr); //"Search for:"
  ToolWebHBSDivShopLine(tstr,"search_field","text",searchstr,false);
  ToolWebGetTheText(20145,tstr); //"Max Hits"
  ToolWebHBSDivShopLine(tstr,"maxhits","text",maxres,false);
  WebOutString("<tr><td colspan=2 align=right>");
  ToolWebGetTheText(20143,tstr); //"Search"
  ToolWebPushButton(tstr,"submit","b1");
  WebOutString("</td></tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  if (nonblank(searchstr)) then begin
    ToolWebHBSDivDisplaySearchResult(searchstr,theconf,thecode,version,"",langcode,maxres);
  end;
  return;
end;

global
procedure ToolWebHBSDivMailPopup(string linkto,string target,string langcode,LongInt sernr)
begin
  string 200 tstr;
  string 255 llink;

  WebOutString("<div>");
  WebOutNL;
  WebOutString("<a class=""readmoreMenuLink"" href=javascript:jsOpenReadMore(""/");
  llink = ToolWebBuildLink(linkto,"&mailnumber=" & sernr & "&langcode=" & langcode);
  if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""")>");
  WebOutNL;
  ToolWebGetTheText(20056,tstr);
  WebOutString("<img src=""/gfx/dot04.gif"" width=""15"" height=""9"" border=""0"" alt=""" & tstr & """ />");
  WebOutString(tstr & "</a>");
  WebOutNL;
  WebOutString("</div><p></p>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivConfPopup(string comment,string linkto,string param)
begin
  string 200 tstr;
  string 255 llink;

  WebOutNL;
  WebOutString("<a class=""readmoreMenuLink"" href=javascript:jsOpenReadMore(""/");
  llink = ToolWebBuildLink(linkto,param);
  if (true or ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""")>");
  WebOutNL;
  WebOutString(comment & "</a>");
  WebOutNL;
  WebOutString("&nbsp;");
  WebOutNL;
  return;
end;

