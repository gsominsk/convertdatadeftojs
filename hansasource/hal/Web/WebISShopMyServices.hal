external Function Boolean WebHBSDivPublicMain(string,string,LongInt,LongInt,Boolean,Boolean);
external function string 200 ToolWebReturnTheText(Integer);
external procedure GetCustData(string,var integer,var longint);
external function string 255 GetInternetServiceName(string,integer,string);
external function val WebISShopGetNoOfUnits(record TXCUServiceVc);
external function string 20 WebISShopFormatDate(date);
external function boolean IsDefaultService(record TXCUServiceVc);
external function integer GetTXCUServiceStatus(LongInt,string);
external procedure WebISShopNotLoggedIn(string);

procedure WebISShopMyServicesHeader(string title,string langcode)
begin
  WebOutString("<table width=""100%"" cellspacing=""0"">");
  if (nonblank(title)) then begin
    WebOutString("<tr>");
    WebOutString("<td width=""100%"" colspan=""8""  class=""heading3"">" & title & "</td>");
    WebOutString("</tr>");
  end;
  WebOutString("<tr>");
  WebOutString("<th width=""17%"" colspan=""2"" align=""left"">" & ToolWebReturnTheText(20324) & "</th>"); //Type
  WebOutString("<th width=""17%"" align=""center"">" & ToolWebReturnTheText(20325) & "</th>"); //Start Date
  WebOutString("<th width=""17%"" align=""center"">" & ToolWebReturnTheText(20326) & "</th>"); //End Date
  WebOutString("<th width=""11%"" align=""center"">" & ToolWebReturnTheText(20372) & "</th>"); //Monthly fee
  WebOutString("<th width=""11%"" align=""center"">" & ToolWebReturnTheText(20373) & "</th>"); //Usage fee
//  WebOutString("<th width=""10%"" align=""center"">" & ToolWebReturnTheText(20328) & "</th>"); //Units left
  WebOutString("<th width=""15%"" align=""center"">" & ToolWebReturnTheText(20357) & "</th>"); //Status
  WebOutString("<th width=""12%"" align=""center"">" & "&nbsp;" & "</th>");
  WebOutString("</tr>");
  return;
end;

procedure GetISPricing(record TXCUServiceVc TCSr,var string monthly, var string unit)
begin
  boolean bm,bu;
  integer i,cnt;
  row TXCUServiceVc TCSrw;
  bm = false;
  bu = false;
  monthly = "-";
  unit = "-";
  cnt = MatRowCnt(TCSr);
  for (i=0;i<cnt;i=i+1) begin
    MatRowGet(TCSr,i,TCSrw);
    if (TCSrw.Typ==1) then begin
      monthly = TCSrw.Price;
      bm = true;
    end else begin
      if (TCSrw.Typ==2) then begin
        unit = TCSrw.Price;
        bu = true;
      end;
    end;
    if (bu and bm) then begin
      goto LGetISPricing;
    end;
  end;
LGetISPricing:
  return;
end;

procedure WebISShopMyServicesServiceLine(record TXCUServiceVc TCSr,integer overridestatus,string langcode,boolean defaultsvc,boolean oddline)
begin
  record WebServiceVc WSr;
  string 255 tstr;
  boolean requirescontract;
  string 10 opt;
  boolean removef;
  integer status;
  string 100 monthlyprice,unitprice;
  
  removef = false;
  requirescontract = false;
  
  if (oddline) then begin
    WebOutString("<tr bgcolor=""#e8f1fd"">");
  end else begin
    WebOutString("<tr bgcolor=""#dce5f2"">");
  end;
  WebOutString("<td align=""center"">" & "<br>&nbsp;" & "</td>");
  if (defaultsvc) then begin
    tstr = ToolWebReturnTheText(20375);
  end else begin
    if (TCSr.Type==0) then begin
      tstr = ToolWebReturnTheText(20314); // Subscription
    end else begin
      tstr = ToolWebReturnTheText(20309); // Voucher
    end;
  end;
  WebOutString("<td align=""left"">" & tstr & "</td>");
  if (TCSr.CustCode=="") then begin
    WebOutString("<td align=""center"">" & "-" & "</td>");
  end else begin
    WebOutString("<td align=""center"">" & WebISShopFormatDate(TCSr.StartDate) & "</td>");
  end;
  WebOutString("<td align=""center"">" & WebISShopFormatDate(TCSr.EndDate) & "</td>");

  GetISPricing(TCSr,monthlyprice,unitprice);
  WebOutString("<td align=""center"">" & monthlyprice & "</td>");
  WebOutString("<td align=""center"">" & unitprice & "</td>");
//  WebOutString("<td align=""center"">" & WebISShopGetNoOfUnits(TCSr) & "</td>");

  if (TCSr.StartDate>CurrentDate) then begin// and defaultsvc==false) then begin
    removef = true;
  end;    

  //if (overridestatus==0) then begin
    status = GetTXCUServiceStatus(TCSr.SerNr,CurrentCust);
  //end else begin
  //  status = overridestatus;
  //end;

  WebOutString("<td align=""center""><a href=""");
  switch (status) begin
    case 1 :
      tstr = ToolWebReturnTheText(20358); // Active
      WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceStatusChange" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr & "&action=disable&ret=svclist");
      WebOutString(""" onclick=""return confirm('");
      WebOutString(ToolWebReturnTheText(20362));
      WebOutString("')");
    case 2 :
      tstr = ToolWebReturnTheText(20359); // Disabled;
      WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceStatusChange" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr & "&action=activate&ret=svclist");
      WebOutString(""" onclick=""return confirm('");
      WebOutString(ToolWebReturnTheText(20370));
      WebOutString("')");
    case 3 :
      tstr = ToolWebReturnTheText(20360);
      requirescontract = true; // requires contract
      WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceStatus" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr);
    otherwise
      tstr = ToolWebReturnTheText(20368); //unknown
      WebOutString("#");
  end;
  WebOutString(""">" & tstr & "</a>" & "</td>");
  
  if (TCSr.Type==0) then begin
    WebOutString("<td align=""center"">" & "<a href=""");
    if (requirescontract) then begin
      WebOutLink("WebHBSDivMain.hal?langcode=" & langcode & "&function=WebISShopServiceTariffView" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr);
    end else begin
      if (removef) then begin
        tstr = "WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceAmendRemove" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr;
      end else begin
        tstr = "WebHBSDivMain.hal?langcode=" & langcode & "&function=WebISShopServiceAmend" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr;
      end;
      WebOutLink(tstr);
    end;
    if (requirescontract) then begin
      WebOutString(""">" & ToolWebReturnTheText(20371)); //view tariffs
    end else begin
      if (removef) then begin
        WebOutString(""" onclick=""return confirm('");
        WebOutString(ToolWebReturnTheText(20367));
        WebOutString("')"">" & ToolWebReturnTheText(20365)); //remove
      end else begin
        WebOutString(""">" & ToolWebReturnTheText(20329)); //change tariff
      end;
    end;
    WebOutString("</a></td>");
  end else begin
    WebOutString("<td align=""center"">" & "&nbsp;" & "</td>");
  end;
  WebOutString("</tr>");

  return;
end;

procedure WebISShopMyServicesFooter(string langcode)
begin
  WebOutString("</table>");
  return;
end;

procedure WebISShopMyServicesServiceHeader(string service,integer country,string langcode)
begin
  string 60 tstr;
  if (blank(service)) then begin
    tstr = ToolWebReturnTheText(20338);
  end else begin
    tstr = GetInternetServiceName(service,country,langcode);
  end;
  WebOutString("<tr>");
  WebOutString("<th width=""100%"" colspan=""7"" align=""left""><br>" & tstr);
  if (false and nonblank(service)) then begin //disable until this link does something
    WebOutString(" <span class=""smalltext"">[ <a href=""/");
    WebOutLink("WebHBSDivMain.hal?langcode=" & langcode & "&function=WebISShopServiceUsage" & "&sessionid=" & WebGetArg("sessionid") & "&svccode=" & service);
    WebOutString(""">" & ToolWebReturnTheText(20374) & "</a> ]</span>");
  end;
  WebOutString("</th>");
  WebOutString("</tr>");
  return;
end;

procedure WebISShopMyServicesNoServices(string langcode)
begin
  WebOutString("<table width=""100%"">");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"">" & ToolWebReturnTheText(20335) & "</th>"); //You are not currently subscribed to any services.
  WebOutString("</tr>");
  WebOutString("</table>");
  return;
end;

procedure BuildUniqueSvcArray(string service,var array string arrSvc,var array integer arrFlag,var integer arrLen,integer flagf)
begin
  integer i,cnt;
  
  for (i=0;i<arrLen;i=i+1) begin
    if (arrSvc[i]==service) then begin
      arrFlag[i] = flagf;
      goto LBuildUniqueSvcArray;
    end;
  end;
  arrSvc[arrLen] = service;
  arrFlag[arrLen] = flagf;
  arrLen = arrLen + 1;
  
LBuildUniqueSvcArray:;
  return;
end;

global
procedure WebISShopMyServices(string langcode)
begin
  record WebServiceVc WSr;
  boolean res;
  array string 20 arrSvc;
  array integer arrFlag;
  integer intCountry;
  integer arrLen;
  longint version;
  record TXCUServiceVc TCSr;
  string 20 curservice;
  boolean firstline;
  string 20 custcode;
  string 200 newaddress;
  boolean foundf,oddline;
  integer i,cnt;

  custcode = CurrentCust;
  
  if (WebLoginStatus==3) then begin
    res = WebHBSDivPublicMain("IS_MYSERVICES_PRE",langcode,-1,-1,false,false);
    
    GetCustData(CurrentCust,intcountry,version);
    
    while (LoopMain(WSr,0,true)) begin
      BuildUniqueSvcArray(WSr.Code,arrSvc,arrFlag,arrLen,0);
    end;

    foundf = true;
    TCSr.CustCode = custcode;
    while (LoopKey("CustCode",TCSr,1,foundf)) begin
      if (TCSr.CustCode!=custcode) then begin
        foundf = false;
      end;
      if (foundf) then begin
        BuildUniqueSvcArray(TCSr.Service,arrSvc,arrFlag,arrLen,1);
      end;
    end;

    firstline = true;
    curservice = "";
    foundf = true;
    oddline = true;
    for (i=0;i<arrLen;i=i+1) begin
      if (arrFlag[i]==1) then begin //customer has i.svc.contracts
        ResetLoop(TCSr);
        foundf = true;
        cnt = 0;
        TCSr.Service = arrSvc[i];
        TCSr.CustCode = custcode;
        while (LoopKey("CustCode",TCSr,2,foundf)) begin
          if (TCSr.CustCode!=custcode or TCSr.Service!=arrSvc[i]) then begin
            foundf = false;
          end;
          if (foundf) then begin
            if (TCSr.EndDate>=CurrentDate or blankdate(TCSr.EndDate)) then begin
              cnt = cnt + 1;
              if (firstline) then begin
                WebISShopMyServicesHeader("",langcode);
                firstline = false;
              end;
              if (arrSvc[i]!=curservice) then begin
                WebISShopMyServicesServiceHeader(arrSvc[i],intcountry,langcode);
                curservice = arrSvc[i];
              end;
              if (IsDefaultService(TCSr)) then begin
                WebISShopMyServicesServiceLine(TCSr,0,langcode,true,oddline);
                if (oddline) then begin oddline = false; end else begin oddline = true; end;
              end else begin
                WebISShopMyServicesServiceLine(TCSr,0,langcode,false,oddline);
                if (oddline) then begin oddline = false; end else begin oddline = true; end;
              end;
            end;
          end;
        end;
        if (cnt==0) then begin
          arrFlag[i] = 0;
          i = i-1;
        end;
      end else begin //cust hasn't got isvc contracts for this svc
        TCSr.Service = arrSvc[i];
        TCSr.CustCode = "";
        if (ReadFirstKey("CustCode",TCSr,2,true)) then begin
          if (firstline) then begin
            WebISShopMyServicesHeader("",langcode);
            firstline = false;
          end;
          if (arrSvc[i]!=curservice) then begin
            WebISShopMyServicesServiceHeader(arrSvc[i],intcountry,langcode);
            curservice = arrSvc[i];
          end;
          WebISShopMyServicesServiceLine(TCSr,0,langcode,true,oddline);
          if (oddline) then begin oddline = false; end else begin oddline = true; end;
        end;
      end;
    end;
    
    if (firstline==false) then begin
      WebISShopMyServicesFooter(langcode);
    end else begin
      //sorry, you are currently not subscribed to any services
      WebISShopMyServicesNoServices(langcode);
    end;

    res = WebHBSDivPublicMain("IS_MYSERVICES_POST",langcode,-1,-1,false,false);
  
  end else begin
    WebISShopNotLoggedIn(langcode);
  end;
  return;
end;
