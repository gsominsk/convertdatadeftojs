external procedure DisplayMailLinks(record MailVc,string);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebHBSDivShopLine(string,string,string,string,Boolean);
external procedure ToolWebGetConfTextLang(record ConfVc,string,LongInt,var record MailVc);
external function Boolean GetShortCodeConf(var record ConfVc,string,var string,string,var string,var LongInt);
external procedure ToolWebHBSDivOutTaggedText(record MailVc,LongInt,string,string,string);
external function string 200 ToolWebReturnTheText(Integer);
external procedure ToolWebHBSDivTextLink(string,string,string,string,string,Boolean);
external function string 20 GetWebVersion();
external procedure ToolWebOutMailText(record MailVc,string);
external procedure ToolWebOutNoteText(record MailVc,Integer,string);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHBSDivMenuItem(string,string,string,string,string,Boolean,Integer,Boolean,Boolean);
external procedure ToolWebHBSDivNavLink(string,string,string,string,string,Boolean,Integer);
external procedure ToolWebHBSDivMailPopup(string,string,string,LongInt);
external function Boolean ToolWebHBSUseLink();
external procedure ToolWebGetTextLang(record MailVc,LongInt,record MailVc,string);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external procedure ToolWebGetTheText(Integer,var string);
external function Boolean WebDisplayContentMenu(record WebMenuVc,string);
external function string 255 ToolWebBuildLink(string,string);
external function Boolean IsOldStyle(string);

global
procedure ToolWebHBSDivPrintHeaderLang(string theheader,string tothead,string langhead)
begin
  if ((Left(tothead,3)<>"000") and (nonblank(theheader))) then begin
    WebOutNL;
    WebOutString("<p class=""heading3"">");
    if (nonblank(langhead)) then begin
      WebOutString(langhead);
    end else begin
      WebOutString(theheader);
    end;
    WebOutString("</p>");
    WebOutNL;
    WebOutNL;
  end;
  return;
end;

global
procedure ToolWebHBSDivOutTextLang(record MailVc Mailr,string confcode,string tothead,string langcode)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  string 255 theheader;
  Integer cnt;
  Boolean printf;
  
  printf = false;
  cnt = 1;
  theheader = Right(tothead,Len(tothead)-3);
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (langcode==Noter.LangCode) then begin // WebLanguage(1)
      ToolWebHBSDivPrintHeaderLang(theheader,tothead,Right(RLr.Comment,Len(RLr.Comment)-3));
      WebOutNL;
      WebOutString("<div class=""deftxt"">");
      ToolWebOutNoteText(Noter,Mailr.HtmlTranslation,ToolWebBuildLink("WebHBSDivMain.hal","&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode)); // & "&WEBPAGE=" & thecode));
      WebOutString("</div>");
      WebOutNL;
      DisplayMailLinks(Mailr,langcode);
      printf = true;
      goto LWebHBSDivOutTextLang;
    end;
  end;
  if (printf==false) then begin
    ToolWebHBSDivPrintHeaderLang(theheader,tothead,"");
    WebOutNL;
    WebOutString("<div class=""deftxt"">");
    ToolWebOutMailText(Mailr,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
    DisplayMailLinks(Mailr,langcode);
    WebOutString("</div>");
    WebOutNL;
  end;
LWebHBSDivOutTextLang:;
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivOutTextLangOnly(record MailVc Mailr,string langcode)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean printf;
  
  printf = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (langcode==Noter.LangCode) then begin // WebLanguage(1)
      ToolWebOutNoteText(Noter,Mailr.HtmlTranslation,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr));
      WebOutNL;
      DisplayMailLinks(Mailr,langcode);
      printf = true;
      goto LWebHBSDivOutTextLang;
    end;
  end;
  if (printf==false) then begin
    ToolWebOutMailText(Mailr,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr));
    WebOutNL;
    DisplayMailLinks(Mailr,langcode);
  end;
LWebHBSDivOutTextLang:;
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivGetHeaderLang(record MailVc Mailr,var string tothead,string langcode)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean foundf;
  
  foundf = false;
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (langcode==Noter.LangCode) then begin
      tothead = RLr.Comment;
      foundf = true;
      goto LWebHBSDivGetHeaderLang;
    end;
  end;
  if (foundf==false) then begin
    tothead = Right(Mailr.Header,Len(Mailr.Header)-3);
  end;
LWebHBSDivGetHeaderLang:;
  return;
end;

global
procedure ToolWebHBSDivGetConfNameLang(record ConfVc Confr,var string tothead,string langcode)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer cnt;
  Boolean foundf;
  
  foundf = false;
  cnt = 1;
  while (ReadRecordLink(Confr,cnt,Noter,RLr)) begin
    cnt = cnt + 1;
    if (langcode==Noter.LangCode) then begin
      tothead = RLr.Comment;
      foundf = true;
      goto LWebHBSDivGetConfNameLang;
    end;
  end;
  if (foundf==false) then begin
    tothead = Confr.Comment;
  end;
LWebHBSDivGetConfNameLang:;
  return;
end;

procedure ToolWebHBSPublicMailView(record MailVc Mailr,string confcode,string langcode,LongInt maxchars)
begin
  record MailVc Mail2r;
  string 200 tstr;
  
  ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
  ToolWebGetTheText(20057,tstr);
  WebOutString("<table width=""100%"" cellspacing=""0"" cellpadding=""3"" border=""1"" class=""deftbl"">");
  ToolWebLineStart;
//  WebOutString("<th>" & tstr & "</th>");
  WebOutString("<th>" & Right(Mail2r.Header,Len(Mail2r.Header)-3) & "</th>");
  ToolWebLineEnd;
  WebOutString("<tr class=""even"">");
  WebOutString("<td height=""11"" VALIGN=top align=""left"">");
//  WebOutString("<b>" & Right(Mail2r.Header,Len(Mail2r.Header)-3) & "</b><br /><br />");
  ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
  WebOutString("</b>");
  ToolWebHBSDivMailPopup("WebHBSDivMailView.hal","",langcode,Mailr.SerNr);
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSDivPublicNews(string thecode,string langcode,LongInt maxchars)
begin
  record MailVc Mailr;
  string 60 ckey;
  string 60 confname;
  string 60 confcode;
  LongInt loopcnt,looppos,maxmail;
  Boolean foundf;

  loopcnt = 0;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "UserTime:" & confcode;
  looppos = RecordsInIndex("MailVc",ckey)+1;
  SetLoopPosition(Mailr,looppos);
  foundf = true;
  while (LoopBackKey(ckey,Mailr,1,foundf)) begin
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        ToolWebHBSPublicMailView(Mailr,confcode,langcode,maxchars);
      end;
    end;
  end;
  return;
end;

// Not used...
global
procedure ToolWebHBSDivPublicListConference(string whichone,string langcode,LongInt norofmails,LongInt maxchars)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  string 60 ckey;
  string 10 sortorder;
  LongInt loopcnt;
  LongInt maxmail;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  string 255 llink;

  loopcnt = 0;
  GetConfInfo(whichone,confname,confcode,maxmail);
  if (norofmails>0) then begin
    maxmail = norofmails;
  end;
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          foundf = false;
        end;
      end;
      if (foundf) then begin
        ToolWebGetTextLang(Mailr,maxchars,Mail2r,langcode);
        WebOutString("<p>");
        WebOutNL;
        WebOutString("<a href=""");
        llink = ToolWebBuildLink("WebHBSDivMain.hal","&function=WebHBSDivPublicMain&confcode=" & whichone & "&langcode=" & langcode);
        if (ToolWebHBSUseLink) then begin
          WebOutLink(llink);
        end else begin
          WebOutString(llink);
        end;
        WebOutString(""">");
        WebOutNL;
        ToolWebOutMailText(Mail2r,ToolWebBuildLink("WebHBSDivMain.hal","&langcode=" & langcode & "&webpage=" & WebGetArg("webpage") & "&mailnumber=" & Mailr.SerNr & "&theconf=" & confcode));
        WebOutString("</a>");
        WebOutNL;
        DisplayMailLinks(Mailr,langcode);
        WebOutString("</p>");
        WebOutNL;
      end;
    end;
  end;
  return;
end;

procedure ToolWebHBSDivVersion(record WebPagesVc WPr,record WebMenuVc WebMenur,string comment,string theclickstr,string langcode,Boolean stacked)
begin
  row WebPagesVc WPrw;
  string 200 thesel;
  Integer rownr,i,rwcnt;
  Integer menulevel;
  
  menulevel = 0;
  rownr = 0;
  thesel = GetWebVersion;
  rwcnt = MatRowCnt(WPr);
  if (rwcnt>0) then begin
    if (nonblank(thesel)) then begin
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WPr,i,WPrw);
        if (thesel==WPrw.ConfCode) then begin
          rownr = i;
          i = rwcnt;
        end;
      end;
    end;
  end;
LWebHBSDivVersion:;
  MatRowGet(WPr,rownr,WPrw);
  if (stacked) then begin
    ToolWebHBSDivMenuItem(comment & " " & WPrw.DropDownNewsCode,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=" & WPr.HALFunc & "&vermenucode=" & WebMenur.Code & "&mailnumber=" & WebGetArg("mailnumber") & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
  end else begin
    ToolWebHBSDivNavLink(comment & " " & WPrw.DropDownNewsCode,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=" & WPr.HALFunc & "&vermenucode=" & WebMenur.Code & "&mailnumber=" & WebGetArg("mailnumber") & "&WEBPAGE=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
  end;
  return;
end;

// Displays Linked Header, date and new message message
procedure DisplayForumConf(record Mailvc Mailr,LongInt sernr,string thecode,string theconf,string langcode,Integer whattoshow)
begin
  string 255 llink;
  
  if (whattoshow==0) then begin
    WebOutString("<table width=""100%"">");
    ToolWebLineStart;
    WebOutString("<td width=""85%"">");
  end;
  WebOutString("<a class=""headerlistMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr & "&topmailno=" & sernr & "&theconf=" & theconf);
  if (ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString(Mailr.Header);
  WebOutNL;
  WebOutString("</a>");
  if (whattoshow==0) then begin
    WebOutString("</td>");
    WebOutString("<td width=""15%"" class=""dateInNews"">");
    WebOutString(Mailr.TransDate);
    WebOutString("</td>");
    ToolWebLineEnd;
    WebOutString("</table>");
  end;
  WebOutString("<p>");
  if (whattoshow==2) then begin
    WebOutString("<a class=""listsMenuLink"" href=""");
    llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr & "&topmailno=" & sernr & "&theconf=" & theconf & "&forumtask=newmess");
    if (ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;
    WebOutString(""">");
    WebOutNL;
    WebOutString(ToolWebReturnTheText(20260)); // New message
    WebOutNL;
    WebOutString("</a>");
    WebOutString("<p><hr>");
  end;
  return;
end;

procedure DisplayForumFullMail(record MailVc Mailr,LongInt sernr,string thecode,string theconf,string langcode)
begin
  record MailVc Mail2r;
  string 255 llink;

  ToolWebGetTextLang(Mailr,-1,Mail2r,langcode); // Translation bug, if we ever intend to translate...
  DisplayForumConf(Mailr,sernr,thecode,theconf,langcode,0);
  ToolWebHBSDivOutTaggedText(Mailr,Mailr.SerNr,thecode,theconf,langcode);
  WebOutString("<p>");

  WebOutString("<table width=""100%"">");
  ToolWebLineStart
  WebOutString("<td width=""20%"">");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr & "&topmailno=" & sernr & "&theconf=" & theconf & "&forumtask=replymess");
  if (ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString(ToolWebReturnTheText(20261)); //Reply
  WebOutNL;
  WebOutString("</a>");
  WebOutString("</td>");
  WebOutString("<td width=""20%"" class=""dateInNews"">");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr & "&topmailno=" & sernr & "&theconf=" & theconf & "&forumtask=reportmess");
  if (ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString(ToolWebReturnTheText(20262)); // Report Message
  WebOutNL;
  WebOutString("</a>");
  WebOutString("</td>");
  WebOutString("<td width=""60%"" class=""dateInNews"">");
  WebOutString("&nbsp;");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");

  WebOutString("<p><hr>");
  return;
end;

procedure DisplayForumLink(record Mailvc Mailr,LongInt sernr,string thecode,string theconf,string langcode,Integer replies)
begin
  record MailVc Mail2r;
  string 255 llink;
  string 20 replstr;

  if (replies>0) then begin
    replstr = replies;
  end else begin
    replstr = "-";
  end;
  ToolWebGetTextLang(Mailr,-1,Mail2r,langcode);
  ToolWebLineStart
  WebOutString("<td width=""15%"" class=""dateInNews"">");
  WebOutString(Mailr.TransDate);
  WebOutString("</td>");
  WebOutString("<td width=""78%"">");
  WebOutString("<a class=""listsMenuLink"" href=""");
  llink = ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr & "&topmailno=" & sernr & "&theconf=" & theconf);
  if ( ToolWebHBSUseLink) then begin // Always enqrypt when mailnumber is part of the link....
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString(Mailr.Header);
  WebOutNL;
  WebOutString("</a>");
  WebOutString("</td>");
  WebOutString("<td width=""7%"" >");
  WebOutString(replstr);
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

procedure FillWithListedMails(record MailVc Mailr,LongInt mailnr,var array LongInt amails,var Integer acnt,var Boolean foundf)
begin
  record MailVc Mail2r;
  record RLinkVc RLr;
  Integer cnt;
  
  cnt = 1;
  while (ReadRecordLink(Mailr,cnt,Mail2r,RLr) and foundf==false) begin
    if (Mail2r.SerNr==mailnr) then begin
      foundf = true;
    end else begin
      FillWithListedMails(Mail2r,mailnr,amails,acnt,foundf);
    end;
    if (foundf) then begin
      amails[acnt] = Mail2r.SerNr;
      acnt = acnt + 1;
    end;
    cnt = cnt + 1;
  end;
  return;
end;

procedure DisplayForumNewMess(record ConfVc Confr,LongInt topmail,LongInt sernr,string thecode,string theconf,string langcode,Integer whichtask)
begin
  record CUVc CUr;
  string 200 tstr;

  if (WebLoginStatus==3) then begin
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)) then begin
    end;
    if (blank(CUr.eMail)) then begin
      CUr.eMail = CUr.Code & "@" & CUr.Name;
    end;
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutString("/WebMailSend.hal?sessionid=" & WebGetArg("sessionid") & "&langcode=" & WebGetArg("langcode"));
    WebOutString(""">");
    WebOutString("<p>");
    WebOutString("<table width=""100%"" border=""0"" cellpadding=""3"">");
    ToolWebHiddenField("from_field",CUr.eMail);
    ToolWebHiddenField("cc_field","");
    ToolWebHiddenField("date_field",CurrentDate);
    switch (whichtask) begin
      case 0:
        ToolWebHiddenField("to_field",Confr.AddrName);
        ToolWebHiddenField("backpage","WebHBSDivMain.hal?langcode=" & WebGetArg("langcode") & "&webpage=" & thecode & "&theconf=" & theconf);
      case 1:
        ToolWebHiddenField("to_field","WWW Forum Reply");
        ToolWebHiddenField("backpage","WebHBSDivMain.hal?langcode=" & WebGetArg("langcode") & "&webpage=" & thecode & "&theconf=" & theconf & "&prevmail=" & sernr & "&topmailno=" & topmail & "&forumtask=linktomail");
      case 2:
        ToolWebHiddenField("to_field","WWW Forum Report");
        ToolWebHiddenField("backpage","WebHBSDivMain.hal?langcode=" & WebGetArg("langcode") & "&webpage=" & thecode & "&theconf=" & theconf & "&prevmail=" & sernr & "&topmailno=" & topmail & "&forumtask=linkfrommail");
    end;
    ToolWebHBSDivShopLine(ToolWebReturnTheText(20267),"subject_field","text","",false);
    ToolWebHiddenField("dummy","dummy");
    WebOutString("<tr>");
    WebOutString("<td colspan=""2"" valign=""top"" align=""left"">");
    WebOutString("<textarea rows=""20"" name=""mail_body"" cols=""60"" class=""deftxt"">");
    WebOutString("</textarea>");
    WebOutString("</td>");
    WebOutString("</tr>");
    WebOutString("<tr>");
    ToolWebGetTheText(20053,tstr);
    WebOutString("<td align=""left"" valign=""top""><input type=""submit"" value=""" & tstr & """ name=""b1""></td>");
    switch (whichtask) begin
      case 0: tstr = ToolWebReturnTheText(20263); //If you write your message in English, more people can reply to it
      case 1: tstr = ToolWebReturnTheText(20264); //Replies can take a while to appear in the list of messages
      case 2: tstr = ToolWebReturnTheText(20265); //A reported mail will be examined by HansaWorld personel
    end;
    WebOutString("<td class=""deftxt"">" & tstr & "</td>");
    WebOutString("</tr>");
    WebOutString("</tr>");
    WebOutString("</table>");
    WebOutString("</form>");
  end else begin
    WebOutString("<p>" & ToolWebReturnTheText(20266) & "</p>"); //You must be logged in to be able to write messages
  end;
  WebOutString("<p><hr>");
  return;
end;

global
updating procedure LinkMailRecords(LongInt mailfrom,LongInt mailto)
begin
  record MailVc Mailr;
  record MailVc Mail2r;

  Mailr.SerNr = mailfrom;
  if (ReadFirstMain(Mailr,1,true)) then begin
    Mail2r.SerNr = mailto;
    if (ReadFirstMain(Mail2r,1,true)) then begin
      CreateRecordLink(Mail2r,CurrentCompany,Mailr,CurrentCompany);
    end;
  end;
  return;
end;

procedure DisplayWebInstructions(record Confvc Confr,LongInt sernr,string thecode,string theconf,string langcode)
begin
  record MailVc Mailr;
  record RLinkVc RLr;
  Integer cnt;
  
  cnt = 1;
  while (ReadRecordLink(Confr,cnt,Mailr,RLr)) begin
//    ToolWebOutMailText(Mailr,ToolWebBuildLink("WebHBSDivMain.hal","&webpage=" & thecode & "&langcode=" & langcode & "&mailnumber=" & Mailr.SerNr & "&topmailno=" & sernr & "&theconf=" & theconf));
    ToolWebHBSDivOutTextLang(Mailr,thecode,Mailr.Header,langcode);
    cnt = cnt + 1;
  end;  
  WebOutString("<p><p>");
  return;
end;

global
procedure ToolWebForumList(string thecode,string theconf,string langcode)
begin
  record ConfVc Confr;
  record ConfVc Conf2r;
  record MailVc Mailr;
  record MailVc Mail2r;
  record MailVc Mail3r;
  record RLinkVc RLr;
  Integer cnt,cnt2;
  string 60 ckey;
  Boolean foundf,testf;
  string 60 confcode;
  string 60 confname;
  string 200 ltheconf;
  Boolean boldf;
  Longint mailno,topmail,maxmail;
  array LongInt amails;
  Integer acnt,i;
  string 20 thetask;

  mailno = WebGetArg("mailnumber");
  topmail = WebGetArg("topmailno");
  thetask = WebGetArg("forumtask");
  GetConfInfo(theconf,confname,confcode,maxmail);
  Confr.SerNr = confcode;
  foundf = ReadFirstMain(Confr,1,true);
  if (foundf==false) then begin
    Confr.SerNr = theconf;
    foundf = ReadFirstMain(Confr,1,true);
  end;
  if (foundf) then begin
    DisplayWebInstructions(Confr,-1,thecode,ltheconf,langcode);
    if (thetask=="linktomail") then begin
      queued.LinkMailRecords(mailno,WebGetArg("prevmail"));
    end;
    if (thetask=="linkfrommail") then begin
      queued.LinkMailRecords(WebGetArg("prevmail"),mailno);
    end;
    if (Confr.Class==kConfClassFolder) then begin
      foundf = true;
      ckey = "SubConfSortorder:" & Confr.SerNr;
      Conf2r.Sortorder = "";
      while (LoopKey(ckey,Conf2r,1,foundf)) begin
        testf = foundf;
        if (nonblank(Conf2r.Sortorder)) then begin
          if (Conf2r.Sortorder!=langcode) then begin
            testf = false;
          end;
        end;
        if (testf) then begin
          if (Conf2r.Class==kConfClassFolder) then begin
            boldf = true;
          end else begin
            boldf = false;
          end;
          ltheconf = Conf2r.SerNr;
          ToolWebGetConfTextLang(Conf2r,langcode,255,Mailr); // maxchars
          DisplayForumConf(Mailr,-1,thecode,ltheconf,langcode,0);
          if (thetask=="newmess") then begin
            DisplayForumNewMess(Conf2r,-1,-1,thecode,ltheconf,langcode,0);
          end;
        end;
      end;
    end else begin
      ltheconf = Confr.SerNr;
      ToolWebGetConfTextLang(Confr,langcode,255,Mailr); // maxchars
      DisplayForumConf(Mailr,-1,thecode,ltheconf,langcode,2);
      if (topmail>0) then begin
        Mailr.SerNr = topmail;
        if (ReadFirstMain(Mailr,1,true)) then begin
          DisplayForumFullMail(Mailr,topmail,thecode,ltheconf,langcode);
          WebOutString("<p>");
          acnt = 0;
          foundf = false;
          FillWithListedMails(Mailr,mailno,amails,acnt,foundf);
          if (acnt>0) then begin
            for (i=acnt-1;i>=0;i=i-1) begin
              Mailr.SerNr = amails[i];
              if (ReadFirstMain(Mailr,1,true)) then begin
                DisplayForumFullMail(Mailr,topmail,thecode,ltheconf,langcode);
                WebOutString("<p>");
              end;
            end;
            Mailr.SerNr = amails[0];
            if (ReadFirstMain(Mailr,1,true)) then begin
            end;
          end;
          if (thetask=="replymess") then begin
            DisplayForumNewMess(Confr,topmail,Mailr.SerNr,thecode,ltheconf,langcode,1);
          end;
          if (thetask=="reportmess") then begin
            DisplayForumNewMess(Confr,topmail,Mailr.SerNr,thecode,ltheconf,langcode,2);
          end;
          WebOutString("<table width=""100%"">");
          acnt = 0;
          cnt = 1;
          while (ReadRecordLink(Mailr,cnt,Mail2r,RLr)) begin
            amails[acnt] = Mail2r.SerNr;
            acnt = acnt + 1;
            cnt = cnt + 1;
          end;
          for (i=acnt-1;i>=0;i=i-1) begin
            Mail2r.SerNr = amails[i];
            if (ReadFirstMain(Mail2r,1,true)) then begin
              cnt2 = 1;
              while (ReadRecordLink(Mail2r,cnt2,Mail3r,RLr)) begin
                cnt2 = cnt2 + 1;
              end;
              DisplayForumLink(Mail2r,topmail,thecode,ltheconf,langcode,cnt2-1);
            end;
          end;
          WebOutString("</table>");
          WebOutNL;
        end;
      end else begin
        if (thetask=="newmess") then begin
          DisplayForumNewMess(Confr,-1,-1,thecode,ltheconf,langcode,0);
        end;
        WebOutString("<table width=""100%"">");
        ckey = "UserTime:" & ltheconf;
        Mailr.TransDate = AddYear(CurrentDate,10);
        foundf = true;
        while (LoopBackKey(ckey,Mailr,1,foundf)) begin
          if (foundf) then begin
            cnt2 = 1;
            while (ReadRecordLink(Mailr,cnt2,Mail2r,RLr)) begin
              cnt2 = cnt2 + 1;
            end;
            DisplayForumLink(Mailr,Mailr.SerNr,thecode,ltheconf,langcode,cnt2-1);
          end;
        end;
        WebOutString("</table>");
        WebOutNL;
      end;
    end;
  end;
  return;
end;

global
procedure ToolWebHBSDivForum(record WebPagesVc WPr,string langcode)
begin
  row WebPagesVc WPrw;
  Integer i,rwcnt;
  string 40 theconf;
  string 200 shortcode;
  record MailVc Mailr;
  Boolean treatedf;
  
  treatedf = false;
  shortcode = WebGetArg("shortcode");
  if (nonblank(shortcode)) begin
    Mailr.Identifier = shortcode;
    if (ReadFirstKey("Identifier",Mailr,1,true)) begin
      ToolWebHBSDivOutTextLang(Mailr,"",Mailr.Header,langcode);
      treatedf = true;
    end;
  end;
  if (treatedf==false) then begin
    theconf = WebGetArg("theconf");
    if (nonblank(theconf)) then begin
      ToolWebForumList(WPr.Code,theconf,langcode);
    end else begin
      rwcnt = MatRowCnt(WPr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WPr,i,WPrw);
        ToolWebForumList(WPr.Code,WPrw.ConfCode,langcode);
      end;
    end;
  end;
  return;
end;

procedure ToolWebDisplayLink(record WebMenuVc WebMenur,string comment,string theclickstr,string langcode,Boolean stacked)
begin
  record WebPagesVc WPr;
  Integer menulevel;
  
  menulevel = 0;
  WPr.Code = WebMenur.LinkTo;
  if (ReadFirstMain(WPr,1,true)) then begin
    switch (WPr.PageType) begin
      case 0:
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 1:
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&WEBPAGE=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 2:
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=" & WPr.HALFunc & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=" & WPr.HALFunc & "&WEBPAGE=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 4: // Logout
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivDoLogout.hal",WebMenur.ExtraArgs & theclickstr & "&function=" & WPr.HALFunc & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivDoLogout.hal",WebMenur.ExtraArgs & theclickstr & "&function=" & WPr.HALFunc & "&WEBPAGE=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 5: // Shopping Basket
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivShopBasket",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivShopBasket",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 6: // Item Browse
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivCustProd",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivCustProd",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
// 7-10 used in HBSFunc
      case 11: // Version
        ToolWebHBSDivVersion(WPr,WebMenur,comment,theclickstr,langcode,stacked);
      case 12: // checkout page
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMainUpdate.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivCheckout",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMainUpdate.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivCheckout",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 13: // credit card payment page
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivPayCC",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebHBSDivPayCC",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
      case 19: // Forum
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&webpage=" & WPr.Code,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
// Not standard right now....
      case 20: // Internet Services Overview Page
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebISShopMyServices",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMain.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebISShopMyServices",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
/*
      case 21: // Internet Services Customer's Services Page
        if (stacked) then begin
          ToolWebHBSDivMenuItem(comment,"WebHBSDivMainUpdate.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebISShopMyServices",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
        end else begin
          ToolWebHBSDivNavLink(comment,"WebHBSDivMainUpdate.hal",WebMenur.ExtraArgs & theclickstr & "&function=WebISShopMyServices",WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
        end;
*/
/*
      case 55: // Return to Webshop - only for payment server
        if (stacked) then begin
          if (nonblank(WebGetArg("txnumber"))) then begin
            WebOutString("<img src=""/art/dot01.gif"" class=""dot01"" height=""11"" width=""21"" alt="""" />");
            WebOutString("<a class=""leftMenuLink"" href=""");
            WebOutString(WebGetArg("frompayurl"));
            if (right(WebGetArg("frompayurl"),1)!="/") then begin
              WebOutString("/");
            end;
            switch (WebGetArg("shoptype")) begin
              case "HWU": WebOutLink("WebHWUAbortCreditCardPayment.hal?langcode=" & langcode & "&sessionid=" & WebGetArg("sessionid") & "&txnumber=" & WebGetArg("txnumber"));
              otherwise
                WebOutLink("WebHBSDivMain.hal?langcode=" & langcode & "&sessionid=" & WebGetArg("sessionid") & "&function=WebHBSDivShopBasket" & "&shoptype=" & WebGetArg("shoptype"));
            end;
            WebOutString(""">");
            WebOutString(comment);//ToolWebReturnTheText(20170));
            WebOutNL;
            WebOutString("</a>");
            WebOutNL;
            WebOutString("<br />");
          end;
        end;
*/
    end;
  end else begin
    if (stacked) then begin
      ToolWebHBSDivMenuItem(comment,WebMenur.LinkTo,WebMenur.ExtraArgs & theclickstr,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel,true,false);
    end else begin
      ToolWebHBSDivNavLink(comment,WebMenur.LinkTo,WebMenur.ExtraArgs & theclickstr,WebMenur.Target,langcode,WebMenur.NoSession==1,menulevel);
    end;
  end;
  return;
end;

function Boolean ThisIsNOTWebShop()
begin
  Boolean res;
  
  res = Left(WebHost,19)!="shop.hansaworld.com";
  if (res) then begin
    res = Left(WebHost,18)!="kjell:1080";
  end;
  ThisIsNOTWebShop = res;
  return;
end;

global
procedure ToolWebHBSDivAddLeftMenubar(string menustr,string clicked,string langcode)
begin
  record WebMenuVc WebMenur;
  record WebMenuVc WebMenu2r;
  row WebMenuVc WebMenurw;
  string 60 ckey;
  string 60 ckey2;
  string 200 comment;
  Boolean found,found2;
  Integer rwcnt,i;
  string 60 theclick;
  string 100 theclickstr;
  Integer oldcomp;
  Boolean res;
  Boolean firstf;
  
  firstf = true;
  oldcomp = CurrentCompany;
  if (ThisIsNOTWebShop) then begin
    res = SetCompany(1,false);
  end;
  if (WebGetArg("clbefore")==clicked) then begin
    theclick = "";
  end else begin
    theclick = clicked;
  end;
  if (nonblank(theclick)) then begin
    theclickstr = "&clbefore=" & theclick;
  end else begin
    theclickstr = "";
  end;
  ckey = "MenuCode:" & menustr;
  found = true;
  WebMenur.Code = "";
  while (LoopKey(ckey,WebMenur,1,found)) begin
    if (found) then begin
      comment = WebMenur.Comment;
      rwcnt = MatRowCnt(WebMenur);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WebMenur,i,WebMenurw);
        if (langcode==WebMenurw.LangCode) then begin
          comment = WebMenurw.Comment;
        end;
      end;
      if (nonblank(comment)) then begin
      if (firstf==false) then begin
      	WebOutString("<img src=""/art/mnu_tk03.gif"" class=""mnu_tk03"" height=""1"" width=""157"" alt="""" />");
      end;
      if (WebMenur.Code==menustr) then begin // Bad, can possibly show always
        if (WebDisplayContentMenu(WebMenur,langcode)) then begin
          goto LWebHBSDivAddLeftMenubar;
        end;
      end;
      firstf = false;
      ToolWebDisplayLink(WebMenur,comment,theclickstr,langcode,true);
      if (WebMenur.Code==theclick) then begin
        ckey2 = "MenuCode:" & theclick;
        found2 = true;
        WebMenu2r.Code = "";
        ResetLoop(WebMenu2r);
        while (LoopKey(ckey2,WebMenu2r,1,found2)) begin
          if (found2) then begin
            comment = "&nbsp;&nbsp;&nbsp;&nbsp;" & WebMenu2r.Comment;
            rwcnt = MatRowCnt(WebMenu2r);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WebMenu2r,i,WebMenurw);
              if (langcode==WebMenurw.LangCode) then begin
                comment = "&nbsp;&nbsp;&nbsp;&nbsp;" & WebMenurw.Comment;
              end;
            end;
            ToolWebDisplayLink(WebMenu2r,comment,"",langcode,true);
          end;
        end;
        end;
      end;
LWebHBSDivAddLeftMenubar:;
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure ToolWebHBSDivAddTopMenubar(string menustr,string langcode)
begin
  record WebMenuVc WebMenur;
  row WebMenuVc WebMenurw;
  string 60 ckey;
  string 200 comment;
  Boolean found;
  Integer rwcnt,i;
  Integer oldcomp;
  Boolean res;
  Boolean firstf;
  
  firstf = true;
  oldcomp = CurrentCompany;  
  if (ThisIsNOTWebShop) then begin
    res = SetCompany(1,false);
  end;
  ckey = "MenuCode:" & menustr;
  found = true;
  WebMenur.Code = "";
  while (LoopKey(ckey,WebMenur,1,found)) begin
    if (found) then begin
      comment = WebMenur.Comment;
      rwcnt = MatRowCnt(WebMenur);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WebMenur,i,WebMenurw);
        if (langcode==WebMenurw.LangCode) then begin
          comment = WebMenurw.Comment;
        end;
      end;
      if (firstf==false) then begin
        WebOutString("<img src=""/art/s.gif"" height=""1"" width=""3"" alt="""" />");
        WebOutNL;
      end;
      firstf = false;
//      ToolWebDisplayLink(WebMenur,comment,"&levelzero=" & WebGetArg("levelzero") & "&theconf=" & WebGetArg("theconf") & "&mailnumber=" & WebGetArg("mailnumber") & "&version=" & GetWebVersion,langcode,false);
      ToolWebDisplayLink(WebMenur,comment,"",langcode,false);
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
procedure WebHBSDivTest()
begin
  LongInt ser;
  
  WebSetContentType("image/jpeg");
  ser = StringToLongInt(WebGetArg("filenumber"));
  if (ser>0) then begin
    WebOutAttachment(ser);
  end;
  return;
end;

global
procedure ToolWebHBSMagicMidMenu(record WebPagesVc WPr,string langcode)
begin
  record WebMenuVc WebMenur;
  record Attach2Vc Attach2r;
  record RLinkVc RLr;
  row WebMenuVc WebMenurw;
  string 200 comment;
  Integer i,rwcnt;
  Boolean firstf;
  Integer cnt;

  cnt = 1;
  while (ReadRecordLink(WPr,cnt,WebMenur,RLr)) begin
    comment = WebMenur.Comment;
    rwcnt = MatRowCnt(WebMenur);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(WebMenur,i,WebMenurw);
      if (langcode==WebMenurw.LangCode) then begin
        comment = WebMenurw.Comment;
      end;
    end;
    if (firstf==false) then begin
      WebOutString("<img src=""/art/s.gif"" height=""1"" width=""3"" alt="""" />");
      WebOutNL;
    end;
    firstf = false;
    ToolWebDisplayLink(WebMenur,comment,"",langcode,true);
    cnt = cnt + 1;
  end;
/*
  cnt = 1;
  while (ReadRecordLink(WPr,cnt,Attach2r,RLr)) begin
    if (firstf==false) then begin
      WebOutString("<img src=""/art/s.gif"" height=""1"" width=""3"" alt="""" />");
      WebOutNL;
    end;
    firstf = false;
    ToolWebHBSDivMenuItem(Attach2r.FileName,"WebHBSDivTest.hal",WebMenur.ExtraArgs & "&webpage=" & WPr.Code & "&filenumber=" & Attach2r.SerNr,WebMenur.Target,langcode,WebMenur.NoSession==1,0,true,false); // WebHBSDivMain
    cnt = cnt + 1;
  end;
*/
  return;
end;

global
procedure AddListLink(string thelink,string thetext,Integer company,Integer whereto,string langcode)
begin
  string 255 llink;
  
  WebOutString("<p>");
  WebOutString("<a class=""listsMenuLink"" href=""");
  switch (whereto) begin
    case 0: llink = ToolWebBuildLink("WebHBSDivMain.hal","&company=" & company & "&langcode=" & langcode); // & "&function=" & thelink);
    case 1: llink = ToolWebBuildLink("WebHBSFAQIndex.hal","&company=" & company & "&langcode=" & langcode); // & "&function=" & thelink);
    case 2: llink = ToolWebBuildLink("WebHBSShopIndex.hal","&company=" & company & "&langcode=" & langcode); // & "&function=" & thelink);
  end;
  if (ToolWebHBSUseLink) then begin
    WebOutLink(llink);
  end else begin
    WebOutString(llink);
  end;
  if (whereto==0) then begin
    WebOutString(""">");
  end else begin
    WebOutString(""" target=""_parent"">");
  end;
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

