external function Integer CheckCreditCardData(LongInt,string,string,string,string,string, string,val,var string,string,string,var string,Integer);
external function Boolean LoggedInHWTest();
external updating function Integer CreditCardPurchaseAsync(string,string,string,val,string,string,string,string,string,string,string,string,
                                                          string,string,Integer,Integer,string,
                                                          string,string,string,string,string,string,string,string,
                                                          string,string,string,string,string,string,string,string,
                                                          longint,string,val,val,string,
                                                          string,string,string,var string,var string,var string,
                                                          string,string,Integer);
external updating procedure WebHWShopBasketStep2();
external updating procedure WebHWShopBasketStepPAY(Integer,string,string);
external procedure WebHWShopBasket();
external procedure ToolWebHWStartPage();
external procedure ToolWebHWEndPage();
external procedure ToolWebHWStartSecureBody();
external function integer CardTransactionStatus(string,var string,string,var integer);
external procedure WebHWOutBody(string,string,string);
external procedure ToolWebHWShopBasketStep2Complete(longint);
external function string 200 ToolWebReturnTheText(Integer);

function Boolean OrderAlreadyDone(LongInt ordernr)
begin
  record ORVc ORr;
  Boolean res;
  
  ORr.CustOrdNr = ordernr;
  if (ReadFirstKey("CustOrdNr",ORr,1,true)) then begin
    res = true;
  end;
  OrderAlreadyDone = res;
  return;
end;

global
procedure ToolWebHWRedirectTo(string halfunc,string args,integer delay)
begin
  WebOutString("<meta meta http-equiv=""refresh"" content=""" & delay & "; url=/");
  WebOutLink(halfunc & "?" & args);
  WebOutString(""">");
  return;
end;

global
updating procedure WebHWSendPayment()
begin
  string 60 cardid,year,month,cardtype,ordernr,curncy,cardcvc,cardissue,smonth,syear,sessionid;
  Record CYBlock CYRec;
  val amount;
  LongInt test;
  Integer error;
  string 255 errmsg;
  string 255 errorcode,AuthCode;
  Integer res;
  string 255 ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry;
  string 255 gotofield,ccissue;

  if (LoggedInHWTest()) then begin
  error = -1;
  BlockLoad(CYRec);
  cardtype = WebGetArg("CreditCardType");
  cardid = WebGetArg("ccnumber");
  month = WebGetArg("ExpirationMonth");
  year = WebGetArg("ExpirationYear"); 
  smonth = WebGetArg("amexstartmonth");
  syear = WebGetArg("amexstartyear");
  ordernr = WebGetArg("orderid");
  cardcvc = WebGetArg("cvcsecurity");
  cardissue = WebGetArg("issuenumber");
  curncy = WebGetArg("currency");
  amount = StringToVal(WebGetArg("amount"),M4Val);
  test = StringToLongInt(cardtype);
  ccaddr1 = WebGetArg("ccaddr1");
  ccaddr2 = WebGetArg("ccaddr2");
  ccaddr3 = WebGetArg("ccaddr3");
  ccaddr4 = WebGetArg("ccaddr4");
  ccaddr5 = WebGetArg("ccaddr5");
  ccaddr6 = WebGetArg("ccaddr6");
  cccountry = WebGetArg("cccountry");
  sessionid = WebGetArg("sessionid");
  if (blank(test) or test<0) then begin
    error = 1;
  end;
  if (Len(cardid)<13) then begin
    error = 2;  
  end;
  test = StringToLongInt(cardcvc);
  if (blank(test) or test<0) then begin
    error = 3;
  end;
  if (Len(cardcvc)<3) then begin
    error = 4;  
  end;
  if (nonblank(smonth)) then begin
    test = StringToLongInt(smonth);
    if (blank(test) or test<1) then begin
      error = 5;
    end;
    if (Len(smonth)<2) then begin
      error = 6;
    end;
  end;
  if (nonblank(syear)) then begin
    test = StringToLongInt(syear);
    if (blank(test) or test<1) then begin
      error = 5;
    end;
    if (Len(syear)<4) then begin
      error = 7;
    end;
  end;
  if (StringToLongInt(ordernr)>0) then begin
    if (OrderAlreadyDone(ordernr)) then begin
      error = 8;
    end;
  end;
// Debug!!! Comment this out and next one in for Live
//  if (false) then begin
  if (error>0) then begin
    WebHWShopBasketStepPAY(error,0,"");  
  end else begin
// Debug!!! Comment this out and next one in for Live
//    if (true) then begin


    res = CheckCreditCardData(ordernr,"",cardid,month,year,cardcvc,cardtype,amount,cardissue,smonth,syear,gotofield,kCardHolderNotPresent);
    if (res!=0) then begin
      WebHWShopBasketStepPAY(res,USetStr(res),errorcode);
      goto LWebHWSendPayment;
    end;

    res = CreditCardPurchaseAsync(ordernr,"product",CYRec.CompName,amount,cardtype,cardid,year,month,cardcvc,cardissue,smonth,syear,
                                  curncy,"",1,0,"WEB",
                                  ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry,"",
                                  "","","","","","","","",
                                  -1,"",0.0,0.0,"",
                                  sessionid,CurrentCust,"",errmsg,errorcode,AuthCode,
                                  "","",kCardHolderNotPresent);
    if (res==0) then begin
      ToolWebHWRedirectTo("WebHWWaitForCCPurchase.hal","sessionid=" & WebGetArg("sessionid") & "&orderid=" & ordernr & "&delmode=" & WebGetArg("delmode") & "&custref=" & WebGetArg("custref"),0);
      //WebHWShopBasketStep2;
    end else begin
      if (blank(errmsg)) then begin
        error = 9;
      end;
      switch (res) begin
        case 14669: error = 10;
      end;
      WebHWShopBasketStepPAY(error,errmsg,errorcode);
    end;
  end;
  end;
LWebHWSendPayment:;
  return;
end;

global
updating procedure WebHWWaitForCCPurchase()
begin
  record WebFramesBlock WFr;
  integer status, callbackaction;
  boolean res;
  LongInt retryAttempts;
  string 60 orderid;
  
  status = CardTransactionStatus(CurrentCust,orderid,WebGetArg("sessionid"),callbackaction);

  if (status==kCCStatusPaymentOK) then begin
    // move on, credit card was approved
    ToolWebHWShopBasketStep2Complete(StringToLongInt(orderid));
  end else begin
    if (status==kCCStatusProcessing) then begin
      BlockLoad(WFr);
      
      ToolWebHWStartPage;
      ToolWebHWStartSecureBody;
      WebHWOutBody("",WFr.Fr1BgPict,WFr.Fr1BgColor);
    
      retryAttempts = 0;
      if(nonBlank(WebGetArg("retryAttempts"))) then begin
        retryAttempts = WebGetArg("retryAttempts");
      end;
      retryAttempts = retryAttempts + 1;

      if(retryAttempts < 10) then begin
        if (res==false) then begin
          WebOutString("<h2>" & ToolWebReturnTheText(20252) &"</h2>");  WebOutNL;
          WebOutString("<p><b>" & ToolWebReturnTheText(20253) &"</b></p>");  WebOutNL;
        end;
        
        ToolWebHWRedirectTo("WebHWWaitForCCPurchase.hal","orderid=" & WebGetArg("orderid") & "&sessionid=" & WebGetArg("sessionid") & "&retryAttempts=" & retryAttempts & "&delmode=" & WebGetArg("delmode") & "&custref=" & WebGetArg("custref"),3);
      end else begin
        if (res==false) then begin
          WebOutString("<h2>" & ToolWebReturnTheText(20254) &"</h2>");  WebOutNL;
          WebOutString("<p><b>" & ToolWebReturnTheText(20255) &"</b></p>");  WebOutNL;
          WebOutString("<p><b>" & ToolWebReturnTheText(20256) &"</b></p>");  WebOutNL;
        end;
        
        //res = SetCardTransactionCallbackAction(CurrentCust,WebGetArg("orderid"),WebGetArg("sessionid"),kCCCallbackActionMailOnFailure);    // set to send email
      end;

      ToolWebHWEndPage;
    end else begin
      //error occurred.
      if (status==kCCStatusCardRejected) then begin
        WebHWShopBasketStepPAY(0,ToolWebReturnTheText(20257),"");
      end else begin
        WebHWShopBasketStepPAY(10,ToolWebReturnTheText(20258),"");
      end;
    end;
  end;

  return;
end;