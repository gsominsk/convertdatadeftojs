external function Boolean FindStringInString(string,string);
external function string 200 GetWebLanguage();
external function Boolean PasteVEInPO(var record POVc,Boolean);
external procedure GetBaseCurncy(Integer,var string);
external function Boolean GetPurchaseItem(string,string,var record PIVc);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external updating function Integer CreateMailFromWebIV(LongInt,var string);
external procedure CreateFormToPaySite(string,string);
external procedure CreateLinkFromPaySite(string);

// WebStore.hal (can stay)
external function Boolean BuildWebOrd(string,LongInt,var record ORVc,var Boolean,string);
external function val QtyInBasket(String,Integer);
external updating procedure ToolWebStoreTheItem();
external updating procedure WebStoreThePOItem();
external updating procedure WebStoreTheVESelect();

// WebFunc.hal (can stay)
external function Boolean ToolWebGetCustAndSettings(var record CUVc,var Boolean,var Boolean);
external procedure ToolWebDisplayHTMLExtra(record WebHTMLVc,string,string);
external procedure ToolWebGetDispGroup(string,var string);

// WebHtml.hal (can stay)
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHiddenField(string,string);

// WebHWMain.hal
external procedure WebHWStartMainPage(string);

// WebHWHtml.hal
external procedure ToolWebHWStartPage();
external procedure WebHWCharset();
external procedure WebHWStartBody();
external procedure ToolWebHWEndPage();
external procedure WebHWStartTable();
external procedure WebHWEndTable();
external procedure WebHWEditLine(string,string,string,string,Boolean);
external procedure WebHWInfoCell(string,string,string);
external procedure WebHWInfoCellError(string,string,string);
external procedure WebHWTableHdr(string,string,string);
external procedure WebHWListTable(Integer,Integer,string);
external procedure WebHWListTableEnd();
external procedure WebHWTableData(string,string,string,string,string,string,Integer);
external procedure WebHWPushButton(string,string,string);
external procedure WebHWEditFieldBrowse(string,string,string,string,Integer,Integer,Integer);
external procedure WebHWItemLink(string,string,string,string,string,var Integer);

// WebHWFunc.hal
external function Boolean WebGetItemDetails(var record WebHTMLVc,string,string,var Boolean);
external Function Boolean WebHWPublicMain(string,LongInt,LongInt,Boolean,Boolean);

external updating function LongInt ToolWebStoreTheOrder2(var LongInt,string,Boolean);
external updating function Boolean ToolWebStoreThePurOrder2();

// Standard HAL function
external function val GetStockQty(string,string,Date,Boolean);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external procedure NextM4Number(string,var string);
external procedure WebHWOutLine(string);
external function string 200 ToolWebReturnTheText(Integer);

global
procedure ShowbasketStatus(Boolean salesord)
begin
  string 20 tstr;
  record ORVc ORr;
  Boolean freightf,res;
  LongInt baskno;

  if (salesord) then begin
    baskno = -1;
  end else begin
    baskno = 999;
  end;
  if (salesord) then begin
    res = BuildWebOrd(CurrentCust,baskno,ORr,freightf,GetWebLanguage);
  end else begin
    res = BuildWebOrd(CurrentUser,baskno,ORr,freightf,GetWebLanguage); // Turnes out baskno==999 was all it took
  end;
  WebOutString("<TR width=""100%"">");
  WebOutString("<TD VALIGN=top align=""right""><font size=""1"" color=""gray"">");// class=""TableData""
  WebOutNL;
  if (ORr.Sum4==0) then begin
    tstr = ToolWebReturnTheText(20107);
  end else begin
    tstr = ToolWebReturnTheText(20136);
    tstr = tstr & " " & ORr.Sum4;
    tstr = tstr & " " & ORr.CurncyCode;  
  end;
  WebOutString(tstr & "<br>");
  WebOutNL;
  WebOutString("</font></TD></TR>");  
  WebOutNL;
  return;
end;

global
procedure WebHWNotLoggedinMess()
begin
  Boolean res;
  Integer rwt;
  record WebControlBlock WCr;
  string 255 tstr;

  BlockLoad(WCr);
  WebHWStartMainPage("");
  res = WebHWPublicMain("NOTLOGGEDIN",-1,-1,false,false); // Hardcoded, needs setting
  WebHWStartTable;
  WebHWItemLink(ToolWebReturnTheText(20025),"WebHWLogin.hal","",WCr.FromPaySSLURL,"",rwt);//"Return to Login"
  WebHWEndTable;
  ToolWebHWEndPage;
  return;
end;

global
function Boolean LoggedInHWTest()
begin
  Boolean res;
  
  if (WebLoginStatus==3) then begin
    res = true;
  end else begin
    res = false;
    WebHWNotLoggedinMess;
  end;
  LoggedInHWTest = res;
  return;
end;

global
function Boolean GetNextDelCode(var string delcode)
BEGIN
  Boolean res;
  record DelAddrVc DelAddrr;
  string 255 custshortcode,custcode;

  custcode = CurrentCust;
  if (len(custcode)>15) then begin 
    custshortcode = left(custcode,15);
  end else begin  
    custshortcode = custcode;
  end;
  DelAddrr.CustCode = custcode;
  DelAddrr.DelCode = custshortcode & "-9999";
  If (ReadLastKey("CustCode",DelAddrr,2,false)) then begin
    delcode = DelAddrr.DelCode;
    if (FindStringInString(delcode,custshortcode & "-")) then begin 
      delcode = DelAddrr.DelCode;
    end else begin
      DelAddrr.CustCode = custcode;
      DelAddrr.DelCode = "";    
      If (ReadLastKey("CustCode",DelAddrr,1,true)) then begin end;      
      delcode = DelAddrr.DelCode;
      if (FindStringInString(delcode,custshortcode & "-")==false) then begin 
        delcode = custshortcode & "-" & DelAddrr.DelCode;
      end;
    end;
  end;
  NextM4Number(delcode,delcode);
  GetNextDelCode = res;
  RETURN;
END;

procedure WebHWItemHeaderBasket()
begin
//  WebHWListTable(0,500,"0");
  WebOutString("<table width=""100%"" border=""0"">");
  ToolWebLineStart;
  WebHWTableHdr(ToolWebReturnTheText(20089),"left","15%");
  WebHWTableHdr(ToolWebReturnTheText(20090),"center","8%");
  WebHWTableHdr(ToolWebReturnTheText(20091),"left","8%");
  WebHWTableHdr(ToolWebReturnTheText(20092),"left","45%");
  WebHWTableHdr(ToolWebReturnTheText(20093),"right","9%");
//  WebHWTableHdr(ToolWebReturnTheText(20094),"right","3%");
  WebHWTableHdr(ToolWebReturnTheText(20095),"right","11%");
  ToolWebLineEnd;
  return;
end;

procedure WebHWPurItemHeaderBasket()
begin
//  WebHWListTable(0,500,"0");
  WebOutString("<table width=""100%"" border=""0"">");
  ToolWebLineStart;
  WebHWTableHdr(ToolWebReturnTheText(20089),"left","15%");
  WebHWTableHdr(ToolWebReturnTheText(20090),"center","8%");
  WebHWTableHdr(ToolWebReturnTheText(20091),"left","8%");
  WebHWTableHdr(ToolWebReturnTheText(20092),"left","35%");
  WebHWTableHdr(ToolWebReturnTheText(4944),"left","10%");
  WebHWTableHdr(ToolWebReturnTheText(20188),"right","9%");
//  WebHWTableHdr(ToolWebReturnTheText(20094),"right","3%");
  WebHWTableHdr(ToolWebReturnTheText(20095),"right","11%");
  ToolWebLineEnd;
  return;
end;

procedure WebHWItemHeaderBrowse()
begin
//  WebHWListTable(0,500,"0");
  WebOutString("<table width=""100%"" border=""0"">");
  ToolWebLineStart;
  WebHWTableHdr(ToolWebReturnTheText(20089),"left","15%");
  WebHWTableHdr(ToolWebReturnTheText(20090),"center","8%");
  WebHWTableHdr(ToolWebReturnTheText(20091),"left","8%");
  WebHWTableHdr(ToolWebReturnTheText(20092),"left","45%");
  WebHWTableHdr(ToolWebReturnTheText(20093),"right","9%");
//  WebHWTableHdr(ToolWebReturnTheText(20094),"right","3%");
  WebHWTableHdr("","right","11%");
  ToolWebLineEnd;
  return;
end;

procedure WebHWPurItemHeaderBrowse()
begin
//  WebHWListTable(0,500,"0");
  WebOutString("<table width=""100%"" border=""0"">");
  ToolWebLineStart;
  WebHWTableHdr(ToolWebReturnTheText(20089),"left","15%");
  WebHWTableHdr(ToolWebReturnTheText(20090),"center","8%");
  WebHWTableHdr(ToolWebReturnTheText(20091),"left","8%");
  WebHWTableHdr(ToolWebReturnTheText(20092),"left","35%");
  WebHWTableHdr(ToolWebReturnTheText(4944),"left","10%");
  WebHWTableHdr(ToolWebReturnTheText(20188),"right","9%"); // To English
//  WebHWTableHdr(ToolWebReturnTheText(20094),"right","3%");
  WebHWTableHdr("","right","11%");
  ToolWebLineEnd;
  return;
end;

procedure WebHWDisplayItemLine(string curitemno,string linkargs,val qty,string unittext,string spec,val reb,val price,string curcode,val totsum,Boolean printtot,Integer rwt)
begin
  record BaseCurBlock BCr;
  string 60 tstr;
  record SysFormatBlock SFb;
  
  BlockLoad(SFb);
  ToolWebLineStart;
  WebHWTableData(curitemno,"WebHWItemView.hal",linkargs,"left","","",rwt)
  if (qty<>0) then begin
    tstr = ValToString(qty,M4UVal,SFb.thousSep,SFb.decimalPt,0);
  end else begin
    tstr = "";
  end;
  WebHWTableData(tstr,"","","center","","",rwt);
  WebHWTableData(unittext,"","","left","","",rwt);
  WebHWTableData(spec,"","","left","","",rwt);
  WebHWTableData(price,"","","right","","",rwt);
  if (printtot==false) then begin
    tstr = curcode;
     if (blank(tstr)) then begin
       BlockLoad(BCr);
       tstr = BCr.BaseCur1;
     end;
    WebHWTableData(tstr,"","","right","","",rwt);
  end;
  if (printtot) then begin
    WebHWTableData(totsum,"","","right","","",rwt);
  end;
  ToolWebLineEnd;
  return;
end;

procedure WebHWDisplayPOItemLine(string curitemno,string linkargs,val qty,string unittext,string spec,string vecode,val price,string curcode,val totsum,Boolean printtot,Integer rwt)
begin
  record BaseCurBlock BCr;
  string 60 tstr,locextracom;
  string 60 halfunc;
  
  ToolWebLineStart;
  WebHWTableData(curitemno,"WebHWPOItemView.hal",linkargs,"left","","",rwt)
  if (qty<>0) then begin
    tstr = ValToString(qty,M4UVal,"","",0);
  end else begin
    tstr = "";
  end;
  halfunc = "";
  locextracom = vecode;
  if (qty!=0) then begin
    if (blank(locextracom)) then begin
      locextracom = "Choose";
    end;
    halfunc = "WebHWPOVESelect.hal";
  end;
  WebHWTableData(tstr,"","","center","","",rwt);
  WebHWTableData(unittext,"","","left","","",rwt);
  WebHWTableData(spec,"","","left","","",rwt);
  WebHWTableData(locextracom,halfunc,linkargs,"left","","",rwt);
  WebHWTableData(price,"","","right","","",rwt);
  if (printtot==false) then begin
    tstr = curcode;
     if (blank(tstr)) then begin
       BlockLoad(BCr);
       tstr = BCr.BaseCur1;
     end;
    WebHWTableData(tstr,"","","right","","",rwt);
  end;
  if (printtot) then begin
    WebHWTableData(totsum,"","","right","","",rwt);
  end;
  ToolWebLineEnd;
  return;
end;

global
procedure WebHWPOVESelect()
begin
  record PIVc PIr;
  record CUVc CUr;
  Integer rwt;
  Boolean foundf;
  string 255 itemcode;
  string 255 linkargs;

  rwt = 1;
  WebHWStartMainPage("");
  WebHWListTable(0,500,"0");
  foundf = true;
  itemcode = WebGetArg("itemcode");
  PIr.ItemCode = itemcode;
  while (LoopMain(PIr,1,foundf)) begin
    if (PIr.ItemCode!=itemcode) then begin
      foundf = false;
    end;
    if (foundf) then begin
      linkargs = "sessionid=" & WebGetArg("sessionid") & "&itcode=" & WebGetArg("itcode") & "&itemcode=" & itemcode & "&company=" & WebGetArg("company") & "&vecode=" & PIr.VECode;
      ToolWebLineStart;
      WebHWTableData(PIr.VECode,"WebHWPOStoreVESelect.hal",linkargs,"left","","",rwt)
      WebHWTableData(PIr.VEName,"","","left","","",rwt);
      ToolWebLineEnd;
      rwt = rwt + 1;
    end;
  end;
  WebHWListTableEnd;  
  ToolWebHWEndPage;
  return;
end;

global
function string 20 GetShopBaskVECode(string cucode,string itemcode)
begin
  record ShopBaskVc ShopBaskr;
  Boolean foundf,testf;
  string 20 res;
  
  res = "";
  ShopBaskr.CUCode = cucode;
  ShopBaskr.DestinationNr = -1;
  foundf = true;
  while (LoopKey("CUCode",ShopBaskr,2,foundf)) begin
    if (ShopBaskr.CUCode<>cucode) then begin foundf = false; end;
    if (ShopBaskr.DestinationNr<>-1) then begin foundf = false; end;
    testf = foundf;
    if (ShopBaskr.ItemCode!=itemcode) then begin
      testf = false;
    end;
    if (testf) then begin
      res = ShopBaskr.VECode;
      foundf = false;
    end;
  end;
  GetShopBaskVECode = res;
  return;
end;

procedure WebHWDispGroups(string itcode,LongInt msernr,Integer maxlines,Boolean salesord)
begin
  row INVc INrw;
  Integer rwcnt,i;
  Boolean testf;
  String 60 pstr;
  
  record DIVc DIr;
  record CUVc CUr;
  record INVc INr;
  record INVc IN2r;
  record PIVc PIr;
  string 60 ckey;
  string 100 spec,tempstr;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt;
  string 255 linkargs;
  string 10 dgroup;
  Integer pos,dicnt;
  string 5 nsep;
  Boolean tmpf;
  Boolean overmax;
  Boolean headerf;
  string 20 curitemno;
  string 100 curitemname,vecode;
  string 20 salesacc,vatcode,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices;
  Boolean headerprintf,dummyf;
  string 10 basecur1;
  Time blankt;

  GetBaseCurncy(1,basecur1);
  loopcnt = 1;
  rwt = 1;
  headerprintf = false;
  overmax = false;
  headerf = false;
  pos = 0;
  dicnt = 0;
  CUr.Code = CurrentCust;
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  ckey = "DICode:" & itcode;
  found = true;
  DIr.Code = "";
  ResetLoop(DIr);
  while (LoopKey(ckey,DIr,1,found)) begin
    if (DIr.Code==itcode) then begin found = false; end;
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        spec = DIr.Name;
        linkargs = "itcode=" & DIr.Code;
        if (salesord) then begin
          WebHWItemLink(spec,"WebHWCustItems.hal",linkargs,"","",rwt);
        end else begin
          WebHWItemLink(spec,"WebHWPOItems.hal",linkargs,"","",rwt);
        end;
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  if (msernr>dicnt) then begin
    looppos = msernr-dicnt;
  end;
  WebHWListTable(0,500,"0");
  pos = 0;
  found = true;
  ckey = "DICode:" & itcode;
  INr.Code = "";
  while (LoopKey(ckey,INr,1,found)) begin
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        if (headerprintf==false) then begin
          if (salesord) then begin
            WebHWItemHeaderBrowse;
          end else begin
            WebHWPurItemHeaderBrowse;
          end;
          headerprintf = true;
        end;
        curitemno = INr.Code;
        if (salesord) then begin
          qty = QtyInBasket(curitemno,0);
        end else begin
          qty = QtyInBasket(curitemno,999);
        end;
        if (salesord) then begin
          if (GetItemPriceDiscount3(curitemno,qty,IN2r,CUr.CurncyCode,0,0,0,0,0,
                CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
            IN2r.Name = "";
          end;
        end else begin
          price = INr.InPrice;
          vecode = GetShopBaskVECode(CurrentUser,curitemno);
          if (GetPurchaseItem(curitemno,"",PIr)) then begin
            if (blank(vecode)) then begin
              vecode = PIr.VECode; // Should have it's own field in ShopBaskVc
            end;
            price = PIr.PurPrice;
            if (nonblank(PIr.CurncyCode)) then begin
              if (PIr.CurncyCode!=basecur1) then begin
                price = MulWithRateToBase1(PIr.CurncyCode,CurrentDate,price,DefaultCurRoundOff);
              end;
            end;
          end;
        end;
        if (showprices==false) then begin
          price = BlankVal;
        end;
        spec = IN2r.Name;
        linkargs = "itcode=" & itcode & "&itemcode=" & curitemno & "&company=" & WebGetArg("company");
        rwcnt = MatRowCnt(INr);
        testf = false;
        pstr="";
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(IN2r,i,INrw);
          if (INrw.LangCode=="PICT") then begin
            testf = true;
            pstr = INrw.Text;
            i = rwcnt;
          end;
        end;
        if (salesord) then begin
          WebHWDisplayItemLine(INr.Code,linkargs,qty,INr.Unittext,curitemname,reb,price,CUr.CurncyCode,qty*price,false,rwt);
        end else begin
          WebHWDisplayPOItemLine(INr.Code,linkargs,qty,INr.Unittext,curitemname,vecode,price,CUr.CurncyCode,qty*price,false,rwt);
        end;
        rwt = rwt + 1;
        if (rwt>2) then begin rwt = 1; end;
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  WebHWListTableEnd;  
  return;
end;

function boolean FindClassInTree(string class,string searchnodes,var string visited)
begin
  record DIVc DIr;
  boolean res,testf;
  integer i,cnt;
  string 60 tstr,ch;
  
  res = false;
  if (SetInSet(class,searchnodes)) then begin
    res = true;
  end else begin
    cnt = len(searchnodes);
    for (i=0;i<cnt and res==false;i=i+1) begin
      testf = false;
      ch = mid(searchnodes,i,1);
      if (ch == ",") then begin
        testf = true;
      end else begin
        tstr = tstr & ch;
      end;
      if (testf==false and i+1==cnt) then begin
        testf = true;
      end;
      if (testf) then begin
        if (SetInSet(tstr,visited)==false) then begin
          if (nonblank(visited)) then begin
            visited = visited & ",";
          end;
          visited = visited & tstr;
          DIr.Code = tstr;
          if (ReadFirstMain(DIr,1,true)) then begin
            if (nonblank(DIr.DispGroups)) then begin
              res = FindClassInTree(class,DIr.DispGroups,visited);
            end;
          end;
        end;
        tstr = "";
      end;
    end;
  end;
  
  FindClassInTree = res;
  return;
end;

procedure WebHWDisplaySearchResult(string searchstr,Integer slevel,string insel,string itsel,string disel,LongInt maxres,Boolean salesord)
begin
  record CUVc CUr;
  record INVc INr;
  record INVc IN2r;
  row INVc INrw;
  record DIVc DIr;
  record WebHTMLVc WHr;
  string 20 frin,toin;
  string 10 frit,toit;
  Boolean TrHs,testf;
  Integer keys;
  Integer rwt;
  string 20 curitemno;
  string 100 curitemname,vecode;
  string 20 salesacc,vatcode,tax2code,taxtemplatecode;
  val price,reb,cost,qty,ordqty,tax2prc;
  Boolean calcprice;
  string 100 spec;
  string 255 linkargs,pstr;
  string 60 ckey;
  string 255 tstr;
  LongInt cnt;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  record WebControlBlock WCb;
  Time blankt;

  BlockLoad(WCb);
  rwt = 1;
  cnt = 1;
  CUr.Code = CurrentCust;
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  frin = FirstInRange(insel,20);
  toin = LastInRange(insel,20);
  frit = FirstInRange(itsel,5);
  toit = LastInRange(itsel,5);
  if (nonblank(frit)) then begin
    INr.Group = frit;
    INr.Code = frin;
    ckey = "Group";
    keys = 2;
  end else begin
    INr.Code = frin;
    ckey = "Code";
    keys = 1;
  end;
  TrHs = true;
  while (LoopKey(ckey,INr,keys,TrHs)) begin
    testf = true;
    if (nonblank(toit)) then begin
      if (INr.Group>toit) then begin TrHs = false; end;
    end else begin
      if (nonblank(toin)) then begin
        if (INr.Code>toin) then begin TrHs = false; end;
      end;
    end;
    if (TrHs==false) then begin testf = false; end;
    if (blank(INr.DispGroups)) then begin testf = false; end;
    if (INr.Terminated!=0) then begin testf = false; end;
    if ((nonblank(disel)) and (testf==true)) then begin
      if (SetInSet(disel,INr.DispGroups)==false) then begin
        testf = false;
      end;
    end;
    if (nonblank(toin)) then begin
      if (INr.Code>toin) then begin testf = false; end;
    end;
    if (testf) then begin
      tstr = "";
      if (FindClassInTree(WCb.DispGroup,INr.DispGroups,tstr)==false) then begin testf = false; end;
    end;
    if (testf) then begin
      if (slevel==0) then begin
        RecordNew(WHr);
        AddToText(INr.Name,WHr);
      end;
      if (slevel==1) then begin
        RecordNew(WHr);
        AddToText(INr.Name,WHr);
        AddToText(INr.Code,WHr);
        AddToText(INr.Group,WHr);
      end;
      if (slevel==2) then begin
        WHr.Code = INr.Code;
        WHr.SubCode = "BP"; // Hardcoded, needs setting
        if (ReadFirstMain(WHr,1,true)==false) then begin
          RecordNew(WHr);
        end;
        AddToText(INr.Name,WHr);
        AddToText(INr.Code,WHr);
        AddToText(INr.Group,WHr);
      end;
      if (StringInText(searchstr,WHr)) then begin
        reb = BlankVal;
        curitemno = INr.Code;
        ordqty = QtyInBasket(curitemno,0);
        qty = ordqty;
        if (qty==0) then begin
          qty = 1;
        end;
        if (GetItemPriceDiscount3(curitemno,qty,IN2r,CUr.CurncyCode,0,0,0,0,0,
                CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
          IN2r.Name = "";
        end;
        if (showprices==false) then begin
          price = BlankVal;
        end;
        spec = IN2r.Name;
        linkargs = "&itcode=" & INr.Group & "&itemcode=" & curitemno & "&company=" & WebGetArg("company");
        if (salesord) then begin
          WebHWDisplayItemLine(INr.Code,linkargs,ordqty,INr.Unittext,curitemname,reb,price,CUr.CurncyCode,qty*price,false,rwt);
        end else begin
          WebHWDisplayPOItemLine(INr.Code,linkargs,ordqty,INr.Unittext,curitemname,vecode,price,CUr.CurncyCode,qty*price,false,rwt);
        end;
        rwt = rwt + 1;
        if (rwt>3) then begin rwt = 1; end;
        cnt = cnt + 1;
        if (cnt>maxres) then begin TrHs = false; end;;
      end;
    end;
  end;
  return;
end;

procedure WebHWSearchResult2(Boolean salesord)
begin
  string 200 searchstr;
  string 20 maxres;
  
  searchstr = WebGetArg("search_field");
  maxres = WebGetArg("maxhits");
  WebHWStartMainPage("");
  WebHWStartTable;
  ToolWebLineStart;
  WebHWInfoCell(ToolWebReturnTheText(20189) & ": " & searchstr & "","100%","left");
  ToolWebLineEnd;  
  WebHWEndTable;  
  WebHWListTable(2,500,"0");  
  WebHWDisplaySearchResult(searchstr,2,WebGetArg("itemcode"),WebGetArg("itcode"),"",maxres,salesord);
  WebHWListTableEnd;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWSearchResult()
begin
  WebHWSearchResult2(true);
  return;
end;

global
procedure WebHWSearchPOResult()
begin
  WebHWSearchResult2(false);
  return;
end;

procedure WebHWSearchView2(Boolean salesord)
begin
  record INVc INr;
  record CUVc CUr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode;
  val price,reb,cost,qty,instock,ordqty;
  Boolean calcprice;
  string 255 tstr;
  
  WebHWStartMainPage("search_field");
  WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
  if (salesord) then begin
    WebOutLink("WebHWSearchResult.hal?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
  end else begin
    WebOutLink("WebHWSearchPOResult.hal?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
  end;
  WebOutString(""">");
  WebOutString("<table border=""0"" cellpadding=0 width=""500"">");
  WebHWEditLine(ToolWebReturnTheText(20146),"search_field","text",WebGetArg("searchstr"),false); //"Search for:"
  WebHWEditLine(ToolWebReturnTheText(20145),"maxhits","text","99",false); //"Max Hits"
  WebOutString("<tr><td colspan=2 align=right>");
  WebHWPushButton(ToolWebReturnTheText(20143),"submit","b1"); //"Search"
  WebOutString("</td></tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWSearchView()
begin
  WebHWSearchView2(true);
  return;
end;

global
procedure WebHWPOSearchView()
begin
  WebHWSearchView2(false);
  return;
end;

procedure WebHWCustItems2(Boolean salesord)
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  record CYBlock CYr;
  record WebHTMLVc WHr;
  record WebControlBlock WCr;
  record DIVc DIr;
  string 20 itcode;
  string 60 ckey;
  LongInt prevval,nextval,maxval;
  Boolean prevf,nextf,mainf,pictonly;
  LongInt msernr,pages;
  Integer showmax;
  Integer oldcomp,newcomp;
  Boolean res,res1;

  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;
  BlockLoad(CYr);
  BlockLoad(WCr);
  
  msernr = WebGetArg("sernr");
  if (msernr==-1) then begin msernr = 0; end;
  itcode = WebGetArg("itcode");
  if (blank(itcode)) then begin
    mainf = true;
    ToolWebGetDispGroup(CurrentCust,itcode);
  end;
  showmax = 10;
  if (WCr.MatLines>0) then begin
    showmax = WCr.MatLines;
  end;
  ckey = "DICode:" & itcode;
  maxval = RecordsInIndex("DIVc",ckey);
  maxval = maxval + RecordsInIndex("INVc",ckey);
  
  prevf = true;
  nextf = true;
  prevval = msernr-showmax;
  if (prevval<0) then begin 
    prevval = 0;
    prevf = false;
  end;
  nextval = msernr+showmax;
  if (nextval>maxval) then begin
    nextval = msernr;
    nextf = false;
  end;
  pages=maxval/showmax;
  if ((pages*showmax)!=maxval) then begin
    pages=pages+1;
  end; 
  WebHWStartMainPage("");
  WebOutString("<table border=0 width=""90%"">");
  if (WebLoginStatus==3) then begin 
    ShowbasketStatus(salesord);
  end;
  WebOutString("<tr><td width=180 valign=top>");
  WebOutString("<table border=0 cellspacing=0 cellpadding=1>");

  ToolWebGetDispGroup("",itcode);

  WebHWDispGroups(itcode,msernr,showmax,salesord);
  WebOutString("</table>");
  WebOutString("</td>");
  WebOutString("<td valign=top>");
  if (WebGetItemDetails(WHr,itcode,"BDG",pictonly)) then begin // Hardcoded, needs setting
    ToolWebDisplayHTMLExtra(WHr,"","");
  end;
  ToolWebHWEndPage;
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;  
end;

global
procedure WebHWCustItems()
begin
  WebHWCustItems2(true);
  return;
end;

global
procedure WebHWPOItems()
begin
  WebHWCustItems2(false);
  return;
end;

procedure WebHWShopBasket2(Boolean salesord)
begin
  record ORVc ORr;
  record CUVc CUr;
  Boolean res;
  Boolean proceedf;
  row ORVc ORrw;
  record INVc INr;
  Integer rwt;
  Integer rwcnt,i,ShopBaskCheckOut;
  string 255 linkargs;
  Boolean freightf,found,printed,webdisplay;
  record DelAddrVc DelAddrr;
  string 6 selected;
  record WebControlBlock WCb;
  record WebDisplayVc WDr;
  LongInt baskno;

  if (salesord) then begin
    baskno = -1;
  end else begin
    baskno = 999;
  end;
  printed = false;
  selected = WebGetArg("deladdress");
  proceedf = false;
  if (LoggedInHWTest()) then begin
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    CUr.Name = "";
  end;
  if (salesord) then begin
    res = BuildWebOrd(CurrentCust,baskno,ORr,freightf,GetWebLanguage);
  end else begin
    res = BuildWebOrd(CurrentUser,baskno,ORr,freightf,GetWebLanguage); // Turnes out baskno==999 was all it took
  end;
  rwcnt = MatRowCnt(ORr);
  if (rwcnt>0) then begin proceedf = true; end;
  WebHWStartMainPage("");
  if (salesord) then begin
    WebOutString("<table border=0 width=""100%"" align=left>");
    if (nonblank(selected)) then begin
      if (selected == "other") then begin
        ToolWebLineStart;
        WebOutString("<td><b>" & ToolWebReturnTheText(20210) & ":</b></td>");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td><table>");
        WebOutString("<form method=""post"" action=""");
        WebOutLink("WebHWStoreDelCode.hal?sessionid=" & WebGetArg("sessionid"));
        WebOutString(""">");
        WebOutString("<table width=""100&"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
        WebHWEditLine(ToolWebReturnTheText(20163),"address1","text",WebGetArg("address1"),false);
        WebHWEditLine("","address2","text",WebGetArg("address2"),false);
        WebHWEditLine("","address3","text",WebGetArg("address3"),false);
        WebHWEditLine("","address4","text",WebGetArg("address4"),false);
        WebHWEditLine("","address5","text",WebGetArg("address5"),false);
        ToolWebLineStart;
        WebOutString("<td>");  
        WebOutString("<input type=""submit"" name=""submit"" value=""" & ToolWebReturnTheText(20067) & """>");
        WebOutString("<input type=""reset"" name=""reset"" value=""" & ToolWebReturnTheText(20068) & """>");
        WebOutString("</td>");
        ToolWebLineEnd;
        WebOutString("</form>");
        WebOutString("</table></td>");
        ToolWebLineEnd;
        goto LWebHWShopBasket;
      end else begin 
        ToolWebLineStart;
        WebOutString("<td><b>" & ToolWebReturnTheText(20211) & ":</b></td>");
        ToolWebLineEnd;
        if (selected == "inv") then begin
          WebHWOutLine(CUr.InvAddr0);
          WebHWOutLine(CUr.InvAddr1);
          WebHWOutLine(CUr.InvAddr2);
          WebHWOutLine(CUr.InvAddr3);
          WebHWOutLine(CUr.InvAddr4);
          printed = true;
        end;
        if (selected == "del") then begin
          WebHWOutLine(CUr.DelAddr0);
          WebHWOutLine(CUr.DelAddr1);
          WebHWOutLine(CUr.DelAddr2);
          WebHWOutLine(CUr.DelAddr3);
          WebHWOutLine(CUr.DelAddr4);
          printed = true;
        end;
        if (printed == false) then begin
          ResetLoop(DelAddrr);
          DelAddrr.CustCode = CurrentCust;
          DelAddrr.DelCode = selected;
          if (ReadFirstKey("CustCode",DelAddrr,2,true)) then begin
            if (DelAddrr.CustCode==CurrentCust) then begin
              WebHWOutLine(DelAddrr.DelAddr0);
              WebHWOutLine(DelAddrr.DelAddr1);
              WebHWOutLine(DelAddrr.DelAddr2);
              WebHWOutLine(DelAddrr.DelAddr3);
              WebHWOutLine(DelAddrr.DelAddr4);
            end;
          end;
        end;
      end;      
    end else begin
      ToolWebLineStart;
      WebOutString("<td><b>" & ToolWebReturnTheText(20211) & ":</b></td>");
      ToolWebLineEnd;
      if (nonblank(CUr.DelAddr0)) then begin
        WebHWOutLine(CUr.DelAddr0);
        WebHWOutLine(CUr.DelAddr1);
        WebHWOutLine(CUr.DelAddr2);
        WebHWOutLine(CUr.DelAddr3);
        WebHWOutLine(CUr.DelAddr4);
      end else begin
        WebHWOutLine(CUr.InvAddr0);
        WebHWOutLine(CUr.InvAddr1);
        WebHWOutLine(CUr.InvAddr2);
        WebHWOutLine(CUr.InvAddr3);
        WebHWOutLine(CUr.InvAddr4);
      end;
    end;
    ToolWebLineStart;
    WebOutString("<form method=""post"" action=""");
    WebOutLink("WebHWShopBasket.hal?sessionid=" & WebGetArg("sessionid"));
  //  WebOutLink("WebHWShopBasketStep.hal?sessionid=" & WebGetArg("sessionid"));
    WebOutString(""">");
    WebOutString("<td>" & ToolWebReturnTheText(20212) & ": ");
    WebOutString("<select name=deladdress onChange=""submit(this.form)"">");
    if (nonblank(CUr.DelAddr0)) then begin
      WebOutString("<option value=""del"" ");
      if (blank(selected)) then begin
        WebOutString("selected");
        selected = "del";
      end;
      if (selected=="del") then begin
        WebOutString("selected");        
      end;
      WebOutString(">" & CUr.DelAddr0 & "</option>");
    end;
    WebOutString("<option value=""inv"" ");
    if (blank(selected) and blank(CUr.DelAddr0)) then begin
      WebOutString("selected");
      selected = "inv";
    end;
    if (selected=="inv") then begin
      WebOutString("selected");        
    end;
    WebOutString(">" & CUr.InvAddr0 & "</option>");

    found = true;
    DelAddrr.CustCode = CurrentCust;
    while (LoopKey("CustCode",DelAddrr,1,found)) begin
      if (DelAddrr.CustCode==CurrentCust) then begin
        WebOutString("<option value=""" & DelAddrr.DelCode & """ ");
        if (selected==DelAddrr.DelCode) then begin
          WebOutString("selected");        
        end;
        WebOutString(">" & DelAddrr.DelAddr0 &"</option>");
      end else begin
        found = false;
      end;
    end;
    WebOutString("<option value=""other"" ");
    if (selected=="other") then begin
      WebOutString("selected");        
    end;
    WebOutString(">" & ToolWebReturnTheText(20213) & "</option>");
    WebOutString("</select>");
    WebOutString("</form>");
    WebOutString("</td>");
    ToolWebLineEnd;
  end else begin
    ToolWebLineStart;
    WebOutString("<td><b>" & ToolWebReturnTheText(20214) & "</b></td>");
    ToolWebLineEnd;
  end;
  ToolWebLineStart;
  if (proceedf==true) then begin
    BlockLoad(WCb);
    WebOutString("<td>");
    if (salesord) then begin
      WebHWItemHeaderBasket;
    end else begin
      WebHWPurItemHeaderBasket;
    end;
    rwcnt = MatRowCnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(ORr,i,ORrw);
      INr.Code = ORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)==false) then begin
        INr.Unittext = "";
      end;
      linkargs = "itemcode=" & ORrw.ArtCode;
      if (salesord) then begin
        WebHWDisplayItemLine(ORrw.ArtCode,linkargs,ORrw.Quant,INr.Unittext,ORrw.Spec,ORrw.vRebate,ORrw.Price,ORr.CurncyCode,ORrw.Sum,true,rwt);
      end else begin
        WebHWDisplayPOItemLine(ORrw.ArtCode,linkargs,ORrw.Quant,INr.Unittext,ORrw.Spec,ORrw.VECode,ORrw.Price,ORr.CurncyCode,ORrw.Sum,true,rwt);
      end;
      rwt = rwt + 1;
      if (rwt>1) then begin rwt = 0; end;
    end;
    WebHWListTableEnd;
    WebOutString("</td>");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
//    WebHWListTable(3,500,"0");
    WebOutString("<table cols=""3"" width=""90%"" border=""0"">");
    if (salesord) then begin
      ToolWebLineStart;
      WebHWInfoCell(ToolWebReturnTheText(20104),"70%","right");
      WebHWInfoCell(ORr.Sum1,"20%","right");
      WebHWInfoCell(ORr.CurncyCode,"10%","center");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebHWInfoCell(ToolWebReturnTheText(20105),"70%","right");
      WebHWInfoCell(ORr.Sum3,"20%","right");
      WebHWInfoCell(ORr.CurncyCode,"10%","center");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebHWInfoCell(ToolWebReturnTheText(20106),"70%","right");
      WebHWInfoCell(ORr.Sum4,"20%","right");
      WebHWInfoCell(ORr.CurncyCode,"10%","center");
      ToolWebLineEnd;
    end else begin
      ToolWebLineStart;
      WebHWInfoCell(ToolWebReturnTheText(20106),"70%","right");
      WebHWInfoCell(ORr.Sum1,"20%","right");
      WebHWInfoCell(ORr.CurncyCode,"10%","center");
      ToolWebLineEnd;
    end;
    WebHWListTableEnd;
    WebOutString("</td>");
    ToolWebLineEnd;    
    ToolWebLineStart;
    WebOutString("<td>");
    WebOutString("<table cols=""3"" width=""90%"" border=""0"">");
    if (salesord) then begin
      WDr.Code = CUr.WebDisplays;
      if (ReadFirstMain(WDr,1,true)) then begin
        ShopBaskCheckOut = WDr.ShopBaskCheckOut;
      end else begin
        ShopBaskCheckOut = WCb.ShopBaskCheckOut;
      end;
      switch (ShopBaskCheckOut) begin
        case 0:
          WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
          WebOutLink("WebHWORStore.hal?sessionid=" & WebGetArg("sessionid"));//& "&backnr=" & WebGetArg("backnr")
          WebOutString(""">");
          WebOutString("<tr><td colspan=2 align=right>");
          WebHWPushButton(ToolWebReturnTheText(20101),"submit","b1");
          WebOutString("</td></tr>");
          WebOutString("</form>");
        case 1:
          CreateFormToPaySite("WebHWShopBasketStepPAY2.hal","itemcode=" & WebGetArg("itemcode") & "deladdr=" & selected);
  //    WebOutLink("WebHWShopBasketStep2.hal?sessionid=" & WebGetArg("sessionid") & "&itemcode=" & WebGetArg("itemcode") & "deladdr=" & selected);
  //    WebOutLink("WebHWShopBasketStepPAY2.hal?sessionid=" & WebGetArg("sessionid") & "&itemcode=" & WebGetArg("itemcode") & "deladdr=" & selected);
          ToolWebLineStart;
          WebOutString("<td align=""right"" valign=""top""><input type=""submit"" value=""" & ToolWebReturnTheText(20215) & """ onClick=""close()"" name=""b1""></td>");
          ToolWebLineEnd;
          WebOutString("</form>");
      end;
    end else begin
      WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
      WebOutLink("WebHWPOStore.hal?sessionid=" & WebGetArg("sessionid"));//& "&backnr=" & WebGetArg("backnr")
      WebOutString(""">");
      WebOutString("<tr><td colspan=2 align=right>");
      WebHWPushButton(ToolWebReturnTheText(20101),"submit","b1");
      WebOutString("</td></tr>");
      WebOutString("</form>");
    end;
    WebHWListTableEnd;
    WebOutString("</td>");
  end else begin
    WebHWInfoCell(ToolWebReturnTheText(20107),"100%","false");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
LWebHWShopBasket:;
  ToolWebHWEndPage;
  end;
  return;  
end;

global
procedure WebHWShopBasket()
begin
  WebHWShopBasket2(true);
  return;
end;

global
procedure WebHWPOShopBasket()
begin
  WebHWShopBasket2(false);
  return;
end;

global
updating procedure WebHWShopBasketStep2()
begin
  record WebHTMLVc WHr;
  record CUVc CUr;
  LongInt orderno,invno;
  Boolean res;
  Integer i,err;
  string 255 warning;

//  if (LoggedInHWTest()) then begin //Might have to support the fact that this order can be stored even if the server has logged you out, since the payment has gone through
    orderno = ToolWebStoreTheOrder2(invno,WebGetArg("CreditCardType"),true);
    if (orderno<0) then begin
      WebHWShopBasket;
    end else begin
      err = CreateMailFromWebIV(invno,warning);
//      WebHWStartMainPage("");
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)) then begin end;
      ToolWebHWStartPage;
      WebOutString("<script language=""JavaScript"">");
      WebOutNL;
      WebOutString("<!--");
      WebOutNL;
      WebOutString("function MM_openBrWindow(theURL,winName,features) { //v2.0");
      WebOutNL;
      WebOutString("  window.open(theURL,'',features);");
      WebOutNL;
      WebOutString("}");
      WebOutNL;
      WebOutString("//-->");
      WebOutNL;
      WebOutString("</script>");
      WebOutNL;
      WebOutString("<table width=""100%"" cellpadding=""17"">");
      ToolWebLineStart;
      WebHWInfoCell("<h2>" & ToolWebReturnTheText(20216) & "</h2>","100%","center");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebHWInfoCell("<b>" & ToolWebReturnTheText(20223) & " " & CUr.Person & "!</p>","100%","left");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td><p><b>" & ToolWebReturnTheText(20217) & "<br>");
      WebOutString("<b>" & ToolWebReturnTheText(20103) & " " & orderno & ". " & ToolWebReturnTheText(20219) & ": " & CurrentDate & ".<br></p></td>");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td align=""left""><a href=""Javascript:void(0)"" onClick=""MM_openBrWindow('./WebCCPaymentInvoice.hal?langcode=" & GetWebLanguage & "&invno=" & invno & "&ordno=" & orderno & "&ccnumber=" & right(WebGetArg("ccnumber"),4) & "','Item view','scrollbars=yes ,rezisable=yes,width=780,height=790')""><b>" & ToolWebReturnTheText(20197) & "</b></a></TD>");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td align=""left"">");
      CreateLinkFromPaySite(ToolWebReturnTheText(20221));
      WebOutString("</a></TD>");
      ToolWebLineEnd;
      WebOutString("</table>");
    end;
//  end;
  return;
end;

global
procedure ToolWebHWShopBasketStep2Complete(longint orderno)
begin
  record WebHTMLVc WHr;
  record CUVc CUr;
  record IVVc IVr;
  Boolean res;
  Integer i,err;
  string 255 warning;

  if (LoggedInHWTest()) then begin
    if (orderno<0) then begin
      WebHWShopBasket;
    end else begin
      IVr.OrderNr = orderno;
      if (ReadFirstKey("OrderNr",IVr,1,true)) then begin end;
      
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)) then begin end;
      ToolWebHWStartPage;
      WebOutString("<script language=""JavaScript"">");
      WebOutNL;
      WebOutString("<!--");
      WebOutNL;
      WebOutString("function MM_openBrWindow(theURL,winName,features) { //v2.0");
      WebOutNL;
      WebOutString("  window.open(theURL,'',features);");
      WebOutNL;
      WebOutString("}");
      WebOutNL;
      WebOutString("//-->");
      WebOutNL;
      WebOutString("</script>");
      WebOutNL;
      WebOutString("<table width=""100%"" cellpadding=""17"">");
      ToolWebLineStart;
      WebHWInfoCell("<h2>" & ToolWebReturnTheText(20216) & "</h2>","100%","center");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebHWInfoCell("<b>" & ToolWebReturnTheText(20223) & " " & CUr.Person & "!</p>","100%","left");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td><p><b>" & ToolWebReturnTheText(20217) & "<br>");
      WebOutString("<b>" & ToolWebReturnTheText(20103) & " " & orderno & ". " & ToolWebReturnTheText(20219) & ": " & CurrentDate & ".<br></p></td>");
      ToolWebLineEnd;
      ToolWebLineStart;
      if (nonblank(IVr.SerNr)) then begin
        WebOutString("<td align=""left""><a href=""Javascript:void(0)"" onClick=""MM_openBrWindow('./WebCCPaymentInvoice.hal?langcode=" & GetWebLanguage & "&invno=" & IVr.SerNr & "&ordno=" & orderno & "&ccnumber=" & right(WebGetArg("ccnumber"),4) & "','Item view','scrollbars=yes ,rezisable=yes,width=780,height=790')""><b>" & ToolWebReturnTheText(20197) & "</b></a></TD>"); //invoice details
      end else begin
        WebOutString("<td align=""left""><a href=""Javascript:void(0)"" onClick=""MM_openBrWindow('./WebStandardOrder.hal?langcode=" & GetWebLanguage & "&ordno=" & orderno & "&ccnumber=" & right(WebGetArg("ccnumber"),4) & "','Item view','scrollbars=yes ,rezisable=yes,width=780,height=790')""><b>" & ToolWebReturnTheText(20196) & "</b></a></TD>"); //order details
      end;
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td align=""left"">");
      CreateLinkFromPaySite(ToolWebReturnTheText(20221));
      WebOutString("</a></TD>");
      ToolWebLineEnd;
      WebOutString("</table>");
    end;
  end else begin
    WebHWStartMainPage("");
    WebOutString("<table width=""100%"">");
    ToolWebLineStart;
    WebHWInfoCell(ToolWebReturnTheText(20251),"100%","left"); //logged out, but please check mail for status of your payment
    ToolWebLineEnd;
    WebOutString("</table>");
    ToolWebHWEndPage;
  end;
  return;
end;

global
updating procedure WebHWStoreItem()
begin
  if (LoggedInHWTest()) then begin
    ToolWebStoreTheItem;
    if (nonblank(WebGetArg("itcode"))) then begin
      WebHWCustItems;
    end else begin
      WebHWShopBasket;
    end;
  end;
  return;
end;

global
updating procedure WebHWPOStoreItem()
begin
  if (LoggedInHWTest()) then begin
    WebStoreThePOItem;
    if (nonblank(WebGetArg("itcode"))) then begin
      WebHWPOItems;
    end else begin
      WebHWPOShopBasket;
    end;
  end;
  return;
end;

global
updating procedure WebHWPOStoreVESelect()
begin
  if (LoggedInHWTest()) then begin
    WebStoreTheVESelect;
    if (nonblank(WebGetArg("itcode"))) then begin
      WebHWPOItems;
    end else begin
      WebHWPOShopBasket;
    end;
  end;
  return;
end;

global
updating procedure WebHWStoreDelCode()
begin
  record DelAddrVc DelAddrr;
  record CUVc CUr;
  string 6 delcode;
  
  if (nonblank(WebGetArg("address1"))) then begin
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)) then begin end;
  RecordNew(DelAddrr);
  DelAddrr.CustCode = CurrentCust;
  if (GetNextDelCode(delcode)) then begin end;
  DelAddrr.DelCode = delcode;
  DelAddrr.Name = CUr.Name;
  DelAddrr.DelAddr0 = WebGetArg("address1");
  DelAddrr.DelAddr1 = WebGetArg("address2");
  DelAddrr.DelAddr2 = WebGetArg("address3");
  DelAddrr.DelAddr3 = WebGetArg("address4");
  DelAddrr.DelAddr4 = WebGetArg("address5");
  DelAddrr.Comment = "Added from web";
  if (RecordStore(DelAddrr,false)) then begin end;
  end;
  WebHWShopBasket;
  return;
end;

global
updating procedure WebFailedCreditCard()
begin
  record WebHTMLVc WHr;

  if (LoggedInHWTest()) then begin
    WebHWStartMainPage("");
    WebOutString("<table width=""100%"">");
    ToolWebLineStart;
    WebHWInfoCell(ToolWebReturnTheText(20221),"100%","left");
    ToolWebLineEnd;
    WebOutString("</table>");
    ToolWebHWEndPage;
  end;
  return;
end;

updating procedure WebHWORStore2(Boolean salesord)
begin
  record CUVc CUr;
  Boolean res,freight;
  LongInt orderno,invno;
  
  if (LoggedInHWTest()) then begin
    if (salesord) then begin
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)==false) then begin
        CUr.Name = "";
      end;
      orderno = ToolWebStoreTheOrder2(invno,"",false);
      if (orderno<=0) then begin
      end else begin
        ToolWebHWStartPage;
        WebHWCharset;
        WebHWStartBody;
        ToolWebHWStartPage;
        WebOutString("<script language=""JavaScript"">");
        WebOutNL;
        WebOutString("<!--");
        WebOutNL;
        WebOutString("function MM_openBrWindow(theURL,winName,features) { //v2.0");
        WebOutNL;
        WebOutString("  window.open(theURL,'',features);");
        WebOutNL;
        WebOutString("}");
        WebOutNL;
        WebOutString("//-->");
        WebOutNL;
        WebOutString("</script>");
        WebOutNL;
        WebOutString("<table width=""100%"" cellpadding=""17"">");
        ToolWebLineStart;
        WebHWInfoCell("<h2>" & ToolWebReturnTheText(20216) & "</h2>","100%","center");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebHWInfoCell("<b>" & ToolWebReturnTheText(20223) & " " & CUr.Person & "!</p>","100%","left");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td><p><b>" & ToolWebReturnTheText(20217) & ".<br>");
        WebOutString("<b>" & ToolWebReturnTheText(20103) & " " & orderno & ". " & ToolWebReturnTheText(20219) & ": " & CurrentDate & ".<br></p></td>");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td align=""left""><a href=""Javascript:void(0)"" onClick=""MM_openBrWindow('./WebStandardOrder.hal?langcode=" & GetWebLanguage & "&ordno=" & orderno & "&ccnumber=" & right(WebGetArg("ccnumber"),4) & "','Item view','scrollbars=yes ,rezisable=yes,width=780,height=790')""><b>" & ToolWebReturnTheText(20196) & "</b></a></TD>");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td align=""left"">");
        CreateLinkFromPaySite(ToolWebReturnTheText(20221));
        WebOutString("</a></TD>");
        ToolWebLineEnd;
        WebOutString("</table>");

        ToolWebHWEndPage;
      end;
    end else begin
      ToolWebHWStartPage;
      WebHWCharset;
      WebHWStartBody;
      ToolWebHWStartPage;
      WebOutString("<table width=""100%"" cellpadding=""17"">");
      ToolWebLineStart;
      if (ToolWebStoreThePurOrder2) then begin
        WebOutString("<td><b>" & ToolWebReturnTheText(20224) & "</b></td>");
      end else begin
        WebOutString("<td><b>" & ToolWebReturnTheText(20225) & "</b></td>");
      end;
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td align=""left"">");
      CreateLinkFromPaySite(ToolWebReturnTheText(20221));
      WebOutString("</a></TD>");
      ToolWebLineEnd;
      WebOutString("</table>");
      ToolWebHWEndPage;
    end;
  end;
  return;
end;

global
updating procedure WebHWORStore()
begin
  WebHWORStore2(true);
  return;
end;

global
updating procedure WebHWPOStore()
begin
  WebHWORStore2(false);
  return;
end;
