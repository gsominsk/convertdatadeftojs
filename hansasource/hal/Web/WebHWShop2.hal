external function string 200 GetWebLanguage();
external function string 20 GetShopBaskVECode(string,string);
external function val DivRateToBase1(string,val,val,val,val,val,val,roundmode);
external procedure POSumup(var record POVc);
external procedure RoundRowSum(string,string,string,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure DivPIFactor(val,val,var val);
external procedure GetItemVATCode(string,Integer,var string,Boolean);
external function Boolean PasteVEInPO(var record POVc,Boolean);
external updating function Boolean BuildWebOrd2(string,LongInt,var record ORVc, var Boolean,string);
external updating function Integer RecordAction_raPasteOrdInInv(var record IVVc,LongInt,Boolean,var Integer);
external function Boolean LoggedInHWTest();
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Integer CheckVATNrMask(string,string,Integer,var string);
external function Boolean CustomerWithEmailExists(string,string);
external function Boolean InterNetAddrTest(string);

// WebHtml.hal (can stay)
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHiddenField(string,string);

// WebFunc.hal (can stay)
external function Boolean ToolWebGetCustAndSettings(var record CUVc,var Boolean,var Boolean);
external procedure ToolWebDisplayHTMLExtra(record WebHTMLVc,string,string);

// WebStore.hal (can stay)
external function val QtyInBasket(String,Integer);

// WebHWMain.hal
external procedure WebHWStartMainPage(string);

// WebHWHtml.hal
external procedure ToolWebHWEndPage();
external procedure WebHWEditLine(string,string,string,string,Boolean);
external procedure WebHWInfoCell(string,string,string);
external procedure WebHWInfoCellError(string,string,string);
external procedure WebHWTableHdr(string,string,string);
external procedure WebHWListTable(Integer,Integer,string);
external procedure WebHWListTableEnd();
external procedure WebHWTableData(string,string,string,string,string,string,Integer);
external procedure WebHWPushButton(string,string,string);
external procedure WebHWEditFieldBrowse(string,string,string,string,Integer,Integer,Integer);

// WebHWFunc.hal
external function Boolean WebGetItemDetails(var record WebHTMLVc,string,string,var Boolean);

// Standard HAL function
external procedure GetBaseCurncy(Integer,var string);
external function Boolean GetPurchaseItem(string,string,var record PIVc);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function Boolean GetNextCustNr(var string);
external updating procedure CreateMailFromNewCur(record CUVc,string);
external function val GetStockQty(string,string,Date,Boolean);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external function string 200 ToolWebReturnTheText(Integer);

// WebHBSDivShop2.hal
external function string 5 FindBestCreditCardCurrency(string);

procedure WebHWPrintRegister()
begin
  WebOutString("<form method=""post"" action=""");
  WebOutLink("WebHWStoreCust.hal?sessionid=" & WebGetArg("sessionid"));
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  WebHWEditLine(USetStr(20504) & " (*)","companyname","text",WebGetArg("companyname"),false);
  WebHWEditLine(USetStr(20505) & " (*)","person","text",WebGetArg("person"),false);
  WebHWEditLine(USetStr(20506) & " 1" & " (*)","address1","text",WebGetArg("address1"),false);
  WebHWEditLine(USetStr(20506) & " 2","address2","text",WebGetArg("address2"),false);
  WebHWEditLine(USetStr(20506) & " 3","address3","text",WebGetArg("address3"),false);
  WebHWEditLine(USetStr(20506) & " 4","address4","text",WebGetArg("address4"),false);
  WebHWEditLine(USetStr(20506) & " 5","address5","text",WebGetArg("address5"),false);
  WebHWEditLine(USetStr(20507) & " (*)","orgnr","text",WebGetArg("orgnr"),false);
  WebHWEditLine(USetStr(20508) & " (*)","phone","text",WebGetArg("phone"),false);
  WebHWEditLine(USetStr(20509),"email","text",WebGetArg("email"),false);
  WebHWEditLine(USetStr(20510),"fax","text",WebGetArg("fax"),false);
  WebHWEditLine(USetStr(20511) & " (*)","passwd","password",WebGetArg("passwd"),false);
  WebHWEditLine(USetStr(20552) & " (*)","passwd2","password",WebGetArg("passwd2"),false);
  WebHWEditLine(USetStr(20512),"message","text",WebGetArg("message"),false);
  WebHWEditLine(USetStr(20513),"","text","",false);
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  WebOutString("<input type=""submit"" name=""" & USetStr(20514) & """ value=""" & ToolWebReturnTheText(20067) & """>");
  WebOutString("<input type=""reset"" name=""" & USetStr(20515) & """ value=""" & ToolWebReturnTheText(20068) & """>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  return;
end;

function Boolean PasswordCorrectWeb(string passwd,var string errmsg)
BEGIN
  Boolean res;
  record RcVc RepSpec;
  record PasswdSetBlock PasswdSetRec;
  Integer i,l;
  string 2 c;
  
  res = false;
  errmsg = "";
  BlockLoad(PasswdSetRec);
  l = len(passwd);
  if (PasswdSetRec.MinPasswdLen!=0) then begin
    if (l<PasswdSetRec.MinPasswdLen) then begin
      errmsg = USetStr(1029);
      goto LPasswordCorrectWeb;
    end;
  end;
  if (PasswdSetRec.CapitalInPasswd!=0) then begin
    for (i=0;i<=l;i=i+1) begin
      if ((asc(Mid(passwd,i,1))>=65) and (asc(Mid(passwd,i,1))<=90)) then begin
        goto L77;
      end;
    end;
    errmsg = USetStr(1029);
    goto LPasswordCorrectWeb;
  end;
L77:;
  if (PasswdSetRec.DigitInPasswd!=0) then begin
    for (i=0;i<=l;i=i+1) begin
      if ((asc(Mid(passwd,i,1))>=48) and (asc(Mid(passwd,i,1))<=57)) then begin
        goto L88;
      end;
    end;
    errmsg = USetStr(1029);
    goto LPasswordCorrectWeb;
  end;
L88:;
  res = true;
LPasswordCorrectWeb:;
  PasswordCorrectWeb = res;
  RETURN;
END;

global
updating procedure WebHWStoreCust()
begin
  record WebControlBlock WCr;
  record CUVc CUr;
  Boolean storef;
  string 255 passw,passw2;
  string 255 errmsg;
  string 255 tstr;
  Integer err;
  
  BlockLoad(WCr);
  storef = true;
  WebHWStartMainPage("companyname");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  RecordNew(CUr);
  CUr.Name = WebGetArg("companyname");
  if (nonblank(CUr.Name)) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      WebHWInfoCellError(USetStr(20516),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
    end;
  end;
  CUr.VATNr = WebGetArg("orgnr");
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      WebHWInfoCellError(USetStr(20516),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
    end;
  end;
  if (storef) then begin
    CUr.Name = WebGetArg("companyname");
    CUr.Person = WebGetArg("person");
    CUr.InvAddr0 = WebGetArg("address1");
    CUr.InvAddr1 = WebGetArg("address2");
    CUr.InvAddr2 = WebGetArg("address3");
    CUr.InvAddr3 = WebGetArg("address4");
    CUr.InvAddr4 = WebGetArg("address5");
    CUr.VATNr = WebGetArg("orgnr");
    CUr.eMail = WebGetArg("email");
    CUr.Phone = WebGetArg("phone");
    CUr.Fax = WebGetArg("fax");
    CUr.PLCode = WCr.DefPLCode;
    CUr.AllowLogin = 1;
    CUr.CUType = 1;
    CUr.Comment = WebGetArg("message");
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    passw = WebGetArg("passwd");
    passw2 = WebGetArg("passwd2");
    if (blank(CUr.Code)) then begin
      WebHWInfoCellError(USetStr(20517),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
      goto LWebHWStoreCust;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone)) or
        (blank(CUr.InvAddr0)) or
        (blank(passw)) or
        (blank(passw2))) then begin
      WebHWInfoCellError(USetStr(20518),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
      goto LWebHWStoreCust;
    end;
    if (nonblank(CUr.eMail)) then begin
      if (InterNetAddrTest(CUr.eMail)==false) then begin     
        WebHWInfoCellError(USetStr(2289),"100%","false");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td>");
        WebHWPrintRegister;
        storef = false;
        goto LWebHWStoreCust;
      end;
      if (CustomerWithEmailExists("",CUr.eMail)) then begin
        WebHWInfoCellError(USetStr(20766) & ": " & CUr.eMail,"100%","false");
        ToolWebLineEnd;
        ToolWebLineStart;
        WebOutString("<td>");
        WebHWPrintRegister;
        storef = false;
        goto LWebHWStoreCust;
      end;
    end;
    err = CheckVATNrMask(CUr.VATNr,CUr.CountryCode,CUr.CustType,tstr);
    if (err!=0) then begin
      WebHWInfoCellError(USetStr(err) & ": " & tstr,"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
      goto LWebHWStoreCust;
    end;
    if (passw<>passw2) then begin
      WebHWInfoCellError("Passwords doesn't match !","100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
      goto LWebHWStoreCust;
    end;
    if (PasswordCorrectWeb(passw,errmsg)==false) then begin
      WebHWInfoCellError(errmsg,"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWPrintRegister;
      storef = false;
      goto LWebHWStoreCust;
    end;
  end;
LWebHWStoreCust:;
  if (storef) then begin
//    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    WebHWInfoCellError(USetStr(20519) & " " & CUr.Code,"100%","false");
    CreateMailFromNewCur(CUr,passw);
  end else begin
    WebOutString("</td>");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWRegister()
begin
  WebHWStartMainPage("");
  WebHWPrintRegister;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWItemView()
begin
  record INVc INr;
  record CUVc CUr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,qtystr,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,ordqty,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices;
  Boolean pictonly,dummyf;
  Integer rwt;
  Time blankt;
  
  rwt = 0;
  showstocklevel = false;
  showprices = true;
  curitemno = WebGetArg("itemcode");
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  qty = 1;
  if (GetItemPriceDiscount3(curitemno,qty,INr,CUr.CurncyCode,0,0,0,0,0,
                  CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                  price,curitemname,reb,vatcode,cost,salesacc,
                  CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
      INr.Name = "";
  end;
  if (showprices==false) then begin
    price = BlankVal;
  end;
  instock = GetStockQty(INr.Code,"",CurrentDate,false);
  qty = QtyInBasket(curitemno,0);
  qtystr = ValToString(qty,M4UVal," ",".",0);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  if (WebLoginStatus==3) then begin
    WebHWStartMainPage("ord_qty");
  end else begin
    WebHWStartMainPage("");
  end;
  WebOutString("<table width=""100%"">");
  WebOutString("<tr><td>");
  if (WebGetItemDetails(WHr,curitemno,"BP",pictonly)) then begin // Hardcoded, needs setting
    ToolWebDisplayHTMLExtra(WHr,"","");
  end;
  WebOutNL;
  WebOutString("</td></tr>");
  WebOutString("<tr><td>");
  WebOutNL;
  if (WebLoginStatus==3) then begin
    WebOutString("<form name=""HansaForm"" method=""GET"" action=""");
    WebOutLink("WebHWStoreItem.hal");//?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
    WebOutString(""">");
  end;
  if (showstocklevel) then begin
//    WebHWListTable(7,500,"0");
    WebOutString("<table cols=""7"" width=""90%"" border=""0"">");
    ToolWebLineStart;
    WebHWTableHdr(ToolWebReturnTheText(20096),"left","12%");
    WebHWTableHdr(ToolWebReturnTheText(20097),"center","10%");
    WebHWTableHdr(ToolWebReturnTheText(20098),"left","33%");
  end else begin
//    WebHWListTable(6,500,"0");
    WebOutString("<table cols=""6"" width=""90%"" border=""0"">");
    ToolWebLineStart;
    WebHWTableHdr(ToolWebReturnTheText(20096),"left","15%");
    WebHWTableHdr(ToolWebReturnTheText(20098),"left","40%");
  end;
  WebHWTableHdr(ToolWebReturnTheText(20099),"right","13%");
  WebHWTableHdr("","right","2%");
  WebHWTableHdr(ToolWebReturnTheText(20100),"left","13%");
  WebHWTableHdr("","left","17%");
  ToolWebLineEnd;

  WebOutString("<tr height=32>");
  ToolWebHiddenField("backpage",WebGetArg("backpage"));
  ToolWebHiddenField("sessionid",WebGetArg("sessionid"));
  ToolWebHiddenField("backnr",WebGetArg("backnr"));
  ToolWebHiddenField("sernr",WebGetArg("sernr"));
  ToolWebHiddenField("itemcode",WebGetArg("itemcode"));
  ToolWebHiddenField("itcode",WebGetArg("itcode"));
  if (showstocklevel) then begin
    WebHWTableData(curitemno,"","","left","12%","",rwt);
    WebHWTableData(instock,"","","center","10%","",rwt);
    WebHWTableData(curitemname,"","","left","33%","",rwt);
  end else begin
    WebHWTableData(curitemno,"","","left","15%","",rwt);
    WebHWTableData(curitemname,"","","left","40%","",rwt);
  end;
  WebHWTableData(price,"","","right","13%","",rwt);
  WebHWTableData("","","","right","2%","",rwt);
  WebHWEditFieldBrowse("ord_qty","text",qtystr,"7%",5,7,rwt);
  WebHWTableData(INr.Unittext,"","","left","8%","",rwt);
  qtystr = ValToString(qty,M4UVal,"","",rwt);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  WebOutString("<td width=""15%"" align=""left"">");

  if (WebLoginStatus==3) then begin
    if (nonblank(CurrentCust)) then begin
      WebHWPushButton(ToolWebReturnTheText(20101),"submit","b1"); //Order
    end else begin
//      WebLink("Select a Customer","WebMainUser.hal","",""); // If our own users should be allowed to login...
      WebHWTableData(ToolWebReturnTheText(20049),"WebHWLogin.hal","","left","8%","",rwt);
    end;
  end else begin
    WebHWTableData(ToolWebReturnTheText(20049),"WebHWLogin.hal","","left","8%","",rwt);
  end;

  WebOutString("</td>");
  ToolWebLineEnd;
  if (WebLoginStatus==3) then begin
    WebOutString("</form>");
  end;
  WebOutString("</table>");
  WebOutString("</td></tr>");
  WebHWListTableEnd;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWPOItemView()
begin
  record INVc INr;
  record PIVc PIr;
  record CUVc CUr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname,vecode;
  string 20 salesacc,vatcode,qtystr,tax2code;
  val price,reb,cost,qty,instock,ordqty,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices;
  Boolean pictonly,dummyf;
  Integer rwt;
  string 10 basecur1;

  GetBaseCurncy(1,basecur1);
  rwt = 0;
  showstocklevel = false;
  showprices = true;
  curitemno = WebGetArg("itemcode");
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  qty = 1;
  if (ReadFirstItem(curitemno,INr,true,true)) then begin
    curitemname = INr.Name;
    price = INr.InPrice;
  end;
  vecode = GetShopBaskVECode(CurrentUser,curitemno);
  if (GetPurchaseItem(curitemno,"",PIr)) then begin
    if (blank(vecode)) then begin
      vecode = PIr.VECode; // Should have it's own field in ShopBaskVc
    end;
    price = PIr.PurPrice;
    if (nonblank(PIr.CurncyCode)) then begin
      if (PIr.CurncyCode!=basecur1) then begin
        price = MulWithRateToBase1(PIr.CurncyCode,CurrentDate,price,DefaultCurRoundOff);
      end;
    end;
  end;
  if (showprices==false) then begin
    price = BlankVal;
  end;
  instock = GetStockQty(INr.Code,"",CurrentDate,false);
  qty = QtyInBasket(curitemno,999);
  qtystr = ValToString(qty,M4UVal," ",".",0);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  if (WebLoginStatus==3) then begin
    WebHWStartMainPage("ord_qty");
  end else begin
    WebHWStartMainPage("");
  end;
  WebOutString("<table width=""100%"">");
  WebOutString("<tr><td>");
  if (WebGetItemDetails(WHr,curitemno,"BP",pictonly)) then begin // Hardcoded, needs setting
    ToolWebDisplayHTMLExtra(WHr,"","");
  end;
  WebOutNL;
  WebOutString("</td></tr>");
  WebOutString("<tr><td>");
  WebOutNL;
  if (WebLoginStatus==3) then begin
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutLink("WebHWPOStoreItem.hal?sessionid=" & WebGetArg("sessionid") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
    WebOutString(""">");
  end;
  WebOutString("<table cols=""7"" width=""90%"" border=""0"">");
  ToolWebLineStart;
  WebHWTableHdr(ToolWebReturnTheText(20096),"left","12%");
  WebHWTableHdr(ToolWebReturnTheText(20098),"left","33%");
  WebHWTableHdr(ToolWebReturnTheText(4944),"center","10%");
  WebHWTableHdr(ToolWebReturnTheText(20099),"right","13%");
  WebHWTableHdr("","right","2%");
  WebHWTableHdr(ToolWebReturnTheText(20100),"left","13%");
  WebHWTableHdr("","left","17%");
  ToolWebLineEnd;

  WebOutString("<tr height=32>");
  ToolWebHiddenField("backpage",WebGetArg("backpage"));
  WebHWTableData(curitemno,"","","left","12%","",rwt);
  WebHWTableData(curitemname,"","","left","33%","",rwt);
  WebHWTableData(vecode,"","","center","10%","",rwt);
  WebHWTableData(price,"","","right","13%","",rwt);
  WebHWTableData("","","","right","2%","",rwt);
  WebHWEditFieldBrowse("ord_qty","text",qtystr,"7%",5,7,rwt);
  WebHWTableData(INr.Unittext,"","","left","8%","",rwt);
  qtystr = ValToString(qty,M4UVal,"","",rwt);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  WebOutString("<td width=""15%"" align=""left"">");

  if (WebLoginStatus==3) then begin
    if (nonblank(CurrentUser)) then begin
      WebHWPushButton(USetStr(20532),"submit","b1");
    end else begin
//      WebLink("Select a Customer","WebMainUser.hal","",""); // If our own users should be allowed to login...
      WebHWTableData(ToolWebReturnTheText(20049),"WebHWLogin.hal","","left","8%","",rwt);
    end;
  end else begin
    WebHWTableData(ToolWebReturnTheText(20049),"WebHWLogin.hal","","left","8%","",rwt);
  end;

  WebOutString("</td>");
  ToolWebLineEnd;
  if (WebLoginStatus==3) then begin
    WebOutString("</form>");
  end;
  WebOutString("</table>");
  WebOutString("</td></tr>");
  WebHWListTableEnd;
  ToolWebHWEndPage;
  return;
end;

procedure SetCCPayTerm(var record ORVc ORr,string ccpaytype)
begin
  record CredCardTypeVc CredCardTyper;
  
  CredCardTyper.Code = ccpaytype;
  if (ReadFirstMain(CredCardTyper,1,true)) then begin
    ORr.PayDeal = CredCardTyper.PayTerm;
  end;
  return;
end;

procedure SetIVPayTerm(var record ORVc ORr)
begin
  record CustomerSettingBlock CSr;
  record PDVc PDr;
  
  BlockLoad(CSr);
  if (nonblank(CSr.DefPayDeal)) then begin
    ORr.PayDeal = CSr.DefPayDeal;
  end else begin
    if (LoopMain(PDr,0,true)) then begin
      ORr.PayDeal = PDr.Code;
    end;
  end;
  return;
end;

global
updating function LongInt DoWebStoreTheOrder2(var LongInt invno,string cctype,Boolean storeivf,string shipmode,string deladdrcode,string custordnr,string custcode)
begin
  record ORVc ORr;
  record INVc INr;
  record IVVc IVr;
  record IVVc oldIVr;
  record ShopBaskVc ShopBaskr;
  record ShopBaskVc oldShopBaskr;
  record DelAddrVc DelAddrr;
  row ORVc ORrw;
  string 60 cunamn;
  Integer error;
  Integer i,rwcnt;
  val totqty;
  Boolean okflag,freightf;
  Boolean foundf,testf;
  LongInt orderno;
  record ORVc oldORr;
  record WebControlBlock WebControlr;
  string 5 ordclass,newordclass;
  record MainStockBlock MainStockr;
  LongInt baskno;
  string 255 tstr;
  record WebShopSettingBlock WebShopSettingr;
  Integer errcode;

//  LogText(0,"DWSTO 1");
  
  baskno = -1;
  orderno = -1;
  invno = -1;
  BlockLoad(WebControlr);
  BlockLoad(MainStockr);
  
  okflag = BuildWebOrd2(custcode,baskno,ORr,freightf,GetWebLanguage);
  if (nonblank(cctype)) then begin
    tstr = FindBestCreditCardCurrency(ORr.CurncyCode);
    if (tstr!=ORr.CurncyCode) then begin
      RecordNew(ORr);
      ORr.CurncyCode = tstr;
      okflag = BuildWebOrd2(custcode,baskno,ORr,freightf,GetWebLanguage);
    end;
  end;
  
//  LogText(0,"DWSTO 2");
  if (okflag) then begin
//    LogText(0,"DWSTO 3");
    ordclass = "WEB";
    newordclass = "WEB";
    if nonblank(WebControlr.FirstORClass) then begin
      newordclass = WebControlr.FirstORClass;
    end;
    if nonblank(WebControlr.ORClass) then begin
      ordclass = WebControlr.ORClass;
    end;
    ORr.OrderClass = newordclass;
    oldORr.CustCode = custcode;
    if ReadFirstKey("CustCode",oldORr,1,true) begin
      ORr.OrderClass = ordclass;
    end;
    ordclass = ORr.OrderClass;
    ORr.ShipMode = shipmode;
    ORr.DelAddrCode = deladdrcode;
    if (ORr.DelAddrCode<>"") then begin
      DelAddrr.CustCode = custcode;
      DelAddrr.DelCode = ORr.DelAddrCode;
      if (ReadFirstMain(DelAddrr,2,true)) then begin
        ORr.ShipAddr0 = ORr.Addr0;
        ORr.ShipAddr1 = DelAddrr.DelAddr0;
        ORr.ShipAddr2 = DelAddrr.DelAddr1;
        ORr.ShipAddr3 = DelAddrr.DelAddr2;
        ORr.DelAddr3 = DelAddrr.DelAddr3;
        ORr.DelAddr4 = DelAddrr.DelAddr4;
        ORr.Region = DelAddrr.Region;
      end;
    end;
    if (blank(ORr.CustOrdNr)) then begin
      ORr.CustOrdNr = custordnr;
    end;
    if (blank(cctype)) then begin
      if (blank(ORr.PayDeal)) then begin
        SetIVPayTerm(ORr);
      end;
    end else begin
      SetCCPayTerm(ORr,cctype);
    end;
    ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");
    if (ORr.SerNr>0) then begin
      // not entirely sure 'bout this one, especially the second part
      // not needed as function is in halcust, but consider it for standard
      if (WebControlr.ShopBaskCheckOut==1) then begin
        ORr.InvBeforeShip = 1;
      end else begin
        if (MainStockr.AllowInvBeforeShip==1) then begin
          ORr.InvBeforeShip = 1;
        end;
      end;
      
      if (blank(ORr.PayDeal) and nonblank(cctype)) then begin
        ORr.PayDeal = WebControlr.CCPayTerm;
      end;
      
      BlockLoad(WebShopSettingr);
      if (nonblank(WebShopSettingr.Objects)) then begin
        if (nonblank(ORr.Objects)) then begin
          ORr.Objects = ",";
        end;
        ORr.Objects = ORr.Objects & WebShopSettingr.Objects;
      end;

  //    LogText(0,"DWSTO 4");
      okflag = RecordInsert(ORr,true);
      if (okflag) then begin
L22:;
  //      LogText(0,"DWSTO 5");
        ShopBaskr.CUCode = custcode;
        ShopBaskr.DestinationNr = -1;
        foundf = true;
        while (LoopKey("CUCode",ShopBaskr,2,foundf)) begin
          if (ShopBaskr.CUCode<>custcode) then begin foundf = false; end;
          if (ShopBaskr.DestinationNr<>-1) then begin foundf = false; end;
          if (foundf) then begin
  //          LogText(0,"DWSTO 6");
            RecordCopy(oldShopBaskr,ShopBaskr);
            ShopBaskr.DestinationNr = ORr.SerNr;
            error = RecordUpdate(oldShopBaskr,ShopBaskr,true);
            ResetLoop(ShopBaskr);
            goto L22;
          end;
        end;
      end;
      if (ORr.SerNr>0) and (storeivf) then begin
        RecordNew(IVr);
        IVr.OrderNr = ORr.SerNr;
        if (RecordAction_raPasteOrdInInv(IVr,ORr.SerNr,true,errcode)==0) then begin 
          RecordCopy(oldIVr,IVr);
          IVr.OKFlag = 1;
          if (RecordUpdate(oldIVr,IVr,true)) then begin end;
        end;        
        invno = IVr.SerNr;
      end;
    end;
    orderno = ORr.SerNr;
  end;
  
  DoWebStoreTheOrder2 = orderno;
  return;
end;

global
updating function LongInt ToolWebStoreTheOrder2(var LongInt invno,string cctype,Boolean storeivf)
begin
  LongInt res;
  string 5 shipmode;
  string 20 deladdrcode;
  string 60 custordnr;
  
  if (LoggedInHWTest()) then begin
    shipmode = WebGetArg("delmode");
    deladdrcode = WebGetArg("deladdr");
    custordnr = WebGetArg("custref");
    
    res = DoWebStoreTheOrder2(invno,cctype,storeivf,shipmode,deladdrcode,custordnr,CurrentCust);
  end;

  ToolWebStoreTheOrder2 = res;
  return;
end;

/*
function Integer CardTransactionStatus(string custcode,string ordnr,longint sessionid, var integer callbackaction)
begin
  integer res;
  record CredCardTransVc CredCardTransr;
  boolean TrHs;
  
  res = kCCStatusNotFound;
  
  TrHs = true;
  LogText(0,"session = " & sessionid);
  LogText(0,"custcode = " & custcode);
  
  CredCardTransr.SessionID = sessionid;
  CredCardTransr.CurrentCust = custcode;
  while (LoopMain(CredCardTransr,2,TrHs)) begin
    if (CredCardTransr.SessionID != sessionid or CredCardTransr.CurrentCust != custcode) then begin
      TrHs = false;
    end;
    
    if (TrHs) then begin
      if (CredCardTransr.OrderNr == ordnr) then begin
        TrHs = false;
        res = CredCardTransr.Status;
        callbackaction = CredCardTransr.CallbackAction;
      end;
    end;
  end;
  
  CardTransactionStatus = res;
  return;
end;

function Integer SetCardTransactionCallbackAction(string custcode,string ordnr,longint sessionid, integer callbackaction)
begin
  record CUVc CUr;
  integer res;
  record CredCardTransVc CredCardTransr;
  boolean TrHs,atposf;
  
  res = kCCStatusNotFound;
  
  TrHs = true;
  LogText(0,"session = " & sessionid);
  LogText(0,"custcode = " & custcode);
  
  CredCardTransr.SessionID = sessionid;
  CredCardTransr.CurrentCust = custcode;
  while (LoopMain(CredCardTransr,2,TrHs)) begin
    if (CredCardTransr.SessionID != sessionid or CredCardTransr.CurrentCust != custcode) then begin
      TrHs = false;
    end;
    
    if (TrHs) then begin
      if (CredCardTransr.OrderNr == ordnr) then begin
        CUr.Code = custcode;
        if (ReadFirstMain(CUr,1,true)) then begin end;
        atposf = FindStringInString(CUr.eMail,"@");
        if(atposf) then begin
          CredCardTransr.CallbackAction = callbackaction;
        end;
        TrHs = false;
      end;
    end;
  end;
  
  SetCardTransactionCallbackAction = res;
  return;
end;

global
updating procedure WebHWShopBasketStepWaitForCC()
begin
  record WebFramesBlock WFr;
  integer res, status, callbackaction;
  LongInt retryAttempts;
  
  LogText(0,"INTO WebHWShopBasketStepWaitForCC _________________________");
  
  status = CardTransactionStatus(CurrentCust, WebGetArg("orderid"), WebGetArg("sessionid"), callbackaction);
  
  if (status==kCCStatusPaymentOK) then begin
    // move on, credit card was approved
    WebHWShopBasketStep2;
//      WebOutString("SUCCESS");
  end else begin
    if (status==kCCStatusProcessing) then begin
      retryAttempts = 0;
      if(nonBlank(WebGetArg("retryAttempts"))) then begin

LogText(0,"Assigning retryAttempts");

        retryAttempts = WebGetArg("retryAttempts");
      end;
      retryAttempts = retryAttempts + 1;

LogText(0,"new retryAttempts: " & retryAttempts);

      WebSQStartPage;
      WebHWCharset;
      if(retryAttempts < 10) then begin
        BlockLoad(WFr);
        WebOutString("<meta meta http-equiv=""refresh"" content=""3; url=/WebHWShopBasketStepWaitForCC.hal?orderid=" & WebGetArg("orderid") & "&sessionid=" & WebGetArg("sessionid") & "&retryAttempts=" & retryAttempts & """>");
        WebHWStartBody;
        WebSQOutBody("",WFr.Fr1BgPict,WFr.Fr1BgColor,"");
      
        WebOutString("<div id=""container"">");  WebOutNL;
        WebOutString("<div id=""mainContainer"">");  WebOutNL;
        WebOutString("<h2>" & "Waiting for Credit Card authorisation" &"</h2>");  WebOutNL;
        WebOutString("<p><b>" & "Please wait" &"</b></p>");  WebOutNL;
        res = SetCardTransactionCallbackAction(CurrentCust, WebGetArg("orderid"), WebGetArg("sessionid"), kCCCallbackActionNone);    // set to not send email
      end else begin
        BlockLoad(WFr);
        WebSQStartPage;
        WebHWCharset;
        WebHWStartBody;
        WebSQOutBody("",WFr.Fr1BgPict,WFr.Fr1BgColor,"");
      
        WebOutString("<div id=""container"">");  WebOutNL;
        WebOutString("<div id=""mainContainer"">");  WebOutNL;
        WebOutString("<h2>" & "Please check your email." &"</h2>");  WebOutNL;
        WebOutString("<p><b>" & "A response will be sent once the transaction is completed." &"</b></p>");  WebOutNL;
        res = SetCardTransactionCallbackAction(CurrentCust, WebGetArg("orderid"), WebGetArg("sessionid"), kCCCallbackActionMailOnFailure);    // set to send email
      end;
//        WebOutString("<p><b>" & WebGetArg("sessionid") &"</b></p>");  WebOutNL;
      WebOutString("</div>");  WebOutNL;
      WebOutString("</div>");  WebOutNL;
      ToolWebHWEndPage;
    end else begin
      //error occurred.
      //for now display "not processed for unspecified reason", but we need to be more correct and specific here
//      if (status==2) then begin
      if (status==kCCStatusCardRejected) then begin
        WebHWShopBasketStepPAY(0,"Payment was not processed, the card was rejected. Please check your details and try again.","0");
      end else begin
        WebHWShopBasketStepPAY(0,"Payment was not processed for an unspecified reason.","0");
      end;
    end;
  end;
  
  return;
end;
*/

/* 
global
updating function LongInt ToolWebStoreTheOrder2(var LongInt invno,string cctype,Boolean storeivf)
begin
  record ORVc ORr;
  record INVc INr;
  record IVVc IVr;
  record ShopBaskVc ShopBaskr;
  record ShopBaskVc oldShopBaskr;
  record DelAddrVc DelAddrr;
  row ORVc ORrw;
  string 60 cunamn;
  Integer error;
  Integer i,rwcnt;
  val totqty;
  Boolean okflag,freightf;
  Boolean foundf;
  LongInt orderno;
  record ORVc oldORr;
  record WebControlBlock WebControlr;
  string 5 ordclass,newordclass;
  LongInt baskno;

  baskno = -1;
  orderno = -1;
  invno = -1;
  BlockLoad(WebControlr);
  if (LoggedInHWTest()) then begin
    okflag = BuildWebOrd2(CurrentCust,baskno,ORr,freightf,GetWebLanguage);
    if (okflag) then begin
      ordclass = "WEB";
      newordclass = "WEB";
      if nonblank(WebControlr.FirstORClass) then begin
        newordclass = WebControlr.FirstORClass;
      end;
      if nonblank(WebControlr.ORClass) then begin
        ordclass = WebControlr.ORClass;
      end;
      ORr.OrderClass = newordclass;
      oldORr.CustCode = CurrentCust;
      if ReadFirstKey("CustCode",oldORr,1,true) begin
        ORr.OrderClass = ordclass;
      end;
      ordclass = ORr.OrderClass;
      ORr.ShipMode = WebGetArg("delmode");
      ORr.DelAddrCode = WebGetArg("deladdr");
      if (ORr.DelAddrCode<>"") then begin
        DelAddrr.CustCode = CurrentCust;
        DelAddrr.DelCode = ORr.DelAddrCode;
        if (ReadFirstMain(DelAddrr,2,true)) then begin
          ORr.ShipAddr0 = ORr.Addr0;
          ORr.ShipAddr1 = DelAddrr.DelAddr0;
          ORr.ShipAddr2 = DelAddrr.DelAddr1;
          ORr.ShipAddr3 = DelAddrr.DelAddr2;
          ORr.DelAddr3 = DelAddrr.DelAddr3;
          ORr.DelAddr4 = DelAddrr.DelAddr4;
          ORr.Region = DelAddrr.Region;
        end;
      end;
      if (blank(ORr.CustOrdNr)) then begin
        ORr.CustOrdNr = WebGetArg("custref");
      end;
      SetCCPayTerm(ORr,WebGetArg("CreditCardType"));
      ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");
      if (ORr.SerNr>0) then begin
        okflag = RecordInsert(ORr,true);
        if (okflag) then begin
L22:;
          ShopBaskr.CUCode = CurrentCust;
          ShopBaskr.DestinationNr = -1;
          foundf = true;
          while (LoopKey("CUCode",ShopBaskr,2,foundf)) begin
            if (ShopBaskr.CUCode<>CurrentCust) then begin foundf = false; end;
            if (ShopBaskr.DestinationNr<>-1) then begin foundf = false; end;
            if (foundf) then begin
              RecordCopy(oldShopBaskr,ShopBaskr);
              ShopBaskr.DestinationNr = ORr.SerNr;
              error = RecordUpdate(oldShopBaskr,ShopBaskr,true);
              ResetLoop(ShopBaskr);
              goto L22;
            end;
          end;
        end;
      end;
      if (ORr.SerNr>0) and (storeivf) then begin
        RecordNew(IVr);
        IVr.OrderNr = ORr.SerNr;
        if (RecordAction_raPasteOrdInInv(IVr,ORr.SerNr,true,errcode)==0) then begin end;
        
        invno = IVr.SerNr;
      end;
      orderno = ORr.SerNr;
    end;
  end;
  ToolWebStoreTheOrder2 = orderno;
  return;
end;
*/

global
updating function Boolean ToolWebStoreThePurOrder2()
begin
  record ORVc ORr;
  record ORVc oldORr;
  row ORVc ORrw;
  row ORVc jORrw;
  record POVc POr;
  record POVc oldPOr;
  row POVc POrw;
  record INVc INr;
  record PIVc PIr;
  record ShopBaskVc ShopBaskr;
  record ShopBaskVc oldShopBaskr;
  record DelAddrVc DelAddrr;
  string 60 tstr;
  Integer j,i,rwcnt;
  Boolean freightf;
  Boolean foundf,firstf,successf;
  record WebControlBlock WebControlr;
  string 5 ordclass;
  LongInt baskno;
  Array LongInt aord;
  Integer ordcnt;
  val t,price;

  baskno = 999;
  successf = false;
  BlockLoad(WebControlr);
  if (LoggedInHWTest()) then begin
    if (BuildWebOrd2(CurrentUser,baskno,ORr,freightf,GetWebLanguage)) then begin
      rwcnt = MatRowCnt(ORr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(ORr,i,ORrw);
        firstf = true;
        ordcnt = 0;
        if (ORrw.VECode!="----------") then begin
          for (j=i;j<rwcnt;j=j+1) begin
            MatRowGet(ORr,j,jORrw);
            if ((ORrw.VECode==jORrw.VECode) or ((nonblank(ORrw.VECode)) and (blank(jORrw.VECode)))) then begin
              foundf = ReadFirstItem(jORrw.ArtCode,INr,true,false);
              if (firstf) then begin
                RecordNew(POr);
                POr.VECode = ORrw.VECode;
                if (PasteVEInPO(POr,false)) then begin end;
                ordclass = "WEB";
                if (nonblank(WebControlr.ORClass)) then begin
                  ordclass = WebControlr.ORClass;
                end;
                POr.POClass = ordclass;
                POr.ShipMode = WebGetArg("delmode");
/*
                POr.DelAddrCode = WebGetArg("deladdr");
                if (POr.DelAddrCode<>"") then begin
                  DelAddrr.CustCode = CurrentCust;
                  DelAddrr.DelCode = POr.DelAddrCode;
                  if (ReadFirstMain(DelAddrr,2,true)) then begin
                    POr.ShipAddr0 = POr.Addr0;
                    POr.ShipAddr1 = DelAddrr.DelAddr0;
                    POr.ShipAddr2 = DelAddrr.DelAddr1;
                    POr.ShipAddr3 = DelAddrr.DelAddr2;
                    POr.DelAddr3 = DelAddrr.DelAddr3;
                    POr.DelAddr4 = DelAddrr.DelAddr4;
                  end;
                end;
*/
                if (blank(POr.Reference)) then begin
                  POr.Reference = WebGetArg("custref");
                end;
                POr.SerNr = NextSerNr("POVc",POr.TransDate,-1,false,"");
              end;
              ClearRow(POr,POrw,1);
              POrw.stp = 1;
              POrw.ovst = 0;
              POrw.WSNr = -1;
              POrw.ArtCode = jORrw.ArtCode;
              POrw.Quant = jORrw.Quant;
              PIr.VECode = POr.VECode;
              PIr.ItemCode = jORrw.ArtCode;
              if (ReadFirstMain(PIr,2,true)) then begin
                POrw.VEArtCode = PIr.VEItemCode;
                POrw.Spec = PIr.Comment;
                price = PIr.PurPrice;
                if (PIr.CurncyCode!=POr.CurncyCode) then begin
                  t = MulWithRateToBase1(PIr.CurncyCode,POr.TransDate,price,DefaultCurRoundOff);
                  price = DivRateToBase1(POr.CurncyCode,t,POr.FrRate,POr.ToRateB1,POr.ToRateB2,POr.BaseRate1,POr.BaseRate2,DefaultCurRoundOff);      
                end;
                POrw.Price = price;
                POrw.PIFactor = PIr.PIFactor;
              end else begin
                POrw.VEArtCode = "";
                POrw.Price = jORrw.Price;
                POrw.PIFactor = blankval;
                if (foundf) then begin
                  POrw.Spec = INr.Name;
                  price = INr.InPrice;
                  if (INr.PriceFactor!=0) then begin
                    price = price/INr.PriceFactor;
                  end;
                  POrw.Price = DivRateToBase1(POr.CurncyCode,price,POr.FrRate,POr.ToRateB1,POr.ToRateB2,POr.BaseRate1,POr.BaseRate2,DefaultCurRoundOff);
                  POrw.PIFactor = INr.PriceFactor;
                end;
              end;
              POrw.vRebate = blankval;
              POrw.VATCode = POr.VEVATCode;
              if (blank(POrw.VATCode)) then begin
                GetItemVATCode(POrw.ArtCode,POr.ExportFlag,tstr,false);
                POrw.VATCode = tstr;
              end;
              POrw.Objects = "";
              POrw.Shipd2 = blankval;
              POrw.Shipd1 = blankval;
              DivPIFactor(POrw.Quant,POrw.PIFactor,t);
              POrw.VEQuant = t;
              CalcSum(POrw.VEQuant,POrw.Price,0,POrw.vRebate,t,0);
              RoundRowSum(POr.CurncyCode,POr.PayDeal,"POVc",t);
              POrw.Sum = t;
              MatRowPut(POr,MatRowCnt(POr),POrw);
              jORrw.VECode = "----------";
              MatRowPut(ORr,j,jORrw);
              POSumup(POr);
              if (MatRowCnt(POr)>0) then begin
                if (firstf) then begin
                  if (RecordInsert(POr,false)==false) then begin
                    successf = false;
                    goto L66;
                  end;
                  RecordCopy(oldPOr,POr);
                  aord[ordcnt] = POr.SerNr;
                  ordcnt = ordcnt + 1;
                  successf = true;
                end else begin
                  if (RecordUpdate(oldPOr,POr,true)==0) then begin
                  end;
                end;
                firstf = false;
              end;
            end;
          end;
        end;
      end;
    end;
L66:;
    if (successf) then begin
L22:;
      ShopBaskr.CUCode = CurrentUser;
      ShopBaskr.DestinationNr = -1;
      foundf = true;
      while (LoopKey("CUCode",ShopBaskr,2,foundf)) begin
        if (ShopBaskr.CUCode<>CurrentUser) then begin foundf = false; end;
        if (ShopBaskr.DestinationNr<>-1) then begin foundf = false; end;
        if (foundf) then begin
          RecordCopy(oldShopBaskr,ShopBaskr);
          ShopBaskr.DestinationNr = ORr.SerNr;
          if (RecordUpdate(oldShopBaskr,ShopBaskr,true)==0) then begin
          end;
          ResetLoop(ShopBaskr);
          goto L22;
        end;
      end;
    end else begin
      for (i=0;i<ordcnt;i=i+1) begin
        POr.SerNr = aord[ordcnt];
        if (ReadFirstMain(POr,1,true)) then begin
          RecordDelete(POr);
        end;
      end;
    end;
  end;
  ToolWebStoreThePurOrder2 = successf;
  return;
end;

