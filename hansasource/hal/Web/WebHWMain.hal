
// WebHtml.hal (can stay)
external procedure WebCellEnd();
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebListTableEnd();
external procedure ToolWebHiddenField(string,string);

// WebHBSFunc.hal (can stay)
external procedure ToolWebGetHeaderLang(record MailVc,var string);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external procedure ToolWebOutTextLang(record MailVc,string); // Should be redone, three first chars for sorting is wierd
external procedure ToolWebGetTheText(Integer,var string); // For now...

// WebHWHtml.hal
external procedure ToolWebHWStartPage();
external procedure ToolWebHWEndPage();
external procedure WebHWStartTable();
external procedure WebHWEndTable();
external procedure WebHWOutFrameSet(string,string,Boolean);
external procedure WebHWOutFrame(string,string,string,string,Boolean);
external procedure WebHWOutFrameSetEnd();
external procedure WebHWOutBody(string,string,string);
external procedure WebHWStartBody();
external procedure WebHWCharset();
external procedure WebHWEditLine(string,string,string,string,Boolean);
external procedure WebHWPushButton(string,string,string);
external procedure WebHWInfoCell(string,string,string);

// WebHWFunc.hal
external procedure WebHWAddTopMenubar(string,string,Boolean);
external procedure WebHWAddLeftMenubar(string,string,string,Boolean);
external procedure WebHWAddCounter(string);
external procedure WebHWPublicNews(string,LongInt);
external procedure WebHWPublicMailMain(string,LongInt,Boolean,Boolean);
external Function Boolean WebHWPublicMain(string,LongInt,LongInt,Boolean,Boolean);
external procedure WebHWItemLink(string,string,string,string,string,var Integer);

global
procedure WebHWMainSinglePage()
begin
  record WebFramesBlock WFr;
  string 200 whichone;

  BlockLoad(WFr);
  whichone = WFr.Fr2MenuName;
  if (blank(whichone)) then begin
    whichone = "LEFT";
  end;
  WebHWOutBody("",WFr.Fr1BgPict,WFr.Fr1BgColor);
  WebOutString("<table width=""100%""> <tr> <td width=180 valign=top>");
  WebHWStartTable;
  WebHWAddLeftMenubar(whichone,WebGetArg("clicked"),WebLanguage(1),false);
  WebHWEndTable;
  WebOutString("</td><td valign=top>");
  WebOutString("Main");
  WebOutString("</td></tr></table>");
  return;
end;

global
procedure WebHWStartMainPage(string focusf)
begin
  record WebFramesBlock WFr;

  BlockLoad(WFr);
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebHWOutBody(focusf,WFr.Fr1BgPict,WFr.Fr1BgColor);
  return;
end;

global
procedure WebHWMainPage()
begin
  Boolean res;

  WebHWStartMainPage("");
  if (WebLoginStatus==3) then begin
    res = WebHWPublicMain("LOGGEDIN",-1,-1,false,false); // Hardcoded, needs setting
  end else begin
    res = WebHWPublicMain("MAINPAGE",-1,-1,false,false); // Hardcoded, needs setting
  end;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWLeftPage()
begin
  record WebFramesBlock WFr;
  string 200 whichone;

  BlockLoad(WFr);
  whichone = WFr.Fr2MenuName;
  if (WebLoginStatus==3) then begin
    if (nonblank(WFr.Fr2MenuName2)) then begin
      whichone = WFr.Fr2MenuName2;
    end;
  end;
  if (blank(whichone)) then begin
    whichone = "LEFT";
  end;
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebHWOutBody("",WFr.Fr2BgPict,WFr.Fr2BgColor);
  WebHWStartTable;
  WebHWAddLeftMenubar(whichone,WebGetArg("clicked"),WebLanguage(1),true);
  WebHWEndTable;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWTopPage()
begin
  record WebFramesBlock WFr;
  string 200 whichone;

  BlockLoad(WFr);
  whichone = WFr.Fr3MenuName;
  if (WebLoginStatus==3) then begin
    if (nonblank(WFr.Fr3MenuName2)) then begin
      whichone = WFr.Fr3MenuName2;
    end;
  end;
  if (blank(whichone)) then begin
    whichone = "TOP";
  end;
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebHWOutBody("",WFr.Fr3BgPict,WFr.Fr3BgColor);
  WebHWStartTable;
  WebHWAddTopMenubar(whichone,WebLanguage(1),true);
  WebHWEndTable;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWBottomPage()
begin
  record WebFramesBlock WFr;
  string 200 whichone;

  BlockLoad(WFr);
  whichone = WFr.Fr4MenuName;
  if (WebLoginStatus==3) then begin
    if (nonblank(WFr.Fr4MenuName2)) then begin
      whichone = WFr.Fr4MenuName2;
    end;
  end;
  if (blank(whichone)) then begin
    whichone = "BOTOM";
  end;
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebHWOutBody("",WFr.Fr4BgPict,WFr.Fr4BgColor);
  WebHWStartTable;
  WebHWAddTopMenubar(whichone,WebLanguage(1),true);
  WebHWEndTable;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWRightPage()
begin
  record WebFramesBlock WFr;
  string 200 whichone;

  BlockLoad(WFr);
  whichone = WFr.Fr5MenuName;
  if (WebLoginStatus==3) then begin
    if (nonblank(WFr.Fr5MenuName2)) then begin
      whichone = WFr.Fr5MenuName2;
    end;
  end;
  if (blank(whichone)) then begin
    whichone = "RIGHT";
  end;
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebHWOutBody("",WFr.Fr5BgPict,WFr.Fr5BgColor);
  WebHWStartTable;
  WebHWAddLeftMenubar(whichone,WebGetArg("clicked"),WebLanguage(1),true);
  WebHWEndTable;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWMailView()
begin
  record MailVc Mailr;
  LongInt wmailnumber;
  string 200 tstr;

  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""1"">");
  WebOutString("<tr bgcolor=""FF6600""> ");
  WebOutString("<td>");
  ToolWebGetTheText(20057,tstr);
  WebOutString("<div align=""right"">");
//  WebOutString("<img src=""../picts/news.gif"" width=""65"" height=""14"">");
  WebOutString("<font size=""2"" face=""Verdana, Arial, Helvetica, sans-serif""><b>");
  WebOutString(tstr);
  WebOutString("</b></font>");
  WebOutString("</div>");
  WebCellEnd;
  ToolWebLineEnd;
  ToolWebListTableEnd;
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebOutTextLang(Mailr,"xxx" & Mailr.Header);
  end;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWMailFAQView()
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  record RLinkVc RLr;
  Integer cnt;
  LongInt wmailnumber;

  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebOutTextLang(Mailr,Mailr.Header);
    WebOutString("<p>");
    cnt = 1;
    while (ReadRecordLink(Mailr,cnt,Mail2r,RLr)) begin
      cnt = cnt + 1;
      ToolWebOutTextLang(Mail2r,Mail2r.Header);
    end;
  end;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWReadMore(string linkto)
begin
  string 200 tstr;
  
  WebOutString("<p>");
  WebOutNL;
  WebOutString("<a href=""");
  WebOutLink(linkto);
  WebOutString(""">");
  WebOutNL;
//  WebOutString("<img src=""../picts/readmore.gif"" width=""80"" height=""14"" alt=""Read more ...""></a>");
  ToolWebGetTheText(20056,tstr);
  WebOutString(tstr & "</a>");
  WebOutNL;
  WebOutString("</p>");
  WebOutNL;
  return;
end;

global
procedure WebHWEntireConf()
begin
  Boolean res;
  
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebOutString("<table width=""505"" border=""0"" cellpadding=""3"">");
  WebOutNL;
  WebOutString("<tr valign=""top"">");
  WebOutNL;
  WebOutString("<td width=""320"">");
  WebOutNL;
  res = WebHWPublicMain(WebGetArg("confcode"),-1,-1,false,false);
  WebCellEnd;
  ToolWebLineEnd;
  ToolWebListTableEnd;
  ToolWebHWEndPage;
  return;
end;

procedure WebHWPublicReadMore(string whichone,LongInt norofmails,LongInt maxchars)
begin
  if (WebHWPublicMain(whichone,norofmails,maxchars,false,false)) then begin
    WebHWReadMore("WebHWEntireConf.hal?confcode=" & whichone);
  end;
  return;
end;

procedure WebHWPublicMailReadMore(string whichone,LongInt maxchars)
begin
  WebHWPublicMailMain(whichone,maxchars,false,false);
  return;
end;

global
procedure WebHWDropDownMail(string thecode,string hallink,string linkarg,var LongInt selected)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  Boolean res;
  string 200 hdr;

  selected = WebGetArg("dropdownmail");
  GetConfInfo(thecode,confname,confcode,maxmail);
  WebOutString("<form method=""post"" action=""");
  WebOutLink(hallink & "?sessionid=" & WebGetArg("sessionid") & linkarg);
  WebOutString(""">");
  WebOutString("<table width=""170"" border=""0"" cellpadding=""0"" cellspacing=""0"">");
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""100%"">");
  WebOutString("<select name=dropdownmail onChange=""submit(this.form)"">");
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      if (foundf) then begin
        if ((sortorder<>"000") and ((sortorder<>"999"))) then begin
          WebOutString("<option value=""" & Mailr.SerNr & """ ");
          if (selected==Mailr.SerNr) then begin
            WebOutString("selected");
            RecordCopy(Mail2r,Mailr);
          end;
          ToolWebGetHeaderLang(Mailr,hdr);
          WebOutString(">" & hdr &"</option>");
        end else begin
          if (sortorder=="000") then begin
            RecordCopy(Mail2r,Mailr);
            WebOutString("<option value=""" & -1 & """ ");
            if (selected==-1) then begin
              WebOutString("selected");
            end;
            ToolWebGetHeaderLang(Mailr,hdr);
            WebOutString(">" & hdr & "</option>");
            WebOutString("<option value=""0"" ");
            if (selected==0) then begin
              WebOutString("selected");
            end;
            ToolWebGetTheText(20054,hdr);
            WebOutString(">" & hdr & "</option>");
          end;
        end;
      end;
    end;
  end;
  WebOutString("</select>");
  WebCellEnd;
  ToolWebLineEnd;
  ToolWebListTableEnd;
  WebOutString("</form>");
  if (selected==0) then begin
    res = WebHWPublicMain(thecode,-1,-1,true,false);
  end;
  if (selected>0) then begin
    ToolWebOutTextLang(Mail2r,Mail2r.Header);
  end;
  return;
end;

procedure WebHWConferenceContent(record WebPagesVc WPr)
begin
  row WebPagesVc WPrw;
  Integer rwcnt,i;
  Integer NoOfMails;
  Integer CharsToShow;
  Boolean res;

  rwcnt = MatRowCnt(WPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(WPr,i,WPrw);
    NoOfMails = WPrw.NoOfMails;
    if (NoOfMails<=0) then begin
      NoOfMails = 1;
    end;
    CharsToShow = WPrw.CharsToShow;
     if (CharsToShow<=0) then begin
      CharsToShow = 255;
    end;
    switch (WPr.OnePerWhat) begin
      case 0:
        WebHWPublicReadMore(WPrw.ConfCode,NoOfMails,CharsToShow);
      case 1:
        res = WebHWPublicMain(WPrw.ConfCode,-1,-1,false,false);
      case 2:
        WebHWPublicMailReadMore(WPrw.ConfCode,CharsToShow);
    end;
  end;
  WebCellEnd;
  WebOutString("<td width=""168"" align=""right"">");
  WebOutNL;
  if (nonblank(WPr.NewsCode)) then begin
    WebHWPublicNews(WPr.NewsCode,150);
  end;
  return;
end;

global
updating procedure WebHWMagicList()
begin
  record ConfVc Confr;
  record WebPagesVc WPr;
  row WebPagesVc WPrw;
  Integer rwcnt,i;
  Boolean res,companyset;
  Integer NoOfMails;
  Integer CharsToShow;
  LongInt selected;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  string 200 tstr;
  string 200 wpconfcode;
  Integer oldcomp,newcomp;

  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    companyset = SetCompany(newcomp,false);
  end;  
  WPr.Code = WebGetArg("WEBPAGE");
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  WebOutString("<table width=""505"" border=""0"" cellpadding=""3"">");
  WebOutNL;
  WebOutString("<tr valign=""top"">");
  WebOutNL;
  WebOutString("<td width=""320"">");
  WebOutNL;
  if (ReadFirstMain(WPr,1,true)) then begin
    wpconfcode = WPr.Code;
    if (nonblank(WPr.CounterCode)) then begin
      WebHWAddCounter(WPr.CounterCode);
    end;
    rwcnt = MatRowCnt(WPr);
    switch (WPr.PageType) begin
      case 0:
        WebHWConferenceContent(WPr);
      case 1:
        switch (WPr.OnePerWhat) begin
          case 0:
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WPr,i,WPrw);
              WebHWDropDownMail(WPrw.ConfCode,"WebHWMagicList.hal","&WEBPAGE=" & WPr.Code,selected);
            end;
            WebCellEnd;
            WebOutString("<td width=""168"" align=""right"">");
            WebOutNL;
            if (nonblank(WPr.NewsCode)) then begin
              WebHWPublicNews(WPr.NewsCode,150);
            end;
          case 1:
            selected = WebGetArg("dropdownmail");
            WebOutString("<form method=""post"" action=""");
            WebOutLink("WebHWMagicList.hal?sessionid=" & WebGetArg("sessionid") & "&WEBPAGE=" & WPr.Code);
            WebOutString(""">");
            WebOutString("<table width=""170"" border=""0"" cellpadding=""0"" cellspacing=""0"">");
            WebOutString("<tr valign=""top"">");
            WebOutString("<td width=""100%"">");
            WebOutString("<select name=dropdownmail onChange=""submit(this.form)"">");
            ToolWebGetTheText(20055,tstr);
            WebOutString("<option value=""-1"">" & tstr & "</option>"); //###
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WPr,i,WPrw);
              GetConfInfo(WPrw.ConfCode,confname,confcode,maxmail);
              Confr.SerNr = confcode;
              if (ReadFirstMain(Confr,1,true)) then begin
                WebOutString("<option value=""" & i & """ ");
                if (selected==i) then begin
                  WebOutString("selected");
                end;
                if (nonblank(Confr.Comment)) then begin
                  confname = Confr.Comment;
                end;
                WebOutString(">" & confname &"</option>");
              end;
            end;
            WebOutString("</select>");
            WebCellEnd;
            ToolWebLineEnd;
            ToolWebListTableEnd;
            WebOutString("</form>");
            if ((selected>-1) and (selected<rwcnt)) then begin
              MatRowGet(WPr,selected,WPrw);
              wpconfcode = WPrw.ConfCode;
              res = WebHWPublicMain(WPrw.ConfCode,-1,-1,true,false);
              WebCellEnd;
              WebOutString("<td width=""168"" align=""right"">");
              WebOutNL;
              if (nonblank(WPrw.DropDownNewsCode)) then begin
                WebHWPublicNews(WPrw.DropDownNewsCode,150);
              end else begin
                if (nonblank(WPr.NewsCode)) then begin
                  WebHWPublicNews(WPr.NewsCode,150);
                end;
              end;
            end else begin
              WebCellEnd;
              WebOutString("<td width=""168"" align=""right"">");
              WebOutNL;
              if (nonblank(WPr.NewsCode)) then begin
                WebHWPublicNews(WPr.NewsCode,150);
              end;
            end;
        end; // Switch
      case 2:
    end; // Switch
  end else begin
    WebCellEnd;
    WebOutString("<td width=""168"" align=""right"">");
    WebOutNL;
  end;
  WebCellEnd;
  ToolWebLineEnd;
  ToolWebListTableEnd;
  ToolWebHWEndPage;
  if (companyset) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure WebHWGetNewPasswd()
begin
  WebOutString("<form method=""post"" action=""");
  WebOutLink("WebHWSendNewPassword.hal?sessionid=" & WebGetArg("sessionid"));
  WebOutString(""">");
  WebOutString("<table width=""500"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  if (WebLoginStatus==3) then begin
    WebHWEditLine(USetStr(20544),"pass","password",WebGetArg("pass"),false);
    WebHWEditLine(USetStr(20545),"pass2","password",WebGetArg("pass2"),false);
  end else begin
    WebOutString("<tr><td colspan=""2"">" & USetStr(20546) & "</td></tr>");
    WebHWEditLine(USetStr(9334),"custcode","text",WebGetArg("custcode"),false);
    WebHWEditLine(USetStr(20509),"email","text",WebGetArg("email"),false);
  end;
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  WebOutString("<input type=""submit"" name=""" & USetStr(20514) & """ value=""Submit"">");
  WebOutString("<input type=""reset"" name=""" & USetStr(20515) & """ value=""Reset"">");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  return;
end;

global
updating procedure WebHWSendNewPassword()
begin
  record CUVc CUr;
  record CUVc oldCUr;
  Boolean storef;
  string 255 tstr,newpasswd,pass,pass2,message;
  record MailVc Mailr;
  row MailVc marw;
  record MailSettingsBlock MSRec;
  record WebRegMailBlock WRMb;
  string 1 TAB;
  record LTxtVc LTxtr;
  Integer i,rwcnt;

  TAB = chr(9);
  storef = false;
  WebHWStartMainPage("companyname");
  WebOutString("<table width=""500"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  if (WebLoginStatus==3) then begin
    pass = WebGetArg("pass");
    pass2 = WebGetArg("pass2");
    if ((nonblank(pass)) and (nonblank(pass2))) then begin
      if (pass <> pass2) then begin
        message = USetStr(20548);
        storef = true;
      end;    
    end else begin
      message = USetStr(20549);
      storef = true;
    end;
    if (storef==false) then begin
      CUr.Code = CurrentCust;
      if (ReadFirstMain(CUr,1,true)) then begin
        RecordCopy(oldCUr,CUr);
        CUr.Password = CalcPassword(pass,CUr.Code,0);
        if (RecordUpdate(oldCUr,CUr,true)==0) then begin
        end;
        WebHWInfoCell(USetStr(20547),"100%","false");
      end;
    end else begin
      WebHWInfoCell(message,"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWGetNewPasswd;
      WebOutString("</td>");
    end;
  end else begin
    if (nonblank(WebGetArg("custcode"))) then begin
      CUr.Code = WebGetArg("custcode");
      if (ReadFirstMain(CUr,1,true)) then begin
        RecordCopy(oldCUr,CUr);
        storef = true;
      end;
    end;
// This code WAS very bad...who wrote this... It randomly deleted a customer, or it changed an existing customer with someone else....
    if (storef==false) then begin
      if (nonblank(WebGetArg("email"))) then begin
        CUr.eMail = WebGetArg("email");
        if (ReadFirstKey("eMail",CUr,1,true)) then begin
          RecordCopy(oldCUr,CUr);
          storef = true;
        end;
      end;
    end;
    if (storef) then begin
      BlockLoad(MSRec);  
      BlockLoad(WRMb);
      tstr = MSRec.Admin;
      RecordNew(Mailr);
      Mailr.SendFlag = 1;
      MArw.RowTyp = 1;
      MArw.AddrCode = tstr;
      MatRowPut(Mailr,0,MArw);
      MArw.RowTyp = 0;
      MArw.AddrCode = CUr.eMail;
      MatRowPut(Mailr,1,marw);
      
      Mailr.Header = WRMb.PasswordHeader;
      LTxtr.Code = WRMb.PasswordFirstTxt;
      if (ReadFirstMain(LTxtr,1,true)) then begin
        rwcnt = LineTextCnt(LTxtr);
        for (i=0;i<rwcnt;i=i+1) begin
          tstr = LineTextGet(LTxtr,i);
          LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
        end;    
        AddCRToText(Mailr);
      end;
      
      newpasswd = Random(11111,91111);
      tstr = newpasswd;
      CUr.Password = CalcPassword(tstr,CUr.Code,0);
      if (RecordUpdate(oldCUr,CUr,true)==0) then begin
      end;
      if (blank(Mailr.Header)) then begin
        Mailr.Header = USetStr(1955);
        Mailr.Header = Mailr.Header & " ";
        Mailr.Header = Mailr.Header & tstr;
        Mailr.TransDate = CurrentDate;
      end else begin
        LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
      end;
      LTxtr.Code = WRMb.PasswordLastTxt;
      if (ReadFirstMain(LTxtr,1,true)) then begin
        rwcnt = LineTextCnt(LTxtr);
        for (i=0;i<rwcnt;i=i+1) begin
          tstr = LineTextGet(LTxtr,i);
          LineTextPut(Mailr,LineTextCnt(Mailr),tstr);
        end;    
        AddCRToText(Mailr);
      end;

      Mailr.SerNr = NextSerNr("MailVc",Mailr.TransDate,-1,false,"");
      if (RecordStore(Mailr,false)) then begin end;
//    SetRLink(wn,true);
      WebOutString("<td>" & USetStr(20550) & "</td>");
    end else begin
      WebHWInfoCell(USetStr(20551),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHWGetNewPasswd;
      WebOutString("</td>");
    end;
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWNewPasswd()
begin
  WebHWStartMainPage("");
  WebHWGetNewPasswd;
  ToolWebHWEndPage;
  return;
end;

global
procedure WebHWLogin()
begin
  record WebFramesBlock WFr;
  Integer oldcomp,newcomp,rwt;
  Boolean res,res1;
  string 255 tstr;

  BlockLoad(WFr);
  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  
  ToolWebHWStartPage;
  WebHWCharset;
  WebHWStartBody;
  if (WebLoginStatus==3) then begin
    WebHWOutBody("",WFr.Fr1BgPict,WFr.Fr1BgColor);
    res = WebHWPublicMain("LOGGEDIN",-1,-1,false,false); // Hardcoded, needs setting
  end else begin
    WebHWOutBody("login",WFr.Fr1BgPict,WFr.Fr1BgColor);
    WebOutString("<form name=""HansaForm"" action=""dologin?company=" & WebGetArg("company") & "&failed=WebHWMainFailed.hal"" METHOD=""POST"" target=""_parent"">");
    WebHWStartTable;
    if (nonblank(WebGetArg("failed_log_in"))) then begin
      ToolWebLineStart;
      WebHWInfoCell("","28%","left");
      WebHWInfoCell(USetStr(20501),"72%","left");
      ToolWebLineEnd;
    end;
    ToolWebGetTheText(20049,tstr);
    WebHWEditLine(tstr,"login","text","",false);
    ToolWebGetTheText(20052,tstr);
    WebHWEditLine(tstr,"passwd","password","",false);
    ToolWebHiddenField("custpage","WebHWMain.hal");
    ToolWebHiddenField("userpage","WebHWMain.hal");
    WebHWEndTable;
    ToolWebGetTheText(20049,tstr); //"Log In"
    WebHWPushButton(tstr,"submit","name");
    WebOutString("</form>");
    ToolWebGetTheText(20153,tstr);
    WebHWItemLink(tstr,"WebHWNewPasswd.hal","","","",rwt);
    
    res = WebHWPublicMain("WWWSHOPLOGIN",-1,-1,false,false); // Hardcoded, needs setting
  end;
  ToolWebHWEndPage;
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

procedure WebHWDisplayIndex(Boolean failed)
begin
  record WebKeywordsBlock WKr;
  row WebKeywordsBlock WKrw;
  record WebContentsBlock WCr;
  row WebContentsBlock WCrw;
  record WebFramesBlock WFr;
  record WebFrameSetBlock WFSr;
  Integer i,rwcnt;
  
  BlockLoad(WKr);
  BlockLoad(WCr);
  BlockLoad(WFr);
  BlockLoad(WFSr);
  ToolWebHWStartPage;
  WebOutString("<title>");
  if (nonblank(WFr.Title)) then begin
    WebOutString(WFr.Title);
  end else begin
    WebOutString("HansaWorld - ERP and CRM in One");
  end;
  WebOutString("</title>");
  WebOutNL;
  WebHWCharset;
  WebOutString("<meta name=""description"" content=""");
  rwcnt = MatRowCnt(WCr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(WCr,i,WCrw);
    WebOutString(WCrw.Comment);
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString("<meta name=""keywords"" content=""");
  rwcnt = MatRowCnt(WKr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(WKr,i,WKrw);
    if (nonblank(WKrw.KeyWord)) then begin
      WebOutString(WKrw.KeyWord);
      if (i<(rwcnt-1)) then begin
        WebOutString(", ");
      end;
    end;
  end;
  WebOutString(""">");
  WebOutNL;
  WebHWStartBody;
  switch (WFr.Frames) begin
    case 0:
      WebHWMainSinglePage;
      WebOutString("</body>");
      WebOutNL;
    case 1:
      WebHWOutFrameSet(WFSr.Fr2ARows,WFSr.Fr2ACols,true);
      WebHWOutFrame(WFr.Fr2Src,"WebHWLeftPage.hal","left","AUTO",failed);
      if (failed) then begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWLogin.hal","content","AUTO",failed);
      end else begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWMainPage.hal","content","AUTO",failed);
      end;
      WebHWOutFrameSetEnd;
      WebOutString("<noframes><body bgcolor=""#FFFFFF"">");
      WebOutNL;
      WebOutString("</body></noframes>");
      WebOutNL;
    case 2:
      WebHWOutFrameSet(WFSr.Fr3ARows,WFSr.Fr3ACols,true);
      WebHWOutFrame(WFr.Fr3Src,"WebHWTopPage.hal","top","NO",failed);
      WebHWOutFrameSet(WFSr.Fr3BRows,WFSr.Fr3BCols,false);
      WebHWOutFrame(WFr.Fr2Src,"WebHWLeftPage.hal","left","AUTO",failed);
      if (failed) then begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWLogin.hal","content","AUTO",failed);
      end else begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWMainPage.hal","content","AUTO",failed);
      end;
      WebHWOutFrameSetEnd;
      WebHWOutFrameSetEnd;
      WebOutString("<noframes><body bgcolor=""#FFFFFF"">");
      WebOutNL;
      WebOutString("</body></noframes>");
      WebOutNL;
    case 3:
      WebHWOutFrameSet(WFSr.Fr4ARows,WFSr.Fr4ACols,true);
      WebHWOutFrame(WFr.Fr3Src,"WebHWTopPage.hal","top","NO",failed);
      WebHWOutFrameSet(WFSr.Fr4BRows,WFSr.Fr4BCols,false);
      WebHWOutFrame(WFr.Fr2Src,"WebHWLeftPage.hal","left","AUTO",failed);
      if (failed) then begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWLogin.hal","content","AUTO",failed);
      end else begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWMainPage.hal","content","AUTO",failed);
      end;
      WebHWOutFrameSetEnd;
      WebHWOutFrame(WFr.Fr4Src,"WebHWBottomPage.hal","bottom","NO",failed);
      WebHWOutFrameSetEnd;
      WebOutString("<noframes><body bgcolor=""#FFFFFF"">");
      WebOutNL;
      WebOutString("</body></noframes>");
      WebOutNL;
    case 4:
      WebHWOutFrameSet(WFSr.Fr5ARows,WFSr.Fr5ACols,true);
      WebHWOutFrame(WFr.Fr3Src,"WebHWTopPage.hal","top","NO",failed);
      WebHWOutFrameSet(WFSr.Fr5BRows,WFSr.Fr5BCols,false);
      WebHWOutFrame(WFr.Fr2Src,"WebHWLeftPage.hal","left","AUTO",failed);
      if (failed) then begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWLogin.hal","content","AUTO",failed);
      end else begin
        WebHWOutFrame(WFr.Fr1Src,"WebHWMainPage.hal","content","AUTO",failed);
      end;
      WebHWOutFrame(WFr.Fr5Src,"WebHWRightPage.hal","right","NO",failed);
      WebHWOutFrameSetEnd;
      WebHWOutFrame(WFr.Fr4Src,"WebHWBottomPage.hal","bottom","NO",failed);
      WebHWOutFrameSetEnd;
      WebOutString("<noframes><body bgcolor=""#FFFFFF"">");
      WebOutNL;
      WebOutString("</body></noframes>");
      WebOutNL;
  end;
  WebOutString("</html>");
  WebOutNL;
  return;
end;

global
procedure WebHWMain()
begin
  WebHWDisplayIndex(false);
  return;
end;

global
procedure WebHWMainFailed()
begin
  WebHWDisplayIndex(true);
  return;
end;

global
updating procedure WebWHLogout()
begin
  WebLogout;
  WebHWMain;
  return;
end;
