external function LongInt TimeDiffInSeconds(Time,Time);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebTableData(string,string,string,string,string,string,Integer);
external procedure ToolWebPushButton(string,string,string);
external procedure ToolWebSetMainTitle();
external procedure ToolWebStartPage();
external procedure ToolWebStartBody(string);
external procedure ToolWebEndPage(Boolean);
external procedure ToolWebStartHeader();
external procedure ToolWebListTable(Integer,Integer,string);
external procedure ToolWebListTableEnd();
external procedure ToolWebTableHdr(string,string,string);
external procedure ToolWebStartHeaderEnd();
external procedure ToolWebOutHeader(string);

updating function
Integer ToolWebCreateCust(Integer cnt)
begin
  record CUVc CUr;
  Integer i,cuno,oldcu;
  Boolean res;
  
  CUr.Code = "99999999";
  if (ReadLastMain(CUr,1,false)==false) then begin
    CUr.Code = "0";
  end;
  oldcu = StringToInt(CUr.Code);
  RecordNew(CUr);
  CUr.Name = "Benchmark Customer";
  CUr.InvAddr0 = "First Line of Address";
  CUr.InvAddr1 = "Second Line of Address";
  for (i=0;i<cnt;i=i+1) begin
    cuno = StringToInt(CUr.Code);
    CUr.Code = cuno + 1;
    res = RecordStore(CUr,true);
    WebOutString(" ");
  end;
  ToolWebCreateCust = oldcu;
  return;
end;

updating function
Integer ToolWebCreateItems(Integer cnt)
begin
  record INVc INr;
  Integer i,inno,oldin;
  Boolean res;
  
  INr.Code = "99999999";
  if (ReadLastMain(INr,1,false)==false) then begin
    INr.Code = "0";
  end;
  RecordNew(INr);
  oldin = StringToInt(INr.Code);
  INr.Name = "Benchmark Item";
  INr.UPrice1 = 1000;
  for (i=0;i<cnt;i=i+1) begin
    inno = StringToInt(INr.Code);
    INr.Code = inno + 1;
    WebOutString(" ");
    res = RecordStore(INr,true);
  end;
  ToolWebCreateItems = oldin;
  return;
end;

updating
procedure ToolWebCreateInvoices(Integer firstcust,Integer firstitem,Integer cnt,Integer rows)
begin
  record IVVc IVr;
  row IVVc IVrw;
  Integer i,j;
  Boolean res;
  
  IVr.SerNr = 99999999;
  if (ReadLastMain(IVr,1,false)==false) then begin
    IVr.SerNr = 0;
  end;
  RecordNew(IVr);
  for (i=0;i<cnt;i=i+1) begin
    IVr.SerNr = IVr.SerNr + 1;
    IVr.CustCode = firstcust + i;
    for (j=0;j<rows;j=j+1) begin
      IVrw.stp = kInvoiceRowTypeNormal;
      IVrw.ArtCode = firstitem + j;
      IVrw.Quant = 1;
      MatRowPut(IVr,j,IVrw);
    end;
    WebOutString(" ");
    IVr.OKFlag = 1;
    res = RecordStore(IVr,true);
    if (res==false) then begin
      IVr.OKFlag = 0;
      res = RecordStore(IVr,true);
    end;
  end;
  return;
end;

global
updating procedure WebRunBench()
begin
  Integer rwt;
  Time thestart,theend;
  Time beginning,ending;
  val vsecs,res;
  LongInt secs;
  Integer nrofrecstocreate;
  Integer nrofrowstocreate;
  Integer firstcust,firstitem;

  nrofrecstocreate = 10;
  nrofrowstocreate = 10;
  rwt = 0;
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Here are the results of the Benchmark test.");
  ToolWebStartHeaderEnd;
  ToolWebListTable(5,540,"1");
  ToolWebLineStart;
  ToolWebTableHdr("Test","left","300");
  ToolWebTableHdr("Start","center","60");
  ToolWebTableHdr("End","center","60");
  ToolWebTableHdr("Time","center","60");
  ToolWebTableHdr("Comparison","center","60");
  ToolWebLineEnd;
  beginning = CurrentTime;

  thestart = CurrentTime;
  firstcust = ToolWebCreateCust(nrofrecstocreate);
  WebOutNL;
  
  theend = CurrentTime;
  ToolWebLineStart;
  ToolWebTableData("Create " & nrofrecstocreate & " Customers","","","left","","",rwt);
  ToolWebTableData(thestart,"","","center","","",rwt);
  ToolWebTableData(theend,"","","center","","",rwt);
  ToolWebTableData(TimeDiffInSeconds(thestart,theend),"","","center","","",rwt);
  ToolWebTableData(39,"","","center","","",rwt);
  ToolWebLineEnd;
  
  thestart = CurrentTime;
  firstitem = ToolWebCreateItems(nrofrowstocreate);
  theend = CurrentTime;
  WebOutNL;
  
  ToolWebLineStart;
  ToolWebTableData("Create " & nrofrowstocreate & " Items","","","left","","",rwt);
  ToolWebTableData(thestart,"","","center","","",rwt);
  ToolWebTableData(theend,"","","center","","",rwt);
  ToolWebTableData(TimeDiffInSeconds(thestart,theend),"","","center","","",rwt);
  ToolWebTableData(42,"","","center","","",rwt);
  ToolWebLineEnd;
  
  thestart = CurrentTime;
  ToolWebCreateInvoices(firstcust,firstitem,nrofrecstocreate,nrofrowstocreate);
  theend = CurrentTime;
  WebOutNL;
  
  ToolWebLineStart;
  ToolWebTableData("Create " & nrofrecstocreate & " Invoices with " & nrofrowstocreate & " rows","","","left","","",rwt);
  ToolWebTableData(thestart,"","","center","","",rwt);
  ToolWebTableData(theend,"","","center","","",rwt);
  ToolWebTableData(TimeDiffInSeconds(thestart,theend),"","","center","","",rwt);
  ToolWebTableData(46,"","","center","","",rwt);
  ToolWebLineEnd;
  ToolWebListTableEnd;
  
  ending = CurrentTime;
  ToolWebListTable(5,540,"1");
  ToolWebLineStart;
  ToolWebTableHdr("Start of test","center","100");
  ToolWebTableHdr("End of Test","center","100");
  ToolWebTableHdr("Result","center","100");
  ToolWebTableHdr("Comparison","center","100");
  ToolWebTableHdr("Points","center","100");
  ToolWebLineEnd;
  WebOutNL;
  
  secs = TimeDiffInSeconds(beginning,ending);
  vsecs = secs;
  res = 100 * (127 / vsecs);
  ToolWebLineStart;
  ToolWebTableData(beginning,"","","center","","",rwt);
  ToolWebTableData(ending,"","","center","","",rwt);
  ToolWebTableData(secs,"","","center","","",rwt);
  ToolWebTableData(127,"","","center","","",rwt);
  ToolWebTableData(res,"","","center","","",rwt);
  ToolWebLineEnd;
  ToolWebListTableEnd;
  WebOutNL;
  
  WebOutString("<p>A PowerBook G3 400 Mhz with Mac OS 9 is used for comparison, 100 points is the base value.</p>");
  WebOutNL;
  
  ToolWebEndPage(true);
  return;
end;

global
procedure WebBench()
begin
  ToolWebStartPage;
  ToolWebSetMainTitle;
  ToolWebStartBody("");
  ToolWebStartHeader;
  ToolWebOutHeader("Welcome to Hansas Benchmark test");
  ToolWebStartHeaderEnd;  
  WebOutString("<form name=""HansaForm"" method=""POST"" action=""WebRunBench.hal?sessionid=" & WebGetArg("sessionid") & """>");
  WebOutString("<img src=""Logo.gif"" border=""0"">");
  WebOutString("<p>Press Run to start the test. It might take a while so please be patient.</p>");
  WebOutString("<tr><td>");
  ToolWebPushButton("Run","submit","b1");
  WebOutString("</td></tr>");
  ToolWebEndPage(true);
  return;
end;

