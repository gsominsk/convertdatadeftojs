external function Boolean GetGlobalUserMainCompany(string,var string);
external procedure ToolWebOutWebHTMLText(record WebHTMLVc,Integer,string);
external function Integer GetIntYc(Date);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebWapNotLoggedIn();
external procedure ToolWebPictLink(string,string,string,string,string,string);
external procedure ToolWebNotLoggedinMess();
external procedure ToolWebTableData(string,string,string,string,string,string,Integer);
external procedure ToolWebMenuItem(string,string,string,string,var Integer);
external procedure ToolWebItemHeader();
external procedure ToolWebTableHdr(string,string,string);
external function val QtyInBasket(String,Integer);
external function Integer FirstToRow(record MailVc,var string); 
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);

global
function boolean TestConfAccess(record ConfVc MyConfr,record ConfVc Confr)
begin
  integer a,b,i,j;
  boolean okf;
  row ConfVc Confrw,MyConfrw;
  
  okf = false;
  a = MatRowCnt(MyConfr);
  b = MatRowCnt(Confr);
  if (b==0) then begin 
    okf = true; 
  end else begin
    for (i=0;i<a;i=i+1) begin
      MatRowGet(MyConfr,i,MyConfrw);
      for (j=0;j<b;j=j+1) begin
        MatRowGet(Confr,j,Confrw);
        if (Confrw.Group==MyConfrw.Group) then begin
          okf = true;
        end;
      end;
    end;
  end;
  TestConfAccess = okf;
  return;
end;

global
Function Boolean ToolWebGetCustAndSettings(var record CUVc CUr,var Boolean showstocklevel,var Boolean showprices)
begin
  record CCatVc CCr;
  record WebDisplayVc WDr;
  record WebControlBlock WCr;
  Boolean res;
  
  res = true;
  showprices = true;
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    CUr.Name = "";
    BlockLoad(WCr);
    CUr.PLCode = WCr.DefPLCode;
    res = false;
  end else begin
    CCr.Code = CUr.CustCat;
    if (ReadFirstMain(CCr,1,true)) then begin
      if (blank(CUr.PLCode)) then begin
        CUr.PLCode = CCr.PLCode;
      end;
      if (blank(CUr.RebCode)) then begin
        CUr.RebCode = CCr.RebCode;
      end;
    end;
    if (nonblank(CUr.WebDisplays)) then begin
      WDr.Code = CUr.WebDisplays;
    end else begin
      if (nonblank(CUr.CustCat)) then begin
        WDr.Code = CCr.WebDisplays;
      end;
    end;
    if (nonblank(WDr.Code)) then begin
      if (ReadFirstMain(WDr,1,true)) then begin
        if (WDr.HidePrices==1) then begin showprices = false; end;
        if (WDr.ShowStockLevel==1) then begin showstocklevel = true; end;
      end;
    end;
  end;
  ToolWebGetCustAndSettings = res;
  return;
end;

global
procedure ToolWebMailList(string mailboxcode,string curboxcode,string mailboxname,string backpage,LongInt sernr,Integer maxlines)
begin
  record MailVc Mailr;
  row MailVc marw;
  string 60 ckey;
  string 60 torow;
  string 20 readstr;
  string 100 subj;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt,rwcnt;
  Integer rowtype;
  string 255 linkarg;
  record ConfVc MyConfr,Confr;

  MyConfr.AddrCode = Currentuser;
  if (nonblank(MyConfr.AddrCode)) then begin
    if (ReadFirstKey("AddrCode",MyConfr,1,true)) then begin
    end else begin Goto WebMailListQuitCOnf; end;
  end;
  if (StringToInt(mailboxcode)<>MyConfr.SerNr) then begin
  if (mailboxcode<>"0") then begin
    Confr.SerNr = mailboxcode;
    if (ReadFirstKey("SerNr",Confr,1,true)) then begin
      if (TestConfAccess(MyConfr,Confr)==false) then begin
        Goto WebMailListQuitCOnf;
      end;
    end else begin
      Goto WebMailListQuitCOnf;
    end;
  end;
  end;

  loopcnt = 1;
  rwt = 0;
  ckey = "UserSer:" & mailboxcode;
  looppos = RecordsInIndex("MailVc",ckey)+1-sernr;
  SetLoopPosition(Mailr,looppos);
  found = true;
  while (LoopBackKey(ckey,Mailr,1,found)) begin
    if (found) then begin
      rwcnt = MatRowCnt(Mailr);
      if (rwcnt>0) then begin
        MatRowGet(Mailr,0,marw);
        if (mailboxname==marw.AddrCode) then begin
          rowtype = FirstToRow(Mailr,torow);
/*
         if (rowtype==1) then begin
            torow = "From: " & torow;
          end;
*/
          if (rowtype==0) then begin
            torow = "To: " & torow;
          end;
        end else begin
          torow = marw.AddrCode;
        end;
      end;
      if (blank(Mailr.Header)) then begin
        subj = "(No subject)";
      end else begin
        subj = Mailr.Header;
      end;
      if (TestReadFlag(Mailr.SerNr,curboxcode)==0) then begin
        readstr = "READ";
      end else begin
        readstr = "UNREAD";
      end;
      linkarg = "backnr=" & sernr & "&mailnumber=" & Mailr.SerNr & "&backpage=" & backpage & "&confcode=" & WebGetArg("confcode");
      ToolWebLineStart;
      ToolWebTableData(readstr,"","","left","","",rwt);
      ToolWebTableData(subj,"WebMailView.hal",linkarg,"left","","",rwt)
      ToolWebTableData(torow,"","","left","","",rwt);
      ToolWebTableData(""&Mailr.TransDate &  "&nbsp;" & Mailr.TransTime,"","","left","","",rwt);
      ToolWebLineEnd;
      rwt = rwt + 1;
      if (rwt>1) then begin rwt = 0; end;
      loopcnt = loopcnt + 1;
      if (loopcnt>maxlines) then begin
        found = false;
      end;
    end;
  end;
WebMailListQuitCOnf:;
  return;
end;

global
procedure ToolWebConfList(string confcode,LongInt sernr,Integer maxlines)
begin
  record ConfVc Confr,MyConfr;
  string 60 ckey;
  string 60 torow;
  string 20 readstr;
  string 100 subj;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt;
  Integer rowtype;
  string 100 linkpage;
  string 255 linkarg;
  
  MyConfr.AddrCode = Currentuser;
  if (nonblank(MyConfr.AddrCode)) then begin
    if (ReadFirstKey("AddrCode",MyConfr,1,true)) then begin
    end else begin Goto QuitCOnf; end;
  end;
  if (confcode<>"0") then begin
    Confr.SerNr = confcode;
    if (ReadFirstKey("SerNr",Confr,1,true)) then begin
      if (TestConfAccess(MyConfr,Confr)==false) then begin
        Goto QuitCOnf;
      end;
    end else begin
      Goto QuitCOnf;
    end;
  end;
  loopcnt = 1;
  rwt = 0;
  ckey = "SubConfAddrName:" & confcode;
  looppos = sernr;
  SetLoopPosition(Confr,looppos);
  found = true;
  while (LoopKey(ckey,Confr,1,found)) begin
    if (found) then begin
      if (Confr.Class==kConfClassFolder) then begin
        linkpage = "WebConfBrowse.hal";
      end else begin
        linkpage = "WebConf2Browse.hal";
      end;
      linkarg = "backnr=" & sernr & "&backpage=" & WebGetArg("backpage") & "&confcode=" & Confr.SerNr;
      if (TestConfAccess(MyConfr,Confr)==false) then begin
        linkarg = "";
        linkpage = "";
      end;
      ToolWebLineStart;
      ToolWebTableData(Confr.AddrName,linkpage,linkarg,"left","","",rwt);
      ToolWebTableData(Confr.Comment,"","","left","","",rwt);
//      ToolWebTableData(Confr.Class,"","","left","","",rwt);
      ToolWebLineEnd;
      rwt = rwt + 1;
      if (rwt>1) then begin rwt = 0; end;
      loopcnt = loopcnt + 1;
      if (loopcnt>maxlines) then begin
        found = false;
      end;
    end;
  end;
QuitConf:;
  return;
end;

global
procedure ToolWebGetDispGroup(string curcustno,var string dgroup)
begin
  record CUVc CUr;
  record CCatVc CCatr;
  record WebControlBlock WCr;
  
  CUr.Code = curcustno;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (nonblank(CUr.MainDispGroup)) then begin
      dgroup = CUr.MainDispGroup;
    end else begin
      CCatr.Code = CUr.CustCat;
      if (ReadFirstMain(CCatr,1,true)) then begin
        dgroup = CCatr.MainDispGroup;
      end;
    end;
  end;
  if (blank(dgroup)) then begin
    BlockLoad(WCr);
    dgroup = WCr.DispGroup;
  end;
  if (blank(dgroup)) then begin
    dgroup = "MAIN";
  end;
  return;
end;

// Very silly function...
global
function Boolean ToolWebItemHasPict(var record WebHTMLVc WHr,string curitemno,string subcode)
begin
  Boolean res;

  res = false;
  WHr.Code = curitemno;
  WHr.SubCode = subcode;
  if (ReadFirstMain(WHr,2,true)) then begin
    if (nonblank(WHr.PicName)) then begin
      res = true;
    end;
  end;
  ToolWebItemHasPict = res;
  return;
end;

global
procedure ToolWebDisplayHTMLExtra(record WebHTMLVc WHr,string pwidth,string pheight)
begin
  string 255 tstr;
  
   if (nonblank(WHr.Code)) then begin
    if (nonblank(WHr.PicName)) then begin
      tstr = "<img src=""" & WHr.PicName & """";
      if (nonblank(pwidth)) then begin
        tstr = tstr & " width=""" & pwidth & """";
      end;
      if (nonblank(pheight)) then begin
        tstr = tstr & " height=""" & pheight & """";
      end;
      tstr = tstr & ">";
      WebOutString(tstr);
    end else begin
      ToolWebOutWebHTMLText(WHr,0,"");
    end;
  end;
  return;
end;

global
procedure DisplayItemLine(string curitemno,string linkargs,val qty,string unittext,string spec,val reb,val price,string curcode,val totsum,Boolean printtot,Integer rwt)
begin
  record BaseCurBlock BCr;
  string 60 tstr;
  
  ToolWebLineStart;
  ToolWebTableData(curitemno,"WebItemView.hal",linkargs,"left","","",rwt)
  if (qty<>0) then begin
    tstr = ValToString(qty,M4UVal,"","",0);
  end else begin
    tstr = "";
  end;
  ToolWebTableData(tstr,"","","center","","",rwt);
  ToolWebTableData(unittext,"","","left","","",rwt);
  ToolWebTableData(spec,"","","left","","",rwt);
  ToolWebTableData(price,"","","right","","",rwt);
  if (printtot==false) then begin
    tstr = curcode;
     if (blank(tstr)) then begin
       BlockLoad(BCr);
       tstr = BCr.BaseCur1;
     end;
    ToolWebTableData(tstr,"","","center","","",rwt);
  end;
  if (reb<>0) then begin
    tstr = ValToString(reb,M41Val," ",".",0);
  end else begin
    tstr = "";
  end;
  ToolWebTableData(tstr,"","","center","","",rwt);
  if (printtot) then begin
    ToolWebTableData(totsum,"","","right","","",rwt);
  end;
  ToolWebLineEnd;
  return;
end;

global
procedure ToolWebDispGroups(string itcode,LongInt msernr,Integer maxlines)
begin
  record DIVc DIr;
  record CUVc CUr;
  record CCatVc CCr;
  record INVc INr;
  record INVc IN2r;
  string 60 ckey;
  string 100 spec,tempstr;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt;
  string 255 linkargs;
  string 10 dgroup;
  Integer pos,dicnt;
  string 5 nsep;
  Boolean tmpf;
  Boolean overmax;
  Boolean headerf;
  string 20 curitemno,tax2code,taxtemplatecode;
  string 100 curitemname;
  string 20 salesacc,vatcode;
  val price,reb,cost,qty,ordqty,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Time blankt;

  loopcnt = 1;
  rwt = 0;
  overmax = false;
  headerf = false;
  pos = 0;
  dicnt = 0;
  CUr.Code = CurrentCust;
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  ckey = "DICode:" & itcode;
  found = true;
  DIr.Code = "";
  ResetLoop(DIr);
  while (LoopKey(ckey,DIr,1,found)) begin
    if (DIr.Code==itcode) then begin found = false; end;
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        spec = DIr.Name;
        linkargs = "backpage=WebMainCust.hal&backnr=" & msernr & "&itcode=" & DIr.Code;
        ToolWebMenuItem(spec,"WebMainCust2.hal",linkargs,"",rwt);
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  if (msernr>dicnt) then begin
    looppos = msernr-dicnt;
  end;
  if (dicnt==0) then begin
    headerf = true;
    ToolWebItemHeader;
  end;
  CCr.Code = CUr.CustCat;
  if (ReadFirstMain(CCr,1,true)) then begin
    if (blank(CUr.PLCode)) then begin
      CUr.PLCode = CCr.PLCode;
      CUr.RebCode = CCr.RebCode;
    end;
  end;
  pos = 0;
  found = true;
  ckey = "DICode:" & itcode;
  INr.Code = "";
  while (LoopKey(ckey,INr,1,found)) begin
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        reb = BlankVal;
        curitemno = INr.Code;
        ordqty = QtyInBasket(curitemno,0);
        qty = ordqty;
        if (qty==0) then begin
          qty = 1;
        end;
        if (GetItemPriceDiscount3(curitemno,qty,IN2r,CUr.CurncyCode,0,0,0,0,0,
                CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
          IN2r.Name = "";
        end;
        if (showprices==false) then begin
          price = BlankVal;
        end;
        spec = IN2r.Name;
        linkargs = "backpage=WebMainCust.hal&backnr=" & msernr & "&itcode=" & itcode & "&itemcode=" & curitemno;
        DisplayItemLine(curitemno,linkargs,ordqty,IN2r.Unittext,spec,reb,price,CUr.CurncyCode,BlankVal,false,rwt);
        rwt = rwt + 1;
        if (rwt>1) then begin rwt = 0; end;
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  if (headerf) then begin
    WebOutString("</table>");
  end;
  return;
end;

global
function Boolean TestIfDispGroups(string itcode)
begin
  record DIVc DIr;
  string 60 ckey;
  string 100 spec,tempstr;
  LongInt loopcnt;
  Boolean found;
  Boolean res;
  Integer pos,dicnt;

  res = true;
  loopcnt = 1;
  pos = 0;
  dicnt = 0;
  ckey = "DICode:" & itcode;
  found = true;
  DIr.Code = "";
  ResetLoop(DIr);
  while (LoopKey(ckey,DIr,1,found)) begin
    if (DIr.Code==itcode) then begin found = false; end;
    if (found) then begin
      dicnt = 1;
      goto L77;
    end;
  end;
L77:;
  if (dicnt==0) then begin
    res = false;
  end;
  TestIfDispGroups = res;
  return;
end;

global
procedure ToolWebViewShopList(record ORVc ORr)
begin
  row ORVc ORrw;
  record INVc INr;
  Integer rwt;
  Integer rwcnt,i;
  string 255 linkargs;

  rwt = 0;
  rwcnt = MatRowCnt(ORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    INr.Code = ORrw.ArtCode;
    if (ReadFirstMain(INr,1,true)==false) then begin
      INr.Unittext = "";
    end;
    linkargs = "backpage=WebShopBask.hal&itemcode="&ORrw.ArtCode;
    DisplayItemLine(ORrw.ArtCode,linkargs,ORrw.Quant,INr.Unittext,ORrw.Spec,ORrw.vRebate,ORrw.Price,ORr.CurncyCode,ORrw.Sum,true,rwt);
    rwt = rwt + 1;
    if (rwt>1) then begin rwt = 0; end;
  end;
  return;
end;

global
function Boolean LoggedInTest()
begin
  Boolean res;
  
  if (WebLoginStatus==3) then begin
    res = true;
  end else begin
    res = false;
    ToolWebNotLoggedinMess;
  end;
  
//  res = false;
  
  LoggedInTest = res;
  return;
end;

global
function Boolean WapLoggedInTest()
begin
  Boolean res;
  
  if (WebLoginStatus==3) then begin
    res = true;
  end else begin
    res = false;
    ToolWebWapNotLoggedIn;
  end;
  WapLoggedInTest = res;
  return;
end;

global
procedure DoHttpReport()
begin
  record RcVc RCr;
  string 60 rcw;
  string 60 compcode;
  Integer oldcomp;
  
  if (LoggedInTest()) then begin
  RCr.Media = mtHttp;
  RCr.repname = WebGetArg("report");
  rcw = WebGetArg("rcw");
  ReportDefaults(RCr,rcw);
  WebReportArgs(RCr);
  oldcomp = CurrentCompany;
  switch (WebGetArg("report")) begin
    case "ActTodo2Rn":
      if (GetGlobalUserMainCompany(CurrentUser,compcode)) then begin
        if (nonblank(compcode)) then begin
          if (SetCompanyCode(compcode,false)) then begin
          end;
        end;
      end;
      RCr.f1 = CurrentUser;
  end;
  RunReport(RCr,0);
  ResetCompany(oldcomp);
  end;
  return;
end;

/* level: 0=Inside item name, 1=Item name, price and code, 2=Item name, price, code and HTML Extras */
/* insel = Item selection from to, itsel = Item group sel. from to, disel is the Display Group */
/* Priority: disel has highest then itsel and insel is last */
/* disel not ready yet */
global
procedure DisplaySearchResult(string searchstr,Integer slevel,string insel,string itsel,string disel,LongInt maxres)
begin
  record CUVc CUr;
  record INVc INr;
  record INVc IN2r;
  record DIVc DIr;
  record WebHTMLVc WHr;
  string 20 frin,toin;
  string 10 frit,toit;
  Boolean TrHs,testf;
  Integer keys;
  Integer rwt;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,tax2code,taxtemplatecode;
  val price,reb,cost,qty,ordqty,tax2prc;
  Boolean calcprice;
  string 100 spec;
  string 255 linkargs;
  string 60 ckey;
  LongInt cnt;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Time blankt;

  rwt = 0;
  cnt = 1;
  CUr.Code = CurrentCust;
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  frin = FirstInRange(insel,20);
  toin = LastInRange(insel,20);
  frit = FirstInRange(itsel,5);
  toit = LastInRange(itsel,5);
  if (nonblank(frit)) then begin
    INr.Group = frit;
    INr.Code = frin;
    ckey = "Group";
    keys = 2;
  end else begin
    INr.Code = frin;
    ckey = "Code";
    keys = 1;
  end;
  TrHs = true;
  while (LoopKey(ckey,INr,keys,TrHs)) begin
    testf = true;
    if (nonblank(toit)) then begin
      if (INr.Group>toit) then begin TrHs = false; end;
    end else begin
      if (nonblank(toin)) then begin
        if (INr.Code>toin) then begin TrHs = false; end;
      end;
    end;
    if (TrHs==false) then begin testf = false; end;
    if (blank(INr.DispGroups)) then begin testf = false; end;
    if (INr.Terminated!=0) then begin testf = false; end;
    if ((nonblank(disel)) and (testf==true)) then begin
      if (SetInSet(disel,INr.DispGroups)==false) then begin
        testf = false;
      end;
    end;
    if (nonblank(toin)) then begin
      if (INr.Code>toin) then begin testf = false; end;
    end;
    if (testf) then begin
      if (slevel==0) then begin
        RecordNew(WHr);
        AddToText(INr.Name,WHr);
      end;
      if (slevel==1) then begin
        RecordNew(WHr);
        AddToText(INr.Name,WHr);
        AddToText(INr.Code,WHr);
        AddToText(INr.Group,WHr);
      end;
      if (slevel==2) then begin
        WHr.Code = INr.Code;
        WHr.SubCode = "BP"; // for Big Picture which is the descriptive text
        if (ReadFirstMain(WHr,1,true)==false) then begin
          RecordNew(WHr);
        end;
        AddToText(INr.Name,WHr);
        AddToText(INr.Code,WHr);
        AddToText(INr.Group,WHr);
      end;
      if (StringInText(searchstr,WHr)) then begin
        reb = BlankVal;
        curitemno = INr.Code;
        ordqty = QtyInBasket(curitemno,0);
        qty = ordqty;
        if (qty==0) then begin
          qty = 1;
        end;
        if (GetItemPriceDiscount3(curitemno,qty,IN2r,CUr.CurncyCode,0,0,0,0,0,
                CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
          IN2r.Name = "";
        end;
        if (showprices==false) then begin
          price = BlankVal;
        end;
        spec = IN2r.Name;
//        linkargs = "backpage=WebDispGroupBrowse.hal&backnr=" & msernr & "&itcode=" & itcode & "&itemcode=" & curitemno;
//        linkargs = "backnr=" & msernr & "&itcode=" & INr.Group & "&itemcode=" & curitemno;
        linkargs = "&itcode=" & INr.Group & "&itemcode=" & curitemno;
        DisplayItemLine(curitemno,linkargs,ordqty,IN2r.Unittext,spec,reb,price,CUr.CurncyCode,BlankVal,false,rwt);
        rwt = rwt + 1;
        if (rwt>1) then begin rwt = 0; end;
        cnt = cnt + 1;
        if (cnt>maxres) then begin TrHs = false; end;;
      end;
    end;
  end;
  return;
end;

global
procedure ToolWebListAR(string cucode,LongInt msernr,Integer maxlines,var val totval,Boolean shippedones)
begin
  record IPrsVc IPrsr;
  record IVVc IVr;
  record IPVc IPr;
  record PurgeTRVc PurgeTRr;
  record TRVc TRr;
  record CLInVc CLInr;
  record CUVc CUr;
  row IPVc IPrw;
  row TRVc TRrw;
  row CLInVc CLInrw;
  Integer i,rwcnt;
  Integer rwt,orcnt;
  Boolean foundf;
  string 20 curncy;
  val t,t2,dtot,ctot,total;
  LongInt loopcnt;

  if (LoggedInTest()) then begin
    loopcnt = 1;
    rwt = 0;
    orcnt = 0;
    dtot = 0;
    ctot = 0;
    total = 0;
    foundf = true;
    IPrsr.CustCode = CurrentCust;
    IPrsr.CustDate = AddYear(CurrentDate,-1);
    
    CUr.Code = CurrentCust;
    total = GetBalance(CUr,"balance",AddMonth(IPrsr.CustDate,-1));
    ToolWebLineStart;
    ToolWebTableData("","","","left","","",rwt);
    ToolWebTableData("","","","left","","",rwt);
    ToolWebTableData("Saldo on " & IPrsr.CustDate,"","","left","","",rwt);
    ToolWebTableData("","","","right","","",rwt);
    ToolWebTableData("","","","right","","",rwt);
    ToolWebTableData("" & total,"","","right","","",rwt);
    ToolWebLineEnd;
    rwt = 1;
    
    while (LoopMain(IPrsr,2,foundf)) begin
      if (IPrsr.CustCode<>CurrentCust) then begin foundf = false; end;
      if (IPrsr.CustDate>CurrentDate) then begin foundf = false; end;
      if (foundf) then begin
        t = 0;
        if (IPrsr.TransType==kIPrsTransTypeInvoice) then begin
          IVr.SerNr = IPrsr.TransNr;
          if (ReadFirstMain(IVr,1,true)) then begin
            if (IVr.Invalid==0) then begin
              if (IPrsr.TransNr<>IPrsr.IVNr) then begin
                if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
                  t = -IVr.Sum4;
                end;
              end else begin
                t = IVr.Sum4;
              end;
              curncy = IVr.CurncyCode;
            end;
            if (t>0) then begin
              if (IVr.InvType==kInvoiceTypeCash or IVr.InvType==kInvoiceTypeCashInvoiceReceiptPRT) then begin
                t2 = -t;
              end else begin
                t2 = BlankVal;
              end;
            end else begin
              if (IVr.InvType==kInvoiceTypeCash or IVr.InvType==kInvoiceTypeCashInvoiceReceiptPRT) then begin
                t = -t2;
              end else begin
                t2 = t;
                t = BlankVal;
              end;
            end;
            total = total + t + t2;
            orcnt = orcnt + 1;
            if (orcnt>msernr) then begin
              ToolWebLineStart;
              ToolWebTableData(IPrsr.CustDate,"","","left","","",rwt);
              ToolWebTableData(USetStr(1150) & "." & IPrsr.TransNr,"","","left","","",rwt);
              if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
                ToolWebTableData(USetStr(1150) & "." & IPrsr.IVNr,"","","left","","",rwt);
              end else begin
                ToolWebTableData("","","","left","","",rwt);
              end;
              ToolWebTableData("" & t,"","","right","","",rwt);
              ToolWebTableData("" & -t2,"","","right","","",rwt);
              ToolWebTableData("" & total,"","","right","","",rwt);
              ToolWebLineEnd;
              rwt = rwt + 1;
              if (rwt>1) then begin rwt = 0; end;
              loopcnt = loopcnt + 1;
              if (loopcnt>maxlines) then begin
                foundf = false;
              end;
            end;
          end;
        end;
        if (IPrsr.TransType==kIPrsTransTypeReceipt) then begin
          IPr.SerNr = IPrsr.TransNr;
          if (ReadFirstMain(IPr,1,true)) then begin
            if (IPr.RejectedFlag==0) then begin
              rwcnt = MatRowCnt(IPr);
              for (i=0;i<rwcnt;i=i+1) begin
                MatRowGet(IPr,i,IPrw);
                if ((IPrw.ovst==0)) then begin
                  if (IPrw.InvoiceNr==IPrsr.IVNr) then begin
                    if (IPrw.stp==1) then begin
                      if (IPrw.PayDate==IPrsr.CustDate) then begin
                        t = t - IPrw.InvVal;
                        curncy = IPrw.InvCurncy;
                      end;    
                    end;    
                  end;    
                end;    
              end;    
              if (t>0) then begin
                t2 = BlankVal;
              end else begin
                t2 = t;
                t = BlankVal;
              end;
              total = total + t + t2;
              orcnt = orcnt + 1;
              if (orcnt>msernr) then begin
                ToolWebLineStart;
                ToolWebTableData(IPrsr.CustDate,"","","left","","",rwt);
                ToolWebTableData(USetStr(1151) & "." & IPrsr.TransNr,"","","left","","",rwt);
                ToolWebTableData(USetStr(1150) & "." & IPrsr.IVNr,"","","left","","",rwt);
                ToolWebTableData("" & t,"","","right","","",rwt);
                ToolWebTableData("" & -t2,"","","right","","",rwt);
                ToolWebTableData("" & total,"","","right","","",rwt);
                ToolWebLineEnd;
                rwt = rwt + 1;
                if (rwt>1) then begin rwt = 0; end;
                loopcnt = loopcnt + 1;
                if (loopcnt>maxlines) then begin
                  foundf = false;
                end;
              end;
            end;    
          end;
        end;
        if (IPrsr.TransType==kIPrsTransTypePurgeNLTransaction) then begin
          PurgeTRr.Number = IPrsr.TransNr;
          PurgeTRr.IntYc = GetIntYc(IPrsr.TransDate);
          PurgeTRr.TransRow = IPrsr.TransRow;
          if (ReadFirstMain(PurgeTRr,3,true)) then begin
            if (PurgeTRr.SerNr==IPrsr.IVNr) then begin
              t = PurgeTRr.CurDebVal - PurgeTRr.CurCredVal;
              if ((PurgeTRr.CurDebVal==0) and (PurgeTRr.CurCredVal==0)) then begin
                t = PurgeTRr.DebVal - PurgeTRr.CredVal;
              end;  
            end;
            if (t>0) then begin
              t2 = BlankVal;
            end else begin
              t2 = t;
              t = BlankVal;
            end;
            total = total + t + t2;
            orcnt = orcnt + 1;
            if (orcnt>msernr) then begin
              ToolWebLineStart;
              ToolWebTableData(IPrsr.CustDate,"","","left","","",rwt);
              ToolWebTableData(StrTRCode(PurgeTRr.IntYc) & "." & IPrsr.TransNr,"","","left","","",rwt);
              ToolWebTableData(USetStr(1150) & "." & IPrsr.IVNr,"","","left","","",rwt);
              ToolWebTableData("" & t,"","","right","","",rwt);
              ToolWebTableData("" & -t2,"","","right","","",rwt);
              ToolWebTableData("" & total,"","","right","","",rwt);
              ToolWebLineEnd;
              rwt = rwt + 1;
              if (rwt>1) then begin rwt = 0; end;
              loopcnt = loopcnt + 1;
              if (loopcnt>maxlines) then begin
                foundf = false;
              end;
            end;
          end;
        end;
        if (IPrsr.TransType==kIPrsTransTypeNLTransaction) then begin
          TRr.Number = IPrsr.TransNr;
          TRr.IntYc = GetIntYc(IPrsr.TransDate);
          if (ReadFirstMain(TRr,2,true)) then begin
            rwcnt = MatRowCnt(TRr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(TRr,i,TRrw);
              if (TRrw.ovst==0) then begin
                if (TRrw.stp==1) then begin
                  if (TRrw.SerNr==IPrsr.IVNr) then begin
                    t = TRrw.CurDebVal - TRrw.CurCredVal;
                    if ((TRrw.CurDebVal==0) and (TRrw.CurCredVal==0)) then begin
                      t = TRrw.DebVal - TRrw.CredVal;
                    end;  
                  end;
                end;
              end;
            end;
            if (t>0) then begin
              t2 = BlankVal;
            end else begin
              t2 = t;
              t = BlankVal;
            end;
            total = total + t + t2;
            orcnt = orcnt + 1;
            if (orcnt>msernr) then begin
              ToolWebLineStart;
              ToolWebTableData(IPrsr.CustDate,"","","left","","",rwt);
              ToolWebTableData(StrTRCode(TRr.IntYc) & "." & IPrsr.TransNr,"","","left","","",rwt);
              ToolWebTableData(USetStr(1150) & "." & IPrsr.IVNr,"","","left","","",rwt);
              ToolWebTableData("" & t,"","","right","","",rwt);
              ToolWebTableData("" & -t2,"","","right","","",rwt);
              ToolWebTableData("" & total,"","","right","","",rwt);
              ToolWebLineEnd;
              rwt = rwt + 1;
              if (rwt>1) then begin rwt = 0; end;
              loopcnt = loopcnt + 1;
              if (loopcnt>maxlines) then begin
                foundf = false;
              end;
            end;
          end;
        end;

        if (IPrsr.TransType==kIPrsTransTypeCashIn) then begin
          CLInr.SerNr = IPrsr.TransNr;
          if (ReadFirstMain(CLInr,1,true)) then begin
            rwcnt = MatRowCnt(CLInr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(CLInr,i,CLInrw);
              if (CLInrw.Type==1) then begin
                if (CLInrw.TransNr==IPrsr.IVNr) then begin
                  t = CLInrw.Sum;
                end;
              end;
            end;
            if (t>0) then begin
              t2 = BlankVal;
            end else begin
              t2 = t;
              t = BlankVal;
            end;
            total = total + t + t2;
            orcnt = orcnt + 1;
            if (orcnt>msernr) then begin
              ToolWebLineStart;
              ToolWebTableData(IPrsr.CustDate,"","","left","","",rwt);
              ToolWebTableData(USetStr(1193) & "." & IPrsr.TransNr,"","","left","","",rwt);
              ToolWebTableData(USetStr(1150) & "." & IPrsr.IVNr,"","","left","","",rwt);
              ToolWebTableData("" & t,"","","right","","",rwt);
              ToolWebTableData("" & -t2,"","","right","","",rwt);
              ToolWebTableData("" & total,"","","right","","",rwt);
              ToolWebLineEnd;
              rwt = rwt + 1;
              if (rwt>1) then begin rwt = 0; end;
              loopcnt = loopcnt + 1;
              if (loopcnt>maxlines) then begin
                foundf = false;
              end;
            end;
          end;
        end;
              
        dtot = dtot + t;
        ctot = ctot + t2;
      end;
    end;
    ToolWebLineStart;
    ToolWebTableHdr("","left",rwt);
    ToolWebTableHdr("","left",rwt);
    ToolWebTableHdr("Total","left",rwt);
    ToolWebTableHdr("" & dtot,"right",rwt);
    ToolWebTableHdr("" & -ctot,"right",rwt);
    ToolWebTableHdr("" & total,"right",rwt);
    ToolWebLineEnd;
  end;
  return;
end;

// kyts
global
procedure WebCustSalesLedger()
begin
  record RcVc RCr;
  string 60 rcw;
  
  if (LoggedInTest()) then begin
    RCr.Media = mtHttp;
    RCr.repname = "ARRn";
    rcw = WebGetArg("rcw");
    rcw = "ARRClass";
    ReportDefaults(RCr,rcw);
    RCr.f1 = CurrentCust;
  //  WebReportArgs(RCr);
    RunReport(RCr,0);
  end;
  
  return;
end;

// kyts
global
procedure WebCustStatusReport()
begin
  record RcVc RCr;
  string 60 rcw;
  
  if (LoggedInTest()) then begin
    RCr.Media = mtHttp;
    RCr.repname = "CustPSRn";
    rcw = WebGetArg("rcw");
    rcw = "CustPSRClass";
    ReportDefaults(RCr,rcw);
    RCr.f1 = CurrentCust;
//  WebReportArgs(RCr);
    RunReport(RCr,0);
  end;
  
  return;
end;

