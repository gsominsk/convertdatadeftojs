external Function Boolean WebHBSDivPublicMain(string,string,LongInt,LongInt,Boolean,Boolean);
external function string 200 ToolWebReturnTheText(Integer);
external procedure GetCustData(string,var integer,var longint);
external function string 255 GetInternetServiceName(string,integer,string);
external function boolean IsISPackageValid(string,date);
external function string 60 GetPackageRowTypeName(integer);
external function val WebISShopGetNoOfUnits(record TXCUServiceVc);
external function string 20 WebISShopFormatDate(date);
external function boolean IsDefaultService(record TXCUServiceVc);
external updating function boolean UpdateCustService(string,longint,string,boolean);
external procedure ToolWebHBSDivNavLink(string,string,string,string,string,Boolean,Integer);
external function integer GetTXCUServiceStatus(longint,string);
external procedure WebISShopNotLoggedIn(string);
external procedure WebISShopMyServices(string);

global
updating procedure WebISShopServiceAmendBuy(string langcode)
begin
  string 60 custcode;
  longint svcsernr;
  string 60 newpackage,amendtype;
  boolean res;
  
  if (WebLoginStatus==3) then begin
    custcode = CurrentCust;
    svcsernr = StringToLongInt(WebGetArg("svcsernr"));
    newpackage = WebGetArg("newpkg");
    amendtype = WebGetArg("type");
    
    if (svcsernr!=-1) then begin
      if (UpdateCustService(custcode,svcsernr,newpackage,amendtype=="default")) then begin
        WebISShopMyServices(langcode);
        //res = WebHBSDivPublicMain("IS_AMENDSERVICE_DONE",langcode,-1,-1,false,false);
        //WebOutString("<p>");
        //removed until i know a way to make the link text translateable
        //ToolWebHBSDivNavLink("Browse Services","WebHBSDivMain.hal","&function=WebISShopMyServices","",langcode,false,0);
      end else begin
        WebOutString("Error");
      end;
    end;
  end else begin
    WebISShopNotLoggedIn(langcode);
  end;
  
LWebISShopServiceAmendBuy:;
  return;
end;

//current subscription
procedure WebISShopAmendCurrentSubscriptionHeader(string service,string langcode)
begin
  string 255 tstr;
  
  WebOutString("<table width=""100%"">");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"" colspan=""6""  class=""heading3"">" & ToolWebReturnTheText(20350) & "</td>"); //Current Subscription Detail
  WebOutString("</tr>");

  if (blank(service)) then begin
    tstr = ToolWebReturnTheText(20338);
  end else begin
    tstr = GetInternetServiceName(service,0,langcode);
  end;
  WebOutString("<tr>");
  WebOutString("<th width=""100%"" colspan=""6"" align=""left""><br>" & tstr & "</th>");
  WebOutString("</tr>");

  WebOutString("<tr>");
  WebOutString("<th width=""20%"" align=""left"">" & ToolWebReturnTheText(20324) & "</th>"); //Type
  WebOutString("<th width=""17%"" align=""center"">" & ToolWebReturnTheText(20325) & "</th>"); //Start Date
  WebOutString("<th width=""17%"" align=""center"">" & ToolWebReturnTheText(20326) & "</th>"); //End Date
  WebOutString("<th width=""11%"" align=""center"">" & ToolWebReturnTheText(20327) & "</th>"); //No of Units
//  WebOutString("<th width=""10%"" align=""center"">" & ToolWebReturnTheText(20328) & "</th>"); //Units left
  WebOutString("<th width=""15%"" align=""center"">" & ToolWebReturnTheText(20357) & "</th>"); //Status
  WebOutString("<th width=""20%"" align=""center"">" & "&nbsp;" & "</th>");
  WebOutString("</tr>");

  return;
end;

procedure WebISShopAmendCurrentServiceLine(record TXCUServiceVc TCSr,string langcode)
begin
  record WebServiceVc WSr;
  string 255 tstr;
  boolean defaultsvc;
  boolean requiredcontract;
  integer status;
  
  requiredcontract = false;
  
  if (TCSr.Service=="") then begin
    defaultsvc = true;
  end else begin
    defaultsvc = IsDefaultService(TCSr);
  end;
  
  WebOutString("<tr>");
  if (defaultsvc) then begin
    tstr = ToolWebReturnTheText(20375);
  end else begin
    if (TCSr.Type==0) then begin
      tstr = ToolWebReturnTheText(20314); // Subscription
    end else begin
      tstr = ToolWebReturnTheText(20309); // Voucher
    end;
  end;
  WebOutString("<td align=""left"">" & tstr & "</td>");
  if (TCSr.CustCode=="") then begin
    WebOutString("<td align=""center"">" & "-" & "</td>");
  end else begin
    WebOutString("<td align=""center"">" & WebISShopFormatDate(TCSr.StartDate) & "</td>");
  end;
  WebOutString("<td align=""center"">" & WebISShopFormatDate(TCSr.EndDate) & "</td>");
  WebOutString("<td align=""center"">" & WebISShopGetNoOfUnits(TCSr) & "</td>");
//  WebOutString("<td align=""center"">" & "n/a" & "</td>");
  status = GetTXCUServiceStatus(TCSr.SerNr,CurrentCust);
  switch (status) begin
    case 1 : tstr = ToolWebReturnTheText(20358); // Active
    case 2 : tstr = ToolWebReturnTheText(20359); // Disabled;
    case 3 : tstr = ToolWebReturnTheText(20360); // requires contract
    otherwise
      tstr = ToolWebReturnTheText(20368); //unknown   
  end;

  WebOutString("<td align=""center""><a href=""");
  WebOutLink("WebHBSDivMain.hal?langcode=" & langcode & "&function=WebISShopServiceStatus" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr);
  WebOutString(""">" & tstr & "</a>" & "</td>");
  if (TCSr.Type==0) then begin
   // and requiredcontract==false) then begin
    switch (status) begin
      case 1: //currently active
        WebOutString("<td align=""center"">" & "<a href=""");
        WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceStatusChange" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr & "&action=disable&ret=svcamend");
        WebOutString(""" onclick=""return confirm('");
        WebOutString(ToolWebReturnTheText(20362)); //Are you sure you want to disable the selected service?
        WebOutString("')"">" & ToolWebReturnTheText(20361) & "</a>" & "</td>"); //Disable
      case 2: //currently disabled
        WebOutString("<td align=""center"">" & "<a href=""");
        WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceStatusChange" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & TCSr.SerNr & "&action=activate&ret=svcamend");
        WebOutString(""" onclick=""return confirm('");
        WebOutString(ToolWebReturnTheText(20370)); //Are you sure you want to activate the selected service?
        WebOutString("')"">" & ToolWebReturnTheText(20369) & "</a>" & "</td>"); //activate
      otherwise
        WebOutString("<td align=""center"">" & "&nbsp;" & "</td>");
    end;
  end else begin
    WebOutString("<td align=""center"">" & "&nbsp;" & "</td>");
  end;

  WebOutString("</tr>");

  return;
end;

procedure WebISShopAmendCurrentSubscriptionFooter(string langcode)
begin
  WebOutString("</table>");
  return;
end;

procedure WebISShopAmendCurrentSubscription(record TXCUServiceVc TCSr,string langcode)
begin
  WebISShopAmendCurrentSubscriptionHeader(TCSr.Service,langcode);
  
  WebISShopAmendCurrentServiceLine(TCSr,langcode);
  
  WebISShopAmendCurrentSubscriptionFooter(langcode);
  return;
end;
//END:current subscription

//subscriptions
procedure WebISShopAmendSubscriptionsHeader(string langcode)
begin
  WebOutString("<table width=""100%"" cellspacing=0 cellpadding=0>");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"" colspan=""7"" class=""heading3"">" & ToolWebReturnTheText(20353) & "</th>"); //New subscription
  WebOutString("</tr>");
  WebOutString("<tr>");
  WebOutString("<th width=""30%"" align=""left"" colspan=2>" & ToolWebReturnTheText(20315) & "</th>");
  WebOutString("<th width=""13%"" align=""center"">" & ToolWebReturnTheText(20303) & "</th>");
  WebOutString("<th width=""12%"" align=""center"">" & ToolWebReturnTheText(20304) & "</th>");
  WebOutString("<th width=""15%"" align=""center"">" & ToolWebReturnTheText(20305) & "</th>");
  WebOutString("<th width=""20%"" align=""center"">" & ToolWebReturnTheText(20306) & "</th>");
  WebOutString("<th width=""15%"" align=""center"">" & "&nbsp;" & "</th>");
  WebOutString("</tr>");
  return;
end;

procedure WebISShopAmendSubscriptionsDetail(string PkgCode,string langcode,boolean oddline,LongInt svcsernr,integer status,integer def)
begin
  record ISPackageVc IPr;
  record TXCUServiceVc TCSr;
  row ISPackageVc IPrw;
  row TXCUServiceVc TCSrw;
  boolean firstline;
  Integer i,cnt;
  string 10 color;
  boolean res;
  string 255 code,amendtype;
  integer typ;
  val setupprice,quant,price;
  
  IPr.Code = PkgCode;
  TCSr.SerNr = svcsernr;
  if (def==1) then begin
    res = ReadFirstMain(TCSr,1,true);
  end else begin
    res = ReadFirstMain(IPr,1,true);
  end;
  
  if (res) then begin
    firstline = true;
    if (def==1) then begin
      amendtype = "default";
    end else begin
      amendtype = "";
    end;
    if (def==1) then begin
      cnt = MatRowCnt(TCSr);
    end else begin
      cnt = MatRowCnt(IPr);
    end;
    for (i=0;i<cnt;i=i+1) begin
      if (def==1) then begin
        MatRowGet(TCSr,i,TCSrw);
        Code = "Default";
        typ = TCSrw.Typ;
        setupprice = 0;
        quant = TCSrw.Quant;
        price = TCSrw.Price;
      end else begin
        MatRowGet(IPr,i,IPrw);
        Code = IPr.Code;
        typ = IPrw.Typ;
        setupprice = IPr.SetupPrice;
        quant = IPrw.Quant;
        price = IPrw.Price;
      end;
      
      if (oddline) then begin
        color = "#e8f1fd"; //"#f4f4f4";
      end else begin
        color = "#dce5f2"; //"#eaeaea";
      end;
      WebOutString("<tr bgcolor=""" & color & """>");
      if (firstline) then begin
        WebOutString("<td width=""100%"" colspan=""7"" class=""deftxt"">" & ToolWebReturnTheText(20315) & ": " & Code & "</td>");
        WebOutString("</tr>");
        WebOutString("<tr bgcolor=""" & color & """>");
      end;
      WebOutString("<td width=""1%"">" & "&nbsp;" & "</td>");
      WebOutString("<td width=""29%"">" & GetPackageRowTypeName(typ) & "</td>");
      if (IPrw.Typ==1) then begin
        WebOutString("<td align=""center"">" & ValToString(setupprice,M4Val,"",".",0) & "</td>");
      end else begin
        WebOutString("<td>&nbsp;</td>");
      end;
      WebOutString("<td align=""center"">" & ValToString(quant,M4Val,"",".",1) & "</td>");
      if (typ==2) then begin
        WebOutString("<td>" & "&nbsp;" & "</td>");
        WebOutString("<td align=""center"">" & ValToString(price,M4Val,"",".",0) & "</td>");
      end else begin
        WebOutString("<td align=""center"">" & ValToString(price,M4Val,"",".",0) & "</td>");
        WebOutString("<td>" & "&nbsp;" & "</td>");
      end;
      WebOutString("<td align=""center"" rowspan=""" & cnt & """>");
      if (firstline) then begin
        switch (status) begin
          case 1: //active
            WebOutString("<a href=""");
            WebOutLink("WebHBSDivMainUpdate.hal?langcode=" & langcode & "&function=WebISShopServiceAmendBuy" & "&sessionid=" & WebGetArg("sessionid") & "&newpkg=" & PkgCode & "&svcsernr=" & svcsernr & "&type=" & amendtype);
            WebOutString(""" onclick=""return confirm('");
            WebOutString(ToolWebReturnTheText(20354)); //Are you sure you want to modify your service subscription?
            WebOutString("')"">" & ToolWebReturnTheText(20355) & "</a>"); //Select
          case 3: // requires contract
            WebOutString("<a href=""");
            WebOutLink("WebHBSDivMain.hal?langcode=" & langcode & "&function=WebISShopServiceStatus" & "&sessionid=" & WebGetArg("sessionid") & "&svcsernr=" & svcsernr);
            WebOutString(""">" & ToolWebReturnTheText(20364) & "</a>"); //contact us
          otherwise
            WebOutString(ToolWebReturnTheText(20308)); //N/A
        end;
      end;
      WebOutString("</td>");
      WebOutString("</tr>");
      if (firstline) then begin
        firstline = false;
      end;
    end;
    if (cnt>0) then begin
      WebOutString("<tr bgcolor=""" & color & """><td colspan=""7"">&nbsp;</td></tr>");
    end;
  end;
  return;
end;

procedure WebISShopAmendSubscriptionsFooter(string langcode)
begin
  WebOutString("</table>");
  return;
end;

function boolean WebISShopAmendListTariffs(record TXCUServiceVc TCSr,string langcode)
begin
  record ISPackageVc IPr;
  boolean firstline;
  boolean foundf;
  boolean oddline;
  boolean avail;
  record TXCUServiceVc TCS2r;
  integer status;

  IPr.Service = TCSr.Service;
  IPr.Type = TCSr.Type;
  oddline = true;
  firstline = true;
  foundf = true;
  avail = true;
  status = GetTXCUServiceStatus(TCSr.SerNr,CurrentCust);
  // first show default tariff option
  TCS2r.Service = TCSr.Service;
  TCS2r.CustCode = "";
  if (ReadFirstKey("CustCode",TCS2r,2,true)) then begin
    WebISShopAmendSubscriptionsHeader(langcode);
    firstline = false;
    WebISShopAmendSubscriptionsDetail(IPr.Code,langcode,oddline,TCSr.SerNr,status,1);
    oddline = false;
  end;
  // now show other tariff options (packages)
  while (LoopKey("Service",IPr,2,foundf)) begin
    if (IPr.Service!=TCSr.Service or IPr.Type!=TCSr.Type) then begin
      foundf = false;
    end;
    if (foundf) then begin
      if (IsISPackageValid(IPr.Code,CurrentDate)) then begin
        if (firstline) then begin
          WebISShopAmendSubscriptionsHeader(langcode);
          firstline = false;
        end;
        WebISShopAmendSubscriptionsDetail(IPr.Code,langcode,oddline,TCSr.SerNr,status,0);
        if (oddline) then begin
          oddline = false;
        end else begin
          oddline = true;
        end;
      end;
    end;
  end;
  if (firstline==false) then begin
    WebISShopAmendSubscriptionsFooter(langcode);
  end;
  
  WebISShopAmendListTariffs = (firstline==false);
  return;
end;

procedure WebISShopAmendServiceNoDetail(string langcode)
begin
  WebOutString("<table width=""100%"">");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"" class=""heading3"">" & ToolWebReturnTheText(20356) & "</th>"); //No service packages available online
  WebOutString("</tr>");
  WebOutString("<tr>");
  WebOutString("<td width=""100%"">" & ToolWebReturnTheText(20312) & "</th>"); // for details contact hw office
  WebOutString("</tr>");
  WebOutString("</table>");
  return;
end;

//---END:subscriptions

global
updating procedure WebISShopRemoveCustomerService(longint svcsernr,string langcode)
begin
  record TXCUServiceVc TCSr,TCS2r,oldTCSr;
  record RLinkVc RLr;
  
  TCSr.SerNr = svcsernr;
  if (ReadFirstMain(TCSr,1,true)) then begin
    if (TCSr.StartDate>CurrentDate) then begin
      if (ReadRecordLink(TCSr,1,TCS2r,RLr)) begin
        if (TCS2r.EndDate>=CurrentDate and TCS2r.Closed!=1) then begin
          RecordCopy(oldTCSr,TCS2r);
          TCS2r.EndDate = "";
          if (RecordUpdate(oldTCSr,TCS2r,false)) then begin end;
        end;
      end;
    end;
    RecordDelete(TCSr);
  end;
  
  return;
end;

global 
procedure WebISShopServiceTariffView(string langcode)
begin
  boolean res;
  LongInt svcsernr;
  record TXCUServiceVc TCSr;
  
  if (WebLoginStatus==3) then begin
    svcsernr = StringToLongint(WebGetArg("svcsernr"));

    res = WebHBSDivPublicMain("IS_VIEWTARIFF_PRE",langcode,-1,-1,false,false);

    if (svcsernr!=-1) then begin
      res = false;
        LogText(0,"sss:" & svcsernr);
      TCSr.SerNr = svcsernr;
      if (ReadFirstMain(TCSr,1,true)) then begin
        res = WebISShopAmendListTariffs(TCSr,langcode);
      end;
      
      if (res==false) then begin
        WebISShopAmendServiceNoDetail(langcode);
      end;
        
    end;
    res = WebHBSDivPublicMain("IS_VIEWTARIFF_POST",langcode,-1,-1,false,false);
  end else begin
    WebISShopNotLoggedIn(langcode);
  end;
  
LWebISShopServiceTariffView:;
  return;
end;

global
updating procedure WebISShopServiceAmendRemove(string langcode)
begin
  longint svcsernr;

  if (WebLoginStatus==3) then begin
    svcsernr = StringToLongint(WebGetArg("svcsernr"));
    WebISShopRemoveCustomerService(svcsernr,langcode);
    WebISShopMyServices(langcode);
  end;
  return;
end;

global 
procedure WebISShopServiceAmend(string langcode,longint ovrsernr)
begin
  string 20 service;
  string 20 custcode;
  string 20 strcountry;
  string 50 confcode;
  integer country;
  longint version;
  boolean avail;
  boolean res;
  LongInt svcsernr,asyncsernr;
  record TXCUServiceVc TCSr;
  
  if (WebLoginStatus==3) then begin
    svcsernr = StringToLongint(WebGetArg("svcsernr"));
    if (ovrsernr!=-1) then begin
      svcsernr = ovrsernr;
    end;
    custcode = CurrentCust;
    if (WebGetArg("action")=="remove") then begin
      //queued.WebISShopRemoveCustomerService(svcsernr,langcode);
      WebOutString("NOt supported");//"Successfully removed");
      goto LWebISShopServiceAmend;
    end;

    GetCustData(custcode,country,version);

    res = WebHBSDivPublicMain("IS_AMENDSERVICE_PRE",langcode,-1,-1,false,false);
    //changing a service means ending your current subscription and buying a new subscription.
    //your currernt subscription will continue until the end of the billing period (if you are billed monthly, then the end of the month)
    //after which the newly bought service will then come into effect.  You will not need to pay anything for changing the service, but you will be
    //automatically billed the new subscription price when your new subscription starts.
    //To terminate a subscription immediately, you may choose to cancel it, but in this case you will foreight all remaining credits and will remain
    //liable for current unpaid invoices.
    
    if (svcsernr!=-1) then begin
      TCSr.SerNr = svcsernr;
      res = false;
      if (ReadFirstMain(TCSr,1,true)) then begin
        //Current Subscription Details
        WebISShopAmendCurrentSubscription(TCSr,langcode);

        WebOutString("<p>&nbsp;<p>");
        //Shows tariff packages (ISPackageVc)
        //With Select Tariff buttons
        //-it will set current service (if avail) end date to end of month
        //-it will create new service with start date set to 1 day after end of month - no end date 
        res = WebISShopAmendListTariffs(TCSr,langcode);
      end;
      
      if (res==false) then begin
        WebISShopAmendServiceNoDetail(langcode);
      end;
        
    end;
    res = WebHBSDivPublicMain("IS_AMENDSERVICE_POST",langcode,-1,-1,false,false);
  end else begin
    WebISShopNotLoggedIn(langcode);
  end;
  
LWebISShopServiceAmend:;
  return;
end;
