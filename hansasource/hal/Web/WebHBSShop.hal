external function string 200 GetWebLanguage();
external function string 255 FindINObjects(string,string);
//external procedure WebHBSPreIndex();
//external procedure WebHBSAfterIndex();
external function string 200 ToolWebReturnTheText(Integer);

external procedure COSumup(var record COVc);
external function Boolean PasteCust2InCO(var record COVc,Boolean,var string);
external updating function Integer RecordAction_raPasteOrdInInv(var record IVVc,LongInt,Boolean,var Integer);
external updating function Integer RecordAction_raPasteOrdInShip(var record SHVc,LongInt,var string);
external procedure COVcGetCalcItemPrice(record COVc,Integer,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);

external function ToolWebHBSDisplayItemLinePict(string,string,string,string,string,integer);

external procedure ToolWebHBSStartBody(string,string);
external procedure ToolWebStartTable();
external procedure ToolWebEndTable();
//external procedure WebHBSIndex();
external procedure ToolWebHBSShopLine(string,string,string,string,Boolean);
external function val GetStockQty(string,string,Date,Boolean);
external procedure ToolWebPushButton(string,string,string);
external procedure ToolWebHBSEditFieldBrowse(string,string,string,string,Integer,Integer,Integer);
external function Boolean BuildWebOrd(string,LongInt,var record ORVc,var Boolean,string);
external updating procedure ToolWebStoreTheItem();
external procedure ToolWebHBSInfoCell(string,string,string);
external updating function LongInt ToolWebStoreTheOrder(string);
external function Boolean GetNextCustNr(var string);
external procedure ToolWebSetCustInfo(var record CUVc);
external function Boolean ToolWebItemHasPict(var record WebHTMLVc,string,string);
external procedure ToolWebDisplayHTMLExtra(record WebHTMLVc,string,string);
external procedure ToolWebHBSMenuItemList(string,string,string,string,var Integer);
external function Boolean ToolWebGetCustAndSettings(var record CUVc,var Boolean,var Boolean);
external function val QtyInBasket(String,Integer);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external procedure ToolWebHBSThirdPart();
external procedure ToolWebHBSSetMainTitle();
external procedure ToolWebStartPage();
external procedure ToolWebEndPage(Boolean);
external Function Boolean ToolWebHBSPublicMain(string,LongInt,LongInt,Boolean,Boolean);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHBSListTable(Integer,Integer,string);
external procedure ToolWebHBSListTableEnd();
external procedure ToolWebHBSTableHdr(string,string,string);
external procedure ToolWebHBSTableData(string,string,string,string,string,string,Integer);
external procedure WebLeftShopMenu();

procedure WebHBSGetDispGroup(string curcustno,var string dgroup)
begin
  record CUVc CUr;
  record CCatVc CCatr;
  record WebControlBlock WCr;
  
  CUr.Code = curcustno;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (nonblank(CUr.MainDispGroup)) then begin
      dgroup = CUr.MainDispGroup;
    end else begin
      CCatr.Code = CUr.CustCat;
      if (ReadFirstMain(CCatr,1,true)) then begin
        dgroup = CCatr.MainDispGroup;
      end;
    end;
  end;
  if (blank(dgroup)) then begin
    BlockLoad(WCr);
    dgroup = WCr.DispGroup;
  end;
  if (blank(dgroup)) then begin
    dgroup = "WSHOP";
  end;
  return;
end;

global
procedure WebHBSNotLoggedinMess()
begin
  Boolean res;

  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain("WWWNOTLOGGEDIN",-1,-1,false,false);
  ToolWebEndPage(false);
  return;
end;

global
function Boolean LoggedInHBSTest()
begin
  Boolean res;
  
  if (WebLoginStatus==3) then begin
    res = true;
  end else begin
    res = false;
    WebHBSNotLoggedinMess;
  end;
  LoggedInHBSTest = res;
  return;
end;

global
procedure WebHBSShopWelcome()
begin
  Boolean res;

  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain("WELCOMESHOP",-1,-1,false,false);
  ToolWebEndPage(false);
  return;
end;

procedure AddCountryLink(string thetext,Integer company)
begin
  WebOutString("<p class=mnu-lvl-2>");
  WebOutString("<a href=""");
  WebOutLink("WebHBSShopIndex.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & company & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""" target=""_parent"">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSShopChoose()
begin
  Boolean res;

  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain("WSCOUNTRYINDEX",-1,-1,false,false);

  AddCountryLink("Denmark",19);
  AddCountryLink("Estonia",25);
  AddCountryLink("Estonia HansaRaama",74);
  AddCountryLink("Finland",40);
  AddCountryLink("Latvia",26);
  AddCountryLink("Lithuania",28);
  AddCountryLink("Norway",24);
  AddCountryLink("Poland",36);
  AddCountryLink("Russia",29);
  AddCountryLink("South Africa",37);
  AddCountryLink("Sweden",39);
  AddCountryLink("United Kingdom",63);
  ToolWebEndPage(false);
  return;
end;

procedure WebHBSPrintRegister()
begin
  WebOutString("<form method=""post"" action=""");
  WebOutLink("WebHBSStoreCust.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebHBSShopLine(ToolWebReturnTheText(20059) & " (*)","companyname","text",WebGetArg("companyname"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20058) & " (*)","personname","text",WebGetArg("personname"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20069) & " (*)","address1","text",WebGetArg("address1"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20070),"address2","text",WebGetArg("address2"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20071),"address3","text",WebGetArg("address3"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20072),"address4","text",WebGetArg("address4"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20073),"address5","text",WebGetArg("address5"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20082) & " (*)","orgnr","text",WebGetArg("orgnr"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20062) & " (*)","phone","text",WebGetArg("phone"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20060),"email","text",WebGetArg("email"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20063),"fax","text",WebGetArg("fax"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20083) & " (*)","passwd","password",WebGetArg("passwd"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20084),"message","text",WebGetArg("message"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20066),"","text","",false);
  ToolWebHiddenField("backpage",WebGetArg("backpage"));
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  WebOutString("<input type=""submit"" name=""Submit"" value=""" & ToolWebReturnTheText(20067) & """>");
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & ToolWebReturnTheText(20068) & """>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  return;
end;

global
updating procedure WebHBSStoreCust()
begin
  record CUVc CUr;
  record CUVc tempCUr;
  Boolean storef;
  string 255 passw;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  
  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  
  storef = true;
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
//  res = ToolWebHBSPublicMain("WWWREGISTER",-1,-1,false,false);
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  RecordNew(CUr);
  CUr.Name = WebGetArg("companyname");
  if (nonblank(CUr.Name)) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegister;
      storef = false;
    end;
  end;
  CUr.VATNr = WebGetArg("orgnr");
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegister;
      storef = false;
    end;
  end;
  if (storef) then begin
    CUr.CUType = 1;
    CUr.Name = WebGetArg("companyname");
    CUr.Person = WebGetArg("personname");
    CUr.InvAddr0 = WebGetArg("address1");
    CUr.InvAddr1 = WebGetArg("address2");
    CUr.InvAddr2 = WebGetArg("address3");
    CUr.InvAddr3 = WebGetArg("address4");
    CUr.InvAddr4 = WebGetArg("address5");
    CUr.VATNr = WebGetArg("orgnr");
    CUr.eMail = WebGetArg("email");
    CUr.Phone = WebGetArg("phone");
    CUr.Fax = WebGetArg("fax");
    CUr.AllowLogin = 1;
    CUr.CustCat = "WWW";
    CUr.Comment = WebGetArg("message");
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    RecordCopy(tempCUr,CUr);
    if (ReadFirstMain(tempCUr,1,true)) then begin
      storef = false;
    end;
    passw = WebGetArg("passwd");
    if (blank(CUr.Code)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20086),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegister;
      storef = false;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone)) or
        (blank(passw))) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20087),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      WebHBSPrintRegister;
      storef = false;
    end;
  end;
  if (storef) then begin
    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    ToolWebHBSInfoCell(ToolWebReturnTheText(20088) & " " & CUr.Code,"100%","false");
  end else begin
    WebOutString("</td>");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  if (storef) then begin
    res = ToolWebHBSPublicMain("WWWREGISTERDONE",-1,-1,false,false);
  end;
  ToolWebEndPage(false);
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure WebHBSRegister()
begin
  Boolean res;
  
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain("WWWSHOPREGISTER",-1,-1,false,false);
  WebHBSPrintRegister;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSItemHeader(Boolean total)
begin
  ToolWebHBSListTable(7,0,"0");
  ToolWebLineStart;
if (false) then begin
  ToolWebHBSTableHdr(ToolWebReturnTheText(20089),"left","15%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20090),"center","8%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20091),"left","8%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20092),"left","45%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20093),"right","9%");
//  ToolWebHBSTableHdr(ToolWebReturnTheText(20094),"right","3%");
  if (total) then begin
    ToolWebHBSTableHdr(ToolWebReturnTheText(20095),"right","11%");
  end else begin
    ToolWebHBSTableHdr("","right","11%");
  end;
end else begin
  ToolWebHBSTableHdr(ToolWebReturnTheText(20092),"left","50%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20090),"center","12%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20091),"left","12%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20093),"right","11%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20095),"right","15%");
end;
  ToolWebLineEnd;
  return;
end;

global
procedure WebHBSItemView()
begin
  record INVc INr;
  record CUVc CUr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,qtystr,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,ordqty,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Integer rwt;
  Integer oldcomp,newcomp;
  Boolean res;
  Time blankt;

  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res = SetCompany(newcomp,false);
  end;
  rwt = 0;
  showstocklevel = false;
  showprices = true;
  curitemno = WebGetArg("itemcode");
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  qty = 1;
  if (GetItemPriceDiscount3(curitemno,qty,INr,CUr.CurncyCode,0,0,0,0,0,
                  CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                  price,curitemname,reb,vatcode,cost,salesacc,
                  CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
      INr.Name = "";
  end;
  if (showprices==false) then begin
    price = BlankVal;
  end;
  instock = GetStockQty(INr.Code,"",CurrentDate,false);
  qty = QtyInBasket(curitemno,0);
  qtystr = ValToString(qty,M4UVal," ",".",0);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  if (WebLoginStatus==3) then begin
    ToolWebHBSStartBody("ord_qty","");
  end else begin
    ToolWebHBSStartBody("","");
  end;
  WebOutString("<table width=""100%"">");
  WebOutString("<tr><td>");
  if (ToolWebItemHasPict(WHr,curitemno,"BP")==true) then begin
    ToolWebDisplayHTMLExtra(WHr,"","");
  end else begin
    ToolWebDisplayHTMLExtra(WHr,"","");
  end;
  WebOutNL;
  WebOutString("</td></tr>");
  WebOutString("<tr><td>");
  WebOutNL;
  if (WebLoginStatus==3) then begin
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutLink("WebHBSStoreItem.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&backnr=" & WebGetArg("backnr") & "&sernr=" & WebGetArg("sernr") & "&itemcode=" & curitemno & "&itcode=" & WebGetArg("itcode"));
    WebOutString(""">");
  end;
  if (showstocklevel) then begin
    ToolWebHBSListTable(7,0,"0");
    ToolWebLineStart;
    ToolWebHBSTableHdr(ToolWebReturnTheText(20096),"left","12%");
    ToolWebHBSTableHdr(ToolWebReturnTheText(20097),"center","10%");
    ToolWebHBSTableHdr(ToolWebReturnTheText(20098),"left","33%");
  end else begin
    ToolWebHBSListTable(6,0,"0");
    ToolWebLineStart;
    ToolWebHBSTableHdr(ToolWebReturnTheText(20096),"left","15%");
    ToolWebHBSTableHdr(ToolWebReturnTheText(20098),"left","38%");
  end;
  ToolWebHBSTableHdr(ToolWebReturnTheText(20099),"right","15%");
  ToolWebHBSTableHdr("","right","2%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20100),"left","13%");
  ToolWebHBSTableHdr(ToolWebReturnTheText(20091),"left","17%");
  ToolWebLineEnd;

  WebOutString("<tr height=32>");
  ToolWebHiddenField("backpage",WebGetArg("backpage"));
  if (showstocklevel) then begin
    ToolWebHBSTableData(curitemno,"","","left","12%","",rwt);
    ToolWebHBSTableData(instock,"","","center","10%","",rwt);
    ToolWebHBSTableData(curitemname,"","","left","33%","",rwt);
  end else begin
    ToolWebHBSTableData(curitemno,"","","left","15%","",rwt);
    ToolWebHBSTableData(curitemname,"","","left","38%","",rwt);
  end;
  ToolWebHBSTableData(price,"","","right","15%","",rwt);
  ToolWebHBSTableData("","","","right","2%","",rwt);
  ToolWebHBSEditFieldBrowse("ord_qty","text",qtystr,"7%",5,7,rwt);
  ToolWebHBSTableData(INr.Unittext,"","","left","8%","",rwt);
  qtystr = ValToString(qty,M4UVal,"","",rwt);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  WebOutString("<td bordercolor=white width=""15%"" align=""left"" bgcolor=""white"">");

  if (WebLoginStatus==3) then begin
    if (nonblank(CurrentCust)) then begin
      ToolWebPushButton(ToolWebReturnTheText(20101),"submit","b1");
    end else begin
//      WebLink("Select a Customer","WebMainUser.hal","",""); // If our own users should be allowed to login...
      ToolWebHBSTableData(ToolWebReturnTheText(20049),"WebHBSLogin.hal","company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode"),"left","8%","",rwt);
    end;
  end else begin
    ToolWebHBSTableData(ToolWebReturnTheText(20049),"WebHBSLogin.hal","company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode"),"left","8%","",rwt);
  end;

  WebOutString("</td>");
  ToolWebLineEnd;
  if (WebLoginStatus==3) then begin
    WebOutString("</form>");
  end;
  WebOutString("</table>");
  WebOutString("</td></tr>");
  ToolWebHBSListTableEnd;
  ToolWebEndPage(false);
  if (res) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure HBSDisplayItemLine(string curitemno,string linkargs,val qty,string unittext,string spec,val reb,val price,string curcode,val totsum,Boolean printtot,Integer rwt)
begin
  record BaseCurBlock BCr;
  string 60 tstr;
  
  ToolWebLineStart;
if (false) then begin
  ToolWebHBSTableData(curitemno,"WebHBSItemView.hal",linkargs,"left","","",rwt)
  if (qty<>0) then begin
    tstr = ValToString(qty,M4UVal,"","",0);
  end else begin
    tstr = "";
  end;
  ToolWebHBSTableData(tstr,"","","center","","",rwt);
  ToolWebHBSTableData(unittext,"","","left","","",rwt);
  ToolWebHBSTableData(spec,"","","left","","",rwt);
  ToolWebHBSTableData(price,"","","right","","",rwt);
/*
  if (printtot==false) then begin
    tstr = curcode;
     if (blank(tstr)) then begin
       BlockLoad(BCr);
       tstr = BCr.BaseCur1;
     end;
    ToolWebHBSTableData(tstr,"","","right","","",rwt);
  end;
  if (reb<>0) then begin
    tstr = ValToString(reb,M4UVal," ",".",0);
  end else begin
    tstr = "";
  end;
  ToolWebHBSTableData(tstr,"","","right","","",rwt);
*/
  if (printtot) then begin
    ToolWebHBSTableData(totsum,"","","right","","",rwt);
  end;
end else begin
  ToolWebHBSTableData(spec,"WebHBSItemView.hal",linkargs,"left","","",rwt)
  if (qty<>0) then begin
    tstr = ValToString(qty,M4UVal,"","",0);
  end else begin
    tstr = "";
  end;
  ToolWebHBSTableData(tstr,"","","center","","",rwt);
  ToolWebHBSTableData(unittext,"","","left","","",rwt);
  ToolWebHBSTableData(price,"","","right","","",rwt);
  ToolWebHBSTableData(totsum,"","","right","","",rwt);
end;
  ToolWebLineEnd;
  return;
end;

global
procedure WebHBSDispGroups(string itcode,LongInt msernr,Integer maxlines)
begin
  row INVc INrw;
  Integer rwcnt,i;
  Boolean testf;
  String 60 pstr;
  record DIVc DIr;
  record CUVc CUr;
  record INVc INr;
  record INVc IN2r;
  string 60 ckey;
  string 100 spec,tempstr;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt;
  string 255 linkargs;
  string 10 dgroup;
  Integer pos,dicnt;
  string 5 nsep;
  Boolean tmpf;
  Boolean overmax;
  Boolean headerf;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Boolean hasextralines;
  Time blankt;

  loopcnt = 1;
  rwt = 1;
  overmax = false;
  headerf = false;
  pos = 0;
  dicnt = 0;
  CUr.Code = CurrentCust;
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  ckey = "DICode:" & itcode;
  found = true;
  DIr.Code = "";
  ResetLoop(DIr);
  while (LoopKey(ckey,DIr,1,found)) begin
    if (DIr.Code==itcode) then begin found = false; end;
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        spec = DIr.Name;
        linkargs = "company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&itcode=" & DIr.Code;
        ToolWebHBSMenuItemList(spec,"WebHBSCustProd.hal",linkargs,"",rwt);
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  if (msernr>dicnt) then begin
    looppos = msernr-dicnt;
  end;
  ToolWebHBSListTable(2,480,"0");
  pos = 0;
  found = true;
  ckey = "DICode:" & itcode;
  INr.Code = "";
  while (LoopKey(ckey,INr,1,found)) begin
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        curitemno = INr.Code;
        qty = QtyInBasket(curitemno,0);
        if (GetItemPriceDiscount3(curitemno,qty,IN2r,CUr.CurncyCode,0,0,0,0,0,
                CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
          IN2r.Name = "";
        end;
        if (showprices==false) then begin
          price = BlankVal;
        end;
        spec = IN2r.Name;
        linkargs = "company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&itcode=" & itcode & "&itemcode=" & curitemno;
        if (false) then begin
          rwcnt = MatRowCnt(INr);
          testf = false;
          pstr="";
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(IN2r,i,INrw);
            if (INrw.LangCode=="PICT") then begin
              testf = true;
              pstr = INrw.Text;
              i = rwcnt;
            end;
          end;
          ToolWebHBSDisplayItemLinePict("WebHBSItemView.hal",linkargs,IN2r.Group,spec,pstr,rwt);        
        end else begin
          ToolWebHBSMenuItemList(spec,"WebHBSItemView.hal",linkargs,"",rwt);
          hasextralines = true;
          rwcnt = MatRowCnt(INr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(IN2r,i,INrw);
            if (blank(INrw.LangCode)) then begin
              WebOutString("<TR><TD width=""100%"" align=""left"" class=""deftxt"">");
              WebOutString("&nbsp;&nbsp;" & INrw.Text);
              WebOutString("</TD></TR>");
              hasextralines = true;
            end;
          end;
          if (hasextralines) then begin
            WebOutString("<TR><TD width=""100%"" align=""left"" class=""deftxt"">");
            WebOutString("&nbsp;");
            WebOutString("</TD></TR>");
          end;
          loopcnt = loopcnt + 1;
        end;
        rwt = rwt + 1;
        if (rwt>2) then begin rwt = 1; end;
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  ToolWebHBSListTableEnd;  
  return;
end;

global
procedure WebHBSCustProd()
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  record CYBlock CYr;
  record WebHTMLVc WHr;
  record WebControlBlock WCr;
  record DIVc DIr;
  string 20 itcode;
  string 60 ckey;
  LongInt prevval,nextval,maxval;
  Boolean prevf,nextf,mainf;
  LongInt msernr,pages;
  Integer showmax;
  Integer oldcomp,newcomp;
  Boolean res,res1;

  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;
  BlockLoad(CYr);
  BlockLoad(WCr);
  
  msernr = WebGetArg("sernr");
  if (msernr==-1) then begin msernr = 0; end;
  itcode = WebGetArg("itcode");
  if (blank(itcode)) then begin
    mainf = true;
    WebHBSGetDispGroup(CurrentCust,itcode);
  end;
  showmax = 50;
/*
  showmax = 10;
  if (WCr.MatLines>0) then begin
    showmax = WCr.MatLines;
  end;
  ckey = "DICode:" & itcode;
  maxval = RecordsInIndex("DIVc",ckey);
  maxval = maxval + RecordsInIndex("INVc",ckey);
  
  prevf = true;
  nextf = true;
  prevval = msernr-showmax;
  if (prevval<0) then begin 
    prevval = 0;
    prevf = false;
  end;
  nextval = msernr+showmax;
  if (nextval>maxval) then begin
    nextval = msernr;
    nextf = false;
  end;
  pages=maxval/showmax;
  if ((pages*showmax)!=maxval) then begin
    pages=pages+1;
  end; 
  */
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  WebOutString("<table border=0 width=""100%""><tr><td width=180 valign=top>");
  WebOutString("<table border=0 cellspacing=0 cellpadding=1>");

  WebHBSGetDispGroup("",itcode);

  WebHBSDispGroups(itcode,msernr,showmax);
  WebOutString("</table>");
  WebOutString("</td>");
  WebOutString("<td valign=top>");
  if (ToolWebItemHasPict(WHr,itcode,"BDG")==true) then begin
    ToolWebDisplayHTMLExtra(WHr,"","");
  end else begin
    ToolWebDisplayHTMLExtra(WHr,"","");
  end;
  ToolWebHBSThirdPart;
  ToolWebEndPage(false);
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;  
end;

updating procedure UpdateHBSContract(LongInt orderno)
begin
  record IVVc IVr;
  record INVc INr;
  record COVc COr;
  record COVc CO2r;
  record COVc oldCOr;
  record ORVc ORr;
  record CUVc CUr;
  record SHVc SHr;
  record SHVc oldSHr;
  row ORVc ORrw;
  row COVc COrw;
  Integer rwcnt,i,corwcnt,j,postoplace,errcode;
  Boolean foundf,testf,cofound;
  record GeneralOptionBlock GenOptr;
  string 255 curitemname,salesacc,vatcode,tax2code,taxtemplatecode;
  string 255 warning;
  val t,price,vreb,baseprice,tax2prc;
  Boolean calcpricef;
  Boolean dummyf;
  Boolean onlycontitems;
  Time blankt;
  
  cofound = false;
  ORr.SerNr = orderno;
  if (ReadFirstMain(ORr,1,true)) then begin
    BlockLoad(GenOptr);
    foundf = true;
    CUr.Code = ORr.CustCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      if (CUr.CustCat=="WWW") then begin
        foundf = false;
      end;
    end;
    COr.CustCode = ORr.CustCode;
    while (LoopKey("CustCode",COr,1,foundf)) begin
      if (COr.CustCode!=ORr.CustCode) then begin
        foundf = false;
      end;
      testf = foundf;
      if (testf) then begin
        if ((blankdate(COr.endDate)) or (COr.endDate>CurrentDate)) then begin
          if ((COr.OKFlag!=0) and (COr.Accepted!=0)) then begin
            if (cofound) then begin
              /// What to do if another valid contract is found?
            end;
            RecordCopy(CO2r,COr);
            cofound = true;
          end;
        end;
      end;
    end;
  end;
  if (cofound==false) then begin
    RecordNew(CO2r);
    CO2r.CustCode = ORr.CustCode;
    if (PasteCust2InCO(CO2r,true,warning)) then begin
      CO2r.startDate = CurrentDate;
      CO2r.endDate = AddDay(CurrentDate,30);
      if (RecordStore(CO2r,false)) then begin end;
      cofound = true;
    end;
  end;
  if (cofound) then begin
    onlycontitems = true;
    RecordCopy(oldCOr,CO2r);
    rwcnt = MatRowCnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(ORr,i,ORrw);
      INr.Code = ORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
        if (nonblank(INr.RentalItem)) then begin
          corwcnt = MatRowCnt(CO2r);
          postoplace = corwcnt;
          foundf = false;
          for (j=0;j<corwcnt;j=j+1) begin
            MatRowGet(CO2r,j,COrw);
            if (COrw.ArtCode==INr.RentalItem) then begin
              foundf = true;
              COrw.Quant = COrw.Quant + ORrw.Quant;
              postoplace = j;
              j = corwcnt;
            end;
          end;
          if (foundf==false) then begin
            ClearRow(CO2r,COrw,1);
            COrw.stp = 1;
            COrw.ArtCode = INr.RentalItem;
            COrw.OrgArtCode = ORrw.ArtCode;
            COrw.OrgSerNr = ORrw.SerialNr;
            COrw.Quant = ORrw.Quant;
            COrw.Type = "";
            if (GetItemPriceDiscount3(COrw.ArtCode,COrw.Quant,INr,CO2r.CurncyCode,
                                  CO2r.FrRate,CO2r.ToRateB1,CO2r.ToRateB2,CO2r.BaseRate1,CO2r.BaseRate2,
                                  CO2r.LangCode,CO2r.CustCat,CO2r.PriceList,CO2r.RebCode,
                                  price,curitemname,vreb,vatcode,baseprice,salesacc,
                                  CO2r.ExportFlag,calcpricef,CO2r.CODate,blankt,CO2r.CustCode,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)) then begin
              COrw.Price = price;
              COrw.Spec = curitemname;
              COrw.vRebate = vreb;
              COrw.VATCode = vatcode;
              COrw.BasePrice = baseprice;
              COrw.SalesAcc = salesacc;
              COrw.ArtCode = INr.Code;
              if (nonblank(CO2r.CustVATCode)) then begin COrw.VATCode = CO2r.CustVATCode; end;
              COrw.Contact = "";
              COrw.Objects = FindINObjects(INr.Objects,INr.Group);
              COrw.PriceFactor = INr.PriceFactor;
              foundf = true;
            end;
          end;
          if (foundf) then begin
            CalcSum(COrw.Quant,COrw.Price,COrw.PriceFactor,COrw.vRebate,t,GenOptr.UseDiscount);
            COrw.Sum = t;
            MatRowPut(CO2r,postoplace,COrw);
            if (calcpricef) then begin
              COVcGetCalcItemPrice(CO2r,postoplace,t);
            end;
          end;
        end else begin
          onlycontitems = false;
        end;
      end else begin
        onlycontitems = false;
      end;
    end;
    if (onlycontitems) then begin
      COSumup(CO2r);
      if (RecordUpdate(oldCOr,CO2r,true)==0) then begin
        RecordNew(SHr);
        if (RecordAction_raPasteOrdInShip(SHr,orderno,warning)==0) then begin
          if (SHr.OKFlag==0) then begin
            RecordCopy(oldSHr,SHr);
            SHr.OKFlag = 1;
            if (RecordUpdate(oldSHr,SHr,true)==0) then begin
              RecordNew(IVr);
              if (RecordAction_raPasteOrdInInv(IVr,orderno,true,errcode)==0) then begin
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
updating procedure WebHBSShopBasketStep2()
begin
  record WebHTMLVc WHr;
  LongInt orderno;
  Boolean res;

  if (LoggedInHBSTest()) then begin
  orderno = ToolWebStoreTheOrder(GetWebLanguage);
  UpdateHBSContract(orderno);
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain("WWWORDERDONE",-1,-1,false,false);
  WebOutString("<table width=""100%"">");
  ToolWebLineStart;
  ToolWebHBSInfoCell(ToolWebReturnTheText(20103) & " " & orderno,"100%","left");
  ToolWebLineEnd;
  WebOutString("</table>");
  ToolWebHBSThirdPart;
  ToolWebEndPage(false);
  end;
end;

global
procedure ToolWebHBSShopBasket()
begin
  record ORVc ORr;
  record CUVc CUr;
  Boolean res;
  Boolean proceedf;
  row ORVc ORrw;
  record INVc INr;
  Integer rwt;
  Integer rwcnt,i;
  string 255 linkargs;
  Boolean freightf;

  proceedf = false;
  if (LoggedInHBSTest()) then begin
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    CUr.Name = "";
  end;
  res = BuildWebOrd(CurrentCust,-1,ORr,freightf,GetWebLanguage);
  rwcnt = MatRowCnt(ORr);
  if (rwcnt>0) then begin proceedf = true; end;
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain("WWWPRESHOPBASK",-1,-1,false,false);
  WebOutString("<table border=0 width=""100%"" align=left>");
  ToolWebLineStart;
  if (proceedf==true) then begin
    WebOutString("<td>");
    WebHBSItemHeader(true);
    rwcnt = MatRowCnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(ORr,i,ORrw);
      INr.Code = ORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)==false) then begin
        INr.Unittext = "";
      end;
      linkargs = "company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&itcode=" & WebGetArg("itcode") & "&itemcode=" & ORrw.ArtCode;
      HBSDisplayItemLine(ORrw.ArtCode,linkargs,ORrw.Quant,INr.Unittext,ORrw.Spec,ORrw.vRebate,ORrw.Price,ORr.CurncyCode,ORrw.Sum,true,rwt);
      rwt = rwt + 1;
      if (rwt>1) then begin rwt = 0; end;
    end;
    ToolWebHBSListTableEnd;
    WebOutString("</td>");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
    ToolWebHBSListTable(3,0,"0");
    ToolWebLineStart;
    ToolWebHBSInfoCell(ToolWebReturnTheText(20104),"80%","right");
    ToolWebHBSInfoCell(ORr.Sum1,"20%","right");
    ToolWebLineEnd;
    ToolWebLineStart;
    ToolWebHBSInfoCell(ToolWebReturnTheText(20105),"80%","right");
    ToolWebHBSInfoCell(ORr.Sum3,"20%","right");
    ToolWebLineEnd;
    ToolWebLineStart;
    ToolWebHBSInfoCell(ToolWebReturnTheText(20106),"80%","right");
    ToolWebHBSInfoCell(ORr.Sum4,"20%","right");
    ToolWebLineEnd;
    if (nonblank(ORr.CurncyCode)) then begin
      ToolWebLineStart;
      ToolWebHBSInfoCell(ToolWebReturnTheText(20108),"80%","right");
      ToolWebHBSInfoCell(ORr.CurncyCode,"20%","right");
      ToolWebLineEnd;
    end;
    ToolWebHBSListTableEnd;
    WebOutString("</td>");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
    ToolWebHBSListTable(3,0,"0");
    WebOutString("<form name=""HansaForm"" method=""POST"" action=""");
    WebOutLink("WebHBSShopBasketStep2.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&itemcode=" & WebGetArg("itemcode"));
    WebOutString(""">");
    ToolWebLineStart;
    WebOutString("<td align=""right"" bgcolor=""#FFFFFF"" valign=""top""><input type=""submit"" value=""" & ToolWebReturnTheText(20119) & """ name=""b1""></td>");
    ToolWebLineEnd;
    WebOutString("</form>");
    ToolWebHBSListTableEnd;
    WebOutString("</td>");
  end else begin
    ToolWebHBSInfoCell(ToolWebReturnTheText(20107),"100%","false");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  if (proceedf==true) then begin
    res = ToolWebHBSPublicMain("WWWAFTERSHOPBASK",-1,-1,false,false);
  end;
  ToolWebHBSThirdPart;
  ToolWebEndPage(false);
  end;
  return;  
end;

global
procedure WebHBSLogin()
begin
  Integer oldcomp,newcomp;
  Boolean res,res1;
  string 200 tstr;
  
  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  
  if (WebLoginStatus==3) then begin
    res = ToolWebHBSPublicMain("WWWLOGGEDIN",-1,-1,false,false);
    WebHBSCustProd;
  end else begin
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    res = ToolWebHBSPublicMain("WWWSHOPLOGIN",-1,-1,false,false);
    WebOutString("<form name=""HansaForm"" action=""dologin?company=" & WebGetArg("company") & "&failed=WebHBSShopIndexFail.hal"" METHOD=""POST"" target=""_parent"">");
    ToolWebStartTable;
    if (nonblank(WebGetArg("failed_log_in"))) then begin
      ToolWebLineStart;
      ToolWebHBSInfoCell("","28%","left");
      ToolWebHBSInfoCell(ToolWebReturnTheText(20081),"72%","left");
      ToolWebLineEnd;
    end;
    ToolWebHBSShopLine(ToolWebReturnTheText(20051),"login","text","",false);
    ToolWebHBSShopLine(ToolWebReturnTheText(20052),"passwd","password","",false);
    ToolWebHiddenField("custpage","WebHBSShopIndex.hal?langcode=" & WebGetArg("langcode")); // WebHBSIndex.hal
    ToolWebHiddenField("userpage","WebMainUser.hal"); // WebHBSIndex.hal
    ToolWebEndTable;
    ToolWebPushButton(ToolWebReturnTheText(20049),"submit","name");
    WebOutString("</form>");
    WebOutString("<p class=mnu-lvl-2>");
    WebOutString("<a href=""");
    WebOutLink("WebHBSRegister.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode"));
    WebOutString(""" target=""content"">");
    tstr = ToolWebReturnTheText(20109);
    if (blank(tstr)) then begin
      WebOutString(ToolWebReturnTheText(20109));
    end else begin
      WebOutString(tstr);
    end;
    WebOutString("</a>");
    WebOutString("</p>");
    ToolWebEndPage(false);
  end;
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
updating procedure WebHBSStoreItem()
begin
  if (LoggedInHBSTest()) then begin
    ToolWebStoreTheItem;
    if (nonblank(WebGetArg("itcode"))) then begin
      WebHBSCustProd;
    end else begin
      ToolWebHBSShopBasket;
    end;
  end;
  return;
end;

global
updating procedure WebHBSDoLogout()
begin
  WebLogout;
  WebHBSLogin;
  return;
end;

