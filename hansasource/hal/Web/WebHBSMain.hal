external procedure ToolWebSetCustInfo(var record CUVc);
external function Boolean GetNextCustNr(var string);
external procedure ToolWebHBSShopLine(string,string,string,string,Boolean);
external procedure ToolWebPushButton(string,string,string);
external procedure ToolWebHiddenField(string,string);
external procedure ToolWebHBSInfoCell(string,string,string);
external function Boolean LoggedInTest();
external procedure ToolWebHBSSimpleLink(string,string);
external function string 200 ToolWebReturnTheText(Integer);
external procedure ToolWebLineStart();
external procedure ToolWebLineEnd();
external procedure ToolWebHBSStartShopBody(string,string);
external procedure ToolWebHBSSetMainTitle();
external procedure ToolWebHBSSetMainWithTimeout(string,string);
external procedure ToolWebStartPage();
external procedure ToolWebHBSStartBody(string,string);
external procedure ToolWebEndPage(Boolean);
external procedure ToolWebStartTable();
external procedure ToolWebEndTable();
external procedure ToolWebHBSContactLine(string,string,string,Boolean);
external updating procedure ToolWebAddCounter(string);
external procedure ToolWebAddLeftMenubar(string,string,string);
external procedure ToolWebAddTopMenubar(string,string);
external procedure ToolWebOutTextLang(record MailVc,string);
external procedure ToolWebOutTextLangOnly(record MailVc);
external procedure GetConfInfo(string,var string,var string,var LongInt);
external procedure ToolWebHBSPublicNews(string,LongInt);
external procedure ToolWebFAQDoNewQuest(string);
external Function Boolean ToolWebHBSPublicMain(string,LongInt,LongInt,Boolean,Boolean);
external function LongInt HalRandom(LongInt,LongInt);
external procedure ToolWebGetHeaderLang(record MailVc,var string);
external procedure AddTextLineToMail(string,record MailVc);
external procedure ToolWebGetTheText(Integer,var string);
external procedure ToolWebGetConfNameLang(record ConfVc,var string);
external procedure ToolWebPublicMailMain(string,LongInt);
external procedure ToolWebPublicMailNews(string,LongInt);
external procedure ToolWebPublicMailBullet(string,LongInt);
external procedure ToolWebPublicMailLink(string,LongInt);
external function string 200 GetWebLanguage();
external procedure ToolWebRadioButtonDiv(string,string,Integer,Boolean);
external procedure GetWebHBSDivLanguages(var record LangBlock);

global
procedure ToolWebHBSFirstPart()
begin
  WebOutString("<table width=""490"" border=""0"" cellpadding=""3"">");
  WebOutNL;
  WebOutString("<tr valign=""top"">");
  WebOutNL;
  WebOutString("<td class=""deftxt"">");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSSecondPart()
begin
  WebOutString("</td>");
  WebOutNL;
  WebOutString("<td width=""168"" align=""right"">");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSThirdPart()
begin
  WebOutString("</td>");
  WebOutNL;
  ToolWebLineEnd;
  WebOutNL;
  WebOutString("</table>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSMailPopup(string linkto,string target,LongInt sernr)
begin
  string 200 tstr;
  string 200 thetarget;

  if (blank(target)) then begin
    thetarget = "_blank";
  end else begin
    thetarget = target;
  end;
  WebOutString("<div class=""specials-txt"">");
  WebOutNL;
  WebOutString("<a href=javascript:jsOpenReadMore(""");
  WebOutLink(linkto & "?mailnumber=" & sernr & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""")>");
  WebOutNL;
  ToolWebGetTheText(20056,tstr);
  WebOutString("<img src=""gfx/dot04.gif"" width=""15"" height=""9"" border=""0"" alt=""" & tstr & """>");
  WebOutString(tstr & "</a>");
  WebOutNL;
  WebOutString("</div><p></p>");
  WebOutNL;
  return;
end;

global
procedure ToolWebHBSReadMore(string linkto)
begin
  string 200 tstr;
  
  WebOutString("<div class=""specials-txt"">");
  WebOutNL;
/*
  WebOutString("<a href=javascript:jsOpenReadMore(""");
  WebOutLink(linkto);
  WebOutString(""")>");
*/
  WebOutString("<a href=""");
  WebOutLink(linkto);
  WebOutString(""">");
  WebOutNL;
  ToolWebGetTheText(20056,tstr);
  WebOutString("<img src=""gfx/dot04.gif"" width=""15"" height=""9"" border=""0"" alt=""" & tstr & """>");
  WebOutString(tstr & "</a>");
  WebOutNL;
  WebOutString("</div><p></p>");
  WebOutNL;
  return;
end;

global
Function Boolean ToolWebHBSRandomMail(string thecode)
begin
  record MailVc Mailr;
  string 60 ckey;
  LongInt maxmail,pos;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  Boolean res;

  res = false;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "UserSubject:" & confcode;
  maxmail = RecordsInIndex("MailVc",ckey);
  pos = HalRandom(0,maxmail);
  if ((pos>=0) and (pos<maxmail)) then begin
    if (LoopKey(ckey,Mailr,1,true)) then begin
      SetLoopPosition(Mailr,pos);
      if (LoopKey(ckey,Mailr,1,true)) then begin
        ToolWebOutTextLang(Mailr,Mailr.Header);
        res = true;
      end;
    end;
  end;
  ToolWebHBSRandomMail = res;
  return;
end;

global
procedure ToolWebHBSDropDownMail(string thecode,string hallink,string linkarg,var LongInt selected)
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  string 60 ckey;
  string 10 sortorder;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  Boolean res;
  string 200 hdr;

  selected = WebGetArg("dropdownmail");
  GetConfInfo(thecode,confname,confcode,maxmail);
  WebOutString("<form method=""post"" action=""");
  WebOutLink(hallink & "?sessionid=" & WebGetArg("sessionid") & linkarg);
  WebOutString(""">");
  WebOutString("<table width=""170"" border=""0"" cellpadding=""0"" cellspacing=""0"">");
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""100%"">");
  WebOutString("<select name=dropdownmail onChange=""submit(this.form)"">");
  ckey = "UserSubject:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Mailr,1,foundf)) begin
    sortorder = Left(Mailr.Header,3);
    if (foundf) then begin
      if (foundf) then begin
        if ((sortorder<>"000") and ((sortorder<>"999"))) then begin
          WebOutString("<option value=""" & Mailr.SerNr & """ ");
          if (selected==Mailr.SerNr) then begin
            WebOutString("selected");
            RecordCopy(Mail2r,Mailr);
          end;
          ToolWebGetHeaderLang(Mailr,hdr);
          WebOutString(">" & hdr &"</option>");
        end else begin
          if (sortorder=="000") then begin
            RecordCopy(Mail2r,Mailr);
            WebOutString("<option value=""" & -1 & """ ");
            if (selected==-1) then begin
              WebOutString("selected");
            end;
            ToolWebGetHeaderLang(Mailr,hdr);
            WebOutString(">" & hdr & "</option>");
            WebOutString("<option value=""0"" ");
            if (selected==0) then begin
              WebOutString("selected");
            end;
            ToolWebGetTheText(20054,hdr);
            WebOutString(">" & hdr & "</option>");
          end;
        end;
      end;
    end;
  end;
  WebOutString("</select>");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("</form>");
  if (selected==0) then begin
    res = ToolWebHBSPublicMain(thecode,-1,-1,true,false);
  end;
  if (selected>0) then begin
    ToolWebOutTextLang(Mail2r,Mail2r.Header);
  end;
  return;
end;

global
procedure ToolWebHBSDropDown(string thetext,string thename,string thecode)
begin
  record ConfVc Confr;
  string 60 ckey;
  Boolean foundf;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  string 200 tstr;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  ToolWebGetTheText(20055,tstr);
  WebOutString("<option value="""">" & tstr & "</option>");
  WebOutNL;
  GetConfInfo(thecode,confname,confcode,maxmail);
  ckey = "SubConfAddrName:" & confcode;
  foundf = true;
  while (LoopKey(ckey,Confr,1,foundf)) begin
    if (Confr.Class!=kConfClassFolder) then begin
      ToolWebGetConfNameLang(Confr,tstr);
      WebOutString("<option value=""" & Confr.SerNr & """>" & tstr & "</option>");
      WebOutNL;
    end;
  end;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

global
procedure ToolWebHBSDropDownLeadCategory(string thetext,string thename,string defvalue)
begin
  string 200 tstr;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  if (blank(defvalue)) then begin
    ToolWebGetTheText(20055,tstr);
    WebOutString("<option value="""">" & tstr & "</option>");
  end else begin
    switch (defvalue) begin
      case "57": tstr = ToolWebReturnTheText(20127);
      case "58": tstr = ToolWebReturnTheText(20120);
    end;
    WebOutString("<option value="""">" & tstr & "</option>");
  end;
  WebOutNL;
  WebOutString("<option value=""" & "57" & """>" & ToolWebReturnTheText(20127) & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "58" & """>" & ToolWebReturnTheText(20120) & "</option>");
  WebOutNL;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

/*
global
procedure WebHBSDropDownLead(string thetext,string thename,string classtype,string defvalue)
begin
  string 200 tstr;
  record CClassVc CClassr;
  Boolean found;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  ToolWebGetTheText(20055,tstr);
  WebOutString("<option value="""">" & tstr & "</option>");
  WebOutNL;  
  ResetLoop(CClassr);
  found = true;
  CClassr.CType = classtype;
  while (LoopKey("CType",CClassr,1,found)) begin
    if (CClassr.CType!=classtype) then begin found = false; end;
    if (found) then begin
      WebOutString("<option value=""" & CClassr.Code & """>" & CClassr.Comment & "</option>");
      WebOutNL;
    end;
  end;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;

global
procedure WebHBSDropDownLeadCountries(string thetext,string thename,string defvalue)
begin
  string 200 tstr;

  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"" class=""feedback-txt"">" & thetext & "</td>");
  WebOutNL;
  WebOutString("<td width=""72%"">");
  WebOutString("<select name=""" & thename & """ size=""1"">");
  WebOutNL;
  if (blank(defvalue)) then begin
    ToolWebGetTheText(20055,tstr);
    WebOutString("<option value="""">" & tstr & "</option>");
  end else begin
    switch (defvalue) begin
      case "19": tstr = "Denmark";
      case "25": tstr = "Estonia";
      case "74": tstr = "Estonia HansaRaama";
      case "40": tstr = "Finland";
      case "24": tstr = "Norway";
      case "36": tstr = "Poland";
      case "29": tstr = "Russia";
      case "39": tstr = "Sweden";
      case "83": tstr = "United Kingdom";
    end;
    WebOutString("<option value="""">" & tstr & "</option>");
  end;
  WebOutNL;
  WebOutString("<option value=""" & "19" & """>" & "Denmark" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "25" & """>" & "Estonia" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "74" & """>" & "Estonia HansaRaama" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "40" & """>" & "Finland" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "24" & """>" & "Norway" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "36" & """>" & "Poland" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "29" & """>" & "Russia" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "39" & """>" & "Sweden" & "</option>");
  WebOutNL;
  WebOutString("<option value=""" & "63" & """>" & "United Kingdom" & "</option>");
  WebOutNL;
  WebOutString("</select>");
  WebOutNL;
  WebOutString("</td>");
  ToolWebLineEnd;
  return;
end;
*/

global
procedure WebHBSMailView()
begin
  record MailVc Mailr;
  LongInt wmailnumber;
  string 200 tstr;

  ToolWebGetTheText(20057,tstr);
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  WebOutString("<table width=""100%"" cellspacing=""0"" cellpadding=""3"" border=""1"" class=""deftbl"">");
  ToolWebLineStart;
  WebOutString("<th>" & tstr & "</th>");
  ToolWebLineEnd;
  WebOutString("</table>");
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebOutTextLang(Mailr,Mailr.Header);
  end;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSMailFAQView()
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  record RLinkVc RLr;
  Integer cnt;
  LongInt wmailnumber;

  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebOutTextLang(Mailr,Mailr.Header);
    WebOutString("<p>");
    cnt = 1;
    while (ReadRecordLink(Mailr,cnt,Mail2r,RLr)) begin
      cnt = cnt + 1;
      ToolWebOutTextLang(Mail2r,Mail2r.Header);
    end;
  end;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSMailNewsView()
begin
  record MailVc Mailr;
  record MailVc Mail2r;
  record RLinkVc RLr;
  Integer cnt;
  LongInt wmailnumber;
  string 200 hdr;

  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""0"">");
  ToolWebLineStart;
  WebOutString("<td bgcolor=""#4F5FB4""><img src=""gfx/_en/label_newsandheadlines.gif"" width=""161"" height=""14"" hspace=""15""></td>");
  WebOutString("<td width=""233""><img src=""gfx/popup_logo.jpg"" width=""233"" height=""42""></td>");
  ToolWebLineEnd;
  ToolWebEndTable;
  wmailnumber = WebGetArg("mailnumber");
  Mailr.SerNr = wmailnumber;
  if (ReadFirstMain(Mailr,1,true)) then begin
    ToolWebGetHeaderLang(Mailr,hdr);
    WebOutString("<table width=""100%""  border=""0"" cellspacing=""0"" cellpadding=""20"">");
    ToolWebLineStart;
    WebOutString("<td class=""deftxt"">");
    WebOutString("<div class=""heading3"">"); // class=""date""
    WebOutString(hdr);
    WebOutString("</div>");
    WebOutString("<p>");
    ToolWebOutTextLangOnly(Mailr);
    cnt = 1;
    while (ReadRecordLink(Mailr,cnt,Mail2r,RLr)) begin
      cnt = cnt + 1;
      ToolWebOutTextLangOnly(Mail2r);
    end;
    ToolWebEndTable;
  end;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSEntireConf()
begin
  Boolean res;
  
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
//  ToolWebHBSFirstPart;
  res = ToolWebHBSPublicMain(WebGetArg("confcode"),-1,-1,false,false);
//  ToolWebHBSThirdPart;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSEntireConf2()
begin
  Boolean res;
  
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  res = ToolWebHBSPublicMain(WebGetArg("confcode"),-1,255,true,true);
  ToolWebEndPage(false);
  return;
end;

procedure ToolWebPublicReadMore(string whichone,LongInt norofmails,LongInt maxchars)
begin
  if (ToolWebHBSPublicMain(whichone,norofmails,maxchars,false,false)) then begin
    ToolWebHBSReadMore("WebHBSEntireConf.hal?sessionid=" & WebGetArg("sessionid") & "&confcode=" & whichone & "&langcode=" & WebGetArg("langcode"));
  end;
  return;
end;

global
updating procedure ToolWebHBSRandom()
begin
  Boolean res;
  
  if (WebLoginStatus==3) then begin
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    ToolWebHBSFirstPart;
    res = ToolWebHBSPublicMain("LOGGEDIN",-1,-1,false,false);
    ToolWebHBSThirdPart;
    ToolWebEndPage(false);
  end else begin
    ToolWebAddCounter("COUNTER");
    ToolWebHBSSetMainWithTimeout(10,"WebHBSMagicList.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&WEBPAGE=HOME");
    ToolWebHBSStartBody("","");
    ToolWebHBSFirstPart;
    res = ToolWebHBSRandomMail("RANDOM");
    ToolWebHBSThirdPart;
    ToolWebEndPage(false);
  end;
  return;
end;

global
procedure WebHBSContactUs()
begin
  Boolean res;
  string 200 tstr;
  LongInt interestf;

  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  WebOutString("<form method=""post"" action=""");
  WebOutLink("WebHBSStoreContact.hal?sessionid=" & WebGetArg("sessionid") & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebHBSContactLine(ToolWebReturnTheText(20059) & " (*)","companyname",WebGetArg("companyname"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20058) & " (*)","personname",WebGetArg("personname"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20069) & " (*)","address1",WebGetArg("address1"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20070),"address2",WebGetArg("address2"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20071),"address3",WebGetArg("address3"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20072),"address4",WebGetArg("address4"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20073),"address5",WebGetArg("address5"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20060),"email",WebGetArg("email"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20061),"url",WebGetArg("url"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20062) & " (*)","phone",WebGetArg("phone"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20063),"fax",WebGetArg("fax"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20064),"message","",true);
  ToolWebHBSDropDown(ToolWebReturnTheText(20065) & "  (*)","country","CONTACTMAIN");
  interestf = -1;
  if (nonblank(WebGetArg("interestFlag"))) then begin
    interestf = StringToInt(WebGetArg("interestFlag"));
  end;
  WebOutString("<tr valign=""top""><td class=""feedback-txt"">");
  WebOutString(ToolWebReturnTheText(20134));
  WebOutString("</td>");
  WebOutString("<td class=""feedback"">");
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20129),"interestFlag",0,interestf==0);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20130),"interestFlag",1,interestf==1);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20131),"interestFlag",2,interestf==2);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20132),"interestFlag",3,interestf==3);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20133),"interestFlag",4,interestf==4);
  WebOutString("</td>");
  ToolWebLineEnd;
  ToolWebHBSContactLine(ToolWebReturnTheText(20066),"","",false);
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  ToolWebGetTheText(20067,tstr);
  WebOutString("<input type=""submit"" name=""Submit"" value=""" & tstr & """>");
  ToolWebGetTheText(20068,tstr);
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & tstr & """>");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("</form>");
  WebOutString("<p>&nbsp;</p>");
  ToolWebEndPage(false);
  return;
end;

/*
procedure HBSRegisterLeadError(string messagestr)
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  ToolWebStartTable;
  if (nonblank(messagestr)) then begin
    ToolWebLineStart;
    WebOutString(messagestr);
    ToolWebLineEnd;
  end;
  ToolWebEndTable;
  ToolWebEndPage(false);
  return;
end;
*/

procedure AddSourceLink(string thetext,string source)
begin
  WebOutString("<p class=mnu-lvl-2>");
  WebOutString("<a href=""");
  WebOutLink("WebHBSRegisterLead.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode")
              & "&leadsource=" & source & "&leadindustry=" & WebGetArg("leadindustry"));
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSRegisterLeadChooseSource()
begin
  Boolean found;
  record CClassVc CClassr;
  
  if (WebLoginStatus==3) then begin
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    found = true;
    CClassr.CType = "106";
    while (LoopKey("CType",CClassr,1,found)) begin
      if (CClassr.CType!="106") then begin found = false; end;
      if (found) then begin
        AddSourceLink(CClassr.Comment,CClassr.Code);
      end;
    end;
    ToolWebEndPage(false);
  end;
  return;
end;

procedure AddIndustryLink(string thetext,string industry)
begin
  WebOutString("<p class=mnu-lvl-2>");
  WebOutString("<a href=""");
  WebOutLink("WebHBSRegisterLead.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode")
              & "&leadsource=" & WebGetArg("leadsource") & "&leadindustry=" & industry);
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSRegisterLeadChooseIndustry()
begin
  Boolean found;
  record CClassVc CClassr;
  
  if (WebLoginStatus==3) then begin
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    found = true;
    CClassr.CType = "102";
    while (LoopKey("CType",CClassr,1,found)) begin
      if (CClassr.CType!="102") then begin found = false; end;
      if (found) then begin
        AddIndustryLink(CClassr.Comment,CClassr.Code);
      end;
    end;
    ToolWebEndPage(false);
  end;
  return;
end;

procedure ToolWebHBSRegisterLeadSimpleLink(string thetext,string wheretogo)
begin
  WebOutString("<a href=""");
  WebOutLink(wheretogo & "?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") 
             & "&leadsource=" & WebGetArg("leadsource") & "&leadindustry=" & WebGetArg("leadindustry") & "&WEBPAGE=HOME");
  WebOutString(""" target=""content"">");
  WebOutString(thetext);
  WebOutString("</a>");
  return;
end;

procedure HBSRegisterLead(Integer messageid)
begin
  string 255 tstr,source,industry;
  record CClassVc CClassr;
 
  if (WebLoginStatus==3) then begin
    source = WebGetArg("leadsource");
    industry = WebGetArg("leadindustry");

    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");

    WebOutString("<div>");
    ToolWebHBSRegisterLeadSimpleLink(ToolWebReturnTheText(20125),"WebHBSRegisterLeadChooseSource.hal");
    WebOutString("&nbsp&nbsp");
    ToolWebHBSRegisterLeadSimpleLink(ToolWebReturnTheText(20126),"WebHBSRegisterLeadChooseIndustry.hal");
    WebOutString("</div>");

    WebOutString("<form method=""post"" action=""");
    WebOutLink("WebHBSRegisterLeadStore.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") 
               & "&leadsource=" & source & "&leadindustry=" & industry);
    WebOutString(""">");
    WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
    if (messageid>0) then begin
      WebOutString("<tr>");
      WebOutNL;
      WebOutString("<td width=""28%"">&nbsp;</td>");
      WebOutNL;
      WebOutString("</tr>");
      WebOutNL;
      tstr = ToolWebReturnTheText(messageid);
      ToolWebLineStart;
      WebOutString("<td colspan=2 class=""heading3"">" & tstr & "</td>");
      ToolWebLineEnd;
    end;
    ToolWebHBSContactLine(ToolWebReturnTheText(20124) & " (*)","leadvatnr",WebGetArg("leadvatnr"),false);
    ToolWebHBSContactLine(ToolWebReturnTheText(20084),"comment",WebGetArg("comment"),false);
    
    WebOutString("<tr>");
    WebOutNL;
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutNL;
    WebOutString("</tr>");
    WebOutNL;
    WebOutString("<tr>");
    WebOutNL;
    CClassr.Code = source;
    if (ReadFirstMain(CClassr,1,true)) then begin end;
    WebOutString("<td width=""28%"" class=""feedback-txt"">" & ToolWebReturnTheText(20122) & " (*)" & "</td>");
    WebOutNL;
    WebOutString("<td width=""72%"">" & CClassr.Comment & "</td>");
    WebOutNL;       
    WebOutString("</tr>");
    WebOutNL;
    WebOutString("<tr>");
    WebOutNL;
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutNL;
    WebOutString("</tr>");
    WebOutNL;
    CClassr.Code = industry;
    if (ReadFirstMain(CClassr,1,true)) then begin end;
    WebOutString("<tr>");
    WebOutString("<td width=""28%"" class=""feedback-txt"">" & ToolWebReturnTheText(20123) & " (*)" & "</td>");
    WebOutNL;       
    WebOutString("<td width=""7%"">" & CClassr.Comment & "</td>");
    WebOutNL;       
    WebOutString("</tr>");
    WebOutNL;

    ToolWebHBSContactLine(ToolWebReturnTheText(20066),"","",false);
    WebOutString("<tr valign=""top"">");
    WebOutString("<td width=""28%"">&nbsp;</td>");
    WebOutString("<td width=""72%"">");
    ToolWebGetTheText(20067,tstr);
    WebOutString("<input type=""submit"" name=""Submit"" value=""" & tstr & """>");
    ToolWebGetTheText(20068,tstr);
    WebOutString("<input type=""reset"" name=""Reset"" value=""" & tstr & """>");
    WebOutString("</td>");
    ToolWebLineEnd;  
    WebOutString("</table>");    
    WebOutString("</form>");
    if (messageid==20115) then begin
      WebOutString("<div>");
      ToolWebHBSRegisterLeadSimpleLink(ToolWebReturnTheText(20109),"WebHBSRegisterLeadNewCustomer.hal");
      WebOutString("</div>");
    end;
    WebOutString("<p>&nbsp;</p>");
    WebOutString("</head>");
    WebOutString("</html>");    
  end;
  return;
end;

procedure AddLeadCountryLink(string link,string thetext,Integer company)
begin
  WebOutString("<p class=mnu-lvl-2>");
  WebOutString("<a href=""");
  WebOutLink(link & "?sessionid=" & WebGetArg("sessionid") & "&company=" & company & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

global
procedure WebHBSRegisterLeadChooseCountry()
begin
  if (WebLoginStatus==3) then begin
    HBSRegisterLead(0);
  end else begin
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Denmark",19);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Estonia",25);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Estonia HansaRaama",74);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Finland",40);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Latvia",26);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Lithuania",28);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Norway",24);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Poland",36);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Russia",29);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","South Africa",37);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","Sweden",39);
    AddLeadCountryLink("WebHBSRegisterLeadLogin.hal","United Kingdom",63);
    ToolWebEndPage(false);
  end;
  return;
end;

global
procedure WebHBSRegisterDealerChooseCountry()
begin
  if (WebLoginStatus==3) then begin
    HBSRegisterLead(0);
  end else begin
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Denmark",19);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Estonia",25);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Estonia HansaRaama",74);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Finland",40);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Latvia",26);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Lithuania",28);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Norway",24);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Poland",36);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Russia",29);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","South Africa",37);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","Sweden",39);
    AddLeadCountryLink("WebHBSRegisterDealer.hal","United Kingdom",63);
    ToolWebEndPage(false);
  end;
  return;
end;

global
procedure WebHBSRegisterLead()
begin
  HBSRegisterLead(0);
  return;
end;

procedure AddCategoryLink(string thetext,string custcat)
begin
  WebOutString("<p class=mnu-lvl-2>");
  WebOutString("<a href=""");
  WebOutLink("WebHBSRegisterLead.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode")
              & "&custcat=" & custcat);
  WebOutString(""">");
  WebOutString(thetext);
  WebOutString("</a>");
  WebOutString("</p>");
  return;
end;

procedure ToolWebHBSPrintRegisterDealer(string link,Boolean dealerf)
begin
  WebOutString("<form method=""post"" action=""");
  WebOutLink(link & "?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebHBSShopLine(ToolWebReturnTheText(20059) & "(*)","customername","text",WebGetArg("customername"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20058) & "(*)","personname","text",WebGetArg("personname"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20069) & "(*)","address1","text",WebGetArg("address1"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20070),"address2","text",WebGetArg("address2"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20071),"address3","text",WebGetArg("address3"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20072),"address4","text",WebGetArg("address4"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20073),"address5","text",WebGetArg("address5"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20082) & "(*)","orgnr","text",WebGetArg("orgnr"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20062) & "(*)","phone","text",WebGetArg("phone"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20060),"email","text",WebGetArg("email"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20063),"fax","text",WebGetArg("fax"),false);
  if (dealerf) then begin
    ToolWebHBSShopLine(ToolWebReturnTheText(20083) & "(*)","passwd","password",WebGetArg("passwd"),false);
  end;
  ToolWebHBSShopLine(ToolWebReturnTheText(20084),"message","text",WebGetArg("message"),false);
  ToolWebHBSShopLine(ToolWebReturnTheText(20066),"","text","",false);
  if (dealerf) then begin
    ToolWebHBSDropDownLeadCategory(ToolWebReturnTheText(20112) & "(*)","custcat",WebGetArg("custcat"));
  end;
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  WebOutString("<input type=""submit"" name=""Submit"" value=""" & ToolWebReturnTheText(20067) & """>");
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & ToolWebReturnTheText(20068) & """>");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");
  return;
end;

global
procedure WebHBSRegisterLeadNewCustomer()
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  ToolWebHBSPrintRegisterDealer("WebHBSRegisterLeadStoreCustomer.hal",false);
  ToolWebEndPage(false);
  return;
end;

global
updating procedure WebHBSRegisterLeadStoreCustomer()
begin
  record CUVc CUr;
  record CUVc tempCUr;
  Boolean storef;
  string 255 passw;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  
  oldcomp = CurrentCompany;
  storef = true;
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
//  res = ToolWebHBSPublicMain("WWWREGISTER",-1,-1,false,false);
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  newcomp = StringToInt(WebGetArg("company"));
  if (newcomp==0) then begin
    ToolWebHBSInfoCell(ToolWebReturnTheText(20087),"100%","false");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
    ToolWebHBSPrintRegisterDealer("WebHBSRegisterLeadStoreCustomer.hal",false);
    storef = false;
  end;
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  

  CUr.Name = WebGetArg("customername");
  if ((storef) and (nonblank(CUr.Name))) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSRegisterLeadStoreCustomer.hal",false);
      storef = false;
    end;
  end;
  CUr.VATNr = WebGetArg("orgnr");
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSRegisterLeadStoreCustomer.hal",false);
      storef = false;
    end;
  end;
  if (storef) then begin
    RecordNew(CUr);
    CUr.Name = WebGetArg("customername");
    CUr.Person = WebGetArg("personname");
    CUr.InvAddr0 = WebGetArg("address1");
    CUr.InvAddr1 = WebGetArg("address2");
    CUr.InvAddr2 = WebGetArg("address3");
    CUr.InvAddr3 = WebGetArg("address4");
    CUr.InvAddr4 = WebGetArg("address5");
    CUr.VATNr = WebGetArg("orgnr");
    CUr.eMail = WebGetArg("email");
    CUr.Phone = WebGetArg("phone");
    CUr.Fax = WebGetArg("fax");
    CUr.AllowLogin = 1;
    CUr.Comment = WebGetArg("message");
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    RecordCopy(tempCUr,CUr);
    if (ReadFirstMain(tempCUr,1,true)) then begin
      storef = false;
    end;
    if (blank(CUr.Code)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20086),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSRegisterLeadStoreCustomer.hal",false);
      storef = false;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone))
       ) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20087),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSRegisterLeadStoreCustomer.hal",false);
      storef = false;
    end;
  end;
  if (storef) then begin
    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    ToolWebHBSInfoCell(ToolWebReturnTheText(20128) & " " & CUr.Code,"100%","false");
  end else begin
    WebOutString("</td>");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("<div>");
  ToolWebHBSRegisterLeadSimpleLink(ToolWebReturnTheText(20111),"WebHBSRegisterLead.hal");
  WebOutString("</div>");
  if (storef) then begin
    res = ToolWebHBSPublicMain("WWWREGISTERDONE",-1,-1,false,false);
  end;
  ToolWebEndPage(false);
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
updating procedure WebHBSStoreRegisterDealer()
begin
  record CUVc CUr;
  record CUVc tempCUr;
  Boolean storef;
  string 255 passw;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  
  oldcomp = CurrentCompany;
  storef = true;
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
//  res = ToolWebHBSPublicMain("WWWREGISTER",-1,-1,false,false);
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebLineStart;
  newcomp = StringToInt(WebGetArg("company"));
  if (newcomp==0) then begin
    ToolWebHBSInfoCell(ToolWebReturnTheText(20087),"100%","false");
    ToolWebLineEnd;
    ToolWebLineStart;
    WebOutString("<td>");
    ToolWebHBSPrintRegisterDealer("WebHBSStoreRegisterDealer.hal",true);
    storef = false;
  end;
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;  

  CUr.Name = WebGetArg("customername");
  if ((storef) and (nonblank(CUr.Name))) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSStoreRegisterDealer.hal",true);
      storef = false;
    end;
  end;
  CUr.VATNr = WebGetArg("orgnr");
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20085),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSStoreRegisterDealer.hal",true);
      storef = false;
    end;
  end;
  if (storef) then begin
    RecordNew(CUr);
    CUr.Name = WebGetArg("customername");
    CUr.Person = WebGetArg("personname");
    CUr.InvAddr0 = WebGetArg("address1");
    CUr.InvAddr1 = WebGetArg("address2");
    CUr.InvAddr2 = WebGetArg("address3");
    CUr.InvAddr3 = WebGetArg("address4");
    CUr.InvAddr4 = WebGetArg("address5");
    CUr.VATNr = WebGetArg("orgnr");
    CUr.eMail = WebGetArg("email");
    CUr.Phone = WebGetArg("phone");
    CUr.Fax = WebGetArg("fax");
    CUr.AllowLogin = 1;
    CUr.CustCat = WebGetArg("custcat");
    CUr.Comment = WebGetArg("message");
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    RecordCopy(tempCUr,CUr);
    if (ReadFirstMain(tempCUr,1,true)) then begin
      storef = false;
    end;
    passw = WebGetArg("passwd");
    if (blank(CUr.Code)) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20086),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSStoreRegisterDealer.hal",true);
      storef = false;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone)) or
        (blank(passw))) then begin
      ToolWebHBSInfoCell(ToolWebReturnTheText(20087),"100%","false");
      ToolWebLineEnd;
      ToolWebLineStart;
      WebOutString("<td>");
      ToolWebHBSPrintRegisterDealer("WebHBSStoreRegisterDealer.hal",true);
      storef = false;
    end;
  end;
  if (storef) then begin
    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    ToolWebHBSInfoCell(ToolWebReturnTheText(20088) & " " & CUr.Code,"100%","false");
  end else begin
    WebOutString("</td>");
  end;
  ToolWebLineEnd;
  WebOutString("</table>");
  if (storef) then begin
    res = ToolWebHBSPublicMain("WWWREGISTERDEAL",-1,-1,false,false);
  end;
  ToolWebEndPage(false);
  if (res1) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure WebHBSRegisterDealer()
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  ToolWebHBSPrintRegisterDealer("WebHBSStoreRegisterDealer.hal",true);
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSRegisterLeadLogin()
begin
  string 255 tstr;
  Integer oldcomp,newcomp;
  Boolean res,res1;

  if (WebLoginStatus==3) then begin
    WebHBSRegisterLead;
  end else begin
    oldcomp = CurrentCompany;
    newcomp = StringToInt(WebGetArg("company"));
    if ((newcomp>0) and (oldcomp!=newcomp)) then begin
      res1 = SetCompany(newcomp,false);
    end;  
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    WebOutString("<form name=""HansaForm"" action=""dologin?company=" & WebGetArg("company") & "&failed=WebHBSRegisterLeadLogin.hal"" METHOD=""POST"">");
    ToolWebStartTable;
    if (nonblank(WebGetArg("failed_log_in"))) then begin
      ToolWebLineStart;
      ToolWebHBSInfoCell("","28%","left");
      ToolWebHBSInfoCell(ToolWebReturnTheText(20081),"72%","left");
      ToolWebLineEnd;
    end;
    ToolWebHBSContactLine(ToolWebReturnTheText(20051),"login",WebGetArg("login"),false);
    ToolWebHBSShopLine(ToolWebReturnTheText(20083),"passwd","password",WebGetArg("passwd"),false);
    ToolWebHiddenField("custpage","WebHBSRegisterLead.hal?langcode=" & WebGetArg("langcode"));
//    WebHBSDropDownLeadCountries(ToolWebReturnTheText(20065) & " (*)","company",WebGetArg("storeincomp"));
    ToolWebEndTable;
    ToolWebPushButton(ToolWebReturnTheText(20049),"submit","name");
    WebOutString("</form>");
    ToolWebEndPage(false);
    if (res1) then begin
      ResetCompany(oldcomp);
    end;
  end;
  return;
end;

global
updating procedure WebHBSRegisterLeadStore()
begin
  string 255 leadvatnr,country;
  record CUVc LeadCUr,oldLeadCUr,PartCUr;
  record ActVc Actr;
  row ActVc Actrw;
  record CUToCUVc CUToCUr;
  record LeadRegistBlock LRb;
  Boolean failed,reset;
  string 255 messagestr,leadindustry,leadsource;
  Integer oldcomp;
  Integer messagestrid;

  leadvatnr = WebGetArg("leadvatnr");
  country = WebGetArg("company");
  leadindustry = WebGetArg("leadindustry");
  leadsource = WebGetArg("leadsource");

  if (blank(leadvatnr) or blank(country) or blank(leadindustry) or blank(leadsource)) then begin
    messagestrid = 20113;
    failed = true;     
  end;
  oldcomp = CurrentCompany;  
  if (SetCompanyCode(country,false)) then begin
    reset = true;
  end else begin
    messagestrid = 20114;
    failed = true;
  end;
  if (failed==false) then begin
    LeadCUr.VATNr = leadvatnr;
    if (ReadFirstKey("VATNr",LeadCUr,1,true)==false) then begin
      messagestrid = 20115;
      failed = true;
    end;
  end;  
  if (failed==false) then begin
    PartCUr.Code = CurrentCust;
    if (ReadFirstMain(PartCUr,1,true)==false) then begin
      messagestrid = 20116;
      failed = true;
    end else begin
      if (PartCUr.CustCat!="57") and (PartCUr.CustCat!="58") then begin
        messagestrid = 20117;
        failed = true;
      end;
    end;
  end;
  if (failed==false) then begin
    CUToCUr.FromCU = PartCUr.Code;
    CUToCUr.ToCU = LeadCUr.Code;
    oldcomp = CurrentCompany;  
    if (ReadLastKey("FromCU",CUToCUr,2,true)) then begin
      if (CurrentDate<=AddDay(CUToCUr.StartDate,10)) and blankdate(CUToCUr.EndDate) then begin
        messagestrid = 20118;        
        failed = true;
      end;
    end;
  end;
  if (failed) then begin
    HBSRegisterLead(messagestrid);
  end else begin
    BlockLoad(LRb);
    RecordNew(Actr);
    Actr.MainPersons = PartCUr.Code;
    Actr.TransDate = CurrentDate;
    Actr.StartTime = CurrentTime;
    Actr.CUCode = LeadCUr.Code;
    Actr.CUName = LeadCUr.Name;
    Actr.Contact = LeadCUr.Person;
    Actr.Phone = LeadCUr.Phone;
    Actr.ActType = LRb.LeadActType;
    if (blank(Actr.ActType)) then begin
      Actr.ActType = "LEAD";
    end;
    Actr.OKFlag = 1;
    Actr.TodoFlag = 1;
    Actr.CalTimeFlag = 0;
    Actr.Comment = WebGetArg("comment");
    Actr.SymbNr = kActivitySymbolOther;
    Actr.CreationDate = CurrentDate;
    if (RecordStore(Actr,false)) then begin end;
    RecordCopy(oldLeadCUr,LeadCUr);
    LeadCUr.Classification = leadindustry & "," & leadsource;
    if (RecordUpdate(oldLeadCUr,LeadCUr,true)) then begin end;    
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    WebOutString("<p class=""heading3"">");
    WebOutString(ToolWebReturnTheText(20121));
    WebOutString("</p>");
    ToolWebEndPage(false);
    RecordNew(CUToCUr);
    CUToCUr.FromCU = PartCUr.Code;
    CUToCUr.ToCU = LeadCUr.Code;
    CUToCUr.StartDate = CurrentDate;
    CUToCUr.SerNr = NextSerNr("CUToCUVc",CurrentDate,-1,false,"");
    if (RecordStore(CUToCUr,false)) then begin
    end;
    
  end;
  if (reset) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
updating procedure WebHBSStoreContact()
begin
  record MailSettingsBlock MSr;
  record ConfVc Confr;
  record MailVc Mail;
  row MailVc Mailrw;
  Boolean mailstored;
  string 255 tstr;

  Confr.SerNr = WebGetArg("country");
  if ((blank(WebGetArg("country"))) or (blank(WebGetArg("companyname"))) or (blank(WebGetArg("phone"))) or (StringToLongInt(WebGetArg("interestFlag"))<0)) then begin
    WebHBSContactUs;
  end else begin
  if (ReadFirstMain(Confr,1,true)) then begin
    BlockLoad(MSr);
    RecordNew(Mail);
    Mail.SendFlag = 1;
    Mailrw.RowTyp = 1;
    Mailrw.AddrCode = "Download Registration";
/*
    if (nonblank(WebGetArg("email"))) then begin
      Mailrw.AddrCode = WebGetArg("email");
    end else begin
      Mailrw.AddrCode = MSr.Postmaster;
    end;
*/
    MatRowPut(Mail,0,Mailrw);
    Mailrw.RowTyp = 0;
    Mailrw.AddrCode = Confr.AddrName;
    MatRowPut(Mail,1,Mailrw);
    Mail.Header = "Please contact: " & WebGetArg("companyname");
    AddTextLineToMail(WebGetArg("personname"),Mail);
    AddTextLineToMail(WebGetArg("companyname"),Mail);
    AddTextLineToMail(WebGetArg("address1"),Mail);
    AddTextLineToMail(WebGetArg("address2"),Mail);
    AddTextLineToMail(WebGetArg("address3"),Mail);
    AddTextLineToMail(WebGetArg("address4"),Mail);
    AddTextLineToMail(WebGetArg("address5"),Mail);
    AddTextLineToMail(WebGetArg("email"),Mail);
    AddTextLineToMail(WebGetArg("url"),Mail);
    AddTextLineToMail(WebGetArg("phone"),Mail);
    AddTextLineToMail(WebGetArg("fax"),Mail);
    AddTextLineToMail("",Mail);
    AddTextLineToMail("",Mail);
    tstr = WebGetArg("message");
    AddTextLineToMail(Left(tstr,250),Mail);
    switch (WebGetArg("interestFlag")) begin
      case 0:
        Confr.AddrName = Confr.AddrName & " FO";
        if (ReadFirstKey("AddrName",Confr,1,true)) then begin
          Mailrw.RowTyp = 0;
          Mailrw.AddrCode = Confr.AddrName;
          MatRowPut(Mail,1,Mailrw);
        end;
        ToolWebGetTheText(20129,tstr);
      case 1: ToolWebGetTheText(20130,tstr); 
      case 2: ToolWebGetTheText(20131,tstr); 
      case 3: ToolWebGetTheText(20132,tstr); 
      case 4: ToolWebGetTheText(20133,tstr); 
    end;
    AddTextLineToMail("Interested in: " & tstr,Mail);
    mailstored = RecordInsert(Mail,false);
    ToolWebStartPage;
    ToolWebHBSSetMainTitle;
    ToolWebHBSStartBody("","");
    WebOutString("<p class=""heading3"">");
    WebOutString("Thank you!");
    WebOutString("</p>");
    ToolWebEndPage(false);
  end;
  end;
  return;
end;

global
procedure WebHBSDownloads()
begin
  Boolean res;
  string 200 tstr;
  LongInt interestf;

  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  WebOutString("<form method=""post"" action=""");
  WebOutLink("WebHBSStoreDownloadReq.hal?sessionid=" & WebGetArg("sessionid") & "&langcode=" & WebGetArg("langcode"));
  WebOutString(""">");
  WebOutString("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
  ToolWebHBSContactLine(ToolWebReturnTheText(20058),"personname",WebGetArg("personname"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20059) & " (*)","companyname",WebGetArg("companyname"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20060) & " (*)","email",WebGetArg("email"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20061),"url",WebGetArg("url"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20062) & " (*)","phone",WebGetArg("phone"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20063),"fax",WebGetArg("fax"),false);
  ToolWebHBSContactLine(ToolWebReturnTheText(20064),"message","",true);
  ToolWebHBSDropDown(ToolWebReturnTheText(20065) & " (*)","country","CONTACTMAIN");
  interestf = -1;
  if (nonblank(WebGetArg("interestFlag"))) then begin
    interestf = StringToInt(WebGetArg("interestFlag"));
  end;
  WebOutString("<tr valign=""top""><td class=""feedback-txt"">");
  WebOutString(ToolWebReturnTheText(20134));
  WebOutString("</td>");
  WebOutString("<td class=""feedback"">");
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20129),"interestFlag",0,interestf==0);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20130),"interestFlag",1,interestf==1);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20131),"interestFlag",2,interestf==2);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20132),"interestFlag",3,interestf==3);
  ToolWebRadioButtonDiv(ToolWebReturnTheText(20133),"interestFlag",4,interestf==4);
  WebOutString("</td>");
  ToolWebLineEnd;

  ToolWebHBSContactLine(ToolWebReturnTheText(20066),"","",false);
  WebOutString("<tr valign=""top"">");
  WebOutString("<td width=""28%"">&nbsp;</td>");
  WebOutString("<td width=""72%"">");
  ToolWebGetTheText(20067,tstr);
  WebOutString("<input type=""submit"" name=""Submit"" value=""" & tstr & """>");
  ToolWebGetTheText(20068,tstr);
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & tstr & """>");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("</form>");
  WebOutString("<p>&nbsp;</p>");
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSDownloadPage()
begin
  LongInt selected;
  Boolean res;
  
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  ToolWebHBSFirstPart;
  res = ToolWebHBSPublicMain("DOWNLOADINFO",-1,-1,false,false);
  ToolWebHBSThirdPart;
  ToolWebHBSDropDownMail("DOWNFILES","WebHBSDownloadPage.hal","&langcode=" & WebGetArg("langcode"),selected);
  ToolWebHBSDropDownMail("DOWNMANU","WebHBSDownloadPage.hal","&langcode=" & WebGetArg("langcode"),selected);
  ToolWebHBSDropDownMail("DOWNDEMO","WebHBSDownloadPage.hal","&langcode=" & WebGetArg("langcode"),selected);
//  WebOutString("<br>");
//  WebOutString("<A HREF=""http://212.247.196.3/updates.htm"" target=""_parent"">Download new versions (old site).</A><br>");
//  WebOutString("<A HREF=""http://212.247.196.3/manuals_new.htm"" target=""_parent"">Download manuals (old site).</A><br>");
  ToolWebEndPage(false);
  return;
end;

global
updating procedure WebHBSStoreDownloadReq()
begin
  record MailSettingsBlock MSr;
  record ConfVc Confr;
  record MailVc Mail;
  row MailVc Mailrw;
  Boolean mailstored;
  string 255 tstr;

  Confr.SerNr = WebGetArg("country");
  if ((blank(WebGetArg("country"))) or (blank(WebGetArg("companyname"))) or (blank(WebGetArg("phone"))) or (StringToLongInt(WebGetArg("interestFlag"))<0)) then begin
    WebHBSDownloads;
  end else begin
  if (ReadFirstMain(Confr,1,true)) then begin
    BlockLoad(MSr);
    RecordNew(Mail);
    Mail.SendFlag = 1;
    Mailrw.RowTyp = 1;
    Mailrw.AddrCode = "Download Registration";
/*
    if (nonblank(WebGetArg("email"))) then begin
      Mailrw.AddrCode = WebGetArg("email");
    end else begin
      Mailrw.AddrCode = MSr.Postmaster;
    end;
*/
    MatRowPut(Mail,0,Mailrw);
    Mailrw.RowTyp = 0;
    Mailrw.AddrCode = Confr.AddrName;
    MatRowPut(Mail,1,Mailrw);
//    Mail.Header = "Download made by: " & WebGetArg("companyname");
    AddTextLineToMail(WebGetArg("personname"),Mail);
    AddTextLineToMail(WebGetArg("companyname"),Mail);
    AddTextLineToMail(WebGetArg("email"),Mail);
    AddTextLineToMail(WebGetArg("url"),Mail);
    AddTextLineToMail(WebGetArg("phone"),Mail);
    AddTextLineToMail(WebGetArg("fax"),Mail);
    AddTextLineToMail("",Mail);
    AddTextLineToMail("",Mail);
    tstr = WebGetArg("message");
    AddTextLineToMail(Left(tstr,250),Mail);
    switch (WebGetArg("interestFlag")) begin
      case 0:
        Confr.AddrName = Confr.AddrName & " FO";
        if (ReadFirstKey("AddrName",Confr,1,true)) then begin
          Mailrw.RowTyp = 0;
          Mailrw.AddrCode = Confr.AddrName;
          MatRowPut(Mail,1,Mailrw);
        end;
        ToolWebGetTheText(20129,tstr); 
      case 1: ToolWebGetTheText(20130,tstr); 
      case 2: ToolWebGetTheText(20131,tstr); 
      case 3: ToolWebGetTheText(20132,tstr); 
      case 4: ToolWebGetTheText(20133,tstr); 
    end;
    AddTextLineToMail(ToolWebReturnTheText(20135) & " " & tstr,Mail);
    Mail.Header = tstr & " (Download made by: " & WebGetArg("companyname") & ")";
    mailstored = RecordInsert(Mail,false);
    WebHBSDownloadPage;
  end;
  end;
  return;
end;

procedure ToolWebProduceProspect(string whatpage,string pageid)
begin
  WebOutString("<!-- ProspectFinder code for " & whatpage & "-->");
  WebOutString("<script language=""JavaScript"">document.write('<img src=""http://www.enecto.com/track?cust_id=54772fa9f7caf7f500f83ab6d72a7990&page_id=""");
  WebOutstring(pageid);
  WebOutString("&ref='+escape(document.referrer)+ '&tm=' + new Date().getTime() +'"" height=""1"" width=""1"" alt="""">');</script><noscript>");
  WebOutString("<img src=""http://www.enecto.com/track?cust_id=54772fa9f7caf7f500f83ab6d72a7990&page_id=");
  WebOutstring(pageid);
  WebOutstring(""" alt=""""></noscript><!-- End ProspectFinder -->");
  return;
end;

procedure ToolWebHBSSetProspect(string thecode)
begin
  switch (thecode) begin
    case "COMPANY": ToolWebProduceProspect("The Company","ff808081f923539200f9ef964e046a7b");
    case "PRODUCTS": ToolWebProduceProspect("Products","ff808081f923539200f9ef984c1d6b7b");
    case "PRODUCTSHANSA": ToolWebProduceProspect("Products - HF (Read More)","ff808081f923539200f9ef99cb806c6f");
    case "SOLUTIONHANSAACC": ToolWebProduceProspect("Solutions - HF for Accounting (Read More)","ff808081f923539200f9ef9f34bc6f22");
    case "SOLUTIONHANSASALES": ToolWebProduceProspect("Solutions - HF for Sales (Read More)","ff808081f923539200f9efa282317095");
    case "TECHNODESIGN": ToolWebProduceProspect("Technology - Hansa and Design (Read More)","ff808081f923539200f9efa49bfb717c");
    case "TECHNOCOMM": ToolWebProduceProspect("Technology - Hansa and Communication (Read More)","ff808081f923539200f9efa59af871fe");
    case "EDUCATION": ToolWebProduceProspect("Education","ff808081f923539200f9efa6d7ab7294");
    case "CASESTUDIES": ToolWebProduceProspect("Customer Stories","ff808081f923539200f9efa77f4272fb");
    case "NEWS": ToolWebProduceProspect("News - Newsletter (Read More)","ff808081f923539200f9efa8cca77398");
  end;
  return;
end;

global
updating procedure WebHBSMagicList()
begin
  record ConfVc Confr;
  record WebPagesVc WPr;
  row WebPagesVc WPrw;
  Integer rwcnt,i;
  Boolean res,companyset;
  Integer NoOfMails;
  Integer CharsToShow;
  LongInt selected;
  string 60 confcode;
  string 60 confname;
  LongInt maxmail;
  string 200 tstr;
  string 200 wpconfcode;
  Integer oldcomp,newcomp;

  oldcomp = CurrentCompany;
    companyset = SetCompany(1,false);
/*
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    companyset = SetCompany(newcomp,false);
  end;  
*/
  WPr.Code = WebGetArg("WEBPAGE");
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  ToolWebHBSFirstPart;
  if (ReadFirstMain(WPr,1,true)) then begin
    if (WPr.Code=="PARTNERS") then begin
      WebOutString("<div>");
      ToolWebHBSSimpleLink(ToolWebReturnTheText(20110),"WebHBSRegisterDealerChooseCountry.hal");
      WebOutString("</div><div>");
      ToolWebHBSSimpleLink(ToolWebReturnTheText(20111),"WebHBSRegisterLeadChooseCountry.hal");
      WebOutString("</div>");
    end;
    wpconfcode = WPr.Code;
    if (nonblank(WPr.CounterCode)) then begin
      ToolWebAddCounter(WPr.CounterCode);
    end;
    rwcnt = MatRowCnt(WPr);
    switch (WPr.PageType) begin
      case 0:
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(WPr,i,WPrw);
          NoOfMails = WPrw.NoOfMails;
          if (NoOfMails<=0) then begin
            NoOfMails = 1;
          end;
          CharsToShow = WPrw.CharsToShow;
           if (CharsToShow<=0) then begin
            CharsToShow = 255;
          end;
          switch (WPr.OnePerWhat) begin
            case 0:
              ToolWebPublicReadMore(WPrw.ConfCode,NoOfMails,CharsToShow);
            case 1:
              res = ToolWebHBSPublicMain(WPrw.ConfCode,-1,-1,false,false);
            case 2:
              ToolWebPublicMailMain(WPrw.ConfCode,CharsToShow);
            case 3:
              ToolWebPublicMailNews(WPrw.ConfCode,CharsToShow);
            case 4:
              ToolWebPublicMailLink(WPrw.ConfCode,CharsToShow);
            case 5:
              ToolWebPublicMailBullet(WPrw.ConfCode,CharsToShow);
          end;
        end;
        if (nonblank(WPr.NewsCode)) then begin
          ToolWebHBSSecondPart;
          ToolWebHBSPublicNews(WPr.NewsCode,150);
        end;
      case 1:
        if (WPr.OnePerWhat!=1) then begin
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WPr,i,WPrw);
              ToolWebHBSDropDownMail(WPrw.ConfCode,"WebHBSMagicList.hal","&WEBPAGE=" & WPr.Code & "&langcode=" & WebGetArg("langcode"),selected);
            end;
            if (nonblank(WPr.NewsCode)) then begin
              ToolWebHBSSecondPart;
              ToolWebHBSPublicNews(WPr.NewsCode,150);
            end;
        end else begin
            selected = WebGetArg("dropdownmail");
            WebOutString("<form method=""post"" action=""");
            WebOutLink("WebHBSMagicList.hal?sessionid=" & WebGetArg("sessionid") & "&WEBPAGE=" & WPr.Code & "&langcode=" & WebGetArg("langcode"));
            WebOutString(""">");
            WebOutString("<table width=""170"" border=""0"" cellpadding=""0"" cellspacing=""0"">");
            WebOutString("<tr valign=""top"">");
            WebOutString("<td width=""100%"">");
            WebOutString("<select name=dropdownmail onChange=""submit(this.form)"">");
            ToolWebGetTheText(20055,tstr);
            WebOutString("<option value=""-1"">" & tstr & "</option>"); //###
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(WPr,i,WPrw);
              GetConfInfo(WPrw.ConfCode,confname,confcode,maxmail);
              Confr.SerNr = confcode;
              if (ReadFirstMain(Confr,1,true)) then begin
                WebOutString("<option value=""" & i & """ ");
                if (selected==i) then begin
                  WebOutString("selected");
                end;
                if (nonblank(Confr.Comment)) then begin
                  confname = Confr.Comment;
                end;
                WebOutString(">" & confname &"</option>");
              end;
            end;
            WebOutString("</select>");
            WebOutString("</td>");
            ToolWebLineEnd;
            WebOutString("</table>");
            WebOutString("</form>");
            if ((selected>-1) and (selected<rwcnt)) then begin
              MatRowGet(WPr,selected,WPrw);
              wpconfcode = WPrw.ConfCode;
              res = ToolWebHBSPublicMain(WPrw.ConfCode,-1,-1,true,false);
              if (nonblank(WPrw.DropDownNewsCode)) then begin
                ToolWebHBSSecondPart;
                ToolWebHBSPublicNews(WPrw.DropDownNewsCode,150);
              end else begin
                if (nonblank(WPr.NewsCode)) then begin
                  ToolWebHBSSecondPart;
                  ToolWebHBSPublicNews(WPr.NewsCode,150);
                end;
              end;
            end else begin
              if (nonblank(WPr.NewsCode)) then begin
                ToolWebHBSSecondPart;
                ToolWebHBSPublicNews(WPr.NewsCode,150);
              end;
            end;
        end;
    end; // Switch
  end else begin
//    ToolWebHBSSecondPart;
  end;
  ToolWebHBSThirdPart;
//  ToolWebHBSSetProspect(wpconfcode);
  ToolWebEndPage(false);
  if (companyset) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure WebHBSBottom()
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  WebOutString("<link rel=""stylesheet"" href=""../lib/hfstyle.css"" type=""text/css"">");
  WebOutString("<body bgcolor=""#253366"">"); // background=""/gfx/bg01.gif"">");
  WebOutNL;
  WebOutString("<table cellspacing=""0"" cellpadding=""0"" border=""0"" width=""100%"">");
  WebOutNL;
  ToolWebLineStart;
  WebOutNL;
  WebOutString("<td><img src=""/gfx/tk03.gif""  height=""62"" width=""100%"" alt=""""><br></td>");
  WebOutNL;
  ToolWebLineEnd;
  WebOutNL;
  ToolWebEndTable;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebHBSEmptyFrames()
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  WebOutString("<link rel=""stylesheet"" href=""../lib/hfstyle.css"" type=""text/css"">");
  WebOutString("<body background=""/gfx/bg01.gif"">");
  ToolWebEndPage(false);
  return;
end;

global
procedure ToolWebHBSLeft()
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  WebOutString("<body bgcolor=""#FFFFFF"" background=""../picts/back2.gif"">");
  ToolWebEndPage(false);
  return;
end;

global
procedure ToolWebLeftMenu2(string whichone)
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  WebOutString("</head>");
  WebOutNL;
  WebOutString("<link rel=""stylesheet"" href=""../lib/hfstyle.css"" type=""text/css"">");
  WebOutString("<body class=""leftmenu"">");
  WebOutString("<table cellspacing=""0"" cellpadding=""0"" border=""0"" width=""212"">");

  ToolWebLineStart;
  WebOutString("<td width=""25"">&nbsp;</td>");
  WebOutString("<td width=""182"">");
//  WebOutString("<div align=""right"">");
/*
  WebOutString("<a href=""");
  WebOutLink("WebHBSMagicList.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & WebGetArg("langcode") & "&WEBPAGE=HOME");
  WebOutString(""" target=""content"">");
*/
  WebOutString("<img src=""gfx/logo_hansaworld.gif"" width=""181"" height=""26"" border=""0"" alt=""HansaWorld"" vspace=""10""><br>");
//  WebOutString("</a>");


//  WebOutString("</div>");
  WebOutString("</td>");
  ToolWebLineEnd;

  ToolWebLineStart;
  WebOutString("<td width=""25"">&nbsp;</td>");
  WebOutString("<td width=""182"">");
  WebOutString("<img src=""gfx/mnu_tk01.gif"" width=""181"" height=""40"" alt=""""><br>");
  WebOutString("</td>");
  ToolWebLineEnd;

  ToolWebLineStart;
  WebOutString("<td width=""25"">&nbsp;</td>");
  WebOutString("<td width=""182"">");
  WebOutString("<table cellspacing=""0"" cellpadding=""0"" border=""0"" width=""181"">");
  ToolWebLineStart;

  WebOutString("<td class=""mnu1"">");
  WebOutString("<img src=""gfx/1.gif"" width=""12"" height=""1"" alt=""""><br>");
  WebOutString("</td>");

  WebOutString("<td class=""mnu2"">");
  WebOutString("<table cellspacing=""0"" cellpadding=""0"" border=""0"" width=""157"">");
  ToolWebAddLeftMenubar(whichone,WebGetArg("clicked"),WebGetArg("langcode")); // WebLanguage(1)
  WebOutString("</table>");
  WebOutString("</td>");

  WebOutString("<td class=""mnu3"">");
  WebOutString("<img src=""gfx/1.gif"" width=""12"" height=""1"" alt=""""><br>");
  WebOutString("</td>");

  ToolWebLineEnd;
  WebOutString("</table>");
  WebOutString("</td>");
  ToolWebLineEnd;

  ToolWebLineStart;
  WebOutString("<td width=""25"">&nbsp;</td>");
  WebOutString("<td width=""182"">");
  WebOutString("<img src=""gfx/mnu_tk02.gif"" width=""181"" height=""32"" alt=""""><br>");
  WebOutString("</td>");
  ToolWebLineEnd;

  ToolWebEndTable;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebLeftMenu()
begin
  ToolWebLeftMenu2("LEFT");
  return;
end;

global
procedure WebLeftMenuExpress()
begin
  ToolWebLeftMenu2("LEFTX");
  return;
end;

global
procedure WebLeftMenuFirstOffice()
begin
  ToolWebLeftMenu2("LFTFO");
  return;
end;

global
procedure WebLeftShopMenu()
begin
  if (blank(CurrentCust)) then begin
    ToolWebLeftMenu2("SHOP");
  end else begin
    ToolWebLeftMenu2("SHOP2");
  end;
  return;
end;

global
procedure WebLeftFAQMenu()
begin
  if (blank(CurrentCust)) then begin
    ToolWebLeftMenu2("FAQ");
  end else begin
    ToolWebLeftMenu2("FAQ2");
  end;
  return;
end;

global
procedure WebTopMenu()
begin
  record LangBlock LBr;
  row LangBlock LBrw;
  Integer rwcnt,i;
  string 200 selected;
  Integer oldcomp;
  Boolean res;

  selected = WebGetArg("langcode");
  GetWebHBSDivLanguages(LBr);
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  WebOutString("<link rel=""stylesheet"" href=""../lib/hfstyle.css"" type=""text/css"">");
  WebOutString("<body background=""/gfx/bg01.gif"">");
  WebOutNL;
  WebOutString("<table cellspacing=""0"" cellpadding=""0"" border=""0"" width=""751"">");
  WebOutNL;
  ToolWebLineStart;
  WebOutNL;
  WebOutString("<td><img src=""/gfx/tk01.gif""  height=""11"" width=""751"" alt=""""><br></td>");
  WebOutNL;
  ToolWebLineEnd;
  WebOutNL;
  ToolWebLineStart;
  WebOutString("<td class=""header1"" height=""38"">");
  WebOutString("<form method=""post"" action=""");
  WebOutLink("WebHBSIndex.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&webpage=" & WebGetArg("WEBPAGE"));
  WebOutString(""" target=""_parent"">");
  WebOutString("<select name=langcode class=""s10"" onChange=""submit(this.form)"">");
// <a href="javascript:window.location.reload()">Click here to reload the window.</a>
//  WebOutString("<select name=langcode class=""s10"" onChange=""javascript:window.location.reload()"">");
  rwcnt = MatRowCnt(LBr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(LBr,i,LBrw);
    if (nonblank(LBrw.Code)) then begin
      WebOutString("<option value=""" & LBrw.Code & """ ");
      if (selected==LBrw.Code) then begin
        WebOutString("selected");
      end;
      WebOutString(">");
      WebOutString(LBrw.Comment);
      WebOutString("</option>");
    end;
  end;
  WebOutString("</select>");
  WebOutString("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
  WebOutString("</form>");
  WebOutString("</td>");
  ToolWebLineEnd;
  WebOutNL;

  ToolWebEndTable;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebTopMenu2(string whichone)
begin
  ToolWebStartPage;
  ToolWebHBSSetMainTitle;
  ToolWebHBSStartBody("","");
  WebOutString("<table align=""right"" cellspacing=""0"" cellpadding=""0"" border=""0"" width=""*"">");
  WebOutNL;
  ToolWebLineStart;
  WebOutNL;
  ToolWebAddTopMenubar(whichone,WebGetArg("langcode")); // WebLanguage(1));
  WebOutNL;
  WebOutString("<TD>");
  WebOutString("&nbsp;&nbsp;&nbsp;&nbsp;");
  WebOutString("</td>");
//  WebOutString("<TD>");
//  WebOutString("<div align=""right"">");
//  WebOutString("<img src=""gfx/logo_hansaworld.gif"" width=""181"" height=""26"" border=""0"" alt=""HansaWorld"" vspace=""10""><br>");
//  WebOutString("</div>");
//  WebOutString("</td>");
  WebOutNL;
  ToolWebLineEnd;
  WebOutNL;
  ToolWebEndTable;
  ToolWebEndPage(false);
  return;
end;

global
procedure WebTopMenuUnder()
begin
  WebTopMenu2("TOP");
  return;
end;

global
procedure WebTopMenuUnderExpress()
begin
  WebTopMenu2("TOPX");
  return;
end;

global
procedure WebTopMenuUnderFirstOffice()
begin
  WebTopMenu2("TOPFO");
  return;
end;

global
procedure WebTopShopMenu()
begin
  WebTopMenu2("TSHOP");
  return;
end;

global
procedure WebTopFAQMenu()
begin
  WebTopMenu2("TFAQ");
  return;
end;

procedure ToolWebHBSPreIndex()
begin
  record WebKeywordsBlock WKr;
  row WebKeywordsBlock WKrw;
  Integer i,rwcnt,cnt;
  
  BlockLoad(WKr);
  ToolWebStartPage;
  WebOutString("<title>HansaWorld - Integrated ERP and CRM</title>");
  WebOutNL;
  WebOutString("<meta http-equiv=""Content-Type"" content=""text/html; charset=iso-8859-1"">");
  WebOutNL;
  WebOutString("<meta name=""robots"" content=""index, follow""");
  WebOutNL;
  WebOutString("<meta name=""description"" content=""");
  WebOutNL;
  WebOutString("A global provider of Business Information Systems for small, medium and large companies and organisations. ");
  WebOutString("TCP/IP based client/server on multiplattform: Windows, Mac OS, Linux and AS400. Supports WAN, mobile solutions and ASP. ");
  WebOutString("Provider of HansaWorld, Office/2, FirstOffice and FirstContact.");
  WebOutString(""">");
  WebOutNL;
  WebOutString("<meta name=""keywords"" content=""");
  rwcnt = MatRowCnt(WKr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(WKr,i,WKrw);
    if (nonblank(WKrw.KeyWord)) then begin
      WebOutString(WKrw.KeyWord);
      if (i<(rwcnt-1)) then begin
        WebOutString(", ");
      end;
    end;
  end;
  WebOutString(""">");
  WebOutNL;
  WebOutString("</head>");
  WebOutNL;
  return;
end;

procedure ToolWebHBSAfterIndex()
begin
  record WebKeywordsBlock WKr;
  row WebKeywordsBlock WKrw;
  Integer i,rwcnt,cnt;

  cnt = 0;
  rwcnt = MatRowCnt(WKr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(WKr,i,WKrw);
    if (nonblank(WKrw.KeyWord)) then begin
      cnt = cnt + 1;
      if (cnt==1) then begin
        WebOutString("<!-- ");
      end;
      WebOutString(" " & WKrw.KeyWord);
      if (cnt==5) then begin
        WebOutNL;
        cnt = 0;
      end;
    end;
  end;
  return;
end;

procedure ToolWebHBSIndex2(string leftmenu,string topmenu,string linkmid,string midfunction,Boolean failedlogin)
begin
  string 200 lang;
  
  ToolWebHBSPreIndex;
  lang = GetWebLanguage;
  WebOutString("<frameset rows=""*"" cols=""*,740,*"" frameborder=""NO"" border=""0"" framespacing=""0"">"); 
  WebOutNL;
  WebOutString("  <frame src=""/WebHBSEmptyFrames.hal"" noresize marginwidth=""0"" marginheight=""0"" scrolling=""NO"" name=""upmenu"">");
  WebOutNL;
  WebOutString("  <frameset rows=""49,*,62"" cols=""**"" frameborder=""NO"" border=""0"" framespacing=""0"">"); 
  WebOutNL;
  WebOutString("    <frame src=""/WebTopMenu.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & lang & """ noresize marginwidth=""0"" marginheight=""0"" scrolling=""NO"" name=""upmenu"">");
  WebOutNL;
  WebOutString("    <frameset cols=""213,*"" rows=""*"" frameborder=""NO"" border=""0"" framespacing=""0"">");
  WebOutNL;
  WebOutString("      <frame src=""/" & leftmenu & ".hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & lang & """ marginwidth=""0"" marginheight=""0"" noresize scrolling=""NO"" name=""menu"">");
  WebOutNL;
  WebOutString("      <frameset rows=""28,*"" cols=""*"" frameborder=""NO"" border=""0"" framespacing=""0"">");
  WebOutNL;
  WebOutString("        <frame src=""/" & topmenu & ".hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & lang & """ noresize scrolling=""NO"" name=""topunder"">");
  WebOutNL;
  if (failedlogin) then begin
    WebOutString("      <frame src=""/" & midfunction & ".hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company")  & "&failed_log_in=yes" & "&langcode=" & lang & "&WEBPAGE=" & linkmid & """ name=""content"">");
  end else begin
     WebOutString("   <frame src=""/" & midfunction & ".hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & lang & "&WEBPAGE=" & linkmid & """ name=""content"">");
  end;
  WebOutNL;
  WebOutString("      </frameset>");
  WebOutNL;
  WebOutString("    </frameset>");
  WebOutNL;
  WebOutString("    <frame src=""/WebHBSBottom.hal?sessionid=" & WebGetArg("sessionid") & "&company=" & WebGetArg("company") & "&langcode=" & lang & """ name=""bottom"" marginwidth=""0"" marginheight=""0"" noresize scrolling=""NO"">");
  WebOutNL;
  WebOutString("  </frameset>");
  WebOutNL;
  WebOutString("  <frame src=""/WebHBSEmptyFrames.hal"" noresize marginwidth=""0"" marginheight=""0"" scrolling=""NO"" name=""upmenu"">");
  WebOutNL;
  WebOutString("</frameset>");
  WebOutNL;
  WebOutString("<noframes><body bgcolor=""#FFFFFF"">");
  WebOutNL;
  WebOutString("</body></noframes>");
  WebOutNL;
  WebOutString("</html>");
  WebOutNL;
  ToolWebHBSAfterIndex;
  return;
end;

global
procedure WebHBSIndex()
begin
  switch (WebHost) begin
    case "www.hwexpress.com":   ToolWebHBSIndex2("WebLeftMenuExpress","WebTopMenuUnderExpress","HOMEEXPRESS","WebHBSMagicList",false);
    case     "hwexpress.com":   ToolWebHBSIndex2("WebLeftMenuExpress","WebTopMenuUnderExpress","HOMEEXPRESS","WebHBSMagicList",false);
    case "www.firstoffice.fi":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case     "firstoffice.fi":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case "www.firstoffice.nu":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case     "firstoffice.nu":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case "www.firstoffice.org": ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case     "firstoffice.org": ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case "www.firstoffice.dk":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case     "firstoffice.dk":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case "www.firstoffice.lv":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    case     "firstoffice.lv":  ToolWebHBSIndex2("WebLeftMenuFirstOffice","WebTopMenuUnderFirstOffice","HOMEFIRSTOFFICE","WebHBSMagicList",false);
    otherwise                   ToolWebHBSIndex2("WebLeftMenu","WebTopMenuUnder","HOME","WebHBSMagicList",false);
  end;      
  return;
end;

global
procedure WebHBSShopIndex()
begin
  ToolWebHBSIndex2("WebLeftShopMenu","WebTopShopMenu","","WebHBSLogin",false);
  return;
end;

global
procedure WebHBSShopIndexFail()
begin
  ToolWebHBSIndex2("WebLeftShopMenu","WebTopShopMenu","","WebHBSLogin",true);
  return;
end;

global
procedure WebHBSFAQIndex()
begin
  ToolWebHBSIndex2("WebLeftFAQMenu","WebTopFAQMenu","","WebHBSFAQLogin",false);
  return;
end;

global
procedure WebHBSFAQIndexFail()
begin
  ToolWebHBSIndex2("WebLeftFAQMenu","WebTopFAQMenu","","WebHBSFAQLogin",true);
  return;
end;

global
updating procedure WebHBSLogout()
begin
  WebLogout;
  WebHBSIndex;
  return;
end;

global
procedure WebHBSIndexLoggedIn()
begin
  WebHBSFAQIndex;
  return;
end;

