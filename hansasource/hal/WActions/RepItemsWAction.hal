function boolean RepItemsDClassItemEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  boolean res;
  Record RepItemsVc RepItemsr;
  Row RepItemsVc RepItemsrw;
  Record INVc INr;
 
  res = true;
  if (changedf!=0) then begin
    GetWindowRecord(wn,RepItemsr);
    DeselectWindow(wn,false);
    MatrowGet(RepItemsr,rownr,RepItemsrw);
    INr.Code = RepItemsrw.Item;
    if readfirstmain(INr,1,true) then begin
      RepItemsrw.CUName = INr.Name;
      MatrowPut(RepItemsr,rownr,RepItemsrw);
      PutWindowRecord(wn,RepItemsr);
    end;
  end;
  RepItemsDClassItemEFAfter=res;
  return;
end;

global
function Boolean RepItemsDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Item": res = RepItemsDClassItemEFAfter(wn,fn,rownr,changed);
  end;
  RepItemsDClassAfterEditField = res;
  RETURN;
END;


global
procedure JobAddRepetitivesm()
begin
  Integer wn;
  Record JobVc Jobr; 
  Record RepItemsVc RepItemsr;
  
  Getwindowrecord(CurWindow,Jobr);
  //DeselectWindow(wn,false);
  RepItemsr.SerNr = Jobr.SerNr;
  if not (ReadFirstMain(RepItemsr,1,true)) then begin
    RecordNew(RepItemsr);
    RepItemsr.SerNr = Jobr.SerNr;
    wn = OpenWindow("RepItemsDClass",1,0,"","",RepItemsr);
  end else begin
    wn = OpenWindow("RepItemsDClass",1,0,"","",RepItemsr);
  end;
  return;
end;

