external procedure ResAvSumup(var record ResAvVc);

global
function Boolean ResAvDClassOnOverStrike(Integer wn,Integer rownr)
BEGIN
  record ResAvVc ResAvr;
  Boolean res;

  if (rownr>=0) then begin
    GetWindowRecord(wn,ResAvr);    
    ResAvSumup(ResAvr);
    PutWindowRecord(wn,ResAvr);    
  end;
  res = true;
  ResAvDClassOnOverStrike = true;
  RETURN;
END;

global
function Boolean ResAvDClassOKFlagButtonAction(Integer wn,Integer value)
BEGIN
  record ResAvVc ResAvr;
  record ResAvVc ResAv2r;
  Boolean res;
  Integer updatemode,normalmode;

  res = true;
  normalmode = 0;
  updatemode = 2;
  GetWindowRecord(wn,ResAvr);    
  GetPrevWindowRecord(wn,ResAv2r);    

  if (WindowState(wn)==updatemode) then begin
    if (ResAv2r.OKFlag!=0) then begin
      res = false; 
    end;   
  end;        
  if (WindowState(wn)==normalmode) then begin
    if (ResAvr.OKFlag!=0) then begin
      res = false;
    end;
  end;        
  ResAvDClassOKFlagButtonAction = res;
  RETURN;
END;

global
function Boolean ResAvDClassPrelFlagButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  
  res = ResAvDClassOKFlagButtonAction(wn,value);
  ResAvDClassPrelFlagButtonAction = res;
  RETURN;
END;

global
function Boolean ResAvDClassIncludePackageButtonAction(Integer wn,Integer value)
BEGIN
  record ResAvVc ResAvr;
  record ResAvVc ResAv2r;
  Integer updatemode,normalmode;
  Boolean res;

  normalmode = 0;
  updatemode = 2;
  res = ResAvDClassOKFlagButtonAction(wn,value);
  if (res) then begin
  DeselectWindow(wn,false);
  if (WindowState(wn)==updatemode) then begin
    GetWindowRecord(wn,ResAvr);    
    if (ResAv2r.PrelFlag!=0) then begin
      res = false; 
    end;       
  end;        
  if (WindowState(wn)==normalmode) then begin
    GetPrevWindowRecord(wn,ResAv2r);    
    if (ResAvr.PrelFlag!=0) then begin
      res = false; 
    end;       
  end;        
  end;
  ResAvDClassIncludePackageButtonAction = res;
  RETURN;
END;

global
function Boolean ResAvDClassClosedButtonAction(Integer wn,Integer value)
BEGIN
  record ResAvVc ResAvr;
  record ResAvVc ResAv2r;
  Boolean res;
  Integer updatemode,normalmode;

  res = true;
  normalmode = 0;
  updatemode = 2;
  GetWindowRecord(wn,ResAvr);    
  GetPrevWindowRecord(wn,ResAv2r);    

  if (WindowState(wn)==updatemode) then begin
    if (ResAv2r.Closed!=0) then begin
      res = false; 
    end;
    if (ResAvr.OKFlag!=0) then begin
      res = false; 
    end;       
    if (ResAv2r.PrelFlag!=0) then begin
      res = false; 
    end;       
  end;        
  if (WindowState(wn)==normalmode) then begin
    if (ResAvr.Closed!=0) then begin
      res = false;
    end;
    if (ResAvr.OKFlag!=0) then begin
      res = false; 
    end;       
    if (ResAvr.PrelFlag!=0) then begin
      res = false; 
    end;       
  end;        
  ResAvDClassClosedButtonAction = res;
  RETURN;
END;

global
function Boolean ResAvDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;  
  record ResAvVc ResAvr;

  if (changed!=0) then begin
    res = true;
    if (wnst==2) then begin
      GetPrevWindowRecord(wn,ResAvr);
    end else begin
      GetWindowRecord(wn,ResAvr);
    end;
    if ((ResAvr.OKFlag!=0) or (ResAvr.Closed!=0) or (ResAvr.PrelFlag!=0)) then begin
      switch (fieldname) begin
        case "LangCode": res = true;
        otherwise res = false;
      end;      
    end;
  end;  
  ResAvDClassActiveEditField = res;
  RETURN;
END;

