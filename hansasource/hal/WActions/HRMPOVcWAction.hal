function Boolean HRMJPDClassEmployeeEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  Boolean res;
  record HRMJPVc HRMJPr;
  row HRMJPVc HRMJPrw;
  record CUVc CUr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,HRMJPr);
    MatRowGet(HRMJPr,rownr,HRMJPrw);
    CUr.Code = HRMJPrw.Employee;
    ReadFIrstMain(CUr,1,true);
    HRMJPrw.Name = CUr.Name;
    MatRowPut(HRMJPr,rownr,HRMJPrw);
    PutWindowRecord(wn,HRMJPr);
  end;
  HRMJPDClassEmployeeEFAfter = res;
  return;
end;


global
function Boolean HRMJPDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "Employee": res = HRMJPDClassEmployeeEFAfter(wn,rownr,changed!=0);
  end;
  HRMJPDClassAfterEditField = res;
  return;
end;

global
function Boolean HRMJPDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record HRMJPVc HRMJPr;
  
  res = true;
  switch (wnst) begin
    case Rs_update:
      GetPrevWindowRecord(wn,HRMJPr);
      if (HRMJPr.OKFlag!=0) then begin
        res = false;
      end;
  end;
  HRMJPDClassActiveEditField = res;
  return;
end;

global
function Boolean HRMJPDClassOKFlagButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record HRMJPVc HRMJPr;
  Integer err;
 
  res = true;
  switch (WindowState(wn)) begin
    case Rs_normal:
      GetWindowRecord(wn,HRMJPr);
      if (HRMJPr.OKFlag!=0) then begin
        res = false;
        if (UserCanAction("UnOKAll",false)) then begin
          res = true;
        end;
      end;
    case Rs_update:
      GetPrevWindowRecord(wn,HRMJPr);
      if (HRMJPr.OKFlag!=0) then begin
        res = false;
      end;
  end;  
  HRMJPDClassOKFlagButtonAction = res;
  return;
end;
