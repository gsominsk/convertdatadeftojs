global
function Boolean EInvoiceQueDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  
  switch (fieldname) begin
    case "Comment": res = true;
  end;
  EInvoiceQueDClassActiveEditField = res;
  RETURN;
END;

global
updating procedure EInvoiceQueDsm()
BEGIN
  record EInvoiceQueVc EInvoiceQuer;
  Integer wn;
  
  wn = CurWindow;
  GetWindowRecord(wn,EInvoiceQuer);
  if (EInvoiceQuer.Status!=0) then begin
    EInvoiceQuer.Status = 0;
    if (RecordStore(EInvoiceQuer,true)) then begin end;
  end;
  RETURN;
END;

global
updating procedure EInvoiceQueOpenRecordDsm()
begin
  record EInvoiceQueVc EIQr;
  record IVVc IVr;
  Integer wn,nwn;
  
  wn = CurWindow;
  GetWindowRecord(wn,EIQr);
  switch (EIQr.FileName) begin
    case "IVVc":
      IVr.SerNr = EIQr.RecSerNr;
      if (ReadFirstMain(IVr,1,true)) then begin 
        nwn = OpenWindow("IVDClass",0,0,"","",IVr);
      end;
    case "estIVVc":
      IVr.SerNr = EIQr.RecSerNr;
      if (ReadFirstMain(IVr,1,true)) then begin 
        nwn = OpenWindow("IVDClass",0,0,"","",IVr);
      end;
  end;
  return;
end;

global
updating procedure EInvoiceQueAgainLsm()
BEGIN
  record EInvoiceQueVc EInvoiceQuer;
  Integer wn,i;
  
  wn = CurWindow;
  i = 1;
  while (GetRecordFromBrowse(EInvoiceQuer,wn,i)) begin
    if (EInvoiceQuer.Status!=0) then begin
      EInvoiceQuer.Status = 0;
      if (RecordStore(EInvoiceQuer,true)) then begin end;
    end;
    i = i + 1;
  end;
  UpdateBrowses("EInvoiceQueVc");
  RETURN;
END;

global
updating procedure EInvoiceQueSentLsm()
BEGIN
  record EInvoiceQueVc EInvoiceQuer;
  Integer wn,i;
  
  wn = CurWindow;
  i = 1;
  while (GetRecordFromBrowse(EInvoiceQuer,wn,i)) begin
    if (EInvoiceQuer.Status==0) then begin
      EInvoiceQuer.Status = 1;
      if (RecordStore(EInvoiceQuer,true)) then begin end;
    end;
    i = i + 1;
  end;
  UpdateBrowses("EInvoiceQueVc");
  RETURN;
END;
