function Boolean HRMSEDClassEmployeeEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record HRMSEVc HRMSEr;
  record CUVc CUr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,HRMSEr);
    CUr.Code = HRMSEr.Employee;
    ReadFIrstMain(CUr,1,true);
    HRMSEr.Name = CUr.Name;
    HRMSEr.JobTitle = CUr.JobDesc;
    PutWindowRecord(wn,HRMSEr);
  end;
  HRMSEDClassEmployeeEFAfter = res;
  return;
end;

function Boolean HRMSEDClassSuperiorEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record HRMSEVc HRMSEr;
  record UserVc Userr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,HRMSEr);
    Userr.Code = HRMSEr.Superior;
    ReadFIrstMain(Userr,1,true);
    HRMSEr.SuperiorName = Userr.Name;
    PutWindowRecord(wn,HRMSEr);
  end;
  HRMSEDClassSuperiorEFAfter = res;
  return;
end;

function Boolean HRMSEDClassSkillEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  Boolean res;
  record HRMSEVc HRMSEr;
  row HRMSEVc HRMSErw;
  record HRMSkillVc HRMSr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,HRMSEr);
    MatRowGet(HRMSEr,rownr,HRMSErw);
    HRMSr.Code = HRMSErw.Skill;
    ReadFIrstMain(HRMSr,1,true);
    HRMSErw.SkillComment = HRMSr.Name;
    MatRowPut(HRMSEr,rownr,HRMSErw);
    PutWindowRecord(wn,HRMSEr);
  end;
  HRMSEDClassSkillEFAfter = res;
  return;
end;

function Boolean HRMSEDClassRatingEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  Boolean res;
  record HRMSEVc HRMSEr;
  row HRMSEVc HRMSErw;
  record HRMRatingVc HRMRr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,HRMSEr);
    MatRowGet(HRMSEr,rownr,HRMSErw);
    HRMRr.Code = HRMSErw.Rating;
    ReadFIrstMain(HRMRr,1,true);
    HRMSErw.RatingComment = HRMRr.Name;
    MatRowPut(HRMSEr,rownr,HRMSErw);
    PutWindowRecord(wn,HRMSEr);
  end;
  HRMSEDClassRatingEFAfter = res;
  return;
end;


global
function Boolean HRMSEDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "Employee": res = HRMSEDClassEmployeeEFAfter(wn,changed!=0);
    case "Superior": res = HRMSEDClassSuperiorEFAfter(wn,changed!=0);
    case "Skill": res = HRMSEDClassSkillEFAfter(wn,rownr,changed!=0);
    case "Rating": res = HRMSEDClassRatingEFAfter(wn,rownr,changed!=0);
  end;
  HRMSEDClassAfterEditField = res;
  return;
end;

global
function Boolean HRMSEDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record HRMSEVc HRMSEr;
  
  res = true;
  switch (wnst) begin
    case Rs_update:
      GetPrevWindowRecord(wn,HRMSEr);
      if (HRMSEr.OKFlag!=0) then begin
        res = false;
      end;
  end;
  HRMSEDClassActiveEditField = res;
  return;
end;

global
function Boolean HRMSEDClassOKFlagButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record HRMSEVc HRMSEr;
  Integer err;
 
  res = true;
  switch (WindowState(wn)) begin
    case Rs_normal:
      GetWindowRecord(wn,HRMSEr);
      if (HRMSEr.OKFlag!=0) then begin
        res = false;
        if (UserCanAction("UnOKAll",false)) then begin
          res = true;
        end;
      end;
    case Rs_update:
      GetPrevWindowRecord(wn,HRMSEr);
      if (HRMSEr.OKFlag!=0) then begin
        res = false;
      end;
  end;  
  HRMSEDClassOKFlagButtonAction = res;
  return;
end;
