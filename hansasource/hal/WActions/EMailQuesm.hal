remote updating function Boolean RecListAction_rlEMailQueUnread(var record EMailQueVc);
remote updating function Boolean DoDeleteEMailQuesm(record EMailQueVc);

global
updating procedure MarknotReadEMailQueLsm()
BEGIN
  Integer wn,i;
  record EMailQueVc EMailQuer;

  wn = CurWindow;
  i = 1;
  while (GetRecordFromBrowse(EMailQuer,wn,i)) begin  
    if (RecListAction_rlEMailQueUnread(EMailQuer)) then begin end;
    i = i + 1;
  end;
  UpdateBrowses("MailVc");
  RETURN;
END;

global
updating procedure MarknotReadEMailQueDsm()
BEGIN
  Integer wn,i;
  record EMailQueVc EMailQuer;

  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,EMailQuer);
  if (RecListAction_rlEMailQueUnread(EMailQuer)) then begin end;
  UpdateBrowses("EMailQueVc");
  RETURN;
END;

global
procedure MailHistoryEMailQueLsm()
BEGIN
  Integer wn;
  record EMailQueVc EMailQuer;
  record RcVc RepSpec;

  wn = CurWindow;
  if (ReadMarkedRecord(wn,EMailQuer)) begin
    if (blank(EMailQuer.FileName) or EMailQuer.FileName=="MailVc") then begin
      RepSpec.long1 = EMailQuer.OrgSerNr;
      RepSpec.Media = mtScreen;
      RepSpec.repname = "MailReadRn";
      RunReport(RepSpec,0);
    end;
  end;
  RETURN;
END;

global
updating procedure DeleteEMailQuesm()
BEGIN
  Integer wn,i;
  record EMailQueVc EMailQuer;

  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,EMailQuer);
  if (DoDeleteEMailQuesm(EMailQuer)) then begin
    CloseWindow(wn);
  end;
  UpdateBrowses("EMailQueVc");
  RETURN;
END;

