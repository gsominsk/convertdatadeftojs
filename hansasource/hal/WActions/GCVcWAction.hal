remote updating function Boolean RecordAction_rlGCLOK(var record GCVc,Boolean);

global
function Boolean GCDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record GCVc GCr;
  
  if (wnst!=2) then begin//Rs_update
    res = true;
  end else begin
    res = false;
    GetPrevWindowRecord(wn,GCr);
    if (GCr.OKFlag!=0) then begin
      switch (fieldname) begin
        case "Comment": res = true;
      end;
    end else begin
      res = true;
    end;
  end;
  GCDClassActiveEditField = res;
  RETURN;
END;

global
updating procedure OKGCLsm()
BEGIN
  Integer wn;
  record GCVc GCr;
  LongInt i;
  Boolean tmpf;
  string 20 docname;

  wn = CurWindow;
  if (UserCanAction("GCOK",true)) then begin
    i = 1;
    while (GetRecordFromBrowse(GCr,wn,i)) begin
      if (RecordAction_rlGCLOK(GCr,true)) then begin      
      end;
      i = i + 1;
    end;  
    UpdateBrowses("GCVc");
  end else begin
    MessageBox(1274,StringFromStringSet(3,"GCOK"));
  end;
  
  RETURN;
END;

global
function Boolean GCDClassOKFlagButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record GCVc GCr;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,GCr);
    if (GCr.OKFlag!=0) then begin
      res = false;
      if (UserCanAction("UnOKAll",false)) then begin
        res = true;
      end;
    end;
  end;  
  if (WindowState(wn)==updatemode) then begin
    GetPrevWindowRecord(wn,GCr);
    if (GCr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  GCDClassOKFlagButtonAction = res;
  RETURN;
END;

function Boolean GCDClassTransDateEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record GCVc GCr;
  record GCBlock GCb;

  if (changedf) then begin
    BlockLoad(GCb);
    GetWindowRecord(wn,GCr);
    GCr.ExpiryDate = AddMonth(GCr.TransDate,GCb.ExpiryMonths);
    PutWindowRecord(wn,GCr);
    res = true;
  end;
  GCDClassTransDateEFAfter = res;
  return;
end;

global
function Boolean GCDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "TransDate": res = GCDClassTransDateEFAfter(wn,changed!=0);
  end;
  GCDClassAfterEditField = res;
  return;
end;
