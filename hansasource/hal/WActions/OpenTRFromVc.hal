
procedure OpenTRFromVc(string filename,LongInt sernr)
BEGIN
  record TRVc TRr;
  Boolean openf;
  Integer nwn;

  if (UserCanAction("OpenTRFromSpec",true)) then begin
//  if ((UserCanAction("OpenTRFromSpec",false)) or (UserModuleAccess("modNL")!=5)) then begin
//isnt it wierd logic? 
//if u have no access to NL u can disable OpenTRFromSpec menu
//but if u have no access to NL then this menu is disabled by default...
    TRr.Number = sernr;
    switch (filename) begin
      case "ProdVc": TRr.IntYc = ProdYc; openf = true;
      case "IVVc": TRr.IntYc = IVYc; openf = true;
      case "IPVc": TRr.IntYc = IPYc; openf = true;
      case "VIVc": TRr.IntYc = VIYc; openf = true;
      case "VI2Vc": TRr.IntYc = PVYc; openf = true;
      case "OPVc": TRr.IntYc = OPYc; openf = true;
      case "PUVc": TRr.IntYc = PUYc; openf = true;
      case "VariancePUVc": TRr.IntYc = VariancePUYc; openf = true;
      case "SHVc": TRr.IntYc = SHYc; openf = true;
      case "DropSHVc": TRr.IntYc = DropSHYc; openf = true;
      case "ExpVc": TRr.IntYc = ExpYc; openf = true;
      case "PPVc": TRr.IntYc = PPYc; openf = true;
      case "StockMovVc": TRr.IntYc = STMovYc; openf = true;
      case "SentStockMovVc": TRr.IntYc = SentSTMovYc; openf = true;
      case "CLInVc": TRr.IntYc = CLInYc; openf = true;
      case "CLOutVc": TRr.IntYc = CLOutYc; openf = true;
      case "SDVc": TRr.IntYc = SDYc; openf = true;
      case "SRVc": TRr.IntYc = SRYc; openf = true;
      case "WSVc": TRr.IntYc = WSYc; openf = true;
      case "CheckVc": TRr.IntYc = CheckYc; openf = true;
      case "OwnCheckVc": TRr.IntYc = OwnCheckYc; openf = true;
      case "ChqDepVc": TRr.IntYc = ChqDepYc; openf = true;
      case "AT2WrofVc": TRr.IntYc = AT2WrofYc; openf = true;
      case "TSVc": TRr.IntYc = TSYc; openf = true;
      case "ActVc": TRr.IntYc = ActYc; openf = true;
      case "VATIVVc": TRr.IntYc = VATIVYc; openf = true;
      case "VATVIVc": TRr.IntYc = VATVIYc; openf = true;        
      case "INTransferVc": TRr.IntYc = INTransferYc; openf = true;
      case "LateCostVc": TRr.IntYc = LateCostYc; openf = true;        
      case "RetVc": TRr.IntYc = RetYc; openf = true;
      case "RetPUVc": TRr.IntYc = RetPUYc; openf = true;        
      case "SalaryCalcVc": TRr.IntYc = SalaryCalcYc; openf = true;        
      case "SalaryPaymentVc": TRr.IntYc = SalaryPaymentYc; openf = true;        
      case "SalaryPaymentVc": TRr.IntYc = SalaryPayment2Yc; openf = true;        
      case "IntIVVc": TRr.IntYc = IntIVYc; openf = true;
      case "POSBalanceVc": TRr.IntYc = RestAccYc; openf = true;
      case "ProdOperationVc": TRr.IntYc = ProdOperationYc; openf = true;
      case "CredManVc": TRr.IntYc = CredManYc; openf = true;
      case "BuyBackReconVc": TRr.IntYc = BuyBackReconYc; openf = true;
      case "ForexTRVc": TRr.IntYc = ForexTRYc; openf = true;
    end;
    if (openf) then begin
      if (ReadFirstMain(TRr,2,true)) then begin
        nwn = OpenWindow("TRDClass",1,0,"","",TRr);
      end;
    end;
  end else begin
    Beep;
  end;
  RETURN;
END;

global
procedure OpenTRFromForexTR()
begin  
  record ForexTRVc FTRr;
  
  GetWindowRecord(CurWindow,FTRr);
  OpenTRFromVc("ForexTRVc",FTRr.SerNr);
  return;
end;

global
procedure OpenTRFromProd()
BEGIN  
  record ProdVc Prodr;
  
  GetWindowRecord(CurWindow,Prodr);
  OpenTRFromVc("ProdVc",Prodr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromProdOperation()
begin  
  record ProdOperationVc ProdOperationr;
  
  GetWindowRecord(CurWindow,ProdOperationr);
  OpenTRFromVc("ProdOperationVc",ProdOperationr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromIV()
BEGIN  
  record IVVc IVr;
  
  GetWindowRecord(CurWindow,IVr);
  OpenTRFromVc("IVVc",IVr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromIntIV()
BEGIN  
  record IntIVVc IntIVr;
  
  GetWindowRecord(CurWindow,IntIVr);
  OpenTRFromVc("IntIVVc",IntIVr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromBuyBack()
BEGIN  
  record BuyBackVc BBr;
  
  GetWindowRecord(CurWindow,BBr);
  OpenTRFromVc("BuyBackReconVc",BBr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromIP()
BEGIN  
  record IPVc IPr;
  
  GetWindowRecord(CurWindow,IPr);
  OpenTRFromVc("IPVc",IPr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromPOSBalance()
BEGIN  
  record POSBalanceVc POSBalancer;
  
  GetWindowRecord(CurWindow,POSBalancer);
  OpenTRFromVc("POSBalanceVc",POSBalancer.SerNr);
  RETURN;
END;

global
procedure OpenTRFromVI()
BEGIN  
  record VIVc VIr;
  
  GetWindowRecord(CurWindow,VIr);
  OpenTRFromVc("VIVc",VIr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromVI2()
BEGIN  
  record VIVc VIr;
  
  GetWindowRecord(CurWindow,VIr);
  OpenTRFromVc("VI2Vc",VIr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromOP()
BEGIN  
  record OPVc OPr;
  
  GetWindowRecord(CurWindow,OPr);
  OpenTRFromVc("OPVc",OPr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromINTransfer()
BEGIN  
  record INTransferVc INTransferr;
  
  GetWindowRecord(CurWindow,INTransferr);
  OpenTRFromVc("INTransferVc",INTransferr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromRetPU()
BEGIN  
  record RetPUVc RetPUr;
  
  GetWindowRecord(CurWindow,RetPUr);
  OpenTRFromVc("RetPUVc",RetPUr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromPU()
BEGIN  
  record PUVc PUr;
  
  GetWindowRecord(CurWindow,PUr);
  OpenTRFromVc("PUVc",PUr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromSH()
BEGIN  
  record SHVc SHr;
  
  GetWindowRecord(CurWindow,SHr);
  OpenTRFromVc("SHVc",SHr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromDropSH()
BEGIN  
  record DropSHVc DropSHr;
  
  GetWindowRecord(CurWindow,DropSHr);
  OpenTRFromVc("DropSHVc",DropSHr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromExp()
BEGIN  
  record ExpVc Expr;
  
  GetWindowRecord(CurWindow,Expr);
  OpenTRFromVc("ExpVc",Expr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromPP()
BEGIN  
  record PPVc PPr;
  
  GetWindowRecord(CurWindow,PPr);
  OpenTRFromVc("PPVc",PPr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromStockMov()
BEGIN  
  record StockMovVc StockMovr;
  
  GetWindowRecord(CurWindow,StockMovr);
  OpenTRFromVc("StockMovVc",StockMovr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromStockMovSent()
BEGIN  
  record StockMovVc StockMovr;
  
  GetWindowRecord(CurWindow,StockMovr);
  OpenTRFromVc("SentStockMovVc",StockMovr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromCLIn()
BEGIN  
  record CLInVc CLInr;
  
  GetWindowRecord(CurWindow,CLInr);
  OpenTRFromVc("CLInVc",CLInr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromCLOut()
BEGIN  
  record CLOutVc CLOutr;
  
  GetWindowRecord(CurWindow,CLOutr);
  OpenTRFromVc("CLOutVc",CLOutr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromSD()
BEGIN  
  record SDVc SDr;
  
  GetWindowRecord(CurWindow,SDr);
  OpenTRFromVc("SDVc",SDr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromSR()
begin  
  record SRVc SRr;
  
  GetWindowRecord(CurWindow,SRr);
  OpenTRFromVc("SRVc",SRr.SerNr);
  return;
end;

global
procedure OpenTRFromRet()
BEGIN  
  record RetVc Retr;
  
  GetWindowRecord(CurWindow,Retr);
  OpenTRFromVc("RetVc",Retr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromWS()
BEGIN  
  record WSVc WSr;
  
  GetWindowRecord(CurWindow,WSr);
  OpenTRFromVc("WSVc",WSr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromCheck()
BEGIN  
  record CheckVc Checkr;
  
  GetWindowRecord(CurWindow,Checkr);
  OpenTRFromVc("CheckVc",Checkr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromOwnCheck()
BEGIN  
  record OwnCheckVc OwnCheckr;
  
  GetWindowRecord(CurWindow,OwnCheckr);
  OpenTRFromVc("OwnCheckVc",OwnCheckr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromAT2Wrof()
BEGIN  
  record AT2WrofVc AT2Wrofr;
  
  GetWindowRecord(CurWindow,AT2Wrofr);
  OpenTRFromVc("AT2WrofVc",AT2Wrofr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromTS()
BEGIN  
  record TSVc TSr;
  
  GetWindowRecord(CurWindow,TSr);
  OpenTRFromVc("TSVc",TSr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromAct()
BEGIN  
  record ActVc Actr;
  
  GetWindowRecord(CurWindow,Actr);
  OpenTRFromVc("ActVc",Actr.TRSerNr);
  RETURN;
END;

global
procedure OpenTRFromVATIV()
BEGIN  
  record VATIVVc VATIVr;
  
  GetWindowRecord(CurWindow,VATIVr);
  OpenTRFromVc("VATIVVc",VATIVr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromVATVI()
BEGIN  
  record VATVIVc VATVIr;
  
  GetWindowRecord(CurWindow,VATVIr);
  OpenTRFromVc("VATVIVc",VATVIr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromChqDep()
BEGIN  
  record ChqDepVc ChqDepr;
  
  GetWindowRecord(CurWindow,ChqDepr);
  OpenTRFromVc("ChqDepVc",ChqDepr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromLateCost()
BEGIN  
  record LateCostVc LateCostr;
  
  GetWindowRecord(CurWindow,LateCostr);
  OpenTRFromVc("LateCostVc",LateCostr.SerNr);
  RETURN;
END;

global
procedure OpenTRFromCredMan()
BEGIN  
  record CredManVc CredManr;
  
  GetWindowRecord(CurWindow,CredManr);
  OpenTRFromVc("CredManVc",CredManr.SerNr);
  RETURN;
END;
