remote function Boolean UserUnOkWarn(string,string);
remote updating procedure StopUserUnOkWarn(string,string);
remote procedure UserUnOkWarnVc_PasteUserCode(var record UserUnOkWarnVc);
remote function Boolean ReadUserUnOkWarn(string,var record RcVc);
remote updating function Boolean StoreUserUnOkWarn(string,record RcVc);

global
procedure ShowUnOkWarn(string FileName,Integer OKFlag)
begin
  Integer wn,nwn;
  record RcVc RepSpec;
  
  if (OKFlag==0) then begin
    if (UserUnOkWarn(FileName,CurrentUser)) then begin
      wn = CurWindow;
      RepSpec.f1 = FileName;
      RepSpec.flags[0] = 1;
      nwn = OpenWindow("UnOkWarnWClass",0,wn,"","",RepSpec);
    end;
  end;
  
  return;
end;

updating procedure CheckIfStopUserUnOkWarn(Integer wn)
begin
  record RcVc RepSpec;
  
  GetWindowRecord(wn,RepSpec);
  if (RepSpec.flags[0]==0) then begin
    StopUserUnOkWarn(RepSpec.f1,CurrentUser);
  end;
  
  return;
end;

global
updating procedure UnOkWarnWClassClose()
begin
  Integer wn;
  
  wn = CurWindow;
  CheckIfStopUserUnOkWarn(wn);
  CloseWindow(wn);
  
  return;
end;

global
updating procedure UnOkWarnWClassOkAndSave()
begin
  Integer wn,mwn;
  record IVVc IVr;
  record IPVc IPr;
  record VIVc VIr;
  record OPVc OPr;
  record PUVc PUr;
  record SHVc SHr;
  record StockMovVc StockMovr;
  record SDVc SDr;
  record RetVc Retr;
  record RetPUVc RetPUr;
  record CLInVc CLInr;
  record CLOutVc CLOutr;
  
  wn = CurWindow;
  CheckIfStopUserUnOkWarn(wn);
  mwn = MotherWindow(wn);
  CloseWindow(wn);
  
  switch (GetWindowFileName(mwn)) begin
    case "IVVc":
      GetWindowRecord(mwn,IVr);
      IVr.OKFlag = 1;
      PutWindowRecord(mwn,IVr);
      WindowDoOK(mwn,0);
    case "IPVc":
      GetWindowRecord(mwn,IPr);
      IPr.OKFlag = 1;
      PutWindowRecord(mwn,IPr);
      WindowDoOK(mwn,0);
    case "VIVc":
      GetWindowRecord(mwn,VIr);
      VIr.OKFlag = 1;
      PutWindowRecord(mwn,VIr);
      WindowDoOK(mwn,0);
    case "OPVc":
      GetWindowRecord(mwn,OPr);
      OPr.DoneFlag = 1;
      PutWindowRecord(mwn,OPr);
      WindowDoOK(mwn,0);
    case "PUVc":
      GetWindowRecord(mwn,PUr);
      PUr.OKFlag = 1;
      PutWindowRecord(mwn,PUr);
      WindowDoOK(mwn,0);
    case "SHVc":
      GetWindowRecord(mwn,SHr);
      SHr.OKFlag = 1;
      PutWindowRecord(mwn,SHr);
      WindowDoOK(mwn,0);
    case "StockMovVc":
      GetWindowRecord(mwn,StockMovr);
      StockMovr.OKFlag = 1;
      PutWindowRecord(mwn,StockMovr);
      WindowDoOK(mwn,0);
    case "SDVc":
      GetWindowRecord(mwn,SDr);
      SDr.OKFlag = 1;
      PutWindowRecord(mwn,SDr);
      WindowDoOK(mwn,0);
    case "RetVc":
      GetWindowRecord(mwn,Retr);
      Retr.OKFlag = 1;
      PutWindowRecord(mwn,Retr);
      WindowDoOK(mwn,0);
    case "RetPUVc":
      GetWindowRecord(mwn,RetPUr);
      RetPUr.OKFlag = 1;
      PutWindowRecord(mwn,RetPUr);
      WindowDoOK(mwn,0);
    case "CLInVc":
      GetWindowRecord(mwn,CLInr);
      CLInr.OKFlag = 1;
      PutWindowRecord(mwn,CLInr);
      WindowDoOK(mwn,0);
    case "CLOutVc":
      GetWindowRecord(mwn,CLOutr);
      CLOutr.OKFlag = 1;
      PutWindowRecord(mwn,CLOutr);
      WindowDoOK(mwn,0);
  end;
  
  return;
end;

function Boolean UserUnOkWarnDClassUserCodeEFAfter(Integer wn,Integer changed)
begin
  record UserUnOkWarnVc UserUnOkWarnr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,UserUnOkWarnr);
    UserUnOkWarnVc_PasteUserCode(UserUnOkWarnr);
    PutWindowRecord(wn,UserUnOkWarnr);
  end;
  
  UserUnOkWarnDClassUserCodeEFAfter = false;
  return;
end;

global
function Boolean UserUnOkWarnDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "UserCode": res = UserUnOkWarnDClassUserCodeEFAfter(wn,changed);
  end;
  
  UserUnOkWarnDClassAfterEditField = res;
  return;
end;

global
function Boolean UserUnOkWarnWClassOnOpenWindow(Integer wn)
begin
  record RcVc RepSpec;
  
  if (ReadUserUnOkWarn(CurrentUser,RepSpec)) then begin
    PutWindowRecord(wn,RepSpec);
  end;
  
  UserUnOkWarnWClassOnOpenWindow = false;
  return;
end;

global
updating function Boolean UserUnOkWarnWClassOnOkWindow(Integer wn)
begin
  record RcVc RepSpec;
  
  GetWindowRecord(wn,RepSpec);
  if (StoreUserUnOkWarn(CurrentUser,RepSpec)) then begin
    CloseWindow(wn);
  end;
  
  UserUnOkWarnWClassOnOkWindow = true;
  return;
end;
