remote function Boolean PasteCust2InCollection(var record CollectionVc,Boolean,var string);
remote function Boolean CollectionVc_PasteArtCode(var record CollectionVc,Integer,var string);
remote function Boolean CollectionVc_PasteSerialNr(var record CollectionVc,Integer);
remote procedure NewRentalCharge(Integer,var record RentChrgVc,Date,LongInt,LongInt,var string,string);

global
procedure CollectionSumUp(record CollectionVc Collectionr)
begin
  row CollectionVc Collectionrw;
  Integer i,rwcnt;
  
  Collectionr.SumQuant = BlankVal;
  rwcnt = MatRowCnt(Collectionr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Collectionr,i,Collectionrw);
    if (Collectionrw.Quant<>BlankVal) then begin
      Collectionr.SumQuant = Collectionr.SumQuant + Collectionrw.Quant;
    end;
  end;
  return;
end;

global 
function Boolean CollectionDClassArtCodeEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  record CollectionVc Collectionr;
  row CollectionVc Collectionrw;
  string 255 inwarning;
 
  GetWindowRecord(wn,Collectionr);
  MatRowGet(Collectionr,rownr,Collectionrw);
  if ((changedf!=0) or ((blank(Collectionrw.Spec)) and (nonblank(Collectionrw.ArtCode)))) then begin
    GetWindowRecord(wn,Collectionr);
    DeselectWindow(wn,false);
    if (CollectionVc_PasteArtCode(Collectionr,rownr,inwarning)) then begin
      CollectionSumUp(Collectionr);
      PutWindowRecord(wn,Collectionr);
      if (nonblank(inwarning)) then begin
          MessageBox(0,inwarning);
      end;
    end else begin
      Beep;
    end;
  end;
  CollectionDClassArtCodeEFAfter = true;
  return;
end;

global 
function Boolean CollectionDClassSerialNrEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  record CollectionVc Collectionr;
  row CollectionVc Collectionrw;
 
  GetWindowRecord(wn,Collectionr);
  MatRowGet(Collectionr,rownr,Collectionrw);
  if ((changedf!=0) or ((blank(Collectionrw.Spec)) and (nonblank(Collectionrw.ArtCode)))) then begin
    GetWindowRecord(wn,Collectionr);
    DeselectWindow(wn,false);
    if (CollectionVc_PasteSerialNr(Collectionr,rownr)) then begin
      CollectionSumUp(Collectionr);
      PutWindowRecord(wn,Collectionr);
    end else begin
      Beep;
    end;
  end;
  CollectionDClassSerialNrEFAfter = true;
  return;
end;

global 
function Boolean CollectionDClassQuantEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  record CollectionVc Collectionr;
  
  if (changedf!=0) then begin
    GetWindowRecord(wn,Collectionr);
    DeselectWindow(wn,false);
    CollectionSumUp(Collectionr);
    PutWindowRecord(wn,Collectionr);
  end;
  CollectionDClassQuantEFAfter = true;
  return;
end;

function Boolean CollectionDClassCustCodeEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  record CollectionVc Collectionr;
  string 255 warning;

  GetWindowRecord(wn,Collectionr);    
  if ((changed!=0) or ((blank(Collectionr.Addr0)) and (nonblank(Collectionr.CustCode)))) then begin
    GetWindowRecord(wn,Collectionr);    
    DeselectWindow(wn,false);
    if (PasteCust2InCollection(Collectionr,true,warning)) then begin
      PutWindowRecord(wn,Collectionr);
      if (nonblank(warning)) then begin
        MessageBox(0,warning);
      end;
    end else begin
      Beep;
    end;
  end;
  CollectionDClassCustCodeEFAfter = true;
  return;
end;

global
function Boolean CollectionDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Quant": res = CollectionDClassQuantEFAfter(wn,fn,rownr,changed);
    case "ArtCode": res = CollectionDClassArtCodeEFAfter(wn,fn,rownr,changed);
    case "SerialNr": res = CollectionDClassSerialNrEFAfter(wn,fn,rownr,changed);
    case "CustCode": res = CollectionDClassCustCodeEFAfter(wn,fn,rownr,changed);
  end;
  CollectionDClassAfterEditField = res;
  RETURN;
END;

global
procedure CollectionChargeDsm()
BEGIN
  record CollectionVc Collectionr;
  record RentChrgVc RentChrgr;
  string 255 warn;
  Integer wn;
  Integer nwn;
  
  wn = CurWindow;
  GetWindowRecord(wn,Collectionr);
  if (Collectionr.AgreementNr>0) then begin
    NewRentalCharge(2,RentChrgr,CurrentDate,Collectionr.SerNr,Collectionr.AgreementNr,warn,"");
    nwn = OpenWindow("RentChrgDClass",1,0,"","",RentChrgr);
  end;
  RETURN;
END;

