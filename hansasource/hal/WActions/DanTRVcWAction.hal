
global
function Boolean DanTRDClassOKFlagButAction(Integer wn,Integer oldbutval)
begin        
  record DanTRVc oldDanTRr;  
  record DanTRVc DanTRr;  
  Boolean res;

  res = true;
  GetWindowRecord(wn,DanTRr);
  GetPrevWindowRecord(wn,oldDanTRr);
  if (WindowState(wn)==0) then begin//normal
    if (DanTRr.OKFlag!=0) then begin res = false; end;
  end;  
  if (WindowState(wn)==2) then begin//update
    if (oldDanTRr.OKFlag!=0) then begin res = false; end;
  end;  

  DanTRDClassOKFlagButAction = res;  
  return;
end;

global
function Boolean DanTRDClassAccNumber1EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccNumber1EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccNumber2EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccNumber2EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassPayModeEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassPayModeEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassObjectsEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassObjectsEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassDebValEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassDebValEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassCredValEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassCredValEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassVATCodeEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassVATCodeEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassTransNrEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassTransNrEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassRefStrEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassRefStrEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassTextEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassTextEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassNumberEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassNumberEFActive = res;  
  return;
end;


global
function Boolean DanTRDClassTransDateEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassTransDateEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassSignEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassSignEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassTotSumEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassTotSumEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccName1EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccName1EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccName2EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccName2EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccName3EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccName3EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccName4EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccName4EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccBal1EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccBal1EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccBal2EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccBal2EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccBal3EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccBal3EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassAccBal4EFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassAccBal4EFActive = res;  
  return;
end;

global
function Boolean DanTRDClassCompCodeEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassCompCodeEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassInvoiceNrEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassInvoiceNrEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassTypEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassTypEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassRowTransDateEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin        
  record DanTRVc DanTRr;
  Boolean res;

  if (changed!=0) then begin
    res = true;
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  DanTRDClassRowTransDateEFActive = res;  
  return;
end;

global
function Boolean DanTRDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record DanTRVc DanTRr;

  res = true;
  switch (fieldname) begin
    case "RowTransDate": res = DanTRDClassRowTransDateEFActive(wn,fn,wnst,rownr,changed);
    case "Typ": res = DanTRDClassTypEFActive(wn,fn,wnst,rownr,changed);
    case "InvoiceNr": res = DanTRDClassInvoiceNrEFActive(wn,fn,wnst,rownr,changed);
    case "AccNumber1": res = DanTRDClassAccNumber1EFActive(wn,fn,wnst,rownr,changed);
    case "AccNumber2": res = DanTRDClassAccNumber2EFActive(wn,fn,wnst,rownr,changed);
    case "PayMode": res = DanTRDClassPayModeEFActive(wn,fn,wnst,rownr,changed);
    case "Objects": res = DanTRDClassObjectsEFActive(wn,fn,wnst,rownr,changed);
    case "VATCode": res = DanTRDClassVATCodeEFActive(wn,fn,wnst,rownr,changed);
    case "CredVal": res = DanTRDClassCredValEFActive(wn,fn,wnst,rownr,changed);
    case "DebVal": res = DanTRDClassDebValEFActive(wn,fn,wnst,rownr,changed);
    case "TransNr": res = DanTRDClassTransNrEFActive(wn,fn,wnst,rownr,changed);
    case "RefStr": res = DanTRDClassRefStrEFActive(wn,fn,wnst,rownr,changed);
    case "Text": res = DanTRDClassTextEFActive(wn,fn,wnst,rownr,changed);
    case "Number": res = DanTRDClassNumberEFActive(wn,fn,wnst,rownr,changed);
    case "TransDate": res = DanTRDClassTransDateEFActive(wn,fn,wnst,rownr,changed);
    case "Sign": res = DanTRDClassSignEFActive(wn,fn,wnst,rownr,changed);
    case "TotSum": res = DanTRDClassTotSumEFActive(wn,fn,wnst,rownr,changed);
    case "AccName1": res = DanTRDClassAccName1EFActive(wn,fn,wnst,rownr,changed);
    case "AccName2": res = DanTRDClassAccName2EFActive(wn,fn,wnst,rownr,changed);
    case "AccName3": res = DanTRDClassAccName3EFActive(wn,fn,wnst,rownr,changed);
    case "AccName4": res = DanTRDClassAccName4EFActive(wn,fn,wnst,rownr,changed);
    case "AccBal1": res = DanTRDClassAccBal1EFActive(wn,fn,wnst,rownr,changed);
    case "AccBal2": res = DanTRDClassAccBal2EFActive(wn,fn,wnst,rownr,changed);
    case "AccBal3": res = DanTRDClassAccBal3EFActive(wn,fn,wnst,rownr,changed);
    case "AccBal4": res = DanTRDClassAccBal4EFActive(wn,fn,wnst,rownr,changed);
    case "CompCode": res = DanTRDClassCompCodeEFActive(wn,fn,wnst,rownr,changed);
    otherwise
      if (changed!=0) then begin
        if (wnst==2) then begin
          GetPrevWindowRecord(wn,DanTRr);
          if (DanTRr.OKFlag!=0) then begin
            res = false;
          end;
        end;
      end;  
  end;
  DanTRDClassActiveEditField = res;
  RETURN;
END;

global
function Boolean DanTRDClassOKFlagButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record DanTRVc DanTRr;
  Integer normalmode,updatemode;

  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,DanTRr);
    if (DanTRr.OKFlag!=0) then begin
      res = false;
      if (UserCanAction("UnOKAll",false)) then begin
        res = true;
      end;
    end;
  end;  
  if (WindowState(wn)==updatemode) then begin
  end;    
  DanTRDClassOKFlagButtonAction = res;
  RETURN;
END;
