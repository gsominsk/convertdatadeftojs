external procedure WindowFieldGotoForTouchScreen(Integer,Integer,string,Boolean);
external procedure DisplayIVCashItem(record IVCashVc,Integer);
external function Boolean IVCashDClassInsertRowTest(Integer,Integer);
remote function Boolean IVCashVc_PasteArtCode(var record IVCashVc,Integer,Boolean,var string,var Integer);
remote function Boolean IVCashVc_PasteQuant(var record IVCashVc,Integer);
external procedure SplitEclass(string,var Array string);

global
procedure POSPIVCashDClassTileItems()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,1);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet1()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,1);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet2()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,2);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet3()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,3);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet4()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,4);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet5()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,5);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet6()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,6);
  return;
end;

global
procedure POSPIVCashDClassTileItemsSet7()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,7);
  return;
end;

global
procedure POSPIVCashDClassTileMoreItems()
begin
  WindowDeactivateField(CurWindow);
  ActivateTile(CurWindow,8);
  return;
end;

//lookhere
global
function string 40 POSPIVCashITDefault(string tstr)
begin
  string 40 lsubset;
  record LocalMachineBlock LMr;
  record DIVc DIr;
      
// What, looping over DIVc in client?
//  lsubset = IVITDefaultRemote(tstr,CurMachineName);
  BlockLoad(LMr);
  if (nonblank(LMr.DefRestDisp)) then begin
    lsubset = LMr.DefRestDisp;
  end else begin
    DIr.Code = "";
    if (LoopMain(DIr,1,true)) then begin
      lsubset = DIr.Code;
    end;
  end;
  POSPIVCashITDefault = lsubset;
  return;
end;

/*JAJ, remote*/ 
procedure slPOSPIVCashHAL(Integer wn)
begin
  record IVCashVc IVCashr;
  record DIVc DIr;
  Boolean found;
  string 255 ckey,t2,tstr;

  ClearStringList(wn);
  found = true;
  ckey = "DICode:" & GetWindowSubset(wn);
  while (LoopKey(ckey,DIr,1,found)) begin
    tstr = DIr.Name & " ";
    tstr = tstr & DIr.colnr;
    SetListString(wn,len(tstr),tstr,false);
  end;
  PutWindowRecord(wn,IVCashr);
  return;
end;

global
procedure POSPIVCashDClassToolUp()
begin
  record IVCashVc IVCashr;
  record DIVc DIr;
  Array string 20 ac;
  string 255 lsubset;
  Integer wn;

  wn = CurWindow;
  GetWindowRecord(wn,IVCashr);
  DIr.Code = GetWindowSubset(wn);
  if (ReadFirstMain(DIr,1,true)) then begin
    SplitEclass(DIr.DispGroups,ac);
    SetWindowSubset(wn,ac[0]);
    if (blank(GetWindowSubset(wn))) then begin
      lsubset = POSPIVCashITDefault("");
      SetWindowSubset(wn,lsubset);      
    end;
  end;
  slPOSPIVCashHAL(wn);
  UpdateBrowses("INVc");
  PutWindowRecord(wn,IVCashr);
  return;
end;

global
procedure POSPIVCashDClassToolFileDesktop()
begin
  record IVCashVc IVCashr;
  Integer wn;
  string 255 lsubset;

  wn = CurWindow;
  GetWindowRecord(wn,IVCashr);
  lsubset = POSPIVCashITDefault("");
  SetWindowSubset(wn,lsubset);      
  slPOSPIVCashHAL(wn);
  UpdateBrowses("INVc");
  PutWindowRecord(wn,IVCashr);
  return;
end;

procedure POSPIVCashDClassToolKeyPadAdd()
begin
  Integer wn,rownr;
  record INVc INr;
  record IVCashVc IVCashr;
  row IVCashVc IVCashrw;
  Boolean testf;
  Integer i,rwcnt;
  string 255 tstr;
  Integer sernrf;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  if (WindowActiveField(wn)=="Quant") then begin testf = true; end;
  if (WindowActiveField(wn)=="Price") then begin testf = true; end;
  if (ReadMarkedRecord(wn,INr)) then begin 
  end;
  WindowDeactivateField(wn);
  if (testf) then begin
    rownr = WindowActiveRow(wn);
    if (rownr>=0) then begin
      GetWindowRecord(wn,IVCashr);  
      MatRowGet(IVCashr,rownr,IVCashrw);
      if (nonblank(INr.Code)) then begin
        if (INr.Code!=IVCashrw.ArtCode) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        IVCashrw.Quant = IVCashrw.Quant + 1;
        MatRowPut(IVCashr,rownr,IVCashrw);
        if (IVCashVc_PasteQuant(IVCashr,rownr)) then begin
        end;
        PutWindowRecord(wn,IVCashr);
        DisplayIVCashItem(IVCashr,rownr);
        goto LPOSPIVCashDClassToolKeyPadAdd;
      end;
    end;
  end;
  if (nonblank(INr.Code)) then begin
    GetWindowRecord(wn,IVCashr);  
    rwcnt = MatRowCnt(IVCashr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVCashr,i,IVCashrw);
      if (IVCashrw.ArtCode==INr.Code) then begin
        rownr = i;
        goto L55POSPIVCashDClassToolKeyPadAdd;
      end;
    end;
    rownr = rwcnt;
L55POSPIVCashDClassToolKeyPadAdd:;  
    if (rownr==rwcnt) then begin
      ClearRow(IVCashr,IVCashrw,1);
      IVCashrw.ArtCode = INr.Code;
      IVCashrw.Quant = 1;
      MatRowPut(IVCashr,rownr,IVCashrw);
      if (IVCashVc_PasteArtCode(IVCashr,rownr,false,tstr,sernrf)) then begin
      end;
      DisplayIVCashItem(IVCashr,rownr);
    end else begin
      MatRowGet(IVCashr,rownr,IVCashrw);
      IVCashrw.Quant = IVCashrw.Quant + 1;
      MatRowPut(IVCashr,rownr,IVCashrw);
      if (IVCashVc_PasteQuant(IVCashr,rownr)) then begin
      end;
      DisplayIVCashItem(IVCashr,rownr);
    end;
    PutWindowRecord(wn,IVCashr);
    //WindowFieldGoto(wn,IVCashr,rownr,"ivcashcommand",false);
    WindowFieldGotoForTouchScreen(wn,rownr,"ivcashcommand",false);
  end;
LPOSPIVCashDClassToolKeyPadAdd:;  
  return;
end;

global
function Boolean POSPIVCashDClassRLClick(Integer wn,Integer rownr)
begin
  if (IVCashDClassInsertRowTest(wn,0)) then begin
    POSPIVCashDClassToolKeyPadAdd;
  end;
  POSPIVCashDClassRLClick = true;
  return;
end;

global
procedure IVCashPasteItem(string artcode)
begin
  Integer wn,rownr;
  record IVCashVc IVCashr;
  row IVCashVc IVCashrw;
  Integer i,rwcnt;
  record INVc INr;
  Boolean testf;
  string 255 tstr;
  Integer sernrf;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,IVCashr);
  INr.Code = artcode;
  if (ReadFirstMain(INr,1,true)==false) then begin 
    goto LIVCashPasteItem;
  end;
  rownr = WindowActiveRow(wn);
  WindowDeactivateField(wn);
  if (true) then begin
    if (rownr>=0) then begin
      GetWindowRecord(wn,IVCashr);  
      MatRowGet(IVCashr,rownr,IVCashrw);
      if (nonblank(artcode)) then begin
        if (artcode!=IVCashrw.ArtCode) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        IVCashrw.Quant = IVCashrw.Quant + 1;
        MatRowPut(IVCashr,rownr,IVCashrw);
        if (IVCashVc_PasteQuant(IVCashr,rownr)) then begin
        end;
        PutWindowRecord(wn,IVCashr);  
        DisplayIVCashItem(IVCashr,rownr);
        //WindowFieldGoto(wn,IVCashr,rownr,"ivcashcommand",false);
        WindowFieldGotoForTouchScreen(wn,rownr,"ivcashcommand",false);
        goto LIVCashPasteItem;
      end;
    end;
  end;
  if (nonblank(artcode)) then begin
    rwcnt = MatRowCnt(IVCashr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVCashr,i,IVCashrw);
      if (IVCashrw.ArtCode==artcode) then begin
        rownr = i;
        goto L22IVCashPasteItem;
      end;
    end;
    rownr = rwcnt;
L22IVCashPasteItem:;  
    if (rownr==rwcnt) then begin
      ClearRow(IVCashr,IVCashrw,1);
      IVCashrw.ArtCode = artcode;
      MatRowPut(IVCashr,rownr,IVCashrw);
      if (IVCashVc_PasteArtCode(IVCashr,rownr,false,tstr,sernrf)) then begin
      end;
      PutWindowRecord(wn,IVCashr);
      DisplayIVCashItem(IVCashr,rownr);
    end else begin
      MatRowGet(IVCashr,rownr,IVCashrw);
      IVCashrw.Quant = IVCashrw.Quant + 1;
      MatRowPut(IVCashr,rownr,IVCashrw);
      if (IVCashVc_PasteQuant(IVCashr,rownr)) then begin
      end;
      PutWindowRecord(wn,IVCashr);
      DisplayIVCashItem(IVCashr,rownr);
    end;
    //WindowFieldGoto(wn,IVCashr,rownr,"ivcashcommand",false);
    WindowFieldGotoForTouchScreen(wn,rownr,"ivcashcommand",false);
  end;  
LIVCashPasteItem:;
  return;
end;

global
procedure POSPIVCashDClassPasteItemButton(Integer butnr)
BEGIN
  Integer i,rwcnt,wn;
  record ItemButtonsBlock ItemButtonsRec;
  row ItemButtonsBlock ItemButtonsrw;
  record IVCashVc IVCashr;
  record RcVc RepSpec;

  wn = CurWindow;
  if (WindowState(wn)!=2) then begin//Rs_update
    GetWindowRecord(wn,IVCashr);
  end else begin
    GetPrevWindowRecord(wn,IVCashr);
  end;
  if (IVCashr.OKFlag!=0) then begin
    goto LPOSPIVCashDClassPasteItemButton;
  end;
  if (IVCashr.Invalid!=0) then begin
    goto LPOSPIVCashDClassPasteItemButton;
  end;
  BlockLoad(ItemButtonsRec);
  rwcnt = MatRowCnt(ItemButtonsRec);
  for (i=0;i<rwcnt;i=i+1) begin
    if (i==(butnr-1)) then begin
      MatRowGet(ItemButtonsRec,i,ItemButtonsrw);
      switch (ItemButtonsrw.ButtonType) begin
        case 0:
          IVCashPasteItem(ItemButtonsrw.ArtCode);
        case 1:
          RepSpec.f1 = ItemButtonsrw.ArtCode;
          i = OpenWindow("SelectModifiers2WClass",1,wn,"","",RepSpec);
          PutWindowRecord(i,RepSpec);
        case 2:
      end;
      goto LPOSPIVCashDClassPasteItemButton;
    end;
  end;
LPOSPIVCashDClassPasteItemButton:;  
  RETURN;
END;
/*
global
procedure POSPIVCashDClassPasteItemButton(Integer butnr)
BEGIN
  Integer i,rwcnt,wn;
  record LocalMachineIBVc LMIBr;
  row LocalMachineIBVc LMIBrw;
  record LocalMachineBlock LMb;
  record IVCashVc IVCashr;
  record RcVc RepSpec;

  wn = CurWindow;
  if (WindowState(wn)!=2) then begin//Rs_update
    GetWindowRecord(wn,IVCashr);
  end else begin
    GetPrevWindowRecord(wn,IVCashr);
  end;
  if (IVCashr.OKFlag!=0) then begin
    goto LPOSPIVCashDClassPasteItemButton;
  end;
  if (IVCashr.Invalid!=0) then begin
    goto LPOSPIVCashDClassPasteItemButton;
  end;
  BlockLoad(LMb);
  LMIBr.LocalMachine = LMb.LocalMachineCode;
  if (ReadFirstMain(LMIBr,1,true)) then begin
    rwcnt = MatRowCnt(LMIBr);
    for (i=0;i<rwcnt;i=i+1) begin
      if (i==(butnr-1)) then begin
        MatRowGet(LMIBr,i,LMIBrw);
        switch (LMIBrw.ButtonType) begin
          case 0:
            IVCashPasteItem(LMIBrw.ArtCode);
          case 1:
            RepSpec.f1 = LMIBrw.ArtCode;
            i = OpenWindow("SelectModifiers2WClass",1,wn,"","",RepSpec);
            PutWindowRecord(i,RepSpec);
          case 2:
        end;
        goto LPOSPIVCashDClassPasteItemButton;
      end;
    end;
  end;
LPOSPIVCashDClassPasteItemButton:;  
  RETURN;
END;
*/

/*
global
function string 255 POSPIVCashDClassTotal()
begin
  Integer wn;
  string 255 res;
  record IVCashVc IVCashr;
  
  wn = CurWindow;
  GetWindowRecord(wn,IVCashr);
  res = IVCashr.Sum4;
StopAlert("res " & res);
  POSPIVCashDClassTotal = res;
  return;
end;
*/

global
function Boolean POSPIVCashDClassOnClose(Integer wn,Integer wn2)
begin
  POSPIVCashDClassOnClose = false;
  return;
end;


global
function Boolean NPTSIVCashDClassOnClose(Integer wn,Integer wn2)
begin
  NPTSIVCashDClassOnClose = not UserCanAction("AllowNPTSIVLogout",true);
  return;
end;
