remote updating procedure EInvoiceTClassOnOKWindowRemote(record EInvoiceBlock,record EInvoiceBlock);

function Integer RegisteredInCountry()
begin
  record InternetEnablerBlock IEb;
  
  BlockLoad(IEb);
  RegisteredInCountry = IEb.RegInCountry;
  return;
end;

function Boolean CheckIfForcedEInvoices()
begin
  Boolean res;
  record InternetEnablerBlock IEb;
  
  switch (RegisteredInCountry) begin
    case 7: res = true;
    case 16: res = true;
    case 25: res = true;
  end;
  res = false;//for now
  CheckIfForcedEInvoices = res;
  return;
end;

global
function Boolean EInvoiceTClassStopEInvoicesButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,EIb);
    if (CheckIfForcedEInvoices) then begin
      if (EIb.StopEInvoices==0) then begin
        res = false;
      end;
    end;
    if (nonblank(EIb.StopReason)) then begin
      EIb.StopReason = "";
      PutWindowRecord(wn,EIb);
    end;
  end;    
  EInvoiceTClassStopEInvoicesButtonAction = res;
  RETURN;
END;

global
function Boolean EInvoiceTClassOutEInvoicesButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,EIb);
    if (CheckIfForcedEInvoices) then begin
      if (EIb.OutEInvoices!=0) then begin
        res = false;
      end;
    end;
  end;    
  EInvoiceTClassOutEInvoicesButtonAction = res;
  RETURN;
END;

global
function Boolean EInvoiceTClassRcvEInvoicesButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,EIb);
    if (CheckIfForcedEInvoices) then begin
      if (EIb.RcvEInvoices!=0) then begin
        res = false;
      end;
    end;
  end;    
  EInvoiceTClassRcvEInvoicesButtonAction = res;
  RETURN;
END;

global
function Boolean EInvoiceTClassWhomEInvoicesButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,EIb);
    if (CheckIfForcedEInvoices) then begin
      if (EIb.WhomEInvoices==0) then begin
        res = false;
      end;
    end;
  end;    
  EInvoiceTClassWhomEInvoicesButtonAction = res;
  RETURN;
END;

global
function Boolean EInvoiceTClassRcvInvoicePrefButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,EIb);
    if (CheckIfForcedEInvoices) then begin
      if (EIb.RcvInvoicePref==0) then begin
        res = false;
      end;
    end;
  end;    
  EInvoiceTClassRcvInvoicePrefButtonAction = res;
  RETURN;
END;

global
function Boolean EInvoiceTClassRegAtPartnerButtonAction(Integer wn,Integer value)
begin
  Boolean res;
 
  res = false;
  EInvoiceTClassRegAtPartnerButtonAction = res;
  RETURN;
END;

global
function Boolean DBERecordsTClassDBStatusButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record DBERecordsBlock DBERb;
 
  GetWindowRecord(wn,DBERb);
  if (DBERb.AutoDBStatus==1) then begin
    res = true;
  end else begin
    res = false;
  end;
  DBERecordsTClassDBStatusButtonAction = res;
  RETURN;
END;

global
updating function Boolean EInvoiceTClassOnOKWindow(Integer wn)
begin
  record EInvoiceBlock EIBb;
  record EInvoiceBlock EIBprevb;
  Time t;

  GetWindowRecord(wn,EIBb);  
  BlockLoad(EIBprevb);
  if (EIBb.StopEInvoices!=0) then begin 
    goto LEInvoiceTClassOnOKWindow;
  end;
  EInvoiceTClassOnOKWindowRemote(EIBb,EIBprevb);
LEInvoiceTClassOnOKWindow:;  
  EInvoiceTClassOnOKWindow = true;
  return;
end;

global
function Boolean EInvoiceTClassOutEstEInvoicesButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = false;
  EInvoiceTClassOutEstEInvoicesButtonAction = res;
  return;
end;

global
function Boolean EInvoiceTClassInEstEInvoicesButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record EInvoiceBlock EIb;
  Integer normalmode,updatemode;
 
  res = false;
  EInvoiceTClassInEstEInvoicesButtonAction = res;
  return;
end;
