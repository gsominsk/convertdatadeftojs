remote procedure GetHALRulesFileArray(string,string,var array string,var array integer,var array integer,var integer);

global
procedure GetHalFileRules(Area adhp)
begin
  array string 200 afiles;
  array integer arules;
  array Integer areqrestart;
  Integer cnt;
  Integer i;
  Integer oldprogmode;

  oldprogmode = SetCompanyProgramMode(kProgramModeClient);
  cnt = 0;
  GetHALRulesFileArray(CurrentUser,CurMachineName,afiles,arules,areqrestart,cnt);
  AddLongToArea(cnt,adhp);
  for (i=0;i<cnt;i=i+1) begin
    AddStringToArea(afiles[i],adhp);
    AddIntToArea(arules[i],adhp);
    AddIntToArea(areqrestart[i],adhp);
  end;
  ResetCompanyProgramMode(oldprogmode);
  return;
end;

global
procedure DeleteHALRulesDsm()
begin
  record RcVc RepSpec;
  Integer nwn;
  
  nwn = OpenWindow("DeleteHalRulesVClass",1,0,"","",RepSpec);
  RepSpec.repname = "DeleteHALRulesMn";
  PutWindowRecord(nwn,RepSpec);
  return;
end;

global
procedure RebuildHALRulesDsm()
begin
  record RcVc RepSpec;
  Integer nwn;
  
  nwn = OpenWindow("RebuildHalRulesVClass",1,0,"","",RepSpec);
  RepSpec.repname = "RebuildHALRulesMn";
  PutWindowRecord(nwn,RepSpec);
  return;
end;

global
procedure CheckMissingHALRulesDsm()
begin
  integer nwn;
  record RCVc RepSpec;

  RepSpec.repname = "CheckMissingHALRulesRn";
  RunReport(RepSpec,0);

  return;
end;

global
procedure DeleteMissingHALRulesDsm()
begin
  integer nwn;
  record RCVc RepSpec;

  nwn = OpenWindow("DeleteMissingHalRulesVClass",1,0,"","",RepSpec);
  RepSpec.repname = "DeleteMissingHALRulesMn";
  PutWindowRecord(nwn,RepSpec);
  
  return;
end;