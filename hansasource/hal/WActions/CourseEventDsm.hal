external procedure ActVcRecordDefClient(var record ActVc);
remote updating function Integer CreateLetFromCourseEventD(record CourseEventVc,var record LetVc,var string);
remote updating function Integer CreateMailFromCourseEventD(record CourseEventVc,var record MailVc,var string,string);
remote updating procedure CreateInvFromCourseEventVc(var record CourseEventVc);
remote updating function Integer CreateActFromCourseEventVc(var record CourseEventVc,var record ActVc,Boolean,Boolean);

global
procedure CourseEventPartCourseEventD()
begin
  Integer wn;
  record RcVc RepSpec;
  record CourseEventVc CourseEventr;

  wn = CurWindow;
  GetWindowRecord(wn,CourseEventr);
  RecordNew(RepSpec);
  ReportDefaults(RepSpec,"CourseEventPartRClass");
  RepSpec.repname = "CourseEventPartRn";
  RepSpec.f1 = CourseEventr.CourseCode;
  RepSpec.long1 = CourseEventr.SerNr;
  RepSpec.Media = mtScreen;    
  RepSpec.ArtMode = 0;      
  RunReport(RepSpec,0);
  return;
end;

global
procedure ShowCourseGuestsm()
begin
  record CourseEventVc CourseEventr;
  row CourseEventVc CourseEventrw;
  Integer wn,nwn,rown;
  record CUVc CUr;
  
  wn = CurWindow;
  GetWindowRecord(wn,CourseEventr);
  rown = WindowActiveRow(wn);
  DeselectWindow(wn,false);
  if (rown>=0) then begin
    MatRowGet(CourseEventr,rown,CourseEventrw);
    CUr.Name = CourseEventrw.ContactName;
    CUr.Code = CourseEventrw.ContactCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      nwn = OpenWindow("CUDClass",1,0,"","",CUr);
    end;
  end;
  RETURN;
END;

global
procedure CourseContactList()
begin
  record RcVc RepSpec;
  Integer wn,nwn;
  record CourseEventVc CourseEventr;
  
  wn = CurWindow;
  GetWindowRecord(wn,CourseEventr);
//  nwn = OpenWindow("CourseContact2RClass",0,0,"","",RepSpec);
//  DeselectWindow(nwn,false);
  RepSpec.repname = "CourseContact2Rn";
  RepSpec.long1 = CourseEventr.SerNr;
  RepSpec.Media = mtScreen;    
  RepSpec.ArtMode = 1;      
//  PutWindowRecord(nwn,RepSpec);
  RunReport(RepSpec,0);
  return;
end;
   
global
procedure RVFFoodList()
begin
  record RcVc RepSpec;
  Integer wn;
  Integer rown;
  record CourseEventVc CourseEventr;
  Row CourseEventVc CourseEventrw;
  
  wn = CurWindow;
  rown = WindowActiveRow(wn);
  GetWindowRecord(wn,CourseEventr);
  RepSpec.repname = "RVFFoodRn";
  RepSpec.long1 = CourseEventr.SerNr;
  RepSpec.Media = mtScreen;    
  RunReport(RepSpec,0);
  return;
end;  
  
global
procedure RVFHotelList()
begin
  record RcVc RepSpec;
  integer wn;
  Integer rown;
  record CourseEventVc CourseEventr;
  Row CourseEventVc CourseEventrw;  
  
  wn = CurWindow;
  rown = WindowActiveRow(wn);
  GetWindowRecord(wn,CourseEventr);
  RepSpec.repname = "RVFHotelRn";
  RepSpec.long1 = CourseEventr.SerNr;
  RepSpec.Media = mtScreen;    
  RunReport(RepSpec,0);
  return;
end;

global
procedure RVFVoteList()
begin
  record RcVc RepSpec;
  Integer wn;
  Integer rown;
  record CourseEventVc CourseEventr;
  
  wn = CurWindow;
  rown = WindowActiveRow(wn);
  GetWindowRecord(wn,CourseEventr);
  RepSpec.repname = "RVFVoteRn";
  RepSpec.long1 = CourseEventr.SerNr;
  RepSpec.Media = mtScreen;    
  RunReport(RepSpec,0);
  return;
end;  
  
global
updating procedure CreateActCourseEventDsm()
begin
  record CourseEventVc CourseEventr;
  record ActVc Actr;
  Integer wn,nwn,err;

  wn = CurWindow;
  GetWindowRecord(wn,CourseEventr);
  RecordNew(Actr);
  ActVcRecordDefClient(Actr);
  err = CreateActFromCourseEventVc(CourseEventr,Actr,true,true);
  nwn = OpenWindow("ActDClass",1,0,"","",Actr);
  SetRLink(wn,true);  
  UpdateBrowses("ActVc");
  return;
end;  

global
updating procedure CourseEventVcCreateActivity()
begin
  CreateActCourseEventDsm;
  return;
end;
  
global
updating procedure CreateInvCourseEventDsm()
begin
  record CourseEventVc CourseEventr;
  Integer wn;

  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,CourseEventr);
//  if (UserCanAction("COToInv",true)) then begin
    CreateInvFromCourseEventVc(CourseEventr);
    UpdateBrowses("IVVc");
    PutWindowRecord(wn,CourseEventr);
    SelectWindow(wn);
    if (WindowDoOK(wn,0)) then begin
    end;
//  end;
  return;
end;  
    
global
procedure ContactListCourseEventDsm()
begin
  record RcVc RepSpec;
  Integer wn,nwn;
  record CourseEventVc CourseEventr;
  
  wn = CurWindow;
  GetWindowRecord(wn,CourseEventr);
  RepSpec.repname = "CourseEventPartRn";
  RepSpec.long1 = CourseEventr.SerNr;
  RepSpec.Media = mtScreen;    
  RepSpec.ArtMode = 1;      
  RunReport(RepSpec,0);
  return;
end;
      
global 
updating procedure CreateMailCourseEventDsm()
begin
  Integer wn,nwn;
  record MailVc Mailr;
  record CourseEventVc CourseEventr;
  Integer err;
  string 255 tstr;
  string 255 docname;
  Boolean testf;

  wn = CurWindow;
  if (WindowState(wn)==0)then begin//Rs_normal
    testf = true;
    GetWindowRecord(wn,CourseEventr);  
    if (testf) then begin
      err = CreateMailFromCourseEventD(CourseEventr,Mailr,tstr,WindowFormName(wn));
      if (err!=0) then begin
        MessageBox(err,": " & tstr);
      end else begin
        nwn = OpenWindow("MailDClass",1,0,"","",Mailr);
      end;
    end;
  end;
  return;
end;
      
global 
updating procedure CreateLetCourseEventDsm()
begin
  Integer wn,nwn;
  record LetVc Letr;
  record CourseEventVc CourseEventr;
  Integer err;
  string 255 tstr;

  wn = CurWindow;
  if (WindowState(wn)==0)then begin//Rs_normal
    GetWindowRecord(wn,CourseEventr);
    err = CreateLetFromCourseEventD(CourseEventr,Letr,tstr);
    if (err!=0) then begin
      MessageBox(err,": " & tstr);
    end else begin
      nwn = OpenWindow("LetDClass",1,0,"","",Letr);
    end;
  end;
  return;
end;