external function boolean IVDClassOKFlagButtonAction(Integer,Integer);
external function Integer GetPayDealType(string,var LongInt);
external procedure OpenNPTSPaymentTClass(Integer,LongInt,val,val,string);

procedure OpenPaymentOptions(integer wn)
begin
  record IVVc IVr;

  if (wn>0) then begin
    switch (GetWindowClass(wn)) begin
      case "IVDClass": GetWindowRecord(wn,IVr); OpenNPTSPaymentTClass(wn,IVr.SerNr,IVr.RetnValue,IVr.Sum4,IVr.CurncyCode);
    end;  
  end;
end;

function boolean IsPaymentTerm(integer wn,integer payterm)
begin
  integer recpayterm;
  longint dummyl;
  record IVVc IVr;

  if (wn>0) then begin
    switch (GetWindowClass(wn)) begin
      case "IVDClass":  GetWindowRecord(wn,IVr); recpayterm = GetPayDealType(IVr.PayDeal,dummyl);
    end;  
  end;
  IsPaymentTerm = (recpayterm==payterm);
  return;
end;

updating procedure DoOKIVDsm(integer wn)
begin
  record IVVc IVr;
  
  if (WindowState(wn)!=Rs_normal) then begin
    if (WindowDoOK(wn,0)==false) then begin goto LDoOKIVDsm; end;
  end;
  GetWindowRecord(wn,IVr);
  if (IVr.OKFlag!=0) then begin goto LDoOKIVDsm; end;  
  if (IVDClassOKFlagButtonAction(wn,0)==false) then begin goto LDoOKIVDsm; end;  

  if (IsPaymentTerm(wn,kInvoiceTypeCash)) then begin 
    OpenPaymentOptions(wn);
    goto LDoOKIVDsm;
  end else begin
    goto LDoOKIVDsm1;
  end;
  
LDoOKIVDsm1:;
  IVr.OKFlag = 1;
  PutWindowRecord(wn,IVr);
  WindowDoOK(wn,0);

LDoOKIVDsm:;
  return;  
end;

global
updating procedure OKandPostDsm()
begin
  Integer wn;

  wn = CurWindow;
  if (wn>0) then begin
    switch (GetWindowClass(wn)) begin
      case "IVDClass": DoOKIVDsm(wn);
    end;  
  end;
  return;
end;