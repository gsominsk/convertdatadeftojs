external procedure GetUserName(string,var string);

global
procedure TargTimeSumup(record TargTimeVc TargTimer)
begin
  row TargTimeVc TargTimerw;
  Integer i,rwcnt;
  
  TargTimer.Total = blankval;
  rwcnt = MatRowCnt(TargTimer);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TargTimer,i,TargTimerw);
    TargTimer.Total = TargTimer.Total + TargTimerw.Hours;
  end;
  return;
end;

function Boolean TargTimeDClassHoursEFAfter(Integer wn,Integer changed)
begin
  record TargTimeVc TargTimer;
  string 255 tstr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,TargTimer);
    TargTimeSumup(TargTimer);
    PutWindowRecord(wn,TargTimer);
  end;
  TargTimeDClassHoursEFAfter = true;
  return;
end;

function Boolean TargTimeDClassPersonEFAfter(Integer wn,Integer changed)
BEGIN
  record TargTimeVc TargTimer;
  string 255 tstr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,TargTimer);
    DeselectWindow(wn,false);
    GetUserName(TargTimer.Person,tstr);
    TargTimer.Name = tstr;  
    PutWindowRecord(wn,TargTimer);
  end;
  TargTimeDClassPersonEFAfter = true;
  RETURN;
END;

function Boolean TargTimeDClassActTypeEFAfter(Integer wn,Integer rownr,Integer changed)
BEGIN
  record TargTimeVc TargTimer;
  row TargTimeVc TargTimerw;
  record ActTypeVc ATr;  
  string 255 tstr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,TargTimer);
    DeselectWindow(wn,false);
    MatRowGet(TargTimer,rownr,TargTimerw);
    if (nonblank(TargTimerw.ActType)) then begin
      ATr.Code = TargTimerw.ActType;
      if (ReadFirstMain(ATr,1,true)) then begin
        TargTimerw.Text = ATr.Comment;
        MatRowPut(TargTimer,rownr,TargTimerw);
        PutWindowRecord(wn,TargTimer);
      end else begin
        Beep;
      end;
    end;
    PutWindowRecord(wn,TargTimer);
  end;
  TargTimeDClassActTypeEFAfter = true;
  RETURN;
END;

global
function Boolean TargTimeDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Person": res = TargTimeDClassPersonEFAfter(wn,changed);
    case "ActType": res = TargTimeDClassActTypeEFAfter(wn,rownr,changed);
    case "Hours": res = TargTimeDClassHoursEFAfter(wn,changed);
  end;
  TargTimeDClassAfterEditField = res;
  RETURN;
END;

global
function Boolean TargTimeDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
 
  res = true;
  if (wnst==2) then begin//update
    switch (fieldname) begin
      case "Person": res = false;
    end;
  end;
  TargTimeDClassActiveEditField = res;
  RETURN;
END;

global
function Boolean TargTimeDClassOnOverStrike(Integer wn,Integer rownr)
begin
  record TargTimeVc TTr;

  if (rownr>=0) then begin
    GetWindowRecord(wn,TTr);
    TargTimeSumup(TTr);
    PutWindowRecord(wn,TTr); 
  end;
  TargTimeDClassOnOverStrike = true;
  return;
end;