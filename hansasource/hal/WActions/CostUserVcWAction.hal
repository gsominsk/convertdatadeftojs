remote procedure CostUserGetRate(record CostUserVc);

global
procedure CostUserSumup(var record CostUserVc CostUserr)
BEGIN
  row CostUserVc CostUserrw;
  Integer i,rwcnt;
  
  CostUserr.Total = blankval;
  rwcnt = MatRowCnt(CostUserr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CostUserr,i,CostUserrw);
    CostUserr.Total = CostUserr.Total + CostUserrw.Cost;
  end;
  RETURN;
END;

procedure CostUserSumupWn(Integer wn,Boolean changedf)
BEGIN
  record CostUserVc CostUserr;
  
  if (changedf) then begin
    GetWindowRecord(wn,CostUserr);
    CostUserSumup(CostUserr);
    PutWindowRecord(wn,CostUserr);
  end;
  RETURN;
END;

global
function Boolean CostUserDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record CostUserVc CostUserr;
  
  if (wnst!=2) then begin//Rs_update
    res = true;
  end else begin
    res = false;
    GetPrevWindowRecord(wn,CostUserr);
    if (CostUserr.OKFlag!=0) then begin
      switch (fieldname) begin
//        case "Comment": res = true;
      end;
    end else begin
      res = true;
    end;
  end;
  CostUserDClassActiveEditField = res;
  RETURN;
END;

function Boolean CostUserDClassPersonEFAfter(Integer wn,Boolean changedf)
BEGIN
  Boolean res;
  record CostUserVc CostUserr;
  record UserVc Userr;
  
  if (changedf) then begin
    GetWindowRecord(wn,CostUserr);
    Userr.Code = CostUserr.Person;
    if (ReadFirstMain(Userr,1,true)) then begin
      CostUserr.PersonName = Userr.Name;
    end;
    PutWindowRecord(wn,CostUserr);
    res = true;
  end;
  CostUserDClassPersonEFAfter = res;
  RETURN;
END;

function Boolean CostUserDClassCurncyCodeEFAfter(Integer wn,Boolean changedf)
BEGIN
  Boolean res;
  record CostUserVc CostUserr;
  
  if (changedf) then begin
    GetWindowRecord(wn,CostUserr);
    CostUserGetRate(CostUserr);
    PutWindowRecord(wn,CostUserr);
    res = true;
  end;
  CostUserDClassCurncyCodeEFAfter = res;
  RETURN;
END;

global
function Boolean CostUserDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Person": res = CostUserDClassPersonEFAfter(wn,changed!=0);
    case "CurncyCode": res = CostUserDClassCurncyCodeEFAfter(wn,changed!=0);
  end;
  CostUserSumupWn(wn,changed!=0);
  CostUserDClassAfterEditField = res;
  RETURN;
END;

global
function Boolean CostUserDClassOKFlagButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record CostUserVc CostUserr;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,CostUserr);
    if (CostUserr.OKFlag!=0) then begin
      res = false;
      if (UserCanAction("UnOKAll",false)) then begin
        res = true;
      end;
    end;
  end;  
  if (WindowState(wn)==updatemode) then begin
    GetPrevWindowRecord(wn,CostUserr);
    if (CostUserr.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  CostUserDClassOKFlagButtonAction = res;
  RETURN;
END;
