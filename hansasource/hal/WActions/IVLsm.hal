remote function Integer IVTestApprovalStatus(record IVVc);
remote updating procedure RraPasteInvInEDIInv(var record EDIIVVc,var LongInt);
external procedure RecordActionIV_Print(var record IVVc,string,string,Integer,Boolean);
remote updating function Boolean RecordAction_rlIVLOK(var record IVVc,Boolean,var Integer);

global
updating procedure OKIVLsm()
BEGIN
  Integer wn;
  record IVVc IVr;
  LongInt i;
  record AutoActionBlock AAb;
  Boolean tmpf;
  string 20 docname;
  Integer flushcnt,err;
  string 255 tstr;
  Boolean norminv,credinv;
  
  wn = CurWindow;
  norminv = UserCanAction("InvOK",true);
  credinv = UserCanAction("CredInvOK",true);

  i = 1;
  while (GetRecordFromBrowse(IVr,wn,i)) begin
    if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
      if (credinv==false)  then begin
        MessageBox(1274,StringFromStringSet(3,"CredInvOK"));
        goto LOKIVLsm;
      end;
      if (credinv==true) and (norminv==false) then begin
        MessageBox(1274,StringFromStringSet(3,"InvOK"));
        goto LOKIVLsm;
      end; 
    end else begin
      if (norminv==false) then begin
        MessageBox(1274,StringFromStringSet(3,"InvOK"));
        goto LOKIVLsm;
      end;   
    end;
    err = IVTestApprovalStatus(IVr);
    if (err!=0 and err!=22402) then begin
      MessageBox(err,": " & IVr.SerNr);
      goto LOKIVLsm;
    end;
    if (RecordAction_rlIVLOK(IVr,true,flushcnt)) then begin      
      BlockLoad(AAb);
      docname = "InvForm";
      switch (IVr.InvType) begin
        case kInvoiceTypeCash: docname = "CashInvForm";
        case kInvoiceTypeCashInvoiceReceiptPRT: docname = "CashInvRecPRTForm";
        case kInvoiceTypeCredit: docname = "CredInvForm";
        case kInvoiceTypeInterest: docname = "IIInvForm";
        case kInvoiceTypeCreditSpecialSales: docname = "CredInvForm";
      end;
      if (AAb.InvoicePrinting==1) then begin
        if ((IVr.InvType==kInvoiceTypeNormal or IVr.InvType==kInvoiceTypeNormalSpecialSales) or (IVr.InvType==kInvoiceTypeDownpayment)) then begin
          if (nonblank(IVr.PRCode)) then begin    
            docname = "ProjInvForm";
          end;
        end;
        tmpf = PrintDocument(IVr,docname,false);    
      end;
    end;
LOKIVLsm:;      
    i = i + 1;
  end;
  UpdateBrowses("IVVc");
  RETURN;
END;

global
updating procedure OKIVDsm()
begin
  Integer wn,err;
  record IVVc IVr;
  LongInt i;
  record AutoActionBlock AAb;
  Boolean tmpf;
  string 20 docname;
  Integer flushcnt;
  string 255 tstr;
  
  wn = CurWindow;
  if (UserCanAction("InvOK",true)) then begin
    GetWindowRecord(wn,IVr);
    err = IVTestApprovalStatus(IVr);
    if (err!=0 and err!=22402) then begin
      MessageBox(err,"");
      goto LOKIVDsm;
    end;
    if (IVr.OKFlag==0) then begin
      IVr.OKFlag = 1;
      PutWindowRecord(wn,IVr);
      if (WindowDoOK(wn,0)) then begin
        BlockLoad(AAb);
        if (AAb.InvoicePrinting==1) then begin
          docname = "InvForm";
          switch (IVr.InvType) begin
            case kInvoiceTypeCash: docname = "CashInvForm";
            case kInvoiceTypeCashInvoiceReceiptPRT: docname = "CashInvRecPRTForm";
            case kInvoiceTypeCredit: docname = "CredInvForm";
            case kInvoiceTypeInterest: docname = "IIInvForm";
            case kInvoiceTypeCreditSpecialSales: docname = "CredInvForm";
          end;
          if ((IVr.InvType==kInvoiceTypeNormal or IVr.InvType==kInvoiceTypeNormalSpecialSales) or (IVr.InvType==kInvoiceTypeDownpayment)) then begin
            if (nonblank(IVr.PRCode)) then begin    
              docname = "ProjInvForm";
            end;
          end;
          tmpf = PrintDocument(IVr,docname,false);    
        end;
      end;
    end;
  end else begin
    MessageBox(1274,StringFromStringSet(3,"InvOK"));
  end;  
LOKIVDsm:;
  return;
end;

global
procedure IVInfoIVLsm()
BEGIN
  Integer wn;
  record IVVc IVr;
  record RcVc RepSpec;
  
  wn = CurWindow;  
//      RLGetSelectionIDs(wn,&ridh);
  if (ReadMarkedRecord(wn,IVr)) then begin
    RepSpec.long1 = IVr.SerNr;
    RepSpec.Media = mtScreen;
    RepSpec.repname = "IVInfoRn";
    RunReport(RepSpec,0);
  end;
  RETURN
END;

global
procedure EIVStatIVLsm()
begin
  record IVVc IVr;
  record RcVc RepSpec;
  Integer wn;

  wn = CurWindow;
//  if (ReadMarkedRecord(wn,IVr)) then begin
  RepSpec.repname = "EIVStatRn";
  RepSpec.long1 = -1;
  RepSpec.Media = mtScreen;
  RunReport(RepSpec,0);
  return;
end;

global
procedure PrintIVLsm()
BEGIN
  Integer wn,i,err;
  record IVVc IVr;
  
  wn = CurWindow;
  i = 1;
  while (GetRecordFromBrowse(IVr,wn,i)) begin
    err = IVTestApprovalStatus(IVr);
    if (err!=0) then begin
      MessageBox(err,"");
      goto LPrintIVLsm;
    end;
    if (PrintDocument(IVr,"Inv1Form",false)) then begin end;
LPrintIVLsm:;
    i = i + 1;
  end;
  RETURN
END;

global
procedure PrintIVL(Integer wn,Boolean previewf)
BEGIN
  record IVVc IVr;
  Integer i,err;
  
  StartPrintDialogGroup;
  i = 1;
  while (GetRecordFromBrowse(IVr,wn,i)) begin
    err = IVTestApprovalStatus(IVr);
    if (err!=0) then begin
      MessageBox(err,"");
      goto LPrintIVLsm2;
    end;
    RecordActionIV_Print(IVr,previewf,"InvForm",0,true);
LPrintIVLsm2:;
    i = i + 1;
  end;
  EndPrintDialogGroup;
  RETURN;
END;

global
updating procedure DropIVLClassOnEDIIVLClass(Integer frwn,Integer town)
BEGIN
  record IVVc IVr;
  record EDIIVVc EDIIVr;
  LongInt r;
  
  if ((GetWindowFileName(frwn)=="IVVc") and (GetWindowFileName(town)=="EDIIVVc")) then begin
    if (ReadMarkedRecord(frwn,IVr)) then begin
      if ((IVr.Invalid==0) and (IsRecordLocked(IVr)==false)) then begin
        RecordNew(EDIIVr);
        EDIIVr.OrderNr = IVr.SerNr;
        if (UserCanAction("IVToEDIInv",true)) then begin
          RraPasteInvInEDIInv(EDIIVr,r);
          if (r!=-1) then begin
            UpdateBrowses("EDIIVVc");
          end;
        end else begin
          MessageBox(1274,StringFromStringSet(3,"IVToEDIInv"));
        end;
      end;    
    end;
  end;  
  RETURN;
END;
