external procedure GetSalesGroup(string,var string);

global
function Boolean PasteRegDef(string fnr,string reg2,var string vatcode,var string vevatcode,var string langcode,var string doctype)
BEGIN
  record RegDefBlock RegDefRec;
  row RegDefBlock rdfw;
  Integer rwcnt,i;
  Boolean res;
 
  BlockLoad(RegDefRec);
  rwcnt = MatRowCnt(RegDefRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(RegDefRec,i,rdfw);
    if (reg2==rdfw.RegNo2) then begin
      vatcode = rdfw.SalesVATCode;
      vevatcode = rdfw.PurchVATCode;
      langcode = rdfw.LangCode;
      doctype = rdfw.DocType;
      res = true;
      goto LPasteRegDef;
    end;
  end;
LPasteRegDef:;
  PasteRegDef = res;
  RETURN;
END;

function Boolean VEDClassRegNr2EFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record CUVc VEr;
  string 20 tstr,cuvatcode,vevatcode,doctype;

  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,VEr);
    if (PasteRegDef("VEVc",VEr.RegNr2,cuvatcode,vevatcode,tstr,doctype)) then begin
      VEr.VEVATCode = vevatcode;
      VEr.LangCode = tstr;
      PutWindowRecord(wn,VEr);    
    end;
  end;
  VEDClassRegNr2EFAfter = res;
  RETURN;
END;

function Boolean VEDClassSalesManEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record CUVc VEr;
  string 20 tstr;

  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,VEr);
    GetSalesGroup(VEr.SalesMan,tstr);
    VEr.SalesGroup = tstr;
    PutWindowRecord(wn,VEr);    
  end;
  VEDClassSalesManEFAfter = res;
  RETURN;
END;

global
function Boolean VEDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "SalesMan": res = VEDClassSalesManEFAfter(wn,fn,rownr,changed);
    case "RegNr2": res = VEDClassRegNr2EFAfter(wn,fn,rownr,changed);
  end;
  VEDClassAfterEditField = res;
  RETURN;
END;
 
function Boolean VEDClassCodeEFActive(Integer wn,Integer fn,Integer wnst,Integer rownr,Integer ef)
begin
  Boolean res;
  record CUVc VEr;
  
  res = true;
  if (wnst==2) then begin//updatemode Rs_update
    res = false;
  end;
  VEDClassCodeEFActive = res;
  return;
end;

global
function Boolean VEDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  
  res = true;
  switch (fieldname) begin
    case "Code": res = VEDClassCodeEFActive(wn,fn,wnst,rownr,changed);
  end;
  VEDClassActiveEditField = res;
  RETURN;
END;