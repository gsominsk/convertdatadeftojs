external function Integer DateGetIntMonth(Date);
remote procedure CalculateVATDecl_Remote(var record VATDeclVc);
external updating procedure NorVATTmpEn(var record VATDr);
external updating procedure DEUVATTmpEn(var record VATDr);
external updating procedure NorVATGetReceiptBasic(var record VATDr);
external procedure GetNextVATDeclNr(var string);

function Boolean VATDeclDClassStartDateEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record VATDeclVc VATDr;
  LongInt md;
  
  if (changedf) then begin
    GetWindowRecord(wn,VATDr);
    md = GetMonth(VATDr.EndDate) - GetMonth(VATDr.StartDate) + 1;
    switch (md) begin
       case 1: VATDr.PeriodType = kPeriodTypeMonth;
       case 2: VATDr.PeriodType = kPeriodTypeTwoMonths;
       case 3: VATDr.PeriodType = kPeriodTypeQuarter;
       case 12:  VATDr.PeriodType = kPeriodTypeYear;
    end;
    PutWindowRecord(wn,VATDr);
  end;
  VATDeclDClassStartDateEFAfter = res;
  return;
end;

function Boolean VATDeclDClassEndDateEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record VATDeclVc VATDr;
  LongInt md;
  
  if (changedf) then begin
    GetWindowRecord(wn,VATDr);
    md = DateGetIntMonth(VATDr.EndDate) - DateGetIntMonth(VATDr.StartDate) + 1;
    switch (md) begin
       case 1: VATDr.PeriodType = kPeriodTypeMonth;
       case 2: VATDr.PeriodType = kPeriodTypeTwoMonths;
       case 3: VATDr.PeriodType = kPeriodTypeQuarter;
       case 12:  VATDr.PeriodType = kPeriodTypeYear;
    end;
    PutWindowRecord(wn,VATDr);
  end;
  VATDeclDClassEndDateEFAfter = res;
  return;
end;

global
function Boolean VATDeclDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "StartDate": res = VATDeclDClassStartDateEFAfter(wn,changed!=0);
    case "EndDate": res = VATDeclDClassEndDateEFAfter(wn,changed!=0);
  end;
  VATDeclDClassAfterEditField = res;
  return;
end;

global
function Boolean VATDeclDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record VATDeclVc VATDr;

  switch (wnst) begin
    case Rs_update:
      GetPrevWindowRecord(wn,VATDr);
      if (VATDr.OKFlag!=0) then begin
        goto LVATDeclDClassActiveEditField;
      end;
  end;
  res = true;
LVATDeclDClassActiveEditField:;  
  VATDeclDClassActiveEditField = res;
  return;
end;

global
function Boolean VATDeclDClassOKFlagButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record VATDeclVc VATDeclr;
 
  res = true;
  switch (WindowState(wn)) begin
    case Rs_update:
      GetPrevWindowRecord(wn,VATDeclr);
      if (VATDeclr.OKFlag!=0) then begin
        res = false;
        if (UserCanAction("UnOKAll",false)) then begin res = true; end; 
      end;
  end;  
  if (HasLocalization("NOR,DEU")) then begin
    res = false;
  end;
  VATDeclDClassOKFlagButtonAction = res;
  return;
end;

global
function Boolean VATDeclDClassPeriodTypeButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record VATDeclVc VATDeclr;
 
  res = true;
  switch (WindowState(wn)) begin
    case Rs_update:
      GetPrevWindowRecord(wn,VATDeclr);
      if (VATDeclr.OKFlag!=0) then begin
        goto LVATDeclDClassPeriodTypeButtonAction;
      end;
  end;  
  GetWindowRecord(wn,VATDeclr);
  switch (value) begin
    case 0: 
      VATDeclr.EndDate = VATDeclr.StartDate;
      VATDeclr.EndDate = AddDay(VATDeclr.EndDate,-GetDay(VATDeclr.EndDate)+DaysInMonth(GetYear(VATDeclr.EndDate),GetMonth(VATDeclr.EndDate)));
    case 1: 
      VATDeclr.EndDate = AddMonth(VATDeclr.StartDate,2);
      VATDeclr.EndDate = AddDay(VATDeclr.EndDate,-GetDay(VATDeclr.EndDate)+DaysInMonth(GetYear(VATDeclr.EndDate),GetMonth(VATDeclr.EndDate)));
    case 2:
      VATDeclr.EndDate = AddMonth(VATDeclr.StartDate,11);
      VATDeclr.EndDate = AddDay(VATDeclr.EndDate,-GetDay(VATDeclr.EndDate)+DaysInMonth(GetYear(VATDeclr.EndDate),GetMonth(VATDeclr.EndDate)));
  end;
  PutWindowRecord(wn,VATDeclr);
LVATDeclDClassPeriodTypeButtonAction:;  
  VATDeclDClassPeriodTypeButtonAction = res;
  return;
end;

global 
updating procedure CalculateVATDeclDsm()
begin
  record VATDeclVc VATDr;
  Integer wn;
  record XBRLSettingsVc XBRLSr;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,VATDr);
  if (blankdate(VATDr.StartDate)) then begin
    goto LCalculateVATDeclDsm;
  end;
  if (blankdate(VATDr.EndDate)) then begin
    goto LCalculateVATDeclDsm;
  end;
  CalculateVATDecl_Remote(VATDr);
  PutWindowRecord(wn,VATDr);
  WindowDoOK(wn,0);
LCalculateVATDeclDsm:;  
  return;
end;

global 
procedure ExportVATDeclDsm()
begin
  record VATDeclVc VATDr;
  record RcVc RepSpec;
  Integer wn;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,VATDr);
  ReportDefaults(RepSpec,"PeriodicVATEClass");
  RepSpec.repname = "PeriodicVATEn";
  RepSpec.Media = mtFile;
  RepSpec.f1 = VATDr.Code;
  wn = OpenWindow("PeriodicVATEClass",1,0,"","",RepSpec);
LCalculateVATDeclDsm:;  
  return;
end;

global 
updating procedure SendNORVatDeclDsm()
begin
  record VATDeclVc VATDr;
  record RcVc RepSpec;
  Integer wn,mwn;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,VATDr);
  if (blank(VATDr.TaxServID) or VATDr.OKFlag==0) then begin
    NorVATTmpEn(VATDr);
    PutWindowRecord(wn,VATDr);
    WindowDoOK(wn,0);
  end else begin
    MessageBox(38007,"");
  end;
  
  return;
end;

global 
updating procedure CheckNORVATDeclDsm()
begin
  record VATDeclVc VATDr;
  record RcVc RepSpec;
  Integer wn,mwn;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,VATDr);
  
  if (nonblank(VATDr.TaxServID)) then begin
    NorVATGetReceiptBasic(VATDr);
    PutWindowRecord(wn,VATDr);
    WindowDoOK(wn,0);
  end else begin
    MessageBox(38007,"");
  end;
  return;
end;

global 
updating procedure SendDEUVatDeclDsm()
begin
  record VATDeclVc VATDr;
  record RcVc RepSpec;
  Integer wn,mwn;
  string 255 tstr;
  LongInt vatdeclnr;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,VATDr);
  if (blank(VATDr.Code)) then begin
    GetNextVATDeclNr(tstr);
    VATDr.Code = tstr;    
    vatdeclnr = NextSerNr("VATDeclVc",VATDr.TransDate,-1,false,"");
    if (StringToLongInt(VATDr.Code)<vatdeclnr) then begin
      VATDr.Code = vatdeclnr;
    end;
  end;
  WindowDoOK(wn,0);
  if (blank(VATDr.TaxServID) or VATDr.OKFlag==0) then begin
    DEUVATTmpEn(VATDr);
    if (blank(VATDr.Code)) then begin
      GetNextVATDeclNr(tstr);
      VATDr.Code = tstr;    
      vatdeclnr = NextSerNr("VATDeclVc",VATDr.TransDate,-1,false,"");
      if (StringToLongInt(VATDr.Code)<vatdeclnr) then begin
        VATDr.Code = vatdeclnr;
      end;
    end;
    PutWindowRecord(wn,VATDr);
    WindowDoOK(wn,0);
  end else begin
    MessageBox(38007,"");
  end;
  
  return;
end;
