external procedure PasteLTxttoSMS(record SMSVc);
external updating function Integer TXSMSService(LongInt);

global
updating procedure SMSService()
BEGIN
  Integer wn;
  record SMSVc SMSr;
  Integer err;
  
  wn = CurWindow;
  GetWindowRecord(wn,SMSr);
  err = TXSMSService(SMSr.SerNr);
  if (err!=0) then begin
    MessageBox(0,USetStr(err));
  end else begin
    MessageBox(0,USetStr(20282));
  end;
  RETURN;
END;

global
function Boolean SMSDClassUpdateTest(Integer wn)
BEGIN
  Boolean res;
  record SMSVc SMSr;
  
  res = true;
  GetWindowRecord(wn,SMSr);
  if (SMSr.SendFlag!=0) then begin
    res = false;
    if (UserCanAction("UnOKAll",false)) then begin
      res = true;
    end;    
  end;
  SMSDClassUpdateTest = res;
  RETURN;
END;

function Boolean SMSDClassLTxtCodeEFAfter(Integer wn,Boolean changedf)
BEGIN
  record SMSVc SMSr;
  Boolean res;
  
  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,SMSr);
    PasteLTxttoSMS(SMSr);
    PutWindowRecord(wn,SMSr);
  end;
  SMSDClassLTxtCodeEFAfter = res;
  RETURN;
END;

global
function Boolean SMSDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;
  
  switch (fieldname) begin
    case "LTxtCode": res = SMSDClassLTxtCodeEFAfter(wn,changed!=0);
  end;
  SMSDClassAfterEditField = res;
  RETURN;
END;
