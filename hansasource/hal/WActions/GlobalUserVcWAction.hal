remote function Integer GetGlobalUserRow(string,string,var string,var string);
remote procedure RemoteFillGlobalUserComp(var record GlobalUserVc);
remote procedure RemoteFillSmartGlobalUserComp(var record GlobalUserVc);
external procedure FindUserMailboxName(string,var string,var string);

global
procedure ChangePasswdGlobalUserLsm()
BEGIN
  record GlobalUserVc GlobalUserr;
  record RcVc RepSpec;
  Integer wn,nwn;

  wn = CurWindow;
  if (UserCanAction("AllowPasswdChanging",true)) then begin
    if (ReadMarkedRecord(wn,GlobalUserr)) then begin
      nwn = OpenWindow("ChngePasswordNoOldClass",1,0,"","",RepSpec);
      DeselectWindow(nwn,false);
      RepSpec.ObjStr = GlobalUserr.Code;
      RepSpec.AccStr = "";
      RepSpec.FirstAcc = "";
      RepSpec.LastAcc = "";
      RepSpec.Notation = 1;
      RepSpec.ArtMode = 0;
      RepSpec.f1 = "DontQuiteOnCancel";
      PutWindowRecord(nwn,RepSpec);
      SelectWindow(nwn);
    end;
  end;
  RETURN;
END;

global
procedure CreateMailboxGlobalUserLsm()
BEGIN
  record ConfVc Confr;
  record GlobalUserVc GlobalUserr;
  record RcVc RepSpec;
  Integer wn,nwn;
  string 60 mailboxcode,mailboxname;  

  wn = CurWindow;
  if (ReadMarkedRecord(wn,GlobalUserr)) then begin
    FindUserMailboxName(GlobalUserr.Code,mailboxcode,mailboxname);
    if (nonblank(mailboxcode)) then begin
//      nwn = OpenWindow("MailLClass",0,0,mailboxcode,mailboxname,RepSpec);
      MessageBox(1464,"");
    end else begin
      RecordNew(Confr);
      Confr.AddrCode = GlobalUserr.Code;
      Confr.AddrName = GlobalUserr.Name;
      Confr.Class = kConfClassMailbox;
      Confr.MotherConf = -1;
      nwn = OpenWindow("ConfDClass",1,0,"","",Confr);
    end;
  end;
  RETURN;
END;

global
procedure FillCompGlobalUserDsm()
BEGIN
  record GlobalUserVc GlobalUserr;
  Integer wn,nwn;

  wn = CurWindow;
  GetWindowRecord(wn,GlobalUserr);
  RemoteFillGlobalUserComp(GlobalUserr);
  PutWindowRecord(wn,GlobalUserr);
  RETURN;
END;

global
procedure FillSmartCompGlobalUserDsm()
BEGIN
  record GlobalUserVc GlobalUserr;
  Integer wn,nwn;

  wn = CurWindow;
  GetWindowRecord(wn,GlobalUserr);
  RemoteFillSmartGlobalUserComp(GlobalUserr);
  PutWindowRecord(wn,GlobalUserr);
  RETURN;
END;

function Boolean GlobalUserDClassCodeEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  Boolean res;
  record GlobalUserVc GlobalUserr;
  record UserVc Userr;
  
  res = true;
  if (changedf!=0) then begin
    GetWindowRecord(wn,GlobalUserr);
    Userr.Code = GlobalUserr.Code;
    if (ReadFirstMain(Userr,1,true)) then begin
      GlobalUserr.Name = Userr.Name;
      GlobalUserr.AccessGroup = Userr.AccessGroup;
      GlobalUserr.emailAddr = Userr.emailAddr;
      GlobalUserr.LoginEmailAddr = Userr.LoginEmailAddr;
      GlobalUserr.LangCode = Userr.LangCode;
      GlobalUserr.FTPLogin = Userr.FTPLogin;
      GlobalUserr.OnlyVoiceLogin = Userr.OnlyVoiceLogin;
      GlobalUserr.OneFunction = Userr.OneFunction;
      GlobalUserr.CustCode = Userr.CustCode;
      GlobalUserr.TypeOfUser = Userr.TypeOfUser;
      GlobalUserr.CanUseOS = Userr.CanUseOS;
      GlobalUserr.StartLevel = Userr.StartLevel;
      PutWindowRecord(wn,GlobalUserr);
    end;
  end;
  GlobalUserDClassCodeEFAfter = res;
  return;
end;

function Boolean GlobalUserDClassCompCodeEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  Boolean res;
  record GlobalUserVc GlobalUserr;
  row GlobalUserVc GlobalUserrw;
  record UserVc Userr;
  string 60 compname,accessgroup;
  
  res = true;
  if (changedf!=0) then begin
    GetWindowRecord(wn,GlobalUserr);
    MatRowGet(GlobalUserr,rownr,GlobalUserrw);
    if (GetGlobalUserRow(GlobalUserr.Code,GlobalUserrw.CompCode,compname,accessgroup)>=0) then begin
      GlobalUserrw.CompName = compname;
      GlobalUserrw.AccessGroup = accessgroup;
      MatRowPut(GlobalUserr,rownr,GlobalUserrw);
      PutWindowRecord(wn,GlobalUserr);
    end else begin
      MessageBox(1465,"");
    end;
  end;
  GlobalUserDClassCompCodeEFAfter = res;
  return;
end;

global
function Boolean GlobalUserDClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
begin
  Boolean res;
  
  res = false;
  switch (fieldname) begin
    case "Code": res = GlobalUserDClassCodeEFAfter(wn,fn,rownr,changed);
    case "CompCode": res = GlobalUserDClassCompCodeEFAfter(wn,fn,rownr,changed);
  end;
  GlobalUserDClassAfterEditField = res;
  return;
end;

global
function Boolean GlobalUserDClassUnlicensedButtonAction(Integer wn,Integer value)
begin
  GlobalUserDClassUnlicensedButtonAction = false;
  return;
end;
