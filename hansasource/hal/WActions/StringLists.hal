external procedure PasteFromSysList(Integer ,Integer);
remote procedure FillARPay3SClass(string,string,string,Date,
                           var Array LongInt,var Array LongInt,var Array Date,
                           var Array val,var Array val,var Array val,var Array string,
                           var Integer);
remote procedure FillAPPay3SClass(string,string,string,Date,
                           var Array LongInt,var Array LongInt,var Array Date,
                           var Array val,var Array val,var Array val,var Array string,
                           var Integer);

procedure IVVc_ARPay3SClass(string index,string sorting,Integer mwn,
                           var Array LongInt acupnr,var Array LongInt aordernr,var Array Date apaydate,
                           var Array val avatval,var Array val arval,var Array val abookrval,var Array string acurncycode,
                           var Integer acnt)
begin
  record IVVc IVr;
  
  GetWindowRecord(mwn,IVr);
  FillARPay3SClass(index,sorting,IVr.CustCode,IVr.TransDate,acupnr,aordernr,apaydate,avatval,arval,abookrval,acurncycode,acnt);
  return;
end;

procedure AddARPay3StringListRow(Integer wn,string tag,LongInt cupnr,LongInt ordernr,Date paydate,val vatval,val rval,val bookrval,string curncycode)
begin
  string 255 tstr;
  val v
  
  AddListRow(wn,"openprepayments",1,tag,0);
  AddListData(wn,"openprepayments","nr",cupnr);
  tstr = ordernr;
  if (ordernr<0) then begin tstr = ""; end;
  AddListData(wn,"openprepayments","ordernr",tstr);
  AddListData(wn,"openprepayments","paydate",paydate);
  v = vatval;
  if (v==0) then begin v = blankval; end;
  AddListData(wn,"openprepayments","vatval",v);  
  AddListData(wn,"openprepayments","sumval",rval);
  AddListData(wn,"openprepayments","bookedval",bookrval);
  AddListData(wn,"openprepayments","curncy",curncycode);
  return;
end;

procedure ARPay3SClassOnOpen(string index,string sorting,Integer wn)
begin
  Integer mwn;
  Array LongInt acupnr;
  Array LongInt aordernr;
  Array Date apaydate;
  Array val avatval;
  Array val arval;
  Array val abookrval;
  Array string 255 acurncycode;  
  Integer i,acnt;
                           
  mwn = MotherWindow(wn);
  if (ProgramType==typTravellingSalesman) then begin
    mwn = MotherWindow(mwn);
  end;
  switch (GetWindowFileName(mwn)) begin
    case "IVVc": IVVc_ARPay3SClass(index,sorting,mwn,acupnr,aordernr,apaydate,avatval,arval,abookrval,acurncycode,acnt);
    case "RcVc": 
      switch (GetWindowClass(mwn)) begin
        case "ConnectToPrepaymentNPTSSClass":
          IVVc_ARPay3SClass(index,sorting,MotherWindow(mwn),acupnr,aordernr,apaydate,avatval,arval,abookrval,acurncycode,acnt);
      end;
  end;
  ClearStringList(wn);
  for (i=0;i<acnt;i=i+1) begin
    AddARPay3StringListRow(wn,acupnr[i],acupnr[i],aordernr[i],apaydate[i],avatval[i],arval[i],abookrval[i],acurncycode[i]);
  end;      
  SetSelectedListLine(wn,0);
  return;
end;

global
function Boolean ARPay3SClassOnOpenWindow(Integer wn)
begin
  ARPay3SClassOnOpen("CustCode","",wn);
  ARPay3SClassOnOpenWindow = false;
  return;
end;

global
function Boolean ARPay3SClassOnOKWindow(Integer wn)
begin
  PasteFromSysList(wn,-2);
  ARPay3SClassOnOKWindow = false;
  return;
end;

procedure VIVc_APPay3SClass(string index,string sorting,Integer mwn,
                           var Array LongInt acupnr,var Array LongInt aordernr,var Array Date apaydate,
                           var Array val avatval,var Array val arval,var Array val abookrval,var Array string acurncycode,
                           var Integer acnt)
begin
  record VIVc VIr;
  
  GetWindowRecord(mwn,VIr);
  FillAPPay3SClass(index,sorting,VIr.VECode,VIr.TransDate,acupnr,aordernr,apaydate,avatval,arval,abookrval,acurncycode,acnt);
  return;
end;

procedure AddAPPay3StringListRow(Integer wn,string tag,LongInt cupnr,LongInt ordernr,Date paydate,val vatval,val rval,val bookrval,string curncycode)
begin
  string 255 tstr;
  val v
  
  AddListRow(wn,"openprepayments",1,tag,0);
  AddListData(wn,"openprepayments","nr",cupnr);
  tstr = ordernr;
  if (ordernr<0) then begin tstr = ""; end;
  AddListData(wn,"openprepayments","ordernr",tstr);
  AddListData(wn,"openprepayments","paydate",paydate);
  v = vatval;
  if (v==0) then begin v = blankval; end;
  AddListData(wn,"openprepayments","vatval",v);  
  AddListData(wn,"openprepayments","sumval",rval);
  AddListData(wn,"openprepayments","bookedval",bookrval);
  AddListData(wn,"openprepayments","curncy",curncycode);
  return;
end;

procedure APPay3SClassOnOpen(string index,string sorting,Integer wn)
begin
  Integer mwn;
  Array LongInt acupnr;
  Array LongInt aordernr;
  Array Date apaydate;
  Array val avatval;
  Array val arval;
  Array val abookrval;
  Array string 255 acurncycode;  
  Integer i,acnt;
                           
  mwn = MotherWindow(wn);
  if (ProgramType==typTravellingSalesman) then begin
    mwn = MotherWindow(mwn);
  end;
  switch (GetWindowFileName(mwn)) begin
    case "VIVc": VIVc_APPay3SClass(index,sorting,mwn,acupnr,aordernr,apaydate,avatval,arval,abookrval,acurncycode,acnt);
    case "RcVc": 
      switch (GetWindowClass(mwn)) begin
        case "ConnectToPrepaymentNPTSSClass":
          VIVc_APPay3SClass(index,sorting,MotherWindow(mwn),acupnr,aordernr,apaydate,avatval,arval,abookrval,acurncycode,acnt);
      end;
  end;
  ClearStringList(wn);
  for (i=0;i<acnt;i=i+1) begin
    AddAPPay3StringListRow(wn,acupnr[i],acupnr[i],aordernr[i],apaydate[i],avatval[i],arval[i],abookrval[i],acurncycode[i]);
  end;      
  SetSelectedListLine(wn,0);
  return;
end;

global
function Boolean APPay3SClassOnOpenWindow(Integer wn)
begin
  APPay3SClassOnOpen("VECode","",wn);
  APPay3SClassOnOpenWindow = false;
  return;
end;

global
function Boolean APPay3SClassOnOKWindow(Integer wn)
begin
  PasteFromSysList(wn,-2);
  APPay3SClassOnOKWindow = false;
  return;
end;
