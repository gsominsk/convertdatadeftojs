function Boolean QCTemplateDClassQCTestEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  Boolean res;
  record QCTemplateVc QCTr;
  row QCTemplateVc QCTrw;
  record QCTestVc QCTestr;
  
  if (changedf) then begin
    GetWindowRecord(wn,QCTr);
    MatRowGet(QCTr,rownr,QCTrw);
    QCTestr.Code = QCTrw.QCTest;
    if (ReadFirstMain(QCTestr,1,true)) then begin
      QCTrw.Comment = QCTestr.Comment;
      QCTrw.QCUnit = QCTestr.QCUnit;
      MatRowPut(QCTr,rownr,QCTrw);
      res = true;
    end;
    PutWindowRecord(wn,QCTr);
  end;
  QCTemplateDClassQCTestEFAfter = res;
  return;
end;

global
function Boolean QCTemplateDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "QCTest": res = QCTemplateDClassQCTestEFAfter(wn,rownr,changed!=0);
  end;
  QCTemplateDClassAfterEditField = res;
  return;
end;
