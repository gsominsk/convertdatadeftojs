procedure HRMPayrollSumUp(var record HRMPayrollVc HRMPr)
begin
  row HRMPayrollVc HRMPrw;
  Integer i,rwcnt;
  
  HRMPr.TotSum = blankval;
  rwcnt = MatRowCnt(HRMPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(HRMPr,i,HRMPrw);
    HRMPr.TotSum = HRMPr.TotSum + HRMPrw.Sum;
  end;
  return;
end;

function Boolean HRMPayrollDClassHRMSumEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin  
  record HRMPayrollVc HRMPr;
  row HRMPayrollVc HRMPrw;
  record HRMPymtTypeVc HRMPTr;

  if (changedf) then begin  
    GetWindowRecord(wn,HRMPr);
    HRMPayrollSumUp(HRMPr);
    PutWindowRecord(wn,HRMPr);
  end;  
  HRMPayrollDClassHRMSumEFAfter = true;
  return;
end;

function Boolean HRMPayrollDClassHRMPymtTypeEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin  
  record HRMPayrollVc HRMPr;
  row HRMPayrollVc HRMPrw;
  record HRMPymtTypeVc HRMPTr;

  if (changedf) then begin  
    GetWindowRecord(wn,HRMPr);
    MatRowGet(HRMPr,rownr,HRMPrw);
    HRMPTr.Code = HRMPrw.HRMPymtType;
    ReadFirstMain(HRMPTr,1,true);
    HRMPrw.HRMPymtTypeComment = HRMPTr.Comment;
    MatRowPut(HRMPr,rownr,HRMPrw);
    PutWindowRecord(wn,HRMPr);
  end;  
  HRMPayrollDClassHRMPymtTypeEFAfter = true;
  return;
end;

function Boolean HRMPayrollDClassUserCodeEFAfter(Integer wn,Boolean changedf)
begin  
  record HRMPayrollVc HRMPr;
  record UserVc Userr;

  if (changedf) then begin  
    GetWindowRecord(wn,HRMPr);
    Userr.Code = HRMPr.UserCode;
    ReadFirstMain(Userr,1,true);
    HRMPr.UserName = Userr.Name;
    PutWindowRecord(wn,HRMPr);
  end;  
  HRMPayrollDClassUserCodeEFAfter = true;
  return;
end;

global
function Boolean HRMPayrollDClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "UserCode": res = HRMPayrollDClassUserCodeEFAfter(wn,changed!=0);
    case "HRMPymtType": res = HRMPayrollDClassHRMPymtTypeEFAfter(wn,rownr,changed!=0);
    case "Sum": res = HRMPayrollDClassHRMSumEFAfter(wn,rownr,changed!=0);
  end;
  HRMPayrollDClassAfterEditField = res;
  return;
end;

global
function Boolean HRMPayrollDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record HRMPayrollVc HRMPr;
  
  res = true;
  GetWindowRecord(wn,HRMPr);
  switch (wnst) begin
    case Rs_insert:
      res = true;
    otherwise
      if (HRMPr.OKFlag!=0) then begin
        res = false;
      end;
  end;
  switch (fieldname) begin
    case "TotSum": res = false;
  end;
  HRMPayrollDClassActiveEditField = res;
  return;
end;

global
function Boolean HRMPayrollDClassOnOverStrike(Integer wn,Integer rownr)
begin
  record HRMPayrollVc HRMPr;

  if (rownr>=0) then begin
    GetWindowRecord(wn,HRMPr);
    HRMPayrollSumUp(HRMPr);
    PutWindowRecord(wn,HRMPr);
  end;
  HRMPayrollDClassOnOverStrike = true;
  return;
end;

global
function Boolean HRMPayrollDClassOKFlagButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record HRMPayrollVc HRMPr;
  
  res = true;
  switch (WindowState(wn)) begin
    case Rs_normal:
      GetWindowRecord(wn,HRMPr);
      if (HRMPr.OKFlag!=0) then begin
        res = false;
      end;
    case Rs_update:
      GetPrevWindowRecord(wn,HRMPr);
      if (HRMPr.OKFlag!=0) then begin
        res = false;
      end;
  end;
  HRMPayrollDClassOKFlagButtonAction = res;
  return;
end;

