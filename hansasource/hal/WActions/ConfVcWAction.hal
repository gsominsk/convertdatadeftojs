external function Integer CheckCurrentUserConfAccess(record ConfVc);
external procedure SearchMailRClassReportDefaults(Integer);
external procedure OpenAutoReply(LongInt);
external function Boolean GetConfWIcn(string,LongInt,var Integer,var Integer,record ConfVc);

global
function Boolean ConfDClassClassEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record ConfVc Confr;

  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,Confr);
    Confr.MaxMail = -1;
    Confr.MaxReadDays = -1;
    Confr.MaxUnreadDays = -1;
    PutWindowRecord(wn,Confr);    
  end;
  ConfDClassClassEFAfter = res;
  RETURN;
END;

global
function Boolean ConfDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "Class": res = ConfDClassClassEFAfter(wn,fn,rownr,changed);
  end;
  ConfDClassAfterEditField = res;
  RETURN;
END;


global
procedure ConferenceWToolProperties()
BEGIN
  Integer wn,nwn;
  record ConfVc Confp;
  Integer icn,ic2n;
  
  wn = CurWindow;
//  if (UserModuleAccess("modEmail")!=5) or (ProgramType==typBooksJobCost) or ((ProgramType==typBooks) and (ValuePack(2)))  then begin
//  if (ProgramType!=typBooks) or (ProgramType==typBooksJobCost) or ((ProgramType==typBooks) and ((ValuePack(5)) or (ValuePack(2))))  then begin
  if (IsStandardProduct) or (UserModuleAccess("modEmail")!=kAccessLevelNone) or (IsBooks and HasLocalization("FIN")) then begin
    if (GetConfWIcn(GetWindowSubset(wn),SelectedConference(wn)-1,icn,ic2n,Confp)==false) then begin
      if (GetConfWIcn(GetWindowSubset(wn),SelectedConference(wn),icn,ic2n,Confp)) then begin
        if (Confp.MotherConf>0) then begin goto LConferenceWToolProperties; end;
      end;
      nwn = OpenWindow("ConfDClass",1,0,"","",Confp);
    end else begin
      if (Confp.MotherConf<=0) then begin
        if (GetConfWIcn(GetWindowSubset(wn),SelectedConference(wn),icn,ic2n,Confp)==false) then begin 
          goto LConferenceWToolProperties;
        end;
      end;
      if (CheckCurrentUserConfAccess(Confp)!=0) then begin
        nwn = OpenWindow("ConfDClass",1,0,"","",Confp);
      end;
    end;
  end;
LConferenceWToolProperties:;  
  RETURN;
END;

global
procedure ConferenceWToolSearch()
BEGIN
  Integer wn,nwn;
  record RcVc RepSpec;
  
  wn = CurWindow;
  nwn = OpenWindow("SearchMailRClass",0,0,"","",RepSpec);
  DeselectWindow(nwn,false);
  ReportDefaults(RepSpec,"SearchMailRClass");
  SearchMailRClassReportDefaults(nwn);
  GetWindowRecord(nwn,RepSpec);  
  RepSpec.long1 = GetWindowSubset(wn);
  RepSpec.Media = mtScreen;
  RepSpec.repname = "SearchMailConfRn";
  RepSpec.critname = "SearchMailRClass";
  PutWindowRecord(nwn,RepSpec);  
  WindowFieldGoto(nwn,RepSpec,-1,"f2",true);
  RETURN;
END;

procedure PasteLTxttoConfAutoReply(record ConfAutoReplyVc ConfAutoReplyr)
BEGIN
  record LTxtVc LTxtr;
  string 255 tstr;
  Integer pos,textsize;

  LTxtr.Code = ConfAutoReplyr.LTxtCode;
  if (ReadFirstMain(LTxtr,1,true)) then begin
    textsize = SizeTextCnt(LTxtr);
    while (pos<textsize) begin
      tstr = StringFromText(LTxtr,pos,255);
      pos = pos + len(tstr);
      if (len(tstr)==0) then begin
        pos = pos + 1;
      end;
      AddToText(tstr,ConfAutoReplyr);
    end;
  end;  
  RETURN;
END;

function Boolean ConfAutoReplyLTxtCodeEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  record ConfAutoReplyVc ConfAutoReplyr;
  Boolean res;
  
  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,ConfAutoReplyr);
    PasteLTxttoConfAutoReply(ConfAutoReplyr);
    PutWindowRecord(wn,ConfAutoReplyr);
  end;
  ConfAutoReplyLTxtCodeEFAfter = res;
  RETURN;
END;

global
function Boolean ConfAutoReplyDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "LTxtCode": res = ConfAutoReplyLTxtCodeEFAfter(wn,fn,rownr,changed);
  end;
  ConfAutoReplyDClassAfterEditField = res;
  RETURN;
END;

global
procedure AutoReplyConfWsm()
BEGIN
  record ConfVc Confr;
  Integer wn;

  wn = CurWindow;
  GetWindowRecord(wn,Confr);
  if (Confr.SerNr>-1) then begin
    OpenAutoReply(Confr.SerNr);
  end;
  RETURN;
END;

global
procedure ConfDAccessWsm()
BEGIN
  record RcVc RepSpec;
  record ConfVc Confr;
  Integer wn;

  wn = CurWindow;
  GetWindowRecord(wn,Confr);
  if (Confr.SerNr>-1) then begin
    RepSpec.repname = "ConfAccessRn";
    ReportDefaults(RepSpec,"ConfAccessRClass");
    RepSpec.f1 = Confr.AddrName;
    RepSpec.Media = mtScreen;
    RunReport(RepSpec,0);   
  end;
  RETURN;
END;

