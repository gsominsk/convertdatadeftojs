global
function Boolean BuyBackDClassOKFlagButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record BuyBackVc BBr;
  Integer normalmode,updatemode;
  
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,BBr);
    if (BBr.OKFlag!=0) then begin
      res = false;
      if (UserCanAction("UnOKAll",false)) then begin
        res = true;
      end;
    end;
  end;  
  if (WindowState(wn)==updatemode) then begin
    GetPrevWindowRecord(wn,BBr);
    if (BBr.OKFlag!=0) then begin
      res = false;
    end;
  end;
  BuyBackDClassOKFlagButtonAction = res;
  return;
end;

global
function Boolean BuyBackDClassInvdFlagButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record BuyBackVc BBr;
  Integer normalmode,updatemode;
  
  res = false;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,BBr);
    if (BBr.OKFlag!=0) then begin
      if (UserCanAction("UnOKAll",false)) then begin
        res = true;
      end;
    end;
  end;  
  BuyBackDClassInvdFlagButtonAction = res;
  return;
end;

global
function Boolean BuyBackDClassReconciledButtonAction(Integer wn,Integer value)
begin
  Boolean res;
  record BuyBackVc BBr;
  Integer normalmode,updatemode;
  
  res = false;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,BBr);
    if (BBr.Reconciled==0) then begin
      res = true;
    end;
  end;  
  BuyBackDClassReconciledButtonAction = res;
  return;
end;

global
function Boolean BuyBackDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record BuyBackVc BBr;
  Integer normalmode,updatemode;
  
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,BBr);
    if (BBr.OKFlag!=0) then begin
      res = false;
    end;
    if (BBr.Reconciled!=0) then begin
      res = false;
    end;
  end;  
  if (WindowState(wn)==updatemode) then begin
    GetPrevWindowRecord(wn,BBr);
    if (BBr.OKFlag!=0) then begin
      res = false;
    end;
    if (BBr.Reconciled!=0) then begin
      res = false;
    end;
  end;
      res = true;
  BuyBackDClassActiveEditField = res;
  return;
end;

global
procedure SplitBuyBackLsm()
begin
  Integer wn,nwn;
  record BuyBackVc BBr;
  record RcVc RepSpec;
  
  wn = curWindow;
  if (ReadMarkedRecord(wn,BBr)) then begin
  end;
  nwn = OpenWindow("SplitBuyBackCostVClass",0,0,"","",RepSpec);
  DeselectWindow(nwn,false);
  RepSpec.repname = "SplitBuyBackCostMn";
  RepSpec.f1 = BBr.BuyBackNr;
  RepSpec.ObjStr = BBr.ArtCode;
  PutWindowRecord(nwn,RepSpec);
  WindowFieldGoto(nwn,RepSpec,-1,"vals0",true);
  return;
end;

global
procedure OpenIVBuyBackDsm()
begin
  Integer wn,nwn;
  record BuyBackVc BBr;
  record IVVc IVr;

  wn = CurWindow;
  GetWindowRecord(wn,BBr);
  IVr.SerNr = BBr.IVNr;
  if (ReadFirstMain(IVr,1,true)) then begin
    nwn = OpenWindow("IVDClass",1,0,"","",IVr);
  end;
  return;
end;

global
procedure SerHistBuyBackDsm()
begin
  record RcVc RepSpec;
  record BuyBackVc BBr;
  record YearBlock YearRec;
  row YearBlock YearRecrw;
  Integer wn,i;
  
  BlockLoad(YearRec);
  wn = CurWindow;
  i = 1;
  GetWindowRecord(wn,BBr);
  ReportDefaults(RepSpec,"SerialNrRClass");  
  RepSpec.Media = mtScreen;
  RepSpec.f1 = BBr.ArtCode;
  RepSpec.f2 = BBr.SerialNr;
  RepSpec.repname = "SERSerialRn";
  if (MatRowCnt(YearRec)>0) then begin
    MatRowGet(YearRec,0,YearRecrw);
    RepSpec.sStartDate = YearRecrw.StartDate;
  end;
  RunReport(RepSpec,0);
  return;
end;
