external function string 40 ObjSClassPasteSpecialWindowClass(string);
remote procedure RecAction_raBud2AccObjCalc(var record Bud2Vc);
remote procedure RecAction_raBud2Sumup(var record Bud2Vc);
external procedure NormalizeObjstr(var string);
external function Boolean GetAccName(string,var string,Integer);
remote updating function Boolean RecordAction_rlBud2LOK(var record Bud2Vc);
external procedure FindOTforAcc(string,var string);

function Boolean Bud2DClassAccNumberEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record Bud2Vc Bud2r;
  string 255 tstr;

  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,Bud2r);
    if (GetAccName(Bud2r.AccNumber,tstr,60)) then begin
      Bud2r.Comment = tstr;
      PutWindowRecord(wn,Bud2r);    
    end;
  end;
  Bud2DClassAccNumberEFAfter = res;
  RETURN;
END;

function Boolean Bud2DClassObjectsEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record Bud2Vc Bud2r;
  string 255 tstr;

  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,Bud2r);
    tstr = Bud2r.Objects;
    NormalizeObjstr(tstr);
    Bud2r.Objects = tstr;
    PutWindowRecord(wn,Bud2r);    
  end;
  Bud2DClassObjectsEFAfter = res;
  RETURN;
END;

global
function Boolean Bud2DClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "AccNumber": res = Bud2DClassAccNumberEFAfter(wn,fn,rownr,changed);
    case "Objects": res = Bud2DClassObjectsEFAfter(wn,fn,rownr,changed);
  end;
  Bud2DClassAfterEditField = res;
  RETURN;
END;

global
procedure RecalculateBud2Dsm()
BEGIN
  record Bud2Vc Bud2r;
  Integer wn;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,Bud2r);
  if (MatRowCnt(Bud2r)>0) then begin
    RecAction_raBud2Sumup(Bud2r);
    PutWindowRecord(wn,Bud2r);
  end else begin
    MessageBox(1024,"");
    WindowFieldGoto(wn,Bud2r,0,"BudDate",false);
  end;
  return;  
end;

global
procedure CalcSumBud2Dsm()
BEGIN
  record Bud2Vc Bud2r;
  Integer wn;
  
  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,Bud2r);
  RecAction_raBud2AccObjCalc(Bud2r);
  PutWindowRecord(wn,Bud2r);
  RETURN;  
END;

global
function Boolean Bud2DClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record Bud2Vc Bud2r;
  
  res=true;
  if (wnst==2) then begin//updatemode
    GetPrevWindowRecord(wn,Bud2r);
    if (Bud2r.OKFlag!=0) then begin
      res=false;
    end;
  end;    
  Bud2DClassActiveEditField = res;
  return;
END;

global
function Boolean Bud2DClassOKFlagButtonAction(Integer wn,Integer value)
BEGIN
  Boolean res;
  record Bud2Vc Bud2r;
  Integer normalmode,updatemode;
 
  res = true;
  normalmode = 0;//Rs_normal
  updatemode = 2;//Rs_update
  if (WindowState(wn)==normalmode) then begin
    GetWindowRecord(wn,Bud2r);
    if (Bud2r.OKFlag!=0) then begin
      res = false;
      if ((UserCanAction("UnOKAll",false) or UserCanAction("UnOKRevBud",true))) then begin
        res = true;
      end;
    end;
    if (Bud2r.OKFlag==0) then begin
      res = true;
      if (UserCanAction("RevBudOK",true)==false) then begin
        res = false;
        MessageBox(1274,StringFromStringSet(3,"RevBudOK"));
      end;
    end;
  end;  
  if (WindowState(wn)==updatemode) then begin
    GetPrevWindowRecord(wn,Bud2r);
    if (Bud2r.OKFlag!=0) then begin
      res = false;
    end;
  end;  
  Bud2DClassOKFlagButtonAction = res;
  return;
END;

global
updating procedure Bud2Lsm()
BEGIN
  record Bud2Vc Bud2r;
  LongInt i;

  i = 1;
  while (GetRecordFromBrowse(Bud2r,CurWindow,i)) begin
  if (RecordAction_rlBud2LOK(Bud2r)) then begin end;
    i = i + 1;
  end;
  UpdateBrowses("Bud2Vc");
  
  return;
end;

global
procedure Bud2DClassSpecPasteNameObjects(Integer wn,var string psname)
begin
  record Bud2Vc Bud2r;
  string 200 typ;
  
  psname = ObjSClassPasteSpecialWindowClass("ObjSClass");
  GetWindowRecord(wn,Bud2r);
  if (nonblank(Bud2r.AccNumber)) then begin 
    FindOTforAcc(Bud2r.AccNumber,typ);
    if (nonblank(typ)) then begin
      psname = "TRObjSClass";
    end;     
  end;
  return;
end;

global
function string 40 Bud2DClassSpecPasteName(Integer wn,string defpsname)
begin
  string 255 psname;
  
  psname = defpsname;
  switch (WindowActiveField(wn)) begin
    case "Objects":Bud2DClassSpecPasteNameObjects(wn,psname);
  end;
  Bud2DClassSpecPasteName = psname;
  return;
end;