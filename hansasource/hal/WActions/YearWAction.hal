global
function Boolean YearTClassDeleteRowTest(Integer wn,Integer rownr)
BEGIN
  Boolean res;
  record YearBlock Year2b;
  record YearBlock Yearb;
  record TRVc TRr;
  row YearBlock Yearrw;

  res = false;
  BlockLoad(Year2b);
  GetWindowRecord(wn,Yearb);
  if (rownr<MatRowCnt(Year2b)) then begin
    MatRowGet(Yearb,rownr,Yearrw);
    TRr.TransDate = Yearrw.EndDate;
    ReadlastKey("TransDate",TRr,1,false);
    res = DateInRange(TRr.TransDate,Yearrw.StartDate,Yearrw.EndDate)==false;
  end;
  YearTClassDeleteRowTest = res;
  RETURN;
END;

global
function Boolean YearTClassInsertRowTest(Integer wn,Integer rownr)
BEGIN
  Boolean res;
  record YearBlock Yearb;

  res = false;
  YearTClassInsertRowTest = res;
  RETURN;
END;

global
function Boolean YearTClassUpdateTest(Integer wn)
BEGIN
  Boolean res;
  record YearBlock Yearb;
  row YearBlock Yearrw;
  Integer rownr;

  rownr = WindowActiveRow(wn);
  GetWindowRecord(wn,Yearb);
  if (rownr<MatRowCnt(Yearb)) then begin
    MatRowGet(Yearb,rownr,Yearrw);
    if ((nonblankdate(Yearrw.StartDate)) and (nonblankdate(Yearrw.EndDate))) then begin
//      MessageBox(0,USetStr(1763));
    end;
  end;
  YearTClassUpdateTest = true;
  RETURN;
END;

global
function Boolean YearTClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  record YearBlock Year2b;
  record YearBlock Yearb;
  row YearBlock Yearrw;
  record TRVc TRr;

  BlockLoad(Year2b);
  GetWindowRecord(wn,Yearb);
  res = true;
  if (rownr<(MatRowCnt(Year2b)-1)) then begin
    res = false;
  end;
  /*
  if (rownr<MatRowCnt(Year2b)) then begin
    MatRowGet(Yearb,rownr,Yearrw);
    if (nonblankdate(Yearrw.StartDate)) and (nonblankdate(Yearrw.EndDate)) then begin
      TRr.TransDate = Yearrw.EndDate;
      ReadlastKey("TransDate",TRr,1,false);
      res = DateInRange(TRr.TransDate,Yearrw.StartDate,Yearrw.EndDate)==false;
    end;
  end;
  */
  YearTClassActiveEditField = res;
  return;
end;
