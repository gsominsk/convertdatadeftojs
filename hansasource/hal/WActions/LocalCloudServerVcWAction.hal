global
function string 40 LocalCloudServerDClassSpecPasteName(Integer wn,string defpsname)
begin
  string 255 psname;
  record LocalCloudServerVc LCSr;
  row LocalCloudServerVc LCSrw;
  Integer rownr;
  
  psname = defpsname;
  switch (WindowActiveField(wn)) begin
    case "ItemName":
      GetWindowRecord(wn,LCSr);
      rownr = WindowActiveRow(wn);
      if (rownr>=0) then begin
        MatRowGet(LCSr,rownr,LCSrw);
        switch (LCSrw.Item) begin
          case kManagedServerItemEnabler:           psname = "EnablerSClass";
          case kManagedServerItemSystemCopy:        psname = "RemoteCloudServerSClass";
          case kManagedServerItemCrontabEntry:      psname = "";
          case kManagedServerItemParameters:        psname = "";
          case kManagedServerItemStartMaintenance:  psname = "";
          case kManagedServerItemSlaveSystem:       psname = "RemoteCloudServerSClass";
          case kManagedServerItemReserveSystem:     psname = "RemoteCloudServerSClass";
          case kManagedServerItemTestSystem:        psname = "RemoteCloudServerSClass";
          case kManagedServerItemUpdateSystem:      psname = "RemoteCloudServerSClass";
          case kManagedServerItemMotherSystem:      psname = "RemoteCloudServerSClass";
        end;
      end;
  end;
  LocalCloudServerDClassSpecPasteName = psname;
  return;
end;

function Boolean LocalCloudServerDClassNameEFAfter(Integer wn,Integer fn,Integer rownr,Integer changedf)
begin
  Boolean res;
  record LocalCloudServerVc LCSr;
  row LocalCloudServerVc LCSrw;
  record RemoteCloudServerVc RCSr;
  record EnablerVc EnabVc;
  
  res = true;
  if (changedf!=0 and rownr>=0) then begin
    GetWindowRecord(wn,LCSr);
    MatRowGet(LCSr,rownr,LCSrw);
    switch (LCSrw.Item) begin
      case kManagedServerItemEnabler:
        EnabVc.Name = LCSrw.ItemName;
        if (ReadFirstMain(EnabVc,1,true)) then begin
          LCSrw.Data = EnabVc.Data;
        end;
      case kManagedServerItemSystemCopy:
        RCSr.UUID = StringToUUID(LCSrw.ItemName);
        if (ReadFirstMain(RCSr,1,true)) then begin
          LCSrw.Desc = RCSr.ServerName;
        end;
      case kManagedServerItemCrontabEntry:
      case kManagedServerItemParameters:
      case kManagedServerItemStartMaintenance:
      case kManagedServerItemSlaveSystem:
        RCSr.UUID = StringToUUID(LCSrw.ItemName);
        if (ReadFirstMain(RCSr,1,true)) then begin
          LCSrw.Desc = RCSr.ServerName;
        end;
      case kManagedServerItemReserveSystem:
        RCSr.UUID = StringToUUID(LCSrw.ItemName);
        if (ReadFirstMain(RCSr,1,true)) then begin
          LCSrw.Desc = RCSr.ServerName;
        end;
      case kManagedServerItemTestSystem:
        RCSr.UUID = StringToUUID(LCSrw.ItemName);
        if (ReadFirstMain(RCSr,1,true)) then begin
          LCSrw.Desc = RCSr.ServerName;
        end;
      case kManagedServerItemUpdateSystem:
        RCSr.UUID = StringToUUID(LCSrw.ItemName);
        if (ReadFirstMain(RCSr,1,true)) then begin
          LCSrw.Desc = RCSr.ServerName;
        end;
      case kManagedServerItemMotherSystem:
        RCSr.UUID = StringToUUID(LCSrw.ItemName);
        if (ReadFirstMain(RCSr,1,true)) then begin
          LCSrw.Desc = RCSr.ServerName;
        end;
    end;
    MatRowPut(LCSr,rownr,LCSrw);
    PutWindowRecord(wn,LCSr);
  end;
LLocalCloudServerDClassNameEFAfter:;
  LocalCloudServerDClassNameEFAfter = res;
  return;
end;

global
function Boolean LocalCloudServerDClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
begin
  Boolean res;
  
  res = false;
  switch (fieldname) begin
    case "ItemName": res = LocalCloudServerDClassNameEFAfter(wn,fn,rownr,changed);
  end;
  LocalCloudServerDClassAfterEditField = res;
  return;
end;
