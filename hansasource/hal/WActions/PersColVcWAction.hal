global
procedure OpenPersColDsm()
BEGIN
  record PersColVc PersColr;
  record RcVc RepSpec;
  Integer wn,nwn;
  string 60 mailboxcode,mailboxname;  
  record PersColListVc PCLr;

  wn = CurWindow;
  GetWindowRecord(wn,PersColr);
  if (nonblank(PersColr.Code)) then begin
    nwn = OpenWindow("PersColListLClass",0,0,PersColr.Code,PersColr.Comment,PCLr);
  end;
  RETURN;
END;

global
procedure OpenPersColRnDsm()
BEGIN
  record RcVc RepSpec;
  record PersColVc PersColr;

  GetWindowRecord(CurWindow,PersColr);
  RepSpec.Media = mtScreen;
  RepSpec.f1 = "-2";
  RepSpec.Stext = PersColr.Code;
  RepSpec.flags[1] = 1;
  RepSpec.repname = "PersColListRn";
  RunReport(RepSpec,0);
  RETURN;
END;
/*
global
procedure AddGuestsColMnDsm()
BEGIN
  record PersColVc PersColr;
  Integer wn,wn2;
  record RcVc RepSpec;

  wn = CurWindow;
  GetWindowRecord(wn,PersColr);
  ReportDefaults(RepSpec,"AddGuestsColVClass");  
  wn2 = OpenWindow("AddGuestsColVClass",1,0,"","",RepSpec);
  DeselectWindow(wn,false);
  RepSpec.repname = "AddPersColMn";
  RepSpec.Stext = PersColr.Code;
  RepSpec.ArtMode = 1;
  PutWindowRecord(wn2,RepSpec);  
  SelectWindow(wn2);
  RETURN;
END;
*/
global
procedure AddCustomersColMnDsm()
BEGIN
  record PersColVc PersColr;
  Integer wn,wn2;
  record RcVc RepSpec;

  wn = CurWindow;
  if (WindowState(wn)==Rs_normal) then begin
    GetWindowRecord(wn,PersColr);
    ReportDefaults(RepSpec,"AddCustomersColVClass");  
    wn2 = OpenWindow("AddCustomersColVClass",1,0,"","",RepSpec);
    DeselectWindow(wn,false);
    RepSpec.repname = "AddPersColMn";
    RepSpec.Stext = PersColr.Code;
    RepSpec.ArtMode = 2;
    PutWindowRecord(wn2,RepSpec);  
    SelectWindow(wn2);
  end else begin
    Beep;
    MessageBox(1356,"");
  end;  
  RETURN;
END;

global
procedure AddContactsColMnDsm()
BEGIN
  record PersColVc PersColr;
  Integer wn,wn2;
  record RcVc RepSpec;

  wn = CurWindow;
  if (WindowState(wn)==Rs_normal) then begin
    GetWindowRecord(wn,PersColr);
    ReportDefaults(RepSpec,"AddContactsColVClass");  
    wn2 = OpenWindow("AddContactsColVClass",1,0,"","",RepSpec);
    DeselectWindow(wn,false);
    RepSpec.repname = "AddPersColMn";
    RepSpec.Stext = PersColr.Code;
    RepSpec.ArtMode = 3;
    PutWindowRecord(wn2,RepSpec);  
    SelectWindow(wn2);
  end else begin
    Beep;
    MessageBox(1356,"");
  end;  
   RETURN;
END;

global
procedure AddPersColMnDsm()
BEGIN
  record PersColVc PersColr;
  Integer wn,wn2;
  record RcVc RepSpec;

  wn = CurWindow;
  if (WindowState(wn)==Rs_normal) then begin
    GetWindowRecord(wn,PersColr);
    ReportDefaults(RepSpec,"AddPersColVClass");  
    wn2 = OpenWindow("AddPersColVClass",1,0,"","",RepSpec);
    DeselectWindow(wn,false);
    RepSpec.repname = "AddPersColMn";
    RepSpec.Stext = PersColr.Code;
    RepSpec.ArtMode = 4;
    PutWindowRecord(wn2,RepSpec);  
    SelectWindow(wn2);
  end else begin
    Beep;
    MessageBox(1356,"");
  end;  
  RETURN;
END;

global
procedure AddSuppliersColMnDsm()
begin
  record PersColVc PersColr;
  Integer wn,wn2;
  record RcVc RepSpec;

  wn = CurWindow;
  if (WindowState(wn)==Rs_normal) then begin
    GetWindowRecord(wn,PersColr);
    ReportDefaults(RepSpec,"AddCustomersColVClass");  
    wn2 = OpenWindow("AddSuppliersColVClass",1,0,"","",RepSpec);
    DeselectWindow(wn,false);
    RepSpec.repname = "AddPersColMn";
    RepSpec.Stext = PersColr.Code;
    RepSpec.ArtMode = 5;
    PutWindowRecord(wn2,RepSpec);  
    SelectWindow(wn2);
  end else begin
    Beep;
    MessageBox(1356,"");
  end;  
  return;
end;

global
function Boolean PersColDClassListDblClick(Integer wn)
begin
  Integer mwn;
  record PersColVc PersColr;
  record PersColListVc PersColListr;
  
  if (WindowState(wn)==0) then begin
    GetWindowRecord(wn,PersColr);
    if (ReadMarkedRecord(wn,PersColListr)) then begin
      mwn = OpenWindow("PersColListDClass",1,0,"","",PersColListr);
    end;
  end;
  PersColDClassListDblClick = true;
  return;
end;

global
function Boolean PersColDClassUpdateWindowSubset(Integer wn,var string subsetname)
begin
  record PersColVc PCr;
  
  GetWindowRecord(wn,PCr);
  if (WindowState(wn)==Rs_insert) then begin
    subsetname = "";
  end else begin
    subsetname = PCr.Code;
  end;
  PersColDClassUpdateWindowSubset = true;
  return;
end;

/*
global
updating procedure DropProfileLClassOnPersColListLClass(Integer frwn,Integer town)
BEGIN
  record CUVc Profiler;
  record PersColListVc PersColListr;
  Integer r;
  Boolean testf;
  
  if ((GetWindowFileName(frwn)=="ProfileVc") and (GetWindowFileName(town)=="PersColListVc")) then begin
    if (ReadMarkedRecord(frwn,Profiler)) then begin
      if (IsRecordLocked(Profiler)==false) then begin
        RecordNew(PersColListr);
        PersColListr.Code = Profiler.Code;
        PersColListr.Name = Profiler.LastName & " " & Profiler.FirstName;
        PersColListr.PersColCode = GetWindowSubset(town);
        PersColListr.FileName = "ProfileVc";
        if (nonblank(PersColListr.PersColCode)) then begin
          if (RecordStore(PersColListr,false)) then begin
            UpdateBrowses("PersColListVc");
          end else begin
            Beep;
          end;
        end else begin
          Beep;
        end;
      end else begin
        Beep;
      end;    
    end;
  end;  
  RETURN;
END;
*/

global
updating procedure DropCULClassOnPersColListLClass(Integer frwn,Integer town)
BEGIN
  record CUVc CUr;
  record PersColListVc PersColListr;
  Integer r;
  Boolean testf;
  LongInt i;
  
  if ((GetWindowFileName(frwn)=="CUVc") and (GetWindowFileName(town)=="PersColListVc")) then begin
    i = 1;
    while (GetRecordFromBrowse(CUr,frwn,i)) begin
      if (IsRecordLocked(CUr)==false) then begin
        testf = true;
        if (CUr.blockedFlag!=0) then begin
          testf = false;
        end;
        if (testf) then begin
          RecordNew(PersColListr);
          PersColListr.Code = CUr.Code;
          PersColListr.Name = CUr.Name;
          PersColListr.PersColCode = GetWindowSubset(town);
          PersColListr.FileName = "CUVc";
          if (nonblank(PersColListr.PersColCode)) then begin
            if (RecordStore(PersColListr,false)) then begin
              UpdateBrowses("PersColListVc");
            end else begin
              Beep;
            end;
          end;
        end else begin
          Beep;
        end;
      end else begin
        Beep;
      end;    
      i = i + 1;
    end;
  end;  
  RETURN;
END;

global
updating procedure DropContactLClassOnPersColListLClass(Integer frwn,Integer town)
BEGIN
  record ContactVc Contactr;
  record PersColListVc PersColListr;
  Integer r;
  Boolean testf;
  
  if ((GetWindowFileName(frwn)=="ContactVc") and (GetWindowFileName(town)=="PersColListVc")) then begin
    if (ReadMarkedRecord(frwn,Contactr)) then begin
      if (IsRecordLocked(Contactr)==false) then begin
        RecordNew(PersColListr);
        PersColListr.Code = Contactr.Company;
        PersColListr.Name = Contactr.Name;
        PersColListr.PersColCode = GetWindowSubset(town);
        PersColListr.FileName = "ContactVc";
        if (nonblank(PersColListr.PersColCode)) then begin
          if (RecordStore(PersColListr,false)) then begin
            UpdateBrowses("PersColListVc");
          end else begin
            Beep;
          end;
        end else begin
          Beep;
        end;
      end else begin
        Beep;
      end;    
    end;
  end;  
  RETURN;
END;

global
function Boolean BookOrgTClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record PersColVc PersColr;
  record BookOrgBlock BookOrgr;
  row BookOrgBlock BookOrgrw;
  Integer rwcnt,i;

  switch (fieldname) begin
    case "Code":
      if (changed!=0) then begin
        GetWindowRecord(wn,BookOrgr);        
        if ((rownr>=0) and (rownr<MatRowCnt(BookOrgr))) then begin
          MatRowGet(BookOrgr,rownr,BookOrgrw);      
          PersColr.Code = BookOrgrw.Code;
          if (ReadFirstMain(PersColr,1,true)) then begin
            BookOrgrw.Name = PersColr.Comment;
            MatRowPut(BookOrgr,rownr,BookOrgrw);      
//            PutWindowRecord(wn,BookOrgr); // Crashes.....
          end;
        end;
      end;
  end;
  BookOrgTClassAfterEditField = res;
  RETURN;
END;

