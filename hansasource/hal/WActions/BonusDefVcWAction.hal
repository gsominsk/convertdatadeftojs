external procedure GetUserName(string,var string);

global
function string 40 BonusDefDClassSpecPasteName(Integer wn,string defpsname)
begin
  string 255 psname;
  record BonusDefVc BonusDefr;
  row BonusDefVc BonusDefrw;
  Integer rownr;
  
  psname = defpsname;
  switch (WindowActiveField(wn)) begin
    case "ItemCode":
      GetWindowRecord(wn,BonusDefr);
      rownr = WindowActiveRow(wn);
      if (rownr>=0) then begin
        MatRowGet(BonusDefr,rownr,BonusDefrw);
      end;
      switch (BonusDefrw.CodeType) begin
        case 0: psname = "ITSClass";
        case 1: psname = "ForSaleINSClass";
      end;
  end;
  BonusDefDClassSpecPasteName = psname;
  return;
end;

function Boolean BonusDefDClassUserCodeEFAfter(Integer wn,Boolean changedf)
begin  
  record BonusDefVc BonusDefr;
  string 255 tstr;

  if (changedf) then begin  
    GetWindowRecord(wn,BonusDefr);
    DeselectWindow(wn,false);
    GetUserName(BonusDefr.UserCode,tstr);
    BonusDefr.UserName = tstr;
    PutWindowRecord(wn,BonusDefr);
  end;  
  BonusDefDClassUserCodeEFAfter = true;
  return;
end;

global
function Boolean BonusDefDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "UserCode": res = BonusDefDClassUserCodeEFAfter(wn,changed!=0);
  end;
  BonusDefDClassAfterEditField = res;
  RETURN;
END;
