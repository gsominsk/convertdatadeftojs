remote procedure BIChart_remote_DebtorsCreditorsAsync(Integer);
remote procedure BIChart_remote_TopCustomersAsync(Integer);
remote procedure BIChart_remote_ItemGroupsAsync(Integer);
remote procedure BIChart_remote_TopSalesmenAsync(Integer);
remote procedure BIChart_remote_PnLAsync(Integer);
remote procedure BIChart_remote_PipelineAsync(Integer);

remote procedure BIChart_remote_Pipeline(var array string,var array val);
remote procedure BIChart_remote_TopSalesMen(var array string,var array val);
remote procedure BIChart_remote_TopCustomers(var array string,var array val);
remote procedure BIChart_remote_ItemGroups(var array string,var array val);
remote procedure BIChart_remote_PnL(var array string,var array val);
remote procedure BIChart_remote_DebtorsCreditors(var array string,var array val,var array string,var array val);

//TopCustomers
//TopCreditors
//TopDebtors

procedure CalcMax(val v,var val maxval)
begin
  if (v>maxval) then begin
    maxval = v;
  end;
end;

procedure CalcMin(val v,var val minval)
begin
  if (v<minval) then begin
    minval = v;
  end;
end;

global
procedure DashboardWClass_BIChart(Integer wn)
begin
  threadremoteasync.BIChart_remote_PipelineAsync(wn);
  threadremoteasync.BIChart_remote_PnLAsync(wn);
  threadremoteasync.BIChart_remote_TopSalesmenAsync(wn);
  threadremoteasync.BIChart_remote_ItemGroupsAsync(wn);
  threadremoteasync.BIChart_remote_TopCustomersAsync(wn);
  threadremoteasync.BIChart_remote_DebtorsCreditorsAsync(wn);
  return;
end;

global
procedure BIChart_remote_PipelineAsyncCallback(Integer wn,array string labels,array val val0)
begin
  val max0,maxv;
  Integer i;
  Integer awn;
  record BaseCurBlock BCb;

  awn = FindWindow("DashboardWClass");
  if (wn!=awn) then begin goto LBIChart_remote_PipelineAsyncCallback; end;

  ChartBegin(wn,"$DashboardWClass_Pipeline",kChartTypeBar,kChartLegendTypeNone,0,-1);
  ChartDataSeriesBegin("DashboardWClass_BIChartPipeline");
  max0 = 0; maxv = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
  end;
  
  EndChartDataSeries;
  
  BlockLoad(BCb);
  ChartXAxis(0,maxv + (maxv * 0.1),USetStr(37603) & " (" & BCb.BaseCur1 & ")");
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37608));
  
  EndChart;

LBIChart_remote_PipelineAsyncCallback:;
  return;
end;

global
procedure BIChart_remote_PnLAsyncCallback(Integer wn,array string labels,array val val0)
begin
  val max0,maxv,minv;
  Integer i;
  Integer awn;
  record BaseCurBlock BCb;

  awn = FindWindow("DashboardWClass");
  if (wn!=awn) then begin goto LBIChart_remote_PnLAsyncCallback; end;

  ChartBegin(wn,"$DashboardWClass_PnL",kChartTypeColumn,kChartLegendTypeNone,0,-1);
  ChartDataSeriesBegin("DashboardWClass_BIChartPnL");
  
  max0 = 0; maxv = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartXAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    CalcMin(val0[i],minv);
  end;
  
  EndChartDataSeries;
  
  BlockLoad(BCb);
  ChartYAxis(minv,maxv + (maxv * 0.1),USetStr(37620) & " (" & BCb.BaseCur1 & ")");
  ChartXAxis(0.5,labels.length + 0.5,USetStr(37619));
  
  EndChart;

LBIChart_remote_PnLAsyncCallback:;
  return;
end;

global
procedure BIChart_remote_TopSalesmenAsyncCallback(Integer wn,array string labels,array val val0)
begin
  val max0,maxv;
  Integer i,cnt;
  Integer awn;
  record BaseCurBlock BCb;

  awn = FindWindow("DashboardWClass");
  if (wn!=awn) then begin goto LBIChart_remote_TopSalesmenAsyncCallback; end;

  ChartBegin(wn,"$DashboardWClass_TopSalesmen",kChartTypeBar,kChartLegendTypeNone,0,-1);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartTopSalesmen");
  
  max0 = 0; maxv = 0; cnt = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    if (val0[i]!=0) then begin cnt = cnt + 1; end;
  end;
  
  EndChartDataSeries;
  if (cnt>5) then begin cnt = 5; end;  
  maxv = maxv + (maxv * 0.1);
  if (maxv==0) then begin 
    maxv = 10; 
  end;

  BlockLoad(BCb);
  ChartXAxis(0,maxv,USetStr(37618) & " (" & BCb.BaseCur1 & ")");
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37628) & cnt & USetStr(37605));
  
  EndChart;

LBIChart_remote_TopSalesmenAsyncCallback:;
  return;
end;

global
procedure BIChart_remote_ItemGroupsAsyncCallback(Integer wn,array string labels,array val val0)
begin
  val max0,maxv;
  Integer i,cnt;
  Integer awn;
  record BaseCurBlock BCb;

  awn = FindWindow("DashboardWClass");
  if (wn!=awn) then begin goto LBIChart_remote_ItemGroupsAsyncCallback; end;

  ChartBegin(wn,"$DashboardWClass_TopItemGroups",kChartTypeBar,kChartLegendTypeNone,0,-1);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartItemGroups");
  
  max0 = 0; maxv = 0; cnt = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    if (val0[i]!=0) then begin cnt = cnt + 1; end;
  end;
  EndChartDataSeries;
  
  if (cnt>5) then begin cnt = 5; end;
  maxv = maxv + (maxv * 0.1);
  if (maxv==0) then begin 
    maxv = 10; 
  end;
  BlockLoad(BCb);
  ChartXAxis(0,maxv,USetStr(37618) & " (" & BCb.BaseCur1 & ")");
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37628) & cnt & USetStr(37606));
  
  EndChart;

LBIChart_remote_ItemGroupsAsyncCallback:;
  return;
end;

global
procedure BIChart_remote_TopCustomersAsyncCallback(Integer wn,array string labels,array val val0)
begin
  val max0,maxv;
  Integer i,cnt;
  Integer awn;
  record BaseCurBlock BCb;

  awn = FindWindow("DashboardWClass");
  if (wn!=awn) then begin goto LBIChart_remote_TopCustomersAsyncCallback; end;

  ChartBegin(wn,"$DashboardWClass_TopCustomers",kChartTypeBar,kChartLegendTypeNone,0,-1);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartTopCustomers");

  max0 = 0; maxv = 0; cnt = 0;
  if (labels.length==0) then begin
    labels[0] = ""; labels[1] = ""; labels[2] = ""; labels[3] = ""; labels[4] = "";
//amazing workaround    
  end;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    if (val0[i]!=0) then begin cnt = cnt + 1; end;
  end;
  EndChartDataSeries;
  
  if (cnt>5) then begin cnt = 5; end;
  maxv = maxv + (maxv * 0.1);
  if (maxv==0) then begin 
    maxv = 10; 
  end;

  BlockLoad(BCb);
  ChartXAxis(0,maxv,USetStr(37618) & " (" & BCb.BaseCur1 & ")");
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37628) & cnt & USetStr(37607));
  
  EndChart;

LBIChart_remote_TopCustomersAsyncCallback:;
  return;
end;

global
procedure BIChart_remote_DebtorsCreditorsAsyncCallback(Integer wn,array string labels,array val val0,array string labels1,array val val1)
begin
  val max0,maxv;
  Integer i,cnt;
  string 255 html,vstr;
  Integer awn;

  awn = FindWindow("DashboardWClass");
  if (wn!=awn) then begin goto LBIChart_remote_DebtorsCreditorsAsyncCallback; end;

  html = "<html>";
  html = html & "<head></head><body style='border:1px solid lightgray; overflow: hidden'>";
  html = html & "<table style='font-family:Serif; font-size:0.9em;'><tr><th align=left><u>" & USetStr(37607) & "</u></th></tr>";

  for (i = 0; i<5; i = i + 1) begin
    html = html & "<tr><td ";
    if (labels.length>=i) then begin
      vstr = ValToString(val0[i],M40Val,ThousandSeparator,"",1);
      html = html & "width=185; style='text-align:left;'>";
      html = html & labels[i];
      html = html & "</td>";
      html = html & "<td style='text-align:right;'>";
      html = html & vstr;
    end;
    html = html & "</td></tr>";
  end;
  html = html & "</table>";
    
  html = html & "<table style='font-family:Serif; font-size:0.9em;'><tr><th align=left><u>" & UsetStr(37609) & "</u></th></tr>";
    
  for (i = 0; i<5; i = i + 1) begin
    html = html & "<tr><td ";
    if (labels1.length>=i) then begin
      vstr = ValToString(val1[i],M40Val,ThousandSeparator,"",1);
      html = html & "width=185; style='text-align:left;'>";
      html = html & labels1[i];
      html = html & "</td>";
      html = html & "<td style='text-align:right;'>";
      html = html & vstr;
    end;
    html = html & "</td></tr>";
  end;
  html = html & "</table>";

  html = html & "</body>";
//  html = html & " onDblClick=""HansaWorld.callHal('ChartClicked','$DashboardWClass_DebCred')""";
  html = html & "</html>";
  SetWebPageData(wn,"$DashboardWClass_DebCred",html);

//  WriteStringToFile(html,"DashboardWClass_DebCred.html",0);

LBIChart_remote_DebtorsCreditorsAsyncCallback:;
  return;
end;


/*
global
procedure DashboardWClass_BIChart(Integer wn)
begin
  Integer i,cnt;
  val maxv;
  array string 255 labels;
  array string 255 labels1;
  array val val0;
  array val val1;
  array val val2;
  val max0,max1,max2;
  val minv;
  string 255 html;
  
  // PIPELINE
  ChartBegin(wn,"$DashboardWClass_Pipeline",kChartTypeBar,kChartLegendTypeNone,0,-1);
  threadremote.BIChart_remote_Pipeline(labels,val0);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartPipeline");
  
  max0 = 0; maxv = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
  end;
  
  EndChartDataSeries;
  
  ChartXAxis(0,maxv + (maxv * 0.1),USetStr(37603));
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37608));
  
  EndChart;

  // Profit and Loss
  ChartBegin(wn,"$DashboardWClass_PnL",kChartTypeColumn,kChartLegendTypeNone,0,-1);
  threadremote.BIChart_remote_PnL(labels,val0);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartPnL");
  
  max0 = 0; maxv = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartXAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    CalcMin(val0[i],minv);
  end;
  
  EndChartDataSeries;
  
  ChartYAxis(minv,maxv + (maxv * 0.1),USetStr(37620));
  ChartXAxis(0.5,labels.length + 0.5,USetStr(37619));
  
  EndChart;
  
  // TOP SALESMEN
  ChartBegin(wn,"$DashboardWClass_TopSalesmen",kChartTypeBar,kChartLegendTypeNone,0,-1);
  threadremote.BIChart_remote_TopSalesmen(labels,val0);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartTopSalesmen");
  
  max0 = 0; maxv = 0; cnt = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    if (val0[i]!=0) then begin cnt = cnt + 1; end;
  end;
  
  EndChartDataSeries;
  if (cnt>5) then begin cnt = 5; end;  
  ChartXAxis(0,maxv + (maxv * 0.1),USetStr(37618));
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37628) & cnt & USetStr(37605));
  
  EndChart;
  
  // ITEM GROUPS
  ChartBegin(wn,"$DashboardWClass_TopItemGroups",kChartTypeBar,kChartLegendTypeNone,0,-1);
  threadremote.BIChart_remote_ItemGroups(labels,val0);
  
  ChartDataSeriesBegin("DashboardWClass_BIChartItemGroups");
  
  max0 = 0; maxv = 0; cnt = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    if (val0[i]!=0) then begin cnt = cnt + 1; end;
  end;
  
  EndChartDataSeries;
  if (cnt>5) then begin cnt = 5; end;
  ChartXAxis(0,maxv + (maxv * 0.1),USetStr(37618));
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37621) & cnt & USetStr(37606));
  
  EndChart;
  
  // TOP CUSTOMERS
  ChartBegin(wn,"$DashboardWClass_TopCustomers",kChartTypeBar,kChartLegendTypeNone,0,-1);
  threadremote.BIChart_remote_TopCustomers(labels,val0);
  
  ChartDataSeriesBegin("DashboardWClass_BITopCustomers");
  max0 = 0; maxv = 0; cnt = 0;
  for (i = 0; i<labels.length; i = i + 1) begin
    ChartYAxisLabel(i + 1,labels[i]);
    ChartDatum(val0[i],"");
    CalcMax(val0[i],maxv);
    if (val0[i]!=0) then begin cnt = cnt + 1; end;
  end;
  EndChartDataSeries;
  
  if (cnt>5) then begin cnt = 5; end;
  ChartYAxis(0.5,labels.length + 0.5,USetStr(37621) & cnt & USetStr(37607));
  ChartXAxis(0,maxv + (maxv * 0.1),USetStr(37618));
  
  EndChart;
  
  // DEBCRED
  threadremote.BIChart_remote_DebtorsCreditors(labels,val0,labels1,val1);
  html = "<html>";
  html = html & "<head></head><body style='border:1px solid lightgray; overflow: hidden'>";
  html = html & "<table style='font-family:Serif; font-size:0.9em;'><tr><th align=left><u>" & USetStr(37607) & "</u></th></tr>";

  for (i = 0; i<5; i = i + 1) begin
    html = html & "<tr><td width=200>";
    if (labels.length>=i) then begin
      html = html & labels[i];
      html = html & "</td>";
      html = html & "<td style=""text-align:right;"">";
      html = html & ValToString(val0[i],M40Val,ThousandSeparator,"",1);
    end;
    html = html & "</td></tr>";
  end;
  html = html & "</table>";
    
  html = html & "<table style='font-family:Serif; font-size:0.9em;'><tr><th align=left><u>" & UsetStr(37609) & "</u></th></tr>";
    
  for (i = 0; i<5; i = i + 1) begin
    html = html & "<tr><td width=200>";
    if (labels1.length>=i) then begin
      html = html & labels1[i];
      html = html & "</td>";
      html = html & "<td style=""text-align:right;"">";
      html = html & ValToString(val1[i],M40Val,ThousandSeparator,"",1);
    end;
    html = html & "</td></tr>";
  end;
  html = html & "</table>";

  html = html & "</body>";
//  html = html & " onDblClick=""HansaWorld.callHal('ChartClicked','$DashboardWClass_DebCred')""";
  html = html & "</html>";
  SetWebPageData(wn,"$DashboardWClass_DebCred",html);
  
  return;
end;

*/

global
function Boolean DashboardWClassOnOpenWindow(Integer wn)
begin
  DashboardWClass_BIChart(wn);
  DashboardWClassOnOpenWindow = false;
  return;
end;

global
procedure DashboardWClassOnWindowRecordChange(Integer wn)
begin
  DashboardWClass_BIChart(wn);
  return;
end;
