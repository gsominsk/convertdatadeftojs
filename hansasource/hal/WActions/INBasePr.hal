external function val DivWithRateToBase1(string,Date,val,roundmode);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function Boolean GetFirstItem(var string,var record INVc);
 
function Boolean ItemPriceDClassArtCodeEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record ItemPriceVc ItemPricer;
  record INVc INr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,ItemPricer);
    if (GetFirstItem(ItemPricer.ArtCode,INr)) then begin
      ItemPricer.Comment = INr.Name;    
      ItemPricer.UPrice = INr.UPrice1;    
      PutWindowRecord(wn,ItemPricer);
    end;  
  end;  
  ItemPriceDClassArtCodeEFAfter = res;
  RETURN;
END;
 
function Boolean ItemPriceDClassCurncyCodeEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record ItemPriceVc ItemPricer;
  record ItemPriceVc PrevItemPricer;
  record INVc INr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,ItemPricer);
    GetPrevWindowRecord(wn,PrevItemPricer);
    if (ItemPricer.UPrice!=0) then begin
      if (PrevItemPricer.CurncyCode!=ItemPricer.CurncyCode) then begin
        ItemPricer.UPrice = MulWithRateToBase1(PrevItemPricer.CurncyCode,CurrentDate,ItemPricer.UPrice,DefaultCurRoundOff);      
      end;
      ItemPricer.UPrice = DivWithRateToBase1(ItemPricer.CurncyCode,CurrentDate,ItemPricer.UPrice,DefaultCurRoundOff);
      PutWindowRecord(wn,ItemPricer);      
    end;
  end;  
  ItemPriceDClassCurncyCodeEFAfter = res;
  RETURN;
END;

global
function Boolean ItemPriceDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "CurncyCode": res = ItemPriceDClassCurncyCodeEFAfter(wn,fn,rownr,changed);
    case "ArtCode": res = ItemPriceDClassArtCodeEFAfter(wn,fn,rownr,changed);
  end;
  ItemPriceDClassAfterEditField = res;
  RETURN;
END;

global
function Boolean VARMaskTClassUpdateTest(Integer wn)
BEGIN
  record VARMaskBlock VMB;
  Boolean res;
  
  res = true;
  BlockLoad(VMB);
  if (MatRowCnt(VMB)>0) then begin
    MessageBox(1398,"");
  end;
  VARMaskTClassUpdateTest = res;
  RETURN;
END;

