remote updating function Integer SKUsASSubmissionGenerate(var record ASSubmissionVc);

global
procedure ASSumbissionFromASProductStatusDsm()
begin
  Integer wn,nwn;
  record ASProductStatusVc ASPSr;
  record ASSubmissionVc ASSr;
  Integer assi,assrwcnt;
  row ASSubmissionVc ASSrw;
  row ASProductStatusVc ASPSrw;
  
  wn = CurWindow;
  GetWindowRecord(wn,ASPSr);
  RecordNew(ASSr);
  ASSr.ASProduct = ASPSr.ASProduct;
  ASSr.ASStore = ASPSr.ASStore;
  ASSr.ASCountry = ASPSr.ASCountry;
  ASSr.ASProdStatSerNr = ASPSr.SerNr;
  ASSr.TransDate = CurrentDate;
  ASSr.Person = CurrentUser;
  assrwcnt = MatRowCnt(ASPSr);
  for (assi=0;assi<assrwcnt;assi=assi+1) begin
    MatRowGet(ASPSr,assi,ASPSrw);
    ClearRow(ASSr,ASSrw,1);
    ASSrw.ASInApp = ASPSrw.ASInApp;
    ASSrw.ASInAppSKU = ASPSrw.ASInAppSKU;
    ASSrw.ASInAppMonths = ASPSrw.ASInAppMonths;
    MatRowPut(ASSr,MatRowCnt(ASSr),ASSrw);
  end;
  nwn = OpenWindow("ASSubmissionDClass",1,0,"","",ASSr);
  WindowFieldGoto(nwn,ASSr,-1,"ASInApp",false);
  return;
end;

global
procedure ASSumbissionFromASProductStatusLsm()
begin
  Integer wn,nwn;
  record ASProductStatusVc ASPSr;
  record ASSubmissionVc ASSr;
  Integer assi,assrwcnt;
  row ASSubmissionVc ASSrw;
  row ASProductStatusVc ASPSrw;
  
  wn = CurWindow;
  if (ReadMarkedRecord(wn,ASPSr)) then begin
    RecordNew(ASSr);
    ASSr.ASProduct = ASPSr.ASProduct;
    ASSr.ASStore = ASPSr.ASStore;
    ASSr.ASCountry = ASPSr.ASCountry;
    ASSr.ASProdStatSerNr = ASPSr.SerNr;
    assrwcnt = MatRowCnt(ASPSr);
    for (assi=0;assi<assrwcnt;assi=assi+1) begin
      MatRowGet(ASPSr,assi,ASPSrw);
      ClearRow(ASSr,ASSrw,1);
      ASSrw.ASInApp = ASPSrw.ASInApp;
      ASSrw.ASInAppSKU = ASPSrw.ASInAppSKU;
      ASSrw.ASInAppMonths = ASPSrw.ASInAppMonths;
      MatRowPut(ASSr,MatRowCnt(ASSr),ASSrw);
    end;
    nwn = OpenWindow("ASSubmissionDClass",1,0,"","",ASSr);
    WindowFieldGoto(nwn,ASSr,-1,"ASInApp",false);
  end;
  return;
end;

global
procedure ActFromASSubmissionDsm()
begin
  Integer wn,nwn;
  record ASSubmissionVc ASSr;
  record ActVc Actr;
  
  wn = CurWindow;
  GetWindowRecord(wn,ASSr);
  RecordNew(Actr);
  Actr.MainPersons = ASSr.Person;
//  Actr.Supervisor = ASSr.RespPM;
  Actr.FromFileName = "ASSubmissionVc";
  Actr.FromSerNr = ASSr.SerNr;
//  Actr.Supervisor = ASSr.Person;
  nwn = OpenWindow("ActDClass",1,0,"","",Actr);
  WindowFieldGoto(nwn,Actr,-1,"Comment",false);
  return;
end;

global
updating procedure ASSubmissionVcCreateActivity()
begin
  ActFromASSubmissionDsm;
  return;
end;

global
updating procedure SKUsASSubmissionDsm()
begin
  Integer wn,err;
  record ASSubmissionVc ASSr;
  
  wn = CurWindow;
  DeselectWindow(wn,true);
  GetWindowRecord(wn,ASSr);
  if (WindowState(wn)!=Rs_normal) then begin 
    WindowDoOK(wn,0);
  end;
  if (WindowState(wn)==Rs_normal) then begin 
    err = SKUsASSubmissionGenerate(ASSr);
    if (err==0) then begin
      SetWindowState(wn,Rs_update);
      PutWindowRecord(wn,ASSr);
      SetWindowState(wn,Rs_normal);
    end;
  end else begin
    beep;
  end;
  return;
end;

global
procedure ActFromASProductStatusDsm()
begin
  Integer wn,nwn;
  record ASProductStatusVc ASPSr;
  record ActVc Actr;
  
  wn = CurWindow;
  GetWindowRecord(wn,ASPSr);
  RecordNew(Actr);
  Actr.MainPersons = CurrentUser;
  Actr.Supervisor = ASPSr.RespPM;
  Actr.FromFileName = "ASProductStatusVc";
  Actr.FromSerNr = ASPSr.SerNr;
//  Actr.Supervisor = ASPSr.Person;
  nwn = OpenWindow("ActDClass",1,0,"","",Actr);
  WindowFieldGoto(nwn,Actr,-1,"Comment",false);
  return;
end;

global
updating procedure ASProductStatusVcCreateActivity()
begin
  ActFromASProductStatusDsm;
  return;
end;

function Boolean ASSubmissionDClassASStoreEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record ASSubmissionVc ASSr;
  record ASSubmissionVc ASS2r;
  LongInt i,rwcnt;
  row ASSubmissionVc ASSrw;
  
  if (changedf) then begin
    res = true;
    GetWindowRecord(wn,ASSr);
    if (WindEFstr(wn)!="G") and (ASSr.ASStore=="G") then begin
      ASSr.ApplicationSKU = "";
      rwcnt = MatRowCnt(ASSr);
      for (i=0; i<rwcnt; i=i+1) begin
        MatRowGet(ASSr,i,ASSrw);
        ASSrw.ASInAppSKU = "";
        MatRowPut(ASSr,i,ASSrw);
      end;
      PutWindowRecord(wn,ASSr);
    end;
  end;
  ASSubmissionDClassASStoreEFAfter = res;
  return;
end;

global
function Boolean ASSubmissionDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

//LogText(0,"fieldname " & fieldname);
  switch (fieldname) begin
    case "ASStore": res = ASSubmissionDClassASStoreEFAfter(wn,changed!=0);
  end;
  ASSubmissionDClassAfterEditField = res;
  return;
end;

global
function Boolean ASSubmissionDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin
  Boolean res;
  
  switch (fieldname) begin
    case "ApplicationSKU": if (UserCanAction("AllowSubMissionSKUChange",false)==true) then begin res = true; end;
    case "ASInAppSKU": if (UserCanAction("AllowSubMissionSKUChange",false)==true) then begin res = true; end;
    otherwise
      res = true;
  end;   
  ASSubmissionDClassActiveEditField = res;
  return;
end;
