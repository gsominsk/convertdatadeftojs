external updating procedure StdCreateDefaultUser();
external updating procedure StdSetupNewDatabaseDefaults();
external function Boolean CheckAndImportFile(string);
external updating function Boolean ImportDefaultsOnServer3(string,Integer,Integer,string,string,string,Boolean);
external updating procedure StdSetupNewDatabase2(Boolean);
//remote updating procedure ResetCompanyCompanySsmRemote();
remote updating function Boolean AddCompanyCompaniesTsmRemote(var record RcVc);
external updating procedure FindIPAtPresenceServer(string,Integer,string,var string,var string,var string);

global
procedure CompaniesTClassClassEditRow(Integer wn,Integer rwn)
begin
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  record RcVc RepSpec;
  integer nwn;
  
  GetWindowRecord(wn,Compb);
  MatRowGet(Compb,rwn,Comprw);
  
  RepSpec.long1 = rwn;
  RepSpec.f1 = Comprw.CompCode;
  RepSpec.f2 = Comprw.CompName;
  RepSpec.f3 = Comprw.ShortName;
  RepSpec.f4 = Comprw.TCPIP;
  RepSpec.f5 = Comprw.Port;
  RepSpec.long2 = Comprw.Mode;
  
  nwn = OpenWindow("CompaniesRowDClass",0,wn,"","",RepSpec);
  
end;

global
function boolean CompaniesRowDClassOnOKWindow(Integer wn)
begin
  record CompaniesBlock Compb;
  row CompaniesBlock Comprw;
  record RcVc RepSpec;
  integer mwn;
  integer rwn;
  
  mwn = MotherWindow(wn);
  GetWindowRecord(wn,RepSpec);
  GetWindowRecord(mwn,Compb);
  rwn = RepSpec.long1;
  
  MatRowGet(Compb,rwn,Comprw);
  
  Comprw.CompCode = RepSpec.f1;
  Comprw.CompName = RepSpec.f2;
  Comprw.ShortName = RepSpec.f3;
  Comprw.TCPIP = RepSpec.f4;
  Comprw.Port = RepSpec.f5;
  Comprw.Mode = RepSpec.long2;
  MatRowPut(Compb,rwn,Comprw);
  PutWindowRecord(mwn,Compb);
  CloseWindow(wn);
  
  CompaniesRowDClassOnOKWindow = true;
end;

global
updating function boolean FindMyServerWClassOnOKWindow(Integer wn)
begin
  record CompaniesBlock Compb;
  string 255 ip,port,compcode;
  row CompaniesBlock Comprw;

  GetWindowRecord(wn,Compb);
  MatRowGet(Compb,0,Comprw);
  LogText(0,"FindIPAtPresenceServer " & Comprw.PresenceCode & " " & Comprw.RegInCountry & " " & Comprw.PINCode);
  FindIPAtPresenceServer(Comprw.PresenceCode,Comprw.RegInCountry,Comprw.PINCode,ip,port,compcode);
  if (nonblank(ip)) then begin
    Comprw.CompCode = compcode;
    Comprw.TCPIP = ip;
    Comprw.Port = port;
    MatRowPut(Compb,0,Comprw);
    PutWindowRecord(wn,Compb);
    SetCompany(1,false);
  end else begin
    MessageBox(32502,"");
  end;
  FindMyServerWClassOnOKWindow = true;
end;


global
procedure AddCompanyCompaniesTsm()
begin
  record RcVc RepSpec;
  Integer wn,nwn;
  
  wn = CurWindow;
  nwn = OpenWindow("AddCompanyWClass",0,wn,"","",RepSpec);
  return;
end;

global
updating function Boolean AddCompanyWClassOnOKWindow(Integer wn)
begin
  record RcVc RepSpec;
  record CompaniesBlock Comp;
  row CompaniesBlock newComprw;
  row CompaniesBlock curComprw;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  
  if (AddCompanyCompaniesTsmRemote(RepSpec)) then begin
    BlockLoad(Comp);
    MatRowGet(Comp,CurrentCompany - 1,curComprw);
    
    newComprw.CompName = RepSpec.f1;
    newComprw.ShortName = RepSpec.f2;
    newComprw.TCPIP = curComprw.TCPIP;
    newComprw.Port = curComprw.Port;
    newComprw.EnqKey = RepSpec.f5;
    newComprw.CompCode = RepSpec.f6;
    
    MatRowPut(Comp,MatRowCnt(Comp),newComprw);
    BlockStore(Comp);
  end;
  AddCompanyWClassOnOKWindow = false;
  return;
end;

global
function Boolean CompaniesTClassOnOKWindow(Integer wn)
begin
  Boolean res;
  Integer rwcnt;
  record CompaniesBlock Compb;

  res = true;
  DeselectWindow(wn,true);
  GetWindowRecord(wn,Compb);
  rwcnt = MatRowCnt(Compb);
  if (rwcnt==0) then begin
    res = false;
  end;
  CompaniesTClassOnOKWindow = res;
  return;
end;

global
procedure ResetCompanyCompaniesTsm()
begin
  Integer wn,nwn,oldcomp;
  LongInt line,rownr;
  string 255 tstr;
  record CYBlock CYb;
  record CompaniesBlock Comp;
  row CompaniesBlock Comprw;
  record RcVc RepSpec;
  
  wn = CurWindow;
  GetWindowRecord(wn,Comp);
  rownr = WindowActiveRow(wn);
  if (rownr>=0) then begin
    CloseWindow(FindWindow("CompaniesSClass"));
    oldcomp = CurrentCompany;
    BlockLoad(Comp);
    MatRowGet(Comp,rownr,Comprw);
    if (SetCompanyCode(Comprw.CompCode,false)) then begin
      BlockLoad(CYb);
  
      nwn = OpenWindow("FCYWClass",1,0,"","",RepSpec);
      PutWindowString(nwn,"FCYWClassAction","Reset");
      ReRunWindowDef(nwn);

    end;
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure CompaniesSClassStartResetCompany()
begin
  Integer wn;
  record RcVc RepSpec;
  
  wn = OpenWindow("ConfirmOClass",1,CurWindow,"","",RepSpec);
  PutWindowString(wn,"ConfirmOClassAction","ResetCompanyFromCompanies");
  return;
end;

updating procedure DeleteAllConfVc()
begin
  record ConfVc Confr;
  Boolean found;
  
  found = true;
  while (LoopMain(Confr,1,found)) begin
    if (found) then begin
      RecordDelete(Confr);
      StepBack(Confr);
    end;
  end;
  return;
end;

global
updating procedure CompaniesSClassResetCompany()
begin
  Integer wn,nwn,oldcomp;
  LongInt line;
  record RcVc RepSpec;
  string 255 tstr;
  record CYBlock CYb;
  record SetupStatusBlock SetSb;
  record InternetEnablerBlock IEb;
  record VATCodeBlock VATb;

  wn = CurWindow;

  line = SelectedListLine(wn);
  if (line>=0) then begin
//    tstr = GetListString(wn,line);
    StartActivityIndicator(wn,"");
    tstr = GetListTag(wn,line);
    CloseWindow(wn);
    oldcomp = CurrentCompany;
    if (SetCompanyCode(tstr,false)) then begin
      DropAllRecordsInCompany(StringToInt(tstr));
      DeleteAllConfVc;
      BlockStore(SetSb);
      BlockStore(CYb);
      BlockStore(IEb);
      BlockStore(VATb);
//      StdSetupNewDatabase2(false);  //done in ResetClientCountryOClassOnOKWindow

//      nwn = OpenWindow("FCYWClass",1,0,"","",RepSpec);
//      PutWindowString(nwn,"FCYWClassAction","Reset");

//      nwn = OpenWindow("ConfirmOClass",1,0,"","",RepSpec);
//      PutWindowString(nwn,"ConfirmOClassAction","ResetCompany");

      nwn = OpenWindow("ResetClientCountryOClass",1,0,"","",RepSpec);
      PutWindowString(nwn,"ResetClientCountryOClassAction","ResetCompany");

      ReRunWindowDef(nwn);
    end;
    StopActivityIndicator;
  end;
  return;
end;



global
updating procedure CompaniesSClassAddCompany()
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record CompaniesBlock Comp;
  row CompaniesBlock Comprw;
  Boolean testf;
  record CYBlock CYb;
  string 255 country;

  wn = CurWindow;
  CloseWindow(wn);
  BlockLoad(CYb);
  BlockLoad(Comp);
  rownr = MatRowCnt(Comp);
  Comprw.CompCode = rownr + 1;
  Comprw.CompName = Comprw.CompCode;
//  Comprw.ShortName = Comprw.CompCode;
  MatRowPut(Comp,rownr,Comprw);
  BlockStore(Comp);
  if (SetCompanyCode(Comprw.CompCode,false)) then begin
      country = StringFromSet(534,CYb.VATLaw); 
      testf = ImportDefaultsOnServer3(country,CYb.VATLaw,0,"","2",BuildProductCode,false)==false;
      if (CheckAndImportFile(country & "/STDCOA.TXT")==false) then begin
        testf = CheckAndImportFile("STDCOA.TXT");
      end;
      StdSetupNewDatabaseDefaults;
      StdCreateDefaultUser;
//    StdSetupNewDatabase;
  end;
//  wn = OpenWindow("CompaniesSClass",1,0,"","",RepSpec);
  return;
end;

