
global
updating function Boolean ResEventTypeDClassEventTypeEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Record HotelBlock HotelBlockr;  
  record ResEventTypeVc ResEventTyper;
  row ResEventTypeVc ResEventTyperw;
  record ExcurTypeVc ExcurTyper;    
  LongInt ExSerNr;  
  
  ExSerNr= -1;
  if (changed!=0) then begin
    GetWindowRecord(wn,ResEventTyper);
    
    MatRowGet(ResEventTyper,rownr,ResEventTyperw);

    ExcurTyper.Code = ResEventTyperw.EventType;
    if readfirstmain(ExcurTyper,1,true) then begin
      BlockLoad(HotelBlockr);
      if (ResEventTyperw.EventGroup<>HotelBlockr.OutEventGr) then begin
          ResEventTyperw.StartTime= "" & ExcurTyper.StartTime;
          ResEventTyperw.EndTime= "" & ExcurTyper.EndTime;
      end else begin
          ResEventTyperw.StartTime= "" & ExcurTyper.EndTime;
          ResEventTyperw.EndTime= "" & ExcurTyper.StartTime;
      end;      
      MatRowPut(ResEventTyper,rownr,ResEventTyperw);
      res= RecordStore(ResEventTyper,true);
      PutWindowRecord(wn,ResEventTyper);
    end else begin
      MessageBox(0,"No hay tipo de eventos en esa fecha!.");
    end;
  end; 
   
  ResEventTypeDClassEventTypeEFAfter = res;
  RETURN;
END;

global
updating function Boolean ResEventTypeDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "EventType": res = ResEventTypeDClassEventTypeEFAfter(wn,fn,rownr,changed);
  end;
  ResEventTypeDClassAfterEditField = res;
  RETURN;
END;

global
function Boolean ResEventTypeDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;  
  record ResEventTypeVc ResEventTyper;
  
  res = true;
  GetWindowRecord(wn,ResEventTyper);
  if (ResEventTyper.OKFlag<>0) then begin  res = false; end;
  ResEventTypeDClassActiveEditField = res;
  RETURN;
END;

global
function Boolean ResEventTypeDClassOverStrikeTest(Integer wn,Integer rownr)
BEGIN
  record ResEventTypeVc ResEventTyper;
  Boolean res;
  res = true;
  GetWindowRecord(wn,ResEventTyper);    
  if (ResEventTyper.OKFlag!=0) then begin  res = false;  end;
  ResEventTypeDClassOverStrikeTest = res;
  Return; 
END; 
