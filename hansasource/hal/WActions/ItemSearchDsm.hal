external procedure QTDchsum(record QTVc,Integer);
external function Boolean QTDchrsum(var record QTVc,Integer,Integer);
remote procedure QTSumup(var record QTVc);
remote procedure QTVc_PasteQuant(var record QTVc,Integer,Boolean,var Boolean);
external procedure IVVc_PasteItem(record IVVc,Integer,Integer);
remote function Boolean QTVc_PasteArtCode(var record QTVc,Integer,var string,var string);
remote function Boolean IVVc_PasteArtCode(var record IVVc,Integer,var string,var string,Boolean,var Integer);
external function Boolean QTDClassSwitchRow(Integer,Integer);
remote function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);
remote function Boolean POVc_PasteArtCode(var record POVc,Integer,Boolean);
remote function Boolean StockTakeVc_PasteArtCode(var record StockTakeVc,Integer,Integer,var string);
remote procedure ProdVc_PasteItem(var record ProdVc,Integer);
external procedure ProdSumup(var record ProdVc);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure RecSumup(record RecVc);
remote function Boolean POQTVc_PasteArtCode(var record POQTVc,Integer,Boolean);
remote function Boolean IntORVc_PasteArtCode(var record IntORVc,Integer,Boolean);
external function Boolean IntORDClassSwitchRow(Integer,Integer);
remote function Boolean SVOVc_PasteArtCode(var record SVOVc,Integer,Boolean);
remote function Boolean WSVc_PasteArtCode(var record WSVc,Integer);
external function Boolean PUDClassArtCodeEFAfter(Integer,Integer,Integer,Integer);
remote function Boolean SDVc_PasteArtCode(var record SDVc,Integer,Integer,var string,var string);
external function Boolean SDDClassSwitchRow(Integer,Integer);
remote function Boolean StockMovVc_PasteArtCode(var record StockMovVc,Integer,Integer,var array string);
remote function Boolean RetVc_PasteArtCode(var record RetVc,Integer,var string);
external function Boolean POQTDClassSwitchRow(Integer,Integer);
remote function Boolean SRVc_PasteArtCode(var record SRVc,Integer,Boolean,var string);
external function Boolean SRDClassSwitchRow(Integer,Integer);
external function Boolean IVCashDClasstouchscreenitemEFAfter(Integer,Integer,Boolean);
external procedure DisplayStrArray(array string);

global
procedure DCPasteIVItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record IVVc IVr;
  row IVVc IVrw;
  string 255 inwarning,warning;
  Integer sernrf;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="IVVc") then begin
      goto LDCPasteIVItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,IVr);
    if (IVr.OKFlag==0) then begin
      rownr = MatRowCnt(IVr);
      if (rownr!=0) then begin
        MatRowGet(IVr,rownr-1,IVrw);
        while (blank(IVrw.ArtCode) and blank(IVrw.Quant) and blank(IVrw.Spec) and (IVrw.stp==kInvoiceRowTypeNormal or (IVrw.stp==kInvoiceRowTypeStructuredItemComponent)) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(IVr,rownr-1,IVrw);
          end;
        end;
      end;
      ClearRow(IVr,IVrw,1);
      IVrw.ArtCode = dblstr;
      MatRowPut(IVr,rownr,IVrw);
      DeselectWindow(RepSpec.UsedOnly,false);
      if (IVVc_PasteArtCode(IVr,rownr,inwarning,warning,true,sernrf)) then begin
        if (nonblank(inwarning)) then begin
          MessageBox(0,inwarning);
        end;
        if (nonblank(warning)) then begin
          MessageBox(0,warning);
        end;
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,IVr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteIVItem:;
  return;
end;

global
procedure DCPasteOrderItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record ORVc ORr;
  row ORVc ORrw;
  boolean res;
  string 255 inwarning,warning;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="ORVc") then begin
      goto LDCPasteOrderItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,ORr);
    if (ORr.Closed==0) then begin
      rownr = MatRowCnt(ORr);
      if (rownr!=0) then begin
        MatRowGet(ORr,rownr-1,ORrw);
        while(blank(ORrw.ArtCode) and blank(ORrw.Quant) and blank(ORrw.Spec) and (ORrw.stp==1) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(ORr,rownr-1,ORrw);
          end;
        end;
      end;

      ClearRow(ORr,ORrw,1);
      ORrw.ArtCode = dblstr;
      DeselectWindow(RepSpec.UsedOnly,false);
      MatRowPut(ORr,rownr,ORrw);
      PutWindowRecord(RepSpec.UsedOnly,ORr);
    
      if (ORVc_PasteArtCode(ORr,rownr,inwarning,warning,false)) then begin
        if (nonblank(inwarning)) then begin
          MessageBox(0,inwarning);
        end;
        if (nonblank(warning)) then begin
          MessageBox(0,warning);
        end;
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,ORr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteOrderItem:;
  return;
end;

global
procedure DCPasteQTItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record QTVc QTr;
  row QTVc QTrw;
  boolean res,foundf,chsum,loopf;
  String 255 inwarning,warning;
  record GeneralOptionBlock GenOptRec;
  
  if (nonblank(dblstr)) then begin 
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="QTVc") then begin
      goto LDCPasteQTItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,QTr);
    if ((QTr.Closed==0) and (QTr.Rejected <> 2) and (QTr.Comment == "")) then begin
      rownr = MatRowCnt(QTr);
      if (rownr!=0) then begin
        MatRowGet(QTr,rownr-1,QTrw);
//        while ((blank(QTrw.ArtCode) and blank(QTrw.Quant) and blank(QTrw.Spec) and (QTrw.stp==1) and rownr>0)) or (QTrw.ArtCode==dblstr) begin
        loopf = true;
        while (loopf) begin
          if (QTrw.ArtCode==dblstr) then begin 
            rownr = rownr-1;
            foundf = true; 
            loopf = false; 
          end else begin
            if ((blank(QTrw.ArtCode) and blank(QTrw.Quant) and blank(QTrw.Spec) and (QTrw.stp==1) and rownr>0))==false then begin
              loopf = false; 
            end else begin
              rownr = rownr-1;
              if (rownr!=0) then begin
                MatRowGet(QTr,rownr-1,QTrw);
              end;
            end;
          end;
        end;
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      if (foundf==false) then begin
        ClearRow(QTr,QTrw,1);
        QTrw.ArtCode = dblstr;
      end else begin
        MatRowGet(QTr,rownr,QTrw);
        if (blank(QTrw.Quant)) then begin
          QTrw.Quant = 2.00;
        end else begin
          QTrw.Quant = QTrw.Quant + 1.00;
        end;
      end;
      MatRowPut(QTr,rownr,QTrw);
      PutWindowRecord(RepSpec.UsedOnly,QTr);
      GetWindowRecord(RepSpec.UsedOnly,QTr);
      if (foundf==false) then begin
        if (QTVc_PasteArtCode(QTr,rownr,inwarning,warning)) then begin
          if (nonblank(inwarning)) then begin
            MessageBox(0,inwarning);
          end;
          if (nonblank(warning)) then begin
            MessageBox(0,warning);
          end;
        end;
      end else begin
        QTVc_PasteQuant(QTr,rownr,true,chsum);
        BlockLoad(GenOptRec);
        chsum = QTDchrsum(QTr,rownr,GenOptRec.UseDiscount);
        QTDchsum(QTr,rownr);
        QTSumup(QTr);
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,QTr);
      if (QTDClassSwitchRow(RepSpec.UsedOnly,rownr)) then begin end;
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteQTItem:;
  return;
end;

global
procedure DCPastePOItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record POVc POr;
  row POVc POrw;
  boolean res;
  String 255 inwarning;
  
  if (nonblank(dblstr)) then begin 
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="POVc") then begin
      goto LDCPastePOItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,POr);
    if(POr.Closed==0 and POr.OKFlag==0) then begin
      rownr = MatRowCnt(POr);
      if (rownr!=0) then begin
        MatRowGet(POr,rownr-1,POrw);
        while(blank(POrw.ArtCode) and blank(POrw.Quant) and blank(POrw.Spec) and (POrw.stp==1) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(POr,rownr-1,POrw);
          end;
        end;
      end;
    
      ClearRow(POr,POrw,1);
      POrw.ArtCode = dblstr;
      DeselectWindow(RepSpec.UsedOnly,false);
      MatRowPut(POr,rownr,POrw);
      PutWindowRecord(RepSpec.UsedOnly,POr);
      GetWindowRecord(RepSpec.UsedOnly,POr);
      if (POVc_PasteArtCode(POr,rownr,false)) then begin end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,POr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPastePOItem:;
  return;
end;

global
procedure DCPasteStockTakeItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record StockTakeVc StockTaker;
  row StockTakeVc StockTakerw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="StockTakeVc") then begin
      goto LDCPasteStockTakeItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,StockTaker);
    if(StockTaker.OKFlag==0) then begin
      rownr = MatRowCnt(StockTaker);
      if (rownr!=0) then begin
        MatRowGet(StockTaker,rownr-1,StockTakerw);
        while(blank(StockTakerw.ArtCode) and blank(StockTakerw.Qty) and blank(StockTakerw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(StockTaker,rownr-1,StockTakerw);
          end;
        end;
      end;
      ClearRow(StockTaker,StockTakerw,1);
      StockTakerw.ArtCode = dblstr;
      DeselectWindow(RepSpec.UsedOnly,false);
      MatRowPut(StockTaker,rownr,StockTakerw);
      PutWindowRecord(RepSpec.UsedOnly,StockTaker);
      if (StockTakeVc_PasteArtCode(StockTaker,rownr,1,inwarn)) then begin
        if (nonblank(inwarn)) then begin
          MessageBox(0,inwarn);
        end;
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,StockTaker);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteStockTakeItem:;
  return;
end;

global
procedure DCPasteProdItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record ProdVc Prodr;
  row ProdVc Prodrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="ProdVc") then begin
      goto LDCPasteProdItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,Prodr);
    if (Prodr.PRStatusFlag==0) then begin
      rownr = MatRowCnt(Prodr);
      if (rownr!=0) then begin
        MatRowGet(Prodr,rownr-1,Prodrw);
        while(blank(Prodrw.Item) and blank(Prodrw.InQty) and blank(Prodrw.OutQty) and blank(Prodrw.Comment) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(Prodr,rownr-1,Prodrw);
          end;
        end;
      end;
      ClearRow(Prodr,Prodrw,1);
      Prodrw.Item = dblstr;
      DeselectWindow(RepSpec.UsedOnly,false);
      MatRowPut(Prodr,rownr,Prodrw);
      PutWindowRecord(RepSpec.UsedOnly,Prodr);
      ProdVc_PasteItem(Prodr,rownr);
      ProdSumup(Prodr);
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,Prodr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteProdItem:;
  return;
end;

global
procedure DCPasteRecItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record INVc INr;
  record RcVc RepSpec;
  record RecVc Recr;
  row RecVc Recrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="RecVc") then begin
      goto LDCPasteRecItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,Recr);
    if(Recr.OKFlag==0 and Recr.Closed==0) then begin
      rownr = MatRowCnt(Recr);
      if (rownr!=0) then begin
        MatRowGet(Recr,rownr-1,Recrw);
        while(blank(Recrw.Item) and blank(Recrw.InQty) and blank(Recrw.OutQty) and blank(Recrw.Comment) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(Recr,rownr-1,Recrw);
          end;
        end;
      end;
      ClearRow(Recr,Recrw,1);
      Recrw.Item = dblstr;
      if (ReadFirstItem(dblstr,INr,true,true)) then begin
        Recrw.Item = INr.Code;    
        Recrw.Comment = INr.Name;    
        Recrw.ItemCost = INr.InPrice;    
        MatRowPut(Recr,rownr,Recrw);
        RecSumup(Recr); 
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,Recr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteRecItem:;
  return;
end;

global
procedure DCPasteVIItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record VIVc VIr;
  record CUVc CUr;
  record AccVc ACr;
  record APAccBlock APr;
  row VIVc VIrw;
  record INVc INr;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="VIVc") then begin
      goto LDCPasteVIItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,VIr);
    if(VIr.OKFlag==0) then begin
      rownr = MatRowCnt(VIr);
      if (rownr!=0) then begin
        MatRowGet(VIr,rownr-1,VIrw);
        while(blank(VIrw.Item) and blank(VIrw.qty) and blank(VIrw.Comment) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(VIr,rownr-1,VIrw);
          end;
        end;
      end;
      ClearRow(VIr,VIrw,1);
      VIrw.Item = dblstr;
      BlockLoad(APr);
      if (blank(VIrw.AccNumber)) then begin
        INr.Code = VIrw.Item;
        if (ReadFirstMain(INr,1,true)) then begin 
          if (nonblank(INr.CostAcc)) then begin
            VIrw.AccNumber = INr.CostAcc;
            if (nonblank(VIrw.Objects)) then begin
              VIrw.Objects = VIrw.Objects & "," & INr.Objects;
            end else begin
              VIrw.Objects = INr.Objects;
            end;
          end;
        end;
        CUr.Code = VIr.VECode;
        if (ReadFirstMain(CUr,1,true)) then begin
          if (blank(CUr.VEVATCode)) then begin
            if (CUr.ExportFlag == 0) then begin
              VIrw.VATCode = APr.VATCodeDom;
              VIrw.TaxTemplateCode = APr.TaxTemplateCode;
            end;
            if (CUr.ExportFlag == 1) then begin
              VIrw.VATCode = APr.VATCodeEU;
              VIrw.TaxTemplateCode = APr.TaxTemplateCodeEU;
            end;
            if (CUr.ExportFlag == 2) then begin
              VIrw.VATCode = APr.VATCodeExp;
              VIrw.TaxTemplateCode = APr.TaxTemplateCodeExp;
            end;
          end else begin
            VIrw.VATCode = CUr.VEVATCode;
            VIrw.TaxTemplateCode = CUr.VETaxTemplateCode;
          end;
        end;
        MatRowPut(VIr,rownr,VIrw);
      end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,VIr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteVIItem:;
  return;
end;

global
procedure DCPastePOQTItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record POQTVc POQTr;
  row POQTVc POQTrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="POQTVc") then begin
      goto LDCPastePOQTItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,POQTr);
    if(POQTr.Closed==0) then begin
      rownr = MatRowCnt(POQTr);
      if (rownr!=0) then begin
        MatRowGet(POQTr,rownr-1,POQTrw);
        while(blank(POQTrw.ArtCode) and blank(POQTrw.Quant) and blank(POQTrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(POQTr,rownr-1,POQTrw);
          end;
        end;
      end;
      ClearRow(POQTr,POQTrw,1);
      POQTrw.ArtCode = dblstr;
      MatRowPut(POQTr,rownr,POQTrw);
      if (POQTVc_PasteArtCode(POQTr,rownr,false)) then begin
        DeselectWindow(RepSpec.UsedOnly,false);
        PutWindowRecord(RepSpec.UsedOnly,POQTr);
        if (POQTDClassSwitchRow(RepSpec.UsedOnly,rownr)) then begin end;    
        SelectWindow(RepSpec.UsedOnly);
        CloseWindow(currepwn);
      end;
    end;
  end;
LDCPastePOQTItem:;
  return;
end;

global
procedure DCPasteIntORItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record IntORVc IntORr;
  row IntORVc IntORrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="IntORVc") then begin
      goto LDCPasteIntORItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,IntORr);
    if (IntORr.Closed==0) then begin
      rownr = MatRowCnt(IntORr);
      if (rownr!=0) then begin
        MatRowGet(IntORr,rownr-1,IntORrw);
        while(blank(IntORrw.ArtCode) and blank(IntORrw.Quant) and blank(IntORrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(IntORr,rownr-1,IntORrw);
          end;
        end;
      end;
      ClearRow(IntORr,IntORrw,1);
      IntORrw.ArtCode = dblstr;
      MatRowPut(IntORr,rownr,IntORrw);
      if (IntORVc_PasteArtCode(IntORr,rownr,true)) then begin
        DeselectWindow(RepSpec.UsedOnly,false);
        PutWindowRecord(RepSpec.UsedOnly,IntORr);
        if (IntORDClassSwitchRow(RepSpec.UsedOnly,rownr)) then begin end;    
        SelectWindow(RepSpec.UsedOnly);
        CloseWindow(currepwn);
      end;
    end;
  end;
LDCPasteIntORItem:;
  return;
end;

global
procedure DCPasteSVOItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record SVOVc SVOr;
  row SVOVc SVOrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="SVOVc") then begin
      goto LDCPasteSVOItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,SVOr);
    if (SVOr.DoneMark==0) then begin
      rownr = MatRowCnt(SVOr);
      if (rownr!=0) then begin
        MatRowGet(SVOr,rownr-1,SVOrw);
        while(blank(SVOrw.ArtCode) and blank(SVOrw.Quant) and blank(SVOrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(SVOr,rownr-1,SVOrw);
          end;
        end;
      end;
      ClearRow(SVOr,SVOrw,1);
      SVOrw.ArtCode = dblstr;
      MatRowPut(SVOr,rownr,SVOrw);
      if (SVOVc_PasteArtCode(SVOr,rownr,true)) then begin
        DeselectWindow(RepSpec.UsedOnly,false);
        PutWindowRecord(RepSpec.UsedOnly,SVOr);
        SelectWindow(RepSpec.UsedOnly);
        CloseWindow(currepwn);
      end;
    end;
  end;
LDCPasteSVOItem:;
  return;
end;

global
procedure DCPasteWOItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record WOVc WOr;
  row WOVc WOrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="WOVc") then begin
      goto LDCPasteWOItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,WOr);
    if (WOr.Closed==0) then begin
      rownr = MatRowCnt(WOr);
      if (rownr!=0) then begin
        MatRowGet(WOr,rownr-1,WOrw);
        while(blank(WOrw.ArtCode) and blank(WOrw.Quant) and blank(WOrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(WOr,rownr-1,WOrw);
          end;
        end;
      end;
      ClearRow(WOr,WOrw,1);
      WOrw.ArtCode = dblstr;
      MatRowPut(WOr,rownr,WOrw);
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,WOr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteWOItem:;
  return;
end;

global
procedure DCPasteWSItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record WSVc WSr;
  row WSVc WSrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="WSVc") then begin
      goto LDCPasteWSItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,WSr);
    if (WSr.OKFlag==0) then begin
      rownr = MatRowCnt(WSr);
      if (rownr!=0) then begin
        MatRowGet(WSr,rownr-1,WSrw);
        while(blank(WSrw.ArtCode) and blank(WSrw.Quant) and blank(WSrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(WSr,rownr-1,WSrw);
          end;
        end;
      end;
      ClearRow(WSr,WSrw,1);
      WSrw.ArtCode = dblstr;
      MatRowPut(WSr,rownr,WSrw);
      if (WSVc_PasteArtCode(WSr,rownr)) then begin
        DeselectWindow(RepSpec.UsedOnly,false);
        PutWindowRecord(RepSpec.UsedOnly,WSr);
        SelectWindow(RepSpec.UsedOnly);
        CloseWindow(currepwn);
      end;
    end;
  end;
LDCPasteWSItem:;
  return;
end;

global
procedure DCPastePUItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record PUVc PUr;
  row PUVc PUrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="PUVc") then begin
      goto LDCPastePUItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,PUr);
    if (PUr.OKFlag==0) then begin
      rownr = MatRowCnt(PUr);
      if (rownr>0) then begin
        MatRowGet(PUr,rownr-1,PUrw);
        while(blank(PUrw.ArtCode) and blank(PUrw.Quant) and blank(PUrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr>0) then begin
            MatRowGet(PUr,rownr-1,PUrw);
          end;
        end;
      end;
      ClearRow(PUr,PUrw,1);
      PUrw.ArtCode = dblstr;
      MatRowPut(PUr,rownr,PUrw);
      PutWindowRecord(RepSpec.UsedOnly,PUr);
      res = PUDClassArtCodeEFAfter(RepSpec.UsedOnly,0,rownr,1);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPastePUItem:;
  return;
end;

global
procedure DCPasteSDItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record SDVc SDr;
  row SDVc SDrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="SDVc") then begin
      goto LDCPasteSDItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,SDr);
    if (SDr.OKFlag==0) then begin
      rownr = MatRowCnt(SDr);
      if (rownr!=0) then begin
        MatRowGet(SDr,rownr-1,SDrw);
        while(blank(SDrw.ArtCode) and blank(SDrw.Qty) and blank(SDrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            if (rownr!=0) then begin
              MatRowGet(SDr,rownr-1,SDrw);
            end;
          end;
        end;
      end;
      ClearRow(SDr,SDrw,1);
      SDrw.ArtCode = dblstr;
      MatRowPut(SDr,rownr,SDrw);
      if (SDVc_PasteArtCode(SDr,rownr,1,inwarn,inwarn)) then begin
        DeselectWindow(RepSpec.UsedOnly,false);
        PutWindowRecord(RepSpec.UsedOnly,SDr);    
        if (SDDClassSwitchRow(RepSpec.UsedOnly,rownr)) then begin end;
        SelectWindow(RepSpec.UsedOnly);
        CloseWindow(currepwn);
      end;
    end;
  end;
LDCPasteSDItem:;
  return;
end;

global
procedure DCPasteStockMovItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record StockMovVc StockMovr;
  row StockMovVc StockMovrw;
  boolean res;
  array string 255 aWarning;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="StockMovVc") then begin
      goto LDCPasteStockMovItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,StockMovr);
    if (StockMovr.OKFlag==0 and StockMovr.OrdFlag==0 and StockMovr.SentOKFlag==0) then begin
      rownr = MatRowCnt(StockMovr);
      if (rownr!=0) then begin
        MatRowGet(StockMovr,rownr-1,StockMovrw);
        while(blank(StockMovrw.ArtCode) and blank(StockMovrw.Quant) and blank(StockMovrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(StockMovr,rownr-1,StockMovrw);
          end;
        end;
      end;
      ClearRow(StockMovr,StockMovrw,1);
      StockMovrw.ArtCode = dblstr;
      MatRowPut(StockMovr,rownr,StockMovrw);
      if (StockMovVc_PasteArtCode(StockMovr,rownr,1,aWarning)) then begin end;
      DisplayStrArray(aWarning);
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,StockMovr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteStockMovItem:;
  return;
end;

global
procedure DCPasteRetItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record RetVc Retr;
  row RetVc Retrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="RetVc") then begin
      goto LDCPasteRetItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,Retr);
    if (Retr.OKFlag==0) then begin
      rownr = MatRowCnt(Retr);
      if (rownr!=0) then begin
        MatRowGet(Retr,rownr-1,Retrw);
        while(blank(Retrw.ArtCode) and blank(Retrw.Quant) and blank(Retrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            MatRowGet(Retr,rownr-1,Retrw);
          end;
        end;
      end;
      ClearRow(Retr,Retrw,1);
      Retrw.ArtCode = dblstr;
      MatRowPut(Retr,rownr,Retrw);
      if (RetVc_PasteArtCode(Retr,rownr,inwarn)) then begin end;
      DeselectWindow(RepSpec.UsedOnly,false);
      PutWindowRecord(RepSpec.UsedOnly,Retr);
//      SelectWindow(RepSpec.UsedOnly);
//      CloseWindow(currepwn);
    end;
  end;
LDCPasteRetItem:;
  return;
end;

global
procedure ItemSearchDsm()
begin
  record RcVc RepSpec;
  Integer wn,nwn;
  String 255 fldnam,wnname;
  boolean testf;
  record IVVc IVr;
  record IntORVc IntORr;
  record ORVc ORr;
  record POVc POr;
  record POQTVc POQTr;
  record PUVc PUr;
  record QTVc QTr;
  record RetVc Retr;
  record SDVc SDr;
  record SRVc SRr;
  record SVOVc SVOr;
  record StockMovVc StockMovr;
  record StockTakeVc StockTaker;
  record WOVc WOr;
  record WSVc WSr;
  
  testf = true;
  wn = CurWindow;
  wnname = GetWindowClass(wn);
  fldnam = WindowActiveField(wn);
  switch (wnname) begin
    case "ProdDClass":
      if (fldnam<>"Item")then begin
        testf = false;
      end;
    case "RecDClass":
      if (fldnam<>"Item")then begin
        testf = false;
      end;
    case "VIDClass":
      if (fldnam<>"Item")then begin
        testf = false;
      end;
    otherwise
      if (fldnam<>"ArtCode")then begin
        switch (wnname) begin
          case "IVDClass":
            GetWindowRecord(wn,IVr);
            WindowFieldGoto(wn,IVr,MatRowCnt(IVr),"ArtCode",true);
          case "IntORDClass":
            GetWindowRecord(wn,IntORr);
            WindowFieldGoto(wn,IntORr,MatRowCnt(IntORr),"ArtCode",true);
          case "ORDClass":
            GetWindowRecord(wn,ORr);
            WindowFieldGoto(wn,ORr,MatRowCnt(ORr),"ArtCode",true);
          case "PODClass":
            GetWindowRecord(wn,POr);
            WindowFieldGoto(wn,POr,MatRowCnt(POr),"ArtCode",true);
          case "POQTDClass":
            GetWindowRecord(wn,POQTr);
            WindowFieldGoto(wn,POQTr,MatRowCnt(POQTr),"ArtCode",true);
          case "PUDClass":
            GetWindowRecord(wn,PUr);
            WindowFieldGoto(wn,PUr,MatRowCnt(PUr),"ArtCode",true);
          case "QTDClass":
            GetWindowRecord(wn,QTr);
            WindowFieldGoto(wn,QTr,MatRowCnt(QTr),"ArtCode",true);
          case "RetDClass":
            GetWindowRecord(wn,Retr);
            WindowFieldGoto(wn,Retr,MatRowCnt(Retr),"ArtCode",true);
          case "SDDClass":
            GetWindowRecord(wn,SDr);
            WindowFieldGoto(wn,SDr,MatRowCnt(SDr),"ArtCode",true);
          case "SRDClass":
            GetWindowRecord(wn,SRr);
            WindowFieldGoto(wn,SRr,MatRowCnt(SRr),"ArtCode",true);
          case "SVODClass":
            GetWindowRecord(wn,SVOr);
            WindowFieldGoto(wn,SVOr,MatRowCnt(SVOr),"ArtCode",true);
          case "StockMovDClass":
            GetWindowRecord(wn,StockMovr);
            WindowFieldGoto(wn,StockMovr,MatRowCnt(StockMovr),"ArtCode",true);
          case "StockTakeDClass":
            GetWindowRecord(wn,StockTaker);
            WindowFieldGoto(wn,StockTaker,MatRowCnt(StockTaker),"ArtCode",true);
          case "WODClass":
            GetWindowRecord(wn,WOr);
            WindowFieldGoto(wn,WOr,MatRowCnt(WOr),"ArtCode",true);
          case "WSDClass":
            GetWindowRecord(wn,WSr);
            WindowFieldGoto(wn,WSr,MatRowCnt(WSr),"ArtCode",true);
          otherwise
            testf = false;
        end;
      end;
  end;  
  if (testf) then begin 
    ReportDefaults(RepSpec,"SearchItemRClass");
    RepSpec.repname = "SearchItemRn";
    RepSpec.critname = "SearchItemRClass";
    RepSpec.Media = mtScreen;
    RepSpec.UsedOnly = wn;
    RepSpec.f3 = wnname;
    if (UserReportAccess(RepSpec)) then begin
      nwn = OpenWindow("SearchItemRClass",0,0,"","",RepSpec);
      DeselectWindow(nwn,false);
      PutWindowRecord(nwn,RepSpec);
      SelectWindow(nwn);
      WindowFieldGoto(nwn,RepSpec,-1,"f1",true);
    end else begin
      MessageBox(0,"Not allowed to run this report");
    end;
  end;
  return;
end;

global
procedure DCPasteSRItem(string dblstr,string l,Integer currepwn)
begin
  Integer wn,rownr;
  record RcVc RepSpec;
  record SRVc SRr;
  row SRVc SRrw;
  boolean res;
  string 255 inwarn;
  
  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    if (GetWindowFileName(RepSpec.UsedOnly)!="SRVc") then begin
      goto LDCPasteSRItem;
    end;
    GetWindowRecord(RepSpec.UsedOnly,SRr);
    if (SRr.OKFlag==0) then begin
      rownr = MatRowCnt(SRr);
      if (rownr!=0) then begin
        MatRowGet(SRr,rownr-1,SRrw);
        while(blank(SRrw.ArtCode) and blank(SRrw.Qty) and blank(SRrw.Spec) and rownr>0) begin
          rownr = rownr-1;
          if (rownr!=0) then begin
            if (rownr!=0) then begin
              MatRowGet(SRr,rownr-1,SRrw);
            end;
          end;
        end;
      end;
      ClearRow(SRr,SRrw,1);
      SRrw.ArtCode = dblstr;
      MatRowPut(SRr,rownr,SRrw);
      if (SRVc_PasteArtCode(SRr,rownr,true,inwarn)) then begin
        DeselectWindow(RepSpec.UsedOnly,false);
        PutWindowRecord(RepSpec.UsedOnly,SRr);    
        if (SRDClassSwitchRow(RepSpec.UsedOnly,rownr)) then begin end;
        SelectWindow(RepSpec.UsedOnly);
        CloseWindow(currepwn);
      end;
    end;
  end;
LDCPasteSRItem:;
  return;
end;

global
procedure DCPasteIVCashItem(string dblstr,string l,Integer currepwn)
begin
  Integer wnPos,rownr;
  record RcVc RepSpec;
  
  if (nonblank(dblstr)) then begin
    if ((currepwn<>0) and WindowValid(currepwn)) then begin
      GetWindowRecord(currepwn,RepSpec);
      wnPos = RepSpec.UsedOnly;
      if ((wnPos<>0) and (WindowValid(wnPos))) then begin
        PutWindowString(wnPos,"touchscreenitem",dblstr);
        PutWindowString(wnPos,"touchscreenitemqty",1.00);
        DeselectWindow(wnPos,false);
        IVCashDClasstouchscreenitemEFAfter(wnPos,0,true);
        CloseWindow(currepwn);
      end;
    end;
  end;
  return;
end;
