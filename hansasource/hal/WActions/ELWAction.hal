external procedure ClientGetExpiringLicenses();
external procedure LongDateToStr2(Date,record ClientFormatBlock,Integer,var string);
remote procedure FindRemoteLicencesAboutToExpire(var array record LicensesVc,var Longint,var array record LicensesVc,var Longint,Integer);
external procedure OpenMarketplace();
external function LongInt DateDiff(Date,Date);

function string 255 ResourcePath()
begin
  string 255 res;
  
  if (WindowsMode) then begin
    res = "res";
  end else begin
    res = "file";
  end;
  
  res = res & "://" & ResourceFolder & "/";
  
  ResourcePath = res;
end;

function string 255 PageStart1()
begin
  string 255 res;
  
  res = res & "<html>";
  res = res &   "<head>";
  res = res &     "<link rel=""stylesheet"" href=""" & ResourcePath & "/iap.css"" type=""text/css"" />";
  
  PageStart1 = res;
  return;
end;

function string 255 PageStart2()
begin
  string 255 res;
  
  res = res &     "<script src=""" & ResourcePath & "/iap.js"" type=""text/javascript""></script>";
  
  PageStart2 = res;
  return;
end;

function string 255 PageStart3(boolean main)
begin
  string 255 res;
  
  res = res &     "<script type=""text/javascript"" src=""" & ResourcePath & "/jquery.js""></script>";
  res = res &   "</head>";
  res = res &   "<body style='background:#fdfdfd'>";
  res = res &     "<div id=""container"">";
  if (main) then begin
    res = res &       "<div id=""contentMain"">";
  end else begin
    res = res &       "<div id=""content"">";
  end;
  
  PageStart3 = res;
  return;
end;

function string 255 PageEnd()
begin
  string 255 res;
  
  res = res &       "</div>";
  res = res &     "</div>";
  res = res &   "</body>";
  res = res & "</html>";
  
  PageEnd = res;
  return;
end;

global
function string 255 OpenMarketButton(integer wn,string class,string value)
begin
  string 255 res;
  
  res = res & "<div id=""OpenMarketBtn"" style='display: inline;'>";
  res = res & "<input type=""button""";
  res = res & " style='display: inline; padding: 3px; font-size: 12px; border: 1px solid #fafafa; background: #fbfbfb;";
  res = res & " border-radius: 6px; -webkit-border-radius: 6px; -moz-border-radius: 6px; box-shadow: 1px 1px 1px #888888; -webkit-box-shadow: 1px 1px 1px #888888; -moz-box-shadow: 1px 1px 1px #888888;'";
  res = res & " value=""" & value & """";
  res = res & " onclick=""HansaWorld.callHal('ClickOpenMarketplace','" & wn &"')""";
  res = res & ">";
  res = res & "</div>";
  
  OpenMarketButton = res;
  return;
end;

global
function string 255 CloseDoNotRepeatButton(integer wn,string class,string value)
begin
  string 255 res;
  
  res = res & "<div id=""CloseExpireBtn"" style='display: inline;  padding-right: 20px'>";
  res = res & "<input type=""button""";
  res = res & " style='display: inline; padding: 3px; font-size: 12px;";
  res = res & " border: 1px solid #fafafa; background: #fbfbfb; border-radius: 6px; -webkit-border-radius: 6px; -moz-border-radius: 6px; box-shadow: 1px 1px 1px #888888; -webkit-box-shadow: 1px 1px 1px #888888; -moz-box-shadow: 1px 1px 1px #888888;'";
  res = res & " value=""" & value & """";
  res = res & " onclick=""HansaWorld.callHal('MarkReportCancelFuture','" & wn &"')""";
  res = res & ">";
  res = res & "</div>";
  
  CloseDoNotRepeatButton = res;
  return;
end;

procedure ELMainWindow(integer wn)
begin


LELMainWindow:;
  return;
end;

global
function boolean ELWClassOnOpenWindow(integer wn)
begin
   
  //ELMainWindow(wn);

  ELWClassOnOpenWindow = false;
  return;
end;

global
updating procedure UpdateRegDataExp()
begin
  record StdRegDataBlock SRDb; 
  
  BlockLoad(SRDb);
  SRDb.DontShowExpiringLiceneses = 1;
  SRDb.DontShowExpiringDate = CurrentDate;
  BlockStore(SRDb);
end;

global
procedure MarkReportCancelFuture(string wnStr)
begin
  integer wn; 

  qupdating.UpdateRegDataExp;
//  wn = FindWindow("ELWClass");  // Crashes the Client on closing the Window
//  DeselectWindow(wn,false); 
//  if (wn>0) then begin 
//    CloseWindow(wn);
//  end;
end;  

global
updating procedure ClickOpenMarketplace(string wnStr)
begin
  OpenMarketplace;  
end; 

procedure FindLocalLicencesAboutToExpire(var array record LicensesVc Licensesra,var Longint cnta,
                                         var array record LicensesVc LicensesraExpire,var Longint cntaExpire,
                                         Integer DaysAhead)
begin
  record LicensesVc Licensesr;
  boolean foundf,testf;
  string 255 UserCode;
  Integer Counter;
  date ExpireDate,StartDateCheck;
  
  StartDateCheck = AddDay(CurrentDate,0); //For Testing.
  
  foundf= true;
  while (LoopKey("ActiveFunction",Licensesr,1,foundf)) begin
    testf = true; 
    if (Licensesr.Function=="ServerSlot") then begin testf = false; end;
    if (Licensesr.Active!=1) then begin testf = false; end;
    if (Licensesr.Type==kLicItemTypePermanent) then begin testf = false; end;
    if (DateInRange(Licensesr.EndDate,StartDateCheck,AddDay(StartDateCheck,DaysAhead))==false) then begin testf = false; end;

    if (testf) then begin
      Licensesra[cnta] = Licensesr;
      cnta = cnta + 1;
    end;
  end;
  
  Counter = 0;
  ResetLoop(Licensesr);
  Licensesr.EndDate = CurrentDate;
  Licensesr.Active = 0;
  while (LoopKey("ActiveFunction",Licensesr,1,foundf)) begin
    testf = true; 
    if (Licensesr.Function=="ServerSlot") then begin testf = false; end;
    if (Licensesr.Active!=0) then begin testf = false;  foundf = false; end;
    if (Licensesr.Type==kLicItemTypePermanent) then begin testf = false; end;

    if (testf) then begin
      Counter = Counter + 1;
      if (Counter <= 2) then begin 
        Licensesra[cntaExpire] = Licensesr;
        cntaExpire = cntaExpire + 1;
      end;
    end;
  end;  
  
  return;
end;

function string 255 ModuleName(string ShortName)
begin
  string 255 res;
  
  switch (ShortName) begin
    case "ServerSlot":res = StringFromStringSet(526,ShortName);
    case "HasModPL": res = USetStr(29021);
    case "HasModSL": res = USetStr(29041);
    case "HasModNL": res = USetStr(29061);
    case "HasModIN": res = USetStr(29081);
    case "HasModPO": res = USetStr(29101);
    case "HasModSO": res = USetStr(29121);
    case "HasModQT": res = USetStr(29141);
    case "HasSkypeConnection": res = USetStr(29161);
    case "HasMultiCurrency": res = USetStr(29181);
    case "HasPriceLists": res = USetStr(29201);
    case "HasObjects": res = USetStr(29221);
    case "HasMultiLocations": res = USetStr(29241);
    case "HasNumberSeries": res = USetStr(29261);
    case "HasProjects": res = USetStr(29281);
    case "HasForms": res = USetStr(29321);
    otherwise res = StringFromStringSet(526,ShortName);
  end;
  ModuleName = res;
  return;
end;

procedure DisplayLicensesWindow(Integer wn,array record LicensesVc Licensesra,Longint cnta,array record LicensesVc LicensesraSlots,Longint cntaSlots,
                                var array record LicensesVc LicensesraExpire,var Longint cntaExpire,
                                var array record LicensesVc LicensesraSlotsExpired,var Longint cntaSlotsExpired)
begin
  record LicensesVc Licensesr;
  string 255 html,allhtml,datestr;
  LongInt i,j;
  record ClientFormatBlock CFb;
  
  BlockLoad(CFb);
  
//  html = html & "<div id=""header1"">" & USetStr(prodbase + 1) & "</div>";
//  html = html & "<div id=""header9"">" & USetStr(prodbase + 2) & "</div>";
  
  if (cnta > 0 or cntaSlots > 0) then begin 
    html = html & "<div id=""EL"">";
    html = html & "<table width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""EL_Table"" style=' font-size: 10pt'>";
    html = html & "<tr><td width=""50%"">";
    html = html & "<div id=""ELHeading"">";
    html = html & USetStr(31322);
    html = html & "</div>"; 
    html = html & "</td>";
    html = html & "<td width=""25%"">";
    html = html & "<div id=""ELHeading"">";
    html = html & USetStr(31323);
    html = html & "</div>"; 
    html = html & "</td>";  
    html = html & "<td width=""25%"">";
    html = html & "<div id=""ELHeading"">";
    html = html & USetStr(31324);
    html = html & "</div>"; 
    html = html & "</td></tr>";    

    html = html & "<tr>";    
    html = html & "<td><div style='border-bottom: 1px #DEDEDE solid;'></div></td>";    
    html = html & "<td><div style='border-bottom: 1px #DEDEDE solid;'></div></td>";    
    html = html & "<td><div style='border-bottom: 1px #DEDEDE solid;'></div></td>";    
    html = html & "</tr>";    

    for (i=0; i<cnta; i=i+1) begin
      Licensesr = Licensesra[i];
      html = html & "<tr><td width=""50%"">";
      html = html & "<div id=""ELRows"">";
      html = html & ModuleName(Licensesr.Function);
      html = html & "</div>"; 
      html = html & "</td>";
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      LongDateToStr2(Licensesr.EndDate,CFb,-1,datestr);
      html = html & datestr;
      html = html & "</div>"; 
      html = html & "</td>";  
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      html = html & DateDiff(Licensesr.EndDate,CurrentDate);
      html = html & "</div>"; 
      html = html & "</td></tr>";    
    end;
    
    for (i=0; i<cntaSlots; i=i+1) begin
      Licensesr = LicensesraSlots[i];
      html = html & "<tr><td width=""50%"">";
      html = html & "<div id=""ELRows"">";
      html = html & ModuleName(Licensesr.Function);
      html = html & "</div>"; 
      html = html & "</td>";
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      LongDateToStr2(Licensesr.EndDate,CFb,-1,datestr);
      html = html & datestr;      
      html = html & "</div>"; 
      html = html & "</td>";  
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      html = html & DateDiff(Licensesr.EndDate,CurrentDate);
      html = html & "</div>"; 
      html = html & "</td></tr>";
    end; 
    html = html & "</table>";
    html = html & "</div>";
  end;
  
  if (cntaExpire > 0 or cntaSlotsExpired > 0) then begin 
    html = html & "<div id=""EL"">";
    html = html & "<table width=""100%"" border=""0"" cellpadding=""0"" cellspacing=""0"" class=""EL_Table"">";
    html = html & "<tr><td width=""50%"">";
    html = html & "<div id=""ELHeading"">";
    html = html & USetStr(31322);
    html = html & "</div>"; 
    html = html & "</td>";
    html = html & "<td width=""25%"">";
    html = html & "<div id=""ELHeading"">";
    html = html & USetStr(31323);
    html = html & "</div>"; 
    html = html & "</td>";  
    html = html & "<td width=""25%"">";
    html = html & "<div id=""ELHeading"">";
    html = html & USetStr(31329);
    html = html & "</div>"; 
    html = html & "</td></tr>";    

    for (i=0; i<cntaExpire; i=i+1) begin
      Licensesr = LicensesraExpire[i];
      html = html & "<tr><td width=""50%"">";
      html = html & "<div id=""ELRows"">";
      html = html & ModuleName(Licensesr.Function);
      html = html & "</div>"; 
      html = html & "</td>";
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      LongDateToStr2(Licensesr.EndDate,CFb,-1,datestr);
      html = html & datestr;      
      html = html & "</div>"; 
      html = html & "</td>";  
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      html = html & DateDiff(Licensesr.EndDate,CurrentDate);
      html = html & "</div>"; 
      html = html & "</td></tr>";    
    end;
    
    for (i=0; i<cntaSlotsExpired; i=i+1) begin
      Licensesr = LicensesraSlotsExpired[i];
      html = html & "<tr><td width=""50%"">";
      html = html & "<div id=""ELRows"">";
      html = html & ModuleName(Licensesr.Function);
      html = html & "</div>"; 
      html = html & "</td>";
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      LongDateToStr2(Licensesr.EndDate,CFb,-1,datestr);
      html = html & datestr;      
      html = html & "</div>"; 
      html = html & "</td>";  
      html = html & "<td width=""25%"">";
      html = html & "<div id=""ELRows"">";
      html = html & DateDiff(Licensesr.EndDate,CurrentDate);
      html = html & "</div>"; 
      html = html & "</td></tr>";
    end; 
    html = html & "</table>";
    html = html & "</div>";
  end;
  html = html & "<br/>";

  html = html & "<div style='display: inline;'>";
  html = html & CloseDoNotRepeatButton(wn,"",USetStr(31325));
  html = html & OpenMarketButton(wn,"",USetStr(31327));
  html = html & "</div>";
  
  
//  html = html & "<div id=""BigProductImg""><img src=""" & ResourcePath & USetStr(prodbase + 5) & """ /></div>";

  
  allhtml = PageStart1 & PageStart2 & PageStart3(true) & html & PageEnd;
  
  WriteStringToFile(allhtml,"ELwindow.html",0);
  
  SetWebPageData(wn,"$EL",allhtml);  

  
end;



procedure DisplayLicensesCheck(Integer wn,array record LicensesVc Licensesra,Longint cnta,array record LicensesVc LicensesraSlots,Longint cntaSlots,
                                var array record LicensesVc LicensesraExpire,var Longint cntaExpire,
                                var array record LicensesVc LicensesraSlotsExpired,var Longint cntaSlotsExpired)
begin
  record LicensesVc Licensesr;
  Longint i;
  Array Integer pos;
  
  pos[1] = 0;
  pos[2] = 280;
  pos[3] = 480;

  StartReportJob(""); 
  Header(1,USetStr(31326),1);
  EndHeader;
  if (cnta > 0 or cntaSlots > 0) then begin 
    StartFormat(15);
    OutString(pos[1],0,USetStr(31322),false);
    OutString(pos[2],0,USetStr(31323),true);
    OutString(pos[3],0,USetStr(31324),true);
    EndFormat;
    Black_Divider(0,1);
    for (i=0; i<cnta; i=i+1) begin
      Licensesr = Licensesra[i];
      StartFormat(20);
      OutString(pos[1],0,ModuleName(Licensesr.Function),false);
      OutString(pos[2],0,DateToString(Licensesr.EndDate,"DD/MM/YYYY"),true);
      OutString(pos[3],0,DateDiff(Licensesr.EndDate,CurrentDate),true);    
      EndFormat;
    end;  
    for (i=0; i<cntaSlots; i=i+1) begin
      Licensesr = LicensesraSlots[i];
      StartFormat(20);
      OutString(pos[1],0,ModuleName(Licensesr.Function),false);
      OutString(pos[2],0,DateToString(Licensesr.EndDate,"DD/MM/YYYY"),true);
      OutString(pos[3],0,DateDiff(Licensesr.EndDate,CurrentDate),true);    
      EndFormat;
    end;      
    StartFormat(35);
    EndFormat; 
  end;
  if (cntaExpire > 0 or cntaSlotsExpired > 0) then begin 
    StartFormat(15);
    OutString(pos[1],0,USetStr(31328),false);
    EndFormat;
    StartFormat(15);
    OutString(pos[1],0,USetStr(31322),false);
    OutString(pos[2],0,USetStr(31323),true);
    OutString(pos[3],0,USetStr(31329),true);
    EndFormat;  
    Black_Divider(0,1);
    for (i=0; i<cntaExpire; i=i+1) begin
      Licensesr = LicensesraExpire[i];
      StartFormat(20);
      OutString(pos[1],0,ModuleName(Licensesr.Function),false);
      OutString(pos[2],0,DateToString(Licensesr.EndDate,"DD/MM/YYYY"),true);
      OutString(pos[3],0,DateDiff(Licensesr.EndDate,CurrentDate),true);    
      EndFormat;
    end; 
    for (i=0; i<cntaSlotsExpired; i=i+1) begin
      Licensesr = LicensesraSlotsExpired[i];
      StartFormat(20);
      OutString(pos[1],0,ModuleName(Licensesr.Function),false);
      OutString(pos[2],0,DateToString(Licensesr.EndDate,"DD/MM/YYYY"),true);
      OutString(pos[3],0,DateDiff(Licensesr.EndDate,CurrentDate),true);    
      EndFormat;
    end;     
  end;
  StartFormat(35);
  EndFormat;
  StartFormat(20);
  OutString(pos[1],"DblOpenMarketplace",USetStr(31327),false);
  OutString(pos[3],"DblMarkReportCancel",USetStr(31325),true);  
  EndFormat;
  
  EndJob;
end;

global
updating procedure ExpiredMarketPlaceLicenseDisplay()
begin
  array record LicensesVc Licensesra;
  array record LicensesVc LicensesraExpired;
  array record LicensesVc LicensesraSlots;
  array record LicensesVc LicensesraSlotsExpired;
  Longint cnta,cntaSlots,cntaExpired,cntaSlotsExpired;
  Integer DaysAhead,wn;
  record StdRegDataBlock SRb;
  record RcVc RepSpec;
    
    
  BlockLoad(SRb);
  if (IsStandardProduct==false) then begin 
    goto LExpiredMarketPlaceLicenseDisplay;
  end;

  if (DateDiff(SRb.DontShowExpiringDate,CurrentDate) >= 30) then begin 
    SRb.DontShowExpiringLiceneses = 0;
    BlockStore(SRb);
    BlockLoad(SRb);
  end;

  if (SRb.DontShowExpiringLiceneses!=1) then begin  
    cnta = 0; 
    cntaSlots = 0;
    cntaSlotsExpired = 0;
    cntaExpired = 0;
      
    DaysAhead = 5;
    if (TestEnablerFile("EnAppleInAppPurchase")) then begin 
    end else begin
      if (SingleUserMode) then begin 
        FindLocalLicencesAboutToExpire(Licensesra,cnta,LicensesraExpired,cntaExpired,DaysAhead);
      end;
      if (ClientMode) then begin 
        FindRemoteLicencesAboutToExpire(LicensesraSlots,cntaSlots,LicensesraSlotsExpired,cntaSlotsExpired,DaysAhead);
      end;
      if ((cnta>0) or (cntaSlots>0) or (cntaExpired>0) or (cntaSlotsExpired>0)) then begin
        ClientGetExpiringLicenses;
      end;
    end;
/*
    if (GuiType==kGuiCocoa or GuiType==kGuiiPhone) then begin 
      if (TestEnablerFile("EnAppleInAppPurchase")) then begin      
        if ((cnta>0) or (cntaSlots>0) or (cntaExpired>0) or (cntaSlotsExpired>0)) then begin
          wn = OpenWindow("ELWClass",0,0,"","",RepSpec);      
          DisplayLicensesWindow(wn,Licensesra,cnta,LicensesraSlots,cntaSlots,LicensesraExpired,cntaExpired,LicensesraSlotsExpired,cntaSlotsExpired);
        end;
      end else begin
        if ((cnta>0) or (cntaSlots>0) or (cntaExpired>0) or (cntaSlotsExpired>0)) then begin
          ClientGetExpiringLicenses;
        end;
      end;
    end else begin
      if ((cnta>0) or (cntaSlots>0) or (cntaExpired>0) or (cntaSlotsExpired>0)) then begin
        ClientGetExpiringLicenses;
      end;
    end;
*/    
  end;
LExpiredMarketPlaceLicenseDisplay:;
  return;
end;