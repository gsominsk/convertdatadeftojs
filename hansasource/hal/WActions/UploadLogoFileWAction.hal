remote function longint RemoteSaveAndDistributetoClients(area,string,string);
remote function longint RemoteGetLogoFile(var area,string);

procedure ExportAreaToFile(string filename,Area a)
begin
  SetFileOnServer(false);
  CreateFile(filename);
  CloseFile;
  OutAreaToFile(a,filename,0);
  return;
end;

global
procedure ClientLogoFileDownloadTask(string parstr)
begin
  longint res;
  string 255 filename;
  area a_logo;
  
  res = 0;
  filename = parstr;
  if (nonblank(parstr)) then begin 
    res = RemoteGetLogoFile(a_logo,filename);
    if (res==1) then begin 
      ExportAreaToFile(filename,a_logo);
      LogText(38303," :" & filename);
    end;
  end;
end;

global
procedure ClientLogoFileDownload(string filename,string filehash)
begin
  integer rand;

  if (ClientMode==false) then begin 
    goto LClientLogoFileDownload;
  end;
  if (FileExists(filename)) then begin 
    if (filehash==GetFileMD5(filename)) then begin 
      goto LClientLogoFileDownload;
    end;
  end;
  Randomize;
  rand = random(0,80);
  NewTimedTask2("ClientLogoFileDownload_" & filename,"Client Logo File Download","ClientLogoFileDownloadTask",filename,CurrentDate,AddSeconds(CurrentTime,rand),"","");
LClientLogoFileDownload:;
end;

procedure UploadLogoFile(string filename,string filestr,var string msgstr)
begin
  string 255 tstr;
  string 255 filehash;
  LongInt res;
  area a_logo;
  
  res = 0;
  if (FileExists(filename)) then begin 
    if (Filesize(filename)>2000000) then begin 
      res = 38404;
      goto LUploadLogoFile;
    end;
    filehash = GetFileMD5(filename);
    AddFileToArea(filename,a_logo,false);
    res = RemoteSaveAndDistributetoClients(a_logo,filehash,filestr);
  end else begin
    res = 38400;
  end;
LUploadLogoFile:;
  switch (res) begin
    case 38405: tstr = " : " & filestr;
    case 38400: tstr = " : " & filestr;
    case 38404: tstr = " : " & filestr;
    case 38401: tstr = " : " & filestr;
  end;
  msgstr = msgstr & USetStr(res) & tstr & chr(13) & chr(10);
  return;
end;

global
function Boolean UploadLogoFileVClassOnOKWindow(integer wn)
begin
  record RcVc RepSpec;
  LongInt res;
  string 255 msgstr,tstr;
  
  res = 0;
  GetWindowRecord(wn,RepSpec);
  if (blank(RepSpec.f1) or blank(RepSpec.f2)) then begin 
    MessageBox(38407,"");
    if (blank(RepSpec.f1)) then begin 
      WindowFieldGoTo(wn,RepSpec,-1,"f1",true);
    end else begin 
      WindowFieldGoTo(wn,RepSpec,-1,"f2",true);
    end;
    goto LUploadLogoFileVClassOnOKWindow;
  end;
  
  if (right(UpperCase(RepSpec.f1),8)!="LOGO.BMP") then begin 
    MessageBox(38408," : LOGO.BMP");
    WindowFieldGoTo(wn,RepSpec,-1,"f1",true);
    goto LUploadLogoFileVClassOnOKWindow;
  end;
  if (right(UpperCase(RepSpec.f2),8)!="LOGO.PDF") then begin 
    MessageBox(38408," : LOGO.PDF");
    WindowFieldGoTo(wn,RepSpec,-1,"f2",true);
    goto LUploadLogoFileVClassOnOKWindow;
  end;  
  
  if (ClientMode) then begin 
    if (nonblank(RepSpec.f1)) then begin 
      UploadLogoFile(RepSpec.f1,"LOGO.BMP",msgstr);    
    end;
    if (nonblank(RepSpec.f2)) then begin 
      UploadLogoFile(RepSpec.f2,"LOGO.PDF",msgstr);
    end;      
  end;
  MessageBox(0,msgstr);  
  CloseWindow(wn);
LUploadLogoFileVClassOnOKWindow:;
  UploadLogoFileVClassOnOKWindow = false;
  return;
end;
