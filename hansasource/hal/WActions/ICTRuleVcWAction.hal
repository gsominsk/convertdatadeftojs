function Boolean ICTRuleDClassAccNumberEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record ICTRuleVc ICTVRr;
  record AccVc Accr;

  if (changedf) then begin
    GetWindowRecord(wn,ICTVRr);
    Accr.AccNumber = ICTVRr.AccNumber;
    ReadFirstMain(Accr,1,true);
    ICTVRr.AccName = Accr.Comment;
    PutWindowRecord(wn,ICTVRr);
  end;
  ICTRuleDClassAccNumberEFAfter = res;
  return;
end;

function Boolean ICTRuleDClassToAccNumberEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record ICTRuleVc ICTVRr;
  record AccVc Accr;

  if (changedf) then begin
    GetWindowRecord(wn,ICTVRr);
    Accr.AccNumber = ICTVRr.ToAccNumber;
    ReadFirstMain(Accr,1,true);
    ICTVRr.ToAccName = Accr.Comment;
    PutWindowRecord(wn,ICTVRr);
  end;
  ICTRuleDClassToAccNumberEFAfter = res;
  return;
end;

function Boolean ICTRuleDClassCorAccNumberEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record ICTRuleVc ICTVRr;
  record AccVc Accr;

  if (changedf) then begin
    GetWindowRecord(wn,ICTVRr);
    Accr.AccNumber = ICTVRr.CorAccNumber;
    ReadFirstMain(Accr,1,true);
    ICTVRr.CorAccName = Accr.Comment;
    PutWindowRecord(wn,ICTVRr);
  end;
  ICTRuleDClassCorAccNumberEFAfter = res;
  return;
end;

global
function Boolean ICTRuleDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "AccNumber": res = ICTRuleDClassAccNumberEFAfter(wn,changed!=0);
    case "ToAccNumber": res = ICTRuleDClassToAccNumberEFAfter(wn,changed!=0);
    case "CorAccNumber": res = ICTRuleDClassCorAccNumberEFAfter(wn,changed!=0);
  end;
  ICTRuleDClassAfterEditField = res;
  return;
end;
