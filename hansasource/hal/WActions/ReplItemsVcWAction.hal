external function string 40 SerialNrSClassSpecPName(string);
//remote function Boolean ReplItemsVc_PasteArtCode(var record ReplItemsVc);

function Boolean ReplItemsDClassArtCodeEFAfter(Integer wn,Integer changed)
BEGIN
  record ReplItemsVc ReplItemsr;
  
  GetWindowRecord(wn,ReplItemsr);
  DeselectWindow(wn,false);
/*
  if (ReplItemsVc_PasteArtCode(ReplItemsr)) then begin
    PutWindowRecord(wn,ReplItemsr);
  end else begin
    Beep;
  end;
*/
  ReplItemsDClassArtCodeEFAfter = true;
  RETURN;
END;

global
function Boolean ReplItemsDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
BEGIN
  Boolean res;

  switch (fieldname) begin
    case "ArtCode": res = ReplItemsDClassArtCodeEFAfter(wn,changed);
  end;
  ReplItemsDClassAfterEditField = res;
  RETURN;
END;

global
function Boolean ReplItemsDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
 
  res = true;
  if (wnst!=1) then begin//insert
    switch (fieldname) begin
      case "OldArtCode": res = false;
      case "OldSerialNr": res = false;
      case "OldQty": res = false;
      case "OldDesc": res = false;
    end;
  end;
  ReplItemsDClassActiveEditField = res;
  RETURN;
END;

global
function string 40 ReplItemsDClassSpecPasteName(Integer wn,string defpsname)
begin
  string 255 psname;
  
  psname = defpsname;
  switch (WindowActiveField(wn)) begin
    case "SerialNr": psname = SerialNrSClassSpecPName(defpsname);
  end;
  ReplItemsDClassSpecPasteName = psname;
  return;
end;
