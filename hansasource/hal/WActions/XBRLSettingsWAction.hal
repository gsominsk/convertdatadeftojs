remote procedure XBRLSettingsVc_PasteXBRLElement(var record XBRLSettingsVc,Integer);
remote procedure XBRLSettingsVc_PasteUserDefRepRow(var record XBRLSettingsVc,Integer);

global
function Boolean XBRLSettingsDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
begin 
  Boolean res;
  
  res = true;
  switch (fieldname) begin
    case "FieldName": res = false;
    case "FieldType": res = false;
  end;
  
  XBRLSettingsDClassActiveEditField = res;
  return;
end;

function Boolean XBRLSettingsDClassXBRLElementEFAfter(Integer wn,Integer rownr,Integer changed)
begin
  record XBRLSettingsVc XBRLSr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,XBRLSr);
    XBRLSettingsVc_PasteXBRLElement(XBRLSr,rownr);
    PutWindowRecord(wn,XBRLSr);
  end;
  
  XBRLSettingsDClassXBRLElementEFAfter = true;
  return;
end;

function Boolean XBRLSettingsDClassUserDefRepRowEFAfter(Integer wn,Integer rownr,Integer changed)
begin
  record XBRLSettingsVc XBRLSr;
  
  if (changed!=0) then begin
    GetWindowRecord(wn,XBRLSr);
    XBRLSettingsVc_PasteUserDefRepRow(XBRLSr,rownr);
    PutWindowRecord(wn,XBRLSr);
  end;
  
  XBRLSettingsDClassUserDefRepRowEFAfter = true;
  return;
end;

global
function Boolean XBRLSettingsDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;
  
  switch (fieldname) begin
    case "XBRLElement": res = XBRLSettingsDClassXBRLElementEFAfter(wn,rownr,changed);
    case "UserDefRepRow": res = XBRLSettingsDClassUserDefRepRowEFAfter(wn,rownr,changed);
  end;
  
  XBRLSettingsDClassAfterEditField = res;
  return;
end;
