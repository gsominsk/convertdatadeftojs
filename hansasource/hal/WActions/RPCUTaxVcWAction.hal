function Boolean RPCUTaxDClassCustCodeEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record RPCUTaxVc RPCUTaxr;
  record CUVc CUr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,RPCUTaxr);
    CUr.Code = RPCUTaxr.CustCode;
    ReadFIrstMain(CUr,1,true);
    RPCUTaxr.CustName = CUr.Name;
    PutWindowRecord(wn,RPCUTaxr);
  end;
  RPCUTaxDClassCustCodeEFAfter = res;
  return;
end;

function Boolean RPCUTaxDClassRegionEFAfter(Integer wn,Integer rownr,Boolean changedf)
begin
  Boolean res;
  record RPCUTaxVc RPCUTaxr;
  row RPCUTaxVc RPCUTaxrw;
  record RegionVc Regionr;

  res = true;
  if (changedf) then begin
    GetWindowRecord(wn,RPCUTaxr);
    MatRowGet(RPCUTaxr,rownr,RPCUTaxrw);
    Regionr.Code = RPCUTaxrw.Region;
    ReadFIrstMain(Regionr,1,true);
    RPCUTaxrw.TAXAcc = Regionr.RPCUTAXAcc;
    RPCUTaxrw.BaseMin = Regionr.BaseMin;
    MatRowPut(RPCUTaxr,rownr,RPCUTaxrw);
    PutWindowRecord(wn,RPCUTaxr);
  end;
  RPCUTaxDClassRegionEFAfter = res;
  return;
end;

global
function Boolean RPCUTaxDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "CustCode": res = RPCUTaxDClassCustCodeEFAfter(wn,changed!=0);
    case "Region": res = RPCUTaxDClassRegionEFAfter(wn,rownr,changed!=0);
  end;
  RPCUTaxDClassAfterEditField = res;
  return;
end;
