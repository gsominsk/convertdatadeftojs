external procedure ParseT1Data(string,var string,var string,var string,var string,var string);
external procedure ParseT2Data(string,var string,var string,var string,var string);

//Place holder code for actual check
function Boolean CardIsInvalid(string cardno)
begin
  Boolean res;
  if (cardno=="") then begin
    res = true;
  end else begin
    res = false;
  end;
  CardIsInvalid = res;
  return;
end;

//Place holder code for actual check
function Boolean CardIsBlocked(string cardno)
begin
  Boolean res;
  if (cardno=="1") then begin
    res = true;
  end else begin
    res = false;
  end;
  CardIsBlocked = res;
  return;
end;

//Place holder code for actual check
function string 255 CardHolderName(string cardno)
begin
  string 255 res;
  if (cardno=="2") then begin
    res = "Samuel Jaffacake";
  end else begin
    res = "Mollie Limescale";
  end;
  CardHolderName = res;
  return;
  
end;

global
function Boolean PayDetailsWClassOnOpenWindow(Integer wn)
begin
  record RcVc RepSpec;

  RecordNew(RepSpec);
  PutWindowRecord(wn,RepSpec);
  PayDetailsWClassOnOpenWindow = false;
  return;
end;


global
function Boolean PayDetailsWClassOnOKWindow(Integer wn)
begin
  record RcVc RepSpec;
  Integer nwn;
  string 255 name;
  
  GetWindowRecord(wn,RepSpec);
  if (CardIsInvalid(RepSpec.f2)) then begin
    MessageBox(0,"Invalid card");
  end else begin 
    if (CardIsBlocked(RepSpec.f2)) then begin
      MessageBox(0,"This card is blocked");
    end else begin
      RepSpec.f1 = CardHolderName(RepSpec.f2);
      nwn = OpenWindow("SignatureWClass",1,0,"","",RepSpec);
      PutWindowRecord(nwn,RepSpec);
    end;
  end;
  PayDetailsWClassOnOKWindow = false;
  return;
end;

global
procedure PayDetailsWClassCardData(Integer wn,string sdata)
begin
  record RcVc RepSpec;
  string 255 t1,t2,t3;
  string 255 priacc,name,expdate,scode,exdata;
  xml xdata;
  val outstanding;
  
  GetWindowRecord(wn,RepSpec);
  
  xdata = ParseXmlString(sdata);
  
  t1 = XmlGet(xdata,"HAL1/T1");
  t2 = XmlGet(xdata,"HAL1/T2");
  t3 = XmlGet(xdata,"HAL1/T3");
  
  ParseT1Data(t1,priacc,name,expdate,scode,exdata);
  if (priacc=="") then begin
    ParseT2Data(t1,priacc,expdate,scode,exdata);
  end;
  RepSpec.f2 = priacc;
  PutWindowRecord(wn,RepSpec);
end;

global
function Boolean TransConfWClassOnClose(Integer wn,Integer wn2)
begin
  record RcVc RepSpec;
  Integer nwn;

  RecordNew(RepSpec);
  nwn = FindWindow("PayDetailsWClass");
  if (nwn>0) then begin
    PutWindowRecord(nwn,RepSpec);
  end;
    
  TransConfWClassOnClose = false;
  return;
end;
