global
function Boolean TTRFieldTClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record TTRFieldBlock TTRFb;
  row TTRFieldBlock TTRFrw;
  
  res = true;
  switch (fieldname) begin
    case "Code":
      if (changed!=0) then begin
/*
doesnt work      
        if (rownr>=0) then begin          
          GetWindowRecord(wn,TTRFb);
          MatRowGet(TTRFb,rownr,TTRFrw);
          TTRFrw.RowType = SetFromString(311,TTRFrw.Code);
          MatRowPut(TTRFb,rownr,TTRFrw);
          PutWindowRecord(wn,TTRFb);
        end;
*/        
      end;
  end;
  TTRFieldTClassAfterEditField = res;
  RETURN;
END;

global 
function Boolean TTRFieldTClassInsertRowTest(Integer wn, Integer rownr)
BEGIN
  Boolean res;

  res = false;
  TTRFieldTClassInsertRowTest = res;
  RETURN;
END;

global 
function Boolean TTRFieldTClassDeleteRowTest(Integer wn, Integer rownr)
BEGIN
  Boolean res;
  record TTRFieldBlock TTRFb;
  row TTRFieldBlock TTRFrw;
  record TTRVc TTRr;
  string 50 keystr;
  Boolean found;

  res = true;
  if (rownr>=0) then begin
    GetWindowRecord(wn,TTRFb);
    MatRowGet(TTRFb,rownr,TTRFrw);
    keystr = "stp:" & TTRFrw.RowType;
    found = true;
    while (LoopKey(keystr,TTRr,1,found)) begin
      res = false;
      found = false;
    end;    
  end;
  TTRFieldTClassDeleteRowTest = res;
  RETURN;
END;

global
function Boolean TTRFieldTClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  record TTRFieldBlock TTRFb;
  row TTRFieldBlock TTRFrw;
  record TTRVc TTRr;
  string 50 keystr;
  Boolean found;
  
  res = true;
  if (rownr>=0) then begin
    GetWindowRecord(wn,TTRFb);
    MatRowGet(TTRFb,rownr,TTRFrw);
    keystr = "stp:" & TTRFrw.RowType;
    found = true;
    while (LoopKey(keystr,TTRr,1,found)) begin
      res = false;
      found = false;
    end;    
  end;
  TTRFieldTClassActiveEditField = res;
  RETURN;
END;
