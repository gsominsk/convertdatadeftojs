remote procedure DelAddrVc_PasteCustCode(var record DelAddrVc);
remote procedure DelAddrVc_PasteDelCountry(var record DelAddrVc);

global
function Boolean DelAddrDClassCustCodeEFAfter(Integer wn,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;
  record DelAddrVc DelAddrr;

  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,DelAddrr);
    DelAddrVc_PasteCustCode(DelAddrr);
    PutWindowRecord(wn,DelAddrr);    
  end;
  DelAddrDClassCustCodeEFAfter = res;
  return;
end;

global
function Boolean DelAddrDClassDelCountryEFAfter(Integer wn,Integer changed)
begin
  Boolean res;
  record DelAddrVc DelAddrr;
  
  res = true;
  if (changed!=0) then begin
    GetWindowRecord(wn,DelAddrr);
    DelAddrVc_PasteDelCountry(DelAddrr);
    PutWindowRecord(wn,DelAddrr);    
  end;
  DelAddrDClassDelCountryEFAfter = res;
  return;
end;

global
function Boolean DelAddrDClassAfterEditField(Integer wn,string fieldname,Integer fn, Integer rownr,Integer changed)
begin
  Boolean res;

  switch (fieldname) begin
    case "CustCode": res = DelAddrDClassCustCodeEFAfter(wn,fn,rownr,changed);
    case "DelCountry": res = DelAddrDClassDelCountryEFAfter(wn,changed);
  end;
  DelAddrDClassAfterEditField = res;
  return;
end;

global
function Boolean DelAddr3SClassOnOpenWindow(Integer wn)
begin
  Integer mwn;
  record ORVc ORr;
  record QTVc QTr;
  record IVVc IVr;
  record SHVc SHr;
  record RetPUVc RetPUr;
  record DropSHVc DropSHr;
  record CustRouteVc CustRouter;
  record CollectionVc Collectionr;
  record OffHireVc OffHirer;
  record DispatchVc Dispatchr;
  record AgreementVc Agreementr;
  record RentQTVc RentQTr;
  record SVOVc SVOr;
  
  mwn = MotherWindow(wn);
  switch (GetWindowClass(mwn)) begin
    case "ORDClass":
      GetWindowRecord(mwn,ORr);
      SetWindowSubset(wn,ORr.CustCode);
    case "SHDClass":
      GetWindowRecord(mwn,SHr);
      SetWindowSubset(wn,SHr.CustCode);
    case "RetPUDClass":
      GetWindowRecord(mwn,RetPUr);
      SetWindowSubset(wn,RetPUr.VECode);
    case "DropSHDClass":
      GetWindowRecord(mwn,DropSHr);
      SetWindowSubset(wn,DropSHr.CustCode);
    case "IVDClass":
      GetWindowRecord(mwn,IVr);
      SetWindowSubset(wn,IVr.CustCode);
    case "CustRouteDClass":
      GetWindowRecord(mwn,CustRouter);
      SetWindowSubset(wn,CustRouter.CustCode);
    case "QTDClass":
      GetWindowRecord(mwn,QTr);
      SetWindowSubset(wn,QTr.CustCode);
    case "CollectionDClass":
      GetWindowRecord(mwn,Collectionr);
      SetWindowSubset(wn,Collectionr.CustCode);
    case "OffHireDClass":
      GetWindowRecord(mwn,OffHirer);
      SetWindowSubset(wn,OffHirer.CustCode);
    case "DispatchDClass":
      GetWindowRecord(mwn,Dispatchr);
      SetWindowSubset(wn,Dispatchr.CustCode);
    case "AgreementDClass":
      GetWindowRecord(mwn,Agreementr);
      SetWindowSubset(wn,Agreementr.CustCode);
    case "RentQTDClass":
      GetWindowRecord(mwn,RentQTr);
      SetWindowSubset(wn,RentQTr.CustCode);
    case "SVODClass":
      GetWindowRecord(mwn,SVOr);
      SetWindowSubset(wn,SVOr.CustCode);
  end;
  DelAddr3SClassOnOpenWindow = false;
  return;
end;

global
function string 40 DelAddr3SClassPasteSpecialWindowClass(string defpsname)
begin
  Integer wn;
  string 40 psname;
  record ORVc ORr;
  record QTVc QTr;
  record IVVc IVr;
  record SHVc SHr;
  record RetPUVc RetPUr;
  record DropSHVc DropSHr;
  record CustRouteVc CustRouter;
  record CollectionVc Collectionr;
  record OffHireVc OffHirer;
  record DispatchVc Dispatchr;
  record AgreementVc Agreementr;
  record RentQTVc RentQTr;
  record SVOVc SVOr;
  string 255 custcode;
  
  wn = CurWindow;
  psname = defpsname;
  switch (GetWindowClass(wn)) begin
    case "ORDClass":
      GetWindowRecord(wn,ORr);
      custcode = ORr.CustCode;
    case "SHDClass":
      GetWindowRecord(wn,SHr);
      custcode = SHr.CustCode;
    case "RetPUDClass":
      GetWindowRecord(wn,RetPUr);
      custcode = RetPUr.VECode;
    case "DropSHDClass":
      GetWindowRecord(wn,DropSHr);
      custcode = DropSHr.CustCode;
    case "IVDClass":
      GetWindowRecord(wn,IVr);
      custcode = IVr.CustCode;
    case "CustRouteDClass":
      GetWindowRecord(wn,CustRouter);
      custcode = CustRouter.CustCode;
    case "QTDClass":
      GetWindowRecord(wn,QTr);
      custcode = QTr.CustCode;
    case "CollectionDClass":
      GetWindowRecord(wn,Collectionr);
      custcode = Collectionr.CustCode;
    case "OffHireDClass":
      GetWindowRecord(wn,OffHirer);
      custcode = OffHirer.CustCode;
    case "DispatchDClass":
      GetWindowRecord(wn,Dispatchr);
      custcode = Dispatchr.CustCode;
    case "AgreementDClass":
      GetWindowRecord(wn,Agreementr);
      custcode = Agreementr.CustCode;
    case "RentQTDClass":
      GetWindowRecord(wn,RentQTr);
      custcode = RentQTr.CustCode;
    case "SVODClass":
      GetWindowRecord(wn,SVOr);
      custcode = SVOr.CustCode;
  end;  
  if (blank(custcode)) then begin
    psname = "DelAddr2SClass";
  end;
  DelAddr3SClassPasteSpecialWindowClass = psname;
  return;
end;
