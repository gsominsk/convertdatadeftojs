remote updating function Integer CreateMailFromResAvD(record ResAvVc,var record MailVc,var string,string);
remote procedure FillResAvAvail(var record ResAvVc);

global
updating procedure CreateMailFromResAvDsm()
begin
  record ResAvVc RAr;
  string 255 warning,tstr,docname;
  record MailVc Mailr;
  Integer wn,err,nwn;

  wn = CurWindow;
  DeselectWindow(wn,false);
  if (WindowState(wn)==0) then begin//Rs_normal
    GetWindowRecord(wn,RAr);  
    err = CreateMailFromResAvD(RAr,Mailr,warning,WindowFormName(wn));
    if (err!=0) then begin
      MessageBox(err,": " & warning);
    end else begin
      nwn = OpenWindow("MailDClass",1,0,"","",Mailr);
    end;
  end;
  return;
end;

global
procedure ResAvCnt()
begin
  Integer wn;
  Record ResAvVc ResAvr; 

  wn = CurWindow;
  WindowDeactivatefield(wn);
  GetWindowRecord(wn,ResAvr);
  if ((ResAvr.OKFlag==0) and (nonblankdate(ResAvr.TransDate)) and (nonblankdate(ResAvr.EndDate))) then begin
    FillResAvAvail(ResAvr);
    PutWindowRecord(wn,ResAvr);
  end else begin
    Beep;
  end;
  return;
end;

global
updating procedure CreateRestBookDsm()
begin
  record RestBookingVc RestBookingr;
  record ResAvVc RAr;
  row ResAvVc RArw;
  record CUVc CUr;
  Integer wn,nwn;
  Integer rwcnt,i;

  wn = CurWindow;
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RAr);
  CUr.Code = RAr.CUCode;
  if (nonblank(RAr.SourceCode)) then begin
    CUr.Code = RAr.SourceCode;
  end;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    RecordNew(CUr);
  end;
  RecordNew(RestBookingr);
  RestBookingr.ResCode = "";
  RestBookingr.Phone = CUr.Phone;
  if (RAr.TransDate<CurrentDate) then begin
    RestBookingr.BookDate = CurrentDate;
  end else begin
    RestBookingr.BookDate = RAr.TransDate;
  end;
  RestBookingr.BookStart = RAr.StartTime;
  RestBookingr.BookEnd = AddHours(RestBookingr.BookStart,2);
  if (nonblanktime(RAr.EndTime)) then begin
    RestBookingr.BookEnd = RAr.EndTime;
  end;
  RestBookingr.CUCode = CUr.Code;
  RestBookingr.CUName = CUr.Name;
  RestBookingr.Contact = RAr.CustContact;
  RestBookingr.Persons = RAr.TotPersons;
  if (MatRowCnt(RAr)>0) then begin
    MatRowGet(RAr,0,RArw);
    if (nonblankdate(RArw.TransDate)) then begin
      RestBookingr.BookDate = RArw.TransDate;
    end;
    if (nonblanktime(RArw.StartTime)) then begin
      RestBookingr.BookStart = RArw.StartTime;
    end;
    if (nonblanktime(RArw.EndTime)) then begin
      RestBookingr.BookEnd = RArw.EndTime;
    end;
  end;
  nwn = OpenWindow("RestBookingDClass",1,0,"","",RestBookingr);
  WindowFieldGoto(nwn,RestBookingr,-1,"BookStart",true);
  return;
end;

global
updating procedure ResAvPriceDetailRowsm()
begin
  record ResAvVc ResAvr;
  record JobPriceVc JPr;
  Integer wn,nwn,rownr;
  Integer normalmode;

  normalmode = 0;
  wn = CurWindow;
  rownr = GetWindowCurRow(wn);
  if (rownr>=0) then begin
    if (WindowState(wn)==normalmode) then begin
      DeselectWindow(wn,false);
      GetWindowRecord(wn,ResAvr);
      JPr.RecType = 1;
      JPr.SerNr = ResAvr.SerNr;
      JPr.RowNr = rownr;
      if (ReadFirstMain(JPr,3,true)) then begin
        nwn = OpenWindow("JobPriceDClass",1,0,"","",JPr);
      end;
    end else begin
      MessageBox(1356,"");
    end;
  end else begin
    Beep; // Warning that line has to be active.
  end;
  return;
end;

