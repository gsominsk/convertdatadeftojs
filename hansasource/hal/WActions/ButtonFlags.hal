external function Boolean HasPersons();
remote function Integer MailAcceptanceStatus(LongInt);
remote procedure ShouldOpenItemStatusWindow(Integer);
remote outer function Integer HMTLApprovalStatus(record HMTravelLogVc,var record AcceptanceRulesVc);
remote function Integer ExpApprovalStatus(record ExpVc,var record AcceptanceRulesVc);
remote function Integer POApprovalStatus(record POVc,var record AcceptanceRulesVc);
remote function Integer VIApprovalStatus(record VIVc,var record AcceptanceRulesVc);
remote function Integer PUApprovalStatus(record PUVc,var record AcceptanceRulesVc);
remote function Integer OPApprovalStatus(record OPVc,var record AcceptanceRulesVc);
remote function Integer IntORApprovalStatus(record IntORVc,var record AcceptanceRulesVc);
remote function Integer QTApprovalStatus(record QTVc,var record AcceptanceRulesVc);
remote function Integer ORApprovalStatus(record ORVc,var record AcceptanceRulesVc);
remote function Integer IVApprovalStatus(record IVVc,var record AcceptanceRulesVc);
remote function Integer SDApprovalStatus(record SDVc,var record AcceptanceRulesVc);
remote function Integer TBBUApprovalStatus(record TBBUVc,var record AcceptanceRulesVc);
remote function Integer LAApprovalStatus(record LeaveApplicationVc,var record AcceptanceRulesVc);
remote function Integer LTApprovalStatus(record LeaveTransferVc,var record AcceptanceRulesVc);
external function Boolean IsEnterprise();
external function Boolean TestConfigurationEnabler(string);

global
procedure ConfDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  if (UserModuleAccess("modEmail")!=5) or (ProgramType==typBooksJobCost) or ((ProgramType==typBooks) and (ValuePack(2)))  then begin
  end else begin
    duplOK = false;
    newOK = false;
  end;
  return;
end;

global
procedure ConfPresDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ConfPresLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RepDefClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  restOK = true;
  saveOK = true;
  return;
end;

global
procedure RepDef2ClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  restOK = true;
  saveOK = true;
  return;
end;

global
procedure RepDef3ClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  restOK = true;
  saveOK = true;
  return;
end;

global
procedure Rs2WClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  newOK = true;
  return;
end;

global
procedure RestAccDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record RestAccVc RestAccr;
  
  if (wn>0) then begin
    if (WindowState(wn)==Rs_insert) then begin
      GetWindowRecord(wn,RestAccr);
      if (MatRowCnt(RestAccr)<=0) then begin
        newOK = false;
      end;
    end;
  end;
  if (UserCanAction("AllowRestAccRowsDelete",true)==false) then begin
    restOK = false;
  end;
  return;
end;

global
procedure RestAccOldDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record RestAccVc RestAccr;
  
  if (wn>0) then begin
    if (WindowState(wn)==Rs_insert) then begin
      GetWindowRecord(wn,RestAccr);
      if (MatRowCnt(RestAccr)<=0) then begin
        newOK = false;
      end;
    end;
  end;
  if (UserCanAction("AllowRestAccRowsDelete",true)==false) then begin
    restOK = false;
  end;
  return;
end;
 
global
procedure JobDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;

global
procedure GroupJobDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;

global
procedure HRMCODClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;
 
global
procedure SVODClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;

global
procedure AgreementDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;
 
global
procedure COCUServiceDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;
 
global
procedure DocPageSumVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure DocFldVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocTextVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocFrameVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocPictVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocMainVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure DocRowStyleVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocLineVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocCopiesVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure DocPCVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

    
global
procedure RepGenSectTextVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSectFieldVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSectTotalVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSectFormatVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSectDividerVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSectLineVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSectionVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSetVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure RepGenMatrixVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure RepGenInputVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure RepGenCheckBoxVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenRadioButtonVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenSelTextVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenLookupVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure RepGenVariableVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
    
global
procedure RepGenNewLineVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure RepGenConditionVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure RepGenCodeVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure RepGenPrintConditionVClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;


global
procedure PostScriptWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure ModalErrorClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;

global
procedure SaveFileWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure ErrorClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  restOK = true;
  return;
end;
 
global
procedure YesNoCancelWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure YesNoWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure AboutClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  return;
end;
 
global
procedure OpenFileWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  restOK = true;
  return;
end;
 
global
procedure IVDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  if (TouchScreenInterface) then begin
    if (UserCanAction("AllowIVTSRowsDelete",true)==false) then begin
      restOK = false;
    end;
  end;
  return;
end;
 
global
procedure EDIIVDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
 
global
procedure EDIIVLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
      
global
procedure EDIORDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
 
global
procedure EDIORLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
      
global
procedure ConferenceWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin  
  duplOK = false;
  newOK = true;
/*  
  if ((ProgramType!=typFirstOfficePro) and (ProgramType!=typBooksJobCost) and (UserModuleAccess("modEmail")==5)) then begin // FirstOffice Pro
    newOK = false;
  end;
*/
  
  switch (ProgramType) begin
    case typFirstOfficePro:
    case typBusinessOrganizer:
    case typBooksJobCost:
      if (ValuePack(6)==false) then begin
        newOK = false;
      end;
    case typBooks:
      if (ValuePack(6)==false) then begin
        newOK = false;
      end;
    case typPOSStandalone:
      ;
    case typFirstContact:
      if (TestConfigurationEnabler("EmailEnabler")==false) then begin
        newOK = false;
      end;
    otherwise
      if (UserModuleAccess("modEmail")==kAccessLevelNone) then begin
        newOK = false;
      end;
  end;  
  return;
end;

global
procedure DayWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = true;
  return;
end;

global
procedure WeekWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = true;
  return;
end;

global
procedure MonthWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = true;
  return;
end;

global
procedure HalfYearWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = true;
  return;
end;

/*
global
procedure OwnCheckSClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

*/
global
procedure Done1LClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure Done2LClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RejLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure Done1DClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure Done2DClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RejDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ReplItemsDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ReplItemsLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure NotepadDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
    
global
procedure SHLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure SHDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure DropSHLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure DropSHDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure NPTSIVCashLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  return;
end;

global
procedure HRMCOChangeDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure HRMCOChangeLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure FEVILClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure FEVIDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RetLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record RetGoodsBlock RGb;

  BlockLoad(RGb);
  if (RGb.RetGoodsNotLinkedToOR==0) then begin
    duplOK = false;
    newOK = false;
  end;
  return;
end;

global
procedure RetDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record RetGoodsBlock RGb;

  BlockLoad(RGb);
  if (RGb.RetGoodsNotLinkedToOR==0) then begin
    duplOK = false;
    newOK = false;
  end;
  return;
end;

global
procedure RetPUDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RetPULClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure TBIVDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure TBIVLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure COCQStatDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure COCQStatLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure WOLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure WODClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  saveOK = true;// Temporary fix for the RecordList
  return;
end;

global
procedure WSIVDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure WSIVLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure JobShopBaskDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ShopBaskLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ShopBaskDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
    
/*
global
procedure DayWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  newOK = true;
  return;
end;

*/
global
procedure ResMonWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = false;
  newOK = true;
  return;
end;

global
procedure ResDayWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = false;
  newOK = true;
  return;
end;

global
procedure ResHotelWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = false;
  newOK = true;
  return;
end;

global
procedure RTMonWClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = false;
  newOK = true;
  return;
end;

global
procedure LoginClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  return;
end;

global
procedure Login2ClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  saveOK = true;
  return;
end;
    
global
procedure GCSLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure GCSDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure GCRLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure GCRDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
    
global
procedure VEDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure VELClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure CollectionDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure CollectionLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure TrackQueueDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure TrackQueueLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure CashLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  return;
end;

global
procedure CashDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  return;
end;

global
procedure CashSimpleInDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  return;
end;

global
procedure CashSimpleOutDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  return;
end;

global
procedure ForkLiftQueLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ForkLiftQueDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure PersColListLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure PersColListDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure PersColDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin // Temporary fix for the RecordList
  saveOK = true;
  return;
end;
 
global
procedure EInvoiceQueDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure EInvoiceQueLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure EPaymentQueDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure EPaymentQueLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure HTSIVDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure HTSIVLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure BuySellRequestLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure BuySellRequestDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure BuyRequestDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure SellRequestDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure WHCertificateLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = UserCanAction("CreatingWithholdingCertificates",false);
  return;
end;

global
procedure WHCertificateDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = UserCanAction("CreatingWithholdingCertificates",false);
  return;
end;

global
procedure JobPriceDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
 
global
procedure JobPriceLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;
 
global
procedure BankTRDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure BankTRLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure ARInstallDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure MailLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
//  if (GUIType==kGuiiPhone or GUIType==kGuiMetro or GUIType==kGuiAndroid) then begin
    duplOK = true;
//  end else begin
//    duplOK = false;
//  end;
  return;
end;

global
procedure ProdOperationDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record ProdOperationVc ProdOpr;

  if (wn>0) then begin
    GetWindowRecord(wn,ProdOpr);
    if (ProdOpr.PRStatusFlag!=5) then begin
      duplOK = false;
      newOK = false;
    end;
  end;
  return;
end;

global
procedure ProdOperationLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record ProdOperationVc ProdOpr;

  if (ReadMarkedRecord(wn,ProdOpr)) then begin
    if (ProdOpr.PRStatusFlag!=5) then begin
      duplOK = false;
      newOK = false;
    end;
  end;
  return;
end;

global
procedure VEIVLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure VEIVDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure CUServiceHistLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  if (UserCanAction("HWContractAdmin",false)) then begin
    duplOK = true;
    newOK = true;
  end;
  return;
end;

global
procedure CUServiceHistDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  if (UserCanAction("HWContractAdmin",false)) then begin
    duplOK = true;
    newOK = true;
  end;
  return;
end;

global
procedure RegArchiveDetailLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RegArchiveDetailButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure BuyBackLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure BuyBackDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure AccessSClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure UserSClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  if (UserCanAction("AllowUsersAdding",false)==false) then begin
    duplOK = false;
    newOK = false;
  end else begin
    duplOK = true;
    newOK = true;
  end;
  return;
end;

global
procedure LSerialPortDeviceDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure LSerialPortDeviceLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure LocalPLDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure LocalPLLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure LocalINDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure LocalINLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure RestAccPriceLookupDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  saveOK = false;
  restOK = false;
  return;
end;

global
procedure NPTSIVCashDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = true;
  restOK = true;
  saveOK = true;
  if (UserCanAction("AllowNPTSIVLogout",true)==false) then begin
    restOK = false;
  end;
  return;
end;

global
procedure NPTSIVCashOpenLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure PointsHistLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure PointsHistDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ReportSetDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  saveOK = true;
  return;
end;

global
procedure ReportSetLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  return;
end;

global
procedure RcDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure RcLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ASProductStatusLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ASProductStatusDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ASProdStatHistLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ASProdStatHistDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ASSubmHistLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure ASSubmHistDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin 
  newOK = false;
  duplOK = false;
  return;
end;

global
procedure TimedMaintLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  newOK = false;
  return;
end;

global
procedure TimedMaintDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  newOK = false;
  return;
end;

global
procedure ProdDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record ProdVc Prodr;

  if (wn>0) then begin
    GetWindowRecord(wn,Prodr);
    if (Prodr.Disassemble!=0) then begin
      duplOK = false;
    end;
  end;
  return;
end;

global
procedure ProdLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  record ProdVc Prodr;

  if (ReadMarkedRecord(wn,Prodr)) then begin
    if (Prodr.Disassemble!=0) then begin
      duplOK = false;
    end;
  end;
  return;
end;

global
procedure SHPackagesDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure PlannedPaymentLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure PlannedPaymentDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;


function string 255 LClassAcceptanceStatus(Integer AcceptanceStatus)
begin
  string 255 res;
  
  
//more colourfull
  switch (AcceptanceStatus) begin
    case kAcceptanceStateNotRequired: res = " " & " ";
    case kAcceptanceStateNotStarted: res = " " & uchr(10067);
    case kAcceptanceStateNotRequested: res = " " & uchr(10071);
    case kAcceptanceStatePending: res = " " & uchr(8987);
    case kAcceptanceStateApproved: res = " " & uchr(10004);//9989
    case kAcceptanceStateRejected: res = " " & uchr(10060);
  end;
  
 
/* 
// less colourfull
  switch (AcceptanceStatus) begin
    case kAcceptanceStateNotRequired: res = " " & " ";
    case kAcceptanceStateNotStarted: res = " " & uchr(9021);
    case kAcceptanceStateNotRequested: res = " " & uchr(9655);//9099
    case kAcceptanceStatePending: res = " " & uchr(8734);
    case kAcceptanceStateApproved: res = " " & uchr(10003);
    case kAcceptanceStateRejected: res = " " & uchr(9747);
  end;
*/  
  LClassAcceptanceStatus = res;
  return;
end;

global
function string 255 ExpLClassAcceptanceStatus(var record ExpVc Expr)
begin
  record AcceptanceRulesVc Acptr;
  
  ExpLClassAcceptanceStatus = LClassAcceptanceStatus(ExpApprovalStatus(Expr,Acptr));
  return;
end;

global
function string 255 IntORLClassAcceptanceStatus(var record IntORVc IntORr)
begin
  record AcceptanceRulesVc Acptr;

  IntORLClassAcceptanceStatus = LClassAcceptanceStatus(IntORApprovalStatus(IntORr,Acptr));
  return;
end;

global
function string 255 IVLClassAcceptanceStatus(var record IVVc IVr)
begin
  record AcceptanceRulesVc Acptr;

  IVLClassAcceptanceStatus = LClassAcceptanceStatus(IVApprovalStatus(IVr,Acptr));
  return;
end;

global
function string 255 LeaveApplicationLClassAcceptanceStatus(var record LeaveApplicationVc LAr)
begin
  record AcceptanceRulesVc Acptr;

  LeaveApplicationLClassAcceptanceStatus = LClassAcceptanceStatus(LAApprovalStatus(LAr,Acptr));
  return;
end;

global
function string 255 LeaveTransferLClassAcceptanceStatus(var record LeaveTransferVc LTr)
begin
  record AcceptanceRulesVc Acptr;

  LeaveTransferLClassAcceptanceStatus = LClassAcceptanceStatus(LTApprovalStatus(LTr,Acptr));
  return;
end;

global
function string 255 OPLClassAcceptanceStatus(var record OPVc OPr)
begin
  record AcceptanceRulesVc Acptr;

  OPLClassAcceptanceStatus = LClassAcceptanceStatus(OPApprovalStatus(OPr,Acptr));
  return;
end;

global
function string 255 ORLClassAcceptanceStatus(var record ORVc ORr)
begin
  record AcceptanceRulesVc Acptr;

  ORLClassAcceptanceStatus = LClassAcceptanceStatus(ORApprovalStatus(ORr,Acptr));
  return;
end;


global
function string 255 POLClassAcceptanceStatus(var record POVc POr)
begin
  record AcceptanceRulesVc Acptr;

  POLClassAcceptanceStatus = LClassAcceptanceStatus(POApprovalStatus(POr,Acptr));
  return;
end;

global
function string 255 PULClassAcceptanceStatus(var record PUVc PUr)
begin
  record AcceptanceRulesVc Acptr;

  PULClassAcceptanceStatus = LClassAcceptanceStatus(PUApprovalStatus(PUr,Acptr));
  return;
end;

global
function string 255 QTLClassAcceptanceStatus(var record QTVc QTr)
begin
  record AcceptanceRulesVc Acptr;

  QTLClassAcceptanceStatus = LClassAcceptanceStatus(QTApprovalStatus(QTr,Acptr));
  return;
end;

global
function string 255 SDLClassAcceptanceStatus(var record SDVc SDr)
begin
  record AcceptanceRulesVc Acptr;

  SDLClassAcceptanceStatus = LClassAcceptanceStatus(SDApprovalStatus(SDr,Acptr));
  return;
end;

global
function string 255 StockTakeLClassAcceptanceStatus(var record StockTakeVc StockTaker)
begin
  record AcceptanceRulesVc Acptr;

  StockTakeLClassAcceptanceStatus = LClassAcceptanceStatus(StockTaker.AcceptanceStatus);
  return;
end;

global
function string 255 TBBULClassAcceptanceStatus(var record TBBUVc TBBUr)
begin
  record AcceptanceRulesVc Acptr;

  TBBULClassAcceptanceStatus = LClassAcceptanceStatus(TBBUApprovalStatus(TBBUr,Acptr));
  return;
end;

global
function string 255 VILClassAcceptanceStatus(var record VIVc VIr)
begin
  record AcceptanceRulesVc Acptr;

  VILClassAcceptanceStatus = LClassAcceptanceStatus(VIApprovalStatus(VIr,Acptr));
  return;
end;

global
function string 255 HMTLogLClassAcceptanceStatus(var record HMTravelLogVc HMTravelLogr)
begin
  record AcceptanceRulesVc Acptr;
  string 255 res;
  
  res = LClassAcceptanceStatus(HMTLApprovalStatus(HMTravelLogr,Acptr));
  
  HMTLogLClassAcceptanceStatus = res;
  return;
end;

global
procedure CCMerchantIDSClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  if (IsEnterprise==false) then begin 
    duplOK = false;
    newOK = false;
  end;
  return;
end;

global
procedure WebNGStatDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
procedure WebNGStatLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = false;
  newOK = false;
  return;
end;

global
function string 255 MailLClassAcceptanceStatus(record MailVc Mailr)
begin
  string 255 res;
  
  switch (MailAcceptanceStatus(Mailr.SerNr)) begin    
    case kMailStatusAccepted: res = " " & uchr(9989);
    case kMailStatusRejected: res = " " & uchr(10060);
    otherwise
      res = " " & uchr(10067);
  end;

  MailLClassAcceptanceStatus = res;
  return;
end;

global
procedure CUClassSClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  restOK = true;
  return;
end;

global
procedure DIClassSClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  restOK = true;
  return;
end;

global
procedure OpenItemStatus(Integer wn,Boolean spawnwindowf,string menuname)
begin
  if (MenuExists(wn,spawnwindowf,menuname)) then begin
    if (ClientMode) then begin
      asyncremote.ShouldOpenItemStatusWindow(wn);
    end else begin
      ShouldOpenItemStatusWindow(wn);
    end;
  end;
  return;
end;

global
procedure OpenItemStatusWindow(Integer mwn)
begin
  Integer wn;
  record RcVc RepSpec;
  
  if (FindWindow("ArtStatIClass")<=0) then begin
    wn = OpenWindow("ArtStatIClass",0,mwn+1,"","",RepSpec);
    SelectWindow(mwn+1);
  end;
  return;
end;

global
procedure UserLClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = UserRegisterAccessTest("UserVc",kAccessInsert);
  newOK = UserRegisterAccessTest("UserVc",kAccessInsert);
  if (IsStandardProduct and HasPersons==false) then begin
    duplOK = false;
    newOK = false;
  end;
  return;
end;

global
procedure USDClassButtonFlags(Integer wn,var Boolean duplOK,var Boolean newOK,var Boolean saveOK,var Boolean restOK)
begin
  duplOK = UserRegisterAccessTest("UserVc",kAccessInsert);
  newOK = UserRegisterAccessTest("UserVc",kAccessInsert);
  if (IsStandardProduct and HasPersons==false) then begin
    duplOK = false;
    newOK = false;
  end;
  return;
end;
