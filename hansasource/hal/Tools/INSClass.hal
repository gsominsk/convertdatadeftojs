external function Boolean IVCashDClasstouchscreenitemEFAfter(Integer,Integer,Boolean);
external function Boolean IVDClassiPhonePasteItem(Integer,Integer,Boolean);
remote function val ItemInStock(var record INVc,string);
remote function string 255 GetSelDI_IN2SClass(string,LongInt,var Array string,var Integer);

global
procedure FindMotherWindowLocation(Integer wn,var string location,var Date td)
BEGIN
  Integer mwn,actrow;
  record IVVc IVr;
  row IVVc IVrw;
  record ORVc ORr;
  row ORVc ORrw;
  record IntORVc IntORr;
  record StockMovVc StockMovr;
  record SDVc SDr;
  row SDVc SDrw;
  record QTVc QTr;
  record ORProgVc ORProgr;  
  record POQTVc POQTr;
  record POVc POr;
  record ProdVc Prodr;
  record PUVc PUr;
  record SHVc SHr;
  row SHVc SHrw;
  record WSVc WSr;

  mwn = MotherWindow(wn);
  if (mwn>0) then begin
    switch (GetWindowFileName(mwn)) begin
      case "WSVc":
        GetWindowRecord(mwn,WSr);
        location = WSr.Location;
        td = WSr.TransDate;
      case "SHVc":
        GetWindowRecord(mwn,SHr);
        actrow = WindowActiveRow(mwn);
        if (actrow>=0) then begin
          MatRowGet(SHr,actrow,SHrw);
          location = SHrw.Location;
        end;
        if (blank(location)) then begin
          location = SHr.Location;
        end;
        td = SHr.ShipDate;
      case "PUVc":
        GetWindowRecord(mwn,PUr);
        location = PUr.Location;
        td = PUr.TransDate;
      case "ProdVc":
        GetWindowRecord(mwn,Prodr);
        location = Prodr.Location;
        td = Prodr.ProdDate;
      case "POVc":
        GetWindowRecord(mwn,POr);
        location = POr.Location;
        td = POr.TransDate;
      case "POQTVc":
        GetWindowRecord(mwn,POQTr);
        location = POQTr.Location;
        td = POQTr.TransDate;
      case "QTVc":
        GetWindowRecord(mwn,QTr);
        location = QTr.Location;
        td = QTr.QTDate;
      case "ORProgVc":
        GetWindowRecord(mwn,ORProgr);
        location = ORProgr.Location;
        td = ORProgr.OrdDate;
      case "IntORVc":
        GetWindowRecord(mwn,IntORr);
        location = IntORr.Location;
        td = IntORr.TransDate;
      case "ORVc":
        GetWindowRecord(mwn,ORr);
        actrow = WindowActiveRow(mwn);
        if (actrow>=0) then begin
          MatRowGet(ORr,actrow,ORrw);
          location = ORrw.Location;
        end;
        if (blank(location)) then begin
          location = ORr.Location;
        end;
        td = ORr.OrdDate;
      case "IVVc":        
        GetWindowRecord(mwn,IVr);
        actrow = WindowActiveRow(mwn);
        if (actrow>=0) then begin
          MatRowGet(IVr,actrow,IVrw);
          location = IVrw.Location;
        end;
        if (blank(location)) then begin
          location = IVr.Location;
        end;
        td = IVr.TransDate;
      case "StockMovVc":
        GetWindowRecord(mwn,StockMovr);
        location = StockMovr.FrLocation;
        td = StockMovr.TransDate;
      case "SDVc": begin
        GetWindowRecord(mwn,SDr);
        actrow = WindowActiveRow(mwn);
        if (actrow>=0) then begin
          MatRowGet(SDr,actrow,SDrw);
          location = SDrw.Location;
        end;
        if (blank(location)) then begin
          location = SDr.Location;
        end;
        td = SDr.TransDate;
      end;
    end;
  end;
  RETURN;
END;
      
global
function string 255 INSClassInStock(var record INVc INr)
begin
  transaction string 255 gLocation;
  
  if (blank(gLocation)) then begin
    gLocation = ";;;";
  end;
  INSClassInStock = ItemInStock(INr,gLocation);
  return;
end;

global
function Boolean INSClassOnOpenWindow(Integer wn)
begin
  string 255 loc;
  date dt;
  
  FindMotherWindowLocation(wn,loc,dt);
  if (blank(loc)) then begin
    loc = ";;;";
  end;
  PutWindowString(wn,"gLocation",loc);
  UpdateBrowses("INVc");
  INSClassOnOpenWindow = false;
  return;
end;

global
function Boolean IN2SClassOnOpenWindow(Integer wn)
begin
  LongInt l;
  string 255 subset;
  Array string 255 adi;
  Integer i,acnt;
  
  INSClassOnOpenWindow(wn);
  l = SelectedListLine(wn);
  subset = GetSelDI_IN2SClass(GetWindowSubset(wn),l,adi,acnt);
  ClearStringList(wn);
//  IN2SClassOnOKWindowExecute(subset,adi,acnt);
  for (i=0;i<acnt;i=i+1) begin
    SetListString(wn,i,adi[i],false);  
  end;
  SetWindowSubset(wn,subset);
  i = SelectedListLine(wn);
  IN2SClassOnOpenWindow = true;
  return;
end;

global
function Boolean ForSaleIN2SClassOnOpenWindow(Integer wn)
begin
  LongInt l;
  string 255 subset;
  Array string 255 adi;
  Integer i,acnt;
  
  INSClassOnOpenWindow(wn);
  l = SelectedListLine(wn);
  subset = GetSelDI_IN2SClass(GetWindowSubset(wn),l,adi,acnt);
  ClearStringList(wn);
//  IN2SClassOnOKWindowExecute(subset,adi,acnt);
  for (i=0;i<acnt;i=i+1) begin
    SetListString(wn,i,adi[i],false);
  end;
  SetWindowSubset(wn,subset);
  i = SelectedListLine(wn);
  ForSaleIN2SClassOnOpenWindow = true;
  return;
end;

global
function Boolean IN3SClassOnOpenWindow(Integer wn)
begin
  IN3SClassOnOpenWindow = INSClassOnOpenWindow(wn);
end;

global
function Boolean INNTmntdSClassOnOpenWindow(Integer wn)
begin
  INNTmntdSClassOnOpenWindow = INSClassOnOpenWindow(wn);
  return;
end;

global
function Boolean IN4SClassOnOpenWindow(Integer wn)
begin
  IN4SClassOnOpenWindow = INSClassOnOpenWindow(wn);
  return;
end;

global
procedure OpeniPhoneINSClass()
begin
  Integer wn,nwn;
  
  wn = CurWindow;
  nwn = OpenPasteWindow(wn,"iPhoneINSClass","");
  return;
end;

global
function Boolean iPhoneINSClassListDblClick(Integer wn)
begin
  record IVCashVc IVCashr;
  record INVc INr;
  Integer mwn;
  Boolean res;
  
  //res = true;
  
  mwn = MotherWindow(wn);
  if (mwn>0) then begin
    switch (GetWindowFileName(mwn)) begin
      case "IVCashVc":
        if (ReadMarkedRecord(wn,INr)) then begin
          PutWindowString(mwn,"touchscreenitem",INr.Code);
          PutWindowString(mwn,"touchscreenitemqty",1.00);
          DeselectWindow(mwn,false);
          res = IVCashDClasstouchscreenitemEFAfter(mwn,wn,true);
        end;
      case "IVVc":
        if (ReadMarkedRecord(wn,INr)) then begin
          PutWindowString(mwn,"touchscreenitem",INr.Code);
          PutWindowString(mwn,"touchscreenitemqty",1.00);
          DeselectWindow(mwn,false);
          res = IVDClassiPhonePasteItem(mwn,wn,true);
        end;
    end;
  end;
  
  iPhoneINSClassListDblClick = res;
  return;
end;

global
procedure OpenIVCashSerTClass()
begin
  Integer wn,nwn;
  record IVCashSerBlock IVCashSb;
  
  wn = CurWindow;
  nwn = OpenWindow("IVCashSerTClass",0,0,"","",IVCashSb);
  return;
end;
