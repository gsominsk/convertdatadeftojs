external procedure addvarval(string,var record SMVc,string); 
external function val FCALCWITHVAR(string,var record SMVc,string);

global
function boolean CalculateTaxReport(record RcVc RepSpec,var record SMVc vararray)
begin
  boolean res;
  record TaxRepVc TaxRepr;
  Integer i,rwcnt,amrow,j;
  LongInt lastseqnr;
  row TaxRepVc TaxReprw;
  row SMVc vr;
  Date d1,d2,d3,d4;
  string 10 sd1,sd2,sd3,sd4;
  string 50 tempa;
  string 255 tstr;
  val t;
  transaction string 1 gDelimCharacter;

  res = false;
  
  TaxRepr.Code = RepSpec.f1;
  if (ReadFirstMain(TaxRepr,1,true)) then begin
    d1 = RepSpec.sStartDate;
    d2 = RepSpec.sEndDate;
    d3 = RepSpec.d1;
    d4 = RepSpec.d2;

    sd1 = d1; sd2 = d2; sd3 = d3; sd4 = d4;

    if (blank(TaxRepr.Delimiter)) then begin
      gDelimCharacter = ",";
    end else begin
      gDelimCharacter = TaxRepr.Delimiter;
    end;

    RecordNew(vararray); 
    addvarval("D1",vararray,sd1); 
    addvarval("D2",vararray,sd2); 
    addvarval("D3",vararray,sd3);
    addvarval("D4",vararray,sd4);
    addvarval("YEARD1",vararray,datetostring(d1,"YYYY")); 
    addvarval("YEARD2",vararray,datetostring(d2,"YYYY")); 
    addvarval("YEARD3",vararray,datetostring(d3,"YYYY")); 
    addvarval("YEARD4",vararray,datetostring(d4,"YYYY")); 
    //-----calculation
    amrow = MatrowCnt(TaxRepr);
    for (i=0;i<amrow;i=i+1) begin
      MatRowGet(TaxRepr,i,TaxReprw);
      tempa = FCALCWITHVAR(TaxReprw.Formula,vararray,TaxReprw.FCode);  
    end;
    res = true;
  end else begin
    MessageBox(12921,"");
  end;
  
  CalculateTaxReport = res;
  return;
end;

