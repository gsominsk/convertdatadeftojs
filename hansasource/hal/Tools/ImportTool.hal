
global
function Boolean SerNrTestCLInVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record CLInSerBlock CLInSerRec;
  row CLInSerBlock CLInSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestCLInVc;
  end;
  BlockLoad(CLInSerRec);
  rwcnt = MatRowCnt(CLInSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestCLInVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(CLInSerRec,i,CLInSerrw);
    if ((sernr<CLInSerrw.TSerStart) or (sernr>CLInSerrw.TSerEnd)) then begin
      goto LFORCLInVc;
    end;  
    if (nonblankdate(CLInSerrw.StartDate)) then begin
      if (tdp<CLInSerrw.StartDate) then begin goto LFORCLInVc; end;
    end;  
    if (nonblankdate(CLInSerrw.EndDate)) then begin
      if (tdp>CLInSerrw.EndDate) then begin goto LFORCLInVc; end;
    end;  
    if (CLInSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestCLInVc;
LFORCLInVc:;
  end;
LSerNrTestCLInVc:;
  SerNrTestCLInVc = res;
  RETURN;
END;

global
function Boolean SerNrTestCLOutVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record CLOutSerBlock CLOutSerRec;
  row CLOutSerBlock CLOutSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestCLOutVc;
  end;
  BlockLoad(CLOutSerRec);
  rwcnt = MatRowCnt(CLOutSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestCLOutVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(CLOutSerRec,i,CLOutSerrw);
    if ((sernr<CLOutSerrw.TSerStart) or (sernr>CLOutSerrw.TSerEnd)) then begin
      goto LFORCLOutVc;
    end;  
    if (nonblankdate(CLOutSerrw.StartDate)) then begin
      if (tdp<CLOutSerrw.StartDate) then begin goto LFORCLOutVc; end;
    end;  
    if (nonblankdate(CLOutSerrw.EndDate)) then begin
      if (tdp>CLOutSerrw.EndDate) then begin goto LFORCLOutVc; end;
    end;  
    if (CLOutSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestCLOutVc;
LFORCLOutVc:;
  end;
LSerNrTestCLOutVc:;
  SerNrTestCLOutVc = res;
  RETURN;
END;

global
function Boolean SerNrTestForexTRVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record ForexTRSerBlock ForexTRSerRec;
  row ForexTRSerBlock ForexTRSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestForexTRVc;
  end;
  BlockLoad(ForexTRSerRec);
  rwcnt = MatRowCnt(ForexTRSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestForexTRVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(ForexTRSerRec,i,ForexTRSerrw);
    if ((sernr<ForexTRSerrw.TSerStart) or (sernr>ForexTRSerrw.TSerEnd)) then begin
      goto LFORForexTRVc;
    end;  
    if (nonblankdate(ForexTRSerrw.StartDate)) then begin
      if (tdp<ForexTRSerrw.StartDate) then begin goto LFORForexTRVc; end;
    end;  
    if (nonblankdate(ForexTRSerrw.EndDate)) then begin
      if (tdp>ForexTRSerrw.EndDate) then begin goto LFORForexTRVc; end;
    end;  
    if (ForexTRSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestForexTRVc;
LFORForexTRVc:;
  end;
LSerNrTestForexTRVc:;
  SerNrTestForexTRVc = res;
  RETURN;
END;

global
function Boolean SerNrTestIVVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record IVSerBlock IVSerRec;
  row IVSerBlock IVSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestIVVc;
  end;
  BlockLoad(IVSerRec);
  rwcnt = MatRowCnt(IVSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestIVVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(IVSerRec,i,IVSerrw);
    if ((sernr<IVSerrw.TSerStart) or (sernr>IVSerrw.TSerEnd)) then begin
      goto LFORIVVc;
    end;  
    if (nonblankdate(IVSerrw.StartDate)) then begin
      if (tdp<IVSerrw.StartDate) then begin goto LFORIVVc; end;
    end;  
    if (nonblankdate(IVSerrw.EndDate)) then begin
      if (tdp>IVSerrw.EndDate) then begin goto LFORIVVc; end;
    end;  
    if (IVSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestIVVc;
LFORIVVc:;
  end;
LSerNrTestIVVc:;
  SerNrTestIVVc = res;
  RETURN;
END;

global
function Boolean SerNrTestProdOrderVc(LongInt sernr,Date tdp,var Boolean gentrans)
begin
  Boolean res;
  record ProdOrdSerBlock ProdOSerb;
  row ProdOrdSerBlock ProdOSerbrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestProdOrderVc;
  end;
  BlockLoad(ProdOSerb);
  rwcnt = MatRowCnt(ProdOSerb);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestProdOrderVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(ProdOSerb,i,ProdOSerbrw);
    if ((sernr<ProdOSerbrw.TSerStart) or (sernr>ProdOSerbrw.TSerEnd)) then begin
      goto LFORIVVc;
    end;  
    if (nonblankdate(ProdOSerbrw.StartDate)) then begin
      if (tdp<ProdOSerbrw.StartDate) then begin goto LFORIVVc; end;
    end;  
    if (nonblankdate(ProdOSerbrw.EndDate)) then begin
      if (tdp>ProdOSerbrw.EndDate) then begin goto LFORIVVc; end;
    end;  
    if (ProdOSerbrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestProdOrderVc;
LFORIVVc:;
  end;
LSerNrTestProdOrderVc:;
  SerNrTestProdOrderVc = res;
  return;
end;

global
function Boolean SerNrTestIntIVVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record IntIVSerBlock IntIVSerRec;
  row IntIVSerBlock IntIVSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestIntIVVc;
  end;
  BlockLoad(IntIVSerRec);
  rwcnt = MatRowCnt(IntIVSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestIntIVVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(IntIVSerRec,i,IntIVSerrw);
    if ((sernr<IntIVSerrw.TSerStart) or (sernr>IntIVSerrw.TSerEnd)) then begin
      goto LFORIntIVVc;
    end;  
    if (nonblankdate(IntIVSerrw.StartDate)) then begin
      if (tdp<IntIVSerrw.StartDate) then begin goto LFORIntIVVc; end;
    end;  
    if (nonblankdate(IntIVSerrw.EndDate)) then begin
      if (tdp>IntIVSerrw.EndDate) then begin goto LFORIntIVVc; end;
    end;  
    if (IntIVSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestIntIVVc;
LFORIntIVVc:;
  end;
LSerNrTestIntIVVc:;
  SerNrTestIntIVVc = res;
  RETURN;
END;

global
function Boolean SerNrTestIVCashVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record IVCashSerBlock IVCashSerRec;
  row IVCashSerBlock IVCashSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestIVCashVc;
  end;
  BlockLoad(IVCashSerRec);
  rwcnt = MatRowCnt(IVCashSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestIVCashVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(IVCashSerRec,i,IVCashSerrw);
    if ((sernr<IVCashSerrw.TSerStart) or (sernr>IVCashSerrw.TSerEnd)) then begin
      goto LFORIVCashVc;
    end;  
    if (nonblankdate(IVCashSerrw.StartDate)) then begin
      if (tdp<IVCashSerrw.StartDate) then begin goto LFORIVCashVc; end;
    end;  
    if (nonblankdate(IVCashSerrw.EndDate)) then begin
      if (tdp>IVCashSerrw.EndDate) then begin goto LFORIVCashVc; end;
    end;  
    if (IVCashSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestIVCashVc;
LFORIVCashVc:;
  end;
LSerNrTestIVCashVc:;
  SerNrTestIVCashVc = res;
  RETURN;
END;

global
function Boolean SerNrTestExpVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record ExpSerBlock ExpSerRec;
  row ExpSerBlock ExpSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestExpVc;
  end;
  BlockLoad(ExpSerRec);
  rwcnt = MatRowCnt(ExpSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestExpVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(ExpSerRec,i,ExpSerrw);
    if ((sernr<ExpSerrw.TSerStart) or (sernr>ExpSerrw.TSerEnd)) then begin
      goto LFORExpVc;
    end;  
    if (nonblankdate(ExpSerrw.StartDate)) then begin
      if (tdp<ExpSerrw.StartDate) then begin goto LFORExpVc; end;
    end;  
    if (nonblankdate(ExpSerrw.EndDate)) then begin
      if (tdp>ExpSerrw.EndDate) then begin goto LFORExpVc; end;
    end;  
    if (ExpSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestExpVc;
LFORExpVc:;
  end;
LSerNrTestExpVc:;
  SerNrTestExpVc = res;
  RETURN;
END;

global
function Boolean SerNrTestPPVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record PPersSerBlock PPSerRec;
  row PPersSerBlock PPSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestPPVc;
  end;
  BlockLoad(PPSerRec);
  rwcnt = MatRowCnt(PPSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestPPVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(PPSerRec,i,PPSerrw);
    if ((sernr<PPSerrw.TSerStart) or (sernr>PPSerrw.TSerEnd)) then begin
      goto LFORPPVc;
    end;  
    if (nonblankdate(PPSerrw.StartDate)) then begin
      if (tdp<PPSerrw.StartDate) then begin goto LFORPPVc; end;
    end;  
    if (nonblankdate(PPSerrw.EndDate)) then begin
      if (tdp>PPSerrw.EndDate) then begin goto LFORPPVc; end;
    end;  
    if (PPSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestPPVc;
LFORPPVc:;
  end;
LSerNrTestPPVc:;
  SerNrTestPPVc = res;
  RETURN;
END;

global
function Boolean SerNrTestVIVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record VISerBlock VISerRec;
  row VISerBlock VISerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestVIVc;
  end;
  BlockLoad(VISerRec);
  rwcnt = MatRowCnt(VISerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestVIVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(VISerRec,i,VISerrw);
    if ((sernr<VISerrw.TSerStart) or (sernr>VISerrw.TSerEnd)) then begin
      goto LFORVIVc;
    end;  
    if (nonblankdate(VISerrw.StartDate)) then begin
      if (tdp<VISerrw.StartDate) then begin goto LFORVIVc; end;
    end;  
    if (nonblankdate(VISerrw.EndDate)) then begin
      if (tdp>VISerrw.EndDate) then begin goto LFORVIVc; end;
    end;  
    if (VISerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestVIVc;
LFORVIVc:;
  end;
LSerNrTestVIVc:;
  SerNrTestVIVc = res;
  RETURN;
END;

global
function Boolean SerNrTestOPVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record OPSerBlock OPSerRec;
  row OPSerBlock OPSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestOPVc;
  end;
  BlockLoad(OPSerRec);
  rwcnt = MatRowCnt(OPSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestOPVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(OPSerRec,i,OPSerrw);
    if ((sernr<OPSerrw.TSerStart) or (sernr>OPSerrw.TSerEnd)) then begin
      goto LFOROPVc;
    end;  
    if (nonblankdate(OPSerrw.StartDate)) then begin
      if (tdp<OPSerrw.StartDate) then begin goto LFOROPVc; end;
    end;  
    if (nonblankdate(OPSerrw.EndDate)) then begin
      if (tdp>OPSerrw.EndDate) then begin goto LFOROPVc; end;
    end;  
    if (OPSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestOPVc;
LFOROPVc:;
  end;
LSerNrTestOPVc:;
  SerNrTestOPVc = res;
  RETURN;
END;

global
function Boolean SerNrTestIPVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record IPSerBlock IPSerRec;
  row IPSerBlock IPSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestIPVc;
  end;
  BlockLoad(IPSerRec);
  rwcnt = MatRowCnt(IPSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestIPVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(IPSerRec,i,IPSerrw);
    if ((sernr<IPSerrw.TSerStart) or (sernr>IPSerrw.TSerEnd)) then begin
      goto LFORIPVc;
    end;  
    if (nonblankdate(IPSerrw.StartDate)) then begin
      if (tdp<IPSerrw.StartDate) then begin goto LFORIPVc; end;
    end;  
    if (nonblankdate(IPSerrw.EndDate)) then begin
      if (tdp>IPSerrw.EndDate) then begin goto LFORIPVc; end;
    end;  
    if (IPSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestIPVc;
LFORIPVc:;
  end;
LSerNrTestIPVc:;
  SerNrTestIPVc = res;
  RETURN;
END;

global
function Boolean SerNrTestPUVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record PUSerBlock PUSerRec;
  row PUSerBlock PUSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestPUVc;
  end;
  BlockLoad(PUSerRec);
  rwcnt = MatRowCnt(PUSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestPUVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(PUSerRec,i,PUSerrw);
    if ((sernr<PUSerrw.TSerStart) or (sernr>PUSerrw.TSerEnd)) then begin
      goto LFORPUVc;
    end;  
    if (nonblankdate(PUSerrw.StartDate)) then begin
      if (tdp<PUSerrw.StartDate) then begin goto LFORPUVc; end;
    end;  
    if (nonblankdate(PUSerrw.EndDate)) then begin
      if (tdp>PUSerrw.EndDate) then begin goto LFORPUVc; end;
    end;  
    if (PUSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestPUVc;
LFORPUVc:;
  end;
LSerNrTestPUVc:;
  SerNrTestPUVc = res;
  RETURN;
END;

global
function Boolean SerNrTestPrelPUVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record PrelPUSerBlock PrelPUSerRec;
  row PrelPUSerBlock PrelPUSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestPrelPUVc;
  end;
  BlockLoad(PrelPUSerRec);
  rwcnt = MatRowCnt(PrelPUSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestPrelPUVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(PrelPUSerRec,i,PrelPUSerrw);
    if ((sernr<PrelPUSerrw.TSerStart) or (sernr>PrelPUSerrw.TSerEnd)) then begin
      goto LFORPrelPUVc;
    end;  
    if (nonblankdate(PrelPUSerrw.StartDate)) then begin
      if (tdp<PrelPUSerrw.StartDate) then begin goto LFORPrelPUVc; end;
    end;  
    if (nonblankdate(PrelPUSerrw.EndDate)) then begin
      if (tdp>PrelPUSerrw.EndDate) then begin goto LFORPrelPUVc; end;
    end;  
    if (PrelPUSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestPrelPUVc;
LFORPrelPUVc:;
  end;
LSerNrTestPrelPUVc:;
  SerNrTestPrelPUVc = res;
  RETURN;
END;

global
function Boolean SerNrTestSHVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record SHSerBlock SHSerRec;
  row SHSerBlock SHSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestSHVc;
  end;
  BlockLoad(SHSerRec);
  rwcnt = MatRowCnt(SHSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestSHVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(SHSerRec,i,SHSerrw);
    if ((sernr<SHSerrw.TSerStart) or (sernr>SHSerrw.TSerEnd)) then begin
      goto LFORSHVc;
    end;  
    if (nonblankdate(SHSerrw.StartDate)) then begin
      if (tdp<SHSerrw.StartDate) then begin goto LFORSHVc; end;
    end;  
    if (nonblankdate(SHSerrw.EndDate)) then begin
      if (tdp>SHSerrw.EndDate) then begin goto LFORSHVc; end;
    end;  
    if (SHSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestSHVc;
LFORSHVc:;
  end;
LSerNrTestSHVc:;
  SerNrTestSHVc = res;
  RETURN;
END;

global
function Boolean SerNrTestDropSHVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record DropSHSerBlock DropSHSerRec;
  row DropSHSerBlock DropSHSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestDropSHVc;
  end;
  BlockLoad(DropSHSerRec);
  rwcnt = MatRowCnt(DropSHSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestDropSHVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(DropSHSerRec,i,DropSHSerrw);
    if ((sernr<DropSHSerrw.TSerStart) or (sernr>DropSHSerrw.TSerEnd)) then begin
      goto LFORDropSHVc;
    end;  
    if (nonblankdate(DropSHSerrw.StartDate)) then begin
      if (tdp<DropSHSerrw.StartDate) then begin goto LFORDropSHVc; end;
    end;  
    if (nonblankdate(DropSHSerrw.EndDate)) then begin
      if (tdp>DropSHSerrw.EndDate) then begin goto LFORDropSHVc; end;
    end;  
    if (DropSHSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestDropSHVc;
LFORDropSHVc:;
  end;
LSerNrTestDropSHVc:;
  SerNrTestDropSHVc = res;
  RETURN;
END;

global
function Boolean SerNrTestWSVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record WSSerBlock WSSerRec;
  row WSSerBlock WSSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestWSVc;
  end;
  BlockLoad(WSSerRec);
  rwcnt = MatRowCnt(WSSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestWSVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(WSSerRec,i,WSSerrw);
    if ((sernr<WSSerrw.TSerStart) or (sernr>WSSerrw.TSerEnd)) then begin
      goto LFORWSVc;
    end;  
    if (nonblankdate(WSSerrw.StartDate)) then begin
      if (tdp<WSSerrw.StartDate) then begin goto LFORWSVc; end;
    end;  
    if (nonblankdate(WSSerrw.EndDate)) then begin
      if (tdp>WSSerrw.EndDate) then begin goto LFORWSVc; end;
    end;  
    if (WSSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestWSVc;
LFORWSVc:;
  end;
LSerNrTestWSVc:;
  SerNrTestWSVc = res;
  RETURN;
END;

global
function Boolean SerNrTestSDVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record SDSerBlock SDSerRec;
  row SDSerBlock SDSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestSDVc;
  end;
  BlockLoad(SDSerRec);
  rwcnt = MatRowCnt(SDSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestSDVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(SDSerRec,i,SDSerrw);
    if ((sernr<SDSerrw.TSerStart) or (sernr>SDSerrw.TSerEnd)) then begin
      goto LFORSDVc;
    end;  
    if (nonblankdate(SDSerrw.StartDate)) then begin
      if (tdp<SDSerrw.StartDate) then begin goto LFORSDVc; end;
    end;  
    if (nonblankdate(SDSerrw.EndDate)) then begin
      if (tdp>SDSerrw.EndDate) then begin goto LFORSDVc; end;
    end;  
    if (SDSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestSDVc;
LFORSDVc:;
  end;
LSerNrTestSDVc:;
  SerNrTestSDVc = res;
  RETURN;
END;

global
function Boolean SerNrTestDAVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record DASerBlock DASerRec;
  row DASerBlock DASerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestDAVc;
  end;
  BlockLoad(DASerRec);
  rwcnt = MatRowCnt(DASerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestDAVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(DASerRec,i,DASerrw);
    if ((sernr<DASerrw.TSerStart) or (sernr>DASerrw.TSerEnd)) then begin
      goto LFORDAVc;
    end;  
    if (nonblankdate(DASerrw.StartDate)) then begin
      if (tdp<DASerrw.StartDate) then begin goto LFORDAVc; end;
    end;  
    if (nonblankdate(DASerrw.EndDate)) then begin
      if (tdp>DASerrw.EndDate) then begin goto LFORDAVc; end;
    end;  
    if (DASerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestDAVc;
LFORDAVc:;
  end;
LSerNrTestDAVc:;
  SerNrTestDAVc = res;
  RETURN;
END;

global
function Boolean SerNrTestSRVc(LongInt sernr,Date tdp,var Boolean gentrans)
begin
  Boolean res;
  record SRSerBlock SRSerRec;
  row SRSerBlock SRSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestSRVc;
  end;
  BlockLoad(SRSerRec);
  rwcnt = MatRowCnt(SRSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestSRVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(SRSerRec,i,SRSerrw);
    if ((sernr<SRSerrw.TSerStart) or (sernr>SRSerrw.TSerEnd)) then begin
      goto LFORSRVc;
    end;  
    if (nonblankdate(SRSerrw.StartDate)) then begin
      if (tdp<SRSerrw.StartDate) then begin goto LFORSRVc; end;
    end;  
    if (nonblankdate(SRSerrw.EndDate)) then begin
      if (tdp>SRSerrw.EndDate) then begin goto LFORSRVc; end;
    end;  
    if (SRSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestSRVc;
LFORSRVc:;
  end;
LSerNrTestSRVc:;
  SerNrTestSRVc = res;
  return;
end;

global
function Boolean SerNrTestStockMovVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record StockMovSerBlock StockMovSerRec;
  row StockMovSerBlock StockMovSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestStockMovVc;
  end;
  BlockLoad(StockMovSerRec);
  rwcnt = MatRowCnt(StockMovSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestStockMovVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(StockMovSerRec,i,StockMovSerrw);
    if ((sernr<StockMovSerrw.TSerStart) or (sernr>StockMovSerrw.TSerEnd)) then begin
      goto LFORStockMovVc;
    end;  
    if (nonblankdate(StockMovSerrw.StartDate)) then begin
      if (tdp<StockMovSerrw.StartDate) then begin goto LFORStockMovVc; end;
    end;  
    if (nonblankdate(StockMovSerrw.EndDate)) then begin
      if (tdp>StockMovSerrw.EndDate) then begin goto LFORStockMovVc; end;
    end;  
    if (StockMovSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestStockMovVc;
LFORStockMovVc:;
  end;
LSerNrTestStockMovVc:;
  SerNrTestStockMovVc = res;
  RETURN;
END;

global
function Boolean SerNrTestProdVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record ProdSerBlock ProdSerRec;
  row ProdSerBlock ProdSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestProdVc;
  end;
  BlockLoad(ProdSerRec);
  rwcnt = MatRowCnt(ProdSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestProdVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(ProdSerRec,i,ProdSerrw);
    if ((sernr<ProdSerrw.TSerStart) or (sernr>ProdSerrw.TSerEnd)) then begin
      goto LFORProdVc;
    end;  
    if (nonblankdate(ProdSerrw.StartDate)) then begin
      if (tdp<ProdSerrw.StartDate) then begin goto LFORProdVc; end;
    end;  
    if (nonblankdate(ProdSerrw.EndDate)) then begin
      if (tdp>ProdSerrw.EndDate) then begin goto LFORProdVc; end;
    end;  
    if (ProdSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestProdVc;
LFORProdVc:;
  end;
LSerNrTestProdVc:;
  SerNrTestProdVc = res;
  RETURN;
END;

global
function Boolean SerNrTestRetVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record RetSerBlock RetSerRec;
  row RetSerBlock RetSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestRetVc;
  end;
  BlockLoad(RetSerRec);
  rwcnt = MatRowCnt(RetSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestRetVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(RetSerRec,i,RetSerrw);
    if ((sernr<RetSerrw.TSerStart) or (sernr>RetSerrw.TSerEnd)) then begin
      goto LFORRetVc;
    end;  
    if (nonblankdate(RetSerrw.StartDate)) then begin
      if (tdp<RetSerrw.StartDate) then begin goto LFORRetVc; end;
    end;  
    if (nonblankdate(RetSerrw.EndDate)) then begin
      if (tdp>RetSerrw.EndDate) then begin goto LFORRetVc; end;
    end;  
    if (RetSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestRetVc;
LFORRetVc:;
  end;
LSerNrTestRetVc:;
  SerNrTestRetVc = res;
  RETURN;
END;

global
function Boolean SerNrTestTSVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record TSSerBlock TSSerRec;
  row TSSerBlock TSSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestTSVc;
  end;
  BlockLoad(TSSerRec);
  rwcnt = MatRowCnt(TSSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestTSVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(TSSerRec,i,TSSerrw);
    if ((sernr<TSSerrw.TSerStart) or (sernr>TSSerrw.TSerEnd)) then begin
      goto LFORTSVc;
    end;  
    if (nonblankdate(TSSerrw.StartDate)) then begin
      if (tdp<TSSerrw.StartDate) then begin goto LFORTSVc; end;
    end;  
    if (nonblankdate(TSSerrw.EndDate)) then begin
      if (tdp>TSSerrw.EndDate) then begin goto LFORTSVc; end;
    end;  
    if (TSSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestTSVc;
LFORTSVc:;
  end;
LSerNrTestTSVc:;
  SerNrTestTSVc = res;
  RETURN;
END;

global
function Boolean SerNrTestTRVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record TRSerBlock TRSerRec;
  row TRSerBlock TRSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestTRVc;
  end;
  BlockLoad(TRSerRec);
  rwcnt = MatRowCnt(TRSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestTRVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(TRSerRec,i,TRSerrw);
    if ((sernr<TRSerrw.TSerStart) or (sernr>TRSerrw.TSerEnd)) then begin
      goto LFORTRVc;
    end;  
    if (nonblankdate(TRSerrw.StartDate)) then begin
      if (tdp<TRSerrw.StartDate) then begin goto LFORTRVc; end;
    end;  
    if (nonblankdate(TRSerrw.EndDate)) then begin
      if (tdp>TRSerrw.EndDate) then begin goto LFORTRVc; end;
    end;  
    if (TRSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestTRVc;
LFORTRVc:;
  end;
LSerNrTestTRVc:;
  SerNrTestTRVc = res;
  RETURN;
END;

global
function Boolean SerNrTestSMVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record SMSerBlock SMSerRec;
  row SMSerBlock SMSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestSMVc;
  end;
  BlockLoad(SMSerRec);
  rwcnt = MatRowCnt(SMSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestSMVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(SMSerRec,i,SMSerrw);
    if ((sernr<SMSerrw.TSerStart) or (sernr>SMSerrw.TSerEnd)) then begin
      goto LFORSMVc;
    end;  
    if (nonblankdate(SMSerrw.StartDate)) then begin
      if (tdp<SMSerrw.StartDate) then begin goto LFORSMVc; end;
    end;  
    if (nonblankdate(SMSerrw.EndDate)) then begin
      if (tdp>SMSerrw.EndDate) then begin goto LFORSMVc; end;
    end;  
    if (SMSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestSMVc;
LFORSMVc:;
  end;
LSerNrTestSMVc:;
  SerNrTestSMVc = res;
  RETURN;
END;

global
function Boolean SerNrTestCheckVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record CheckSerBlock CheckSerRec;
  row CheckSerBlock CheckSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestCheckVc;
  end;
  BlockLoad(CheckSerRec);
  rwcnt = MatRowCnt(CheckSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestCheckVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(CheckSerRec,i,CheckSerrw);
    if ((sernr<CheckSerrw.TSerStart) or (sernr>CheckSerrw.TSerEnd)) then begin
      goto LFORCheckVc;
    end;  
    if (nonblankdate(CheckSerrw.StartDate)) then begin
      if (tdp<CheckSerrw.StartDate) then begin goto LFORCheckVc; end;
    end;  
    if (nonblankdate(CheckSerrw.EndDate)) then begin
      if (tdp>CheckSerrw.EndDate) then begin goto LFORCheckVc; end;
    end;  
    if (CheckSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestCheckVc;
LFORCheckVc:;
  end;
LSerNrTestCheckVc:;
  SerNrTestCheckVc = res;
  RETURN;
END;

global
function Boolean SerNrTestOwnCheckVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record OwnCheckSerBlock OwnCheckSerRec;
  row OwnCheckSerBlock OwnCheckSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestOwnCheckVc;
  end;
  BlockLoad(OwnCheckSerRec);
  rwcnt = MatRowCnt(OwnCheckSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestOwnCheckVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(OwnCheckSerRec,i,OwnCheckSerrw);
    if ((sernr<OwnCheckSerrw.TSerStart) or (sernr>OwnCheckSerrw.TSerEnd)) then begin
      goto LFOROwnCheckVc;
    end;  
    if (nonblankdate(OwnCheckSerrw.StartDate)) then begin
      if (tdp<OwnCheckSerrw.StartDate) then begin goto LFOROwnCheckVc; end;
    end;  
    if (nonblankdate(OwnCheckSerrw.EndDate)) then begin
      if (tdp>OwnCheckSerrw.EndDate) then begin goto LFOROwnCheckVc; end;
    end;  
    if (OwnCheckSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestOwnCheckVc;
LFOROwnCheckVc:;
  end;
LSerNrTestOwnCheckVc:;
  SerNrTestOwnCheckVc = res;
  RETURN;
END;

global
function Boolean SerNrTestAT2WrofVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record AT2WrofSerBlock AT2WrofSerRec;
  row AT2WrofSerBlock AT2WrofSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestAT2WrofVc;
  end;
  BlockLoad(AT2WrofSerRec);
  rwcnt = MatRowCnt(AT2WrofSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestAT2WrofVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(AT2WrofSerRec,i,AT2WrofSerrw);
    if ((sernr<AT2WrofSerrw.TSerStart) or (sernr>AT2WrofSerrw.TSerEnd)) then begin
      goto LFORAT2WrofVc;
    end;  
    if (nonblankdate(AT2WrofSerrw.StartDate)) then begin
      if (tdp<AT2WrofSerrw.StartDate) then begin goto LFORAT2WrofVc; end;
    end;  
    if (nonblankdate(AT2WrofSerrw.EndDate)) then begin
      if (tdp>AT2WrofSerrw.EndDate) then begin goto LFORAT2WrofVc; end;
    end;  
    if (AT2WrofSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestAT2WrofVc;
LFORAT2WrofVc:;
  end;
LSerNrTestAT2WrofVc:;
  SerNrTestAT2WrofVc = res;
  RETURN;
END;

global
function Boolean SerNrTestAT2TakeVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record AT2TakeSerBlock AT2TakeSerRec;
  row AT2TakeSerBlock AT2TakeSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestAT2TakeVc;
  end;
  BlockLoad(AT2TakeSerRec);
  rwcnt = MatRowCnt(AT2TakeSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestAT2TakeVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(AT2TakeSerRec,i,AT2TakeSerrw);
    if ((sernr<AT2TakeSerrw.TSerStart) or (sernr>AT2TakeSerrw.TSerEnd)) then begin
      goto LFORAT2TakeVc;
    end;  
    if (nonblankdate(AT2TakeSerrw.StartDate)) then begin
      if (tdp<AT2TakeSerrw.StartDate) then begin goto LFORAT2TakeVc; end;
    end;  
    if (nonblankdate(AT2TakeSerrw.EndDate)) then begin
      if (tdp>AT2TakeSerrw.EndDate) then begin goto LFORAT2TakeVc; end;
    end;  
    if (AT2TakeSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestAT2TakeVc;
LFORAT2TakeVc:;
  end;
LSerNrTestAT2TakeVc:;
  SerNrTestAT2TakeVc = res;
  RETURN;
END;

global
function Boolean SerNrTestVATIVVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record VATIVSerBlock VATIVSerRec;
  row VATIVSerBlock VATIVSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestVATIVVc;
  end;
  BlockLoad(VATIVSerRec);
  rwcnt = MatRowCnt(VATIVSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestVATIVVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(VATIVSerRec,i,VATIVSerrw);
    if ((sernr<VATIVSerrw.TSerStart) or (sernr>VATIVSerrw.TSerEnd)) then begin
      goto LFORVATIVVc;
    end;  
    if (nonblankdate(VATIVSerrw.StartDate)) then begin
      if (tdp<VATIVSerrw.StartDate) then begin goto LFORVATIVVc; end;
    end;  
    if (nonblankdate(VATIVSerrw.EndDate)) then begin
      if (tdp>VATIVSerrw.EndDate) then begin goto LFORVATIVVc; end;
    end;  
    if (VATIVSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestVATIVVc;
LFORVATIVVc:;
  end;
LSerNrTestVATIVVc:;
  SerNrTestVATIVVc = res;
  RETURN;
END;

global
function Boolean SerNrTestVATVIVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record VATVISerBlock VATVISerRec;
  row VATVISerBlock VATVISerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestVATVIVc;
  end;
  BlockLoad(VATVISerRec);
  rwcnt = MatRowCnt(VATVISerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestVATVIVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(VATVISerRec,i,VATVISerrw);
    if ((sernr<VATVISerrw.TSerStart) or (sernr>VATVISerrw.TSerEnd)) then begin
      goto LFORVATVIVc;
    end;  
    if (nonblankdate(VATVISerrw.StartDate)) then begin
      if (tdp<VATVISerrw.StartDate) then begin goto LFORVATVIVc; end;
    end;  
    if (nonblankdate(VATVISerrw.EndDate)) then begin
      if (tdp>VATVISerrw.EndDate) then begin goto LFORVATVIVc; end;
    end;  
    if (VATVISerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestVATVIVc;
LFORVATVIVc:;
  end;
LSerNrTestVATVIVc:;
  SerNrTestVATVIVc = res;
  RETURN;
END;

global
function Boolean SerNrTestCOCUServiceVc(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record COCUServiceSerBlock COCUServiceSerRec;
  row COCUServiceSerBlock COCUServiceSerrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestCOCUServiceVc;
  end;
  BlockLoad(COCUServiceSerRec);
  rwcnt = MatRowCnt(COCUServiceSerRec);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestCOCUServiceVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(COCUServiceSerRec,i,COCUServiceSerrw);
    if ((sernr<COCUServiceSerrw.TSerStart) or (sernr>COCUServiceSerrw.TSerEnd)) then begin
      goto LFORCOCUServiceVc;
    end;  
    if (nonblankdate(COCUServiceSerrw.StartDate)) then begin
      if (tdp<COCUServiceSerrw.StartDate) then begin goto LFORCOCUServiceVc; end;
    end;  
    if (nonblankdate(COCUServiceSerrw.EndDate)) then begin
      if (tdp>COCUServiceSerrw.EndDate) then begin goto LFORCOCUServiceVc; end;
    end;  
    if (COCUServiceSerrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestCOCUServiceVc;
LFORCOCUServiceVc:;
  end;
LSerNrTestCOCUServiceVc:;
  SerNrTestCOCUServiceVc = res;
  RETURN;
END;

global
function Boolean SerNrTestLeaveApplicationVc(LongInt sernr,Date tdp,var Boolean gentrans)
begin
  Boolean res;
  record LeaveApplSerBlock LASb;
  row LeaveApplSerBlock LASbrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestLeaveApplicationVc;
  end;
  BlockLoad(LASb);
  rwcnt = MatRowCnt(LASb);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestLeaveApplicationVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(LASb,i,LASbrw);
    if ((sernr<LASbrw.TSerStart) or (sernr>LASbrw.TSerEnd)) then begin
      goto LFORLAVc;
    end;  
    if (nonblankdate(LASbrw.StartDate)) then begin
      if (tdp<LASbrw.StartDate) then begin goto LFORLAVc; end;
    end;  
    if (nonblankdate(LASbrw.EndDate)) then begin
      if (tdp>LASbrw.EndDate) then begin goto LFORLAVc; end;
    end;  
    if (LASbrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestLeaveApplicationVc;
LFORLAVc:;
  end;
LSerNrTestLeaveApplicationVc:;
  SerNrTestLeaveApplicationVc = res;
  return;
end;

global
function Boolean SerNrTestLeaveTransferVc(LongInt sernr,Date tdp,var Boolean gentrans)
begin
  Boolean res;
  record LeaveTrsfSerBlock LTSb;
  row LeaveTrsfSerBlock LTSbrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestLeaveTransferVc;
  end;
  BlockLoad(LTSb);
  rwcnt = MatRowCnt(LTSb);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestLeaveTransferVc;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(LTSb,i,LTSbrw);
    if ((sernr<LTSbrw.TSerStart) or (sernr>LTSbrw.TSerEnd)) then begin
      goto LFORLTVc;
    end;  
    if (nonblankdate(LTSbrw.StartDate)) then begin
      if (tdp<LTSbrw.StartDate) then begin goto LFORLTVc; end;
    end;  
    if (nonblankdate(LTSbrw.EndDate)) then begin
      if (tdp>LTSbrw.EndDate) then begin goto LFORLTVc; end;
    end;  
    if (LTSbrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestLeaveTransferVc;
LFORLTVc:;
  end;
LSerNrTestLeaveTransferVc:;
  SerNrTestLeaveTransferVc = res;
  return;
end;

global
function Boolean TestOldSim(LongInt sernr,Date tdp)
BEGIN
  Boolean res;
  Boolean gentrans;
  
//  if (oldSim==false) then goto L99;
  if (SerNrTestTRVc(sernr,tdp,gentrans)) then begin goto LTestOldSim; end;
  if (SerNrTestSMVc(sernr,tdp,gentrans)) then begin
    if (gentrans) then begin res = true; end;
  end;
LTestOldSim:;
  TestOldSim = res;
  RETURN;
END;

global
function Boolean SerNrTestStockMovInv(LongInt sernr,Date tdp,var Boolean gentrans)
BEGIN
  Boolean res;
  record StockMovInvSerBlock SMInvb;
  row StockMovInvSerBlock SMInvrw;
  Integer i,rwcnt;

  gentrans = true;
  if (sernr==-1) then begin
    res = false;
    goto LSerNrTestStockMovInv;
  end;
  BlockLoad(SMInvb);
  rwcnt = MatRowCnt(SMInvb);
  if (rwcnt==0) then begin
    res = true;
    goto LSerNrTestStockMovInv;
  end;
  for (i=0; i<rwcnt ;i=i+1) begin
    MatRowGet(SMInvb,i,SMInvrw);
    if ((sernr<SMInvrw.TSerStart) or (sernr>SMInvrw.TSerEnd)) then begin
      goto LSerNrTestStockMov1Inv;
    end;  
    if (nonblankdate(SMInvrw.StartDate)) then begin
      if (tdp<SMInvrw.StartDate) then begin goto LSerNrTestStockMov1Inv; end;
    end;  
    if (nonblankdate(SMInvrw.EndDate)) then begin
      if (tdp>SMInvrw.EndDate) then begin goto LSerNrTestStockMov1Inv; end;
    end;  
    if (SMInvrw.DonotGenTrans==1) then begin gentrans = false; end;
    res = true;
    goto LSerNrTestStockMovInv;
LSerNrTestStockMov1Inv:;
  end;
LSerNrTestStockMovInv:;
  SerNrTestStockMovInv = res;
  RETURN;
END;

