external function Boolean GetFullCurncyPurchaseRate (var string,Date,var val,var val,var val,var val,var val);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);

global
procedure NPTSPaymentTClassSumup(Date td,Array string acrncy,Array Integer apaymenttype,Array string apaymentmode,Array val apaymentv,Integer acrncnt,
                                 var val received,var val receivedcash)
begin
  Integer i;
  string 255 tstr;
  val fr,to1,to2,br1,br2;
  val v;
  
  received = blankval;
  receivedcash = blankval;
  for (i=0;i<acrncnt;i=i+1) begin
    if (apaymentv[i]!=0) then begin
      tstr = acrncy[i];
      GetFullCurncyPurchaseRate(tstr,td,fr,to1,to2,br1,br2);
//      GetFullCurncyRate(tstr,td,fr,to1,to2,br1,br2);
      v = MulRateToBase1(tstr,apaymentv[i],fr,to1,to2,br1,br2,DefaultCurRoundOff);
      received = received + v;
      if (apaymenttype[i]==kInvoiceRowTypeCashPayment) then begin
        receivedcash = receivedcash + v;
      end;
    end;
  end;  
  return;
end;
