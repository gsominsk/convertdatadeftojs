external function val FCALC(string);
external function Integer CountObjects(string);
external procedure ExtractElemFromSet(string,integer,var string);

function boolean CompareStrWithWC(string wcstr,string sstr)
begin
  boolean res,found;
  string 1 CWC,cs,ncs;
  integer i,j,ln1,ln2,curpos,k;
  string 255 nstr,tstr;
    
  CWC = "^";  
  ln1 = len(wcstr);
  ln2 = len(sstr);
  curpos = 0;
  res = true;
  i = 0;
  While (i<ln1) begin
    cs = mid(wcstr,i,1);
    if (cs<>CWC)  then begin
      j = i;
      ncs = "";tstr = "";
      While (j<ln1) and (ncs<>CWC) begin
        ncs = mid(wcstr,j,1);
        if (ncs<>CWC) then begin
          tstr = tstr & ncs;
        end;
        j = j + 1;
      end;
      if (nonblank(tstr)) then begin
        found = false;
        if (i==0) then begin
          if (mid(sstr,0,len(tstr)) == tstr) then begin
            curpos = len(tstr);
            found = true;
            i = len(tstr);
          end;  
        end else begin  
          for (k=curpos;k<=(ln2 - len(tstr));k=k+1) begin
            if (mid(sstr,k,len(tstr)) == tstr) then begin
              curpos = k + len(tstr);
              found = true;
              k = ln2;
              i = i + len(tstr);
            end;
          end;
        end;  
        if (not(found)) then begin
          res = false;
          goto LCompareStrWithWC;
        end;
      end else begin
        goto LCompareStrWithWC;
      end;
    end else begin
      i = i +1;
    end;
  end;
LCompareStrWithWC:;  
   if (curpos<ln2) and (cs<>CWC) then begin
     res = false;
   end;
  CompareStrWithWC = res; 
  return;
end;

function integer fintsetinset(string str,string inset,boolean isWC)
begin
  integer  res;  
  integer i,ar,clam,j;
  string 255 cl;

  res = 0;
  if (isWC) then begin
    clam = CountObjects(inset); 
    for (j=1;j<=clam;j=j+1) begin
      ExtractElemFromSet(inset,j,cl);
      if (CompareStrWithWC(str,cl)) then begin
        j = clam;
        res = 1;
      end;
    end;  
  end else begin
    if (setinset(str,inset)) then begin
      res = 1;
    end;  
  end;  
  fintsetinset = res; 
  return;
end;

global
function boolean SetInSet2(string inset1,string set2)
begin
  integer i,ln,j;
  string 255 cstr,rstr,set1;
  string 1 cs,cs1;
  val vv,rcalc;
  boolean testf,csp,res,isWC;
  string 1 COR,CAND,CNOT,CWC;

  res = true;
  if (blank(inset1)) then begin goto LSetInSet2; end;
  COR="+"; CAND=","; CNOT="!"; //could be changed

  CWC = "^";
  ln = len(inset1);
  set1 = "";
  isWC = false;
  for (i=0;i<ln;i=i+1) begin
    cs = mid(inset1,i,1); 
    if (cs=="*") then begin 
      cs = CWC; 
      isWC = true;
    end; 
    set1 = set1 & cs;
  end;
  
  ln = len(set1);
  i = 0; cstr = "";
  while (i<ln) begin
    cs = mid(set1,i,1); csp = false;
    if (cs=="*") then begin cs = CWC;csp = true; end;    
    if (cs=="(") then begin cstr = cstr & "("; i = i + 1; csp = true; end;     
    if (cs==")") then begin cstr = cstr & ")"; i = i + 1; csp = true; end;    
    if (cs==CAND) then begin cstr = cstr & "*"; i = i + 1; csp = true; end;    
    if (cs==COR) then begin cstr = cstr & "+"; i = i + 1; csp = true; end;     
    if (cs==CNOT) then begin
      j=i+1;
      if (mid(set1,j,1)=="(") then begin
        cstr = cstr & "NOT"; i = i + 1;
      end else begin  
        testf = true; rstr = "";
        while (j<ln) and (testf) begin
          cs1 = mid(set1,j,1);
          if (cs1=="(" OR cs1==")" OR cs1==CAND OR cs1==COR) then begin
            testf = false;
          end else begin
            rstr = rstr & cs1; j = j + 1;   
          end;           
        end;
        vv = fintsetinset(rstr,set2,isWC);
        if (vv==0) then begin 
          vv = 1;
        end else begin
          vv = 0;
        end;     
        cstr = cstr & vv;
        i=j;
      end;
      csp = true; 
    end;  
    if (csp==false) then begin
      j = i; testf = true; rstr = "";
      while ((j<ln) and (testf)) begin
        cs1 = mid(set1,j,1);
        if (cs1=="(" OR cs1==")" OR cs1==CAND OR cs1==COR) then begin
          testf = false;
        end else begin
          rstr = rstr & cs1; j = j + 1;
        end;
      end;
      vv = fintsetinset(rstr,set2,isWC);
      cstr = cstr & vv;
      i=j;
    end;      
  end;
  rcalc = Fcalc(cstr);  
  if (rcalc>0) then begin
    res = true; 
  end else begin
    res = false;  
  end;
LSetInSet2:;  
  setinset2 = res; 
  return;
end;