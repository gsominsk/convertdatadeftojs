external function Boolean FindCustomerRelation(string,string,var record CUVc);
external procedure FindUserMailboxName(string,var string,var string);

global
procedure PRScheduleVc_PastePRCode(var record PRScheduleVc PRScheduler)
begin
  record PRVc PRr;
  record CUVc CUr;
  
  PRr.Code = PRScheduler.PRCode;
  if (ReadFirstMain(PRr,1,true)) then begin
    PRScheduler.PRName = PRr.Name;
    PRScheduler.CustCode = PRr.CustCode;
    PRScheduler.CustName = PRr.CustName;
    PRScheduler.CustContact = PRr.Contact;
    PRScheduler.Members = PRr.Members;
    CUr.Code = PRScheduler.CustCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      PRScheduler.InvAddr0 = CUr.InvAddr0;
      PRScheduler.InvAddr1 = CUr.InvAddr1;
      PRScheduler.InvAddr2 = CUr.InvAddr2;
      PRScheduler.InvAddr3 = CUr.InvAddr3;
      PRScheduler.InvAddr4 = CUr.InvAddr4;
    end else begin
      PRScheduler.InvAddr0 = "";
      PRScheduler.InvAddr1 = "";
      PRScheduler.InvAddr2 = "";
      PRScheduler.InvAddr3 = "";
      PRScheduler.InvAddr4 = "";
    end;
  end else begin
    PRScheduler.PRName = "";
    PRScheduler.CustCode = "";
    PRScheduler.CustName = "";
    PRScheduler.CustContact = "";
    PRScheduler.Members = "";
  end;
  return;
end;

global
updating function Integer CreateMailFromPRScheduleD(record PRScheduleVc PRScheduler,var record MailVc Mailr,var string warning,string pdfform)
begin
  Integer res;
  record LTxtVc LTxtr;
  record CUVc CUr;
  record CUVc ContactCUr;  
  row MailVc MArw;
  Integer i,rwcnt;
  string 255 mailboxnr,tstr;
  string 1 TAB;
  Integer line;
  string 255 docname,fname;
  
  res = 0;
  if (ReadFirstMain(PRScheduler,0,true)) then begin end;  
  TAB = chr(9);
  FindUserMailboxName(CurrentUser,mailboxnr,tstr);
  if (blank(tstr)) then begin
    res = 22010;
    warning = CurrentUser;
    goto LCreateMailFromPRScheduleD;
  end;  
  MArw.RowTyp = 1;
  MArw.AddrCode = tstr;
  MatRowPut(Mailr,0,MArw);
  CUr.Code = PRScheduler.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin end;
  MArw.RowTyp = 0;
  MArw.AddrCode = CUr.eMail;
  if (nonblank(PRScheduler.CustContact)) then begin
    if (FindCustomerRelation(CUr.Code,PRScheduler.CustContact,ContactCUr)) then begin
      if (nonblank(ContactCUr.eMail)) then begin
        MArw.AddrCode = ContactCUr.eMail;
      end;
    end;
  end;
  if (blank(MArw.AddrCode)) then begin
    res = 2289;
    warning = CUr.Code;
    goto LCreateMailFromPRScheduleD;
  end;
  MatRowPut(Mailr,1,MArw);
  Mailr.Header = USetStr(21130) & PRScheduler.PRCode;
LPRScheduleHIDDENLine:;    
  Mailr.TransDate = CurrentDate;
  Mailr.SerNr = NextSerNr("MailVc",Mailr.TransDate,-1,false,"");
  if (RecordStore(Mailr,false)) then begin
    CreateRecordLink(Mailr,CurrentCompany,PRScheduler,CurrentCompany);  
    CreateRecordLink(PRScheduler,CurrentCompany,Mailr,CurrentCompany);  
  end;

  docname = pdfform;
  if (blank(docname)) then begin
    docname = "PRScheduleForm";
  end;
  fname = "tmp/" & USetStr(21130) & PRScheduler.PRCode & ".pdf";
  SetDocumentFilename(fname);
  SetMedia(mtPdf);
  PrintDocument(PRScheduler,docname,false);
  if (FileExists(fname)) then begin
    RecordLinkFile(fname,0,Mailr,CurrentCompany);
  end;
  SetDocumentFilename("");
  Delete_File(fname);

LCreateMailFromPRScheduleD:;  
  CreateMailFromPRScheduleD = res;
  return;
end;