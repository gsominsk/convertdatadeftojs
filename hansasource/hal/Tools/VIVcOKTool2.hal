external updating function Boolean VendStats(record VIVc,Boolean);
external updating function Boolean UpdatePOFromVI(record VIVc,record VIVc,Boolean,Boolean,Boolean);
external updating procedure OPPUpdateVI(record VIVc,Boolean);
external updating function Boolean APAdd2(LongInt,string,Date,val,val,val,string,string,LongInt,val,val,val,val,val,Boolean,Boolean,Boolean,string,Integer,Boolean);
external updating procedure APAdd1(record VIVc,Boolean,Boolean);

updating procedure ReCreateVIPrePayment(record VIVc VIp,Boolean unokf)
BEGIN
  record OPPVc OPPr;
  record OPPVc oldOPPr;
  record APPayHistVc APPayHistr;
  row VIVc VIrw;
  Integer i,rwcnt;

  rwcnt = MatRowCnt(VIp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VIp,i,VIrw);
    if (VIrw.stp==6) then begin
      APPayHistr.VEPNr = VIrw.PrepayNr;
      APPayHistr.SerNr = VIp.SerNr;
      APPayHistr.FileName = "VIVc";
      if (ReadFirstMain(APPayHistr,3,true)) then begin
        RecordDelete(APPayHistr);       
        OPPr.SerNr = APPayHistr.VEPNr;
        OPPr.VECode = VIp.VECode;
        if (ReadFirstMain(OPPr,2,true)) then begin
          RecordCopy(oldOPPr,OPPr);
          OPPr.OrderNr = APPayHistr.OrderNr;
          if (RecordUpdate(oldOPPr,OPPr,true)==0) then begin end;
        end;
      end;
    end;
  end;
  RETURN;
END;

global
updating procedure DeleteVIUpdatePR(record VIVc VIp)
BEGIN
  record TBIVVc TBIVr;
  row VIVc VIrw;
  Integer i,rwcnt;

  if (VIp.OKFlag==0) then begin goto LInvalidVIUpdatePR; end;
  rwcnt = MatRowCnt(VIp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VIp,i,VIrw);
    if (nonblank(VIrw.PRCode)) then begin
      TBIVr.PRCode = VIrw.PRCode;
      TBIVr.oVc = 2;
      TBIVr.SerNr = VIp.SerNr;
      TBIVr.Row = i;
      TBIVr.ArtCode = VIrw.Item;
      TBIVr.EMCode = "";
      if (ReadFirstMain(TBIVr,6,true)) then begin
//        if (TBIVr.Invoice!=-1) then begin
          RecordDelete(TBIVr);
//        end;
      end;
    end;
  end;
LInvalidVIUpdatePR:;
  RETURN;
END;

global
updating procedure InvalidateVI(record VIVc VIp,record VIVc VI2p,Boolean unokf)
BEGIN
  record VIVc lVIr;
  val t;

  switch (VIp.InvType) begin
    case kInvoiceTypeCashInvoiceReceiptPRT: ; /* not on cash invoices */
    case kInvoiceTypeCash: ; /* not on cash invoices */
    case kInvoiceTypeEmployee: ; /* not on cash invoices */
    case kInvoiceTypeCreditSpecialSales: goto LkInvoiceTypeCredit;
    case kInvoiceTypeCredit:
      LkInvoiceTypeCredit:;
      if (VIp.CredInv!=-1) then begin
        lVIr.SerNr = VIp.CredInv;
        if (ReadFirstMain(lVIr,1,true)==false) then begin goto L77InvalidateVI; end;
        t = -(VIp.PayVal-VIp.WithHoldingTax);
        if (APAdd2(VIp.CredInv,VIp.VECode,VIp.TransDate,t,blankval,blankval,VIp.CurncyCode,"",-1,VIp.FrRate,VIp.ToRateB2,VIp.ToRateB2,VIp.BaseRate1,VIp.BaseRate2,true,false,false,VIp.PayDeal,-1,false)==false) then begin
          APAdd1(VIp,false,false);
        end;
      end else begin
        t = VIp.PayVal;
        VIp.PayVal = -VIp.PayVal;
        APAdd1(VIp,false,false);
        VIp.PayVal = t;
      end;
    otherwise
      t = VIp.PayVal;
//      if (unokf==false) then begin//unoking normal invoiceaint working
        VIp.PayVal = -VIp.PayVal;
//      end;
      APAdd1(VIp,false,unokf);
      OPPUpdateVI(VIp,VIp.Invalid!=0 or unokf);
      ReCreateVIPrePayment(VIp,unokf);
      VIp.PayVal = t;
  end;
L77InvalidateVI:;
  DeleteVIUpdatePR(VIp);
  if (VIp.POSerNr!=-1) then begin
    if (UpdatePOFromVI(VIp,VI2p,true,true,true)) then begin end;
  end else begin
  end;
  if (VendStats(VIp,true)) then begin end;
  RETURN;
END;
