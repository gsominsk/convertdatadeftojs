external function Boolean FindCustomerRelation(string,string,var record CUVc);

global
updating procedure StoreActFromLetVc(record LetVc Letp,var record ActVc Actp)
BEGIN
  record CUVc CUr;
  record ASTBlock ASTRec;
  Integer curcomp;
  record ContactRelVc ContactRelr;
  Boolean crf;

  BlockLoad(ASTRec);
  Actp.SerNr = -1;
  Actp.Invalid = 0;
  Actp.TodoFlag = 1;
  Actp.CUCode = Letp.CustCode;
  CUr.Code = Letp.CustCode;
  Actp.Comment = Letp.Header;
  Actp.Contact = Letp.Contact;
  Actp.CUName = Letp.Name;
  Actp.MainPersons = Letp.ShortSign;

  ContactRelr.ContactCode = Letp.CustCode;
  ContactRelr.ContactName = Actp.CUName;
  crf = ReadFirstKey("ContactName",ContactRelr,2,true);
  if (crf) then begin
    CUr.Code = ContactRelr.CustCode;
  end;
  if (ReadFirstMain(CUr,1,true)) then begin
    Actp.CUCode = CUr.Code;
    Actp.CUName = CUr.Name;
    if (blank(Actp.Contact)) then begin Actp.Contact = CUr.Person; end;
    if (crf==false) then begin
      Actp.Phone = CUr.Phone;
    end else begin
      CUr.Code = Letp.CustCode;
      if (ReadFirstMain(CUr,1,true)) then begin
        Actp.Phone = CUr.Phone;
      end;
    end;
  end;
  Actp.ActType = ASTRec.Letters;
  Actp.OKFlag = ASTRec.LettersDone;
  Actp.TransDate = CurrentDate;
  Actp.SerNr = NextSerNr("ActVc",Actp.TransDate,-1,false,"");
  if (RecordStore(Actp,false)) then begin 
    curcomp = CurrentCompany;
    CreateRecordLink(Actp,curcomp,Letp,curcomp);  
    CreateRecordLink(Letp,curcomp,Actp,curcomp);  
  end;
  RETURN;
END;

global
updating procedure CallStoreActFromLetVc(record LetVc Letp)
begin
  record ActVc Actr;
  
  StoreActFromLetVc(Letp,Actr);
  return;
end;

global
updating procedure MakeActFromLetVc(var record LetVc Letp,var record ActVc Actp)
BEGIN
  if (ReadFirstMain(Letp,0,true)) then begin end;  
  StoreActFromLetVc(Letp,Actp);
  RETURN;
END;

global
procedure LetVc_PasteCustCode(var record LetVc Letr)
BEGIN
  record CUVc CUr;
  string 20 frcu,tocu;
  
  frcu = FirstInRange(Letr.CustCode,20);
  tocu = LastInRange(Letr.CustCode,20);
  CUr.Code = frcu;
  if (ReadFirstMain(CUr,1,true)) then begin
    Letr.Name = CUr.Name;
    if (nonblank(CUr.WarnText1)) then begin
      MessageBox(0,CUr.WarnText1);
    end;
    Letr.Addr0 = CUr.InvAddr0;
    Letr.Addr1 = CUr.InvAddr1;
    Letr.Addr2 = CUr.InvAddr2;
    Letr.Addr3 = CUr.InvAddr3;
    Letr.Addr4 = CUr.InvAddr4;
    Letr.Fax = CUr.Fax;
    Letr.LangCode = CUr.LangCode;
    Letr.emailAddr = CUr.eMail;
    if (nonblank(frcu)) then begin
      if (frcu!=tocu) then begin
        Letr.Addr0 = "";
        Letr.Addr1 = "";
        Letr.Addr2 = "";
        Letr.Addr3 = "";
        Letr.Addr4 = "";
        Letr.Fax = "";
        Letr.emailAddr = "";
      end else begin
        Letr.CustCat = "";
        Letr.Classification = "";
      end;
    end;
  end else begin
    Letr.Name = "";
    Letr.Addr0 = "";
    Letr.Addr1 = "";
    Letr.Addr2 = "";
    Letr.Addr3 = "";
    Letr.Addr4 = "";
    Letr.Fax = "";
    Letr.emailAddr = "";
  end;
  RETURN;
END;

global
procedure LetVc_PasteContact(var record LetVc Letr)
BEGIN
  record CUVc ContactCUr;
  string 20 frcu,tocu;
  
  if (FindCustomerRelation(Letr.CustCode,Letr.Contact,ContactCUr)) then begin
    if (nonblank(ContactCUr.eMail)) then begin
      Letr.emailAddr = ContactCUr.eMail;
    end;
    if (nonblank(ContactCUr.InvAddr0)) then  begin
      Letr.Addr0 = ContactCUr.InvAddr0;
      Letr.Addr1 = ContactCUr.InvAddr1;
      Letr.Addr2 = ContactCUr.InvAddr2;
      Letr.Addr3 = ContactCUr.InvAddr3;
      Letr.Addr4 = ContactCUr.InvAddr4;
    end;
    if (nonblank(ContactCUr.Fax)) then begin
      Letr.Fax = ContactCUr.Fax;
    end;
    Letr.ContClass = "";
    Letr.JobDesc = "";
  end else begin
    Letr.emailAddr = "";
  end;
  RETURN;
END;

global
procedure LetVc_PasteShortSign(var record LetVc Letr)
BEGIN
  record UserVc Userr;
  
  Userr.Code = Letr.ShortSign;
  if (ReadFirstMain(Userr,1,true)) then begin
    Letr.Signature = Userr.Name;
  end;
  RETURN;
END;
