
procedure FindRecordPosition(Array record IVVc aIVr, Integer arraycnt, String tidx1, var Integer recordfinded, var Integer father, var Integer sontype)
begin
  record IVVc IVr;
  Integer der, actrec, fatheraux;
  Boolean endf;
  
  father = -1;
  fatheraux = -1;
  sontype = -1;
  recordfinded = -1;
  endf = false;
  if (arraycnt > 0) then begin
    actrec = 0;
    while (not endf) begin
      IVr = aIVr[actrec];
      if (IVr.Objects == tidx1) then begin
        father = -1;
        sontype = -1;
        recordfinded = actrec;
        endf = true;
      end else begin
        if (IVr.Objects < tidx1) then begin
          if (IVr.InvType == -1) then begin
            recordfinded = -1;
            father = actrec;
            sontype = 2;
            endf = true;
          end else begin
            fatheraux = actrec;
            actrec = IVr.InvType;
          end;
        end else begin
          if (IVr.ExportFlag == -1) then begin
            recordfinded = -1;
            father = actrec;
            sontype = 1;
            endf = true;
          end else begin
            fatheraux = actrec;
            actrec = IVr.ExportFlag;
          end;
        end;
      end;
    end;
  end;
  return;
end;

procedure FindRowPosition(Array record IVVc aIVr, Integer arraycnt, Integer recnum, String tidx2, var Integer rowfinded, var Integer father, var Integer sontype)
begin
  record IVVc IVr;
  row IVVc IVrw;
  Integer actrow, fatheraux, rows;
  Boolean endf;

  father = -1;
  fatheraux = -1;
  sontype = -1;
  rowfinded = -1;
  if (arraycnt > 0) and (arraycnt > recnum) then begin
    IVr = aIVr[recnum];
    rows = MatRowCnt(IVr);
    if (rows > 0) then begin
      endf = false;
      actrow = 0;
      while (not endf) begin
        MatRowGet(IVr,actrow,IVrw);
        if (IVrw.ArtCode == tidx2) then begin
          father = -1;
          sontype = -1;
          rowfinded = actrow;
          endf = true;
        end else begin
          if (IVrw.ArtCode < tidx2) then begin
            if (IVrw.UnitYval == -1) then begin
              rowfinded = -1;
              father = actrow;
              sontype = 2;
              endf = true;
            end else begin
              fatheraux = actrow;
              actrow = IVrw.UnitYval;
            end;
          end else begin
            if (IVrw.UnitXval == -1) then begin
              rowfinded = -1;
              father = actrow;
              sontype = 1;
              endf = true;
            end else begin
              fatheraux = actrow;
              actrow = IVrw.UnitXval;
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure TreeFullInsert(var Array record IVVc aIVr, var Integer arraycnt, String tidx1, String ttext1, String ttext11, String tidx2, String ttext2, String ttext21, String ttext22, String ttext23, String ttext24, Val valor1, Val valor2, Val valor3, Val valor4, Val valor5, Val valor6)
begin
  Integer i,j,rows;
  record IVVc IVr;
  row IVVc IVrw;
  Boolean finded;
  Integer recordfinded,rowfinded,father,sontype,rowfather,rowsontype;
  
  i=0;
  FindRecordPosition(aIVr, arraycnt, tidx1, recordfinded, father, sontype);
  if (recordfinded <> -1) then begin
    IVr = aIVr[recordfinded];
    FindRowPosition(aIVr, arraycnt, recordfinded, tidx2, rowfinded, rowfather, rowsontype);
    if (rowfinded <> -1) then begin
      MatRowGet(IVr, rowfinded, IVrw);
      finded=true;
      IVrw.Sum = IVrw.Sum + valor1;
      IVrw.Price = IVrw.Price + valor2;
      IVrw.BasePrice = IVrw.BasePrice + valor3;
      IVrw.rowGP = IVrw.rowGP + valor4;
      IVrw.UnitFactPrice = IVrw.UnitFactPrice + valor5;
      IVrw.FIFORowVal = IVrw.FIFORowVal + valor6;
      IVr.Sum1 = IVr.Sum1 + valor1;
      IVr.DiscSum = IVr.DiscSum + valor2;
      IVr.Sum3 = IVr.Sum3 + valor3;
      IVr.Sum4 = IVr.Sum4 + valor4;
      IVr.TotQty = IVr.TotQty + valor5;
      IVr.TotWeight = IVr.TotWeight + valor6;
      MatRowPut(IVr, rowfinded, IVrw);
      aIVr[recordfinded] = IVr;
    end else begin
      rows = MatRowCnt(IVr);
      IVrw.ArtCode = tidx2;
      IVrw.Spec = ttext2;
      IVrw.SerialNr = ttext21;
      IVrw.VARList = ttext22;
      IVrw.Objects = ttext23;
      IVrw.Recepy = ttext24;
      IVrw.Sum = valor1;
      IVrw.Price =  valor2;
      IVrw.BasePrice = valor3;
      IVrw.rowGP = valor4;
      IVrw.UnitFactPrice = valor5;
      IVrw.FIFORowVal =valor6;
      IVr.Sum1 = IVr.Sum1 + valor1;
      IVr.DiscSum = IVr.DiscSum + valor2;
      IVr.Sum3 = IVr.Sum3 + valor3;
      IVr.Sum4 = IVr.Sum4 + valor4;
      IVr.TotQty = IVr.TotQty + valor5;
      IVr.TotWeight = IVr.TotWeight + valor6;

      IVrw.UnitXval = -1;
      IVrw.UnitYval = -1;
      IVrw.UnitZval = rowfather;
      MatRowPut(IVr, rows, IVrw);

      if (rowfather <> -1) then begin
         MatRowGet(IVr, rowfather, IVrw);
         if (rowsontype == 2) then begin
           IVrw.UnitYval = rows;
         end else begin
           IVrw.UnitXval = rows;
         end;
         MatRowPut(IVr, rowfather, IVrw)

      end;
      aIVr[recordfinded] = IVr;
    end;
  end else begin
    IVr.Objects = tidx1;
    IVr.Addr0 = ttext1;
    IVr.InvComment = ttext11;
    IVrw.ArtCode = tidx2;
    IVrw.Spec = ttext2;
    IVrw.SerialNr = ttext21;
    IVrw.VARList = ttext22;
    IVrw.Objects = ttext23;
    IVrw.Recepy = ttext24;
    IVrw.Sum = valor1;
    IVrw.Price =  valor2;
    IVrw.BasePrice = valor3;
    IVrw.rowGP = valor4;
    IVrw.UnitFactPrice = valor5;
    IVrw.FIFORowVal =valor6;

    IVrw.UnitXval = -1; 
    IVrw.UnitYval = -1;
    IVrw.UnitZval = -1;

    IVr.Sum1 = valor1;
    IVr.DiscSum = valor2;
    IVr.Sum3 = valor3;
    IVr.Sum4 = valor4;
    IVr.TotQty = valor5;
    IVr.TotWeight = valor6;

    IVr.InvType = -1;
    IVr.ExportFlag = -1;
    IVr.InclVAT = father;

    MatRowPut(IVr, 0, IVrw);
    aIVr[arraycnt] = IVr;

    if (father <> -1) then begin
      RecordNew(IVr);
      IVr = aIVr[father];
      if (sontype == 2) then begin
        IVr.InvType = arraycnt;
      end else begin
        IVr.ExportFlag = arraycnt;
      end;
      aIVr[father] = IVr;
    end;
    arraycnt=arraycnt+1;
  end;
  return;
end;

global
function Integer TreeGetRecordRowCount(Array record IVVc aIVr, Integer recnum)
begin
  record IVVc IVr;
  
  IVr = aIVr[recnum];
  TreeGetRecordRowCount = MatRowCnt(IVr);
  return;
end;

global
function Integer TreeGetRecordNumber(Array record IVVc aIVr, Integer arraycnt, String tidx1)
//to optimize!!!
begin
  record IVVc IVr;
  Integer i;
  Integer res;
  
  res = -1;
  for (i=0; i<arraycnt;i=i+1) begin
    IVr = aIVr[i];
    if IVr.Objects == tidx1 then begin
      res = i;
      i = arraycnt;
    end;
  end;
  TreeGetRecordNumber = res;
  return;
end;

global
procedure TreeFullGet(Array record IVVc aIVr, Integer recnum, Integer rownum, var String tidx1, var String ttext1, var String ttext11, var String tidx2, var String ttext2, var String ttext21, var String ttext22, var String ttext23, var String ttext24, var Val valor1, var Val valor2, var Val valor3, var Val valor4,  var Val valor5,  var Val valor6, var Val sumvalor1, var Val sumvalor2, var Val sumvalor3, var Val sumvalor4, var Val sumvalor5, var Val sumvalor6)
begin
  record IVVc IVr;
  row IVVc IVrw;
  String 20 t;

  IVr = aIVr[recnum];
  MatRowGet(IVr, rownum, IVrw);
  tidx1     = IVr.Objects;
  ttext1    = IVr.Addr0;
  ttext11   = IVr.InvComment;
  tidx2     = IVrw.ArtCode;
  ttext2    = IVrw.Spec;
  ttext21   = IVrw.SerialNr;
  ttext22   = IVrw.VARList;
  ttext23   = IVrw.Objects;
  ttext24   = IVrw.Recepy;
  valor1    = IVrw.Sum;
  valor2    = IVrw.Price;
  valor3    = IVrw.BasePrice;
  valor4    = IVrw.rowGP;
  valor5    = IVrw.UnitFactPrice;
  valor6    = IVrw.FIFORowVal;
  sumvalor1 = IVr.Sum1;
  sumvalor2 = IVr.DiscSum;
  sumvalor3 = IVr.Sum3;
  sumvalor4 = IVr.Sum4;
  sumvalor5 = IVr.TotQty;
  sumvalor6 = IVr.TotWeight;
  return;
end;

global
procedure TreeRecordGet(Array record IVVc aIVr, Integer recnum, var String tidx1, var String ttext1, var String ttext11, var Val sumvalor1, var Val sumvalor2, var Val sumvalor3, var Val sumvalor4, var Val sumvalor5, var Val sumvalor6)
begin
  record IVVc IVr;
  row IVVc IVrw;
  String 20 t;

  IVr = aIVr[recnum];
  tidx1     = IVr.Objects;
  ttext1    = IVr.Addr0;
  ttext11   = IVr.InvComment;
  sumvalor1 = IVr.Sum1;
  sumvalor2 = IVr.DiscSum;
  sumvalor3 = IVr.Sum3;
  sumvalor4 = IVr.Sum4;
  sumvalor5 = IVr.TotQty;
  sumvalor6 = IVr.TotWeight;
  return;
end;

global
procedure TreeRowGet(Array record IVVc aIVr, Integer recnum, Integer rownum, var String tidx2, var String ttext2, var String ttext21, var String ttext22, var String ttext23, var String ttext24, var Val valor1, var Val valor2, var Val valor3, var Val valor4,  var Val valor5,  var Val valor6)
begin
  record IVVc IVr;
  row IVVc IVrw;
  String 20 t;

  IVr = aIVr[recnum];
  MatRowGet(IVr, rownum, IVrw);
  tidx2     = IVrw.ArtCode;
  ttext2    = IVrw.Spec;
  ttext21   = IVrw.SerialNr;
  ttext22   = IVrw.VARList;
  ttext23   = IVrw.Objects;
  ttext24   = IVrw.Recepy;
  valor1    = IVrw.Sum;
  valor2    = IVrw.Price;
  valor3    = IVrw.BasePrice;
  valor4    = IVrw.rowGP;
  valor5    = IVrw.UnitFactPrice;
  valor6    = IVrw.FIFORowVal;
  return;
end;
