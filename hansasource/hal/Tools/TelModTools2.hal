external procedure StripEndingSpaces(var string);
//Should be remote if you call from a special menu
remote updating Procedure SaveTelCall(Date,Time,String,Time,String,String,String,Integer,Integer,Integer,Integer);
external Procedure YankeeTimetoInternational(String,var Time);
external procedure ConvYankeeStringToDate(string,var Date);
external function boolean BlankString( string );
external procedure Alltrim( string , var string);
external procedure StripLeadingSpaces(var string);
external procedure StripEndingSpaces(var string);

global
updating
procedure SavePBXLucent1CallRecord( String Reg )
begin
  Boolean res;
  Val CallDur;
  String 30 Phone,ExtNo,Hours,Mins,Secs,CodAccMarcado,CodAccUsado,CircIngr,CircSal;
  String 255 tstr;
  String 30 FRL,IXC;
  Date TransDate;
  Time TransTime,durat;
  Integer Direction;
  val Scs;

  TransDate= CurrentDate;
  TransTime= mid(Reg,3,2) & ":" & mid(Reg,5,2) & ":00";  // HH:MM -> HH:MM:SS
 
  Hours = mid(Reg,7,1);
  Mins  = mid(Reg,8,2);
  Secs  = StringToInt(mid(Reg,10,1)) * 6;  // decimas de segundos
  tstr  = Hours & ":" & Mins & ":" & Secs;
  durat = tstr;

  Scs = gethour(durat) * 3600;
  Scs = Scs + getminute(durat) * 60;
  Scs = Scs + getsecond(durat);

  CodAccMarcado = mid(Reg,12,3);
  CodAccUsado   = mid(Reg,15,3);
  Phone= mid(Reg,18,15);
  StripLeadingSpaces(Phone);  // are right ajusted
  ExtNo     = mid(Reg,33,5);
  StripLeadingSpaces(ExtNo);
  FRL   = mid(Reg,53,1);
  IXC   = mid(Reg,54,1); 

  CircIngr = mid(Reg,55,3); 
  CircSal  = mid(Reg,58,3); // only set on external calls

  if (CodAccMarcado=="  9") then begin // N- Normal Register
    if (Scs>30) then begin
      SaveTelCall(TransDate,TransTime,Phone,durat,ExtNo,"","",0,0,0,0);
    end;
  end;
  return;
end;


global
updating
procedure SavePBXMeridian1CallRecord( String Reg )
begin
  Boolean res;
  Val CallDur;
  String 30 Phone,ExtNo;
  Date TransDate;
  Time TransTime,durat;
  Integer Direction;

  if (mid(Reg,0,1)=="N") then begin // N- Normal Register

    // outgoing call
    if (!BlankString(mid(Reg,58,20))) then begin 
      TransDate= StringToDate(mid(Reg,40,2) & "/" & mid(Reg,37,2));  // MM/DD-> DD/MM
      TransTime= mid(Reg,43,5)&":00";  // HH:MM -> HH:MM:SS
      Phone= mid(Reg,58,20);
      durat= mid(Reg,49,8);
      Direction = 0;
      
      // HH:MM:SS -> Seconds
      //CallDur= StringToVal(mid(Reg,49,2),M4Val)*3600+StringToVal(mid(Reg,52,2),M4Val)*60+StringToVal(mid(Reg,55,2),M4Val);

    end else begin // incoming call
      TransDate= StringToDate(mid(Reg,40,2) & "/" & mid(Reg,37,2));  // MM/DD-> DD/MM
      TransTime= mid(Reg,43,5)&":00";  // HH:MM -> HH:MM:SS
      durat= mid(Reg,49,8);
      Direction= 1;

    end;
    SaveTelCall(TransDate,TransTime,Phone,durat,ExtNo,"","",0,0,0,0);

  end;
  return;
end;

global
updating
procedure SavePBXSiemens1CallRecord( String Reg )
begin
  Boolean res;
  Val CallDur;
  String 30 Phone,ExtNo,AccessCode;
  Date TransDate;
  Time TransTime,durat;
  LongInt SerNr;
  Integer Direction;


      TransDate =  StringToDate(left(Reg,8));
      TransTime =  mid(Reg,9,8);
      ExtNo     = mid(Reg,22,8);
      StripEndingSpaces(ExtNo);
      durat  = mid(Reg,30,8);
      Phone     = mid(Reg,38,25);
      StripEndingSpaces(Phone);
      Direction= 0;
      AccessCode = "";

    SaveTelCall(TransDate,TransTime,Phone,durat,ExtNo,AccessCode,"",0,0,0,0);

  return;
end;

// Ejemplo
//"1/10/02   4:15PM 101  01   <    incoming    >                  00:00'55"" ...."
//"1/10/02   4:35PM 101  01 0981443476                            00:01'18"" 1317"
global
updating
procedure SavePBXParasonicCallRecord( String Reg )
begin
  Boolean res;
  Val CallDur;
  String 30 Phone,ExtNo,AccessCode,Hours,Mins,Secs,TrunkNr,tstr;
  Date TransDate;
  Time TransTime,durat;
  Integer Direction;

  if (mid(Reg,2,1)<>"/") then begin
  //if ((left(Reg,4)=="Date") or (left(Reg,4)=="VECT") or (left(Reg,1)=="-")) then begin
    goto LSavePBXParasonicCallRecord;
  end;
  ConvYankeeStringToDate(left(reg,10),TransDate);
  YankeeTimetoInternational(mid(reg,10,7),TransTime);
  ExtNo     = mid(Reg,18,4);
  StripEndingSpaces(ExtNo);

  TrunkNr = mid(Reg,23,2);
  Phone     = mid(Reg,26,20);
  StripLeadingSpaces(Phone);
  StripEndingSpaces(Phone);
  if (left(Phone,1)=="<") then begin
    Phone = "";
  end;
  Hours = mid(Reg,64,2);
  Mins  = mid(Reg,67,2); 
  Secs  = mid(Reg,70,2);
  tstr = Hours & ":" & Mins & ":" & Secs;
  durat  = tstr;
  AccessCode = mid(Reg,75,4);
  if (AccessCode=="....") then begin
    AccessCode = "";
  end;
  SaveTelCall(TransDate,TransTime,Phone,durat,ExtNo,AccessCode,"",0,0,0,0);
LSavePBXParasonicCallRecord:;  
  return;
end;

