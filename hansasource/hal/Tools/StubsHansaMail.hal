global
function Boolean OuterActDClassOpenFromSerNrRecord(record ActVc Actr)
begin
  OuterActDClassOpenFromSerNrRecord = false;
  return;
end;

global
function Integer OuterReadAcceptanceRulesForFileName(string FileName)
begin
  OuterReadAcceptanceRulesForFileName = -1;
  return;
end;

global
function Boolean OuterSendforNextLevelManualApprovalData(record ActVc Actr,var record AcceptanceRulesVc Acptr,var string fromfilename,var string fromsernr,var val bc1v,var string sender)
begin
  OuterSendforNextLevelManualApprovalData = false;
  return;
end;

global
function Boolean OuterApprovalActvityAttachments(record ActVc Actr,var record RLinkVc RLr)
begin
  OuterApprovalActvityAttachments = false;
  return;
end;

global
function Boolean OuterFindAcceptanceRulesForActivityData(record ActVc Actr,var record AcceptanceRulesVc Acptr)
begin
  OuterFindAcceptanceRulesForActivityData = false;
  return;
end;

global
function Integer OuterCancelApprovalRequestRecordStatus(record AcceptanceRulesVc Acptr,string fromfilename,string fromsernr,var Integer ApprovalStatusFlag)
begin
  OuterCancelApprovalRequestRecordStatus = 0;
  return;
end;

global
updating procedure OuterCreateNextLevelApprovalTasks(record ActVc oldActr,string fromfilename,string fromsernr,record AcceptanceRulesVc Acptr,row AcceptanceRulesVc Acptrw)
begin
  return;
end;

global
function Boolean OuterFindNextLevelApprovalTasksData(record ActVc oldActr,var record AcceptanceRulesVc Acptr,var string fromfilename,var string fromsernr,var val bc1v,var string nextperson)
begin
  OuterFindNextLevelApprovalTasksData = false;
  return;
end;

global
function Boolean OuterFindAcceptanceRulesAndAmountForActivity(record ActVc Actr,var record AcceptanceRulesVc Acptr,var val bc1v)
begin
  OuterFindAcceptanceRulesAndAmountForActivity = false;
  return;
end;

global
function Boolean OuterApprovalTasksForCurrentLevelDone(string fromfilename,string FromSerNr,string AcceptanceActType,string AcceptedActType,string ForwardedActType,row AcceptanceRulesVc Acptrw,var Integer actcnt)
begin
  OuterApprovalTasksForCurrentLevelDone = false;
  return;
end;

global
function Boolean OuterApprovalTasksExistForUsers(string fromfilename,string FromSerNr,string AcceptanceActType,row AcceptanceRulesVc Acptrw,Integer prevlevactcnt)
begin
  OuterApprovalTasksExistForUsers = false;
  return;
end;

global
updating function Boolean OuterSetOtherPersonsActivityTypestoNoNeed(string fromfilename,string FromSerNr,record ActVc acceptedActr,record AcceptanceRulesVc Acptr,row AcceptanceRulesVc Acptrw)
begin
  OuterSetOtherPersonsActivityTypestoNoNeed = false;
  return;
end;

global
updating procedure OuterApprovalTaskRecordLink(record ActVc Actr,string fromfilename,LongInt fromsernr)
begin
  return;
end;

global
procedure OuterApprovalTaskCustomer(record ActVc Actr,string fromfilename,LongInt fromsernr)
begin
  return;
end;

global
procedure OuterApprovalTaskSubject(record ActVc Actr,string fromfilename,string fromsernr,Integer task,string sender,string recipient,val curamount,string curncy,string contact,record AcceptanceRulesVc Acptr,
                                  Boolean fyif,string Subject,string AcceptanceActType,Integer todoflag,
                                  var record ActVc curuserActr)
begin
  return;
end;

global
updating procedure OuterCancelApprovalRequest(record AcceptanceRulesVc Acptr,string fromfilename,string fromsernr)
begin
  return;
end;


global
updating function Boolean OuterSetLinkedRecordApprovalStatus(record ActVc Actr)
begin
  OuterSetLinkedRecordApprovalStatus = false;
  return;
end;

global
function Boolean OuterInternalSystemAlertTest(record BASysIntVc BASIr)
begin
  OuterInternalSystemAlertTest = false;
  return;
end;

global
function LongInt OuterInternalSystemAlertAction(record BASysIntVc BASIr,record ConfVc Confr,Boolean postmasterf)
begin
  OuterInternalSystemAlertAction = -1;
  return;
end;


global
updating function Integer RecordAction_raPasteInvInCOCUService(var record COCUServiceVc COCUServicep,var record IVVc IVp,var record IVVc newIVr)
begin
  RecordAction_raPasteInvInCOCUService = -1;
  return;
end;

global
function val CUServiceFactor(record CUServiceVc CUServicer,record COCUServiceVc COCUServicer)
begin
  CUServiceFactor = 1;
  return;
end;

global
procedure HistLoopTest(record COCUServiceVc COCUServicer,record CUServiceVc CUServicer,record CUServiceHistVc CUServiceHistr,Date todat,var Boolean foundf2,var Boolean testf2,var Boolean invexists)
begin
  foundf2 = false;
  testf2 = false;
  invexists = false;
  return;
end;

global
function Boolean AnyInvoiceExists(LongInt cocusernr,LongInt cusernr)
begin
  AnyInvoiceExists = false;
  return;
end;

global
updating function Integer RecordAction_raPasteRoyaltyRepInCOCUService(var record COCUServiceVc COCUServicer,var record RoyaltyRepVc RoyaltyRepr,var array longint newhistarray,var integer alen)
begin
  RecordAction_raPasteRoyaltyRepInCOCUService = -1;
  return;
end;

global
updating procedure ChangeServiceHist(var record CUServiceHistVc CUServiceHistr,Integer setoldtypeto,Integer invtype,string artcode,val price,val sum,val qty,val reb,Date validuntil,Date newtrans,Date newdue,string filename,LongInt theser,var record CUServiceHistVc newCUServiceHistr)
begin
  return;
end;

global
function Boolean WillInvoicePayItself(record IVVc IVr)
begin
  WillInvoicePayItself = false;
  return;
end;

global
function LongInt CUServicePerLength(record CUServiceVc CUServicer,record COCUServiceVc COCUServicer)
begin
  CUServicePerLength = 12;
  return;
end;

global
function Boolean BuildIVFromCOCUServiceReport(var record IVVc IVp,record COCUServiceVc COCUServicer,Integer dontcheckpaydate,Integer notfullyearonly,string newcomment,Date startdat,Date todat,Date invdate,var Date firstedat)
begin
  BuildIVFromCOCUServiceReport = false;
  return;
end;

global
function Boolean BuildIVFromCOCUServiceRep(record RcVc RepSpec,record COCUServiceVc COCUServicer,var record IVVc IVr,var LongInt oldser)
begin
  BuildIVFromCOCUServiceRep = false;
  return;
end;

global
updating procedure CreateMoreIssued(record COCUServiceVc COCUServicer,Date todat)
begin
  return;
end;

global
updating procedure SetCOCUHistRecord(record CUServiceHistVc CUServiceHistr,string filename,LongInt setto)
begin
  return;
end;

global
updating procedure CUServiceMakeCustUsage(record CUServiceVc CUServicer)
begin
  return;
end;

global
updating procedure CUServiceUpdateAfter(var record CUServiceVc CUServicer,record CUServiceVc CUService2r)
begin
  return;
end;

global
updating procedure UpdatePrevCUService(var record CUServiceVc CUServicer)
begin
  return;
end;

global
procedure AddTravelLogDetails(var record ActVc Acptr,longint TravelLogSerNr)
begin
  return;
end;

global
procedure AddSTERequestDetails(var record ActVc Acptr,longint TravelLogSerNr)
begin
  return;
end;

global
function Date SetInvoiceDate(record COCUServiceVc COCUServicer,Date sdp)
begin
  Date res;
  
  SetInvoiceDate = res;
  return;
end;

global
updating function boolean PasteCOCUServiceInIV(var record IVVc IVp,LongInt ordnr,var Integer storedincomp)
begin
  return;
end;

global
function Boolean COCUServiceIntTest(Boolean foundf,record RcVc RepSpec,LongInt frco,LongInt toco,string frcc,string tocc,record COCUServiceVc COCUServicer)
begin
  COCUServiceIntTest = false;
  return;
end;

global
updating procedure OuterCancelApprovalRequestDsm(Integer wn)
begin
  return;
end;

global
function Boolean CalcMaintStartEndDate(record COCUServiceVc COCUServicer,record CUServiceVc CUServicer,string artcode,var Date sd,var Date ed,var Date actualed,var val PackageQty)
begin
  CalcMaintStartEndDate = false;
  return;
end;

global
updating procedure CreateNewContract(record CUVc CUr,var record COCUServiceVc COCUServicer,LongInt NumberOfUsers,LongInt dbver,LongInt demod,Integer ptype,LongInt valuepacks)  // CUST
begin
  return;
end;

global
function Boolean MergeOtherContracts(var record COVc COr)
begin
  MergeOtherContracts = false;
  return;
end;

global
procedure RunCOCULines(record COCUServiceVc COCUServicer,Boolean printf,Integer detaillevel,Integer basecur,Integer incdaughter,Integer prdates,Boolean skipwostaircasef,var Date validuntil,var val totinvtot,var val totinvopen,var val totinvper)
begin
  return;
end;

global
procedure PrintCOCUService(record COCUServiceVc COCUServicer,Integer detaillevel,Integer basecur,Integer incdaughter,Integer prdates,var val totinvtot,var val totinvopen,var val totinvper)
begin
  return;
end;

global
updating function Integer RedeemSubINPackage(string uuids,string custcode)
begin
  return;
end;

global
procedure HMPrintQTBlankItem(row QTVc QTrw,record SysFormatBlock SFb,record LangNrVc LangNrr,var string skiptstr)
begin
  return;
end;

global
function Boolean UnivTestActiveVc_GetCourseDateTime(string CourseCode,var Date StartDate,var Time StartTime,var Date EndDate,var Time EndTime)
begin
  UnivTestActiveVc_GetCourseDateTime = false;
  return;
end;

global
function Integer HMTLApprovalStatus(record HMTravelLogVc HMTLr,var record AcceptanceRulesVc Acptr) 
begin
  return;
end;

global
function Boolean HansaMailCustomMandatoryField(record CURegFieldVc CURegFieldr)
begin
  HansaMailCustomMandatoryField = false;
  return;
end;

global
function string 60 OuterReadSetTrObjectLabel(string accnr)
begin
  OuterReadSetTrObjectLabel = false;
  return;
end;

global
procedure OuterReadOpenVcFromTR(record TRVc TRp)
begin
  return;
end;

global
function string 60 OuterReadObjBTSClassArrayOnOpen(integer cwn)
begin
  OuterReadObjBTSClassArrayOnOpen = false;
  return;
end;

global
procedure OuterReadTRObjReplace()
begin
  return;
end;

global
procedure OuterReadTRObjSClassOnOpenWindow(var record RcVc RepSpec)
begin
  return;
end;

global
procedure HMTravelLogVc_TRObjSClass(record HMTravelLogVc HMTravelLogr,Integer currow,var record RcVc RepSpec)
begin
  return;
end;

global
function val CUServiceRebate(record CUServiceVc CUServicer,row CUServiceVc CUServicerw,date pricedate)
begin
  CUServiceRebate = blankval;
  return;
end;

global
function Boolean CUServiceVc_PasteArtCode(var record CUServiceVc CUServicer,Integer rownr,var string inwarn)
begin
  CUServiceVc_PasteArtCode = false;
  return;
end;

global
procedure CUServiceSumup(var record CUServiceVc CUServicer)
begin
  return;
end;

global
procedure CallGetHMCustInfo(Integer compno,string partnercode,string custcode,var record CUVc CUr,var array record ActVc aActr,var record ORVc ORr,var array record COCUServiceVc aCOCUServicer)
begin
return;
end;

global
procedure CallGetHMQuotationList(array Integer compnoarr,array string partnercodearr,Date sd,Date ed,var array record QTVc aQTr)
begin
return;
end;

global
procedure CallSearchHMCustomers(array Integer compnoarr,array string partnercodearr,Integer artmode,string searchstr,array record CUVc aCUr)
begin
return;
end;

global
procedure CallGetPartSupportActTypeList(Integer compno,string partnercode,string custcode,var record CUVc tCUr,var array record ActTypeVc aActTyper)
begin
return;
end;

global
updating procedure CallCreatePartnerSupportActivity(Integer compno,string partnercode,string text,record NotePadVc Noter,string acttype,string custcode,string comment,var Integer res,var string errmsg)
begin
return;
end;

global
procedure CallCheckCASMatHM(array Integer compnoarr,array string partnercodearr,record ORVc ORr,var record ORVc nORr)
begin
return;
end;

global
procedure CallGetSACMCustList(array Integer compnoarr,array string partnercodearr,array string aCustCodes,var array record CUVc aCUr)
begin
return;
end;

global
procedure CallGetPartnerSalesEfforts(array Integer compnoarr,array string partnercodearr,var array record ActVc aActr)
begin
return;
end;

global
procedure CallGetSalesEffortData(array Integer compnoarr,array string partnercodearr,var array string compnamearr,var record IVVc IVr,var array record ActTypeVc aActTyper,var array record INVc aINr)
begin
return;
end;

global
procedure CallCreateSingleEffortActivity(Integer compno,string partnercode,record NotePadVc Noter,string custcode,array string aItems,Date nd,string acttype,string partcontact,string custcontact)
begin

return;
end;

global
procedure CallPartnerLeadData(array Integer compnoarr,array string partnercodearr,var record ORVc ORr)
begin
return;
end;

global
procedure CallPartnerRemoveLead(Integer compno,string partnercode,UUID lead)
begin
return;
end;

global
procedure CallPartnerCreateLead(Integer compno,string partnercode,array string arrkey,array string arrvalue,var Integer error)
begin
return;
end;

global
procedure CallGetLeadSpecData(array Integer compnoarr,array string partnercodearr,var array string compnamearr,var record IVVc IVr)
begin
return;
end;

global
function Boolean PastePackage(record CUServiceVc CUServicer,var record SystemUsageSettingVc SystemUsageSettingr,Integer rownr,val qty,string vatcode)
begin
PastePackage = false;
return;
end;

global
procedure CallGetNewContractCompDetails(Integer type,string email,Integer compno,string partnercode,var array record CUVc aCUr,var array record INVc aINr,var array record CUVc aDeal,var array record CountryVc aCountryr)
begin
return;
end;

global
procedure CallDoCreateNewContract(Integer type,string email,Integer compno,string partnercode,Date sd,Boolean newcustf,array string arrkey,array string arrval,array string aPackage,array Integer aPackageQty,array Date aPackageStartDate,var string usedcustcode,var string usedcustname,var Longint conr,var Integer err)
begin
return;
end;

global
procedure CallUserCompanyList(Integer type,string email,var array Integer compnoarr,array string partnercodearr,var array string compnamearr)
begin
return;
end;

global
procedure CallGetHMContractStatus(Integer compno,Longint contract,var array string arrkey,var array string arrval)
begin
return;
end;

global
function string 255 SetCompanyLanguage()
begin

  SetCompanyLanguage = "";
  return;
end;

global
procedure ResetCompanyLanguage(string oldlang)
begin

  return;
end;

