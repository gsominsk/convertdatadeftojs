procedure OverrideWithUserUnOkWarn(Integer UserUnOkWarn,var Boolean Warn)
begin
  switch (UserUnOkWarn) begin
    case 1: Warn = true;
    case 2: Warn = false;
  end;
  
  return;
end;

global
function Boolean UserUnOkWarn(string FileName,string UserCode)
begin
  Boolean res;
  record UnOkWarnBlock UnOkWarnRec;
  record UserUnOkWarnVc UserUnOkWarnr;
  
  BlockLoad(UnOkWarnRec);
  switch (FileName) begin
    case "IVVc": res = UnOkWarnRec.IVWarn!=0;
    case "IPVc": res = UnOkWarnRec.IPWarn!=0;
    case "VIVc": res = UnOkWarnRec.VIWarn!=0;
    case "OPVc": res = UnOkWarnRec.OPWarn!=0;
    case "PUVc": res = UnOkWarnRec.PUWarn!=0;
    case "SHVc": res = UnOkWarnRec.SHWarn!=0;
    case "StockMovVc": res = UnOkWarnRec.StockMovWarn!=0;
    case "SDVc": res = UnOkWarnRec.SDWarn!=0;
    case "RetVc": res = UnOkWarnRec.RetWarn!=0;
    case "RetPUVc": res = UnOkWarnRec.RetPUWarn!=0;
    case "CLInVc": res = UnOkWarnRec.CLInWarn!=0;
    case "CLOutVc": res = UnOkWarnRec.CLOutWarn!=0;
  end;
  
  UserUnOkWarnr.UserCode = UserCode;
  if (ReadFirstMain(UserUnOkWarnr,1,true)) then begin
    switch (FileName) begin
      case "IVVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.IVWarn,res);
      case "IPVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.IPWarn,res);
      case "VIVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.VIWarn,res);
      case "OPVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.OPWarn,res);
      case "PUVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.PUWarn,res);
      case "SHVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.SHWarn,res);
      case "StockMovVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.StockMovWarn,res);
      case "SDVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.SDWarn,res);
      case "RetVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.RetWarn,res);
      case "RetPUVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.RetPUWarn,res);
      case "CLInVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.CLInWarn,res);
      case "CLOutVc": OverrideWithUserUnOkWarn(UserUnOkWarnr.CLOutWarn,res);
    end;
  end;
  
  UserUnOkWarn = res;
  return;
end;

global
procedure UserUnOkWarnVc_PasteUserCode(var record UserUnOkWarnVc UserUnOkWarnr)
begin
  record UserVc Userr;
  
  Userr.Code = UserUnOkWarnr.UserCode;
  if (ReadFirstMain(Userr,1,true)) then begin
    UserUnOkWarnr.UserName = Userr.Name;
  end;
  
  return;
end;

global
updating procedure StopUserUnOkWarn(string FileName,string UserCode)
begin
  record UserUnOkWarnVc UserUnOkWarnr,OldUserUnOkWarnr;
  
  UserUnOkWarnr.UserCode = UserCode;
  if (!ReadFirstMain(UserUnOkWarnr,1,true)) then begin
    RecordNew(UserUnOkWarnr);
    UserUnOkWarnr.UserCode = UserCode;
    UserUnOkWarnVc_PasteUserCode(UserUnOkWarnr);
    RecordStore(UserUnOkWarnr,false);
  end;
  RecordCopy(OldUserUnOkWarnr,UserUnOkWarnr);
  switch (FileName) begin
    case "IVVc": UserUnOkWarnr.IVWarn = 2;
    case "IPVc": UserUnOkWarnr.IPWarn = 2;
    case "VIVc": UserUnOkWarnr.VIWarn = 2;
    case "OPVc": UserUnOkWarnr.OPWarn = 2;
    case "PUVc": UserUnOkWarnr.PUWarn = 2;
    case "SHVc": UserUnOkWarnr.SHWarn = 2;
    case "StockMovVc": UserUnOkWarnr.StockMovWarn = 2;
    case "SDVc": UserUnOkWarnr.SDWarn = 2;
    case "RetVc": UserUnOkWarnr.RetWarn = 2;
    case "RetPUVc": UserUnOkWarnr.RetPUWarn = 2;
    case "CLInVc": UserUnOkWarnr.CLInWarn = 2;
    case "CLOutVc": UserUnOkWarnr.CLOutWarn = 2;
  end;
  RecordUpdate(OldUserUnOkWarnr,UserUnOkWarnr,true);
  
  return;
end;

global
function Boolean ReadUserUnOkWarn(string UserCode,var record RcVc RepSpec)
begin
  Boolean res;
  record UserUnOkWarnVc UserUnOkWarnr;
  
  UserUnOkWarnr.UserCode = UserCode;
  if (ReadFirstMain(UserUnOkWarnr,1,true)) then begin
    RepSpec.flags[0] = UserUnOkWarnr.IVWarn;
    RepSpec.flags[1] = UserUnOkWarnr.IPWarn;
    RepSpec.flags[2] = UserUnOkWarnr.VIWarn;
    RepSpec.flags[3] = UserUnOkWarnr.OPWarn;
    RepSpec.flags[4] = UserUnOkWarnr.PUWarn;
    RepSpec.flags[5] = UserUnOkWarnr.SHWarn;
    RepSpec.flags[6] = UserUnOkWarnr.StockMovWarn;
    RepSpec.flags[7] = UserUnOkWarnr.SDWarn;
    RepSpec.flags[8] = UserUnOkWarnr.RetWarn;
    RepSpec.flags[9] = UserUnOkWarnr.RetPUWarn;
    RepSpec.flags[10] = UserUnOkWarnr.CLInWarn;
    RepSpec.flags[11] = UserUnOkWarnr.CLOutWarn;
    res = true;
  end;
  
  ReadUserUnOkWarn = res;
  return;
end;

global
updating function Boolean StoreUserUnOkWarn(string UserCode,record RcVc RepSpec)
begin
  Boolean res;
  record UserUnOkWarnVc UserUnOkWarnr,OldUserUnOkWarnr;
  
  UserUnOkWarnr.UserCode = UserCode;
  if (!ReadFirstMain(UserUnOkWarnr,1,true)) then begin
    RecordNew(UserUnOkWarnr);
    UserUnOkWarnr.UserCode = UserCode;
    UserUnOkWarnVc_PasteUserCode(UserUnOkWarnr);
    RecordStore(UserUnOkWarnr,false);
  end;
  RecordCopy(OldUserUnOkWarnr,UserUnOkWarnr);
  UserUnOkWarnr.IVWarn = RepSpec.flags[0];
  UserUnOkWarnr.IPWarn = RepSpec.flags[1];
  UserUnOkWarnr.VIWarn = RepSpec.flags[2];
  UserUnOkWarnr.OPWarn = RepSpec.flags[3];
  UserUnOkWarnr.PUWarn = RepSpec.flags[4];
  UserUnOkWarnr.SHWarn = RepSpec.flags[5];
  UserUnOkWarnr.StockMovWarn = RepSpec.flags[6];
  UserUnOkWarnr.SDWarn = RepSpec.flags[7];
  UserUnOkWarnr.RetWarn = RepSpec.flags[8];
  UserUnOkWarnr.RetPUWarn = RepSpec.flags[9];
  UserUnOkWarnr.CLInWarn = RepSpec.flags[10];
  UserUnOkWarnr.CLOutWarn = RepSpec.flags[11];
  if (RecordUpdate(OldUserUnOkWarnr,UserUnOkWarnr,false)==0) then begin
    res = true;
  end;
  
  StoreUserUnOkWarn = res;
  return;
end;
