external updating procedure SaveSMSLocInServerReply(Boolean,LongInt);

global
updating function Boolean SaveSMSLocInServer(record SMSLocVc SMSLocr)
begin
  Boolean res;
  record SMSVc SMSr;
  Integer rwcnt,i;
  string 255 textstr;

  RecordNew(SMSr);
  SMSr.SerNr = NextSerNr("SMSVc",SMSr.TransDate,-1,false,"");
  SMSr.Person = SMSLocr.Person;
  SMSr.PhoneNo = SMSLocr.PhoneNo;
  SMSr.FromPhoneNo = SMSLocr.FromPhoneNo;
  SMSr.CustCode = SMSLocr.CustCode;
  SMSr.Math = SMSLocr.Math;
  rwcnt = LineTextCnt(SMSLocr);
  for (i=0;i<rwcnt;i=i+1) begin
    textstr = LineTextGet(SMSLocr,i);
    LineTextPut(SMSr,i,textstr);
  end;
  SMSr.LTxtCode = SMSLocr.LTxtCode;
  SMSr.CheckSum = SMSLocr.CheckSum;
  SMSr.MessageType = SMSLocr.MessageType;
  SMSr.ChatId = SMSLocr.ChatId;
  SMSr.SkypeChatMsgId = SMSLocr.SkypeChatMsgId;
  SMSr.SkypeChatParties = SMSLocr.SkypeChatParties;
  SMSr.SubMessageType = SMSLocr.SubMessageType;
  SMSr.CustCode2 = SMSLocr.CustCode2;
  SMSr.Persons = SMSLocr.Persons;
  SMSr.Encryptedf = SMSLocr.Encryptedf;
  SMSr.PrivacyLevel = SMSLocr.PrivacyLevel;
  SMSr.CallStatus = SMSLocr.CallStatus;
  SMSr.Copiedf = SMSLocr.Copiedf;
  SMSr.TransDate = SMSLocr.TransDate;
  SMSr.TransTime = SMSLocr.TransTime;

  res = RecordStore(SMSr,false);
  SaveSMSLocInServer = res;
  return;
end;

global
updating procedure UpdateChatNameToContacts(record ChatFilterVc ChatFilterr)
begin
  Integer i,rowcnt;
  row ChatFilterVc ChatFilterrw;
  record ChatNameCustomerVc ChatNameCustomer;

  rowcnt = MatRowCnt(ChatFilterr);
  for (i=0;i<rowcnt;i=i+1) begin
    RecordClear(ChatNameCustomer);
    MatRowGet(ChatFilterr,i,ChatFilterrw);
    if (nonblank(ChatFilterrw.CustCode)) then begin
      ChatNameCustomer.ChatParty = ChatFilterrw.ChatParty;
      if (ReadFirstMain(ChatNameCustomer,1,true)==false) then begin
        ChatNameCustomer.ChatParty = ChatFilterrw.ChatParty;
        ChatNameCustomer.CustCode = ChatFilterrw.CustCode;
        ChatNameCustomer.CompanyNr = ChatFilterrw.CompanyNr;
        RecordStore(ChatNameCustomer,false);
      end;
    end;
  end;
end;

global
updating procedure UpdateChatFilterFromChatNameToContacts(var record ChatFilterVc ChatFilterr)
begin
  Integer i,rowcnt;
  row ChatFilterVc ChatFilterrw;
  record ChatNameCustomerVc ChatNameCustomer;

  rowcnt = MatRowCnt(ChatFilterr);
  for (i=0;i<rowcnt;i=i+1) begin
    RecordClear(ChatNameCustomer);
    MatRowGet(ChatFilterr,i,ChatFilterrw);
    ChatNameCustomer.ChatParty = ChatFilterrw.ChatParty;
    if (ReadFirstMain(ChatNameCustomer,1,true)) then begin
      ChatFilterrw.CustCode = ChatNameCustomer.CustCode;
      ChatFilterrw.CompanyNr = ChatNameCustomer.CompanyNr;
      if (ChatFilterrw.PrivacyLevel!=kMessagePrivacyPrivateDoNotImport) then begin
        ChatFilterrw.PrivacyLevel = kMessagePrivacyPrivateImport;
      end;
    end;
    MatRowPut(ChatFilterr,i,ChatFilterrw);
  end;
end;

global
updating procedure SaveSMSLocInServerAsync(record SMSLocVc SMSLocr)
begin
  Boolean res;

  res = SaveSMSLocInServer(SMSLocr);
  clientremoteasync2.SaveSMSLocInServerReply(res,SMSLocr.SerNr);
end;
