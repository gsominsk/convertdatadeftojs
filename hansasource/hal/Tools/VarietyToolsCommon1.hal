external procedure FillMaskVAR(string,string,string,Array string,Array string);
external procedure SplitVars(string,Array string,Array string,Array string);
external function string 255 GetNextValue(var string);
external function string 255 removenextlistitem(var string,string);

global
function Boolean FindItemVAR(string itemcode,var string itsz,var string mask,var string mskrep,var string varsubset)
begin
  Boolean res,found;
  record VARMaskBlock VARr;
  row VARMaskBlock VARrw;
  Integer rwcnt,i,j;
  Integer slen;
  record INVc INr;
  LongInt l;
  Array string 5 nilmaskvar;
  Array string 2 nilmaskvarsz;
  Array string 20 amsk;

  res = false;
  BlockLoad(VARr);
  mask = "";
  mskrep = "";
  itsz = "";
  rwcnt = MatRowCnt(VARr);
  for (i=0 ;i<rwcnt;i=i+1) begin
    MatRowGet(VARr,i,VARrw);
    slen  = Len(VARrw.FrItem);
    if ((Left(VARrw.FrItem,slen))<=(Left(itemcode,slen)) and nonblank(VARrw.FrItem)) then begin
      slen  = Len(VARrw.ToItem);
      if ((Left(VARrw.ToItem,slen))>=(Left(itemcode,slen))) then begin
        itsz = VARrw.ItemSize;
        mask = VARrw.VARMask;
        mskrep = VARrw.VARRepOrder;
        varsubset = VARrw.VARSubsets;
        l = FirstInRange(VARrw.ItemSize,2);
        if (l<0) then begin l = 0; end;
        if (l==0) then begin
          SplitVars(itemcode,nilmaskvar,nilmaskvarsz,amsk);
          INr.Code = amsk[0];
        end else begin
          INr.Code = Left(itemcode,l);
        end;
        if (ReadFirstMain(INr,1,true)) then begin
          if (nonblank(INr.VARMask)) then begin
            mask = INr.VARMask;
          end;
          if (nonblank(INr.VARSubsets)) then begin
            varsubset = INr.VARSubsets;
          end;
          if (nonblank(INr.VARRepOrder)) then begin
            mskrep = INr.VARRepOrder;
          end;
        end;
        res = true;
        i = rwcnt;
      end;
    end;
    if (res==false and nonblank(VARrw.ItemGroup)) then begin
      l = FirstInRange(VARrw.ItemSize,2);
      if (l<0) then begin l = 0; end;
      if (l==0) then begin
        SplitVars(itemcode,nilmaskvar,nilmaskvarsz,amsk);
        INr.Code = amsk[0];
      end else begin
        INr.Code = Left(itemcode,l);
      end;

      if (ReadFirstMain(INr,1,true)) then begin
        if (INr.Group==VARrw.ItemGroup) then begin
          itsz = VARrw.ItemSize;
          mask = VARrw.VARMask;
          mskrep = VARrw.VARRepOrder;
          varsubset = VARrw.VARSubsets;
          if (nonblank(INr.VARMask)) then begin
            mask = INr.VARMask;
          end;
          if (nonblank(INr.VARSubsets)) then begin
            varsubset = INr.VARSubsets;
          end;
          if (nonblank(INr.VARRepOrder)) then begin
            mskrep = INr.VARRepOrder;
          end;
          res = true;
          i = rwcnt;
        end;
      end;
    end;
  end;
  if (res==false) then begin
    INr.Code = itemcode;
    found = ReadFirstMain(INr,1,true);
    if (found==false) then begin
      i = InString(itemcode,".");
      if (i!=0) then begin
        INr.Code = Left(itemcode,i-1);
        found = ReadFirstMain(INr,1,true);
      end;
    end;
    if (found) then begin
      mask = INr.VARMask;
      varsubset = INr.VARSubsets;
      mskrep = INr.VARRepOrder;
      itsz = ".";
      res = nonblank(INr.VARMask);
    end;    
  end;
  FindItemVAR = res;
  return;
end;

global
function Boolean FindItemVARLocal(string itemcode,var string itsz,var string mask,var string mskrep,var string varsubset)
begin
  Boolean res,found;
  record VARMaskBlock VARr;
  row VARMaskBlock VARrw;
  Integer rwcnt,i,j;
  Integer slen;
  record LocalINVc LocalINr;
  LongInt l;
  Array string 5 nilmaskvar;
  Array string 2 nilmaskvarsz;
  Array string 20 amsk;

  res = false;
  BlockLoad(VARr);
  mask = "";
  mskrep = "";
  itsz = "";
  rwcnt = MatRowCnt(VARr);
  for (i=0 ;i<rwcnt;i=i+1) begin
    MatRowGet(VARr,i,VARrw);
    slen  = Len(VARrw.FrItem);
    if ((Left(VARrw.FrItem,slen))<=(Left(itemcode,slen)) and nonblank(VARrw.FrItem)) then begin
      slen  = Len(VARrw.ToItem);
      if ((Left(VARrw.ToItem,slen))>=(Left(itemcode,slen))) then begin
        itsz = VARrw.ItemSize;
        mask = VARrw.VARMask;
        mskrep = VARrw.VARRepOrder;
        varsubset = VARrw.VARSubsets;
        l = FirstInRange(VARrw.ItemSize,2);
        if (l<0) then begin l = 0; end;
        if (l==0) then begin
          SplitVars(itemcode,nilmaskvar,nilmaskvarsz,amsk);
          LocalINr.Code = amsk[0];
        end else begin
          LocalINr.Code = Left(itemcode,l);
        end;
        if (ReadFirstMain(LocalINr,1,true)) then begin
          if (nonblank(LocalINr.VARMask)) then begin
            mask = LocalINr.VARMask;
          end;
          if (nonblank(LocalINr.VARSubsets)) then begin
            varsubset = LocalINr.VARSubsets;
          end;
          if (nonblank(LocalINr.VARRepOrder)) then begin
            mskrep = LocalINr.VARRepOrder;
          end;
        end;
        res = true;
        i = rwcnt;
      end;
    end;
    if (res==false and nonblank(VARrw.ItemGroup)) then begin
      l = FirstInRange(VARrw.ItemSize,2);
      if (l<0) then begin l = 0; end;
      if (l==0) then begin
        SplitVars(itemcode,nilmaskvar,nilmaskvarsz,amsk);
        LocalINr.Code = amsk[0];
      end else begin
        LocalINr.Code = Left(itemcode,l);
      end;

      if (ReadFirstMain(LocalINr,1,true)) then begin
        if (LocalINr.Group==VARrw.ItemGroup) then begin
          itsz = VARrw.ItemSize;
          mask = VARrw.VARMask;
          mskrep = VARrw.VARRepOrder;
          varsubset = VARrw.VARSubsets;
          if (nonblank(LocalINr.VARMask)) then begin
            mask = LocalINr.VARMask;
          end;
          if (nonblank(LocalINr.VARSubsets)) then begin
            varsubset = LocalINr.VARSubsets;
          end;
          if (nonblank(LocalINr.VARRepOrder)) then begin
            mskrep = LocalINr.VARRepOrder;
          end;
          res = true;
          i = rwcnt;
        end;
      end;
    end;
  end;
  if (res==false) then begin
    LocalINr.Code = itemcode;
    found = ReadFirstMain(LocalINr,1,true);
    if (found==false) then begin
      i = InString(itemcode,".");
      if (i!=0) then begin
        LocalINr.Code = Left(itemcode,i-1);
        found = ReadFirstMain(LocalINr,1,true);
      end;
    end;
    if (found) then begin
      mask = LocalINr.VARMask;
      varsubset = LocalINr.VARSubsets;
      mskrep = LocalINr.VARRepOrder;
      itsz = ".";
      res = nonblank(LocalINr.VARMask);
    end;    
  end;
  FindItemVARLocal = res;
  return;
end;

global
function Boolean FindItemVAR2(string itemcode,var string itsz,var string mask,var string subsets)
begin
  Boolean res,found;
  record VARMaskBlock VARMaskRec;
  row VARMaskBlock mskrw;
  Integer rwcnt,i,j,slen;
  record INVc INr;
  LongInt l;
  Array string 5 nilmaskvar;
  Array string 2 nilmaskvarsz;
  Array string 20 amsk;

  mask = "";
  subsets = "";
  itsz = "";
  BlockLoad(VARMaskRec);
  rwcnt = MatRowCnt(VARMaskRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VARMaskRec,i,mskrw);
    if (len(itemcode)>=len(mskrw.FrItem) and nonblank(mskrw.FrItem)) then begin
      slen  = Len(mskrw.FrItem);
      if ((Left(mskrw.FrItem,slen))<=(Left(itemcode,slen))) then begin
        slen  = Len(mskrw.ToItem);
        if ((Left(mskrw.ToItem,slen))>=(Left(itemcode,slen))) then begin
          itsz = mskrw.ItemSize;
          mask = mskrw.VARMask;
          subsets = mskrw.VARSubsets;
          l = FirstInRange(mskrw.ItemSize,2);
          if (l<0) then begin l = 0; end;
          if (l==0) then begin
            SplitVars(itemcode,nilmaskvar,nilmaskvarsz,amsk);
            INr.Code = amsk[0];
          end else begin
            INr.Code = Left(itemcode,l);
          end;
          if (ReadFirstMain(INr,1,true)) then begin
            if (nonblank(INr.VARMask)) then begin
              mask = INr.VARMask;
            end;
            if (nonblank(INr.VARSubsets)) then begin
              subsets = INr.VARSubsets;
            end;
          end;
          res = true;
          goto LFindItemVAR2;
        end;
      end;
    end;
    if (res==false and nonblank(mskrw.ItemGroup)) then begin
      l = FirstInRange(mskrw.ItemSize,2);
      if (l<0) then begin l = 0; end;
      if (l==0) then begin
        SplitVars(itemcode,nilmaskvar,nilmaskvarsz,amsk);
        INr.Code = amsk[0];
      end else begin
        INr.Code = Left(itemcode,l);
      end;

      if (ReadFirstMain(INr,1,true)) then begin
        if (INr.Group==mskrw.ItemGroup) then begin
          itsz = mskrw.ItemSize;
          mask = mskrw.VARMask;
          subsets = mskrw.VARSubsets;
          if (nonblank(INr.VARMask)) then begin
            mask = INr.VARMask;
          end;
          if (nonblank(INr.VARSubsets)) then begin
            subsets = INr.VARSubsets;
          end;
          res = true;
          i = rwcnt;
        end;
      end;
    end;
  end;
  if (res==false) then begin
    INr.Code = itemcode;
    found = ReadFirstMain(INr,1,true);
    if (found==false) then begin
      i = InString(itemcode,".");
      if (i!=0) then begin
        INr.Code = Left(itemcode,i-1);
        found = ReadFirstMain(INr,1,true);
      end;
    end;
    if (found) then begin
      mask = INr.VARMask;
      subsets = INr.VARSubsets;
      itsz = ".";
      res = nonblank(INr.VARMask);
    end;    
  end;
LFindItemVAR2:;
  FindItemVAR2 = res;
  return;
end;

global
function Integer GetItemVarietiesForGroup(string itemcode,string varietygroup,var array string a_varcodes,var array string a_varcomment)
begin
  string 60 tstr,msk,mskrep;
  string 200 varsubset,subset,typ;
  Boolean foundf,res;
  record VARVc VARr;
  Integer i,cnt;
  
  if (FindItemVAR(itemcode,tstr,msk,mskrep,varsubset)) then begin
    cnt = 0;
    foundf = false;
    tstr = GetNextValue(msk);
    while (nonblank(tstr) and foundf==false) begin
      cnt = cnt + 1;
      if (tstr==varietygroup) then begin
        foundf = true;
      end;
      tstr = GetNextValue(msk);
    end;
    if (foundf) then begin
      for (i=0;i<cnt;i=i+1) begin
        tstr = removenextlistitem(varsubset,";");
      end;
      i = 0;
      typ = GetNextValue(tstr);
      if (typ=="*") then begin
        typ = GetNextValue(tstr);
        if (blank(typ)) then begin
          ResetLoop(VARr);
          foundf = true;
          VARr.VARGCode = varietygroup;
          while (LoopKey("VARGCode",VARr,1,foundf)) begin
            if (VARr.VARGCode!=varietygroup) then begin
              foundf = false;
            end;
            if (foundf) then begin
              a_varcodes[i] = VARr.Code;
              a_varcomment[i] = VARr.Comment;
              i = i + 1;
            end;
          end;
        end;
      end;
      while (nonblank(typ)) begin
        a_varcodes[i] = typ;
        a_varcomment[i] = typ;
        typ = GetNextValue(tstr);
        i = i + 1;
      end;
    end;
  end;
  
  GetItemVarietiesForGroup = i;
  return;
end;

global
procedure RemoteFindAndFillMaskVAR(string itemcode,var string itemsize,var string mask,var Array string maskvar,var Array string maskvarsz)
begin
  boolean testvarf;
  string 60 mskrep;
  string 200 varsubset;

  FindItemVAR(itemcode,itemsize,mask,mskrep,varsubset);
  if (nonblank(mask)) then begin 
    FillMaskVAR(itemcode,itemsize,mask,maskvar,maskvarsz);
  end; 
end;
