external function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);
external procedure ORSumup(var record ORVc);
external function val DivRateToBase1(string,val,val,val,val,val,val,roundmode);
external procedure GetItemVATCode(string,Integer,var string,Boolean);
external procedure CalculateFreightWeightOR(record ORVc,Boolean);
external procedure ORVc_GetPriceList(var record ORVc);
external updating procedure RecordActionPO_Print(var record POVc,string,Boolean);
external function Boolean PasteCustInOrder(var record ORVc,string,string,var string,var string);

procedure CopyPOHeadertoORHeader(record POVc POr,var record ORVc ORr,string vatnr,Integer fromcompnr)
begin
  record CUVc CUr;
  record INVc INr;
  string 255 warning,errstr,tstr;
  record FreightBlock Freightb;
  
  BlockLoad(Freightb);
  CUr.VATNr = vatnr;
  ReadFirstKey("VATNr",CUr,1,true);
  ORr.PONr = POr.SerNr;
  ORr.CompNr = fromcompnr;
  ORr.CustCode = CUr.Code;
  ORr.OrdDate = POr.TransDate;
  ORr.Addr0 = POr.Addr0;
  ORr.Addr1 = POr.Addr1;
  ORr.Addr2 = POr.Addr2;
  ORr.Addr3 = POr.Addr3;
  ORr.OurContact = POr.VEContact;
  ORr.CustContact = POr.OurContact;
  ORr.PayDeal = POr.PayDeal;
  ORr.Objects = POr.Objects;
  ORr.ShipMode = POr.ShipMode;
  ORr.PlanShip = POr.PlanShip;
  ORr.ShipDeal = POr.ShipDeal;
  ORr.ShipAddr0 = POr.ShipAddr0;
  ORr.ShipAddr1 = POr.ShipAddr1;
  ORr.ShipAddr2 = POr.ShipAddr2;
  ORr.ShipAddr3 = POr.ShipAddr3;
  ORr.CurncyCode = POr.CurncyCode;
  ORr.LangCode = POr.LangCode;
//  RecordField(InvoiceToCode,M4Code,20,CUVc);
  ORr.FrRate = POr.FrRate;
  ORr.ToRateB1 = POr.ToRateB1;
  ORr.ToRateB2 = POr.ToRateB2;
  ORr.BaseRate1 = POr.BaseRate1;
  ORr.BaseRate2 = POr.BaseRate2;
//  RecordField(BuildOn,M4Int,0,0);
//  ORr.PRCode = POr.PRCode;
  ORr.Comment = POr.Comment;
//  RecordField(OrderClass,M4Code,5,0);
  ORr.CustOrdNr = POr.SerNr;
  ORr.InclVAT = POr.InclVAT;
  ORr.Sum0 = POr.Sum0;
  ORr.Sum1 = POr.Sum1;
  ORr.Sum2 = POr.Sum2;
  ORr.Sum3 = POr.Sum3;
  ORr.Sum4 = POr.Sum4;
//  ORr.BaseSum4 = POr.BaseSum4;

//  RecordField(Location,M4Code,10,LocationVc);
  ORr.CustVATCode = POr.VEVATCode;
//  RecordField(RebCode,M4Code,5,0);
//  RecordField(ExportedFlag,M4Int,0,0);
//  RecordField(TotGP,M4Val,0,0);
  ORr.Probability = 100;
//  RecordField(CreditCard,M4UStr,20,CreditCardVc);
//  RecordField(AuthorizationCode,M4UStr,10,0);
//  RecordField(GPProc,M41Val,0,0);
//  RecordField(DespatchDate,M4Date,0,0);
//  RecordField(DespatchTime,M4Time,0,0);
//  RecordField(SalesGroup,M4UStr,30,SalesGroupVc);
//  RecordField(Sorting,M4Str,20,0);
//  ORr.TotQty = POr.TotQty;
//  ORr.TotWeight = POr.TotWeight;
//  ORr.TotVolume = POr.TotVolume;
//  RecordField(Commision,M4Val,0,0);
//  RecordField(SumIncCom,M4Val,0,0);
//  ORr.FrPrice = POr.FrPrice;
//  ORr.FrBase = POr.FrBase;
//  ORr.FrItem = POr.FrItem;
//  ORr.FrVATCode = POr.FrVATCode;
//  ORr.FrObjects = POr.FrObjects;
  ORr.InvAddr3 = POr.InvAddr3;
  ORr.InvAddr4 = POr.InvAddr4;
  ORr.DelAddr3 = POr.DelAddr3;
  ORr.DelAddr4 = POr.DelAddr4;
//  ORr.DelAddrCode = POr.DelAddrCode;
  ORr.TAX1Sum = POr.TAX1Sum;
  ORr.TAX2Sum = POr.TAX2Sum;
  ORr.PlanShipDate = POr.PlanShipDate;
//  RecordField(RefStr,M4Str,60,0);
//  ORr.NoDelivery = CUr.NoDelivery;
//  ORr.NoInvoice = CUr.NoInvoice;
  ORr.OrderType = kOrderTypeNormal;
//  RecordField(TaxMatrix,M4PackedMatrix,0,TaxMatrixVc);
//  RecordField(InvCountryName,M4Str,100,0);
//  RecordField(DelCountryName,M4Str,100,0);
//  RecordField(DelRecipientGLN,M4Str,20,0);

  ORr.FrItem = Freightb.FrItem;
  INr.Code = ORr.FrItem;
  if (ReadFirstMain(INr,1,true)) then begin
    GetItemVATCode(ORr.FrItem,ORr.ExportFlag,tstr,true);
    ORr.FrVATCode = tstr;
    ORr.FrBase = INr.UPrice1;
  end else begin
    ORr.FrItem = "";
    ORr.FrBase = blankval;
    ORr.FrPrice = blankval;
    ORr.FrVATCode = "";
  end;
  if (Freightb.UseWeight!=0) then begin
    CalculateFreightWeightOR(ORr,true);
  end else begin
    ORr.FrPrice = DivRateToBase1(ORr.CurncyCode,ORr.FrBase,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
  end;    
  PasteCustInOrder(ORr,ORr.CustCode,"",warning,errstr);
  return;
end;

procedure CopyPORowstoORRows(record POVc POr,var record ORVc ORr)
begin
  Integer orrownr;
  Integer i,rwcnt;
  row POVc POrw;
  row ORVc ORrw;
  string 255 inwarning,warning;
  
  rwcnt = MatRowCnt(POr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(POr,i,POrw);
    orrownr = MatRowCnt(ORr);

    ClearRow(ORr,ORrw,POrw.stp);
    ORrw.ArtCode = POrw.VEArtCode;
    ORrw.Quant = POrw.Quant;
    ORrw.Price = POrw.Price;
    ORrw.Sum = POrw.Sum;
    ORrw.vRebate = POrw.vRebate;
    ORrw.Spec = POrw.Spec;
//    ORrw.SerialNr = POrw.SerialNr; 
    MatRowPut(ORr,orrownr,ORrw); 
    ORVc_PasteArtCode(ORr,orrownr,inwarning,warning,false);
  end;
  return;
end;

updating procedure CopyPOoOR(record POVc POr,string fname,Integer fromcompnr,Integer tocompnr)
begin
  Integer oldcomp;
  record ORVc ORr;
  record CUVc VEr;
  record CYBlock CYb;

  BlockLoad(CYb);
  VEr.Code = POr.VECode;
  ReadFirstMain(VEr,1,true);
  oldcomp = CurrentCompany;
  SetServerCompany(tocompnr);
  RecordNew(ORr);
  CopyPOHeadertoORHeader(POr,ORr,CYb.VATNr,fromcompnr);
  CopyPORowstoORRows(POr,ORr);
  ORSumup(ORr);
  if (RecordStore(ORr,false)) then begin
    if (FileExists(fname)) then begin
      RecordLinkFile(fname,0,ORr,CurrentCompany);
    end;
  end;
  ResetCompany(oldcomp);
  return;
end;

global
updating procedure POCreateInterCompanyOR(record POVc POr)
begin
  record ModuleBlock Modb;
  record CUVc VEr;
  string 255 fname,docname;

  BlockLoad(Modb);
  if (Modb.InterCompany==0) then begin
    goto LPOCreateInterCompanyOR;
  end;
  VEr.Code = POr.VECode;
  ReadFirstMain(VEr,1,true);  
  if (VEr.ePORcvPref!=kPORcvPreferenceInternal) then begin
    goto LPOCreateInterCompanyOR;
  end;
  if (blank(VEr.ePORcvToCompanyCode)) then begin
    goto LPOCreateInterCompanyOR;
  end;

  docname = "POForm";
  fname = "tmp/" & USetStr(2062) & " " & POr.SerNr & ".pdf";
  SetDocumentFilename(fname);
  SetMedia(mtPdf);
  PrintDocument(POr,docname,false);

  CopyPOoOR(POr,fname,CurrentCompany,StringToInt(VEr.ePORcvToCompanyCode));

  SetDocumentFilename("");
  Delete_File(fname);

  
LPOCreateInterCompanyOR:;
  return;
end;