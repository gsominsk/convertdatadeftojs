remote updating procedure UpdateOffSerNr(LongInt,string,Integer,string,Boolean);
external function boolean IsNumeric(string);
external procedure FindNextIVCashVcOfficialSerialNr2(var record IVCashVc);
external updating procedure SetAgreementPrntdf(LongInt);
external updating procedure SetStockMovPrntdf(record StockMovVc);

global
function Boolean RecidAction_rlIVCashLPrint(var record IVCashVc IVCashp,string repname,string arg1)
begin
  Boolean res;
  Boolean previewf,testf;
  record RcVc RepSpec;
  string 255 oldOfficialSerNr;
  string 255 docname;
  
  RepSpec.Media = mtPrinter;
  SetMedia(mtPrinter);
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;  
  testf = true;    
  if (HasLocalization("PRT")) then begin
    if (IVCashp.OKFlag==0) then begin
      testf = false;
    end;
  end;
  switch (repname) begin
    case "InvCashForm": docname = "InvCashForm";
    case "InvCashRetForm": 
      docname = "InvCashRetForm";
      if (IVCashp.InvType!=kPOSInvoiceTypeCredit) then begin
        testf = false;
      end;
    otherwise docname = "InvCashForm";
  end;
  if (testf) then begin
    if (blankdate(IVCashp.PrintDate)) then begin
      IVCashp.PrintDate = CurrentDate;
      res = true;
    end;
    if (HasLocalization("POL")) then begin
      FindNextIVCashVcOfficialSerialNr2(IVCashp);
      res = true;
    end;
    if (PrintDocument(IVCashp,docname,previewf)) then begin
      if (IVCashp.Prntdf==0) then begin
        res = true;
      end;  
      IVCashp.Prntdf = 1;
      if (nonblankdate(IVCashp.PrintDate)) then begin
        res = true;
      end;
    end else begin
      IVCashp.PrintDate = "";
    end;
  end;
  RecidAction_rlIVCashLPrint = res;
  return;
end;

global
updating procedure RecordActionIVCash_Print2(var record IVCashVc IVCashp,string docname,string arg1,Boolean readf)
begin
  record IVCashVc oldIVCashr;
  
  if (readf) then begin
    if (ReadFirstMain(IVCashp,0,true)) then begin end;  
  end;
  RecordCopy(oldIVCashr,IVCashp);
  if (RecidAction_rlIVCashLPrint(IVCashp,docname,arg1)) then begin
    if (nonblank(IVCashp.OfficialSerNr2)) then begin
      if (RecordUpdate(oldIVCashr,IVCashp,false)==0) then begin
        UpdateOffSerNr(IVCashp.SerNr,"IVCashVc2",0,IVCashp.OfficialSerNr2,false);
      end;
    end;
  end;
  return;
end;

global
updating procedure RecordActionIVCash_Print(var record IVCashVc IVCashp,string arg1,Boolean readf)
begin
  RecordActionIVCash_Print2(IVCashp,"",arg1,readf);
  return;
end;

global
procedure RecActionIP_rlCashInOutDPrint(var record IPVc IPr,Boolean readf)
begin
  record RcVc RepSpec;
  
  if (readf) then begin
    if (ReadFirstMain(IPr,0,true)) then begin end;  
  end;
  if (PrintDocument(IPr,"CLIn1Form",false)) then begin end;
//  DoCLIn1Form(RepSpec,IPr);
  return;
end;

global
procedure RecActionIV_rlCashInOutDPrint(var record IVVc IVr)
begin
  record RcVc RepSpec;
  
  if (ReadFirstMain(IVr,0,true)) then begin end;  
  if (PrintDocument(IVr,"CLIn2Form",false)) then begin end;
//  DoCLIn2Form(RepSpec,IVr);
  return;
end;

global
procedure RecActionOP_rlCashInOutDPrint(var record OPVc OPp)
begin
  record RcVc RepSpec;
  Boolean res;
    
  if (ReadFirstMain(OPp,0,true)) then begin end;  
  res = PrintDocument(OPp,"CLOut1Form",false);
//  DoCLOut1Form(RepSpec,OPp);
  return;
end;

global
procedure RecActionVI_rlCashInOutDPrint(var record VIVc VIp)
begin
  record RcVc RepSpec;
  Boolean res;
  
  if (ReadFirstMain(VIp,0,true)) then begin end;  
  res = PrintDocument(VIp,"CLOut2Form",false);
//  DoCLOut2Form(RepSpec,VIp);
  return;
end;

global
procedure RecActionPP_rlCashInOutDPrint(var record PPVc PPp)
begin
  record RcVc RepSpec;
  Boolean res;
  
  if (ReadFirstMain(PPp,0,true)) then begin end;  
  res = PrintDocument(PPp,"CLOut3Form",false);
//  DoCLOut3Form(RepSpec,PPp);
  return;
end;

updating function Boolean acOPDPrint(record RcVc RepSpec,var record OPVc OPp,Integer opform,Boolean waf)
begin
  Boolean res;
  string 255 tstr;
  transaction 
  
  if (opform==2) then begin
    tstr = "OP2DForm";
  end else begin
    tstr = "OPDForm";
  end;
  if ((OPp.DoneFlag==0) or (OPp.SentFlag==0)) then begin
    if (OPp.DoneFlag==1) then begin
      OPp.SentFlag = 1;
    end;
    res = PrintDocument(OPp,tstr,false);
  end else begin
    if (RepSpec.OnlyUnprntd==1) or waf then begin
      if (opform==2) then begin
//        DoOP2DForm(RepSpec,OPp); //## This is NOT correct. This is in the client.....
        res = PrintDocument(OPp,tstr,false);
      end else begin
        res = PrintDocument(OPp,tstr,false);
        if (waf) then begin res = false; end;
      end;
    end;
  end;
  acOPDPrint = res;
  return;
end;

global
updating procedure RecLAction_rlOPDPrint(record RcVc RepSpec,var record OPVc OPr,Integer opform,Boolean readf,Boolean waf)
begin
  record OPVc oldOPr;
  
  if (readf) then begin
    if (ReadFirstMain(OPr,0,true)) then begin end;  
  end;
  RecordCopy(oldOPr,OPr);
  if (acOPDPrint(RepSpec,OPr,opform,waf)) then begin
    if (RecordUpdate(oldOPr,OPr,false)==0) then begin
    end;
  end;
  return;
end;

updating function Boolean acIPDPrint(record RcVc RepSpec,record IPVc IPp)
begin
  Boolean res;
  Integer oldPrntdf;
  
  if (IPp.Prntdf==0) then begin
    res = PrintDocument(IPp,"IPDForm",false);
    if (res) and (IPp.OKFlag!=0) then begin
      IPp.Prntdf = 1;
    end;
  end else begin
    if (RepSpec.OnlyUnprntd==1) then begin
      res = PrintDocument(IPp,"IPDForm",false);
    end else begin
      if (RepSpec.OnlyUnprntd==2) then begin
        oldPrntdf = IPp.Prntdf;
        IPp.Prntdf = 0;
        res = PrintDocument(IPp,"IPDForm",false);
        IPp.Prntdf = oldPrntdf;
      end else begin
        MessageBox(22250,"");
      end;
//      res = PrintDocument(IPp,"IPDForm",false);
    end;
  end;
  acIPDPrint = res;
  return;
end;

global
updating procedure RecLAction_rlIPDPrint(record RcVc RepSpec,var record IPVc IPr,Boolean readf)
begin
  record IPVc oldIPr;
  
  if (readf) then begin
    if (ReadFirstMain(IPr,0,true)) then begin end;  
  end;
  RecordCopy(oldIPr,IPr);
  if (acIPDPrint(RepSpec,IPr)) then begin
    if (RecordUpdate(oldIPr,IPr,false)==0) then begin
    end;
  end;
  return;
end;

updating function Boolean acVEIVDPrint(record RcVc RepSpec,record VEIVVc VEIVp)
begin
  Boolean res;
  
  if (VEIVp.Prntdf==0) then begin
    res = PrintDocument(VEIVp,"VEIVForm",false);
    if (res) then begin
      VEIVp.Prntdf = 1;
    end;
  end else begin
    if (RepSpec.OnlyUnprntd==1) then begin
      res = PrintDocument(VEIVp,"VEIVForm",false);
    end;
  end;
  acVEIVDPrint = res;
  return;
end;

global
updating procedure RecLAction_rlVEIVPrint(record RcVc RepSpec,var record VEIVVc VEIVr,Boolean readf)
begin
  record VEIVVc oldVEIVr;
  
  if (readf) then begin
    if (ReadFirstMain(VEIVr,0,true)) then begin end;  
  end;
  RecordCopy(oldVEIVr,VEIVr);
  if (acVEIVDPrint(RepSpec,VEIVr)) then begin
    if (RecordUpdate(oldVEIVr,VEIVr,false)==0) then begin
    end;
  end;
  return;
end;

global
procedure RecordActionCashIn_Print(var record CLInVc CLInr,string arg1,Boolean readf)
begin
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;   
  if (readf) then begin
    if (ReadFirstMain(CLInr,1,true)) then begin end;  
  end;     
  if (PrintDocument(CLInr,"CLInForm",previewf)) then begin
  end;
  return;
end;

global
procedure RecordActionCashInCol_Print(var record CLInVc CLInr,string arg1,Boolean readf)
begin
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;
  if (readf) then begin
    if (ReadFirstMain(CLInr,1,true)) then begin end;  
  end;
  if (PrintDocument(CLInr,"CLInColForm",previewf)) then begin
  end;
  return;
end;

global
procedure RecordActionCashOut_Print(var record CLOutVc CLOutr,string arg1,Boolean readf)
begin
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (readf) then begin
    if (ReadFirstMain(CLOutr,1,true)) then begin end;  
  end;
  if (PrintDocument(CLOutr,"CLOutForm",previewf)) then begin
  end;
  return;
end;

global
procedure RecordActionCashOutCol_Print(var record CLOutVc CLOutr,string arg1,Boolean readf)
begin
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (readf) then begin
    if (ReadFirstMain(CLOutr,1,true)) then begin end;  
  end;  
  if (PrintDocument(CLOutr,"CLOutColForm",previewf)) then begin
  end;
  return;
end;

function Boolean srlExpLPrint(var record ExpVc Expp,string arg1)
begin
  Boolean res;
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (ReadFirstMain(Expp,0,true)) then begin end;  
  if (PrintDocument(Expp,"ExpForm",previewf)) then begin
    res = true;
  end;
  srlExpLPrint = res;
  return;
end;

global
procedure RecordActionExp_Print(var record ExpVc Expp,string arg1)
begin

  if (srlExpLPrint(Expp,arg1)) then begin
  end;
  return;
end;

function
Boolean srlFEIVLPrint(var record FEIVVc FEIVp,string arg1)
begin
  Boolean res;
  Boolean previewf;
  record RcVc RepSpec;
  
  RepSpec.Media = 1;// is this OK?
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (PrintDocument(FEIVp,"FEIVForm",previewf)) then begin
    if (FEIVp.Prntdf==0) then begin
      res = true;
    end;  
    FEIVp.Prntdf = 1;
  end;
  srlFEIVLPrint = res;
  return;
end;

global
updating procedure RecordActionFEIV_Print(var record FEIVVc FEIVp,string arg1,Boolean readf)
begin
  record FEIVVc oldFEIVr;
  
  if (readf) then begin
    if (ReadFirstMain(FEIVp,0,true)) then begin end;  
  end;
  RecordCopy(oldFEIVr,FEIVp);
  if (srlFEIVLPrint(FEIVp,arg1)) then begin
    if (RecordUpdate(oldFEIVr,FEIVp,false)==0) then begin
    end;
  end;
  return;
end;

function Boolean srlGCLPrint(var record GCVc GCp,string arg1)
begin
  Boolean res;
  Boolean previewf;
  record RcVc RepSpec;
  
  RepSpec.Media = 1;// is this OK?
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (PrintDocument(GCp,"GCForm",previewf)) then begin
  end;
  srlGCLPrint = res;
  return;
end;

global
updating procedure RecordActionGC_Print(var record GCVc GCp,string arg1,Boolean readf)
begin
  record GCVc oldGCr;
  
  if (readf) then begin
    if (ReadFirstMain(GCp,0,true)) then begin end;  
  end;
  RecordCopy(oldGCr,GCp);
  if (srlGCLPrint(GCp,arg1)) then begin
    if (RecordUpdate(oldGCr,GCp,false)==0) then begin
    end;
  end;
  return;
end;

function Boolean srlOPLPrint(var record OPVc OPp,string arg1)
begin
  Boolean res;
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (ReadFirstMain(OPp,0,true)) then begin end;  
  if (PrintDocument(OPp,"OPDForm",previewf)) then begin
    res = true;
  end;
  srlOPLPrint = res;
  return;
end;
  
global
procedure RecordActionOP_Print(var record OPVc OPp,string arg1)
begin
  
  if (srlOPLPrint(OPp,arg1)) then begin
  end;
  return;
end;

function Boolean srlORLPrint(var record ORVc ORp,string arg1)
begin
  Boolean res,testf;
  Boolean previewf;
  record RcVc RepSpec;
  
  RepSpec.Media = 1;// is this OK?
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;
  testf = true;    
  if (HasLocalization("PRT")) then begin
    if (previewf==false) then begin
      if (ORp.OKFlag==0) then begin
        testf = false;
        MessageBox(23637,"");
      end;
    end;
  end;
  if (testf) then begin  
    if (PrintDocument(ORp,"OrdForm",previewf)) then begin
      if (ORp.Prntdf==0) then begin
        res = true;
      end;  
      ORp.Prntdf = 1;
    end;
  end;
  srlORLPrint = res;
  return;
end;

global
updating procedure RecordActionOR_Print(var record ORVc ORp,string arg1,Boolean readf)
begin
  record ORVc oldORr;
  
  if (readf) then begin
    if (ReadFirstMain(ORp,0,true)) then begin end;  
  end;
  RecordCopy(oldORr,ORp);
  if (srlORLPrint(ORp,arg1)) then begin
    if (RecordUpdate(oldORr,ORp,false)==0) then begin
    end;
  end;
  return;
end;

global
procedure RecordActionOR_Print2(record ORVc ORp)
begin
  record RcVc RepSpec;
  
  RepSpec.Media = 1;
  if (PrintDocument(ORp,"Or2Form",false)) then begin
  end;  
  return;
end;

function Boolean srlPPLPrint(var record PPVc PPp,string arg1)
begin
  Boolean res;
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (PrintDocument(PPp,"PersPayForm",previewf)) then begin
    res = true;
  end;
  srlPPLPrint = res;
  return;
end;

global
procedure RecordActionPP_Print(var record PPVc PPp,string arg1)
begin

  if (ReadFirstMain(PPp,0,true)) then begin end;  
  if (srlPPLPrint(PPp,arg1)) then begin
  end;
  return;
end;

function Boolean srlProdLPrint(record ProdVc Prodp,string arg1)
begin
  Boolean res;
  Boolean previewf;
  
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (PrintDocument(Prodp,"ProdOrderForm",previewf)) then begin
    res = true;
  end;
  srlProdLPrint = res;
  return;
end;

global
procedure RecordActionProd_Print(var record ProdVc Prodp,string arg1)
begin
  if (ReadFirstMain(Prodp,0,true)) then begin end;  
  if (srlProdLPrint(Prodp,arg1)) then begin
  end;
  return;
end;

function Boolean srlProdOrderLPrint(record ProdOrderVc ProdOrderp,string arg1)
begin
  Boolean res;
  Boolean previewf;
  
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;
  if (PrintDocument(ProdOrderp,"ProdOrder2Form",previewf)) then begin
    res = true;
  end;
  srlProdOrderLPrint = res;
  return;
end;

global
procedure RecordActionProdOrder_Print(var record ProdOrderVc Prodp,string arg1)
begin
  if (ReadFirstMain(Prodp,0,true)) then begin end;  
  if (srlProdOrderLPrint(Prodp,arg1))   then begin end;
  return;
end;

function Boolean srlPULPrint(var record PUVc PUp,string arg1)
begin
  Boolean res;
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (PrintDocument(PUp,"PurchaseForm",previewf)) then begin
    res = true;
  end;
  srlPULPrint = res;
  return;
end;

global
procedure RecordActionPU_Print(var record PUVc PUp,string arg1)
begin

  if (ReadFirstMain(PUp,0,true)) then begin end;  
  if (srlPULPrint(PUp,arg1)) then begin
  end;
  return;
end;

function Boolean srlStockMovLPrint(var record StockMovVc StockMovp,string arg1,string repname)
begin
  Boolean res;
  Boolean previewf,testf;
  
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  testf = true;    
  if (HasLocalization("PRT")) then begin
    if (StockMovp.OKFlag==0) and (StockMovp.SentOKFlag==0) and (StockMovp.OrdFlag==0) then begin
      testf = false;
      MessageBox(23637,"");
    end;
  end;
  if (testf) then begin  
    if (PrintDocument(StockMovp,repname,previewf)) then begin
      if (StockMovp.Prntdf==0) then begin
        res = true;
      end;  
      StockMovp.Prntdf = 1;
    end;
  end;
  srlStockMovLPrint = res;
  return;
end;

global
procedure RecordActionStockMov_Print(var record StockMovVc StockMovp,string arg1,string repname,Boolean readf)
begin
  if (readf) then begin
    if (ReadFirstMain(StockMovp,0,true)) then begin end;  
  end;
  if (srlStockMovLPrint(StockMovp,arg1,repname)) then begin
    queued.SetStockMovPrntdf(StockMovp);
  end;
  return;
end;

global
procedure RecordActionTR_Print(var record TRVc TRr,string arg1,Boolean readf)
begin
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;   
  if (readf) then begin
    if (ReadFirstMain(TRr,2,true)) then begin end;  
  end;     
  if (PrintDocument(TRr,"TRForm",previewf)) then begin
  end;
  return;
end;

global
procedure RecordActionSM_Print(var record SMVc SMr,string arg1,Boolean readf)
begin
  Boolean previewf;

  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;   
  if (readf) then begin
    if (ReadFirstMain(SMr,1,true)) then begin end;  
  end;     
  if (PrintDocument(SMr,"SMForm",previewf)) then begin
  end;
  return;
end;

global
procedure RecordActionAgreement_Print(record AgreementVc Agreementr,string arg1,string repname,Boolean readf)
begin
  Boolean previewf;
  record RcVc RepSpec;

  if (readf) then begin
    if (ReadFirstMain(Agreementr,0,true)) then begin end;  
  end;
  if (nonblank(arg1)) then begin
    if (StringToInt(arg1)!=0) then begin
      previewf = true;
    end;
  end;      
  if (PrintDocument(Agreementr,repname,previewf)) then begin
//    queued.SetAgreementPrntdf(Agreementr.SerNr); // This is already done from within the PrintDocument 
  end;
  return;
end;

global
function Boolean IsPostcodeFormatCorrectLocalisation(string Localisation,string postcode)
begin
  Boolean res;
  
  switch (Localisation) begin
    case "BRA":
        res = true;
        if (len(postcode)!=9) then begin
          res = false;
          goto LIsPostcodeFormatCorrectLocalisation;
        end;
        if (Mid(postcode,5,1)!="-") then begin
          res = false;
          goto LIsPostcodeFormatCorrectLocalisation;
        end;
    otherwise
      res = false;
  end;  
LIsPostcodeFormatCorrectLocalisation:;  
  IsPostcodeFormatCorrectLocalisation = res;
  return;
end;

global
function integer CheckAddressForLocalisation(string Localisation,string Addr1,string Addr1Field,string Addr2,string Addr2Field,
                                            string Addr3,string Addr3Field,string Addr4,string Addr4Field,
                                            string Addr5,string Addr5Field,var string ErrField)
begin
  integer res;
  record DistrictVc Districtr;
  record MunicipalityVc Municipalityr;

  res = 0;
  if (HasLocalization(Localisation)==false) then begin 
    goto LLCheckAddressForLocalisation;
  end;
  if (blank(Addr1)) then begin 
    res = 1058;
    ErrField = Addr1Field;
    goto LLCheckAddressForLocalisation;
  end;
  
  if (blank(Addr2)) then begin 
    res = 1058;
    ErrField = Addr2Field;
    goto LLCheckAddressForLocalisation;
  end;
  if ((Mid(Addr2,5,1)!=" ") or (Mid(Addr2,6,1)!="-") or (Mid(Addr2,7,1)!=" ")) then begin
    res = 24621;
    ErrField = Addr2Field;
    goto LLCheckAddressForLocalisation;    
  end;  
  if (IsNumeric(Mid(Addr2,0,5))==false) then begin 
    res = 24621;
    ErrField = Addr2Field;
    goto LLCheckAddressForLocalisation;    
  end;  
  
  if (blank(Addr3)) then begin 
    res = 1058;
    ErrField = Addr3Field;
    goto LLCheckAddressForLocalisation;
  end;
  Districtr.Comment = Addr3;
  if (ReadFirstKey("Comment",Districtr,1,true)==false) then begin
    res = 24622;
    ErrField = Addr3Field;
    goto LLCheckAddressForLocalisation;    
  end;
  
  if (blank(Addr4)) then begin 
    res = 1058;
    ErrField = Addr4Field;
    goto LLCheckAddressForLocalisation;
  end;
  Municipalityr.Comment = Addr4;
  if (ReadFirstKey("Comment",Municipalityr,1,true)==false) then begin
    res = 24623;
    ErrField = Addr4Field;
    goto LLCheckAddressForLocalisation;    
  end;  
  
  if (blank(Addr5)) then begin 
    res = 1058;
    ErrField = Addr5Field;
    goto LLCheckAddressForLocalisation;
  end;    
  if (IsPostcodeFormatCorrectLocalisation(Localisation,Addr5)==false) then begin
    res = 24624;
    ErrField = Addr5Field;
    goto LLCheckAddressForLocalisation;
  end;
LLCheckAddressForLocalisation:;  
  CheckAddressForLocalisation = res;
  return;
end;
