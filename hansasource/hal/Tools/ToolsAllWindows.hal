/* ToolsAllWindows.hal */
// Standard Products Master Control: Window Tag Checks

// in-apps
external function Boolean HasInAppsAvailable();

external function Boolean IsStandardUnused();
external function Boolean IsEnterprise();
external function Boolean StandardHansa();
external function Boolean HasATOL();

external function Boolean HasApprovals();
external function Boolean HasCCPayments();
external function Boolean HasAdvancedAccounting();
external function Boolean HasAdvancedCRM();
external function Boolean HasAdvancedPricing();
external function Boolean HasAdvancedStock();
external function Boolean HasBar();
external function Boolean HasBase2();
external function Boolean HasBranch();
external function Boolean HasCategories();
external function Boolean HasCommunicator();
external function Boolean HasConsignmentStock();
external function Boolean HasContactClassification();
external function Boolean HasContactRelations();
external function Boolean HasConsolidation();
external function Boolean HasCountryPerCustomer();
external function Boolean HasCustItem();
external function Boolean HasCustomerSearchKey();
external function Boolean HasDefineColumns();
external function Boolean HasDeliveryAddress();
external function Boolean HasDepartments();
external function Boolean HasEInvoicing();
external function Boolean HasExtraNLComment();
external function Boolean HasExtTax();
external function Boolean HasFavouriteActTypes();
external function Boolean HasFreightAdvanced();
external function Boolean HasHideCostPrice();
external function Boolean HasHotelInterface();
external function Boolean HasFormEditor();
external function Boolean HasGuestUserDefined();
external function Boolean HasJewelleryInterface();
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean HasKPIs();
external function Boolean HasLanguages();
external function Boolean HasLimitedAccess();
external function Boolean HasLocalMachines();
external function Boolean HasMainPartner();
external function Boolean HasMultiCurrency();
external function Boolean HasMultiLocations();
external function Boolean HasLoyaltyCards();
external function Boolean HasObjects();
external function Boolean HasOfficialSerNr();
external function Boolean HasPreferedOfficialSerNr();
external function Boolean HasNumberSeries();
external function Boolean HasPocketScreen();
external function Boolean HasPositions();
external function Boolean HasProjects();
external function Boolean HasPriceLists();
external function Boolean HasQualityControl();
external function Boolean HasReconLevel2();
external function Boolean HasReminderLevel();
external function Boolean HasRemoteBackup();
external function Boolean HasResourceDisplayGroups();
external function Boolean HasRussianPrepayment();
external function Boolean HasRoute();
external function Boolean HasSalesman();
external function Boolean HasSalesmanBonus();
external function Boolean HasSalesGroup();
external function Boolean HasSecondQuantity();
external function Boolean HasSerialNumbers();
external function Boolean HasSettlementDiscount();
external function Boolean HasSimulations();
external function Boolean hasSimAccruals();
external function Boolean HasSkypeConnection();
external function Boolean HasSIPServerConnection();
external function Boolean HasTaxMatrix();
external function Boolean HasTestFeatures();
external function Boolean HasMetroTestFeatures();
external function Boolean HasTouchScreenDevice();
external function Boolean HasTouchScreenLook();
external function Boolean HasTREO();
external function Boolean HasVarieties();
external function Boolean HasVATZone();
external function Boolean HasWithholdingTax();
external function Boolean HasWithholdingTaxAdvanced();
external function Boolean HasWorkflowOverview();

external function Boolean HasStandardCRM();
external function Boolean HasStandardOrganizer();
external function Boolean HasStandardCommunicator();

external function Boolean HasEMail();
external function Boolean HasExternalEMail();

external function Boolean HasModAT2();
external function Boolean HasModCheck();
external function Boolean HasModCL();
external function Boolean HasModCO();
external function Boolean HasModCourses();
external function Boolean HasModCredMan();
external function Boolean HasModCRM();
external function Boolean HasModExp();
external function Boolean HasModHotel();
external function Boolean HasModHRM();
external function Boolean HasModIN();
external function Boolean HasModNL();
external function Boolean HasModPO();
external function Boolean HasModPOS();
external function Boolean HasModPL();
external function Boolean HasModPP();
external function Boolean HasModProd();
external function Boolean HasModQT();
external function Boolean HasModRent();
external function Boolean HasModRest();
external function Boolean HasModRsrt();
external function Boolean HasModSO();
external function Boolean HasModSL();
external function Boolean HasModSVO();
external function Boolean HasModTS();
external function Boolean HasModWHM();


procedure AddToolCalendar(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  
  if (HasCalendar or HasStandardCRM or HasStandardOrganizer or HasStandardCommunicator or HasModTS or (HasModCRM and IsEnterprise==false)) then begin
    res = true;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;    
  return;
end;

procedure AddToolMail(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  
  if (HasEMail or HasExternalEMail) then begin
    res = true;
  end;
  
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;   
  return;
end;

procedure AddToolTodo(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
    case "StandardCRM":
//      if (TestEnablerFile("EnStdCRMTaskTag")) then begin // Why? We're not looking for this enabler on Cocoa.
        res = true;
//      end;                    
    otherwise
      if (HasCalendar or HasEMail or HasExternalEMail or HasStandardCRM or HasModCRM) then begin
        res = true;
      end;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolConferences(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  
  if (HasEMail or HasExternalEMail) then begin
    res = true;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolOpen(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
    case "StandardExpenses": res = true;

    otherwise    
    if (true) then begin
      res = true;
    end;
  end;  

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolModule(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
    case "BooksInvoicing":
    case "BooksNominalLedger":
    case "StandardCRM":
      if (HasModSL or HasModNL or HasModPL or HasModSO or HasModPO or HasModIN or HasModRest or HasModQT or HasModPOS
          or HasModCL or HasMultiCurrency or HasModCRM or HasStandardCRM) then begin
        res = true;
      end;
    otherwise    
      if (HasModSL or HasModNL or HasModPL or HasModSO or HasModPO or HasModIN or HasModRest or HasModQT or HasModPOS 
          or HasModCL or HasModCRM or HasStandardCRM or HasMultiCurrency) then begin
        res = true;
      end;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolLocalDemo(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  if (Left(BuildProductCode,8)=="Standard") then begin
    res = true;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolResources(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
    case "Admiral":
      if (HasCalendar or HasModPP) then begin
        res = true;
      end;      
    case "StandardExpenses":
      if (HasCalendar or HasModPP) then begin
        res = true;
      end;      
    case "StandardContracts":
      if (HasCalendar or HasModPP) then begin
        res = true;
      end;
    case "StandardHotel":
      if (HasCalendar or HasModPP) then begin
        res = true;
      end;
    case "StandardRentals":
      if (HasCalendar or HasModPP) then begin
        res = true;
      end;                   
    otherwise
      if (HasCalendar) then begin 
        res = true;
      end;
  end;

  if (GuiType==kGuiiPhone or GuiType==kGuiAndroid) then begin
    if (IsEnterprise) then begin
      res = true;
    end;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolReport(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (true) then begin 
    res = true;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolDocument(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (HasFormEditor) then begin
    res = true;
  end;
  if (GuiType==kGuiiPhone) then begin
    res = false;
  end;
  if (res) then begin
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolSetup(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
             
    otherwise
      if (true) then begin
        res = true;
      end;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolRoutines(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
    otherwise
      if (true) then begin
        res = true;
      end;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolRegister(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
    otherwise
      if (true) then begin
        res = true;
      end;
  end;
  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolTutorials(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;
  
  if (IsStandardProduct or IsSberbankProduct) then begin
    res = true;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolLogin(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin
             
    otherwise
      if (true) then begin
        res = true;
      end;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolMaintenance(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  string 255 bpc;

  bpc = BuildProductCode;
  switch (bpc) begin             
    otherwise
      if (true) then begin
        res = true;
      end;
  end;
  if (GuiType==kGuiiPhone or GuiType==kGuiAndroid) then begin
    res = false;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolInAppPurchase(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (Left(BuildProductCode,5)!="Books" and IsSberbankProduct==false and BuildProductCode!="Admiral" and BuildProductCode!="TBAS") then begin
    res = true;
  end;

  if (res) then begin 
    if (mod(hcount,5)==0) then begin 
      h = hfirst;
      v = v + es + vs;
    end;
  end;  
  return;
end;

procedure AddToolArchive(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  res = true;
  return;
end;

procedure AddToolWindows(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  res = true;
  return;
end;

procedure AddToolRoles(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  res = false;
  return;
end;

procedure AddToolPipeline(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (HasWorkflowOverview and (GuiType==kGuiiPhone or GuiType==kGuiMetro)) then begin
    res = true;
  end;
  return;
end;

procedure AddToolForms(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (IsEnterprise and (GuiType==kGuiiPhone or GuiType==kGuiAndroid)) then begin
    res = true;
  end;
  return;
end;

procedure AddToolOnlineSupport(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (IsStandardProduct and IsSberbankProduct==false) then begin
    res = true;
  end;
  switch (BuildProductCode) begin
    case "Admiral": res = true;
  end;
  return;
end;

procedure AddToolTutorialVideos(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (IsStandardProduct and IsSberbankProduct==false) then begin
    res = true;
  end;
  return;
end;

procedure AddToolBI(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  record ModuleBlock Modb;

  if (IsEnterprise and (GuiType==kGuiiPhone or GuiType==kGuiAndroid)) then begin
    if (UserCanAction("ViewBI",true)) then begin
      BlockLoad(Modb);
      res = Modb.BI!=0;
    end;
  end;
  return;
end;

procedure AddToolDashboard(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  record ModuleBlock Modb;

  if (IsEnterprise and (GuiType==kGuiiPhone or GuiType==kGuiAndroid)) then begin
    if (UserCanAction("ViewDashboard",true)) then begin
      BlockLoad(Modb);
      res = Modb.Dashboard!=0;
    end;
  end;
  return;
end;

procedure AddToolAggregator(var boolean res,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin
  if (IsEnterprise and (GuiType==kGuiiPhone or GuiType==kGuiAndroid)) then begin
    res = true;
  end;
  return;
end;

global
function boolean AddBicToMasterWindow(integer toolId,var real h,var real v,real es,real vs,real hfirst,real hcount)
begin 
  boolean res;
  
  res = false;
  switch (toolId) begin
    case ToolCalendar: AddToolCalendar(res,h,v,es,vs,hfirst,hcount);
    case ToolMail: AddToolMail(res,h,v,es,vs,hfirst,hcount);
    case ToolTodo: AddToolTodo(res,h,v,es,vs,hfirst,hcount);
    case ToolConferences: AddToolConferences(res,h,v,es,vs,hfirst,hcount);
    case ToolOpen: AddToolOpen(res,h,v,es,vs,hfirst,hcount);        
    case ToolModule: AddToolModule(res,h,v,es,vs,hfirst,hcount);        
    case ToolResources: AddToolResources(res,h,v,es,vs,hfirst,hcount);        
    case ToolInAppPurchase: AddToolInAppPurchase(res,h,v,es,vs,hfirst,hcount);        
    case ToolReport: AddToolReport(res,h,v,es,vs,hfirst,hcount);        
    case ToolDocument: AddToolDocument(res,h,v,es,vs,hfirst,hcount);        
    case ToolSetup: AddToolSetup(res,h,v,es,vs,hfirst,hcount);
    case ToolRoutines: AddToolRoutines(res,h,v,es,vs,hfirst,hcount);
    case ToolRegister: AddToolRegister(res,h,v,es,vs,hfirst,hcount);
    case ToolTutorials: AddToolTutorials(res,h,v,es,vs,hfirst,hcount);
    case ToolLogin: AddToolLogin(res,h,v,es,vs,hfirst,hcount);
    case ToolMaintenance: AddToolMaintenance(res,h,v,es,vs,hfirst,hcount);
    case ToolArchive: AddToolArchive(res,h,v,es,vs,hfirst,hcount);
    case ToolWindows: AddToolWindows(res,h,v,es,vs,hfirst,hcount);
    case ToolRoles: AddToolRoles(res,h,v,es,vs,hfirst,hcount);
    case ToolPipeline: AddToolPipeline(res,h,v,es,vs,hfirst,hcount);
    case ToolForms: AddToolForms(res,h,v,es,vs,hfirst,hcount);
    case ToolOnlineSupport: AddToolOnlineSupport(res,h,v,es,vs,hfirst,hcount);
    case ToolBI: AddToolBI(res,h,v,es,vs,hfirst,hcount);
    case ToolDashboard: AddToolDashboard(res,h,v,es,vs,hfirst,hcount);
    case ToolLocalDemo: AddToolLocalDemo(res,h,v,es,vs,hfirst,hcount);
    case ToolAggregator: AddToolAggregator(res,h,v,es,vs,hfirst,hcount);
    case ToolTutorialCreateInvoice: AddToolTutorialVideos(res,h,v,es,vs,hfirst,hcount);
    case ToolTutorialSystem: AddToolTutorialVideos(res,h,v,es,vs,hfirst,hcount);

  end;
  AddBicToMasterWindow = res;
  return;
end;
