remote updating procedure OKRandomInvoice(var record IVVc);
remote updating procedure OKRandomDelivery(var record SHVc);
remote updating function Integer RecordAction_raPasteOrdInInv(var record IVVc,LongInt,Boolean,var Integer);
remote updating procedure StoreRandomItem(var record INVc);
remote procedure RemoteINNew(var record INVc);
remote updating procedure StoreRandomCustomer(var record CUVc);
remote procedure RemoteCUNew(var record CUVc);
remote updating function Integer RecordAction_raPasteOrdInShip(var record SHVc,LongInt,var string);
remote function Boolean IVCashVc_PasteQuant(var record IVCashVc,Integer);
remote function Boolean IVCashVc_PasteArtCode(var record IVCashVc,Integer,Boolean,var string,var Integer);
remote function Boolean IVCashVc_PasteCustCode(var record IVCashVc,string,string,string,var Integer,var string);
remote function Boolean PasteCustInOrder(var record ORVc,string,string,var string,var string);
remote function Boolean ORVc_PasteArtCode(var record ORVc,Integer,var string,var string,Boolean);
remote function Boolean PasteCustInInv(var record IVVc);
remote function Boolean IVVc_PasteArtCode(var record IVVc,Integer,var string,var string,Boolean,var Integer);
remote function Boolean RestAccVc_PasteCUCode(var record RestAccVc);
remote function Boolean RestAccVc_PasteArtCode(var record RestAccVc,Integer,record LocalMachineBlock,string,Integer,val,var string);
remote procedure RestAccVc_PasteQuant(var record RestAccVc,Integer,record LocalMachineBlock);
remote updating procedure StoreRandomBarTab(var record RestAccVc);
remote updating procedure StoreRandomOrder(var record ORVc);
remote updating procedure StoreRandomInvoice(var record IVVc);
remote updating procedure StoreRandomPOSInvoice(var record IVCashVc);
remote procedure RemoteIVCashNew(var record IVCashc);
remote procedure RemoteIVNew(var record IVVc);
remote procedure RemoteORNew(var record ORVc);
remote procedure RemoteRCNew(var record RcVc);
remote procedure RemoteRestAccNew(var record RestAccVc);

external updating procedure RecordActionOR_Print(var record ORVc,string,Boolean);

procedure Delay(longint sec1,longint sec2,Boolean dlyf)
begin
  if (dlyf) then begin
    Sleep(Random(sec1,sec2));
  end;
  return;
end;

updating
procedure DoARandomOrder2(string cucode,LongInt rwcnt,Boolean okf,Boolean delieryf,Boolean invoicef,Boolean dlyf)
begin
  record ORVc ORr;
  record SHVc SHr;
  record IVVc IVr;
  record CUVc CUr;
  record INVc INr;
  row ORVc ORrw;
  longint nr_cust,nr_item,rowcnt,i;
  string 255 warning;
  string 255 error;
  boolean dummy;
  Integer err;
  
  Randomize;
  
  nr_cust = CountRecords("CUVc");
  nr_item = CountRecords("INVc");
  
  RemoteORNew(ORr);
  
  CUr.Code = cucode;
  
  if (ReadFirstMain(CUr,1,true)) then begin
    ORr.CustCode = cucode;
  end else begin
    dummy = ReadLogicalMain(CUr,Random(0,nr_cust - 1));
    ORr.CustCode = CUr.Code;
  end;
  
  dummy = PasteCustInOrder(ORr,ORr.CustCode,ORr.CustCode,warning,error);
  
  Delay(3,5,dlyf);
  
  rowcnt = Random(3,6);
  
  for (i = 0; i<rowcnt; i = i + 1) begin
    ClearRow(ORr,ORrw,1);
    dummy = ReadLogicalMain(INr,Random(0,nr_item - 1));
    ORrw.ArtCode = INr.Code;
    
    MatRowPut(ORr,i,ORrw);
    dummy = ORVc_PasteArtCode(ORr,i,warning,warning,false);
    Delay(1,2,dlyf);
    
    MatRowGet(ORr,i,ORrw);
    ORrw.Quant = Random(1,10);
    MatRowPut(ORr,i,ORrw);
    dummy = ORVc_PasteArtCode(ORr,i,warning,warning,false);
    Delay(3,6,dlyf);
  end;
  
  StoreRandomOrder(ORr);
  RecordActionOR_Print(ORr,"",true);
  // dummy = PrintDocument(ORr,"OrdForm",false);
  
  if (delieryf) then begin
   if (RecordAction_raPasteOrdInShip(SHr,ORr.SerNr,warning)==0) then begin
     OKRandomDelivery(SHr);
   end;
  end;
  if (invoicef) then begin
    if (RecordAction_raPasteOrdInInv(IVr,ORr.SerNr,true,err)==0) then begin
      OKRandomInvoice(IVr);
    end;
  end;
  Delay(10,15,dlyf);
  
  return;
end;

global 
updating procedure DoARandomOrder(string cucode,LongInt rwcnt,Boolean okf,Boolean dlyf)
begin
  DoARandomOrder2("",rwcnt,true,false,false,true);
  return;
end;

updating procedure DoARandomInvoice2(string cucode,LongInt rwcnt,Boolean okf,Boolean dlyf)
begin
  record IVVc IVr;
  record CUVc CUr;
  record INVc INr;
  row IVVc IVrw;
  longint nr_cust,nr_item,i;
  string 255 warning;
  string 255 error;
  boolean dummy;
  Integer sernrf;
    
  nr_cust = CountRecords("CUVc");
  nr_item = CountRecords("INVc");
  
  RemoteIVNew(IVr);
  
  IVr.TransDate =  AddDay(CurrentDate,-Random(0,365));
  
  CUr.Code = cucode;
  
  if (ReadFirstMain(CUr,1,true)) then begin
    IVr.CustCode = cucode;
  end else begin
    dummy = ReadLogicalMain(CUr,Random(0,nr_cust - 1));
    IVr.CustCode = CUr.Code;
  end;
  IVr.BranchID = "BranchIDIV";
  
  dummy = PasteCustInInv(IVr);
  
  Delay(3,5,dlyf);
  
  for (i = 0; i<rwcnt; i = i + 1) begin
    ClearRow(IVr,IVrw,1);
    
    INr.Terminated = 1;
    while (INr.Terminated<>0) begin
      dummy = ReadLogicalMain(INr,Random(0,nr_item - 1));
    end;
    
    IVrw.ArtCode = INr.Code;
    
    MatRowPut(IVr,i,IVrw);
    dummy = IVVc_PasteArtCode(IVr,i,warning,warning,false,sernrf);
    Delay(1,2,dlyf);
    
    MatRowGet(IVr,i,IVrw);
    IVrw.Quant = Random(1,10);
    MatRowPut(IVr,i,IVrw);
    dummy = IVVc_PasteArtCode(IVr,i,warning,warning,false,sernrf);
    Delay(3,6,dlyf);
  end;
  
  if (okf) then begin
    IVr.OKFlag = 1;
  end;
  
  StoreRandomInvoice(IVr);
  // dummy = PrintDocument(IVr,"InvForm",false);
  
  Delay(10,15,dlyf);
  
  return;
end;

global
updating procedure DoARandomInvoice()
begin
  DoARandomInvoice2("",10,true,true);
  return;
end;

global
updating procedure DoRandomInvoices()
begin
  
  while (true) begin
    Delay(10,20,true);
    DoARandomInvoice2("",20,true,true);
  end;
  
  return;
end;

global
updating procedure DoRandomInvoicesNW()
begin
  
  while (true) begin
    DoARandomInvoice2("",20,true,false);
  end;
  
  return;
end;

global
updating procedure CreateRandomInvoicesMn(var record RcVc RepSpec)
begin
  LongInt i;
  
  Randomize;
  
  SetDatabaseToUnsafeMode;
  
  for (i = 0; i<RepSpec.long1; i = i + 1) begin
    DoARandomInvoice2(RepSpec.f1,Random(5,10),RepSpec.flags[0],false);
    MaintTrace(i);
  end;
  
  SetDatabaseToSafeMode;
  
end;

updating procedure DoARandomPOSInvoice2(string cucode,LongInt rwcnt,Boolean okf,Boolean dlyf)
begin
  record IVCashVc IVCashr;
  record CUVc CUr;
  record INVc INr;
  row IVCashVc IVCashrw;
  longint nr_cust,nr_item,i;
  string 255 warning;
  string 255 error;
  boolean dummy;
  Integer err;
  Integer sernrf;
  
  nr_cust = CountRecords("CUVc");
  nr_item = CountRecords("INVc");
  
  RemoteIVCashNew(IVCashr);
  
  CUr.Code = cucode;
  
  if (ReadFirstMain(CUr,1,true)) then begin
    IVCashr.CustCode = cucode;
  end else begin
    dummy = ReadLogicalMain(CUr,Random(0,nr_cust - 1));
    IVCashr.CustCode = CUr.Code;
  end;
  
  IVCashVc_PasteCustCode(IVCashr,"","","",err,warning);
  IVCashr.BranchID = "BranchIDIVCash";
  
  Delay(3,5,dlyf);
  
  for (i = 0; i<rwcnt; i = i + 1) begin
    ClearRow(IVCashr,IVCashrw,1);
    
    INr.Terminated = 1;
    while (INr.Terminated<>0) begin
      dummy = ReadLogicalMain(INr,Random(0,nr_item - 1));
    end;
    
    IVCashrw.ArtCode = INr.Code;
    
    MatRowPut(IVCashr,i,IVCashrw);
//    dummy = IVCashVc_PasteArtCode(IVCashr,i,warning,sernrf);
    dummy = IVCashVc_PasteQuant(IVCashr,i);
    Delay(1,2,dlyf);
    
    MatRowGet(IVCashr,i,IVCashrw);
    IVCashrw.Quant = Random(1,10);
    MatRowPut(IVCashr,i,IVCashrw);
    dummy = IVCashVc_PasteArtCode(IVCashr,i,false,warning,sernrf);
    Delay(3,6,dlyf);
  end;
  
  if (okf) then begin
    IVCashr.OKFlag = 1;
  end;
  
  StoreRandomPOSInvoice(IVCashr);
  // dummy = PrintDocument(IVCashr,"InvForm",false);
  
  Delay(10,15,dlyf);
  
  return;
end;

global
updating procedure CreateRandomIVCashMn(var record RcVc RepSpec)
begin
  LongInt i;
  
  Randomize;
  
  for (i = 0; i<RepSpec.long1; i = i + 1) begin
    DoARandomPOSInvoice2(RepSpec.f1,Random(5,10),RepSpec.flags[0],false);
    MaintTrace(i);
  end;
  
end;

updating procedure DoARandomBarTabs2(string cucode,LongInt rwcnt,Boolean okf,Boolean dlyf)
begin
  record RestAccVc RAr;
  record CUVc CUr;
  record INVc INr;
  row RestAccVc RArw;
  longint nr_cust,nr_item,i;
  string 255 warning,inwarning;
  string 255 error;
  boolean dummy;
  Integer err;
  Integer sernrf;
  record LocalMachineBlock LMb;
  
  BlockLoad(LMb);
  nr_cust = CountRecords("CUVc");
  nr_item = CountRecords("INVc");
  
  RemoteRestAccNew(RAr);
  
  CUr.Code = cucode;
  
  if (ReadFirstMain(CUr,1,true)) then begin
    RAr.CUCode = cucode;
  end else begin
    dummy = ReadLogicalMain(CUr,Random(0,nr_cust - 1));
    RAr.CUCode = CUr.Code;
  end;
  
  RestAccVc_PasteCUCode(RAr);
  RAr.BranchID = "BranchIDRA";
  RAr.Class = "Class";
  
  Delay(3,5,dlyf);
  
  for (i = 0; i<rwcnt; i = i + 1) begin
    ClearRow(RAr,RArw,1);
    
    INr.Terminated = 1;
    while (INr.Terminated<>0) begin
      dummy = ReadLogicalMain(INr,Random(0,nr_item - 1));
    end;
    
    RArw.ArtCode = INr.Code;
    
    MatRowPut(RAr,i,RArw);
    RestAccVc_PasteArtCode(RAr,i,LMb,"",0,1.00,inwarning);
    Delay(1,2,dlyf);
    
    MatRowGet(RAr,i,RArw);
    RArw.Quant = Random(1,10);
    MatRowPut(RAr,i,RArw);
    RestAccVc_PasteQuant(RAr,i,LMb);
    Delay(3,6,dlyf);
  end;
  
  if (okf) then begin
    RAr.Closed = 1;
  end;
  
  StoreRandomBarTab(RAr);
  // dummy = PrintDocument(IVCashr,"InvForm",false);
  
  Delay(10,15,dlyf);
  
  return;
end;

global
updating procedure CreateRandomRestAccMn(var record RcVc RepSpec)
begin
  LongInt i;
  
  Randomize;
  
  for (i = 0; i<RepSpec.long1; i = i + 1) begin
    DoARandomBarTabs2(RepSpec.f1,Random(5,10),RepSpec.flags[0],false);
    MaintTrace(i);
  end;
  
end;


global
updating procedure CreateRandomOrdersMn(var record RcVc RepSpec)
begin
  LongInt i;
  
  Randomize;
  
  for (i = 0; i<RepSpec.long1; i = i + 1) begin
    DoARandomOrder2(RepSpec.f1,Random(5,10),RepSpec.flags[0],RepSpec.flags[1],RepSpec.flags[2],false);
  end;
  
end;

updating
procedure DoARandomCustomers(string cucode,Boolean dlyf)
begin
  record CUVc CUr;
  
  Randomize;
    
  RemoteCUNew(CUr);  

  Delay(3,5,dlyf);
  
  StoreRandomCustomer(CUr);
  
  Delay(10,15,dlyf);
  
  return;
end;

global
updating procedure CreateRandomCustomersMn(var record RcVc RepSpec)
begin
  LongInt i;
  
  Randomize;
  
  SetDatabaseToUnsafeMode;
  
  for (i = 0; i<RepSpec.long1; i = i + 1) begin
    DoARandomCustomers(RepSpec.f1,false);
    MaintTrace(i);
  end;
  
  SetDatabaseToSafeMode;
  
end;

updating
procedure DoARandomItems(string cucode,Integer itemtype,Boolean dlyf)
begin
  record INVc INr;
  
  Randomize;
    
  RemoteINNew(INr);  

  Delay(3,5,dlyf);
  
  INr.ItemType = itemtype;
  INr.UPrice1 = Random(0,1000.00 - 1);
  INr.InPrice = Random(1,1000.00 - 1);
  StoreRandomItem(INr);
  
  Delay(10,15,dlyf);
  
  return;
end;

global
updating procedure CreateRandomItemsMn(var record RcVc RepSpec)
begin
  LongInt i;
  
  Randomize;
  
  SetDatabaseToUnsafeMode;
  
  for (i = 0; i<RepSpec.long1; i = i + 1) begin
    DoARandomItems(RepSpec.f1,RepSpec.AccSpec,false);
    MaintTrace(i);
  end;
  
  SetDatabaseToSafeMode;
end;

global
procedure RunAReport()
begin
  record RcVc RCr;
  
  RemoteRCNew(RCr);
  ReportDefaults(RCr,"DayBalNLRClass");
  RCr.Media = mtNowhere;
  RCr.repname = "DayBalNLRn";
  RunReport(RCr,0);
  CloseWindow(CurWindow);
  
  return;
end;

global
procedure DoVeryLittle()
begin
  record ORVc ORr;
  
  while (true) begin
    RemoteORNew(ORr);
    if (ReadFirstMain(ORr,1,true)) then begin end;
    Sleep(10);
  end;
  
  return;
end;

global
procedure RunASLReport()
begin
  record RcVc RCr;
  date dt;
  
  RemoteRCNew(RCr);
  ReportDefaults(RCr,"ARRClass");
  
  dt.year = 2006;
  dt.month = 5;
  dt.day = 5;
  RCr.d1 = dt;
  RCr.Media = mtNowhere;
  RCr.repname = "ARRn";
  RunReport(RCr,0);
  CloseWindow(CurWindow);
  
  return;
end;
