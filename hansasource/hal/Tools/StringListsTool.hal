global
procedure FillARPay3SClass(string index,string sorting,string custcode,Date td,
                           var Array LongInt acupnr,var Array LongInt aordernr,var Array Date apaydate,
                           var Array val avatval,var Array val arval,var Array val abookrval,var Array string acurncycode,
                           var Integer acnt)
begin
  record ARPayVc ARPayr;
  Boolean found,testf;
  string 255 tstr,tstr2;
  string 255 ckey;
  Date bd;
  
  ckey = index;
  if (blank(ckey)) then begin
    ckey = "CustCode";
  end;
  found = true;
  if (sorting=="Reverse") then begin
    switch (index) begin    
      case "CustCode":  ARPayr.CustCode = custcode;
      case "CUPNr": ARPayr.CUPNr = 2000000000000;
      case "OrderNr": ARPayr.OrderNr = 2000000000000;
      case "PayDate":  
        ARPayr.PayDate = td;
    end;
    while (LoopBackKey(ckey,ARPayr,1,found)) begin
      switch (index) begin    
        case "CustCode": if (ARPayr.CustCode!=custcode) then begin found = false; end;
        case "CUPNr":
        case "OrderNr":
        case "PayDate": if (ARPayr.PayDate>td) then begin found = false; end;
      end;
      if (found) then begin
        testf = true;
        if (ARPayr.PayDate>td) then begin testf = false; end;
        if (ARPayr.CustCode!=custcode) then begin testf = false; end;
        if (testf) then begin
          acupnr[acnt] = ARPayr.CUPNr;
          aordernr[acnt] = ARPayr.OrderNr;
          apaydate[acnt] = ARPayr.PayDate;
          avatval[acnt] = ARPayr.VATVal;
          arval[acnt] = ARPayr.RVal;
          abookrval[acnt] = ARPayr.BookRVal;
          acurncycode[acnt] = ARPayr.CurncyCode;
          acnt = acnt + 1;
        end;
      end;
    end;
  end else begin
    switch (index) begin    
      case "CustCode":  ARPayr.CustCode = custcode;
      case "CUPNr":
      case "OrderNr":
      case "PayDate":  ARPayr.PayDate = bd;
    end;
    while (LoopKey(ckey,ARPayr,1,found)) begin
      switch (index) begin    
        case "CustCode": if (ARPayr.CustCode!=custcode) then begin found = false; end;
        case "CUPNr":
        case "OrderNr":
        case "PayDate": if (ARPayr.PayDate>td) then begin found = false; end;
      end;
      if (found) then begin
        testf = true;
        if (ARPayr.PayDate>td) then begin testf = false; end;
        if (ARPayr.CustCode!=custcode) then begin testf = false; end;
        if (testf) then begin
          acupnr[acnt] = ARPayr.CUPNr;
          aordernr[acnt] = ARPayr.OrderNr;
          apaydate[acnt] = ARPayr.PayDate;
          avatval[acnt] = ARPayr.VATVal;
          arval[acnt] = ARPayr.RVal;
          abookrval[acnt] = ARPayr.BookRVal;
          acurncycode[acnt] = ARPayr.CurncyCode;
          acnt = acnt + 1;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure FillAPPay3SClass(string index,string sorting,string vecode,Date td,
                           var Array LongInt avepnr,var Array LongInt aordernr,var Array Date apaydate,
                           var Array val avatval,var Array val apval,var Array val abookrval,var Array string acurncycode,
                           var Integer acnt)
begin
  record OPPVc OPPr;
  Boolean found,testf;
  string 255 tstr,tstr2;
  string 255 ckey;
  Date bd;
  
  ckey = index;
  if (blank(ckey)) then begin
    ckey = "VECode";
  end;
  found = true;
  if (sorting=="Reverse") then begin
    switch (index) begin    
      case "VECode": OPPr.VECode = vecode;
      case "SerNr": OPPr.SerNr = 2000000000000;
      case "OrderNr": OPPr.OrderNr = 2000000000000;
      case "PayDate":  
        OPPr.PayDate = td;
    end;
    while (LoopBackKey(ckey,OPPr,1,found)) begin
      switch (index) begin    
        case "VECode": if (OPPr.VECode!=vecode) then begin found = false; end;
        case "SerNr":
        case "OrderNr":
        case "PayDate": if (OPPr.PayDate>td) then begin found = false; end;
      end;
      if (found) then begin
        testf = true;
        if (OPPr.PayDate>td) then begin testf = false; end;
        if (OPPr.VECode!=vecode) then begin testf = false; end;
        if (testf) then begin
          avepnr[acnt] = OPPr.SerNr;
          aordernr[acnt] = OPPr.OrderNr;
          apaydate[acnt] = OPPr.PayDate;
          avatval[acnt] = OPPr.VATVal;
          apval[acnt] = OPPr.PPVal;
          abookrval[acnt] = OPPr.BookRVal;
          acurncycode[acnt] = OPPr.CurncyCode;
          acnt = acnt + 1;
        end;
      end;
    end;
  end else begin
    switch (index) begin    
      case "VECode":  OPPr.VECode = vecode;
      case "SerNr":
      case "OrderNr":
      case "PayDate":  OPPr.PayDate = bd;
    end;    
    while (LoopKey(ckey,OPPr,1,found)) begin
      switch (index) begin    
        case "VECode": if (OPPr.VECode!=vecode) then begin found = false; end;
        case "SerNr":
        case "OrderNr":
        case "PayDate": if (OPPr.PayDate>td) then begin found = false; end;
      end;
      if (found) then begin
        testf = true;
        if (OPPr.PayDate>td) then begin testf = false; end;
        if (OPPr.VECode!=vecode) then begin testf = false; end;
        if (testf) then begin
          avepnr[acnt] = OPPr.SerNr;
          aordernr[acnt] = OPPr.OrderNr;
          apaydate[acnt] = OPPr.PayDate;
          avatval[acnt] = OPPr.VATVal;
          apval[acnt] = OPPr.PPVal;
          abookrval[acnt] = OPPr.BookRVal;
          acurncycode[acnt] = OPPr.CurncyCode;
          acnt = acnt + 1;
        end;
      end;
    end;
  end;
  return;
end;
