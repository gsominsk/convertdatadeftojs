external procedure StrToYcNr(string,var string,var LongInt);
external function Boolean FindCustomerRelation(string,string,var record CUVc);
external procedure OpenPresentation(LongInt);
external function string 255 CreateInvoiceNumber(LongInt,string);
external function Integer StrToYc(string);
remote function Boolean RentResVc_PasteSerialNr(var record RentResVc,Boolean);
remote function Boolean PasteAgreement(var record RentResVc,var string);

global
procedure DblIDVIVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record VIVc VIr;

  if (nonblank(l)) then begin
    VIr.SerNr = LastInRange(l,10);
    if (ReadFirstMain(VIr,1,true)) then begin  
      wn = OpenWindow("VIDClass",1,0,"","",VIr);
    end; 
  end;
  return;
end;

global
procedure DblIDExpVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record ExpVc Expr;

  if (nonblank(l)) then begin
    Expr.SerNr = FirstInRange(l,10);
    if (ReadFirstMain(Expr,1,true)) then begin  
      wn = OpenWindow("ExpDClass",1,0,"","",Expr);
    end; 
  end;
  return;
end;

global
procedure DblDropRetToOR(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record RcVc RepSpec;

  if (nonblank(l)) then begin
    ReportDefaults(RepSpec,"ORIntCheckVClass");    
    wn = OpenWindow("ORIntCheckVClass",1,0,"","",RepSpec);
    DeselectWindow(wn,false);
    RepSpec.repname = "DropRetORMn";
    RepSpec.long1 = l;
    PutWindowRecord(wn,RepSpec);
  end;
  return;
end;

global
procedure DblDropSHToOR(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record RcVc RepSpec;

  if (nonblank(l)) then begin
    ReportDefaults(RepSpec,"ORIntCheckVClass");    
    wn = OpenWindow("ORIntCheckVClass",1,0,"","",RepSpec);
    DeselectWindow(wn,false);
    RepSpec.repname = "DropSHORMn";
    RepSpec.long1 = l;
    PutWindowRecord(wn,RepSpec);
  end;
  return;
end;

global
procedure DblSMVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record SMVc SMr;

  if (nonblank(dblstr)) then begin
    SMr.SerNr = FirstInRange(dblstr,10);
    if (ReadFirstMain(SMr,1,true)) then begin  
      wn = OpenWindow("SMDClass",1,0,"","",SMr);
    end; 
  end;
  return;
end;

global
procedure DblIDSMVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record SMVc SMr;

  if (nonblank(l)) then begin
    SMr.SerNr = FirstInRange(l,10);
    if (ReadFirstMain(SMr,1,true)) then begin  
      wn = OpenWindow("SMDClass",1,0,"","",SMr);
    end; 
  end;
  return;
end;

global
procedure DblDispatchVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record DispatchVc Disr;;
   
  Disr.SerNr = dblstr;
  if (ReadFirstMain(Disr,1,true)) then begin
    wn = OpenWindow("DispatchDClass",1,0,"","",Disr);
  end;     
  return;
end;

global
procedure DblOffHireVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record OffHireVc OffHirer;;
   
  OffHirer.SerNr = dblstr;
  if (ReadFirstMain(OffHirer,1,true)) then begin
    wn = OpenWindow("OffHireDClass",1,0,"","",OffHirer);
  end;     
  return;
end;

global
procedure DblINTransferVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record INTransferVc INTransferr;;
   
  INTransferr.SerNr = dblstr;
  if (ReadFirstMain(INTransferr,1,true)) then begin
    wn = OpenWindow("INTransferDClass",1,0,"","",INTransferr);
  end;     
  return;
end;

global
procedure DblCollectionVc(string dblstr,string l,Integer currepwn)
begin
  record CollectionVc Collectionr;
  Integer wn;
  
  Collectionr.SerNr = FirstInRange(l,10);
  if (ReadFirstMain(Collectionr,1,true)) then begin
    wn = OpenWindow("CollectionDClass",1,0,"","",Collectionr);
  end;
  return;
end;

global
procedure DblAgreementVc(string dblstr,string l,Integer currepwn)
begin
  record AgreementVc Agreementr;
  Integer wn;
  
  Agreementr.SerNr = FirstInRange(dblstr,10);
  if (ReadFirstMain(Agreementr,1,true)) then begin
    wn = OpenWindow("AgreementDClass",1,0,"","",Agreementr);
  end;
  return;
end;

global
procedure DblRentResVc(string dblstr,string l,Integer currepwn)
begin
  record RentResVc RentResr;
  Integer wn;
  string 255 tstr;

  if (nonblank(l)) then begin
    tstr = l;
  end else begin
    tstr = dblstr;
  end;
  if (nonblank(tstr)) then begin
	  RentResr.SerNr = FirstInRange(tstr,10);
	  if (ReadFirstMain(RentResr,1,true)) then begin
	    wn = OpenWindow("RentResDClass",1,0,"","",RentResr);
	  end;
	end;
  return;
end;

global
procedure DblRentChrgVc(string dblstr,string l,Integer currepwn)
begin
  record RentChrgVc RentChrgr;
  Integer wn;
  
  RentChrgr.SerNr = FirstInRange(l,10);
  if (ReadFirstMain(RentChrgr,1,true)) then begin
    wn = OpenWindow("RentChrgDClass",1,0,"","",RentChrgr);
  end;
  return;
end;

global
procedure DblOffHire(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record OffHireVc OffHirer;

  if (nonblank(dblstr)) then begin
    OffHirer.SerNr = FirstInRange(dblstr,10);
    if (ReadFirstMain(OffHirer,1,true)) then begin  
      wn = OpenWindow("OffHireDClass",1,0,"","",OffHirer);
    end; 
  end;
  return;
end;

global
procedure DblINTransfer(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record INTransferVc INTransferr;

  if (nonblank(dblstr)) then begin
    INTransferr.SerNr = FirstInRange(dblstr,10);
    if (ReadFirstMain(INTransferr,1,true)) then begin  
      wn = OpenWindow("INTransferDClass",1,0,"","",INTransferr);
    end; 
  end;
  return;
end;

global
procedure DblInternMov(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record InternMovVc InternMovr;

  if (nonblank(dblstr)) then begin
    InternMovr.SerNr = FirstInRange(dblstr,10);
    if (ReadFirstMain(InternMovr,1,true)) then begin  
      wn = OpenWindow("InternMovDClass",1,0,"","",InternMovr);
    end; 
  end;
  return;
end;

global
procedure DblDispatch(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record DispatchVc Dispatchr;

  if (nonblank(dblstr)) then begin
    Dispatchr.SerNr = FirstInRange(dblstr,10);
    if (ReadFirstMain(Dispatchr,1,true)) then begin  
      wn = OpenWindow("DispatchDClass",1,0,"","",Dispatchr);
    end; 
  end;
  return;
end;

global
procedure DblInspection(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record QualConVc QualConr;

  if (nonblank(dblstr)) then begin
    QualConr.SerNr = FirstInRange(dblstr,10);
    if (ReadFirstMain(QualConr,1,true)) then begin  
      wn = OpenWindow("InspectConDClass",1,0,"","",QualConr);
    end; 
  end;
  return;
end;

global
procedure DblVATIVVcID(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record VATIVVc VATIVr;

  if (nonblank(l)) then begin
    VATIVr.SerNr = FirstInRange(l,10);
    if (ReadFirstMain(VATIVr,1,true)) then begin  
      wn = OpenWindow("VATIVDClass",1,0,"","",VATIVr);
    end; 
  end;
  return;
end;

global
procedure DblVATIVVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record VATIVVc VATIVr;
  string 255 tstr;

  if (nonblank(l)) then begin
    tstr = l;
  end else begin
    tstr = dblstr;
  end;
  if (nonblank(tstr)) then begin
    VATIVr.SerNr = FirstInRange(tstr,10);
    if (ReadFirstMain(VATIVr,1,true)) then begin  
      wn = OpenWindow("VATIVDClass",1,0,"","",VATIVr);
    end; 
  end;
  return;
end;

global
procedure DblVATVIVcID(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record VATVIVc VATVIr;

  if (nonblank(l)) then begin
    VATVIr.SerNr = FirstInRange(l,10);
    if (ReadFirstMain(VATVIr,1,true)) then begin  
      wn = OpenWindow("VATVIDClass",1,0,"","",VATVIr);
    end; 
  end;
  return;
end;

global
procedure DblVATVIVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record VATVIVc VATVIr;
  string 255 tstr;

  if (nonblank(l)) then begin
    tstr = l;
  end else begin
    tstr = dblstr;
  end;
  if (nonblank(tstr)) then begin
    VATVIr.SerNr = FirstInRange(tstr,10);
    if (ReadFirstMain(VATVIr,1,true)) then begin  
      wn = OpenWindow("VATVIDClass",1,0,"","",VATVIr);
    end; 
  end;
  return;
end;

global 
procedure DblFBVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  Record FBVc FBr;
   
  FBr.SerNr = dblstr;
  if (ReadFirstMain(FBr,1,true)) then begin
    wn = OpenWindow("FBDClass",1,0,"","",FBr);
  end;
  return;
end;

global
procedure DblNewReservation(string dblstr,string l,Integer currepwn)
begin
  record RentResVc RentResr;
  record RentINVc RentINr;
  record RcVc RepSpec;
  Integer wn;
  string 200 warning;

  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    RecordNew(RentResr);
    RentResr.AgreementNr = RepSpec.long1;
    if (PasteAgreement(RentResr,warning)) then begin
    end;
    RentResr.SerialNr = dblstr;
    RentResr.Code = l;
    RentINr.SerialNr = dblstr;
    RentINr.Code = l;
    if (ReadFirstMain(RentINr,2,true)) then begin
      RentResr.Location = RentINr.OrgLocation;
    end;
    if (RentResVc_PasteSerialNr(RentResr,false)) then begin
    end;
    RentResr.TransDate = RepSpec.sStartDate;
    RentResr.EndDate = RepSpec.sEndDate;
    wn = OpenWindow("RentResDClass",1,0,"","",RentResr);
    if (nonblank(warning)) then begin
      MessageBox(0,warning);
    end;
  end;
  return;
end;

global
procedure DblNewItemRes(string dblstr,string l,Integer currepwn)
begin
  record RentResVc RentResr;
  record RentINVc RentINr;
  record RcVc RepSpec;
  Integer wn;
  string 200 warning;

  if (nonblank(dblstr)) then begin
    GetWindowRecord(currepwn,RepSpec);
    RecordNew(RentResr);
    RentResr.AgreementNr = RepSpec.long1;
    if (PasteAgreement(RentResr,warning)) then begin
    end;
    RentResr.SerialNr = "";
    RentResr.Code = dblstr;
    RentINr.SerialNr = "";
    RentINr.Code = dblstr;
    if (ReadFirstMain(RentINr,2,true)) then begin
      RentResr.Location = RentINr.OrgLocation;
    end;
    if (RentResVc_PasteSerialNr(RentResr,false)) then begin
    end;
    RentResr.TransDate = RepSpec.sStartDate;
    RentResr.EndDate = RepSpec.sEndDate;
    wn = OpenWindow("RentResDClass",1,0,"","",RentResr);
    if (nonblank(warning)) then begin
      MessageBox(0,warning);
    end;
  end;
  return;
end;

global
procedure DblCUINStat(string dblstr,string l,Integer currepwn)
BEGIN
  record RcVc RepSpec;
  string 255 tstr;
  
  GetWindowRecord(currepwn,RepSpec);
  tstr = RepSpec.f1;
  ReportDefaults(RepSpec,"INLastSPriceRClass");    
  RepSpec.repname = "INLastSPriceRn";
  RepSpec.f1 = tstr;
  RepSpec.f2 = dblstr;
  RepSpec.long1 = 5;
  RepSpec.ArtMode = 0;
  RepSpec.Media = 6;
  RunReport(RepSpec,1);     
  RETURN;
END;

global
procedure DblSVOSerVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record SVOSerVc SVOSerr;

  if (nonblank(dblstr)) then begin
    SVOSerr.ItemCode = l;
    SVOSerr.SerialNr = dblstr;
    if (ReadFirstMain(SVOSerr,2,true)) then begin  
      wn = OpenWindow("SVOSerDClass",1,0,"","",SVOSerr);
    end; 
  end;
  return;
end;

global
procedure DblQualConVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record QualConVc QualConr;

  if (nonblank(dblstr)) then begin
    QualConr.SerNr = l;
    if (ReadFirstMain(QualConr,1,true)) then begin  
      wn = OpenWindow("QualConDClass",1,0,"","",QualConr);
    end; 
  end;
  return;
end;

global
procedure DblSVOVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record SVOVc SVOr;

  if (nonblank(dblstr)) then begin
    SVOr.SerNr = dblstr;
    if (ReadFirstMain(SVOr,1,true)) then begin  
      wn = OpenWindow("SVODClass",1,0,"","",SVOr);
    end; 
  end;
  return;
end;

global
procedure DblCustPS2(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record IVVc IVr;
  LongInt pos;
  string 255 tstr;

  if (nonblank(dblstr)) then begin
    IVr.SerNr = StringToLongInt(CreateInvoiceNumber(dblstr,""));
    if (ReadFirstMain(IVr,1,true)) then begin  
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
      goto LDblCustPS2;
    end; 
    pos = 0;
    GetNextSubstring(dblstr,pos," (",tstr);
    IVr.OfficialSerNr = tstr;
    if (ReadFirstKey("OfficialSerNr",IVr,1,true)) then begin
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
      goto LDblCustPS2;
    end; 
  end;
LDblCustPS2:;
  return;
end;

global
procedure DblVendPS(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record VIVc VIr;
  record PUVc PUr;
  Integer i,le,j;
  LongInt sernr;
  string 255 t2,t3;

  if (nonblank(l)) then begin
    VIr.SerNr = StringToLongInt(CreateInvoiceNumber(l,""));
    if (ReadFirstMain(VIr,1,true)) then begin  
      wn = OpenWindow("VIDClass",1,0,"","",VIr);
    end; 
  end else begin    
    for (i=0;i<=len(dblstr);i=i+1) begin
      if (Mid(dblstr,i,1)==".") then begin
        le = i-1;
        goto L21DblVendPS;
      end;
    end;
L21DblVendPS:;
    t2 = dblstr;
    t2 = Left(t2,le);
    j = 0;
    for (i=le+2;i<=len(dblstr);i=i+1) begin
      t3 = t3 & Mid(dblstr,i,1);
      j = j + 1;
    end;
    t3 = Left(t3,j-1);
    sernr = StringToLongInt(t3);
    t3 = USetStr(1157);
    if (t3==t2) then begin
      PUr.SerNr = sernr;
      if (ReadFirstMain(PUr,1,true)) then begin
        wn = OpenWindow("PUDClass",1,0,"","",PUr);
      end;
    end;      
  end;
  return;
end;

global
procedure DblAR(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record IVVc IVr;
  Boolean openf;

  if (nonblank(l)) then begin
    IVr.SerNr = StringToLongInt(CreateInvoiceNumber(l,""));
    if (ReadFirstMain(IVr,1,true)) then begin  
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
      goto LDblAR;
    end; 
  end;
  if (nonblank(dblstr)) then begin
    IVr.SerNr = StringToLongInt(CreateInvoiceNumber(dblstr,""));
    if (ReadFirstMain(IVr,1,true)) then begin  
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
      goto LDblAR;
    end; 
  end;
  IVr.OfficialSerNr = FirstInRange(dblstr,30);
  if (ReadFirstKey("OfficialSerNr",IVr,1,true)) then begin
    wn = OpenWindow("IVDClass",1,0,"","",IVr);
    goto LDblAR;
  end;     
LDblAR:;
  return;
end;

global
procedure DblAP(string dblstr,string l,Integer currepwn)
begin
  Integer wn,i;
  record VIVc VIr;
  record OPVc OPr;
  string 255 t2;

  if (nonblank(l)) then begin
    OPr.SerNr = StringToLongInt(CreateInvoiceNumber(l,""));
    if (ReadFirstMain(OPr,1,true)) then begin  
      wn = OpenWindow("OPDClass",1,0,"","",OPr);
    end; 
  end else begin
    for (i=0;i<=len(dblstr);i=i+1) begin
      if (Mid(dblstr,i,1)=="(") then begin goto LDblAP; end;
      t2 = t2 & Mid(dblstr,i,1);
    end;
LDblAP:;    
    t2 = Left(t2,i-1);
    VIr.SerNr = StringToLongInt(t2);
    if (ReadFirstMain(VIr,1,true)) then begin  
      wn = OpenWindow("VIDClass",1,0,"","",VIr);
    end; 
  end;
  return;
end;

global
procedure DblContactAct(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record ActVc Actr;
  record CUVc CUr;

  if (nonblank(l)) then begin
    Actr.SerNr = StringToLongInt(l);
    if (ReadFirstMain(Actr,1,true)) then begin  
      if (FindCustomerRelation(Actr.CUCode,Actr.Contact,CUr)) then begin
        wn = OpenWindow("CUDClass",1,0,"","",CUr);
      end else begin
        CUr.Code = Actr.CUCode;
        if (ReadFirstMain(CUr,1,true)) then begin
          wn = OpenWindow("CUDClass",1,0,"","",CUr);
        end;
      end;
    end;
  end;
  return;
end;

global
procedure DblLiquid(string dblstr,string dblstr2,Integer currepwn)
begin
  Integer wn;
  Integer i,l,j;
  LongInt sernr,ser1;
  string 255 t2,t3,t4,js;
  record IVVc IVr;
  record VIVc VIr;
  record SMVc SMr;
  record IPVc IPr;
  record TRVc TRr;
  record OPVc OPr;
  record CheckVc Checkr;
  record OwnCheckVc OwnCheckr;
  record CLInVc CLInr;
  record CLOutVc CLOutr;
  record CredManVc CredManr;

  for (i=0;i<=len(dblstr);i=i+1) begin
    if (Mid(dblstr,i,1)==":") then begin
      l = i;
      goto L20DblLiquid;
    end;
  end;
L20DblLiquid:;
  t2 = dblstr;
  t2 = Left(t2,l);
  j = 0;
  for (i=l+1;i<=len(dblstr);i=i+1) begin
    t3 = t3 & Mid(dblstr,i,1);
    j = j + 1;
  end;
  t3 = Left(t3,j-1);

  sernr = StringToLongInt(t3);
  t4 = t3;
  if (t2==USetStr(1150)) then begin      //Invoices
    IVr.SerNr = sernr; 
    if (ReadFirstMain(IVr,1,true)) then begin
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
      goto LDblLiquid;
    end;
    IVr.OfficialSerNr = t3; 
    if (ReadFirstKey("OfficialSerNr",IVr,1,true)) then begin
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1324)) then begin
    IVr.SerNr = sernr;
    if (ReadFirstMain(IVr,1,true)) then begin
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
      goto LDblLiquid;
    end;
    IVr.OfficialSerNr = t3; 
    if (ReadFirstKey("OfficialSerNr",IVr,1,true)) then begin
      wn = OpenWindow("IVDClass",1,0,"","",IVr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1152) or t2==USetStr(11372)) then begin      
    VIr.SerNr = sernr;
    if (ReadFirstMain(VIr,1,true)) then begin
      wn = OpenWindow("VIDClass",1,0,"","",VIr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1154)) then begin      
    SMr.SerNr = sernr;
    if (ReadFirstMain(SMr,1,true)) then begin
      wn = OpenWindow("SMDClass",1,0,"","",SMr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1151)) then begin      
    IPr.SerNr = sernr;
    if (ReadFirstMain(IPr,1,true)) then begin
      wn = OpenWindow("IPDClass",1,0,"","",IPr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(2530)) then begin      
    StrToYcNr(t4,js,ser1);
    TRr.IntYc = StrToYc(js);
    TRr.Number = ser1;
    if (ReadFirstMain(TRr,2,true)) then begin
      wn = OpenWindow("TRDClass",1,0,"","",TRr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1153)) then begin      
    OPr.SerNr = sernr;
    if (ReadFirstMain(OPr,1,true)) then begin
      wn = OpenWindow("OPDClass",1,0,"","",OPr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1423)) then begin      
    Checkr.SerNr = sernr;
    if (ReadFirstMain(Checkr,1,true)) then begin
      wn = OpenWindow("CheckDClass",1,0,"","",Checkr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1429)) then begin      
    OwnCheckr.SerNr = sernr;
    if (ReadFirstMain(OwnCheckr,1,true)) then begin
      wn = OpenWindow("OwnCheckDClass",1,0,"","",OwnCheckr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1193)) then begin      
    CLInr.SerNr = sernr;
    if (ReadFirstMain(CLInr,1,true)) then begin
      wn = OpenWindow("CLInDClass",1,0,"","",CLInr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1194)) then begin      
    CLOutr.SerNr = sernr;
    if (ReadFirstMain(CLOutr,1,true)) then begin
      wn = OpenWindow("CLOutDClass",1,0,"","",CLOutr);
    end;
    goto LDblLiquid;
  end;
  if (t2==USetStr(1635)) then begin      
    CredManr.SerNr = sernr;
    if (ReadFirstMain(CredManr,1,true)) then begin
      wn = OpenWindow("CredManDClass",1,0,"","",CredManr);
    end;
    goto LDblLiquid;
  end;
LDblLiquid:;
  return;
end;


global
procedure DblOpenPres(string dblstr,string l,Integer currepwn)
begin
  LongInt ll;

  if (nonblank(l)) then begin
    ll = l;
    OpenPresentation(ll);
  end;
  return;
end;

global
procedure DblAdvPrRentQT(string dblstr,string l,Integer currepwn)
begin
  record AdvPriceRecVc AdvPriceRecr;
  Integer wn;

  AdvPriceRecr.SerNr = FirstInRange(l,10);
  AdvPriceRecr.RowNr = StringToInt(LastInRange(l,10));
  AdvPriceRecr.FileName = "RentQTVc";
  if (ReadFirstMain(AdvPriceRecr,3,true)) then begin
    wn = OpenWindow("AdvPriceRecDClass",0,0,"","",AdvPriceRecr);
  end;
  return;
end;

global
procedure DblWHCertVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  record WHCertificateVc WHCertr;
  string 255 tstr;

  if (nonblank(l)) then begin
    tstr = l;
  end else begin
    tstr = dblstr;
  end;
  if (nonblank(tstr)) then begin
    WHCertr.SerNr = LastInRange(tstr,10);
    if (ReadFirstMain(WHCertr,1,true)) then begin  
      wn = OpenWindow("WHCertificateDClass",1,0,"","",WHCertr);
    end; 
  end;
  return;
end;

global
procedure DblCourseEventVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  Longint afr;
  record CourseEventVc CourseEventr;
  Integer oldcomp;

  oldcomp = CurrentCompany;  
  if (nonblank(l)) then begin
    SetCompanyCode(l,false);        
  end;
  afr = FirstInRange(dblstr,10);
  CourseEventr.SerNr = afr;
  if (ReadFirstMain(CourseEventr,1,true)) then begin
    wn = OpenWindow("CourseEventDClass",1,0,"","",CourseEventr);
  end;     
  if (nonblank(l)) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure DblCourseVc(string dblstr,string l,Integer currepwn)
begin
  Integer wn;
  Longint afr;
  record CourseVc Courser; 
  Integer oldcomp;

  oldcomp = CurrentCompany;  
  if (nonblank(l)) then begin
    SetCompanyCode(l,false);        
  end;
  Courser.Code = dblstr;
  if (ReadFirstMain(Courser,1,true)) then begin
    wn = OpenWindow("CourseDClass",1,0,"","",Courser);
  end;     
  if (nonblank(l)) then begin
    ResetCompany(oldcomp);
  end;
  return;
end;

global
procedure DblCountryJournal(string dblstr,string l,Integer currepwn)
begin
  record RcVc RepSpec;
  Integer wn;
  
  GetWindowRecord(currepwn,RepSpec);
  RepSpec.f2 = l;
  RunReport(RepSpec,0);
  
  return;
end;

global
procedure DblSalesManJournal(string dblstr,string l,Integer currepwn)
begin
  record RcVc RepSpec;
  Integer wn;
  
  GetWindowRecord(currepwn,RepSpec);
  RepSpec.f3 = dblstr;
  RunReport(RepSpec,0);
  
  return;
end;

