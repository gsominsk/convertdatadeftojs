external function Boolean DateOverlaps(Date,Date,Date,Date); 
external function LongInt DateDiff(Date,Date);

global
procedure ResAvNumberOfDays(var record ResAvVc ResAvr)
begin
  ResAvr.NrOfDays = DateDiff(ResAvr.EndDate,ResAvr.TransDate);
  if (ResAvr.NrOfDays<1) then begin
    ResAvr.NrOfDays = -1;
  end;
  return;
end;

global
procedure ResAvSumup(var record ResAvVc ResAvr)
BEGIN
  row ResAvVc ResAvrw;  
  Integer i,rwcnt;
  LongInt pers,rowpers;

  pers = 0;
  ResAvr.AgentSum4 = blankval;
  ResAvr.PubSum4 = blankval;
  ResAvr.TotPersons = 0;
  ResAvNumberOfDays(ResAvr);
  rwcnt = MatRowCnt(ResAvr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ResAvr,i,ResAvrw);
    ResAvr.AgentSum4 = ResAvr.AgentSum4 + ResAvrw.AgentSum;
    ResAvr.PubSum4 = ResAvr.PubSum4 + ResAvrw.PubSum;
    rowpers = 0;
    if (ResAvrw.Persons<>-1) then begin rowpers =  ResAvrw.Persons; end;
    if (nonblankdate(ResAvrw.TransDate) and nonblankdate(ResAvrw.EndDate)) then begin
      if (DateOverlaps(ResAvr.TransDate,ResAvr.EndDate,ResAvrw.TransDate,ResAvrw.EndDate)==false) then begin
        rowpers = 0;
      end;
    end;
    pers = pers + rowpers;
  end;
  ResAvr.TotPersons = pers;
  RETURN;
END;

global
procedure ResAvRowSumup(record ResAvVc ResAvr,Integer rownr)
begin
  row ResAvVc ResAvrw;
  LongInt nrdays;
  
  if (rownr>-1) then begin
    MatRowGet(ResAvr,rownr,ResAvrw);
    nrdays = ResAvr.NrOfDays;
    if (ResAvrw.NrOfDays>0) then begin
      nrdays = ResAvrw.NrOfDays;
    end;
    if (nrdays<1) then begin
      nrdays = 1;
    end;
    ResAvrw.AgentSum = ResAvrw.AgentPrice*ResAvrw.QtyWanted*nrdays;
    ResAvrw.PubSum = ResAvrw.PubPrice*ResAvrw.QtyWanted*nrdays;
    MatRowPut(ResAvr,rownr,ResAvrw);
  end;
  return;
end;
