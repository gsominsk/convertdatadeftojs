external function string 20 FindJobCustomerCode(record JobVc);
external function string 60 FindJobCustomerName(record JobVc);
external function string 255 FindINObjects(string,string);
external function Boolean PasteCustInInv(var record IVVc);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure IVSumup(var record IVVc,Boolean);
external function LongInt FindReservation(string,Date,Time);

global
procedure RestBookingVc_PasteResCode(var record RestBookingVc RestBookingr)
begin
  record JobVc Jobr;
  record ResVc Resr;

  Jobr.SerNr = FindReservation(RestBookingr.ResCode,RestBookingr.BookDate,RestBookingr.BookStart);
  if (ReadFirstMain(Jobr,1,true)) then begin
    RestBookingr.ResCode = Jobr.ResCode;
    RestBookingr.CUCode = FindJobCustomerCode(Jobr);
    RestBookingr.CUName = FindJobCustomerName(Jobr);
    RestBookingr.Contact = Jobr.CustContact;    
  end;
  Resr.Code = RestBookingr.ResCode;
  ReadFirstMain(Resr,1,true);
  RestBookingr.ResLoc = Resr.ResLoc;
  return;
end;

global
updating function Boolean CreateTabInvoice(var Record IVVc IVr,Record RestAccVc Tabr)
begin
  Row RestAccVc Tabrw;
  Row IVVc IVrw;
  Record INVc INr;
  Integer wn,rwcnt,i,ivcnt;
  Val t;
  record GeneralOptionBlock GenOptRec;
  Boolean res;

  res = false;
  BlockLoad(GenOptRec);
  RecordNew(IVr);
  IVr.InvDate = CurrentDate;
  IVr.TransDate = CurrentDate;
  IVr.OKFlag  = 0;
  IVr.InvType = 0;
  IVr.LastRemndr = 0;
  IVr.CustCode   = Tabr.CUCode;
  if PasteCustInInv(IVr) then begin
  end;
  rwcnt = MatRowCnt(Tabr);
  for(i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Tabr,i,Tabrw);      
    ClearRow(IVr,IVrw,Tabrw.stp);
    IVrw.stp = Tabrw.stp;
    switch (Tabrw.stp) begin
//jjbartab    
      case 1:
        IVrw.ArtCode = Tabrw.ArtCode;
        IVrw.VATCode   = Tabrw.VATCode;
        INr.Code   = Tabrw.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin
          IVrw.Spec      = Tabrw.Spec;
          IVrw.Objects   = FindINObjects(INr.Objects,INr.Group);
          if (blank(IVrw.VATCode)) then begin
            IVrw.VATCode   = INr.VATCode;
          end;
          IVrw.SalesAcc  = INr.SalesAcc;
    //GetItemPriceDiscount????      
        end;
        IVrw.Quant     = Tabrw.Quant;
        IVrw.Price     = Tabrw.Price;
        IVrw.BasePrice = Tabrw.Price;
        CalcSum(IVrw.Quant,IVrw.Price,IVrw.PriceFactor,IVrw.vRebate,t,GenOptRec.UseDiscount);  
        IVrw.Sum   = t;
        IVrw.rowGP = 0;
      case 3:
        IVrw.ArtCode = Tabrw.ArtCode;
        IVrw.VATCode   = Tabrw.VATCode;
        INr.Code   = Tabrw.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin
          IVrw.Spec      = Tabrw.Spec;
          IVrw.Objects   = FindINObjects(INr.Objects,INr.Group);
          if (blank(IVrw.VATCode)) then begin
            IVrw.VATCode   = INr.VATCode;
          end;
          IVrw.SalesAcc  = INr.SalesAcc;
    //GetItemPriceDiscount????      
        end;
        IVrw.Quant     = -Tabrw.Quant;
        IVrw.Price     = Tabrw.Price;
        IVrw.BasePrice = Tabrw.Price;
        CalcSum(IVrw.Quant,IVrw.Price,IVrw.PriceFactor,IVrw.vRebate,t,GenOptRec.UseDiscount);  
        IVrw.Sum   = t;
        IVrw.rowGP = 0;
      case kInvoiceRowTypeGiftVoucherPayment:
        IVrw.Spec = Tabrw.Spec;
        IVrw.PayMode = Tabrw.PayMode;
        IVrw.Sum = t;
      case kInvoiceRowTypeCashPayment:
        IVrw.Spec = Tabrw.Spec;
        IVrw.PayMode = Tabrw.PayMode;
        IVrw.Sum = t;
      case kInvoiceRowTypeLoyaltyPointsPayment:
        IVrw.Spec = Tabrw.Spec;
        IVrw.PayMode = Tabrw.PayMode;
        IVrw.Sum = t;
      case kInvoiceRowTypeChequePayment:
        IVrw.Spec = Tabrw.Spec;
        IVrw.PayMode = Tabrw.PayMode;
        IVrw.Sum = t;
      case kInvoiceRowTypeCreditCardPayment:
        IVrw.Spec = Tabrw.Spec;
        IVrw.PayMode = Tabrw.PayMode;
        IVrw.Sum = t;
    end;
    MatRowPut(IVr,ivcnt,IVrw);
    ivcnt = ivcnt + 1;
  end;
  IVr.Sorting = USetStr(10488) & " " & Tabr.TipValue;
  IVSumup(IVr,true);
  IVr.SerNr = NextSerNr("IVVc",IVr.TransDate,-1,false,IVr.LangCode);            
  if (RecordStore(IVr,false)) then begin
    res = true;
  end;
  CreateTabInvoice = res;
  return;
end;

