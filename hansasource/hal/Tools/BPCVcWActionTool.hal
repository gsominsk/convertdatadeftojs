external function val CalculateTotalVATFromTaxMatrix(record TaxMatrixVc,Integer);
external procedure RowCalculateTaxMatrix_BPCVc(var record BPCVc,Integer,row BPCVc);
external function string 255 OverrideTaxMatrix(string,var record TaxMatrixVc);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external function Boolean GetFirstItem(var string,var record INVc);

global
function Boolean BPCVc_PasteArtCode(var record BPCVc BPCp,Integer rownr,var string errstr)
BEGIN
  Boolean res;
  record INVc INr;
  row BPCVc BPCrw;
  
  MatRowGet(BPCp,rownr,BPCrw);
  if (GetFirstItem(BPCrw.ArtCode,INr)) then begin
    res = true;
    if (nonblank(INr.WarnText1)) then begin
      errstr = INr.WarnText1;
    end;
    BPCrw.ArtCode = INr.Code;
    BPCrw.Spec = INr.Name;
    BPCrw.UnitCode = INr.Unittext;
    BPCrw.BasePriceBefore = INr.UPrice1;
    BPCrw.VATCode = INr.VATCode;
    MatRowPut(BPCp,rownr,BPCrw);
  end else begin
    res = false;
  end;
  BPCVc_PasteArtCode = res;
  RETURN;
END;

global
procedure BPCchrsum(var record BPCVc BPCr,Integer rownr,string field)
begin  
  row BPCVc BPCrw;
  val vatv,t1;
  record CYBlock CYb;
  record TaxMatrixVc TMr;
  
  BlockLoad(CYb);
  MatRowGet(BPCr,rownr,BPCrw);
  if (nonblank(BPCrw.ArtCode)) then begin
    BPCrw.PurSum = BPCrw.Qty*BPCrw.PurPrice + BPCrw.Qty*BPCrw.PurExtraCost;
    switch (field) begin
      case "BasePriceAfterSumInclVAT":
        BPCrw.BasePriceAfterInclVAT = BPCrw.BasePriceAfterSumInclVAT/BPCrw.Qty;
        if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
          RowCalculateTaxMatrix_BPCVc(BPCr,rownr,BPCrw);
          UnpackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
          BPCrw.VATSum = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
        end else begin
          MulVATIV(BPCrw.VATCode,BPCrw.BasePriceAfterSumInclVAT,BPCrw.VATSum,t1,2,0);
        end;
        BPCrw.BasePriceAfterSum = BPCrw.BasePriceAfterSumInclVAT;
        if (BPCr.InclVAT==0) then begin
          BPCrw.BasePriceAfterSum = BPCrw.BasePriceAfterSum - BPCrw.VATSum;
         end;
        BPCrw.BasePriceAfter = BPCrw.BasePriceAfterSum/BPCrw.Qty;
        BPCrw.MarginPerc = BPCrw.BasePriceAfterSum - BPCrw.PurSum;
        BPCrw.MarginPerc = (BPCrw.MarginPerc/BPCrw.PurSum)*100.00;
      case "BasePriceAfterSum":
        BPCrw.BasePriceAfter = BPCrw.BasePriceAfterSum/BPCrw.Qty;
        if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
          RowCalculateTaxMatrix_BPCVc(BPCr,rownr,BPCrw);
          UnpackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
          BPCrw.VATSum = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
        end else begin
          MulVATIV(BPCrw.VATCode,BPCrw.BasePriceAfterSum,BPCrw.VATSum,t1,BPCr.InclVAT,0);
        end;
        BPCrw.BasePriceAfterSumInclVAT = BPCrw.BasePriceAfterSum;
        if (BPCr.InclVAT==0) then begin
          BPCrw.BasePriceAfterSumInclVAT = BPCrw.BasePriceAfterSumInclVAT + BPCrw.VATSum;
        end;
        BPCrw.BasePriceAfterInclVAT = BPCrw.BasePriceAfterSumInclVAT/BPCrw.Qty;

        BPCrw.MarginPerc = BPCrw.BasePriceAfterSum - BPCrw.PurSum;
        BPCrw.MarginPerc = (BPCrw.MarginPerc/BPCrw.PurSum)*100.00;
      case "BasePriceAfterInclVAT":
        BPCrw.BasePriceAfterSumInclVAT = BPCrw.Qty*BPCrw.BasePriceAfterInclVAT;
        if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
          RowCalculateTaxMatrix_BPCVc(BPCr,rownr,BPCrw);
          UnpackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
          BPCrw.VATSum = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
        end else begin
          MulVATIV(BPCrw.VATCode,BPCrw.BasePriceAfterSumInclVAT,BPCrw.VATSum,t1,2,0);
        end;
        BPCrw.BasePriceAfterSum = BPCrw.BasePriceAfterSumInclVAT;
        if (BPCr.InclVAT==0) then begin
          BPCrw.BasePriceAfterSum = BPCrw.BasePriceAfterSum - BPCrw.VATSum;
        end;
        BPCrw.BasePriceAfter = BPCrw.BasePriceAfterSum/BPCrw.Qty;
        BPCrw.MarginPerc = BPCrw.BasePriceAfterSum - BPCrw.PurSum;
        BPCrw.MarginPerc = (BPCrw.MarginPerc/BPCrw.PurSum)*100.00;
      case "BasePriceAfter":
        BPCrw.BasePriceAfterSum = BPCrw.Qty*BPCrw.BasePriceAfter;
        if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
          RowCalculateTaxMatrix_BPCVc(BPCr,rownr,BPCrw);
          UnpackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
          BPCrw.VATSum = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
        end else begin
          MulVATIV(BPCrw.VATCode,BPCrw.BasePriceAfterSum,BPCrw.VATSum,t1,BPCr.InclVAT,0);
        end;
        BPCrw.BasePriceAfterSumInclVAT = BPCrw.BasePriceAfterSum;
        if (BPCr.InclVAT==0) then begin
          BPCrw.BasePriceAfterSumInclVAT = BPCrw.BasePriceAfterSumInclVAT + BPCrw.VATSum;
        end;
        BPCrw.BasePriceAfterInclVAT = BPCrw.BasePriceAfterSumInclVAT/BPCrw.Qty;
        BPCrw.MarginPerc = BPCrw.BasePriceAfterSum - BPCrw.PurSum;
        BPCrw.MarginPerc = (BPCrw.MarginPerc/BPCrw.PurSum)*100.00;
      otherwise
        BPCrw.BasePriceAfterSum = BPCrw.PurSum + (BPCrw.PurSum*BPCrw.MarginPerc)/100.00;
        BPCrw.BasePriceAfter = BPCrw.BasePriceAfterSum/BPCrw.Qty;
        if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
          RowCalculateTaxMatrix_BPCVc(BPCr,rownr,BPCrw);
          UnpackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
          BPCrw.VATSum = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
        end else begin
          MulVATIV(BPCrw.VATCode,BPCrw.BasePriceAfterSum,BPCrw.VATSum,t1,BPCr.InclVAT,0);
        end;
        BPCrw.BasePriceAfterSumInclVAT = BPCrw.BasePriceAfterSum;
        if (BPCr.InclVAT==0) then begin
          BPCrw.BasePriceAfterSumInclVAT = BPCrw.BasePriceAfterSumInclVAT + BPCrw.VATSum;
        end;
        BPCrw.BasePriceAfterInclVAT = BPCrw.BasePriceAfterSumInclVAT/BPCrw.Qty;
    end;
/*    
    if (BPCrw.PriceFactor!=0) then begin
      t = t/BPCrw.PriceFactor;
    end;
*/    
  end else begin
  end;
  MatRowPut(BPCr,rownr,BPCrw);
  return;
end;

global
procedure BPCVc_PasteTaxTemplateCode(var record BPCVc BPCr,Integer rownr)
begin
  row BPCVc BPCrw;
  record TaxMatrixVc TMr;
  
  MatRowGet(BPCr,rownr,BPCrw);
  BPCrw.TaxTemplateCode = OverrideTaxMatrix(BPCrw.TaxTemplateCode,TMr);
  PackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
  MatRowPut(BPCr,rownr,BPCrw);
  RowCalculateTaxMatrix_BPCVc(BPCr,rownr,BPCrw);
  MatRowPut(BPCr,rownr,BPCrw);
  return;
end;

