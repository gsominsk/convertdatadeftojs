external function Boolean HasBase2();
external function Boolean HasModSL();
external function Boolean HasMultiCurrency();
external function Boolean DefTest(Date);

global
procedure HTAmount(Integer amount, var string res)
begin
  
  res = "";
  if (ProgramType<>4 and (HasMultiCurrency or HasBase2)) then begin
    if (amount==0) then begin
      res = USetStr(1184);
    end;
    if (amount==1) then begin
      res = USetStr(1185);
    end;
  end;
  return;
end;

global
procedure HTVatNr(string vat, var string res)
begin
  if (nonblank(vat)) then begin
   res = USetStr(3024);
   res = res & vat;
  end else begin
   res = "";
  end;
return;
end;

global
procedure HTAccount(Integer acc, var string tstr)
begin
  switch (acc) begin
    case 0: tstr = USetStr(3005);
    case 1: tstr = USetStr(3028);
    case 2: tstr = USetStr(3021);
    case 3: tstr = USetStr(3026);
    case 4: tstr = USetStr(3006);
  end;
  return;
end;

global
procedure HTVATTypes(Integer exc,Integer inc, var string res)
begin
  string 255 tstr;

  res = "";
  if (exc==1) then begin
   res = USetStr(1318);
  end;
  if (exc==1 and inc==1) then begin
   tstr = USetStr(1319);
   res = res & tstr;
  end;
  if (inc==1) then begin
   tstr = USetStr(1320);
   res = res & tstr;
  end;
  if (exc==0 and inc==0) then begin
   tstr = USetStr(1321);
   res = res & tstr;
  end;
  tstr = USetStr(1322);
  res = res & tstr;
return;
end;

global
procedure HTInvLTypes(Integer norm,Integer cred,var string res)
begin
  string 255 tstr;

  res = "";
  if (norm==1) then begin
   res = USetStr(1323);
  end;
  if (norm==1 and cred==1) then begin
   tstr = USetStr(1319);
   res = res & tstr;
  end;
  if (cred==1) then begin
   tstr = USetStr(1324);
   res = res & tstr;
  end;
  if (cred==0 and norm==0) then begin
   tstr = USetStr(1321);
   res = res & tstr;
  end;
  tstr = USetStr(1325);
  res = res & tstr;
return;
end;

procedure HTInvTypesAddPunctuation(Integer typecnt,var Integer typesaddedcnt,var string res)
begin
  if (typecnt<=1) then begin
    goto LHTInvTypesAddPunctuation;
  end;
  
  typesaddedcnt = typesaddedcnt + 1;
  if (typesaddedcnt>=typecnt) then begin
    goto LHTInvTypesAddPunctuation;
  end;
  
  if (typecnt<=2) then begin
    res = res & USetStr(1319);
  end else begin
    if (typesaddedcnt==typecnt - 1) then begin
      res = res & USetStr(1319);
    end else begin
      res = res & USetStr(1327);
    end;
  end;
  
LHTInvTypesAddPunctuation:;
end;

global
procedure HTInvTypes2(Integer inv,Integer cash,Integer cred,Integer intr,Integer posinv,Integer bartab,var string res)
begin
  String 255 tstr;
  Integer typecnt,typesaddedcnt;

  res = "";
  typesaddedcnt = 0;
  typecnt = inv + cash + cred + intr + posinv + bartab;
  if (inv==1) then begin
    res = USetStr(1330);
    HTInvTypesAddPunctuation(typecnt,typesaddedcnt,res);
  end;
  if (cash==1) then begin
    tstr = USetStr(1331);
    res = res & tstr;
    HTInvTypesAddPunctuation(typecnt,typesaddedcnt,res);
  end;
  if (cred==1) then begin
    tstr = USetStr(1332);
    res = res & tstr;
    HTInvTypesAddPunctuation(typecnt,typesaddedcnt,res);
  end;
  if (intr==1) then begin
    tstr = USetStr(1333);
    res = res & tstr;
    HTInvTypesAddPunctuation(typecnt,typesaddedcnt,res);
  end;
  if (posinv==1) then begin
    tstr = USetStr(2647);
    res = res & tstr;
    HTInvTypesAddPunctuation(typecnt,typesaddedcnt,res);
  end;
  if (bartab==1) then begin
    tstr = USetStr(19602);
    res = res & tstr;
    HTInvTypesAddPunctuation(typecnt,typesaddedcnt,res);
  end;
end;

global
procedure HTInvTypes(Integer inv,Integer cash,Integer cred,Integer intr,var string res)
begin
  HTInvTypes2(inv,cash,cred,intr,0,0,res);
end;

global
procedure HTPers(string a,var string res)
begin
  res = "";
  if (nonblank(a)) then begin
    res = USetStr(4830);
    res = res & " " & a;
  end else begin
    res = USetStr(6809);
  end;
return;
end;

global
procedure HTPersons(string a,string b,var string res)
begin
  if (blank(a) and blank(b)) then begin
    res = USetStr(9200);
  end else begin
    if (a==b) then begin 
      res = USetStr(9201) & " ";
    end else begin 
      res = USetStr(9202) & " ";
    end;
    res = res & a;
    if (a <> b) then begin
      res = res & " : " & b;
    end;
  end;
  return;
end;

global
procedure HTSupplier(string a, var string res)
begin
  res = "";
  if (nonblank(a)) then begin
   res = USetStr(1213);
   res = res & a;
  end;
return;
end;

global
procedure HTSuppliers(string a, string b, var string res)
begin
  if (blank(a) and blank(b)) then begin
     res = USetStr(1212);
  end else begin
     res = USetStr(1213);
     res = res & " " & a;
     if (a <> b) then begin
        res = res & " : " & b;
     end;
  end;
  return;
end;

procedure HTHistoryLevel(Integer lev,var string tstr)
begin
  if (lev==0) then begin
   tstr = USetStr(1159);
  end;
  if (lev==1) then begin
   tstr = USetStr(1161);
  end;
return;
end;

global
procedure HTInv(String str, var string res)
begin
  String 255 tstr;
  LongInt a;
  LongInt b;

  a = FirstInRange(str,20);
  b = LastInRange(str,20);
  if (a==-1 and b==-1) then begin
   res = USetStr(1111);
  end else begin
   res = USetStr(1112);
   tstr = "" & a;
   res = res & tstr;
   if (a<>b) then begin
    res = res & " : " & b;
   end;
  end;
  return;
end;

global
procedure HTRestAcc(String str, var string res)
begin
  String 255 tstr;
  LongInt a;
  LongInt b;

  a = FirstInRange(str,20);
  b = LastInRange(str,20);
  if (a==-1 and b==-1) then begin
    res = USetStr(19601);
  end else begin
    res = USetStr(19602);
    tstr = ": " & a;
    res = res & tstr;
    if (a<>b) then begin
      res = res & " : " & b;
    end;
  end;
  return;
end;

global
procedure HTInvFrom(Integer NrOf,Integer mode, Date d, var string res)
begin
  if (mode==0) then begin
    if (HasModSL) then begin
      if (NrOf==0) then begin
        res = "" & NrOf & USetStr(1175);
      end else begin
        res = "" & "5" & USetStr(1175);
      end;
    end;
  end else begin
    if (blankdate(d)) then begin
      res = USetStr(1111);
    end else begin
      res = USetStr(3501);
      res = res & d;
    end;
  end;
  return;
end;

global
procedure HTAccPer(Date a,Date b,var string res)
BEGIN
  string 255 tstr;

  tstr = PackStrDate(a);
  res = USetStr(3025);
  res = res & tstr;
  res = res & " : ";
  tstr = PackStrDate(b);
  res = res & tstr;
  if (DefTest(b)==true) then begin
    tstr = USetStr(3014);
    res = res & tstr;
  end;
  RETURN;
END;

global
procedure HTSupps(string a,string b,var string res)
BEGIN
  if (blank(a) and blank(b)) then begin
    res = USetStr(1212);
  end else begin
    res = USetStr(1213);
    res = res & a;
    if (a!=b) then begin
      res = res & " : ";
      res = res & b;
    end;
  end;
  RETURN;
END;

global
procedure HTSuppGroup(string a,var string res)
BEGIN
  res = "";
  if (nonblank(a)) then begin
    res = USetStr(26390) & ": " & a;
  end;
  RETURN;
END;

global
procedure HTNr(Integer t1, Integer t2, LongInt a, LongInt b, var string tstr)
begin
  if (a == -1 and b == -1) then begin
    tstr = USetStr(t1);
  end else begin
    tstr = USetStr(t2);
    tstr = tstr & " ";
    tstr = tstr & a;
    if (a<>b) then begin
      tstr = tstr & " : ";
      tstr = tstr & b;
    end;
  end;
return;
end;

global
procedure HTValuesIn(Integer basecurncy,var string res)
begin
  record BaseCurBlock bcr
  
  res = USetStr(2513) & ": ";  
  BlockLoad(bcr);
  switch (basecurncy) begin
    case 0: res = res & USetStr(2514);
    case 1: res = res & bcr.BaseCur1;
    case 2: res = res & bcr.BaseCur2;
  end;
  return;
end;

global
procedure HTCourses(string a, string b, var string res)
begin
  if (blank(a) and blank(b)) then begin
     res = USetStr(17006);
  end else begin
     res = USetStr(17007);
     res = res & " " & a;
     if (a <> b) then begin
        res = res & " : " & b;
     end;
  end;
  return;
end;

global
procedure HTCourseEvents(string a, string b, var string res)
begin
  if (blank(a) and blank(b)) then begin
     res = USetStr(17008);
  end else begin
     res = USetStr(17009);
     res = res & " " & a;
     if (a <> b) then begin
        res = res & " : " & b;
     end;
  end;
  return;
end;

global
procedure HTApprovalStatus(Integer pend,Integer appr,Integer rjct,Integer notneed,Integer canc,var string res)
begin
  string 255 tstr;

  res = "";
  if (pend!=0) then begin
    res = USetStr(28421);
  end;
  tstr = "";
  if (appr!=0) then begin
    tstr = USetStr(28422);
  end;
  if (nonblank(res)) then begin
    if (nonblank(tstr)) then begin
      res = res & "," & tstr;
    end;
  end else begin
    res = tstr;
  end;
  tstr = "";
  if (rjct!=0) then begin
    tstr = USetStr(28423);
  end;
  if (nonblank(res)) then begin
    if (nonblank(tstr)) then begin
      res = res & "," & tstr;
    end;
  end else begin
    res = tstr;
  end;
  tstr = "";
  if (notneed!=0) then begin
    tstr = USetStr(28424);
  end;
  if (nonblank(res)) then begin
    if (nonblank(tstr)) then begin
      res = res & "," & tstr;
    end;
  end else begin
    res = tstr;
  end;
  tstr = "";
  if (canc!=0) then begin
    tstr = USetStr(28432);
  end;
  if (nonblank(res)) then begin
    if (nonblank(tstr)) then begin
      res = res & "," & tstr;
    end;
  end else begin
    res = tstr;
  end;
  return;
end;
