external function Boolean GetFirstItem(var string,var record INVc);
external function string 255 FindPositionWithSerialNr(string,string,string,string);
external function Boolean SerialNrForOneItem(string,var record SerBalVc);
external function val CalculateSerialNrQuantity(string,string,string,Boolean,val,val,val,val);
external function Integer CheckSerialStatus(string,string,var string);
external procedure SerialNrDimensions(string,string,var val,var val,var val);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean FindItemVAR(string,var string,var string,var string,var string);

global
function Boolean StockTakeVc_PasteArtCode_iPhone(var record StockTakeVc StockTakep,var record RcVc RepSpec,Integer changed,var string inwarn)
BEGIN
  Boolean res;
  record INVc INr;
  string 60 sz,msk,mskrep;
  string 200 varsubset;

  if ((changed!=0) or ((blank(RepSpec.f2)) and (nonblank(RepSpec.f1)))) then begin
    res = true;
    if (ReadFirstItem(RepSpec.f1,INr,true,true)) then begin
      if (FindItemVAR(INr.Code,sz,msk,mskrep,varsubset)) then begin
        INr.Code = RepSpec.f1;
      end;
      if (nonblank(INr.WarnText1)) then begin
        inwarn = INr.WarnText1;
      end;
      RepSpec.vals0 = INr.UnitCoefficient;
      RepSpec.f1 = INr.Code;
      RepSpec.f2 = INr.Name;
      RepSpec.vals4 = INr.UPrice1;
//      StockTakerw.Objects = FindINObjects(INr.Objects,INr.Group);
      RepSpec.vals1 = INr.Width;
      RepSpec.vals2 = INr.Height;
      RepSpec.vals3 = INr.Depth;
    end;
  end;
  StockTakeVc_PasteArtCode_iPhone = res;
  RETURN;
END;
  
global
function Boolean StockTakeVc_PasteArtCode(var record StockTakeVc StockTakep,Integer rownr,Integer changed,var string inwarn)
BEGIN
  Boolean res,itemfound;
  record INVc INr;
  row StockTakeVc StockTakerw;
  string 60 sz,msk,mskrep;
  string 200 varsubset;

  MatRowGet(StockTakep,rownr,StockTakerw);  
  if ((changed!=0) or ((blank(StockTakerw.Spec)) and (nonblank(StockTakerw.ArtCode)))) then begin
    res = true;
    itemfound = GetFirstItem(StockTakerw.ArtCode,INr);
    if (itemfound==false) then begin
      itemfound = ReadFirstItem(StockTakerw.ArtCode,INr,true,true);
      if (FindItemVAR(INr.Code,sz,msk,mskrep,varsubset)) then begin
        INr.Code = StockTakerw.ArtCode;
      end;
    end;
    if (itemfound) then begin
      if (nonblank(INr.WarnText1)) then begin
        inwarn = INr.WarnText1;
      end;
      StockTakerw.Coefficient = INr.UnitCoefficient;
      StockTakerw.ArtCode = INr.Code;
      StockTakerw.Spec = INr.Name;
      StockTakerw.BasePrice = INr.UPrice1;
//      StockTakerw.Objects = FindINObjects(INr.Objects,INr.Group);
      StockTakerw.UnitXval = INr.Width;
      StockTakerw.UnitYval = INr.Height;
      StockTakerw.UnitZval = INr.Depth;
      MatRowPut(StockTakep,rownr,StockTakerw);
    end;
  end;
  StockTakeVc_PasteArtCode = res;
  RETURN;
END;

global    
procedure StockTakeVc_PasteSerialNr_iPhone(var record StockTakeVc StockTaker,var record RcVc RepSpec,var string inwarn)
begin
  val UnitXval,UnitYval,UnitZval;
  string 255 tstr;
  record SerBalVc SerBalr;
  Boolean serialfound;

  if (blank(RepSpec.f1)) then begin 
    if (nonblank(RepSpec.f4)) then begin 
      if (SerialNrForOneItem(RepSpec.f4,SerBalr)) then begin
        serialfound = true;
        RepSpec.f1 = SerBalr.Item;
        RepSpec.long2 = 1;
        RepSpec.f3 = SerBalr.Location;
        RepSpec.f5 = FindPositionWithSerialNr(StockTaker.Location,RepSpec.f1,RepSpec.f4,RepSpec.f3);
        if (StockTakeVc_PasteArtCode_iPhone(StockTaker,RepSpec,1,inwarn)) then begin
        end;
      end;
    end;  
  end;  
  SerialNrDimensions(RepSpec.f1,RepSpec.f4,UnitXval,UnitYval,UnitZval);
  if (UnitXval!=0) then begin RepSpec.vals1 = UnitXval; end;
  if (UnitYval!=0) then begin RepSpec.vals2 = UnitYval; end;
  if (UnitZval!=0) then begin RepSpec.vals3 = UnitZval; end;
  if (CheckSerialStatus(RepSpec.f1,RepSpec.f4,tstr)==1) then begin
    MessageBox(0,tstr);
  end;
  if (serialfound==false) then begin
    RepSpec.long2 = CalculateSerialNrQuantity(RepSpec.f1,"","",false,RepSpec.vals1,RepSpec.vals2,RepSpec.vals3,RepSpec.long2);    
  end;
  return;
end;

global    
procedure StockTakeVc_PasteSerialNr(var record StockTakeVc StockTaker,Integer rownr,var string inwarn)
begin
  row StockTakeVc STrw;
  val UnitXval,UnitYval,UnitZval;
  string 255 tstr;
  record SerBalVc SerBalr;
  Boolean serialfound;

  MatRowGet(StockTaker,rownr,STrw);
  if (blank(STrw.ArtCode)) then begin 
    if (nonblank(STrw.SerialNr)) then begin 
      if (SerialNrForOneItem(STrw.SerialNr,SerBalr)) then begin
        serialfound = true;
        STrw.ArtCode = SerBalr.Item;
        STrw.Qty = 1;
        STrw.Location = SerBalr.Location;
        STrw.Position = FindPositionWithSerialNr(StockTaker.Location,STrw.ArtCode,STrw.SerialNr,STrw.Location);
        MatRowPut(StockTaker,rownr,STrw);
        if (StockTakeVc_PasteArtCode(StockTaker,rownr,1,inwarn)) then begin
        end;   
        MatRowGet(StockTaker,rownr,STrw);
      end;
    end;  
  end;  
  SerialNrDimensions(STrw.ArtCode,STrw.SerialNr,UnitXval,UnitYval,UnitZval);
  if (UnitXval!=0) then begin STrw.UnitXval = UnitXval; end;
  if (UnitYval!=0) then begin STrw.UnitYval = UnitYval; end;
  if (UnitZval!=0) then begin STrw.UnitZval = UnitZval; end;
  if (CheckSerialStatus(STrw.ArtCode,STrw.SerialNr,tstr)==1) then begin
    MessageBox(0,tstr);
  end;
  if (serialfound==false) then begin
    STrw.Qty = CalculateSerialNrQuantity(STrw.ArtCode,"","",false,STrw.UnitXval,STrw.UnitYval,STrw.UnitZval,STrw.Qty);    
  end;
  MatRowPut(StockTaker,rownr,STrw);
  return;
end;    