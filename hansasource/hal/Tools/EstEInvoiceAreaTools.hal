external function Boolean IsCapitalLetter(string);
external function Boolean IsDigit(string);
external function roundmode DefaultRoundMode();
external procedure AddAreaAfterArea(var area,area);
external function string 255 ConvertXml(string);

function string 255 Tag(string TagName,string TagContents,string TagParameters,boolean GroupTag,integer LenLimit) 
begin
  string 255 tstr;
  string 255 contents;
  String 100 label;
  string 1 c;
  
  label = TagName;
  c = Mid(label,0,1);
  if(c!="-" or TagContents!="" or GroupTag) then begin
    if(c=="-") then begin label = Right(label,len(label)-1); end;
    contents = TagContents;
    if(LenLimit>0) then begin
      contents = Left(contents,LenLimit);
    end;
    
    tstr = "<" & label;
    if(len(TagParameters)>0) then begin
      if(Mid(TagParameters,0,1)!=" ") then begin
        tstr = tstr & " ";
      end;
      tstr = tstr & TagParameters;
    end;
  
    if(!GroupTag) then begin
      if(len(contents)==0) then begin
        tstr = tstr & "/";
      end;
    end;
    
    tstr = tstr & ">";
    if(len(contents)>0 and !GroupTag) then begin
      tstr = tstr & ConvertXml(contents) & "</" & label & ">";
    end;
    tstr = tstr & chr(13) & chr(10);
    Tag = tstr;
  end;
  return;
end;

global
procedure EstEInvBuildString(string Parameter,string value,integer allowedlength, var string tstr) 
begin
  string 100 pvalue;
  pvalue = value;
  if(allowedlength>0) then begin
    pvalue = Left(pvalue,allowedlength);
  end;
  tstr = tstr & " " & Parameter & "=""" & pvalue & """";
  return;
end;

global
procedure EstEInvBuildString2(string Parameter,string value, var string tstr) 
begin
  EstEInvBuildString(Parameter,value,0,tstr);
  return;
end;

global
procedure EstEInvAddTag(string TagName, string TagContents, var string TagParameters,boolean GroupTag, integer LenLimit,area a) 
begin
  AddTextToArea(Tag(TagName,TagContents,TagParameters,GroupTag,LenLimit),a);
  TagParameters = "";
  return;
end;

global
procedure EstEInvTagValue(string TagName,string TagContents,integer LenLimit,area a) 
begin
  string 1 empty;
  EstEInvAddTag(TagName,TagContents,empty,false,LenLimit,a);
  return;
end;

global
procedure EstEInvTagNumber2(string TagName,val TagContents,Boolean invertValue,area a) 
begin
  val t1;
  
  t1 = TagContents;
  if (t1 == 0) or (t1==blankval) then begin
   EstEInvTagValue(TagName,"0.00",100,a);
  end else begin  
    if (invertValue) then begin
      t1 = -t1;
    end;
    EstEInvTagValue(TagName,ValToString(Round(t1,DefaultRoundMode),M4Val,"",".",0),0,a);
  end;
  return;
end;


global
procedure EstEInvTagNumber(string TagName,val TagContents,area a) 
begin
  EstEInvTagNumber2(TagName,TagContents,false,a);
  return;
end;

global
procedure EstEInvTagDate(string TagName,date DateVal,area a) 
begin
  EstEInvTagValue(TagName,DateToString(DateVal,"YYYY-MM-DD"),0,a);
  return;
end;

global
procedure EstEInvStartTag2(string TagName,var string TagParameters,area a) 
begin
  EstEInvAddTag(TagName,"",TagParameters,true,0,a);
  return;
end;

global
procedure EstEInvStartTag(string TagName,area a) 
begin
  string 1 empty;
    
  EstEInvStartTag2(TagName,empty,a);
  return;
end;

global
procedure EstEInvEndTag(string TagName,area a) 
begin
  EstEInvStartTag(("/"&TagName),a);
  return;
end;

global
procedure EstEInvTagValueType(string TagName,string TagContents,string TypeCheck,integer LenLimit,area a) 
begin
  string 255 tstr;
  string 30 type;
  boolean HideEmpty;
  integer i,strlen;
  integer ord;
  string 1 c;
  
  type = TypeCheck;
  
  switch(type) begin
    case "EMAIL":
      tstr = ExtractEMailAddress(TagContents);
    case "INT":
      if(StripNonDigits(TagContents)!=TagContents) then begin
        tstr = "";
      end;
    case "NONZERO-POSINT":
      if(StringToInt(TagContents)<=0) then begin
        tstr = "";
      end;
    case "CAPS":
      strlen = len(TagContents);
      tstr = TagContents;
      for(i=0;i<strlen;i=i+1) begin
        c=Mid(tstr,i,1);
        if(!IsCapitalLetter(c)) then begin
          tstr = "";
          i = strlen;
        end;
      end;        
    case "CAPSINT": // only caps and numbers allowed
      strlen = len(TagContents);
      tstr = TagContents;
      for(i=0;i<strlen;i=i+1) begin
        c=Mid(tstr,i,1);
        if(!IsCapitalLetter(c) and !IsDigit(c)) then begin
          tstr = "";
          i = strlen;
        end;
      end;
    otherwise
      tstr = TagContents;
  end;
  
  EstEInvTagValue(TagName,tstr,LenLimit,a);
  return;
end;