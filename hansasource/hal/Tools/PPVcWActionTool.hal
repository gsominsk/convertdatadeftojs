external procedure MailTextRow(string,string,string,var row MailTextVc,var Integer);
external procedure FindUserMailboxName(string,var string,var string);
external function Boolean WarnOldRecords(Date,string,LongInt );
external function Boolean DateWarned(Date,string);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure PPSumup(var record PPVc);
external procedure PastePMInPP(var record PPVc);

procedure PPGetRate(var record PPVc PPp)
BEGIN
  string 10 curcode;
  val fr,to1,to2,br1,br2;

  curcode = PPp.CurncyCode;
  GetFullCurncyRate(curcode,PPp.TransDate,fr,to1,to2,br1,br2);
  PPp.CurncyCode = curcode;
  PPp.FrRate = fr;
  PPp.ToRateB1 = to1; 
  PPp.ToRateB2 = to2;
  PPp.BaseRate1 = br1;
  PPp.BaseRate2 = br2;
  PPSumup(PPp);
  RETURN;
END;

global
procedure PPVc_PastePayMode(var record PPVc PPp)
BEGIN
  PastePMInPP(PPp);
  PPGetRate(PPp);
  RETURN;
END;

global
procedure PPVc_PasteTransDate(var record PPVc PPp,Boolean changedf,var Integer warning1,var Integer warning2)
BEGIN
  record CYBlock CYb;
  Boolean lchangedf;

  lchangedf = changedf;
  if (nonblankdate(PPp.TransDate)) then begin
    BlockLoad(CYb);
    if (CYb.AllowTransDateEdit==0) then begin
      PPp.TransDate = PPp.PayDate;
      lchangedf = true;
    end;
  end;
  if (DateWarned(PPp.TransDate,"PPVc")) then begin
    warning1 = 1045;
  end;
  if (WarnOldRecords(PPp.TransDate,"PPVc",PPp.SerNr)) then begin
    warning2 = 2020;
  end;
  if (lchangedf) then begin
    PPGetRate(PPp);
  end;
  RETURN;
END;

global
procedure PPVc_PasteCurncyCode(var record PPVc PPp)
BEGIN
  PPGetRate(PPp);
  RETURN;
END;

global
procedure PPVc_PastePayDate(var record PPVc PPp)
begin
  Date td;
  
  td = PPp.PayDate;
  PPp.TransDate = PPp.PayDate;
  if (td!=PPp.PayDate) then begin
    PPGetRate(PPp);
  end;
  return;
end;

global
updating function Integer CreateMailFromPPD(record PPVc PPp,var string warning,string pdfform)
BEGIN
  Integer res;
  record MailVc Mail2r;
  record LTxtVc LTxtr;
  row PPVc PPrw;  
  row MailVc MArw;
  Integer i,rwcnt;
  string 255 mailboxnr,tstr,fromuser,warning2str;
  string 1 TAB;
  Integer line;
  row MailTextVc MTrw;
  Integer IgnoreRecordDetails,emailcnt,emailerrorcnt;
  record MailVc Mailr;
  
  res = 0;
  if (ReadFirstMain(PPp,0,true)) then begin end;  
  TAB = chr(9);
  FindUserMailboxName(CurrentUser,mailboxnr,fromuser);
  if (blank(fromuser)) then begin
    res = 22010;
    warning = CurrentUser;
    goto LCreateMailFromPPD;
  end;  

  rwcnt = MatRowCnt(PPp);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(PPp,i,PPrw);
    RecordNew(Mailr);
    MArw.RowTyp = 1;
    MArw.AddrCode = fromuser;
    MatRowPut(Mailr,0,MArw);
    FindUserMailboxName(PPrw.Person,mailboxnr,tstr);
    if (blank(tstr)) then begin
      emailerrorcnt = emailerrorcnt + 1;
      goto LCreateMailFromPPDRow;
    end;    
    MArw.RowTyp = 0;
    MArw.AddrCode = tstr;
    MatRowPut(Mailr,MatRowCnt(Mailr),MArw);  
    MailTextRow("PPVc","","",MTrw,IgnoreRecordDetails);
    Mailr.Header = MTrw.Header;
    Mailr.Header = Mailr.Header & " " & USetStr(1835) & ": ";
    Mailr.Header = Mailr.Header & PPp.SerNr;
  
    LTxtr.Code = MTrw.FirstTxt;
    if (ReadFirstMain(LTxtr,1,true)) then begin
      Mailr.HtmlFlag = LTxtr.HtmlFlag;
    end;
    if (Mailr.HtmlFlag==0) then begin
      LTxtr.Code = MTrw.LastTxt;
      if (ReadFirstMain(LTxtr,1,true)) then begin
        Mailr.HtmlFlag = LTxtr.HtmlFlag;
      end;
    end;
  
    Mailr.TransDate = CurrentDate;
    Mailr.SerNr = NextSerNr("MailVc",Mailr.TransDate,-1,false,"");
    if (RecordStore(Mailr,false)) then begin
//      CreateRecordLink(Mailr,CurrentCompany,PPp,CurrentCompany);  
      CreateRecordLink(PPp,CurrentCompany,Mailr,CurrentCompany);  
      emailcnt = emailcnt + 1;
    end;
    RecordCopy(Mail2r,Mailr);
  
    LTxtr.Code = MTrw.FirstTxt;
    if (ReadFirstMain(LTxtr,1,true)) then begin
      if (Mailr.HtmlFlag==0) then begin
        rwcnt = LineTextCnt(LTxtr);
        for (i=0;i<rwcnt;i=i+1) begin
          tstr = LineTextGet(LTxtr,i);
          LineTextPut(Mailr,line,tstr);
          line = line + 1;
        end;    
        AddCRToText(Mailr);
      end else begin
        if (LTxtr.HtmlFlag==0) then begin
          AddToHtmlRecord(Ltxtr,false,Mailr,true,true);
        end else begin
          AddHtmlRecordToHtmlRecord(Ltxtr,Mailr,true);
        end;
      end;
    end;
    tstr = "";
    LineTextPut(Mailr,line,tstr);
    line = line + 1;
    if (IgnoreRecordDetails==0) then begin
      tstr = USetStr(12001) & ":" & TAB & TAB & PPp.TransDate;
      if (Mailr.HtmlFlag==0) then begin
        LineTextPut(Mailr,line,tstr);
      end else begin
        LineTextPutToHtmlRecord(Mailr,tstr,false,true);
      end;
      line = line + 1;
      tstr = USetStr(12466) & ":" & TAB & TAB & ValToString(PPrw.PayVal,M423Val,"",".",0);
      if (Mailr.HtmlFlag==0) then begin
        LineTextPut(Mailr,line,tstr);
      end else begin
        LineTextPutToHtmlRecord(Mailr,tstr,false,true);
      end;
      line = line + 1;
      tstr = USetStr(14265) & ":" & TAB & PPp.CurncyCode;
      if (Mailr.HtmlFlag==0) then begin
        LineTextPut(Mailr,line,tstr);
      end else begin
        LineTextPutToHtmlRecord(Mailr,tstr,false,true);
      end;
      line = line + 1;
      AddCRToText(Mailr);
    end;
    LTxtr.Code = MTrw.LastTxt;
    if (ReadFirstMain(LTxtr,1,true)) then begin
      if (Mailr.HtmlFlag==0) then begin
        rwcnt = LineTextCnt(LTxtr);
        for (i=0;i<rwcnt;i=i+1) begin
          tstr = LineTextGet(LTxtr,i);
          LineTextPut(Mailr,line,tstr);
          line = line + 1;
        end;    
        AddCRToText(Mailr);
      end else begin
        if (LTxtr.HtmlFlag==0) then begin
          AddToHtmlRecord(Ltxtr,false,Mailr,true,true);
        end else begin
          AddHtmlRecordToHtmlRecord(Ltxtr,Mailr,true);
        end;
      end;
    end;
    RecordUpdate(Mail2r,Mailr,false);
LCreateMailFromPPDRow:;    
  end;
  if (emailerrorcnt>0) then begin 
    warning2str =  warning2str & USetStr(5175) & ": " & emailerrorcnt & ". " & USetStr(5176);
  end;
  warning = "" & emailcnt & chr(13) & warning2str;
LCreateMailFromPPD:;  
  CreateMailFromPPD = res;
  return;
end;
