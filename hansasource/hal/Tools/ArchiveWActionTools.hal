external procedure GetMailFormattingSettings(record MailVc,var record ConfVc);
external procedure FindUserMailboxName(string,var string,var string);

function Integer TempSetCompany(Integer wcompnr)
BEGIN
  Integer res;
  
  res = CurrentCompany;
  if (res!=wcompnr) then begin
    if (SetCompany(wcompnr,true)) then begin
    end;
  end;
  TempSetCompany = res;
  RETURN;
END;

global
updating function Boolean RecordAction_raNoteFromArchive(var record NotepadVc Notep,record RLinkVc RLinkr,Integer compnr)
BEGIN
  Integer oldcompnr;
  Boolean res;
 
  oldcompnr = TempSetCompany(compnr);
  RecordNew(Notep); 
  Notep.SerNr = -1;
  if  (RecordInsert(Notep,false)) then begin 
    CreateArchiveLink(RLinkr.FromRecidStr,Notep,compnr,"");  
    res = true;
  end;
  ResetCompany(oldcompnr); 
  RecordAction_raNoteFromArchive = res;
  RETURN;
END;

global
updating function Boolean RecordAction_raActionFromArchive(var record ActionVc Actionp,record RLinkVc RLinkr,Integer compnr)
BEGIN
  Integer oldcompnr;
  Boolean res;
  
  oldcompnr = TempSetCompany(compnr);
  RecordNew(Actionp);
  Actionp.SerNr = -1;
  res = false;
  if (RecordInsert(Actionp,false)) then begin 
    CreateArchiveLink(RLinkr.FromRecidStr,Actionp,compnr,"");  
    res = true;
  end;
  ResetCompany(oldcompnr);
  RecordAction_raActionFromArchive = res;
  RETURN;
END;

global
updating function Integer RecordAction_raMailFromArchive(var record MailVc Mailp,record RLinkVc RLinkr,Integer compnr)
BEGIN
  Integer oldcompnr;
  Integer res;
  string 255 mailboxnr,tstr;
  record ConfVc confr;
  
  res = -1;
  FindUserMailboxName(CurrentUser,mailboxnr,tstr);
  if (blank(mailboxnr)) then begin
    res = 1353;
    goto LRecordAction_raMailFromArchive;
  end;
  oldcompnr = TempSetCompany(compnr);
  RecordNew(Mailp);

  GetMailFormattingSettings(Mailp,Confr);
  if (Confr.SerNr>0) then begin
    if (Confr.DefaultHtmlFlag!=0) then begin
      Mailp.HtmlFlag = 1;
    end;
  end;

  Mailp.SerNr = -1;
  if  (RecordInsert(Mailp,false)) then begin 
    CreateArchiveLink(RLinkr.FromRecidStr,Mailp,compnr,"");  
    res = 0;
/*I don't think it is needed we have show to links    
    if (mwn!=0) then
    RLinkRecords(Mailp,0,RepSpec,compnr);
*/    
  end;
  ResetCompany(oldcompnr);
LRecordAction_raMailFromArchive:;
  RecordAction_raMailFromArchive = res;
  RETURN;
END;

global
updating function Boolean RecordAction_raArchiveFromArchive(var record ArchiveVc Archivep,record RLinkVc RLinkr,Integer compnr,string name)
BEGIN
  Integer oldcompnr;
  Boolean res;
  
  oldcompnr = TempSetCompany(compnr);
  RecordNew(Archivep);
  Archivep.SerNr = -1;
  Archivep.FolderName = name;
  if (blank(Archivep.FolderName)) then begin
    Archivep.FolderName = USetStr(1385);
  end;
  if  (RecordInsert(Archivep,false)) then begin 
    CreateArchiveLink(RLinkr.FromRecidStr,Archivep,compnr,"");  
    res = true;
  end;
  ResetCompany(oldcompnr);
  RecordAction_raArchiveFromArchive = res;
  RETURN;
END;

global
updating function Boolean RecordAction_raWebNavLinkFromArchive(var record WebNavLinkVc WebNavLinkp,record RLinkVc RLinkr,Integer compnr,record RcVc RepSpec)
begin
  Integer oldcompnr;
  Boolean res;
  
  oldcompnr = TempSetCompany(compnr);
  RecordNew(WebNavLinkp);
  WebNavLinkp.SerNr = -1;
  WebNavLinkp.Description = RepSpec.f2;
  WebNavLinkp.URL = RepSpec.f3;
  WebNavLinkp.OpenType = RepSpec.ArtMode;
  if (blank(WebNavLinkp.Description)) then begin
    WebNavLinkp.Description = USetStr(1385);
  end;
  if  (RecordInsert(WebNavLinkp,false)) then begin
    //trace("","inserted");
    CreateArchiveLink(RLinkr.FromRecidStr,WebNavLinkp,compnr,WebNavLinkp.Description);  
    res = true;
  end else begin
    //trace("","insert failed");
  end;
  ResetCompany(oldcompnr);
  RecordAction_raWebNavLinkFromArchive = res;
  return;
end;
