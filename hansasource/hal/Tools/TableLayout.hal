external procedure RestAccDClass_RefreshStringList(Integer,record RestAccVc);
external function LongInt RestAccVcRecordDefaultsClient(LongInt,var record RestAccVc,record RestAccVc,LongInt,LongInt);
remote function Integer FindTable(string,var record RestAccVc);
external procedure FillTableLayoutRemote(record RcVc,string,string,var area);

global
procedure FillTableLayout(record RcVc RepSpec,var area ap)
begin
  record LocalMachineBlock LMb;
  string 255 tableview;
  
  BlockLoad(LMb);
  tableview = RepSpec.AccStr;
  if (blank(tableview)) then begin
    tableview = LMb.TableViewCode;
  end;
  threadremote.FillTableLayoutRemote(RepSpec,LMb.BranchID,tableview,ap);
  return;
end;

global
updating procedure TableLayoutClassHitTable(Integer wn,string tableid,Boolean dblclick)
begin
  record RestAccVc RestAccr;
  record RestAccVc RestAcc2r;
  Integer tablestatus,persons;
  Integer nwn,mwn;
  record RcVc RepSpec;
  
//  if (dblclick) then begin
  if (true) then begin
    GetWindowRecord(wn,RepSpec);
    tablestatus = FindTable(tableid,RestAccr);
    persons = RestAccr.Persons;
    switch (RepSpec.ArtMode) begin
      case 1://Set Table
        switch (tablestatus) begin
          case kTableStatusFree:
            mwn = MotherWindow(wn);
            if (mwn>0) then begin
              GetWindowRecord(mwn,RestAccr);
              RestAccr.CustCode = tableid;
              RestAccr.Persons = persons;
              PutWindowRecord(mwn,RestAccr);
              RestAccDClass_RefreshStringList(mwn,RestAccr);
              WindowDoOK(mwn,0);
              ReRunWindowDef(mwn);
              CloseWindow(wn);
            end;     
          case kTableStatusOtherOccupied:
            MessageBox(27322,"");
          otherwise
            MessageBox(27321,"");
        end;
      otherwise
        switch (tablestatus) begin
          case kTableStatusFree:
            nwn = OpenWindow("RestAccDClass",1,0,"","",RestAccr);
            RestAccVcRecordDefaultsClient(nwn,RestAccr,RestAcc2r,0,0);
            PutWindowRecord(nwn,RestAccr);
            ReRunWindowDef(nwn);
          case kTableStatusMineOccupied:
            nwn = OpenWindow("RestAccDClass",1,0,"","",RestAccr);
            RestAccDClass_RefreshStringList(nwn,RestAccr);
        end;
    end;
  end else begin
//    Beep;
  end;
  
  return;
end;

global
procedure TableLayoutClassClose()
begin
  CloseWindow(CurWindow);
  return;
end;

global
procedure TableLayoutClassNewTable()
begin
  Integer nwn;
  record NeighbourHoodVc NHr;
  
  nwn = OpenWindow("NeighbourHoodDClass",1,0,"","",NHr);
  return;
end;

global
procedure TableLayoutClassNewBarTab()
begin
  Integer nwn;
  record RestAccVc RestAccr;
  record RestAccVc RestAcc2r;
  
  nwn = OpenWindow("RestAccDClass",1,0,"","",RestAccr);
  RestAccVcRecordDefaultsClient(nwn,RestAccr,RestAcc2r,0,0);
  PutWindowRecord(nwn,RestAccr);
  RestAccDClass_RefreshStringList(nwn,RestAccr);
  ReRunWindowDef(nwn);
  return;
end;
