remote procedure FillCalendarRemote(record RcVc,Integer,Integer,var Array record ActDisp2Vc);
/* NewCalendarTools.hal */

//  EditFieldTL(60,-30,200,"Persons", M4UStr,Normal,200,f1,false,UserSClass);
//  EditFieldTL(325,-30,-16,"Search",   M4Str,Normal,100,f2,false,0);
//  Integer datord = RepSpec.get_integer("AccSpec");
//  RepSpec.get_date("sStartDate",&sd);
//  switch (RepSpec.get_integer(ResHotelModeStr)) {

//  RecordBegin(ActDisp2Vc,ActDisp2Type,"");
//  RecordField(RecSerNr,M4Long,0,0); // SerNr of displayed record
//  RecordField(VcNr,M4Long,0,0); // Vc tag of displayed record
//  RecordField(Compnr,M4Long,0,0);
//  RecordField(FromDate,M4Date,0,0);
//  RecordField(FromTime,M4Time,0,0);
//  RecordField(ToDate,M4Date,0,0);
//  RecordField(ToTime,M4Time,0,0);
//  RecordField(Color,M4Int,0,0); // SetBegin(46);
//  RecordField(Label,M4Str,255,0);
//  EndRecord;

// VERY basic, needs to handle lengthclass as well

function
Boolean PeriodsOverlap(date p1from,date p1to,date p2from,date p2to)
begin
  Boolean res;
  
  if (p1from<=p2to) and (p1to>=p2from) then begin
    res = true;
  end else begin
    res = false;
  end;
  
  PeriodsOverlap = res;
end;

global
procedure GetCalendarForLengthClass(record RcVc RepSpec,Integer wn,string person,Integer lenclass)
begin
  record ActVc Actr;
  date blankd;
  Boolean loopf;
  record ActDisp2Vc ADr;
  record ActTypeVc ATr;
  record ActTypeGrVc ATgr;
  
//  .LengthClass
//  .TodoFlag
//  .TransDate
//  .StartTime
  
  Actr.TodoFlag = kTodoFlagCalendar;
  Actr.TransDate = RepSpec.sStartDate;
  
  switch (lenclass) begin
    case 4: Actr.TransDate = blankd;
    case 3: Actr.TransDate = AddDay(Actr.TransDate,-366);
    case 2: Actr.TransDate = AddDay(Actr.TransDate,-31);
    case 1: Actr.TransDate = AddDay(Actr.TransDate,-7);
    case 0: ;
  end;
  
  Actr.LengthClass = lenclass;
  
  loopf = true;
  
  while (LoopKey("CalUserMain:" & person,Actr,3,loopf)) begin
    
    if (Actr.TransDate>RepSpec.sEndDate) then begin loopf = false; end;
    if (Actr.TodoFlag<>kTodoFlagCalendar) then begin loopf = false; end;
    if (Actr.LengthClass<>lenclass) then begin loopf = false; end;
    
    if (loopf) then begin
      if (PeriodsOverlap(RepSpec.sStartDate,RepSpec.sEndDate,Actr.TransDate,Actr.EndDate)) then begin
        RecordClear(ADr);
        
        ADr.RecSerNr = Actr.SerNr;
        ADr.VcNr = 1; // ActVc ###
        ADr.Compnr = CurrentCompany;
        ADr.FromDate = Actr.TransDate;
        ADr.FromTime = Actr.StartTime;
        ADr.ToDate = Actr.EndDate;
        ADr.ToTime = Actr.EndTime;
        ADr.Color = 5; //??##
        ADr.Label = Actr.Comment;
        
        ATr.Code = Actr.ActType;
        if (ReadFirstMain(ATr,1,true)) then begin
          ATgr.Code = ATr.ActTypeGr;
          if (ReadFirstMain(ATgr,1,true)) then begin
            ADr.Color = atgr.CalColNr;
          end;
        end;
        
        ADr.Column = person;
        
        DisplayCalendarItem(wn,ADr);
      end;
    end;
  end;
  
  return;
end;

global
procedure DayWClassFillCalendar(Integer wn)
begin
  record RcVc RepSpec;
  Array record ActDisp2Vc aADr;
  Integer i;
  
  GetWindowRecord(wn,RepSpec);
  
  RepSpec.sStartDate = AddDay(RepSpec.sStartDate,-GetDateId(RepSpec.sStartDate)+1);
  RepSpec.d1 = RepSpec.sStartDate;
  FillCalendarRemote(RepSpec,RepSpec.flags[4],CalendarSystem,aADr);

  for (i=0;i<aADr.length;i=i+1) begin
    DisplayCalendarItem(wn,aADr[i]);
  end;
/*  
  while (GetNextSubstring(RepSpec.f1,pos,",",person)) begin
    for (i = 4; i>=0; i = i - 1) begin
      GetCalendarForLengthClass(RepSpec,wn,person,i);
    end;
  end;
*/  
end;

global
procedure WeekWClassFillCalendar(Integer wn)
begin
  record RcVc RepSpec;
  Array record ActDisp2Vc aADr;
  Integer i;
  
  GetWindowRecord(wn,RepSpec);
  
  RepSpec.sStartDate = AddDay(RepSpec.sStartDate,-GetDateId(RepSpec.sStartDate)+1);
  RepSpec.d1 = RepSpec.sStartDate;
  FillCalendarRemote(RepSpec,RepSpec.flags[4],CalendarSystem,aADr);

  for (i=0;i<aADr.length;i=i+1) begin
    DisplayCalendarItem(wn,aADr[i]);
  end;
/*  
  while (GetNextSubstring(RepSpec.f1,pos,",",person)) begin
    for (i = 4; i>=0; i = i - 1) begin
      GetCalendarForLengthClass(RepSpec,wn,person,i);
    end;
  end;
*/  
end;

global
procedure MonthWClassFillCalendar(Integer wn)
begin
  record RcVc RepSpec;
  Array record ActDisp2Vc aADr;
  Integer i;
  
  GetWindowRecord(wn,RepSpec);
  
  RepSpec.sStartDate = AddDay(RepSpec.sStartDate,-GetDateId(RepSpec.sStartDate)+1);
  RepSpec.d1 = RepSpec.sStartDate;
  FillCalendarRemote(RepSpec,RepSpec.flags[4],CalendarSystem,aADr);

  for (i=0;i<aADr.length;i=i+1) begin
    DisplayCalendarItem(wn,aADr[i]);
  end;
/*  
  //StopAlert("MonthWClassFillCalendar " & RepSpec.sStartDate & "-" & RepSpec.sEndDate);
  
  while (GetNextSubstring(RepSpec.f1,pos,",",person)) begin
    for (i = 4; i>=0; i = i - 1) begin
      GetCalendarForLengthClass(RepSpec,wn,person,i);
    end;
  end;
*/  
end;

global
procedure CalendarWClassFillCalendar(Integer wn)
begin
  record RcVc RepSpec;
  Array record ActDisp2Vc aADr;
  Integer i;
  
  GetWindowRecord(wn,RepSpec);
  
  RepSpec.sStartDate = AddDay(RepSpec.sStartDate,-GetDateId(RepSpec.sStartDate)+1);
  RepSpec.d1 = RepSpec.sStartDate;
  FillCalendarRemote(RepSpec,100 /*RepSpec.flags[4]*/,CalendarSystem,aADr);
  
  for (i = 0; i<aADr.length; i = i + 1) begin
    DisplayCalendarItem(wn,aADr[i]);
  end;
end;
