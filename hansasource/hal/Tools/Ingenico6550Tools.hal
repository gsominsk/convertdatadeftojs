external function Boolean FindLocalSerialPortDevice(Integer,LongInt,string,var record LSerialPortDeviceVc);

function Integer Ingenico_ReadReply(Integer timeout,string cmd)
begin
  Integer res;
  Boolean waitf;
  LongInt currenttick,starttick,waitticks;
  string 255 response,c;
  
  res = 1;
  starttick = GetCurTick;
  waitticks = timeout*1000;//10 seconds
  waitf = true;
  while (waitf) begin
    currenttick = GetCurTick;

    c = ReadComPort(0,1);

LogText(0," c=" & c);    

    response = response & c;
    switch (cmd) begin
      otherwise 
        ;
    end;
    if ((currenttick-starttick)>waitticks) then begin
      waitf = false;
    end;
    if (len(response)>100) then begin
      waitf = false;
    end;
  end;
LogText(0," response=" & response);    
  Ingenico_ReadReply = res;
  return;
end;

function Integer Ingenico_CalculateLRC(string CtrlSeq)
begin
  Integer i,res;
  
  res = 0;
  for (i=1;i<len(CtrlSeq);i=i+1) begin
    res = BitXor(res,asc(Mid(CtrlSeq,i,1)));
  end;
  Ingenico_CalculateLRC = res;
  return;
end;

function Integer Ingenico_SendCommand(string CtrlSeq)
begin
  Integer res,noErr;
  
  res = noErr;
  if (OutComPort(0,CtrlSeq)==0) then begin
    res = 1;
  end;  
  Ingenico_SendCommand = res;
  return;
end;

function Integer Ingenico_StatusMessage()
begin
  Integer res,noErr;
  string 255 CtrlSeq; 
  Integer nrofmsgs;

  CtrlSeq = uchr(CC_STX);
  CtrlSeq = CtrlSeq & "11.";
  CtrlSeq = CtrlSeq & uchr(CC_ETX);
  CtrlSeq = CtrlSeq & uchr(Ingenico_CalculateLRC(CtrlSeq));  
LogText(0,"CtrlSeq " & CtrlSeq);  
  res = Ingenico_SendCommand(CtrlSeq);
  res = Ingenico_ReadReply(10,"");
//  if (res!=noErr) then begin
//    goto LIngenico_StatusMessage;
//  end;
LIngenico_StatusMessage:;  
  Ingenico_StatusMessage = res;
  return;
end;

updating function Integer Ingenico_ProcessTransaction(string msg,val v,string paymode,string label,string transactionid,string timestamp,Integer ProcessingWn,string codepage,
                          var string SentCtrlSeq,var string results)
begin
  Integer res,noErr;
  
  res = Ingenico_StatusMessage;
/*  
  if (res!=noErr) then begin
    goto LIngenico_ProcessTransaction;
  end;
  res = Ingenico_TransactionRequestEx2(v,msg,"","",SentCtrlSeq);
  if (res!=noErr) then begin
    goto LIngenico_ProcessTransaction;
  end;
  res = Ingenico_WaitForTransactionResult(ProcessingWn,paymode,label,msg,transactionid,timestamp,codepage,results);
  if (res!=noErr) then begin
    goto LIngenico_ProcessTransaction;
  end;    
*/  
LIngenico_ProcessTransaction:;  
  Ingenico_ProcessTransaction = res;
  return;
end;

global
updating procedure Ingenico_Purchase(val v,string paymode,string label,Integer ProcessingWn)
begin
  record LocalMachineBlock LMb;  
  record LSerialPortDeviceVc LSPDr;
  Integer res,noErr;
  string 255 SentCtrlSeq,results,codepage;
  Boolean additionalinfof;

  BlockLoad(LMb);
  if (FindLocalSerialPortDevice(kSerialPortDeviceClassCreditCardTerminal,kSerialPortDeviceModelCreditCardTerminalIngenico6550,LMb.LocalMachineCode,LSPDr)==false) then begin  
    goto LIngenico_PurchaseOut;
  end;  
  if (OpenComPort(0,LSPDr.Port,LSPDr.BaudRate,LSPDr.Parity,LSPDr.ByteSize,LSPDr.StopBits,LSPDr.FlowControl)==0) then begin
    goto LIngenico_PurchaseOut;
  end;
  codepage = StringSetFromString(89,LSPDr.Codepage);
  SetComPortCodepage(codepage);

  res = Ingenico_ProcessTransaction("Purchase",v,paymode,label,"","",ProcessingWn,codepage,SentCtrlSeq,results);
LIngenico_Purchase:;  
  res = CloseComPort(0);  
LIngenico_PurchaseOut:; 
 
/*
  switch (results) begin
    case "2003": additionalinfof = true;
    case "2004": additionalinfof = true;
    case "2005": additionalinfof = true;
    case "2006": additionalinfof = true;
  end;
*/  
  if (additionalinfof) then begin
//    YomaniAdditionalInformationRequired(SentCtrlSeq,ProcessingWn);
  end;
  return;
end;
