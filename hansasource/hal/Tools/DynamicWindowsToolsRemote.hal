external procedure IVSumup(var record IVVc,Boolean);
external procedure RestAccSumup(var record RestAccVc,string);
external procedure IVCashSumup(var record IVCashVc,Boolean);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);
external function Boolean GetFullCurncyPurchaseRate(var string,Date,var val,var val,var val,var val,var val);
external function Boolean GetPMRow(string,var row PMBlock);

global
procedure CntNPTSPaymentCurrenciesRemote(string localmachine,var Array string alabel,var Array string acrncy,var Array Integer apaymenttype,var Array string apaymentmode,var Integer acnt)
begin
  record RestPMBlock RestPMb;
  row RestPMBlock RestPMbrw;
  Integer i,rwcnt;
  Integer pos;
  record AccVc Accr;
  record BaseCurBlock BCb;
  row PMBlock PMrw;
  
  acnt = 0;
  BlockLoad(BCb);
  BlockLoad(RestPMb);
  
  rwcnt = MatRowCnt(RestPMb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(RestPMb,i,RestPMbrw);
    if (localmachine==RestPMbrw.MachineName) then begin
      GetPMRow(RestPMbrw.PMCode,PMrw);
      Accr.AccNumber = PMrw.AccNr;
      ReadFirstMain(Accr,1,true);
      acrncy[acnt] = Accr.Curncy;
      if (blank(acrncy[acnt])) then begin
        acrncy[acnt] = BCb.BaseCur1;
      end;
      apaymenttype[acnt] = RestPMbrw.rowstp;
      apaymentmode[acnt] = RestPMbrw.PMCode;
      alabel[acnt] = RestPMbrw.Label;
      acnt = acnt + 1;
    end;
  end;
  return;
end;

global
procedure NPTSPaymentPasteAmounts(var record IVCashVc IVCashr,Array string alabel,Array string acrncy,Array Integer apaymenttype,Array string apaymentmode,Array val apaymentv,Array string apaymentchecknr,Array string apaymentauthcode,Integer acnt)
begin
  row IVCashVc IVCashrw;
  string 255 crncy;
  val fr,to1,to2,br1,br2;
  Integer i,rwcnt;

  for (i=0;i<acnt;i=i+1) begin  
    if (apaymenttype[i]==kInvoiceRowTypeGiftVoucherPayment) then begin
      goto LSKIPROWNPTSPaymentPasteAmounts;
    end;
    ClearRow(IVCashr,IVCashrw,apaymenttype[i]);
    IVCashrw.stp = apaymenttype[i];
    IVCashrw.Spec = alabel[i];
    IVCashrw.Sum = apaymentv[i];
    if (IVCashrw.Sum!=00) then begin
      IVCashrw.PayMode = apaymentmode[i];
      crncy = acrncy[i];
      if (GetFullCurncyPurchaseRate(crncy,IVCashr.TransDate,fr,to1,to2,br1,br2)==false) then begin
        GetFullCurncyRate(crncy,IVCashr.TransDate,fr,to1,to2,br1,br2);
      end;
      IVCashrw.AuthorizationCode = apaymentauthcode[i];
      switch (IVCashrw.stp) begin
        case kInvoiceRowTypeGiftVoucherPayment:
          IVCashrw.GCNr = apaymentchecknr[i];
        otherwise
          IVCashrw.CheckNr = apaymentchecknr[i];
      end;
      IVCashrw.CurncyCode = crncy;
      IVCashrw.FrRate = fr;
      IVCashrw.ToRateB1 = to1;
      IVCashrw.ToRateB2 = to2;
      IVCashrw.BaseRate1 = br1;
      IVCashrw.BaseRate2 = br2;  
      MatRowPut(IVCashr,MatRowCnt(IVCashr),IVCashrw);
    end;
LSKIPROWNPTSPaymentPasteAmounts:;    
  end;        
  IVCashSumup(IVCashr,true);
  return;
end;

global
procedure NPTSPaymentPasteAmounts_IVVc(var record IVVc IVr,Array string alabel,Array string acrncy,Array Integer apaymenttype,Array string apaymentmode,Array val apaymentv,Array string apaymentchecknr,Array string apaymentauthcode,Integer acnt)
begin
  row IVVc IVrw;
  string 255 crncy;
  val fr,to1,to2,br1,br2;
  Integer i,rwcnt;

  for (i=0;i<acnt;i=i+1) begin  
    if (apaymenttype[i]==kInvoiceRowTypeGiftVoucherPayment) then begin
      goto LSKIPROWNPTSPaymentPasteAmounts;
    end;
    ClearRow(IVr,IVrw,apaymenttype[i]);
    IVrw.stp = apaymenttype[i];
    IVrw.Spec = alabel[i];
    IVrw.Sum = apaymentv[i];
    if (IVrw.Sum!=00) then begin
      IVrw.PayMode = apaymentmode[i];
      crncy = acrncy[i];
      if (GetFullCurncyPurchaseRate(crncy,IVr.TransDate,fr,to1,to2,br1,br2)==false) then begin
        GetFullCurncyRate(crncy,IVr.TransDate,fr,to1,to2,br1,br2);
      end;
      IVrw.AuthorizationCode = apaymentauthcode[i];
      switch (IVrw.stp) begin
        case kInvoiceRowTypeGiftVoucherPayment:
          IVrw.GCNr = apaymentchecknr[i];
        otherwise
          IVrw.CheckNr = apaymentchecknr[i];
      end;
      IVrw.CurncyCode = crncy;
      IVrw.FrRate = fr;
      IVrw.ToRateB1 = to1;
      IVrw.ToRateB2 = to2;
      IVrw.BaseRate1 = br1;
      IVrw.BaseRate2 = br2;  
      MatRowPut(IVr,MatRowCnt(IVr),IVrw);
    end;
LSKIPROWNPTSPaymentPasteAmounts:;    
  end;        
  IVSumup(IVr,true);
  return;
end;

global
procedure NPTSPaymentPasteAmounts_RestAccVc(var record RestAccVc RestAccr,Array string alabel,Array string acrncy,Array Integer apaymenttype,Array string apaymentmode,Array val apaymentv,Array string apaymentchecknr,Array string apaymentauthcode,Integer acnt)
begin
  row RestAccVc RestAccrw;
  string 255 crncy;
  val fr,to1,to2,br1,br2;
  Integer i,rwcnt;

  for (i=0;i<acnt;i=i+1) begin  
    if (apaymenttype[i]==kInvoiceRowTypeGiftVoucherPayment) then begin
      goto LSKIPROWNPTSPaymentPasteAmounts_RestAccVc;
    end;
    ClearRow(RestAccr,RestAccrw,apaymenttype[i]);
    RestAccrw.stp = apaymenttype[i];
    RestAccrw.Spec = alabel[i];
    RestAccrw.Sum = apaymentv[i];
    if (RestAccrw.Sum!=00) then begin
      RestAccrw.PayMode = apaymentmode[i];
      crncy = acrncy[i];
      if (GetFullCurncyPurchaseRate(crncy,RestAccr.TransDate,fr,to1,to2,br1,br2)==false) then begin
        GetFullCurncyRate(crncy,RestAccr.TransDate,fr,to1,to2,br1,br2);
      end;
      RestAccrw.CheckNr = apaymentchecknr[i];
      RestAccrw.AuthorizationCode = apaymentauthcode[i];
      RestAccrw.CurncyCode = crncy;
      RestAccrw.FrRate = fr;
      RestAccrw.ToRateB1 = to1;
      RestAccrw.ToRateB2 = to2;
      RestAccrw.BaseRate1 = br1;
      RestAccrw.BaseRate2 = br2;  
      MatRowPut(RestAccr,MatRowCnt(RestAccr),RestAccrw);
    end;
LSKIPROWNPTSPaymentPasteAmounts_RestAccVc:;    
  end;        
  RestAccSumup(RestAccr,"");
  return;
end;
