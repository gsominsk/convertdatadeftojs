external function val CalculateDiscountPercentage(val,val,val);
external procedure GetCurncyRoundoff(string,string,string,var roundmode,var roundmode,var roundmode);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure GetARAcc(string,var string);
external procedure RowCalculateTaxMatrix_IVVc(var record IVVc,Integer,row IVVc);
remote procedure IVSumup(var record IVVc,Boolean);
external procedure ORVc_PastePayDeal(var record ORVc);
external procedure IVVc_PastePayDeal(var record IVVc,string,string);

global
procedure IVCash2IV(record IVCashVc IVCashr, var record IVVc IVr)
begin
  row IVCashVc IVCashrw;
  row IVVc IVrw;
  integer rowcnt,i;

  IVr.InvType = kInvoiceTypeNormal;
  IVr.SerNr = IVCashr.SerNr;
  IVr.InvDate = IVCashr.InvDate;
  IVr.CustCode = IVCashr.CustCode;
  IVr.Addr0 = IVCashr.Addr0;
  IVr.Addr1 = IVCashr.Addr1;
  IVr.Addr2 = IVCashr.Addr2;
  IVr.Addr3 = IVCashr.Addr3;
  IVr.CustCat = IVCashr.CustCat;
  IVr.OKFlag = IVCashr.OKFlag;
  IVr.ARonTR = IVCashr.ARonTR;
  IVr.UpdStockFlag = IVCashr.UpdStockFlag;
  IVr.ExportedFlag = IVCashr.ExportedFlag;
  IVr.InclVAT = IVCashr.InclVAT;
  IVr.PayDate = IVCashr.PayDate;
  IVr.TransDate = IVCashr.TransDate;
  IVr.OurContact = IVCashr.OurContact;
  IVr.ClientContact = IVCashr.ClientContact;
  IVr.SalesMan = IVCashr.SalesMan;
  IVr.PayDeal = IVCashr.PayDeal;
  IVr.RecValue = IVCashr.RecValue;
  IVr.RetValue = IVCashr.RetValue;
  IVr.Sum0 = IVCashr.Sum0;
  IVr.Sum1 = IVCashr.Sum1;
  IVr.Sum2 = IVCashr.Sum2;
  IVr.Sum3 = IVCashr.Sum3;
  IVr.Sum4 = IVCashr.Sum4;
  IVr.VATNr = IVCashr.VATNr;
  IVr.BaseSum4 = IVCashr.BaseSum4;
  IVr.FrRate = IVCashr.FrRate;
  IVr.ToRateB1 = IVCashr.ToRateB1;
  IVr.ToRateB2 = IVCashr.ToRateB2;
  IVr.BaseRate1 = IVCashr.BaseRate1;
  IVr.BaseRate2 = IVCashr.BaseRate2;
  IVr.CurncyCode = IVCashr.CurncyCode;
  IVr.LangCode = IVCashr.LangCode;
  IVr.CustOrdNr = IVCashr.CustOrdNr;
  IVr.PriceList = IVCashr.PriceList;
  IVr.CustVATCode = IVCashr.CustVATCode;
  IVr.RebCode = IVCashr.RebCode;
  IVr.CreditCard = IVCashr.CreditCard;
  IVr.AuthorizationCode = IVCashr.AuthorizationCode;
  IVr.InvComment = IVCashr.InvComment;
  IVr.LocOKNr = IVCashr.LocOKNr;
  IVr.Invalid = IVCashr.Invalid;
  IVr.Prntdf = IVCashr.Prntdf;
  IVr.pdays = IVCashr.pdays;
  IVr.pdvrebt = IVCashr.pdvrebt;
  IVr.pdrdays = IVCashr.pdrdays;
  IVr.TotGP = IVCashr.TotGP;
  IVr.Objects = IVCashr.Objects;
  IVr.Location = IVCashr.Location;
  IVr.ARAcc = IVCashr.ARAcc;
  IVr.TransTime = IVCashr.TransTime;
  IVr.TotQty = IVCashr.TotQty;
  IVr.TotWeight = IVCashr.TotWeight;
  IVr.TotVolume = IVCashr.TotVolume;
  IVr.InvAddr3 = IVCashr.InvAddr3;
  IVr.InvAddr4 = IVCashr.InvAddr4;
  IVr.DelAddrCode = IVCashr.DelAddrCode;
  IVr.TAX1Sum = IVCashr.TAX1Sum;
  IVr.FiscalFlag = IVCashr.FiscalFlag;
  IVr.OrderNr = IVCashr.OrderNr;
  IVr.StatVal = IVCashr.StatVal;
  IVr.DrawerCode = IVCashr.DrawerCode;
  IVr.Region = IVCashr.Region;
  IVr.TAX2Sum = IVCashr.TAX2Sum;
  IVr.pdvrebt2 = IVCashr.pdvrebt2;
  IVr.pdrdays2 = IVCashr.pdrdays2;
  IVr.NoTAXonVAT = IVCashr.NoTAXonVAT;
  IVr.TotalwoTAX = IVCashr.TotalwoTAX;
  IVr.RegDate = IVCashr.RegDate;
  IVr.RegTime = IVCashr.RegTime;
  IVr.TerminalID = IVCashr.TerminalID;
  IVr.OfficialSerNr = IVCashr.OfficialSerNr;
  IVr.OfficialSerNr2 = IVCashr.OfficialSerNr2;
  IVr.FiscalDeviceSeqNr = IVCashr.FiscalDeviceSeqNr;
  IVr.BranchID = IVCashr.BranchID;
  IVr.LoyaltyCardNr = IVCashr.LoyaltyCardNr;
  IVr.LCMLevel = IVCashr.LCMLevel;
  IVr.Points = IVCashr.Points;
  IVr.DepCode = IVCashr.DepCode;
  IVr.CCTransID = IVCashr.CCTransID;
  IVr.InvalidDate = IVCashr.InvalidDate;
  IVr.InvalidTime = IVCashr.InvalidTime;
  IVr.InvalidBy = IVCashr.InvalidBy;
  IVr.Hash = IVCashr.Hash;
  IVr.HashKeyVersion = IVCashr.HashKeyVersion;

  rowcnt = MatRowCnt(IVCashr);
  for(i=0;i<rowcnt;i=i+1) begin
    MatRowGet(IVCashr,i,IVCashrw);
    IVrw.stp = IVCashrw.stp;
    IVrw.ArtCode = IVCashrw.ArtCode;
    IVrw.Quant = IVCashrw.Quant;
    IVrw.Price = IVCashrw.Price;
    IVrw.Sum = IVCashrw.Sum;
    IVrw.vRebate = CalculateDiscountPercentage(IVCashrw.Quant,IVCashrw.Price,IVCashrw.Sum);
    IVrw.SalesAcc = IVCashrw.SalesAcc;
    IVrw.Objects = IVCashrw.Objects;
    IVrw.BasePrice = IVCashrw.BasePrice;
    IVrw.rowGP = IVCashrw.rowGP;
    IVrw.FIFO = IVCashrw.FIFO;
    IVrw.Spec = IVCashrw.Spec;
    IVrw.VATCode = IVCashrw.VATCode;
    IVrw.Recepy = IVCashrw.Recepy;
    IVrw.MotherArtCode = IVCashrw.MotherArtCode;
    IVrw.RecipeQuant = IVCashrw.RecipeQuant;
    IVrw.SerialNr = IVCashrw.SerialNr;
    IVrw.PriceFactor = IVCashrw.PriceFactor;
    IVrw.FIFORowVal = IVCashrw.FIFORowVal;
    IVrw.Coefficient = IVCashrw.Coefficient;
    IVrw.ExciseNr = IVCashrw.ExciseNr;
    IVrw.UnitCode = IVCashrw.UnitCode;
    IVrw.UnitFactQuant = IVCashrw.UnitFactQuant;
    IVrw.UnitFactPrice = IVCashrw.UnitFactPrice;
    IVrw.UnitXval = IVCashrw.UnitXval;
    IVrw.UnitYval = IVCashrw.UnitYval;
    IVrw.UnitZval = IVCashrw.UnitZval;
    IVrw.OrdRow = IVCashrw.OrdRow;
    IVrw.PosCode = IVCashrw.PosCode;
    IVrw.TAX2Code = IVCashrw.TAX2Code;
    IVrw.TAX2Prc = IVCashrw.TAX2Prc;
    IVrw.TAX2Reb = IVCashrw.TAX2Reb;
    IVrw.TAX1Reb = IVCashrw.TAX1Reb;
    IVrw.TAX2Acc = IVCashrw.TAX2Acc;
    IVrw.GCNr = IVCashrw.GCNr;
    IVrw.PayMode = IVCashrw.PayMode;
    IVrw.CreditCard = IVCashrw.CreditCard;
    IVrw.AuthorizationCode = IVCashrw.AuthorizationCode;
    IVrw.CurncyCode = IVCashrw.CurncyCode;
    IVrw.FrRate = IVCashrw.FrRate;
    IVrw.ToRateB1 = IVCashrw.ToRateB1;
    IVrw.ToRateB2 = IVCashrw.ToRateB2;
    IVrw.BaseRate1 = IVCashrw.BaseRate1;
    IVrw.BaseRate2 = IVCashrw.BaseRate2;
    IVrw.VoidedRowNr = IVCashrw.VoidedRowNr;
    IVr.Sign = IVCashrw.Sign;
    IVrw.ovst = IVCashrw.ovst;
    IVrw.VoidedSign = IVCashrw.VoidedSign;
    IVrw.DiscApprovedBy = IVCashrw.DiscApprovedBy;
    IVrw.ChequeNr = IVCashrw.ChequeNr;
    IVrw.CheckNr = IVCashrw.CheckNr;
    IVrw.MBRCode = IVCashrw.MBRCode;
    IVrw.Points = IVCashrw.Points;
    IVrw.SalesAssistant = IVCashrw.SalesAssistant;
    IVrw.CCTransID = IVCashrw.CCTransID;
    MatRowPut(IVr,i,IVrw);
  end;
  return
end;

global
procedure IVCashToIV_FromPOS(record IVCashVc IVCashr,var record IVVc IVr)
begin
  row IVVc IVrw;
  row IVCashVc IVCashrw;
  Integer ci,crwcnt;
  Integer i,rwcnt,rownr;
  record IVCashVc oldIVCashr;
  record CUVc CUr;
  record PDVc PDr;
  Boolean found;
  record TaxMatrixVc TMr;

  CUr.Code = IVCashr.CustCode;
  ReadFirstMain(CUr,1,true);
  RecordCopy(oldIVCashr,IVCashr);
  RecordNew(IVr);
//  IVr.UpdStockFlag = 0; // should be according to settings
  IVr.TransDate = IVCashr.TransDate;
  IVr.SerNr = NextSerNr("IVVc",IVr.TransDate,-1,false,"");
  IVr.InvDate = IVCashr.InvDate;
  IVr.CustCode = IVCashr.CustCode;
  IVr.PayDate = IVCashr.PayDate;
  IVr.Addr0 = IVCashr.Addr0;
  IVr.Addr1 = IVCashr.Addr1;
  IVr.Addr2 = IVCashr.Addr2;
  IVr.Addr3 = IVCashr.Addr3;
  IVr.OurContact = IVCashr.OurContact;
  IVr.ClientContact = IVCashr.ClientContact;
  IVr.CustCat = IVCashr.CustCat;
  IVr.InvType = kInvoiceTypeNormal;
  IVr.PriceList = IVCashr.PriceList;
  IVr.Objects = IVCashr.Objects;
  IVr.InclVAT = IVCashr.InclVAT;
  IVr.ARAcc = IVCashr.ARAcc;
  IVr.SalesMan = IVCashr.SalesMan;
  IVr.ToRateB1 = IVCashr.ToRateB1;
  IVr.CurncyCode = IVCashr.CurncyCode;
  IVr.LangCode = IVCashr.LangCode;
//  IVr.Sign = IVCashr.Sign;
  IVr.Sum0 = IVCashr.Sum0;
  IVr.Sum1 = IVCashr.Sum1;
  IVr.Sum2 = IVCashr.Sum2;
  IVr.Sum3 = IVCashr.Sum3;
  IVr.Sum4 = IVCashr.Sum4;
  IVr.VATNr = IVCashr.VATNr;
  IVr.CustVATCode = IVCashr.CustVATCode;
  IVr.BaseSum4 = IVCashr.BaseSum4;
  IVr.FrRate = IVCashr.FrRate;
  IVr.ToRateB2 = IVCashr.ToRateB2;
  IVr.BaseRate1 = IVCashr.BaseRate1;
  IVr.BaseRate2 = IVCashr.BaseRate2;
  IVr.TotGP = IVCashr.TotGP;
  IVr.CreditCard = IVCashr.CreditCard;
  IVr.AuthorizationCode = IVCashr.AuthorizationCode;
  IVr.RecValue = IVCashr.RecValue;
  IVr.RetValue = IVCashr.RetValue;
  IVr.MachineName = IVCashr.LocalMachineCode;
  IVr.TransTime = IVCashr.TransTime;
  IVr.DrawerCode = IVCashr.DrawerCode;
  IVr.NoTAXonVAT = IVCashr.NoTAXonVAT;
  IVr.RegDate = IVCashr.RegDate;
  IVr.RegTime = IVCashr.RegTime;
  IVr.TerminalID = IVCashr.TerminalID;
  IVr.FiscalDeviceSeqNr = IVCashr.FiscalDeviceSeqNr;
  IVr.OfficialSerNr = IVCashr.OfficialSerNr;
  IVr.OfficialSerNr2 = IVCashr.OfficialSerNr2;
  IVr.CustTaxTemplateCode = IVCashr.CustTaxTemplateCode;
  IVr.PayDeal = "";
  IVr.Location = IVCashr.Location;
  IVVc_PastePayDeal(IVr,"","");
  if (blank(IVr.PayDeal)) then begin
    PDr.Code = CUr.PayDeal;
    if (ReadFirstMain(PDr,1,true)) then begin
      if (PDr.PDType!=kInvoiceTypeCredit) then begin
        IVr.PayDeal = CUr.PayDeal;
        IVVc_PastePayDeal(IVr,"","");
      end;
    end;
  end;
  if (blank(IVr.PayDeal)) then begin
    found = true;
    PDr.Code = "";
    while (LoopMain(PDr,1,found)) begin
      if (PDr.PDType==kInvoiceTypeNormal) then begin 
        found = false;
        IVr.PayDeal = PDr.Code;
      end;
    end;  
    IVVc_PastePayDeal(IVr,"","");
  end;
  crwcnt = MatRowCnt(IVCashr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(IVCashr,ci,IVCashrw);
    if (IVCashrw.stp>=kInvoiceRowTypeMax) then begin
      goto LSKIPIVCASHROW;
    end;
    switch (IVCashrw.stp) begin
      case kInvoiceRowTypeSplitItem:
      otherwise
        IVrw.stp = IVCashrw.stp;
        IVrw.ArtCode = IVCashrw.ArtCode;
        IVrw.Quant = IVCashrw.Quant;
        IVrw.Price = IVCashrw.Price;
        IVrw.Sum = IVCashrw.Sum;
        IVrw.vRebate = CalculateDiscountPercentage(IVCashrw.Quant,IVCashrw.Price,IVCashrw.Sum);
        IVrw.SalesAcc = IVCashrw.SalesAcc;
        IVrw.Objects = IVCashrw.Objects;
        IVrw.BasePrice = IVCashrw.BasePrice;
        IVrw.rowGP = IVCashrw.rowGP;
        IVrw.Spec = IVCashrw.Spec;
        IVrw.VATCode = IVCashrw.VATCode;
        IVrw.SerialNr = IVCashrw.SerialNr;
        IVrw.PriceFactor = IVCashrw.PriceFactor;
        IVrw.Coefficient = IVCashrw.Coefficient;
        IVrw.UnitCode = IVCashrw.UnitCode;
        IVrw.CreditCard = IVCashrw.CreditCard;
        IVrw.AuthorizationCode = IVCashrw.AuthorizationCode;
        IVrw.PosCode = IVCashrw.PosCode;
        IVrw.CurncyCode = IVCashrw.CurncyCode;
        IVrw.FrRate = IVCashrw.FrRate;
        IVrw.ToRateB1 = IVCashrw.ToRateB1;
        IVrw.ToRateB2 = IVCashrw.ToRateB2;
        IVrw.BaseRate1 = IVCashrw.BaseRate1;
        IVrw.BaseRate2 = IVCashrw.BaseRate2;
        IVrw.PayMode = IVCashrw.PayMode;
        IVrw.GCNr = IVCashrw.GCNr;
        IVrw.VoidedRowNr = IVCashrw.VoidedRowNr;
        IVrw.VoidedSign = IVCashrw.VoidedSign;
        IVrw.ovst = IVCashrw.ovst;
        IVrw.MBRCode = IVCashrw.MBRCode;
        IVrw.ChequeNr = IVCashrw.ChequeNr;
        IVrw.CheckNr = IVCashrw.CheckNr;
        IVrw.TaxTemplateCode = IVCashrw.TaxTemplateCode;
        rownr = MatRowCnt(IVr);
        UnpackRowFieldMatrix(IVCashrw,"TaxMatrix",TMr);
        PackRowFieldMatrix(IVrw,"TaxMatrix",TMr);
        RowCalculateTaxMatrix_IVVc(IVr,rownr,IVrw);
        MatRowPut(IVr,rownr,IVrw);
    end;
LSKIPIVCASHROW:;
  end;
  IVSumup(IVr,true);
  return;
end;

global
procedure RestAccToIV_FromBarTransferSL(record RestAccVc RestAccr,var record IVVc IVr)
begin
  row IVVc IVrw;
  row RestAccVc RestAccrw;
  Integer ci,crwcnt;
  Integer i,rwcnt,rownr;
  record RestAccVc oldRestAccr;
  record CUVc CUr;
  record PDVc PDr;
  Boolean found,servicechargef;
  record TaxMatrixVc TMr;
  record SMVc VATr;
  row SMVc VATrw;
  Integer vatcnt;
  record BaseCurBlock BCb;
  roundmode roundlines,rndtotal,rndvat;
  val sum;

  BlockLoad(BCb);
  GetCurncyRoundoff(BCb.BaseCur1,"","RestAccVc",rndtotal,roundlines,rndvat);
  CUr.Code = RestAccr.CustCode;
  ReadFirstMain(CUr,1,true);
  RecordCopy(oldRestAccr,RestAccr);
  RecordNew(IVr);
  IVr.UpdStockFlag = 0;
  IVr.TransDate = RestAccr.TransDate;
  IVr.SerNr = NextSerNr("IVVc",IVr.TransDate,-1,false,"");
  IVr.InvDate = RestAccr.TransDate;
  IVr.CustCode = RestAccr.CUCode;
  IVr.Addr0 = RestAccr.CUName;
  IVr.Addr1 = CUr.InvAddr1;
  IVr.Addr2 = CUr.InvAddr2;
  IVr.Addr3 = CUr.InvAddr3;
//  IVr.OurContact = CUr.OurContact;
  IVr.ClientContact = CUr.Person;
  IVr.CustCat = CUr.CustCat;
  IVr.InvType = kInvoiceTypeNormal;
  IVr.PriceList = RestAccr.PriceList;
  IVr.Objects = RestAccr.Objects;
  IVr.InclVAT = 1;
  GetARAcc(CUr.Code,IVr.ARAcc);
  IVr.SalesMan = RestAccr.Cashier;
  IVr.LangCode = CUr.LangCode;
  IVr.Sum0 = RestAccr.Sum0;
  IVr.Sum1 = RestAccr.Sum1;
//  IVr.Sum2 = RestAccr.Sum2;
  IVr.Sum3 = RestAccr.Sum3;
  IVr.Sum4 = RestAccr.Sum4;
  IVr.VATNr = CUr.VATNr;
  IVr.RegNr1 = CUr.RegNr1;
  IVr.CreditCard = RestAccr.CreditCard;
  IVr.AuthorizationCode = RestAccr.AuthorizationCode;
//  IVr.RecValue = RestAccr.RecValue;
  IVr.RetValue = RestAccr.RetValue;
  IVr.MachineName = RestAccr.MachineName;
  IVr.TransTime = RestAccr.TransTime;
  IVr.DrawerCode = RestAccr.DrawerCode;
  IVr.NoTAXonVAT = 0;
  IVr.RegDate = CurrentDate;
  IVr.RegTime = CurrentTime;
  IVr.TerminalID = RestAccr.TerminalID;
//  IVr.FiscalDeviceSeqNr = RestAccr.FiscalDeviceSeqNr;
//  IVr.OfficialSerNr = RestAccr.OfficialSerNr;
//  IVr.OfficialSerNr2 = RestAccr.OfficialSerNr2;
//  IVr.CustTaxTemplateCode = RestAccr.CustTaxTemplateCode;
  IVr.PayDeal = "";
  IVVc_PastePayDeal(IVr,"","");
  if (blank(IVr.PayDeal)) then begin
    PDr.Code = CUr.PayDeal;
    if (ReadFirstMain(PDr,1,true)) then begin
      if (PDr.PDType!=kInvoiceTypeCredit) then begin
        IVr.PayDeal = CUr.PayDeal;
        IVVc_PastePayDeal(IVr,"","");
      end;
    end;
  end;
  if (blank(IVr.PayDeal)) then begin
    found = true;
    PDr.Code = "";
    while (LoopMain(PDr,1,found)) begin
      if (PDr.PDType==kInvoiceTypeNormal) then begin 
        found = false;
        IVr.PayDeal = PDr.Code;
      end;
    end;  
    IVVc_PastePayDeal(IVr,"","");
  end;
  
  SetupVATBase(VATr,vatcnt);
  crwcnt = MatRowCnt(RestAccr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(RestAccr,ci,RestAccrw);
    if (RestAccrw.ovst==0) then begin
      switch (RestAccrw.stp) begin
        case 1:
          AddVATBase(VATr,RestAccrw.VATCode,(RestAccrw.Sum*RestAccr.RemValue)/RestAccr.Sum4,0.00,vatcnt,1,0);
        case 3:
          AddVATBase(VATr,RestAccrw.VATCode,-(RestAccrw.Sum*RestAccr.RemValue)/RestAccr.Sum4,0.00,vatcnt,1,0);
      end;
    end;
  end;
  crwcnt = MatRowCnt(VATr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(VATr,ci,VATrw);
    if (VATrw.DebVal!=0) then begin
      ClearRow(IVr,IVrw,kInvoiceRowTypeDebtorsTransfer);
      IVrw.SalesAcc = RestAccr.ARAcc;
//      IVrw.Objects = RestAccr.Objects;
      IVrw.Sum = Round(VATrw.DebVal,rndtotal);
      sum = sum + VATrw.DebVal;
      if (servicechargef==false) then begin
        IVrw.Sum = IVrw.Sum + RestAccr.ServCharge;
        IVrw.Sum = Round(IVrw.Sum,rndtotal);
        servicechargef = true;
      end;
      if (servicechargef==false) then begin
        IVrw.Sum = IVrw.Sum + RestAccr.ServCharge;
        servicechargef = true;
      end;
      IVrw.VATCode = VATrw.VATCode;
      IVrw.Spec = USetStr(12567) & ": " & RestAccr.SerNr;
      MatRowPut(IVr,MatRowCnt(IVr),IVrw);
    end;
  end;
  IVr.Sum0 = sum + RestAccr.ServCharge - RestAccr.Sum4;

/*  
  crwcnt = MatRowCnt(RestAccr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(RestAccr,ci,RestAccrw);
    switch (RestAccrw.stp) begin
      case kInvoiceRowTypeSplitItem:
      otherwise
        IVrw.stp = RestAccrw.stp;
        IVrw.ArtCode = RestAccrw.ArtCode;
        IVrw.Quant = RestAccrw.Quant;
        IVrw.Price = RestAccrw.Price;
        IVrw.Sum = RestAccrw.Sum;
        IVrw.vRebate = RestAccrw.vRebate;
        IVrw.SalesAcc = RestAccrw.SalesAcc;
        IVrw.Objects = RestAccrw.Objects;
        IVrw.BasePrice = RestAccrw.BasePrice;
        IVrw.rowGP = RestAccrw.rowGP;
        IVrw.Spec = RestAccrw.Spec;
        IVrw.VATCode = RestAccrw.VATCode;
        IVrw.SerialNr = RestAccrw.SerialNr;
        IVrw.PriceFactor = RestAccrw.PriceFactor;
        IVrw.Coefficient = RestAccrw.Coefficient;
        IVrw.UnitCode = RestAccrw.UnitCode;
        IVrw.CreditCard = RestAccrw.CreditCard;
        IVrw.AuthorizationCode = RestAccrw.AuthorizationCode;
        IVrw.PosCode = RestAccrw.PosCode;
        IVrw.CurncyCode = RestAccrw.CurncyCode;
        IVrw.FrRate = RestAccrw.FrRate;
        IVrw.ToRateB1 = RestAccrw.ToRateB1;
        IVrw.ToRateB2 = RestAccrw.ToRateB2;
        IVrw.BaseRate1 = RestAccrw.BaseRate1;
        IVrw.BaseRate2 = RestAccrw.BaseRate2;
        IVrw.PayMode = RestAccrw.PayMode;
        IVrw.GCNr = RestAccrw.GCNr;
        IVrw.VoidedRowNr = RestAccrw.VoidedRowNr;
        IVrw.VoidedSign = RestAccrw.VoidedSign;
        IVrw.ovst = RestAccrw.ovst;
        IVrw.MBRCode = RestAccrw.MBRCode;
        IVrw.ChequeNr = RestAccrw.ChequeNr;
        IVrw.CheckNr = RestAccrw.CheckNr;
        IVrw.TaxTemplateCode = RestAccrw.TaxTemplateCode;
        rownr = MatRowCnt(IVr);
        UnpackRowFieldMatrix(RestAccrw,"TaxMatrix",TMr);
        PackRowFieldMatrix(IVrw,"TaxMatrix",TMr);
        RowCalculateTaxMatrix_IVVc(IVr,rownr,IVrw);
        MatRowPut(IVr,rownr,IVrw);
    end;
  end;
*/  
  IVSumup(IVr,true);
  return;
end;

global
procedure RestAccToIV_FromBar(record RestAccVc RestAccr,var record IVVc IVr)
begin
  row IVVc IVrw;
  row RestAccVc RestAccrw;
  Integer ci,crwcnt;
  Integer i,rwcnt,rownr;
  record RestAccVc oldRestAccr;
  record CUVc CUr;
  record PDVc PDr;
  Boolean found;
  record BaseCurBlock BCb;
  record TaxMatrixVc TMr;
  roundmode roundlines,rndtotal,rndvat;
  record SMVc VATr;
  row SMVc VATrw;
  Integer vatcnt;

  BlockLoad(BCb);
  GetCurncyRoundoff(BCb.BaseCur1,"","RestAccVc",rndtotal,roundlines,rndvat);
  CUr.Code = RestAccr.CustCode;
  ReadFirstMain(CUr,1,true);
  RecordCopy(oldRestAccr,RestAccr);
  RecordNew(IVr);
  IVr.UpdStockFlag = 0;
  IVr.TransDate = RestAccr.TransDate;
  IVr.SerNr = NextSerNr("IVVc",IVr.TransDate,-1,false,"");
  IVr.InvDate = RestAccr.TransDate;
  IVr.CustCode = RestAccr.CUCode;
  IVr.Addr0 = RestAccr.CUName;
  IVr.Addr1 = CUr.InvAddr1;
  IVr.Addr2 = CUr.InvAddr2;
  IVr.Addr3 = CUr.InvAddr3;
//  IVr.OurContact = CUr.OurContact;
  IVr.ClientContact = CUr.Person;
  IVr.CustCat = CUr.CustCat;
  IVr.InvType = kInvoiceTypeNormal;
  IVr.PriceList = RestAccr.PriceList;
  IVr.Objects = RestAccr.Objects;
  IVr.InclVAT = 1;
  GetARAcc(CUr.Code,IVr.ARAcc);
  IVr.SalesMan = RestAccr.Cashier;
  IVr.LangCode = CUr.LangCode;
  IVr.Sum0 = RestAccr.Sum0;
  IVr.Sum1 = RestAccr.Sum1;
//  IVr.Sum2 = RestAccr.Sum2;
  IVr.Sum3 = RestAccr.Sum3;
  IVr.Sum4 = RestAccr.Sum4;
  IVr.VATNr = CUr.VATNr;
  IVr.CreditCard = RestAccr.CreditCard;
  IVr.AuthorizationCode = RestAccr.AuthorizationCode;
//  IVr.RecValue = RestAccr.RecValue;
  IVr.RetValue = RestAccr.RetValue;
  IVr.MachineName = RestAccr.MachineName;
  IVr.TransTime = RestAccr.TransTime;
  IVr.DrawerCode = RestAccr.DrawerCode;
  IVr.NoTAXonVAT = 0;
  IVr.RegDate = CurrentDate;
  IVr.RegTime = CurrentTime;
  IVr.TerminalID = RestAccr.TerminalID;
//  IVr.FiscalDeviceSeqNr = RestAccr.FiscalDeviceSeqNr;
//  IVr.OfficialSerNr = RestAccr.OfficialSerNr;
//  IVr.OfficialSerNr2 = RestAccr.OfficialSerNr2;
//  IVr.CustTaxTemplateCode = RestAccr.CustTaxTemplateCode;
  IVr.PayDeal = "";
  IVVc_PastePayDeal(IVr,"","");
  if (blank(IVr.PayDeal)) then begin
    PDr.Code = CUr.PayDeal;
    if (ReadFirstMain(PDr,1,true)) then begin
      if (PDr.PDType!=kInvoiceTypeCredit) then begin
        IVr.PayDeal = CUr.PayDeal;
        IVVc_PastePayDeal(IVr,"","");
      end;
    end;
  end;
  if (blank(IVr.PayDeal)) then begin
    found = true;
    PDr.Code = "";
    while (LoopMain(PDr,1,found)) begin
      if (PDr.PDType==kInvoiceTypeNormal) then begin 
        found = false;
        IVr.PayDeal = PDr.Code;
      end;
    end;  
    IVVc_PastePayDeal(IVr,"","");
  end;  
  SetupVATBase(VATr,vatcnt);

  crwcnt = MatRowCnt(RestAccr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(RestAccr,ci,RestAccrw);
    if (RestAccrw.stp>=kInvoiceRowTypeMax) then begin
      goto LSKIPRestAccROW;
    end;
    switch (RestAccrw.stp) begin
      case kInvoiceRowTypeSplitItem:
      otherwise
        IVrw.stp = RestAccrw.stp;
        IVrw.ArtCode = RestAccrw.ArtCode;
        IVrw.Quant = RestAccrw.Quant;
        IVrw.Price = RestAccrw.Price;
        IVrw.Sum = RestAccrw.Sum;
        IVrw.vRebate = RestAccrw.vRebate;
        IVrw.BasePrice = RestAccrw.BasePrice;
        IVrw.rowGP = RestAccrw.rowGP;
        IVrw.Spec = RestAccrw.Spec;
        IVrw.VATCode = RestAccrw.VATCode;
        IVrw.PriceFactor = RestAccrw.PriceFactor;
        IVrw.CreditCard = RestAccrw.CreditCard;
        IVrw.AuthorizationCode = RestAccrw.AuthorizationCode;
        IVrw.CurncyCode = RestAccrw.CurncyCode;
        IVrw.FrRate = RestAccrw.FrRate;
        IVrw.ToRateB1 = RestAccrw.ToRateB1;
        IVrw.ToRateB2 = RestAccrw.ToRateB2;
        IVrw.BaseRate1 = RestAccrw.BaseRate1;
        IVrw.BaseRate2 = RestAccrw.BaseRate2;
        IVrw.PayMode = RestAccrw.PayMode;
        IVrw.GCNr = RestAccrw.GCNr;
        IVrw.VoidedRowNr = RestAccrw.VoidedRowNr;
        IVrw.VoidedSign = RestAccrw.VoidedSign;
        IVrw.ovst = RestAccrw.ovst;
        IVrw.ChequeNr = RestAccrw.ChequeNr;
        IVrw.CheckNr = RestAccrw.CheckNr;
        IVrw.TaxTemplateCode = RestAccrw.TaxTemplateCode;
        rownr = MatRowCnt(IVr);
        UnpackRowFieldMatrix(RestAccrw,"TaxMatrix",TMr);
        PackRowFieldMatrix(IVrw,"TaxMatrix",TMr);
        RowCalculateTaxMatrix_IVVc(IVr,rownr,IVrw);
        MatRowPut(IVr,rownr,IVrw);
    end;
LSKIPRestAccROW:;
  end;
  IVSumup(IVr,true);
  return;
end;

global
procedure IVCashToOR_FromPOS(record IVCashVc IVCashr,var record ORVc ORr)
begin
  row ORVc ORrw;
  row IVCashVc IVCashrw;
  Integer ci,crwcnt;
  Integer i,rwcnt;
  record CUVc CUr;
  record PDVc PDr;
  Boolean found;

  CUr.Code = IVCashr.CustCode;
  ReadFirstMain(CUr,1,true);
  RecordNew(ORr);
  ORr.OrdDate = IVCashr.InvDate;
  ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,-1,false,"");
  ORr.CustCode = IVCashr.CustCode;
  ORr.Addr0 = IVCashr.Addr0;
  ORr.Addr1 = IVCashr.Addr1;
  ORr.Addr2 = IVCashr.Addr2;
  ORr.Addr3 = IVCashr.Addr3;
  ORr.OurContact = IVCashr.OurContact;
  ORr.CustContact = IVCashr.ClientContact;
  ORr.CustCat = IVCashr.CustCat;
  ORr.PriceList = IVCashr.PriceList;
  ORr.Objects = IVCashr.Objects;
  ORr.InclVAT = IVCashr.InclVAT;
  ORr.SalesMan = IVCashr.SalesMan;
  ORr.ToRateB1 = IVCashr.ToRateB1;
  ORr.CurncyCode = IVCashr.CurncyCode;
  ORr.LangCode = IVCashr.LangCode;
  ORr.Location = IVCashr.Location;
//  ORr.Sign = IVCashr.Sign;
  ORr.Sum0 = IVCashr.Sum0;
  ORr.Sum1 = IVCashr.Sum1;
  ORr.Sum2 = IVCashr.Sum2;
  ORr.Sum3 = IVCashr.Sum3;
  ORr.Sum4 = IVCashr.Sum4;
  ORr.VATNr = IVCashr.VATNr;
  ORr.CustVATCode = IVCashr.CustVATCode;
  ORr.BaseSum4 = IVCashr.BaseSum4;
  ORr.FrRate = IVCashr.FrRate;
  ORr.ToRateB2 = IVCashr.ToRateB2;
  ORr.BaseRate1 = IVCashr.BaseRate1;
  ORr.BaseRate2 = IVCashr.BaseRate2;
  ORr.TotGP = IVCashr.TotGP;
  ORr.CreditCard = IVCashr.CreditCard;
  ORr.AuthorizationCode = IVCashr.AuthorizationCode;
//  ORr.RecValue = IVCashr.RecValue;
//  ORr.RetValue = IVCashr.RetValue;
  ORr.LocalMachineCode = IVCashr.LocalMachineCode;
//  ORr.TransTime = IVCashr.TransTime;
//  ORr.DrawerCode = IVCashr.DrawerCode;
  ORr.NoTAXonVAT = IVCashr.NoTAXonVAT;
  ORr.RegDate = IVCashr.RegDate;
  ORr.RegTime = IVCashr.RegTime;
  ORr.TerminalID = IVCashr.TerminalID;
//  ORr.FiscalDeviceSeqNr = IVCashr.FiscalDeviceSeqNr;
  ORr.OfficialSerNr = IVCashr.OfficialSerNr;
//  ORr.OfficialSerNr2 = IVCashr.OfficialSerNr2;
  ORr.PayDeal = "";
  ORVc_PastePayDeal(ORr);
  if (blank(ORr.PayDeal)) then begin
    PDr.Code = CUr.PayDeal;
    if (ReadFirstMain(PDr,1,true)) then begin
      if (PDr.PDType!=kInvoiceTypeCredit) then begin
        ORr.PayDeal = CUr.PayDeal;
        ORVc_PastePayDeal(ORr);
      end;
    end;
  end;
  if (blank(ORr.PayDeal)) then begin
    found = true;
    PDr.Code = "";
    while (LoopMain(PDr,1,found)) begin
      if (PDr.PDType==kInvoiceTypeNormal) then begin 
        found = false;
        ORr.PayDeal = PDr.Code;
      end;
    end;  
    ORVc_PastePayDeal(ORr);
  end;
  crwcnt = MatRowCnt(IVCashr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(IVCashr,ci,IVCashrw);
    switch (IVCashrw.stp) begin
      case kInvoiceRowTypeSplitItem:
      otherwise
        ORrw.stp = IVCashrw.stp;
        ORrw.ArtCode = IVCashrw.ArtCode;
        ORrw.Quant = IVCashrw.Quant;
        ORrw.Price = IVCashrw.Price;
        ORrw.Sum = IVCashrw.Sum;
        ORrw.vRebate = CalculateDiscountPercentage(IVCashrw.Quant,IVCashrw.Price,IVCashrw.Sum);
        ORrw.SalesAcc = IVCashrw.SalesAcc;
        ORrw.Objects = IVCashrw.Objects;
        ORrw.BasePrice = IVCashrw.BasePrice;
        ORrw.rowGP = IVCashrw.rowGP;
        ORrw.Spec = IVCashrw.Spec;
        ORrw.VATCode = IVCashrw.VATCode;
        ORrw.SerialNr = IVCashrw.SerialNr;
        ORrw.PriceFactor = IVCashrw.PriceFactor;
        ORrw.Coefficient = IVCashrw.Coefficient;
        ORrw.UnitCode = IVCashrw.UnitCode;
//        ORrw.CreditCard = IVCashrw.CreditCard;
//        ORrw.AuthorizationCode = IVCashrw.AuthorizationCode;
//        ORrw.PosCode = IVCashrw.PosCode;
//        ORrw.CurncyCode = IVCashrw.CurncyCode;
//        ORrw.FrRate = IVCashrw.FrRate;
//        ORrw.ToRateB1 = IVCashrw.ToRateB1;
//        ORrw.ToRateB2 = IVCashrw.ToRateB2;
//        ORrw.BaseRate1 = IVCashrw.BaseRate1;
//        ORrw.BaseRate2 = IVCashrw.BaseRate2;
//        ORrw.PayMode = IVCashrw.PayMode;
//        ORrw.GCNr = IVCashrw.GCNr;
//        ORrw.VoidedRowNr = IVCashrw.VoidedRowNr;
//        ORrw.VoidedSign = IVCashrw.VoidedSign;
//        ORrw.ovst = IVCashrw.ovst;
//        ORrw.MBRCode = IVCashrw.MBRCode;
//        ORrw.ChequeNr = IVCashrw.ChequeNr;
//        ORrw.CheckNr = IVCashrw.CheckNr;
        MatRowPut(ORr,MatRowCnt(ORr),ORrw);
    end;
  end;
  return;
end;

global
procedure IVCashToQT_FromPOS(record IVCashVc IVCashr,var record QTVc QTr)
begin
  row QTVc QTrw;
  row IVCashVc IVCashrw;
  Integer ci,crwcnt;
  Integer i,rwcnt;
  record CUVc CUr;
  record PDVc PDr;
  Boolean found;

  CUr.Code = IVCashr.CustCode;
  ReadFirstMain(CUr,1,true);
  RecordNew(QTr);
  QTr.QTDate = IVCashr.InvDate;
  QTr.SerNr = NextSerNr("QTVc",QTr.QTDate,-1,false,"");
  QTr.CustCode = IVCashr.CustCode;
  QTr.Addr0 = IVCashr.Addr0;
  QTr.Addr1 = IVCashr.Addr1;
  QTr.Addr2 = IVCashr.Addr2;
  QTr.Addr3 = IVCashr.Addr3;
  QTr.OurContact = IVCashr.OurContact;
  QTr.CustContact = IVCashr.ClientContact;
  QTr.CustCat = IVCashr.CustCat;
  QTr.PriceList = IVCashr.PriceList;
  QTr.Objects = IVCashr.Objects;
  QTr.InclVAT = IVCashr.InclVAT;
  QTr.SalesMan = IVCashr.SalesMan;
  QTr.ToRateB1 = IVCashr.ToRateB1;
  QTr.CurncyCode = IVCashr.CurncyCode;
  QTr.LangCode = IVCashr.LangCode;
  QTr.Location = IVCashr.Location;
//  QTr.Sign = IVCashr.Sign;
  QTr.Sum0 = IVCashr.Sum0;
  QTr.Sum1 = IVCashr.Sum1;
  QTr.Sum2 = IVCashr.Sum2;
  QTr.Sum3 = IVCashr.Sum3;
  QTr.Sum4 = IVCashr.Sum4;
  QTr.VATNr = IVCashr.VATNr;
  QTr.CustVATCode = IVCashr.CustVATCode;
  QTr.BaseSum4 = IVCashr.BaseSum4;
  QTr.FrRate = IVCashr.FrRate;
  QTr.ToRateB2 = IVCashr.ToRateB2;
  QTr.BaseRate1 = IVCashr.BaseRate1;
  QTr.BaseRate2 = IVCashr.BaseRate2;
  QTr.TotGP = IVCashr.TotGP;
//  QTr.CreditCard = IVCashr.CreditCard;
//  QTr.AuthorizationCode = IVCashr.AuthorizationCode;
//  QTr.RecValue = IVCashr.RecValue;
//  QTr.RetValue = IVCashr.RetValue;
  QTr.LocalMachineCode = IVCashr.LocalMachineCode;
//  QTr.TransTime = IVCashr.TransTime;
//  QTr.DrawerCode = IVCashr.DrawerCode;
  QTr.NoTAXonVAT = IVCashr.NoTAXonVAT;
  QTr.RegDate = IVCashr.RegDate;
  QTr.RegTime = IVCashr.RegTime;
//  QTr.TerminalID = IVCashr.TerminalID;
//  QTr.FiscalDeviceSeqNr = IVCashr.FiscalDeviceSeqNr;
//  QTr.OfficialSerNr = IVCashr.OfficialSerNr;
//  QTr.OfficialSerNr2 = IVCashr.OfficialSerNr2;
  QTr.PayDeal = "";
  if (blank(QTr.PayDeal)) then begin
    PDr.Code = CUr.PayDeal;
    if (ReadFirstMain(PDr,1,true)) then begin
      if (PDr.PDType!=kInvoiceTypeCredit) then begin
        QTr.PayDeal = CUr.PayDeal;
      end;
    end;
  end;
  if (blank(QTr.PayDeal)) then begin
    found = true;
    PDr.Code = "";
    while (LoopMain(PDr,1,found)) begin
      if (PDr.PDType==kInvoiceTypeNormal) then begin 
        found = false;
        QTr.PayDeal = PDr.Code;
      end;
    end;  
  end;
  crwcnt = MatRowCnt(IVCashr);
  for (ci=0;ci<crwcnt;ci=ci+1) begin
    MatRowGet(IVCashr,ci,IVCashrw);
    switch (IVCashrw.stp) begin
      case kInvoiceRowTypeSplitItem:
      otherwise
        QTrw.stp = IVCashrw.stp;
        QTrw.ArtCode = IVCashrw.ArtCode;
        QTrw.Quant = IVCashrw.Quant;
        QTrw.Price = IVCashrw.Price;
        QTrw.Sum = IVCashrw.Sum;
        QTrw.vRebate = CalculateDiscountPercentage(IVCashrw.Quant,IVCashrw.Price,IVCashrw.Sum);
        QTrw.SalesAcc = IVCashrw.SalesAcc;
        QTrw.Objects = IVCashrw.Objects;
        QTrw.BasePrice = IVCashrw.BasePrice;
        QTrw.rowGP = IVCashrw.rowGP;
        QTrw.Spec = IVCashrw.Spec;
        QTrw.VATCode = IVCashrw.VATCode;
        QTrw.SerialNr = IVCashrw.SerialNr;
        QTrw.PriceFactor = IVCashrw.PriceFactor;
//        QTrw.Coefficient = IVCashrw.Coefficient;
        QTrw.UnitCode = IVCashrw.UnitCode;
//        QTrw.CreditCard = IVCashrw.CreditCard;
//        QTrw.AuthorizationCode = IVCashrw.AuthorizationCode;
//        QTrw.PosCode = IVCashrw.PosCode;
//        QTrw.CurncyCode = IVCashrw.CurncyCode;
//        QTrw.FrRate = IVCashrw.FrRate;
//        QTrw.ToRateB1 = IVCashrw.ToRateB1;
//        QTrw.ToRateB2 = IVCashrw.ToRateB2;
//        QTrw.BaseRate1 = IVCashrw.BaseRate1;
//        QTrw.BaseRate2 = IVCashrw.BaseRate2;
//        QTrw.PayMode = IVCashrw.PayMode;
//        QTrw.GCNr = IVCashrw.GCNr;
//        QTrw.VoidedRowNr = IVCashrw.VoidedRowNr;
//        QTrw.VoidedSign = IVCashrw.VoidedSign;
//        QTrw.ovst = IVCashrw.ovst;
//        QTrw.MBRCode = IVCashrw.MBRCode;
//        QTrw.ChequeNr = IVCashrw.ChequeNr;
//        QTrw.CheckNr = IVCashrw.CheckNr;
        MatRowPut(QTr,MatRowCnt(QTr),QTrw);
    end;
  end;
  return;
end;

global
procedure RestAccToKitchenOrder(record RestAccVc RAr,var record KitchenOrderVc KOr)
begin
  row KitchenOrderVc KOrw;
  Integer i,rwcnt;
  row RestAccVc RArw;
  record RestBlock Restb;
  
  BlockLoad(Restb);
  RecordNew(KOr);
  KOr.TransDate = CurrentDate;
  KOr.TransTime = CurrentTime;
  KOr.CUCode = RAr.CUCode;
  KOr.CUName = RAr.CUName;
  KOr.SerNr = NextSerNr("KitchenOrderVc",KOr.TransDate,-1,false,"");
  KOr.RestAccSerNr = RAr.SerNr;
  rwcnt = MatRowCnt(RAr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(RAr,i,RArw);
    if (RArw.stp==1 and RArw.ovst!=1) then begin
    if ((RArw.KitchenStatus==kRestAccRowStatusNormal) or (RArw.KitchenStatus==kRestAccRowStatusFireOrder)) then begin
      if (RArw.AlreadyPrintedToKitchen==0) then begin
        ClearRow(KOr,KOrw,1);
        KOrw.ArtCode = RArw.ArtCode;
        KOrw.Quant = RArw.Quant;
        KOrw.Spec = RArw.Spec;
        KOrw.MealCourse = RArw.MealCourse;
        KOrw.RestAccRow = i;
        KOrw.KitchenDepartment = RArw.KitchenDepartment;
        KOrw.DishStatus = Restb.DefDishStatus;
        MatRowPut(KOr,MatRowCnt(KOr),KOrw);
      end;
    end;
    end;
  end;
//  SortRows(KOr,"MealCourse",true); // affects the free text/instruction positioning
  return;
end;
