/*
remote outer function Integer OuterReadAcceptanceRulesForFileName(string);
remote function Boolean ReadAcceptanceRules(Integer,string,var record AcceptanceRulesVc);

global
function Boolean ApprovalRulesExist(string filename,string custcode)
begin
  Boolean res;
  record AcceptanceRulesVc Acptr;
  
  switch (filename) begin
    case "ExpVc": 
      Acptr.Register = kAcceptanceExp;
    case "IntORVc": 
      Acptr.Register = kAcceptanceIntOR;
    case "IVVc": 
      Acptr.Register = kAcceptanceIV;
    case "ORVc": 
      Acptr.Register = kAcceptanceOR;
    case "POVc": 
      Acptr.Register = kAcceptancePO;
    case "PUVc": 
      Acptr.Register = kAcceptancePU;
    case "QTVc": 
      Acptr.Register = kAcceptanceQT;
    case "TBBUVc": 
      Acptr.Register = kAcceptanceTBBU;      
    case "VIVc": 
      Acptr.Register = kAcceptanceVI;      
    case "SDVc":
      Acptr.Register = kAcceptanceSD;      
    case "OPVc":
      Acptr.Register = kAcceptanceOP;      
    case "LeaveTransferVc":
      Acptr.Register = kAcceptanceLeaveTransfer;      
    case "LeaveApplicationVc":
      Acptr.Register = kAcceptanceLeaveApplication;      
    otherwise
      Acptr.Register = OuterReadAcceptanceRulesForFileName(FileName);
      if (Acptr.Register<=0) then begin
        goto LApprovalRulesExist;
      end;
  end;

  if (ReadAcceptanceRules(Acptr.Register,custcode,Acptr)) then begin
    res = true;
  end;
LApprovalRulesExist:;  
  ApprovalRulesExist = res;
  return;
end;
*/