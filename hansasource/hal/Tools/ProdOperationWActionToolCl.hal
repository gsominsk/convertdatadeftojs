external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure ProdOperationSumup(var record ProdOperationVc);

global
procedure PasteProdOperationActualQty(var record ProdOperationVc ProdOpr,string activeef,string efstr)
begin
  vector integer vItemIsSerNr;
  vector val vItemQty;
  row ProdOperationVc ProdOprw;
  Integer i,rwcnt;
  val qty,tqty;
  record INVc INr;
  
  switch (ProdOpr.RowsHoldActualQty) begin
//    case 1: 
    otherwise //if we change actual qty we should change qtys 
      rwcnt = MatRowCnt(ProdOpr);        
      tqty = ProdOPr.ActualQty;
      switch (activeef) begin
        case "ActualQty": 
          qty = StringToVal(efstr,M4Qty);
          tqty = ProdOPr.ActualQty;
        case "Qty": 
          qty = StringToVal(efstr,M4Qty);
          tqty = ProdOPr.Qty;
      end;
      if (qty==0) then begin
        qty = ProdOpr.Qty;
      end;

      if (qty>0) then begin
        for (i=0;i<rwcnt;i=i+1) begin         
          MatRowGet(ProdOpr,i,ProdOprw);
          if (ReadFirstItem(ProdOprw.Item,INr,true,true)) then begin end;
          if (INr.SerNrf!=1) then begin
            if (ProdOprw.InQty>0) then begin
              ProdOprw.InQty = ProdOprw.InQty/qty;
            end;
            if (ProdOprw.OutQty>0) then begin
              ProdOprw.OutQty = ProdOprw.OutQty/qty;
            end;
            MatRowPut(ProdOpr,i,ProdOprw);
          end else begin
            vItemIsSerNr[Inr.Code] = 1;
            if vItemQty[INr.Code] >= tqty then begin
              MatRowDelete(ProdOPr,i);
              i = i - 1;
              rwcnt = rwcnt - 1;
            end else begin
              ProdOprw.RelVal = 1.00/tqty;
              MatRowPut(ProdOpr,i,ProdOPrw);
              vItemQty[ProdOprw.Item] = vItemQty[ProdOprw.Item] + (ProdOprw.InQty+ProdOprw.OutQty);
            end;          
          end;
        end;
      end;
      switch (activeef) begin
        case "ActualQty": 
          qty = ProdOpr.ActualQty;
          if (qty==0) then begin
            qty = ProdOpr.Qty;
          end;
        case "Qty": 
          qty = ProdOpr.Qty;
      end;
      for (i=0;i<rwcnt;i=i+1) begin         
        MatRowGet(ProdOpr,i,ProdOprw);
        if (ReadFirstItem(ProdOprw.Item,INr,true,true)) then begin end;
        if (INr.SerNrf!=1) then begin
          if (ProdOprw.InQty>0) then begin
            ProdOprw.InQty = ProdOprw.InQty*qty;
          end;
          if (ProdOprw.OutQty>0) then begin
            ProdOprw.OutQty = ProdOprw.OutQty*qty;
          end;
          MatRowPut(ProdOpr,i,ProdOprw);
        end else begin  
          if vItemQty[ProdOprw.Item]<tqty then begin
            rwcnt = rwcnt + 1;
            MatRowInsert(ProdOpr,i,ProdOprw);
            vItemQty[ProdOprw.Item] = vItemQty[ProdOprw.Item] + ProdOprw.InQty + ProdOprw.OutQty;
          end;
        end;
      end;
  end;    
  ProdOperationSumup(ProdOpr);
  return;
end;
