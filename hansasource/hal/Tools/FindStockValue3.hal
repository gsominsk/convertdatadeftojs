external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean FindItemVAR(string,var string,var string,var string,var string);

global
procedure FindPositionValue(string position,string location,var val instock,var val instock2,var val instockmov)
BEGIN
  record PISVc PISr;
  Boolean TrHs;

  instock = blankval;
  instock2 = blankval;
  instockmov = blankval;
  PISr.Position = position;
  PISr.Location = location;
  TrHs = true;
  while (LoopKey("Position",PISr,2,TrHs)) begin
    if (PISr.Position!=position) then begin TrHs = false; end;
    if (nonblank(location)) then begin
      if (PISr.Location!=location) then begin TrHs = false; end;
    end;
    if (TrHs) then begin
      instock = instock + PISr.Instock;
      instock2 = instock2 + PISr.Instock2;
      instockmov = instockmov + PISr.InStockMov;
    end;
  end;
  RETURN;
END;

global
procedure FindStockValueAtPosition(string item,string location,string position,var record PISVc PISp)
BEGIN
  record PISVc PISr;
  record MainStockBlock MainStockRec;
  string 60 sz,msk,mskrep;
  string 200 varsubset,variety;
  Boolean varf,found,testf;
  Integer keys;
  record INVc INr;
  string 255 keystr;

  BlockLoad(MainStockRec);
  RecordNew(PISp);
  if (FindItemVAR(item,sz,msk,mskrep,varsubset)) then begin
    varf = true;
  end;
  if (varf) then begin
    ReadFirstItem(item,INr,false,false);
  end;
  PISp.Instock = 0;
  PISp.Instock2 = 0;
  PISp.InStockMov = 0;
  PISp.LeftQty = 0;
  if (varf) then begin
    variety = right(item,len(item)-len(INr.Code));
    found = true;
    PISr.ArtCode = INr.Code;
    PISr.Location = location;
    if (blank(PISr.Location)) then begin
      PISr.Location = MainStockRec.MainStock;
    end;  
    PISr.Position = position;
    keys = 3;
    keystr = "ArtCode";
    if (item!=INr.Code) then begin
      PISr.Variety = variety;
      keys = 4;
      keystr = "CodeVariety";
    end;
    PISr.Variety = variety;
    PISr.Location = location;
    while (LoopKey(keystr,PISr,keys,found)) begin    
      if (PISr.ArtCode!=INr.Code) then begin found = false; end;
      if (nonblank(variety)) then begin
        if (PISr.Variety!=variety) then begin found = false; end;
      end;
      if (PISr.Position!=position) then begin found = false; end;
      testf = true;
      if (PISr.Location!=location) then begin
        testf = false;
      end;
      if (location!=";;;") then begin
        if (PISr.Location==";;;") then begin
          testf = false;
        end;
      end;
      if (found and testf) then begin
       PISp.ArtCode = PISr.ArtCode;
       PISp.Location = PISr.Location;
       PISp.Instock = PISp.Instock + PISr.Instock;
       PISp.Instock2 = PISp.Instock2 + PISr.Instock2;      
       PISp.InStockMov = PISp.InStockMov + PISr.InStockMov;
       PISp.LeftQty = PISp.LeftQty + PISr.LeftQty;
      end;
    end;
  end else begin
    PISr.ArtCode = item;
    PISr.Location = location;
    if (blank(PISr.Location)) then begin
      PISr.Location = MainStockRec.MainStock;
    end;  
    PISr.Position = position;
    if (ReadFirstMain(PISr,3,true)) then begin
      RecordCopy(PISp,PISr);
    end;
  end;
  RETURN;
END;

global // This would be better with an extra index field for Serial Numbers
function Integer CheckSerialatPositionInItemHist(string aitem,string location,string position,string serialnr,val qty)
BEGIN
  Integer res;
  record ItemHistVc IHr;
  string 60 sz,msk,mskrep;
  string 200 varsubset,variety;
  Boolean varf,found,testf,foundVarf;
  Integer keys;
  record INVc INr;
  string 255 keystr,item;
  LongInt ItemHistSer;
  val remqty;

  item = aitem;
  if (FindItemVAR(item,sz,msk,mskrep,varsubset)) then begin
    varf = true;
  end;
  if (varf) then begin
    ReadFirstItem(item,INr,false,false);
    item = INr.Code;
  end;
  res = -1;
  
  keystr = "ArtCodeSerialNr";
  keys = 2;
  if (varf) then begin
    variety = right(item,len(item)-len(INr.Code));
  end;

  IHr.ArtCode = item;
  IHr.SerialNr = serialnr;    
  found = true;
  while (LoopKey(keystr,IHr,keys,found)) begin
    if (IHr.ArtCode!=item) then begin found = false; end;
    if (IHr.SerialNr!=serialnr) then begin found = false; end;
    if (found) then begin
      testf = true;
      if (nonblank(variety)) then begin
        if (IHr.Variety!=variety) then begin testf = false; end;
      end;
      if (IHr.Position!=position) then begin testf = false; end;
      if (IHr.Location!=location) then begin testf = false; end;
      if (testf) then begin
        ItemHistSer = IHr.SerNr;
        remqty = remqty + IHr.RemQty;
      end;
    end;
  end;

/*  
  if (varf) then begin
    variety = right(item,len(item)-len(INr.Code));
    found = true;
    foundVarf = false;
    ItemHistSer = -1;
    
    IHr.ArtCode = INr.Code;
    IHr.SerialNr = serialnr;    
    while (LoopKey(keystr,IHr,keys,found)) begin          
      foundVarf = true;
      if (IHr.ArtCode!=INr.Code) then begin 
        found = false;  
        foundVarf = false; 
      end;
      if (foundVarf) then begin 
        if (nonblank(variety)) then begin
          if (IHr.Variety!=variety) then begin foundVarf = false; end;
        end;
      end;
      if (foundVarf) then begin 
        if (IHr.Position!=position) then begin foundVarf = false; end;
      end;  
      if (foundVarf) then begin 
        if (IHr.Location!=location) then begin
          foundVarf = false;
        end;
      end;  
      if (foundVarf) then begin
        ItemHistSer = IHr.SerNr;
        remqty = remqty + IHr.RemQty;
      end;
    end;      
  end else begin
    IHr.ArtCode = item;
    IHr.SerialNr = serialnr;    
    found = true;
    while (LoopKey(keystr,IHr,keys,true)) begin ????? true ???
      foundVarf = true;
      if (IHr.ArtCode!=item) then begin 
        found = false;  
        foundVarf = false; 
      end;
      if (foundVarf) then begin 
        if (nonblank(variety)) then begin
          if (IHr.Variety!=variety) then begin foundVarf = false; end;
        end;
      end;
      if (foundVarf) then begin 
        if (IHr.Position!=position) then begin foundVarf = false; end;
      end;  
      if (foundVarf) then begin 
        if (IHr.Location!=location) then begin
          foundVarf = false;
        end;
      end;  
      if (foundVarf) then begin
        ItemHistSer = IHr.SerNr;
        remqty = remqty + IHr.RemQty;
      end;
    end;
  end;
*/  
  if (remqty>=qty) then begin
    res = 0;
  end else begin
    res = -1;   // No stock at this position
  end;
  CheckSerialatPositionInItemHist = res;
  RETURN;
END;