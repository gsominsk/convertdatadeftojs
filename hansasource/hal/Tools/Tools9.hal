external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external procedure ExtractObj(string,var Integer,var string);
external function Boolean FindTheUser(var record UserVc);

global
function Integer CheckUsers(string userstr,string ccuserstr,var string resuser,Boolean checkcuf)
BEGIN
  Integer res;
  string 255 rstr;
  Integer ocnt;
  record UserVc Userr;
  record GlobalUserVc GlobalUserr;
  Boolean found;
  Array string 20 ots;//[60]
  Integer pos;
  Integer i;
  string 255 ostr;
  record CUVc CUr;
  Boolean cufound;
  
  resuser = "";
  res = 0;
  rstr = "";
  ocnt = 0;
  pos = 0;
  ExtractObj(userstr,pos,ostr);
  while (nonblank(ostr)) begin
    if (nonblank(ostr)) then begin
      cufound = false;
      ots[ocnt] = ostr;
      ocnt = ocnt + 1;
      Userr.Code = ostr;
      found = FindTheUser(Userr);
      if (found==false) then begin
        if (checkcuf) then begin
          CUr.Code = ostr;
          cufound = ReadFirstMain(CUr,1,true);
        end;
      end;
      if (found==false) then begin
        if (cufound==false) then begin
          res = 1028;
          if (blank(rstr)) then begin
            rstr = "  ";
            rstr = rstr & ostr;
          end else begin
            rstr = rstr & ",";
            rstr = rstr & ostr;
          end;
        end;
      end else begin
        if (Userr.TerminatedFlag!=0) then begin
          resuser = Userr.Code;
          res = 1084;
          goto LCheckUsers;
        end;        
      end;
    end;
    ExtractObj(userstr,pos,ostr);
  end;
  if (nonblank(rstr)) then begin
    resuser = rstr;
    res = 1028;
    goto LCheckUsers;
  end;
  
  pos = 0;
  ExtractObj(ccuserstr,pos,ostr);
  while (nonblank(ostr)) begin
    if (nonblank(ostr)) then begin
      for (i=0;i<ocnt;i=i+1) begin
        if (SetInSet(ots[i],ostr)) then begin
          res = 1900;
          goto LCheckUsers;
        end;
      end;
      Userr.Code = ostr;
      found = FindTheUser(Userr);
      if (found==false) then begin
        if (checkcuf) then begin
          CUr.Code = ostr;
          cufound = ReadFirstMain(CUr,1,true);
        end;
      end;
      if (found==false) then begin
        if (cufound==false) then begin
          res = 1028;
          
          if (blank(rstr)) then begin
            rstr = "  ";
            rstr = rstr & ostr;
          end else begin
            rstr = rstr & ",";
            rstr = rstr & ostr;
          end;
        end;
      end else begin
        if (Userr.TerminatedFlag!=0) then begin
          resuser = Userr.Code;
          res = 1084;
          goto LCheckUsers;
        end;
      end;
    end;
    ExtractObj(ccuserstr,pos,ostr);
  end;  
  if (nonblank(rstr)) then begin
    resuser = rstr;
    res = 1028;
    goto LCheckUsers;
  end;  
LCheckUsers:;
  CheckUsers = res;
  RETURN;
END;

global
function Integer CheckResources(string resources,var string resresource)
BEGIN
  Integer res;
  string 255 rstr;
  record ResVc Resr;
  Boolean found;
  Integer pos;
  Integer i;
  string 255 ostr;
  
  resresource = "";
  res = 0;
  rstr = "";
  pos = 0;
  ExtractObjWithSeparator(",",resources,true,pos,ostr);
  while (nonblank(ostr)) begin
    if (nonblank(ostr)) then begin
      Resr.Code = ostr;      
      found = ReadFirstMain(Resr,1,true);
      if (found==false) then begin
        res = 2027;
        if (blank(rstr)) then begin
          rstr = "  ";
          rstr = rstr & ostr;
        end else begin
          rstr = rstr & ",";
          rstr = rstr & ostr;
        end;
      end else begin
        if (Resr.Terminated!=0) then begin
          resresource = Resr.Code;
          res = 1084;
          goto LCheckResources;
        end;        
      end;
    end;
    ExtractObjWithSeparator(",",resources,true,pos,ostr);
  end;  
  if (nonblank(rstr)) then begin
    resresource = rstr;
    res = 2027;
    goto LCheckResources;
  end;  
LCheckResources:;
  CheckResources = res;
  RETURN;
END;

global
function Integer CheckResClass(string orgobjstr,var string resstr)
BEGIN
  Integer res;
  string 255 rstr;
  Integer ocnt,j;
  record ResClasVc RUr;
  Boolean found;
  Array string 5 ots;
  Integer pos;
  string 255 ostr;
  string 255 objstr;

  resstr = "";
  res = 0;
  
  pos = 0;
  ocnt = 0;
  objstr = orgobjstr;
  ExtractObj(objstr,pos,ostr);
  while (nonblank(ostr)) begin
    ots[ocnt] = "";
    if (nonblank(ostr)) then begin
      ots[ocnt] = "";
      RUr.Code = ostr;
      found = ReadFirstMain(RUr,1,true);
      if (found==false) then begin
        res = 0;
        if (blank(rstr)) then begin
          rstr = "  ";
          rstr = rstr & ostr;
        end else begin
          rstr = rstr & ",";
          rstr = rstr & ostr;
        end;
      end else begin
        if (nonblank(RUr.Type)) then begin
          ots[ocnt] = RUr.Type;
          for (j = 0 ;j<ocnt ;j=j+1) begin
            if (ots[j]==ots[ocnt]) then begin
              res = 1719;
              resstr = ostr;
              goto LCheckResClass;
            end;
          end;
        end;
      end;
    end;
    ExtractObj(objstr,pos,ostr);
    ocnt = ocnt + 1;
  end;
  if (nonblank(rstr)) then begin
    res = 1725;
    resstr = ": " & rstr;
    goto LCheckResClass;
  end;
LCheckResClass:;
  CheckResClass = res;
  RETURN;
END;

global
function LongInt CheckVarietyGroups(string vargroups,var string resvargr)
BEGIN
  LongInt res;
  string 255 rstr;
  record VARGVc VARGr;
  Boolean found;
  Integer pos;
  string 255 ostr;
  
  resvargr = "";
  res = 0;
  pos = 0;
  ExtractObj(vargroups,pos,ostr);
  while (nonblank(ostr)) begin
    if (nonblank(ostr)) then begin
      VARGr.Code = ostr;
      found = ReadFirstMain(VARGr,1,true);
      if (found==false) then begin
        res = 1290;
        resvargr = ostr;
        goto LCheckVarietyGroups;
      end;
    end;
    ExtractObj(vargroups,pos,ostr);
  end;
LCheckVarietyGroups:;
  CheckVarietyGroups = res;
  RETURN;
END;

global
function LongInt CheckVarieties(string varieties,var string resvarr)
BEGIN
  LongInt res;
  string 255 rstr;
  record VARVc VARr;
  Boolean found;
  Integer pos;
  string 255 ostr;
  
  resvarr = "";
  res = 0;
  pos = 0;
  ExtractObj(varieties,pos,ostr);
  while (nonblank(ostr)) begin
    if (nonblank(ostr)) then begin
      if (ostr!="*") then begin
        VARr.Code = ostr;
        found = ReadFirstMain(VARr,1,true);
        if (found==false) then begin
          res = 1290;
          resvarr = ostr;
          goto LCheckVarieties;
        end;
      end;
    end;
    ExtractObj(varieties,pos,ostr);
  end;
LCheckVarieties:;
  CheckVarieties = res;
  RETURN;
END;