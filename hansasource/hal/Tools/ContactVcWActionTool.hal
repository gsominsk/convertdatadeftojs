external function Boolean InterNetAddrTest(string);
external function Boolean CurUserHasMailbox(var string);

global
updating procedure MakeActFromContactVc(var record ContactVc Contactp,var record ActVc Actp)
BEGIN
  record CUVc CUr;
  Integer curcomp;

  if (ReadFirstMain(Contactp,0,true)) then begin end;  
  Actp.SerNr = -1;
  Actp.Invalid = 0;
  Actp.TodoFlag = 1;
  Actp.CUCode = Contactp.Company;
  Actp.CUName = Contactp.CompName;
  Actp.Contact = Contactp.Name;  
  Actp.MainPersons = CurrentUser;
  Actp.Phone = Contactp.Phone;
  Actp.TransDate = CurrentDate;
  Actp.SerNr = NextSerNr("ActVc",Actp.TransDate,-1,false,"");
  if (RecordStore(Actp,false)) then begin 
    curcomp = CurrentCompany;
    CreateRecordLink(Actp,curcomp,Contactp,curcomp);  
    CreateRecordLink(Contactp,curcomp,Actp,curcomp);  
  end;
  RETURN;
END;

global
function Boolean MakeMailFromContact(record ContactVc Contactr,var record MailVc Mailr,Boolean readf)
BEGIN
  record ASTBlock ASTRec;
  Boolean res;
  string 255 tstr;
  row MailVc marw;
  
  if (readf) then begin
    if (ReadFirstMain(Contactr,0,true)) then begin end;  
  end;
  RecordNew(Mailr);

  if ((CurUserHasMailbox(tstr)==false) or (blank(Contactr.Email))) then begin
    goto LMakeMailFromContact;
  end;
  if (InterNetAddrTest(Contactr.Email)==false) then begin
    MessageBox(1353,Contactr.Email);
    goto LMakeMailFromContact;
  end;
  ClearRow(Mailr,marw,1);
  marw.RowTyp = 0;
  marw.AddrCode = Contactr.Email;
  MatRowPut(Mailr,1,marw);
  /*
  Mailr.SerNr = NextSerNr("MailVc",Mailr.TransDate,-1,false,"");
  if (Mailr.SerNr>0) then begin
    if (RecordStore(Mailr,false)) then begin
      res = true;
    end;
  end;
  */
  res = true;
LMakeMailFromContact:;  
  MakeMailFromContact = res;
  RETURN;
END;
