external function Boolean GetItemPurchasePriceDiscount(string,string,Date,string,string,val,string,string,string,string,Integer,Boolean,val,val,val,val,val,
         var record INVc,var record PIVc,var Boolean,var val,var string,var val,var string,var string,var Boolean,var string);
external function Boolean POCODchrsum(record POCOVc,Integer);
external procedure POCOSumup(var record POCOVc);
external function string 255 FindINObjects(string,string);
external function Boolean GetFirstItem(var string,var record INVc);
external function val DivRateToBase1(string,val,val,val,val,val,val,roundmode);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure GetINPurchaseControlAcc(record INVc,var string,string,string,Integer);
external procedure GetItemVATCode(string,Integer,var string,Boolean);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external function Boolean FindItemVAR2(string,var string,var string,var string);
external procedure DivPIFactor(val,val,var val);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure VISumup(record VIVc,var val);
external procedure VICalcVals(var record VIVc);
external procedure CalcVATBaseVAT(record SMVc,Integer,Integer,Integer,var val,var val);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure GetPIPurchseCost(string,string,string,var val);
external function Boolean GetAccName(string,var string,Integer);
external procedure VICalcEReb(var record VIVc);
external procedure GetAPAcc(string,var string);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure POSumup(var record POVc);
external function Boolean VIVc_PasteVECode(var record VIVc,Integer,Boolean,Boolean,var string);

procedure POCOMultiLineText(record POCOVc POCOr,record INVc INr,string  langcode,Integer arow)
BEGIN
  row POCOVc POCOrw;
  string 255 tstr;
  Integer tcnt;
 
  tcnt = 2;
  while (GetItemNameStr(tcnt,tstr,langcode,INr.Name,INr.Code)) begin      
    ClearRow(POCOr,POCOrw,1);
    POCOrw.Spec = tstr;
    MatRowInsert(POCOr,arow+tcnt-1,POCOrw);
    tcnt = tcnt + 1;
  end;
  RETURN;
END;

global
function Boolean PastePOCOInPO(record POCOVc POCOp,var record POVc POp)
BEGIN
  row POVc POrw;
  row POCOVc POCOrw;
  Boolean res,pifound;
  Integer rwcnt,i;
  val v;
  record INVc INr;
  record PIVc PIr;  
  val price,reb,t;
  string 255 descstr,vatcode,purchacc,taxtemplatecode;
  Boolean nomoreremotecalls;
  
  res = true;
  POp.VECode = POCOp.VECode;
  POp.TransDate = CurrentDate;
  POp.PayDeal = POCOp.PayDeal;
  POp.ExportFlag = POCOp.ExportFlag;
  POp.Addr0 = POCOp.Addr0;
  POp.Addr1 = POCOp.Addr1;
  POp.Addr2 = POCOp.Addr2;
  POp.Addr3 = POCOp.Addr3;
  POp.InvAddr3 = POCOp.InvAddr3;
  POp.InvAddr4 = POCOp.InvAddr4;
  POp.POCQStatNr = -1;
  POp.POClass = "";
  POp.ShipAddr0 = POCOp.ShipAddr0;
  POp.ShipAddr1 = POCOp.ShipAddr1;
  POp.ShipAddr2 = POCOp.ShipAddr2;
  POp.ShipAddr3 = POCOp.ShipAddr3;
  POp.DelAddr3 = POCOp.DelAddr3;
  POp.DelAddr4 = POCOp.DelAddr4;
  POp.VEContact = POCOp.VEContact;
  POp.OurContact = POCOp.OurContact;
  POp.ShipMode = POCOp.ShipMode;
  POp.CurncyCode = POCOp.CurncyCode;
  POp.PlanShip = POCOp.PlanShip;
  POp.ShipDeal = POCOp.ShipDeal;
  POp.LangCode = POCOp.LangCode;
  POp.OrdNr = -1;
  POp.POCOSerNr = POCOp.SerNr;
  POp.ToRateB1 = POCOp.ToRateB1;
  POp.Closed = 0;
  POp.CostPerUnit = "";
  POp.Sum0 = POCOp.Sum0;
  POp.Sum1 = POCOp.Sum1;
  POp.Sum2 = POCOp.Sum2;
  POp.Sum3 = POCOp.Sum3;
  POp.Sum4 = POCOp.Sum4;
  POp.PRCode = "";
  POp.Comment = POCOp.Comment1;
  POp.InclVAT = POCOp.InclVAT;
  POp.Location = POCOp.Location;
  POp.VEFactoring = POCOp.VEFactoring;
  POp.InvoiceToCode = POCOp.InvoiceToCode;
  POp.ExportedFlag = 0;
  POp.FrRate = POCOp.FrRate;
  POp.ToRateB2 = POCOp.ToRateB2;
  POp.BaseRate1 = POCOp.BaseRate1;
  POp.BaseRate2 = POCOp.BaseRate2;
  POp.WONr = -1;
  POp.Objects = POCOp.Objects;
  POp.Reference = POCOp.Reference;
  POp.SalesMan = POCOp.SalesMan;
  rwcnt = MatRowCnt(POCOp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(POCOp,i,POCOrw);
    GetItemPurchasePriceDiscount(POCOp.VECode,POCOp.Location,POCOp.TransDate,POCOp.CurncyCode,POCOrw.ArtCode,POrw.Quant,
                                 POCOp.LangCode,"","","",POCOp.ExportFlag,true,
                                 POCOp.FrRate,POCOp.ToRateB1,POCOp.ToRateB2,POCOp.BaseRate1,POCOp.BaseRate2,
                                 INr,PIr,pifound,price,descstr,reb,vatcode,purchacc,nomoreremotecalls,taxtemplatecode);

    ClearRow(POp,POrw,1);
    POrw.VEArtCode = POCOrw.VEArtCode;
    POrw.ArtCode = POCOrw.ArtCode;
    if (POCOrw.Ordered>0) then begin
      POrw.Quant = POCOrw.Quant - POCOrw.Ordered; 
    end else begin
      POrw.Quant = POCOrw.Quant;
    end;   
    POrw.Spec = POCOrw.Spec;
    POrw.Price = POCOrw.Price;
    CalcSum(POrw.Quant,POrw.Price,0,POrw.vRebate,v,0);
    POrw.Sum = v;
    POrw.vRebate = POCOrw.vRebate;
    POrw.VATCode = POCOrw.VATCode;
    POrw.Objects = POCOrw.Objects;
    POrw.VEQuant = POCOrw.VEQuant;
    POrw.PIFactor = POCOrw.PIFactor;
    POrw.PriceFactor = POCOrw.PriceFactor;
    POrw.VARList = POCOrw.VARList;
    POrw.PRCode = "";
    POrw.WSNr = -1;
    POrw.CostAcc = POCOrw.CostAcc;
    POrw.POCORow = i;
    POrw.UnitCode = INr.Unittext;
    POrw.VEUnit =  PIr.VEUnit;
    if (POrw.Quant!=0) then begin
      MatRowPut(POp,i,POrw);
    end;
  end;
  if (MatRowCnt(POp)>0) then begin
    POSumup(POp);
  end else begin
    res = false;
  end;
  PastePOCOInPO = res;
  RETURN;
END;

global
updating function Boolean PastePOCOInVI(record POCOVc POCOp,var record VIVc VIp)
BEGIN
  Integer i,rwcnt,vatcnt;
  Integer j,virwcnt;
  row VIVc VIrw;
  row POCOVc POCOrw;
  Integer nrwcnt;
  record INVc INr;
  val totqty,p,t1;
  Integer line;
  record CUVc VEr;
  record VITBlock VITRec;
  record AccBlock ARAccRec;
  Boolean res;
  Boolean itemfoundf;
  record SMVc VATr;
  string 255 tstr;
  record ITVc ITr;

  SetupVATBase(VATr,vatcnt);            
  if (nonblank(POCOp.InvoiceToCode)) then begin
    VIp.OrgVE = POCOp.VECode;
    VEr.Code = POCOp.InvoiceToCode;
  end else begin
    VEr.Code = POCOp.VECode;
  end;
  if (ReadFirstMain(VEr,1,true)==false) then begin goto LPastePOCOInVI; end;
  if (blank(VEr.AccCost)) then begin goto LPastePOCOInVI; end;
  res = true;
//  if (POCOp.Closed!=0) then goto LPastePOCOInVI;// the same as OR
  VIp.ExportFlag = POCOp.ExportFlag;
  VIp.POCOSerNr = POCOp.SerNr;
  VIp.InvDate = CurrentDate; // Lets see if someone complains 
  VIp.TransDate = CurrentDate;
  VIp.VECode = VEr.Code;
  VIp.VEName = POCOp.Addr0;
  VIp.CurncyCode = POCOp.CurncyCode;
  VIp.PayDeal = POCOp.PayDeal;
  VIp.Objects = POCOp.Objects;
  VIp.VEFactoring = POCOp.VEFactoring;
  VIp.LangCode = POCOp.LangCode;
  VIp.POCQStatNr = -1;
  VIp.POCOSerNr = POCOp.SerNr;
  VIp.BankName = VEr.AccOperator;
  VIp.BankAcc = VEr.BankAccount;
  GetAPAcc(VEr.Code,tstr);
  VIp.APAcc = tstr;
  VIp.FrRate = POCOp.FrRate;
  VIp.ToRateB1 = POCOp.ToRateB1;
  VIp.ToRateB2 = POCOp.ToRateB2;
  VIp.BaseRate1 = POCOp.BaseRate1;
  VIp.BaseRate2 = POCOp.BaseRate2;
  VIVc_PasteVECode(VIp,0,false,true,tstr);
  rwcnt = MatRowCnt(POCOp);
  VICalcEReb(VIp);
  nrwcnt = 0;
  BlockLoad(VITRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(POCOp,i,POCOrw);
    if (blank(POCOrw.ArtCode)) then begin goto L44PastePOCOInVI; end;
    if (POCOrw.VINr!=-1) then begin goto L44PastePOCOInVI; end;
    virwcnt = MatRowCnt(VIp);
    line = -1;
    for (j=0;j<virwcnt;j=j+1) begin
      MatRowGet(VIp,j,VIrw);
      switch (VITRec.TransferItems) begin
        case 0:
          if (POCOrw.VATCode==VIrw.VATCode) then begin
            line = j;
            goto L33PastePOCOInVI;
          end;        
        case 1:
          if ((POCOrw.VATCode==VIrw.VATCode) and (POCOrw.ArtCode==VIrw.Item)) then begin
            line = j;
            goto L33PastePOCOInVI;
          end;
        case 2: ;
      end;
    end;
L33PastePOCOInVI:;
    INr.Code = POCOrw.ArtCode;
    itemfoundf = ReadFirstMain(INr,1,true);
    if (line==-1) then begin
      virwcnt = virwcnt + 1;
      line = virwcnt - 1;
      ClearRow(VIp,VIrw,1);
    end;
    if (blank(VIrw.AccNumber)) then begin
      VIrw.AccNumber = VEr.AccCost;
      if (GetAccName(VIrw.AccNumber,tstr,60)) then begin end;
      VIrw.Comment = tstr;
      VIrw.VATCode = POCOrw.VATCode;
      VIrw.Sum = blankval;
      VIrw.OrdRow = -2; // Row comes from Order, but is not connected to a specific row 
      if (VITRec.TransferItems!=0) then begin
        VIrw.OrdRow = i;
        VIrw.Item = POCOrw.ArtCode;
        VIrw.Objects = POCOrw.Objects;
        INr.Code = POCOrw.ArtCode;
        if (itemfoundf) then begin
          ITr.Code = INr.Group;
          if (ReadFirstMain(ITr,1,true)) then begin
            if (nonblank(ITr.CostAcc)) then begin
              VIrw.AccNumber = ITr.CostAcc;
              if (GetAccName(VIrw.AccNumber,tstr,60)) then begin end;
              VIrw.Comment = tstr;
            end;
          end;
          if (VITRec.TransferItems==2) then begin
            if (nonblank(INr.CostAcc)) then begin
              VIrw.AccNumber = INr.CostAcc;
              if (GetAccName(VIrw.AccNumber,tstr,60)) then begin end;
              VIrw.Comment = tstr;
            end;
          end;                      
        end;
      end;
      if (VITRec.TransferItems==2) then begin
        if (nonblank(POCOrw.CostAcc)) then begin
          VIrw.AccNumber = POCOrw.CostAcc;
          if (GetAccName(VIrw.AccNumber,tstr,60)) then begin end;
          VIrw.Comment = tstr;
        end;  
      end;              
    end;
    VIrw.Sum = VIrw.Sum + POCOrw.Sum;
    VIrw.qty = VIrw.qty + POCOrw.Quant;
    VIrw.PrepayNr = -1;
    VIrw.PrepayAmount = blankval;
    GetPIPurchseCost(POCOrw.ArtCode,POCOp.VECode,POCOrw.VEArtCode,totqty);
    totqty = totqty * VIrw.qty;
    VIrw.Sum = VIrw.Sum + totqty;    
    VIp.PayVal = VIp.PayVal + totqty;
    MatRowPut(VIp,line,VIrw);
L44PastePOCOInVI:;
  end;
  virwcnt = MatRowCnt(VIp);
  for (i=0;i<virwcnt;i=i+1) begin
    MatRowGet(VIp,i,VIrw);
    AddVATBase(VATr,VIrw.VATCode,VIrw.Sum,blankval,vatcnt,0,VIp.NoTAXonVAT);
    VIp.PayVal = VIp.PayVal + VIrw.Sum;
  end;
  CalcVATBaseVAT(VATr,POCOp.InclVAT,POCOp.NoTAXonVAT,vatcnt,p,t1);
  VIp.PayVal = VIp.PayVal + p;
  VICalcVals(VIp);
  VISumup(VIp,p);
  if (p>0) then begin//!=
    BlockLoad(ARAccRec);
    ClearRow(VIp,VIrw,1);
    line = virwcnt;
    VIrw.AccNumber = ARAccRec.RndAcc;    
    if (GetAccName(VIrw.AccNumber,tstr,60)) then begin end;
    VIrw.Comment = tstr;
    VIrw.Sum = -p;
    VIrw.VATCode = "";
    VIrw.TaxTemplateCode = "";
    MatRowPut(VIp,line,VIrw);
  end;
LPastePOCOInVI:;
  PastePOCOInVI = res;
  RETURN;
END;

global  
procedure POCOGetRate(var record POCOVc POCOp)
BEGIN
  val fr,to1,to2,br1,br2;
  string 10 crncy;
 
  crncy = POCOp.CurncyCode;
  GetFullCurncyRate(crncy,POCOp.TransDate,fr,to1,to2,br1,br2);
  POCOp.CurncyCode = crncy;
  POCOp.FrRate = fr;
  POCOp.ToRateB1 = to1;
  POCOp.ToRateB2 = to2;
  POCOp.BaseRate1 = br1;
  POCOp.BaseRate2 = br2;
  RETURN;
END;

global  
function Boolean POCOVc_PasteVECode(var record POCOVc POCOp,Boolean warnf)
BEGIN
  Boolean res;
  record CUVc VEr;
  
  VEr.Code = POCOp.VECode;
  res = ReadFirstMain(VEr,1,true);
  if (res) then begin
    if (VEr.blockedFlag!=0) then begin res = false; end;
  end;
  if (res) then begin
    POCOp.Addr0 = VEr.Name;
    POCOp.Addr1 = VEr.InvAddr0;
    POCOp.Addr2 = VEr.InvAddr1;
    POCOp.Addr3 = VEr.InvAddr2;
    POCOp.InvAddr3 = VEr.InvAddr3;
    POCOp.InvAddr4 = VEr.InvAddr4;
    POCOp.VEContact = VEr.Person;
    POCOp.PayDeal = VEr.VEPayDeal;
    POCOp.Objects = VEr.VEObjects;
    POCOp.CurncyCode = VEr.VECurncyCode;
    POCOGetRate(POCOp);
    POCOp.LangCode = VEr.LangCode;
    POCOp.ShipMode = VEr.VEShipMode;
    POCOp.ShipDeal = VEr.VEShipDeal;
    POCOp.VEFactoring = VEr.VEFactoring;
    POCOp.InvoiceToCode = VEr.VEInvoiceToCode;
    POCOp.ExportFlag = VEr.ExportFlag;
    if (warnf) then begin
      if (nonblank(VEr.VEWarnText1)) then begin
        MessageBox(0,VEr.VEWarnText1);
      end;
    end;
    POCOSumup(POCOp);    
  end;
  POCOVc_PasteVECode = res;
  RETURN;
END;

global  
function Boolean POCOVc_PasteArtCode(var record POCOVc POCOp,Integer rownr)
BEGIN
  Boolean res,itemfound,found;
  row POCOVc POCOrw;
  record POSettingBlock POset;
  record INVc INr;
  record INVc IN2r;
  record PIVc PIr;  
  row PIVc PIrw;
  string 255 itsz,mask,subsets,vatcode;
  Integer rwcnt,i;
  val t,price;
  
  BlockLoad(POset);
  MatRowGet(POCOp,rownr,POCOrw);
  itemfound = GetFirstItem(POCOrw.ArtCode,INr);
  if (itemfound==false) then begin
    itemfound = ReadFirstItem(POCOrw.ArtCode,INr,true,false);
  end;
  if (itemfound) then begin
    POCOrw.ArtCode = INr.Code;
    POCOrw.PriceFactor = INr.PriceFactor;
  end else begin
    POCOrw.PriceFactor = blankval;
  end;
  PIr.VECode = POCOp.VECode;
  PIr.Location = "";
  PIr.ItemCode = POCOrw.ArtCode;
  found = ReadFirstMain(PIr,3,true);
  if (found==false) then begin
    PIr.VECode = POCOp.VECode;
    PIr.ItemCode = INr.Code;
    found = ReadFirstKey("Vendor",PIr,2,true);
    if (FindItemVAR2(POCOrw.ArtCode,itsz,mask,subsets)) then begin
      if (ReadFirstItem(POCOrw.ArtCode,IN2r,true,true)) then begin
        PIr.Comment = IN2r.Name;
      end;
    end;
  end;
  if (found) then begin
    price = PIr.PurPrice;
    if (PIr.CurncyCode!=POCOp.CurncyCode) then begin
      t = MulWithRateToBase1(PIr.CurncyCode,POCOp.TransDate,PIr.PurPrice,DefaultCurRoundOff);
      price = DivRateToBase1(POCOp.CurncyCode,t,POCOp.FrRate,POCOp.ToRateB1,POCOp.ToRateB2,POCOp.BaseRate1,POCOp.BaseRate2,DefaultCurRoundOff);
    end;
    if (blank(vatcode)) then begin
      GetItemVATCode(POCOrw.ArtCode,POCOp.ExportFlag,vatcode,false);
    end;  
    POCOrw.Price = price;
    POCOrw.VEArtCode = PIr.VEItemCode;
    POCOrw.Spec = PIr.Comment;
    POCOrw.VATCode = vatcode;
    if (itemfound) then begin
      if (blank(POCOrw.Objects)) then begin
        POCOrw.Objects = FindINObjects(INr.Objects,INr.Group);
      end;
    end;
    POCOrw.PIFactor = PIr.PIFactor;
    DivPIFactor(POCOrw.Quant,POCOrw.PIFactor,t);
    POCOrw.VEQuant = t;    
    MatRowPut(POCOp,rownr,POCOrw);
    rwcnt = MatRowCnt(PIr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(PIr,i,PIrw);
      POCOrw.Spec = PIrw.Text;
      MatRowPut(POCOp,rownr+i+1,POCOrw);
    end;
    MatRowGet(POCOp,rownr,POCOrw);
    res = true;
  end else begin
    if (itemfound) then begin
      price = DivRateToBase1(POCOp.CurncyCode,INr.InPrice,POCOp.FrRate,POCOp.ToRateB1,POCOp.ToRateB2,POCOp.BaseRate1,POCOp.BaseRate2,DefaultCurRoundOff);
      if (blank(vatcode)) then begin
        GetItemVATCode(POCOrw.ArtCode,POCOp.ExportFlag,vatcode,false);
      end;  
      if (GetItemNameStr(1,mask,POCOp.LangCode,INr.Name,INr.Code)) then begin end;

      POCOrw.Price = price;
      POCOrw.VEArtCode = "";
      POCOrw.Spec = mask;
      POCOMultiLineText(POCOp,INr,POCOp.LangCode,rownr);
      POCOrw.VATCode = vatcode;
      POCOrw.PIFactor = blankval;
      POCOrw.VEQuant = POCOrw.Quant;
      POCOrw.VEQuant = POCOrw.VEQuant;
      INr.Code = POCOrw.ArtCode;
      res = true;
    end else begin
      res = false;
    end;
  end;
  if (res==true and POset.WarnNotDefSup!=0) then begin
    PIr.DefaultChoice = 1;
    PIr.ItemCode = POCOrw.ArtCode;
    PIr.VECode = POCOp.VECode;
    found = ReadFirstKey("DefaultChoice",PIr,3,true);
    found = found and ((PIr.ItemCode==POCOrw.ArtCode) and (PIr.VECode==POCOp.VECode));
    if (found==false) then begin
      MessageBox(1933,"");
    end;
  end;
  POCOrw.Objects = FindINObjects(INr.Objects,INr.Group);
  mask = "";
  GetINPurchaseControlAcc(INr,mask,POCOp.VECode,POCOp.Location,0);
  POCOrw.CostAcc = mask;
  MatRowPut(POCOp,rownr,POCOrw);
  if (POCODchrsum(POCOp,rownr)) then begin
    POCOSumup(POCOp);
  end;
  POCOVc_PasteArtCode = res;
  RETURN;
END;

global  
function Boolean POCOVc_PasteVEArtCode(var record POCOVc POCOp,Integer rownr)
BEGIN
  Boolean res,itemfound,found;
  row POCOVc POCOrw;
  record POSettingBlock POset;
  record INVc INr;
  record PIVc PIr;
  val t,price;
  string 10 vatcode;
  record CUVc VEr;
  string 255 purchacc;
  
  BlockLoad(POset);
  MatRowGet(POCOp,rownr,POCOrw);
  PIr.VEItemCode = POCOrw.VEArtCode;
  PIr.VECode = POCOp.VECode;
  PIr.ItemCode = POCOrw.ArtCode;
  PIr.Location = POCOp.Location;
  found = ReadFirstKey("VEItemCode",PIr,4,true);
  if (found==false) then begin
    if (nonblank(POCOp.Location)) then begin
      PIr.VECode = POCOp.VECode;
      PIr.VEItemCode = POCOrw.VEArtCode;
      if (nonblank(POCOrw.ArtCode)) then begin
        PIr.ItemCode = POCOrw.ArtCode;
        found = ReadFirstKey("VEItemCode",PIr,3,true);
      end else begin
        found = ReadFirstKey("VEItemCode",PIr,2,true);
      end;
    end else begin
      PIr.VECode = POCOp.VECode;
      PIr.VEItemCode = POCOrw.VEArtCode;
      found = ReadFirstKey("VEItemCode",PIr,2,true);
    end;
  end;
  if (found) then begin
    if (PIr.VEItemCode!=POCOrw.VEArtCode) then begin found = false; end;
  end;
  if (found) then begin
/*
  PIr.VECode = POCOp.VECode;
  PIr.VEItemCode = POCOrw.VEArtCode;
  PIr.ItemCode = POCOrw.ArtCode;
  PIr.Location = "";
  found = ReadFirstKey("VEItemCode",PIr,3,false);
  if (found) then begin
    if (PIr.VEItemCode!=POCOrw.VEArtCode) then begin found = false; end;
  end;
  if (found) then begin
*/  
    itemfound = ReadFirstItem(PIr.ItemCode,INr,true,false);
    if (itemfound) then begin
      POCOrw.PriceFactor = INr.PriceFactor;
    end else begin
      POCOrw.PriceFactor = blankval;
    end;
    price = PIr.PurPrice;
    GetItemVATCode(POCOrw.ArtCode,POCOp.ExportFlag,vatcode,false);
    POCOrw.ArtCode = PIr.ItemCode;
    if (PIr.CurncyCode!=POCOp.CurncyCode) then begin
      t = MulWithRateToBase1(PIr.CurncyCode,POCOp.TransDate,PIr.PurPrice,DefaultCurRoundOff);
      price = DivRateToBase1(POCOp.CurncyCode,t,POCOp.FrRate,POCOp.ToRateB1,POCOp.ToRateB2,POCOp.BaseRate1,POCOp.BaseRate2,DefaultCurRoundOff);
    end;
    POCOrw.Price = price;
    POCOrw.VEArtCode = PIr.VEItemCode;
    POCOrw.Spec = PIr.Comment;
    POCOrw.VATCode = vatcode;
    POCOrw.PIFactor = PIr.PIFactor;
    DivPIFactor(POCOrw.Quant,POCOrw.PIFactor,t);
    POCOrw.VEQuant = t;
    POCOrw.Objects = FindINObjects(INr.Objects,INr.Group);
    
    GetINPurchaseControlAcc(INr,purchacc,POCOp.VECode,POCOp.Location,PIr.DefStockType);
    if (INr.ItemType==kItemTypeService) then begin
      VEr.Code = POCOp.VECode;
      if (ReadFirstMain(VEr,1,true)) then begin
        if (nonblank(VEr.AccCost)) then begin
          purchacc = VEr.AccCost;
        end;
      end;
    end;
    
    POCOrw.CostAcc = purchacc;
    
    res = true;
  end else begin
    res = false;
  end;
  if (res==true and POset.WarnNotDefSup!=0) then begin
    PIr.DefaultChoice = 1;
    PIr.ItemCode = POCOrw.ArtCode;
    PIr.VECode = POCOp.VECode;
    found = ReadFirstKey("DefaultChoice",PIr,3,true);
    found = found and ((PIr.ItemCode==POCOrw.ArtCode) and (PIr.VECode==POCOp.VECode));
    if (found==false) then begin
      MessageBox(1933,"");
    end;
  end;
  MatRowPut(POCOp,rownr,POCOrw);
  if (POCODchrsum(POCOp,rownr)) then begin
    POCOSumup(POCOp);
  end;
  POCOVc_PasteVEArtCode = res;
  RETURN;
END;

