function string 255 TimeToString(time t) //not needed in 7.0
begin
  string 255 tstr;
  
  if (nonblanktime(t)) then begin
    if (t.hour<10) then begin
      tstr = "0";
    end;
    tstr = tstr & t.hour;

    tstr = tstr & ":";
    
    if (t.minute<10) then begin
      tstr = tstr & "0";
    end;
    tstr = tstr & t.minute;
  end;
  
  TimeToString = tstr;
  return;
end;

global
procedure CreateLetterFromPlanMessage(record PlanMessageTextVc PlanMessageTextr,var record LetVc Letr)
begin
  LongInt size,pos;
  string 255 tstr;
  
  RecordNew(Letr);
  Letr.Marketing = 1;
  Letr.OKFlag = 1;
  Letr.TransDate = CurrentDate;
//7.0  Letr.TransTime = CurrentTime;
  Letr.TransTime = TimeToString(CurrentTime);//not needed in 7.0
//6.4  Letr.TransTime = TimeToString(CurrentTime);

  Letr.LangCode = PlanMessageTextr.LangCode;
  Letr.CustCode = PlanMessageTextr.CustCode;
  Letr.CustCat = PlanMessageTextr.CustCat;
  Letr.Classification = PlanMessageTextr.Classification;
  Letr.ContClass = PlanMessageTextr.ContClass;
  Letr.JobDesc = PlanMessageTextr.JobDesc;
  Letr.PersColCode = PlanMessageTextr.PersColCode;
  Letr.Header = PlanMessageTextr.Header;
  Letr.Greet = PlanMessageTextr.Greet;
  Letr.Signature = PlanMessageTextr.Signature;
  Letr.ReplyToAddr = PlanMessageTextr.ReplyToAddr;
  Letr.AllCont = PlanMessageTextr.AllCont;
  size = SizeTextCnt(PlanMessageTextr);
  pos = 0;
  while (pos<size) begin
    tstr = StringFromText(PlanMessageTextr,pos,1);
    pos = pos + 1; // len(tstr);
    AddToText(tstr,Letr);
  end;
  return;
end;

global
procedure CreateMailFromPlanMessage(record PlanMessageTextVc PlanMessageTextr,var record MailVc Mailr)
begin
  row MailVc Mailrw;
  LongInt size,pos;
  string 255 tstr;
  
  RecordNew(Mailr);
  Mailr.TransDate = CurrentDate;
  Mailr.TransTime = CurrentTime;
  Mailr.LangCode = PlanMessageTextr.LangCode;
  Mailr.LangCode = PlanMessageTextr.LangCode;
  Mailr.Header = PlanMessageTextr.Header;
  Mailr.Identifier = PlanMessageTextr.URLLink;
  Mailr.Sortorder = PlanMessageTextr.MessWinName;
  ClearRow(Mailr,Mailrw,1);
  Mailrw.AddrCode = "Marketing";
  Mailrw.RowTyp = kMailRowTypeFrom;
  MatRowPut(Mailr,0,Mailrw);
  ClearRow(Mailr,Mailrw,1);
  Mailrw.RowTyp = kMailRowTypeTo;
  Mailrw.AddrCode = "";
  MatRowPut(Mailr,1,Mailrw);
  Mailr.SendFlag = 1;
  
  size = SizeTextCnt(PlanMessageTextr);
  pos = 0;
  while (pos<size) begin
    tstr = StringFromText(PlanMessageTextr,pos,1);
    pos = pos + 1; // len(tstr);
    AddToText(tstr,Mailr);
  end;
  return;
end;


