

//------------------TURNOVER Using Object---------------------
global procedure TAX_objturnover(string objstr,date d1,date d2,string acc,var Val res1,var Val res2)
begin
  record TRVc TRr;
  record MainVc Mainr;
  row TRVc TRrw;
  integer i,amrow;
  Boolean TrHs,testf;
  string 21 keyname,acccode,acc1,acc2;
  Val DSum,CSum;
  
  TrHs=True;
  DSum=0;
  CSum=0;
  acc1=FirstInRange(acc,10);
  acc2=LastInRange(acc,10);
  keyname="TransDate";
  Mainr.AccNumber=acc1;
  Mainr.TransDate=d1;
  while (LoopMain(Mainr,2,TrHs)==True) begin
    testf=true;
    if (Mainr.AccNumber>acc2) then begin
      TrHs = false;
      testf=false; 
    end;
    if (Mainr.TransDate<d1) or (Mainr.TransDate>d2) then begin testf=false;end; 
    if (testf==True) then begin 
      TRr.Number=Mainr.TransNr;
      TRr.IntYc=Mainr.IntYc; 
      if (ReadFirstMain(TRr,2,true)) then begin   
        if (Mainr.TransDate==TRr.TransDate) then begin     
          amrow=MatRowCnt(TRr);
          for (i=0;i<amrow;i=i+1) begin
            MatRowGet(TRr,i,TRrw);
            acccode=TRrw.AccNumber;
            if (TRrw.ovst==0) and (TRrw.stp==1) then begin
              if (acccode==Mainr.AccNumber) and (SetInSet(objstr,TRrw.Objects)) then begin
                DSum=DSum+TRrw.DebVal;
                CSum=CSum+TRrw.CredVal;
              end;
            end; 
          end;  
        end;   
      end; 
    end;
  end;
  
  res1=DSum;
  res2=CSum;
  return;
end;

//------------------TURNOVER2 using objects---------------------

global procedure TAX_objturnover2(string objstr,date d1,date d2,string acc1,string acc2,var Val res)
begin
  record TRVc TRr;
  record MainVc Mainr,Mainr1;
  record AccVc Accr;
  row TRVc TRrw;
  LongInt i,amrow,j,CurCs,PrevCs;
  Boolean TrHs,IsAllCodes,IsFirst,testf;
  string 21 keyname,acccode,acc11,acc12,acc21,acc22;
  Val DSum,Ac1Sum,Ac2Sum,ChSum;
  
  TrHs=True;
  DSum=0;
  acc11=FirstInRange(acc1,10);
  acc12=LastInRange(acc1,10);
  acc21=FirstInRange(acc2,10);
  acc22=LastInRange(acc2,10);
  
  Mainr.TransDate=d1;
  Mainr.AccNumber=acc11;
  while (LoopMain(mainr,1,TrHs)==True) begin
    testf=true;
    if (Mainr.AccNumber>acc12) then begin
      testf = false;
      TrHs=false;
     end;
     if (Mainr.TransDate>d2) then begin
       testf = false;
     end;
     
     if (testf==True) then begin 
       TRr.Number=Mainr.TransNr;
       TRr.IntYc=Mainr.IntYc; 
       if (ReadFirstMain(TRr,2,true)) then begin   
         if (Mainr.TransDate==TRr.TransDate) then begin     
           amrow=MatRowCnt(TRr);
           Ac1Sum=0; Ac2Sum=0; ChSum=0;
           for (i=0;i<amrow;i=i+1) begin //for empty codes
             MatRowGet(TRr,i,TRrw);
             if (TRrw.ovst==0) and Not (TRrw.CorspSer>=0) and (TRrw.stp==1) then begin
               ChSum=ChSum+ TRrw.DebVal- TRrw.CredVal;
               if (TRrw.AccNumber==Mainr.AccNumber) and (SetInSet(objstr,TRrw.Objects))  then begin
                 Ac1Sum=Ac1Sum+TRrw.DebVal;
               end;
               if (TRrw.AccNumber>=acc21) and  (TRrw.AccNumber<=acc22) and (SetInSet(objstr,TRrw.Objects))   then begin
                 Ac2Sum=Ac2Sum+TRrw.CredVal;
               end;
               if (Chsum==0) then begin 
                 if (Ac1Sum<>0) and (Ac2Sum<>0) then begin
                   if (Ac1Sum>Ac2Sum) then begin
                     DSum=Dsum+Ac2Sum;
                   end else begin
                     DSum=Dsum+Ac1Sum;
                   end;
                 end;
                 Ac1Sum=0;Ac2Sum=0;
               end;
             end;
           end;
        
           PrevCs=0;
           IsAllCodes=False;
             
           While (IsAllCodes==False) begin  //For other codes
             IsFirst=True;
             for (j=0;j<amrow;j=j+1) begin
               MatRowGet(TRr,j,TRrw);
               if  (TRrw.CorspSer>PrevCS) then begin
                 if (IsFirst) then begin
                   IsFirst=False;
                   CurCs=TRrw.CorspSer;  
                 end else begin     
                   if (TRrw.CorspSer<CurCS)  then begin
                     CurCS=TRrw.CorspSer;
                   end;
                 end; 
               end;  
             end;     
              
             Ac1Sum=0; Ac2Sum=0; ChSum=0;
    
             for (i=0;i<amrow;i=i+1) begin
               MatRowGet(TRr,i,TRrw);
               if (TRrw.ovst==0) and (TRrw.CorspSer==PrevCs) then begin
                 ChSum=ChSum+ TRrw.DebVal- TRrw.CredVal;
                 if  (TRrw.AccNumber==Mainr.AccNumber) and (SetInSet(objstr,TRrw.Objects)) then begin
                   Ac1Sum=Ac1Sum+TRrw.DebVal;
                 end;
                 if (TRrw.AccNumber>=acc21) and  (TRrw.AccNumber<=acc22) and (SetInSet(objstr,TRrw.Objects)) then begin
                   Ac2Sum=Ac2Sum+TRrw.CredVal;
                 end;
                 if (Chsum==0) then begin 
                   if (Ac1Sum<>0) and (Ac2Sum<>0) then begin
                     if (Ac1Sum>Ac2Sum) then begin
                       DSum=Dsum+Ac2Sum;
                     end else begin
                       DSum=Dsum+Ac1Sum;
                     end;
                   end;
                   Ac1Sum=0;Ac2Sum=0;
                 end;
               end;      
             end;
    
             if (CurCs>PrevCs) then begin
               PrevCs=CurCs;
             end else begin 
               IsAllCodes=True;
             end;         
           End;
        end;   
      end;     
    end;  
  end;
  
  res=DSum;

  return;
end;

//------------------BALANCE with object---------------------
global procedure TAX_objbalance(string objstr,date d1,string acc,var Val res1,var Val res2)
begin
  record TRVc TRr;
  record MainVc Mainr;
  row TRVc TRrw;
  record FBVc FBr;
  row FBVc FBrw;
  record RegArchiveDetailVc RADr;
  integer i,amrow;
  Boolean TrHs,testf;
  string 21 keyname,acccode,acc1,acc2;
  Val DSum,CSum;
  
  TrHs=True;
  DSum=0;
  CSum=0;
  acc1=FirstInRange(acc,10);
  acc2=LastInRange(acc,10);
  keyname="TransDate";
  Mainr.AccNumber=acc1;
  while (LoopMain(Mainr,1,TrHs)==True) begin
    testf=true;
    if (Mainr.AccNumber>acc2) then begin
      TrHs = false;
      testf=false; 
    end;
    if (Mainr.TransDate>d1) then begin testf=false;end; 
    if (testf==True) then begin 
      if (Mainr.FileName=="TRVc") then begin 
        TRr.Number=Mainr.TransNr;
        TRr.IntYc=Mainr.IntYc; 
        if (ReadFirstMain(TRr,2,true)) then begin  
          if (Mainr.TransDate==TRr.TransDate) then begin    
            amrow=MatRowCnt(TRr);
            for (i=0;i<amrow;i=i+1) begin
              MatRowGet(TRr,i,TRrw);
              acccode=TRrw.AccNumber;
              if (TRrw.ovst==0) and (TRrw.stp==1) then begin
                if (acccode==Mainr.AccNumber) and (SetInSet(objstr,TRrw.Objects))  then begin
                  DSum=DSum+TRrw.DebVal;
                  CSum=CSum+TRrw.CredVal;
                end;
              end;  
            end;  
          end;  
        end; 
      end; 
      if (Mainr.FileName=="FBVc") then begin 
        FBr.SerNr=Mainr.TransNr;
        if (ReadFirstMain(FBr,1,true)) then begin  
          if (Mainr.TransDate==FBr.TransDate) and (objstr==FBr.Objects) and (FBr.SimFlag==0) then begin       
            amrow=MatRowCnt(FBr);
            for (i=0;i<amrow;i=i+1) begin
              MatRowGet(FBr,i,FBrw);
              acccode=FBrw.AccNumber;    
              if (acccode==Mainr.AccNumber) then begin
                DSum=DSum+FBrw.DebVal;
                CSum=CSum+FBrw.CredVal;
              end;        
            end;
          end;    
        end;
      end;    
      if (Mainr.FileName=="RegArchiveDetailVc") then begin 
        RADr.SerNr=Mainr.TransNr;
        if (ReadFirstMain(RADr,1,true)) then begin  
          if (Mainr.TransDate==RADr.TransDate) and (objstr==RADr.KeyTwo) then begin       
            acccode=RADr.KeyOne;    
            if (acccode==Mainr.AccNumber) then begin
              DSum=DSum+RADr.dv;
              CSum=CSum+RADr.cv;
            end;
          end;    
        end;
      end;    
    end;
  end;
  
  res1=DSum;
  res2=CSum;
  return;
end;


//------------------TURNOVER Using VAT Code---------------------
global procedure TAX_vatturnover(string vatcode,date d1,date d2,string acc,var Val res1,var Val res2)
begin
  record TRVc TRr;
  record MainVc Mainr;
  row TRVc TRrw;
  integer i,amrow;
  Boolean TrHs,testf;
  string 21 keyname,acccode,acc1,acc2;
  Val DSum,CSum;
  
  TrHs=True;
  DSum=0;
  CSum=0;
  acc1=FirstInRange(acc,10);
  acc2=LastInRange(acc,10);
  keyname="TransDate";
  Mainr.AccNumber=acc1;
  Mainr.TransDate=d1;
  while (LoopMain(Mainr,2,TrHs)==True) begin
    testf=true;
    if (Mainr.AccNumber>acc2) then begin
      TrHs = false;
      testf=false; 
    end;
    if (Mainr.TransDate<d1) or (Mainr.TransDate>d2) then begin testf=false;end; 
    if (testf==True) then begin 
      TRr.Number=Mainr.TransNr;
      TRr.IntYc=Mainr.IntYc; 
      if (ReadFirstMain(TRr,2,true)) then begin   
        if (Mainr.TransDate==TRr.TransDate) then begin     
          amrow=MatRowCnt(TRr);
          for (i=0;i<amrow;i=i+1) begin
            MatRowGet(TRr,i,TRrw);
            acccode=TRrw.AccNumber;
            if (TRrw.ovst==0) and (TRrw.stp==1) then begin
              if (acccode==Mainr.AccNumber) and (vatcode==TRrw.VATCode) then begin
                DSum=DSum+TRrw.DebVal;
                CSum=CSum+TRrw.CredVal;
              end;
            end; 
          end;  
        end;   
      end; 
    end;
  end;
  
  res1=DSum;
  res2=CSum;
  return;
end;

//------------------BALANCE with VAT code---------------------
global procedure TAX_vatbalance(string vatcode,date d1,string acc,var Val res1,var Val res2)
begin
  record TRVc TRr;
  record MainVc Mainr;
  row TRVc TRrw;
  record FBVc FBr;
  row FBVc FBrw;
  integer i,amrow;
  Boolean TrHs,testf;
  string 21 keyname,acccode,acc1,acc2;
  Val DSum,CSum;
  
  TrHs=True;
  DSum=0;
  CSum=0;
  acc1=FirstInRange(acc,10);
  acc2=LastInRange(acc,10);
  keyname="TransDate";
  Mainr.AccNumber=acc1;
  while (LoopMain(Mainr,1,TrHs)==True) begin
    testf=true;
    if (Mainr.AccNumber>acc2) then begin
      TrHs = false;
      testf=false; 
    end;
    if (Mainr.TransDate>d1) then begin testf=false;end; 
    if (testf==True) then begin 
      if (Mainr.FileName=="TRVc") then begin 
        TRr.Number=Mainr.TransNr;
        TRr.IntYc=Mainr.IntYc; 
        if (ReadFirstMain(TRr,2,true)) then begin  
          if (Mainr.TransDate==TRr.TransDate) then begin    
            amrow=MatRowCnt(TRr);
            for (i=0;i<amrow;i=i+1) begin
              MatRowGet(TRr,i,TRrw);
              acccode=TRrw.AccNumber;
              if (TRrw.ovst==0) and (TRrw.stp==1) then begin
                if (acccode==Mainr.AccNumber) and (vatcode==TRrw.VATCode)  then begin
                  DSum=DSum+TRrw.DebVal;
                  CSum=CSum+TRrw.CredVal;
                end;
              end;  
            end;  
          end;  
        end; 
      end;  
    end;
  end;
  
  res1=DSum;
  res2=CSum;
  return;
end;




