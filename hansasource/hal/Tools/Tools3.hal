external function roundmode SetRoundModeD(Integer);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetItemVATCode(string,Integer,var string,Boolean);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure PUCalcPerc(val,string,var val);

global
procedure OrdSettings2(Integer notord,Integer ord,Integer recon,Integer bounc,Integer OK,var string res)
BEGIN
  string 255 tstr;
  
  res = "";
  if (notord==1) then begin
    res = USetStr(1326);
  end;  
  if (notord==1 and ord==1 and recon==0) then begin
    tstr = USetStr(1319);
    res = res & tstr;
  end else begin
    if (notord==1 and ord==1 and recon==1) then begin
      tstr = USetStr(1327);
      res = res & tstr;
    end;
  end;
  if (ord==1) then begin
    tstr = USetStr(1328);
    res = res & tstr;
  end;
  if ((notord==1 or ord==1) and recon==1) then begin
    tstr = USetStr(1319);
    res = res & tstr;
  end;
  if (recon==1) then begin
    tstr = USetStr(1329);
    res = res & tstr;
  end;
  if (notord==1 or ord==1 or recon==1) then begin
    if (bounc==1) then begin
      tstr = USetStr(1319);
      res = res & tstr;
      tstr = USetStr(1415);
      res = res & tstr;
    end;
    if ((OK == 1) and (nonblank(res))) then begin
      res = res & USetStr(1319) & USetStr(8193);
    end;
  end;
  if ((OK == 1) and (blank(res))) then begin
    res = USetStr(1138);
  end;
  RETURN;
END;

global
procedure OrdSettings(Integer notord,Integer ord,Integer recon,var string res)
BEGIN
  string 255 tstr;
  
  res = "";
  if (notord==1) then begin
    res = USetStr(1326);
  end;  
  if (notord==1 and ord==1 and recon==0) then begin
    tstr = USetStr(1319);
    res = res & tstr;
  end else begin
    if (notord==1 and ord==1 and recon==1) then begin
      tstr = USetStr(1327);
      res = res & tstr;
    end;
  end;
  if (ord==1) then begin
    tstr = USetStr(1328);
    res = res & tstr;
  end;
  if ((notord==1 or ord==1) and recon==1) then begin
    tstr = USetStr(1319);
    res = res & tstr;
  end;
  if (recon==1) then begin
    tstr = USetStr(1329);
    res = res & tstr;
  end;
  RETURN;
END;

//  ***********************************
// DESC: Loopup state name of a cheque
// DATE: 5 - 98
// IN  : Own or 3rth cheque, statenumber
// OUT : statename
global
Procedure ChStateName(Integer i,Boolean third,var String ret,Boolean short)
Begin
 String 20 tstr;
 
 if (not short) then begin
  if (third) then begin      // 3th cheques
   if (i==0) then begin tstr = USetStr(8520); end;
   if (i==1) then begin tstr = USetStr(8521); end;
   if (i==2) then begin tstr = USetStr(8522); end;
   if (i==3) then begin tstr = USetStr(8524); end;
   if (i==4) then begin tstr = USetStr(8523); end;
   if (i==5) then begin tstr = USetStr(8525); end;
   if (i==6) then begin tstr = USetStr(8526); end;
   if (i==7) then begin tstr = USetStr(8527); end;
   if (i==8) then begin tstr = USetStr(8528); end;
  end else begin                // own cheques
   if (i==0) then begin tstr = USetStr(8529); end;
   if (i==1) then begin tstr = USetStr(8530); end;
   if (i==2) then begin tstr = USetStr(8531); end;
   if (i==5) then begin tstr = USetStr(8532); end;
   if (i==6) then begin tstr = USetStr(8533); end;
   if (i==8) then begin tstr = USetStr(8528); end;
  end;
 end else begin
  if (third) then begin      // 3th cheques
   if (i==0) then begin tstr = USetStr(8534); end;
   if (i==1) then begin tstr = USetStr(8535); end;
   if (i==2) then begin tstr = USetStr(8536); end;
   if (i==3) then begin tstr = USetStr(8537); end;
   if (i==4) then begin tstr = USetStr(8543); end;
   if (i==5) then begin tstr = USetStr(8538); end;
   if (i==6) then begin tstr = USetStr(8539); end;
   if (i==7) then begin tstr = USetStr(8540); end;
  end else begin                // own cheques
   if (i==kCheckTypeRegistered) then begin tstr = USetStr(18262); end;
   if (i==kCheckTypeAccepted) then begin tstr = USetStr(18263); end;
   if (i==kCheckTypeDeposited) then begin tstr = USetStr(18264); end;
   if (i==kCheckTypeCancelled) then begin tstr = USetStr(18265); end;
   if (i==kCheckTypeBounced) then begin tstr = USetStr(18266); end;
  end;
 end;
 ret = tstr;
 Return;
End;


global
procedure RetCalcCostPrice(string item,val pricep,Integer InclVAT,string extra,string curncycode,
                        val frrat,val to1,val to2,val b1,val b2,var val sump)
BEGIN
  val vat;
  val t,t1,bas;
  string 255 vatcode;
  
  sump = blankval;
  if ((pricep==0) and (blank(extra))) then begin
    goto LRetCalcCostPrice;
  end;
  bas = MulRateToBase1(curncycode,pricep,frrat,to1,to2,b1,b2,SetRoundModeD(5));
  if (InclVAT==1) then begin
    GetItemVATCode(item,0,vatcode,true);
    MulVATIV(vatcode,bas,vat,t1,InclVAT,0);
    bas  = bas - vat;
  end;
  sump = sump + bas;
  if (nonblank(extra)) then begin
    PUCalcPerc(bas,extra,t);
    sump = sump + t;
  end;
  sump = Round(sump,SetRoundModeD(5));
LRetCalcCostPrice:;
  RETURN;
END;
