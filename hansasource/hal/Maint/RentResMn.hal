external procedure CheckFlush(var Integer,Integer);
external procedure AddAgreementToOffHire(var record OffHireVc,record AgreementVc);
external procedure AddAgreementToDispatch(var record DispatchVc,record AgreementVc);
external procedure AddRentResToOffHire(var record OffHireVc,record RentResVc,var Integer);
external procedure AddRentResToCollection(var record CollectionVc,record RentResVc,var Integer);
external procedure AddRentResToDispatch(var record DispatchVc,record RentResVc,var Integer);
external procedure OffHireSumUp(var record OffHireVc);
external procedure CollectionSumUp(record CollectionVc);
external procedure DispatchSumup(var record DispatchVc);
external function LongInt GetCurUserLastNr(string);
external procedure DispatchVc_PasteSite(var record DispatchVc);

global
updating procedure RentResOffHireMn(record RcVc RepSpec)
begin
  record RentResVc RentResr;
  record OffHireVc OffHirer;
  record AgreementVc Agreementr;
  LongInt frag,toag;
  Integer rwcnt;
  Boolean foundf,testf;
  LongInt newnr;
  Integer flushcnt;

  frag = FirstInRange(RepSpec.f1,10);
  toag = LastInRange(RepSpec.f1,10);
  RentResr.AgreementNr = frag;
  foundf = true;
  while (LoopKey("AgreementNr",RentResr,1,foundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (RentResr.AgreementNr>toag) then begin
        foundf = false;
      end;
    end;
    testf = true;
    if (foundf==false) then begin
      testf = false;
    end;
    if (DateInRange(RentResr.EndDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      testf = false;
    end;
    if (testf) then begin
      rwcnt = 0;
      RecordNew(OffHirer);
      AddRentResToOffHire(OffHirer,RentResr,rwcnt);
      if (rwcnt>0) then begin
        Agreementr.SerNr = RentResr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          if ((Agreementr.OKFlag<>0) and (Agreementr.AgreeStatus<2)) then begin
            AddAgreementToOffHire(OffHirer,Agreementr);
            OffHirer.Location = RentResr.Location;
            OffHirer.TransDate = RentResr.EndDate;
            OffHirer.Site = RentResr.Site;
            newnr = GetCurUserLastNr("OffHireVc");
            OffHirer.SerNr = NextSerNr("OffHireVc",OffHirer.TransDate,newnr,false,"");
            if (OffHirer.SerNr!=-1) then begin
              OffHireSumUp(OffHirer);
              if (RecordInsert(OffHirer,false)) then begin
              end;
              CheckFlush(flushcnt,10);
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
updating procedure RentResCollectionMn(record RcVc RepSpec)
begin
  record RentResVc RentResr;
  record CollectionVc Collectionr;
  record AgreementVc Agreementr;
  LongInt frag,toag;
  Integer rwcnt;
  Boolean foundf,testf;
  LongInt newnr;
  Integer flushcnt;

  frag = FirstInRange(RepSpec.f1,10);
  toag = LastInRange(RepSpec.f1,10);
  RentResr.AgreementNr = frag;
  foundf = true;
  while (LoopKey("AgreementNr",RentResr,1,foundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (RentResr.AgreementNr>toag) then begin
        foundf = false;
      end;
    end;
    testf = true;
    if (foundf==false) then begin
      testf = false;
    end;
    if (DateInRange(RentResr.EndDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      testf = false;
    end;
    if (testf) then begin
      rwcnt = 0;
      RecordNew(Collectionr);
      AddRentResToCollection(Collectionr,RentResr,rwcnt);
      if (rwcnt>0) then begin
        Agreementr.SerNr = RentResr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          if ((Agreementr.OKFlag<>0) and (Agreementr.AgreeStatus<2)) then begin
            Collectionr.AgreementNr = RentResr.AgreementNr;
            Collectionr.CustCode = Agreementr.CustCode;
            Collectionr.Addr0 = Agreementr.Addr0;
            Collectionr.Location = RentResr.Location;
            Collectionr.TransDate = RentResr.EndDate;
            Collectionr.LangCode = Agreementr.LangCode;
            Collectionr.ClientContact = RentResr.ClientContact;
            if (RepSpec.long1>0) then begin
              Collectionr.TransDate = AddDay(Collectionr.TransDate,-RepSpec.long1);
            end;
            newnr = GetCurUserLastNr("CollectionVc");
            Collectionr.SerNr = NextSerNr("CollectionVc",Collectionr.TransDate,newnr,false,"");
            if (Collectionr.SerNr!=-1) then begin
              CollectionSumUp(Collectionr);
              if (RecordInsert(Collectionr,false)) then begin
              end;
              CheckFlush(flushcnt,10);
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
updating procedure RentResDispatchMn(record RcVc RepSpec)
begin
  record RentResVc RentResr;
  record DispatchVc Dispatchr;
  record AgreementVc Agreementr;
  record CUVc CUr;
  LongInt frag,toag;
  Integer rwcnt;
  Boolean foundf,testf;
  LongInt newnr;
  Integer flushcnt;

  frag = FirstInRange(RepSpec.f1,10);
  toag = LastInRange(RepSpec.f1,10);
  RentResr.AgreementNr = frag;
  foundf = true;
  while (LoopKey("AgreementNr",RentResr,1,foundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (RentResr.AgreementNr>toag) then begin
        foundf = false;
      end;
    end;
    testf = true;
    if (foundf==false) then begin
      testf = false;
    end;
    if (DateInRange(RentResr.EndDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      testf = false;
    end;
    CUr.Code = Agreementr.CustCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      if (CUr.OnHoldFlag == 1) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      rwcnt = 0;
      RecordNew(Dispatchr);
      AddRentResToDispatch(Dispatchr,RentResr,rwcnt);
      if (rwcnt>0) then begin
        Agreementr.SerNr = RentResr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          if ((Agreementr.OKFlag<>0) and (Agreementr.AgreeStatus<2)) then begin
            AddAgreementToDispatch(Dispatchr,Agreementr);
            Dispatchr.Location = RentResr.Location;
            Dispatchr.TransDate = RentResr.TransDate;
            Dispatchr.Site = RentResr.Site;
            if (nonblank(Dispatchr.Site)) then begin
              DispatchVc_PasteSite(Dispatchr);
            end;
            if (RepSpec.long1>0) then begin
              Dispatchr.TransDate = AddDay(Dispatchr.TransDate,-RepSpec.long1);
            end;
            newnr = GetCurUserLastNr("DispatchVc");
            Dispatchr.SerNr = NextSerNr("DispatchVc",Dispatchr.TransDate,newnr,false,"");
            if (Dispatchr.SerNr!=-1) then begin
              DispatchSumUp(Dispatchr);
              if (RecordInsert(Dispatchr,false)) then begin
              end;
              CheckFlush(flushcnt,10);
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

