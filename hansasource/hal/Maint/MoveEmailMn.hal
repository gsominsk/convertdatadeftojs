global
updating function Boolean MoveEmailRun(var record RcVc RepSpec,record ConfVc fromConfr,record ConfVc toConfr,var LongInt prevlooppos)
begin
  Boolean found,res;
  record MailVc Mailr;
  record MailVc oldMailr;
  row MailVc Mailrw;
  Integer i,rwcnt;
  string 255 ckey;
  
  ckey = "UserTime:";
  ckey = ckey & fromConfr.SerNr;
  Mailr.TransDate = RepSpec.sEndDate;
  found = true;
  SetLoopPosition(Mailr,RepSpec.long1);
  while (LoopBackKey(ckey,Mailr,1,found)) begin
    if (DateInRange(Mailr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      found = false;
    end;
    if (found) then begin      
      res = true;
      RepSpec.long1 = GetLoopPosition(Mailr);
      if (RepSpec.long1==prevlooppos) then begin
         res = false;
      end;
      if (res) then begin
        RecordCopy(oldMailr,Mailr);
        rwcnt = MatRowCnt(Mailr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Mailr,i,Mailrw);
          switch (Mailrw.RowTyp) begin
            otherwise
              if (Mailrw.Mailbox==fromConfr.SerNr) then begin
                Mailrw.AddrCode = toConfr.AddrName;
                Mailrw.Mailbox = toConfr.SerNr;
                MatRowPut(Mailr,i,Mailrw);
                found = false;
                i = rwcnt;
              end;
          end;
        end;
//LogText(0,"1.MoveEmailRun found = " & found & " Mailr.Header " & Mailr.Header);        
        if (found==false) then begin
          if (RecordUpdate(oldMailr,Mailr,true)==0) then begin
//LogText(0,"2.MoveEmailRun RecordUpdate = " & "0" & " Mailr.Header " & Mailr.Header);        
          end else begin
//LogText(0,"3.MoveEmailRun RecordUpdate != " & "0" & " Mailr.Header " & Mailr.Header);        
          end;
        end;
      end;
    end;
  end;
  MoveEmailRun = res;
  return;
end;

updating procedure MoveEmailRun_Notqueupdating(var record RcVc RepSpec,record ConfVc fromConfr,record ConfVc toConfr)
begin
  Boolean found,testf;
  record MailVc Mailr;
  record MailVc oldMailr;
  row MailVc Mailrw;
  Integer i,rwcnt;
  string 255 ckey;
  
  ckey = "UserTime:";
  ckey = ckey & fromConfr.SerNr;
  Mailr.TransDate = RepSpec.sEndDate;
  found = true;
  SetLoopPosition(Mailr,RepSpec.long1);
  while (LoopBackKey(ckey,Mailr,1,found)) begin
    if (DateInRange(Mailr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      found = false;
    end;
    if (found) then begin      
      testf = false;
      RecordCopy(oldMailr,Mailr);
      rwcnt = MatRowCnt(Mailr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Mailr,i,Mailrw);
        switch (Mailrw.RowTyp) begin
          otherwise
            if (Mailrw.Mailbox==fromConfr.SerNr) then begin
              Mailrw.AddrCode = toConfr.AddrName;
              Mailrw.Mailbox = toConfr.SerNr;
              MatRowPut(Mailr,i,Mailrw);
              testf = true;
              i = rwcnt;
            end;
        end;
      end;
      if (testf) then begin
        RecordUpdate(oldMailr,Mailr,true);
      end;
    end;    
  end;
  return;
end;

global
updating procedure MoveEmailMn(record RcVc RepSpec)
begin
  LongInt prevlooppos;
  record ConfVc fromConfr;
  record ConfVc toConfr;
  transaction Boolean gMailVcDoNotUpdateDatef;
  
  if (blank(RepSpec.f1)) then begin
    MessageBox(19110,"");
    goto LMoveEmailMn;
  end;
  if (blank(RepSpec.f2)) then begin
    MessageBox(19111,"");
    goto LMoveEmailMn;
  end;
  fromConfr.AddrName = RepSpec.f1;
  if (ReadFirstKey("AddrName",fromConfr,1,true)==false) then begin
    MessageBox(19110,"");
    goto LMoveEmailMn;
  end;
  toConfr.AddrName = RepSpec.f2;
  if (ReadFirstKey("AddrName",toConfr,1,true)==false) then begin
    MessageBox(19110,"");
    goto LMoveEmailMn;
  end;
  gMailVcDoNotUpdateDatef = true;
//  while (qupdating.MoveEmailRun(RepSpec,fromConfr,toConfr,prevlooppos)) begin
//  end;  
//unfortunately queupdating doesnt works with transaction varialbles
  MoveEmailRun_Notqueupdating(RepSpec,fromConfr,toConfr);
LMoveEmailMn:;
  gMailVcDoNotUpdateDatef = false;
  return;
end;