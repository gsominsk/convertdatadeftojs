external procedure CheckFlush(var Integer,Integer);

procedure SerialInInternalStock(string item,string ser,var string location,var val q)
BEGIN
  record IntSerBalVc SBr;
  record MainStockBlock MainStockRec;
  
  q = blankval;
  SBr.Item = item;
  SBr.Serial = ser;
  if (ReadFirstKey("ItemSerial",SBr,2,true)) then begin
    q = SBr.Quant;
    if (q > 0) then begin
      location = SBr.Location;
    end;
  end;
  RETURN;
END;

global 
updating procedure DeptAssetMn (record RcVc RepSpec)
begin
  record AT2UnitVc AT2r;
  record AT2UnitVc oldAT2r;
  record RentINVc Rentr;
  boolean TrHs, testf;
  string 255 ItemCode,location,orglocation;
  val instock;
  Integer flushcnt;
  
  TrHs = true;
  AT2r.DepCode = RepSpec.f1;
  while (LoopKey("DepCode",AT2r,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f1)) then begin
        if (AT2r.DepCode > RepSpec.f1) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (blank(AT2r.SerialNr)) then begin
        testf = false;
      end;
      if (AT2r.Activef <> 0) then begin
        testf = false;
      end;
      if (testf) then begin
        Rentr.SerialNr = AT2r.SerialNr;
        if (ReadFirstKey("SerialNr",Rentr,1,true)) then begin
          if ((Rentr.SerialNr==AT2r.SerialNr) and (Rentr.InventoryNr==AT2r.InventoryNr)) then begin
            ItemCode = Rentr.Code;
            orglocation = Rentr.OrgLocation;
            testf = true;
          end else begin
            testf = false;
          end;
        end else begin
          testf = false;
        end;
        if (testf) then begin
          location = AT2r.DepCode;
          SerialInInternalStock(ItemCode,AT2r.SerialNr,location,instock); 
          if (instock > 0) then begin
            if (location <> AT2r.DepCode) then begin   
              RecordCopy(oldAT2r,AT2r);
              AT2r.DepCode = location;
              if (RecordUpdate(oldAT2r,AT2r,false)<>0) then begin
              end;
              CheckFlush(flushcnt,10);
            end;
          end;
          if (instock <= 0) then begin
            if (orglocation <> AT2r.DepCode) then begin
              RecordCopy(oldAT2r,AT2r);
              AT2r.DepCode = orglocation;
              if (RecordUpdate(oldAT2r,AT2r,false)<>0) then begin
              end;
              CheckFlush(flushcnt,10);
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;