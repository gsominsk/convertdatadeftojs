external procedure CheckFlush(var Integer,Integer);
external procedure ExtractObj(string,var Integer,var string);

procedure RemoveClassFromCustomer(string oldcustcode,var string objstr,string objstr2)
BEGIN
  record CUVc oldCUr;
  Integer pos,oldpos;
  string 200 ostr,oldostr,res;
  string 20 tstr;
  res = objstr;
  oldCUr.Code = oldcustcode;
  if (ReadFirstMain(oldCUr,1,true)) then begin
    res = "";
    pos = 0;        
    ExtractObj(objstr,pos,ostr);
    while (nonblank(ostr)) begin
      if (ostr <> objstr2) then begin
        if (nonblank(res)) then begin
          res = res & ",";
        end;
        res = res & ostr;
      end; 
      ExtractObj(objstr,pos,ostr);
    end;
  end;
  objstr = res;
  RETURN;
END;

global
updating procedure RemoveClassMn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record CUVc CU2r;
  boolean TrHs,testf,res;
  string 255 CUrClass;
  integer cnt;
  string 20 frcu,tocu;
  
  frcu = FirstInRange(RepSpec.f5,20);
  tocu = LastInRange(RepSpec.f5,20);
  CUr.Code = frcu;
  TrHs = true;
  while (LoopMain(CUr,1,TrHs)) begin 
    if (nonblank(RepSpec.f5)) then begin 
      if (CUr.Code<frcu) then begin TrHs = false; end;
      if (CUr.Code>tocu) then begin TrHs = false; end;
    end;
    if (TrHs) then begin
      if (nonblank(RepSpec.f4)) then begin 
        testf = true;
        if ((SetInSet(RepSpec.f4,CUr.Classification)) == false) then begin
          testf = false;
        end;
      end;
      testf = false;
      if (CUr.CUType!=0) then begin testf = true; end;      
      if (RepSpec.flags[0]!=0) then begin
        if (CUr.VEType!=0) then begin testf = true; end;      
      end;
      if (RepSpec.flags[1]!=0) then begin
        if ((CUr.CUType==0) and (CUr.VEType==0) and (CUr.GuestType==0) and (CUr.DealerType==0) and (CUr.EmployeeType==0)) then begin testf = true; end;      
      end;
      if (RepSpec.flags[2]!=0) then begin
        if (CUr.GuestType!=0) then begin testf = true; end;      
      end;
      if (RepSpec.flags[3]!=0) then begin
        if (CUr.DealerType!=0) then begin testf = true; end;      
      end;

      if (nonblank(RepSpec.FirstAcc)) then begin
        if (CUr.CustCat!=RepSpec.FirstAcc) then begin testf = false; end;
      end;
      if (testf) then begin
        RecordCopy(CU2r,CUr);
        CUrClass = CUr.Classification;
        RemoveClassFromCustomer(CUr.Code,CUrClass,RepSpec.f4)
        
        CUr.Classification = CUrClass;
        MaintTrace(CUr.Code); 
        if (RecordUpdate(CU2r,CUr,false)==0) then begin end;
        CheckFlush(cnt, 25)    
      end;
    end;
  end;
  
  return;
end;