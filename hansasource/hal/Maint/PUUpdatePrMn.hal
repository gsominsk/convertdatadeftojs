external function roundmode GetCostRoundMode(record RoundBlock);
external procedure CheckFlush(var Integer,Integer);
external function Integer TypeOfCurncy(var string,var Integer);
external updating procedure CalcPriceListsMn(record RcVc);

global
updating procedure PUUpdatePricesMn(record RcVc RepSpec)
begin
  record PUVc PUr;
  row PUVc PUrw;
  Integer i,rwcnt;
  string 60 infr;
  string 60 into;
  string 60 itfr;
  string 60 itto;
  Boolean testf,found;
  record INVc oldINr;
  record INVc INr;
  string 10 vatcode;
  val t;
  Boolean changed;
  Integer type;
  Integer oldstyle;  
  record AccBlock ARAccRec;
  record RoundBlock RoundRec;
  record RcVc RepSpec2;
  Integer flushcnt;
  
  BlockLoad(RoundRec);  
  BlockLoad(ARAccRec);
  PUr.SerNr = RepSpec.long1;
  infr = FirstInRange(RepSpec.f2,20);
  into =  LastInRange(RepSpec.f2,20);
  itfr = FirstInRange(RepSpec.f3,20);
  itto =  LastInRange(RepSpec.f3,20);
  found = ReadFirstMain(PUr,1,true);
  if (found) then begin
  if (RepSpec.flags[1]<>0) then begin
    rwcnt = MatRowCnt(PUr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(PUr,i,PUrw);
      if (nonblank(PUrw.ArtCode)) then begin
        testf = true;
        if (nonblank(RepSpec.f2)) then begin
          if ((infr>PUrw.ArtCode) or (into<PUrw.ArtCode)) then begin
            testf = false;
          end;
        end;
        if (testf) then begin
          INr.Code = PUrw.ArtCode;
          if (ReadFirstMain(INr,1,true)) then begin
            RecordCopy(oldINr,INr);
            if (nonblank(RepSpec.f3)) then begin
              if ((itfr>INr.Group) or (itto<INr.Group)) then begin
                testf = false;
              end;
            end;
            if (testf) then begin
              type = TypeOfCurncy(PUr.CurncyCode,oldstyle);
              if ((type==1) or (type==3)) then begin
                if (INr.InPrice<>PUrw.CostPrice) then begin
                  INr.InPrice = PUrw.CostPrice;
                  INr.LastPriceChange = CurrentDate;
                  INr.InPrice = Round(INr.InPrice,GetCostRoundMode(RoundRec));
                  if (RecordUpdate(oldINr,INr,false)<>0) then begin
                  end;
                  CheckFlush(flushcnt,10);
                end;
              end else begin
                if (INr.InPrice<>PUrw.CostPrice) then begin
                  INr.InPrice = PUrw.CostPrice;
                  INr.LastPriceChange = CurrentDate;
                  INr.InPrice = Round(INr.InPrice,GetCostRoundMode(RoundRec));
                  if (RecordUpdate(oldINr,INr,false)<>0) then begin
                  end;
                  CheckFlush(flushcnt,10);
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;

/* This was written by Kristinn Eirikssen a looong time ago. 
   I doubt it is used differently in Iceland and it was commented out from the Interface.
#if 1
  if (GetVATLaw()==vatIcelandic) then begin
  if (RepSpec.flags[2]<>0) then begin
      rwcnt = MatRowCnt(PUr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(PUr,i,PUrw);
        if (nonblank(PUrw.ArtCode)) then begin
          testf = true;
          if (nonblank(RepSpec.f2)) then begin
            if ((infr>=PUrw.ArtCode) and (into<=PUrw.ArtCode)) then begin
              testf = false;
            end;
          end;
          if (testf) then begin
            M4FromStr(INr.Code,M4Code,20,PUrw.ArtCode);
            if (ReadFirstMain(INr,1,true)) then begin
              RecordCopy(oldINr,INr);
              if (nonblank(RepSpec.f3)) then begin
                if ((itfr>=INr.Group) and (itto<=INr.Group)<=0)) then begin
                  testf = false;
                end;
              end;
              if (testf) then begin
                changed = false;
                MulM4Val(PUrw.UPrice,INr.Markup,t);
                DivM4Val(t,100,t);
                AddM4Val(t,PUrw.UPrice,t);
                if (ARAccRec.BasePriceInclVAT) then begin
                  m4val t2,t3;
                  GetItemVATCode(INr.Code,PUr.ExportFlag,vatcode,false);
                  MulVATIV(vatcode,t,t2,t3,0,0);
                  AddM4Val(t,t2,t);
                  if (CompM4Val(INr.UPrice1,t)!=0) then
                    changed = true;
                  CopyM4Val(INr.UPrice1,t);
                end else begin
                  if (CompM4Val(INr.UPrice1,t)!=0) then
                    changed = true;
                  CopyM4Val(INr.UPrice1,t);
                end;
                if (changed)
                  m4_SavePost(oldINr,INr,true);
              end;
            end;
          end;
        end;
      end;
  end;
  end;
#endif
*/
  if (RepSpec.flags[3]==0) then begin
    if (found) then begin
      rwcnt = MatRowCnt(PUr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(PUr,i,PUrw);
        if (nonblank(PUrw.ArtCode)) then begin
          testf = true;
          if (nonblank(RepSpec.f2)) then begin
            if ((infr>PUrw.ArtCode) and (into<PUrw.ArtCode)) then begin
              testf = false;
            end;
          end;
          if (testf) then begin
            RecordCopy(RepSpec2,RepSpec);
            RepSpec2.f2 = PUrw.ArtCode;
            CalcPriceListsMn(RepSpec2);
          end;
        end;
      end;
    end;
  end;
  end;
  return;
end;


