external function LongInt StockTakeVcRecordRemoveTest(var record StockTakeVc,record StockTakeVc,LongInt,LongInt);
external function LongInt ProdOrderVcRecordRemoveTest(var record ProdOrderVc,record ProdOrderVc,LongInt,LongInt);
external function LongInt POSBalanceVcRecordRemoveTest(var record POSBalanceVc,record POSBalanceVc,LongInt,LongInt);
external function LongInt IPVcRecordRemoveTest(var record IPVc,record IPVc,LongInt,LongInt);
external function LongInt IVVcRecordRemoveTest(var record IVVc,record IVVc,LongInt,LongInt);
external function LongInt VIVcRecordRemoveTest(var record VIVc,record VIVc,LongInt,LongInt);
external function LongInt OPVcRecordRemoveTest(var record OPVc,record OPVc,LongInt,LongInt);
external function LongInt PUVcRecordRemoveTest(var record PUVc,record PUVc,LongInt,LongInt);
external function LongInt SHVcRecordRemoveTest(var record SHVc,record SHVc,LongInt,LongInt);
external function LongInt SDVcRecordRemoveTest(var record SDVc,record SDVc,LongInt,LongInt);
external function LongInt ActVcRecordRemoveTest(var record ActVc,record ActVc,LongInt,LongInt);
external function LongInt PPVcRecordRemoveTest(var record PPVc,record PPVc,LongInt,LongInt);
external function LongInt ExpVcRecordRemoveTest(var record ExpVc,record ExpVc,LongInt,LongInt);
external function LongInt ORVcRecordRemoveTest(var record ORVc,record ORVc,LongInt,LongInt);
external function LongInt StockMovVcRecordRemoveTest(var record StockMovVc,record StockMovVc,LongInt,LongInt);
external function LongInt POVcRecordRemoveTest(var record POVc,record POVc,LongInt,LongInt);
external function LongInt SMVcRecordRemoveTest(var record SMVc,record SMVc,LongInt,LongInt);
external function LongInt WSVcRecordRemoveTest(var record WSVc,record WSVc,LongInt,LongInt);
external function LongInt IVCashVcRecordRemoveTest(var record IVCashVc,record IVCashVc,LongInt,LongInt);
external function LongInt TRVcRecordRemoveTest(var record TRVc,record TRVc,LongInt,LongInt);

updating procedure Del2Trans_IVVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record IVVc IVr;
  record IVVc fakeIVr;
  Boolean TrHs,testf;
  
  IVr.SerNr = afr;
  TrHs = true;
  while (LoopMain(IVr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (IVr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(IVr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (IVVcRecordRemoveTest(IVr,fakeIVr,0,0)!=0) then begin
          RecordDelete(IVr);
          StepBack(IVr);
        end;
      end;
    end;
    UserTrace(IVr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_IPVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record IPVc IPr;
  record IPVc fakeIPr;
  Boolean TrHs,testf;
  
  IPr.SerNr = afr;
  TrHs = true;
  while (LoopMain(IPr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (IPr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(IPr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (IPVcRecordRemoveTest(IPr,fakeIPr,0,0)!=0) then begin
          RecordDelete(IPr);
          StepBack(IPr);
        end;
      end;
    end;
    UserTrace(IPr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_VIVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record VIVc VIr;
  record VIVc fakeVIr;
  Boolean TrHs,testf;
  
  VIr.SerNr = afr;
  TrHs = true;
  while (LoopMain(VIr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (VIr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(VIr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (VIVcRecordRemoveTest(VIr,fakeVIr,0,0)!=0) then begin
          RecordDelete(VIr);
          StepBack(VIr);
        end;
      end;
    end;
    UserTrace(VIr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_OPVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record OPVc OPr;
  record OPVc fakeOPr;
  Boolean TrHs,testf;
  
  OPr.SerNr = afr;
  TrHs = true;
  while (LoopMain(OPr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (OPr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(OPr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (OPVcRecordRemoveTest(OPr,fakeOPr,0,0)!=0) then begin
          RecordDelete(OPr);
          StepBack(OPr);
        end;
      end;
    end;
    UserTrace(OPr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_ORVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record ORVc ORr;
  record ORVc fakeORr;
  Boolean TrHs,testf;
  
  ORr.SerNr = afr;
  TrHs = true;
  while (LoopMain(ORr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (ORr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(ORr.OrdDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (ORVcRecordRemoveTest(ORr,fakeORr,0,0)!=0) then begin
          RecordDelete(ORr);
          StepBack(ORr);
        end;
      end;
    end;
    UserTrace(ORr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_PUVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record PUVc PUr;
  record PUVc fakePUr;
  Boolean TrHs,testf;
  
  PUr.SerNr = afr;
  TrHs = true;
  while (LoopMain(PUr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (PUr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(PUr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (PUVcRecordRemoveTest(PUr,fakePUr,0,0)!=0) then begin
          RecordDelete(PUr);
          StepBack(PUr);
        end;
      end;
    end;
    UserTrace(PUr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_SHVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record SHVc SHr;
  record SHVc fakeSHr;
  Boolean TrHs,testf;
  
  SHr.SerNr = afr;
  TrHs = true;
  while (LoopMain(SHr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (SHr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(SHr.ShipDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (SHVcRecordRemoveTest(SHr,fakeSHr,0,0)!=0) then begin
          RecordDelete(SHr);
          StepBack(SHr);
        end;
      end;
    end;
    UserTrace(SHr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_StockMovVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record StockMovVc StockMovr;
  record StockMovVc fakeStockMovr;
  Boolean TrHs,testf;
  
  StockMovr.SerNr = afr;
  TrHs = true;
  while (LoopMain(StockMovr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (StockMovr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(StockMovr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (StockMovVcRecordRemoveTest(StockMovr,fakeStockMovr,0,0)!=0) then begin
          RecordDelete(StockMovr);
          StepBack(StockMovr);
        end;
      end;
    end;
    UserTrace(StockMovr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_SDVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record SDVc SDr;
  record SDVc fakeSDr;
  Boolean TrHs,testf;
  
  SDr.SerNr = afr;
  TrHs = true;
  while (LoopMain(SDr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (SDr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(SDr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (SDVcRecordRemoveTest(SDr,fakeSDr,0,0)!=0) then begin
          RecordDelete(SDr);
          StepBack(SDr);
        end;
      end;
    end;
    UserTrace(SDr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_POVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record POVc POr;
  record POVc fakePOr;
  Boolean TrHs,testf;
  
  POr.SerNr = afr;
  TrHs = true;
  while (LoopMain(POr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (POr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(POr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (POVcRecordRemoveTest(POr,fakePOr,0,0)!=0) then begin
          RecordRemove(POr);
          StepBack(POr);
        end;
      end;
    end;
    UserTrace(POr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_SMVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record SMVc SMr;
  record SMVc fakeSMr;
  Boolean TrHs,testf;
  
  SMr.SerNr = afr;
  TrHs = true;
  while (LoopMain(SMr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (SMr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(SMr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (SMVcRecordRemoveTest(SMr,fakeSMr,0,0)!=0) then begin
          RecordDelete(SMr);
          StepBack(SMr);
        end;
      end;
    end;
    UserTrace(SMr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_ActVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record ActVc Actr;
  record ActVc fakeActr;
  Boolean TrHs,testf;
  
  Actr.SerNr = afr;
  TrHs = true;
  while (LoopMain(Actr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (Actr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(Actr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (ActVcRecordRemoveTest(Actr,fakeActr,0,0)!=0) then begin
          RecordDelete(Actr);
          StepBack(Actr);
        end;
      end;
    end;
    UserTrace(Actr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_PPVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record PPVc PPr;
  record PPVc fakePPr;
  Boolean TrHs,testf;
  
  PPr.SerNr = afr;
  TrHs = true;
  while (LoopMain(PPr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (PPr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(PPr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (PPVcRecordRemoveTest(PPr,fakePPr,0,0)!=0) then begin
          RecordDelete(PPr);
          StepBack(PPr);
        end;
      end;
    end;
    UserTrace(PPr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_ExpVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record ExpVc Expr;
  record ExpVc fakeExpr;
  Boolean TrHs,testf;
  
  Expr.SerNr = afr;
  TrHs = true;
  while (LoopMain(Expr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (Expr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(Expr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (ExpVcRecordRemoveTest(Expr,fakeExpr,0,0)!=0) then begin
          RecordDelete(Expr);
          StepBack(Expr);
        end;
      end;
    end;
    UserTrace(Expr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_WSVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record WSVc WSr;
  record WSVc fakeWSr;
  Boolean TrHs,testf;
  
  WSr.SerNr = afr;
  TrHs = true;
  while (LoopMain(WSr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (WSr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(WSr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (WSVcRecordRemoveTest(WSr,fakeWSr,0,0)!=0) then begin
          RecordDelete(WSr);
          StepBack(WSr);
        end;
      end;
    end;
    UserTrace(WSr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_IVCashVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record IVCashVc IVCashr;
  record IVCashVc fakeIVCashr;
  Boolean TrHs,testf;
  
  IVCashr.SerNr = afr;
  TrHs = true;
  while (LoopMain(IVCashr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (IVCashr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(IVCashr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (IVCashVcRecordRemoveTest(IVCashr,fakeIVCashr,0,0)!=0) then begin
          RecordDelete(IVCashr);
          StepBack(IVCashr);
        end;
      end;
    end;
    UserTrace(IVCashr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_TBIVVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record TBIVVc TBIVr;
  record TBIVVc fakeTBIVr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  TBIVr.SerNr = afr;
  TrHs = true;
  while (LoopMain(TBIVr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (TBIVr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(TBIVr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (TBIVr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(TBIVr);
          StepBack(TBIVr);
        end;
      end;
    end;
    UserTrace(TBIVr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_TRVc(record RcVc RepSpec)
BEGIN
  record TRVc TRr;
  record TRVc fakeTRr;
  Boolean TrHs,testf;
  LongInt afr,ato;
  Integer yc1,yc2;
  
  afr = FirstTransInRange(RepSpec.f1);
  ato = LastTransInRange(RepSpec.f1);
  yc1 = FirstTransTypeInRange(RepSpec.f1);
  yc2 = LastTransTypeInRange(RepSpec.f1);
  
  TRr.Number = afr;
  TRr.IntYc = yc1;
  TrHs = true;
  while (LoopMain(TRr,2,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f1)) then begin
        if (TRr.IntYc>yc2) then begin TrHs = false; end;
        if (TRr.IntYc==yc2) then begin
          if (TRr.Number>ato) then begin TrHs = false; end;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(TRr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (TRVcRecordRemoveTest(TRr,fakeTRr,0,0)!=0) then begin
          RecordRemove(TRr);
          StepBack(TRr);
        end;
      end;
    end;
    UserTrace(TRr.Number,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_ProdVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record ProdVc Prodr;
  record ProdVc fakeProdr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  Prodr.SerNr = afr;
  TrHs = true;
  while (LoopMain(Prodr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (Prodr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(Prodr.ProdDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (Prodr.ProdDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(Prodr);
          StepBack(Prodr);
        end;
      end;
    end;
    UserTrace(Prodr.SerNr,M4Long);        
  end;
  RETURN;
END;


updating procedure Del2Trans_RetPUVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record RetPUVc RetPUr;
  record RetPUVc fakeRetPUr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  RetPUr.SerNr = afr;
  TrHs = true;
  while (LoopMain(RetPUr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (RetPUr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(RetPUr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (RetPUr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(RetPUr);
          StepBack(RetPUr);
        end;
      end;
    end;
    UserTrace(RetPUr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_RetVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record RetVc Retr;
  record RetVc fakeRetr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  Retr.SerNr = afr;
  TrHs = true;
  while (LoopMain(Retr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (Retr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(Retr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (Retr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(Retr);
          StepBack(Retr);
        end;
      end;
    end;
    UserTrace(Retr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_AT2WrofVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record AT2WrofVc AT2Wrofr;
  record AT2WrofVc fakeAT2Wrofr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  AT2Wrofr.SerNr = afr;
  TrHs = true;
  while (LoopMain(AT2Wrofr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (AT2Wrofr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(AT2Wrofr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (AT2Wrofr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(AT2Wrofr);
          StepBack(AT2Wrofr);
        end;
      end;
    end;
    UserTrace(AT2Wrofr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_CLInVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record CLInVc CLInr;
  record CLInVc fakeCLInr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  CLInr.SerNr = afr;
  TrHs = true;
  while (LoopMain(CLInr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (CLInr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(CLInr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (CLInr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(CLInr);
          StepBack(CLInr);
        end;
      end;
    end;
    UserTrace(CLInr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_CLOutVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record CLOutVc CLOutr;
  record CLOutVc fakeCLOutr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  CLOutr.SerNr = afr;
  TrHs = true;
  while (LoopMain(CLOutr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (CLOutr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(CLOutr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (CLOutr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(CLOutr);
          StepBack(CLOutr);
        end;
      end;
    end;
    UserTrace(CLOutr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_CheckVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record CheckVc Checkr;
  record CheckVc fakeCheckr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  Checkr.SerNr = afr;
  TrHs = true;
  while (LoopMain(Checkr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (Checkr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(Checkr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (Checkr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(Checkr);
          StepBack(Checkr);
        end;
      end;
    end;
    UserTrace(Checkr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_OwnCheckVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record OwnCheckVc OwnCheckr;
  record OwnCheckVc fakeOwnCheckr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  OwnCheckr.SerNr = afr;
  TrHs = true;
  while (LoopMain(OwnCheckr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (OwnCheckr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(OwnCheckr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (OwnCheckr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(OwnCheckr);
          StepBack(OwnCheckr);
        end;
      end;
    end;
    UserTrace(OwnCheckr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_IntIVVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record IntIVVc IntIVr;
  record IntIVVc fakeIntIVr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  IntIVr.SerNr = afr;
  TrHs = true;
  while (LoopMain(IntIVr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (IntIVr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(IntIVr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (IntIVr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(IntIVr);
          StepBack(IntIVr);
        end;
      end;
    end;
    UserTrace(IntIVr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_ProdOperationVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record ProdOperationVc ProdOperationr;
  record ProdOperationVc fakeProdOperationr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  ProdOperationr.SerNr = afr;
  TrHs = true;
  while (LoopMain(ProdOperationr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (ProdOperationr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(ProdOperationr.ProdDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (ProdOperationr.ProdDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(ProdOperationr);
          StepBack(ProdOperationr);
        end;
      end;
    end;
    UserTrace(ProdOperationr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_INTransferVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record INTransferVc INTransferr;
  record INTransferVc fakeINTransferr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  INTransferr.SerNr = afr;
  TrHs = true;
  while (LoopMain(INTransferr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (INTransferr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(INTransferr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (INTransferr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(INTransferr);
          StepBack(INTransferr);
        end;
      end;
    end;
    UserTrace(INTransferr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_SRVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record SRVc SRr;
  record SRVc fakeSRr;
  Boolean TrHs,testf;
  record DBLockBlock DBLockRec;
  
  BlockLoad(DBLockRec);
  SRr.SerNr = afr;
  TrHs = true;
  while (LoopMain(SRr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (SRr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(SRr.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (SRr.TransDate<=DBLockRec.DeleteBeforeDate) then begin
          RecordDelete(SRr);
          StepBack(SRr);
        end;
      end;
    end;
    UserTrace(SRr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_ItemHistVc()
BEGIN
  record ItemHistVc IHr;
  Boolean TrHs,testf;
  
  TrHs = true;
  while (LoopMain(IHr,1,TrHs)) begin
    if (TrHs) then begin
      testf = true;
      if (IHr.FileName=="Fut3ORVc") then begin 
        testf = false;
      end;
      if (testf) then begin
        RecordDelete(IHr);
        StepBack(IHr);
      end;
    end;
    UserTrace(IHr.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure DeletedItemHistVc()
BEGIN
  record ItemHistVc IHr;
  Boolean found;

  found = true;
  while (LoopMain(IHr,1,found)) begin
    if (found) then begin
      RecordDelete(IHr);
      StepBack(IHr);
    end;
  end;
  RETURN;
END;

updating procedure Del2Trans_POSBalanceVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
BEGIN
  record POSBalanceVc POSBalancer;
  record POSBalanceVc fakePOSBalancer;
  Boolean TrHs,testf;
  
  POSBalancer.SerNr = afr;
  TrHs = true;
  while (LoopMain(POSBalancer,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (POSBalancer.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(POSBalancer.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (POSBalanceVcRecordRemoveTest(POSBalancer,fakePOSBalancer,0,0)!=0) then begin
          RecordDelete(POSBalancer);
          StepBack(POSBalancer);
        end;
      end;
    end;
    UserTrace(POSBalancer.SerNr,M4Long);        
  end;
  RETURN;
END;

updating procedure Del2Trans_ProdOrderVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record ProdOrderVc ProdOrderr;
  record ProdOrderVc fakeProdOrderr;
  Boolean TrHs,testf;
  
  ProdOrderr.SerNr = afr;
  TrHs = true;
  while (LoopMain(ProdOrderr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (ProdOrderr.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(ProdOrderr.DueDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (ProdOrderVcRecordRemoveTest(ProdOrderr,fakeProdOrderr,0,0)!=0) then begin
          RecordDelete(ProdOrderr);
          StepBack(ProdOrderr);
        end;
      end;
    end;
    UserTrace(ProdOrderr.SerNr,M4Long);        
  end;
  return;
end;

updating procedure Del2Trans_StockTakeVc(LongInt afr,LongInt ato,Date sStartDate,Date sEndDate)
begin
  record StockTakeVc StockTaker;
  record StockTakeVc fakeStockTaker;
  Boolean TrHs,testf;
  
  StockTaker.SerNr = afr;
  TrHs = true;
  while (LoopMain(StockTaker,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (StockTaker.SerNr>ato) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(StockTaker.TransDate,sStartDate,sEndDate)==false) then begin 
        testf = false;
      end;
      if (testf) then begin
        if (StockTakeVcRecordRemoveTest(StockTaker,fakeStockTaker,0,0)!=0) then begin
          RecordDelete(StockTaker);
          StepBack(StockTaker);
        end;
      end;
    end;
    UserTrace(StockTaker.SerNr,M4Long);        
  end;
  return;
end;

global
updating procedure DelTransMn(record RcVc RepSpec)
BEGIN
  LongInt afr,ato;
  
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  if (RepSpec.flags[0]!=0) then begin Del2Trans_IVVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[1]!=0) then begin Del2Trans_IPVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[2]!=0) then begin Del2Trans_VIVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[3]!=0) then begin Del2Trans_OPVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[4]!=0) then begin Del2Trans_TRVc(RepSpec); end;
  if (RepSpec.flags[5]!=0) then begin Del2Trans_ORVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[6]!=0) then begin Del2Trans_PUVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[7]!=0) then begin Del2Trans_SHVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[8]!=0) then begin Del2Trans_StockMovVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[9]!=0) then begin Del2Trans_SDVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[10]!=0) then begin Del2Trans_POVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[11]!=0) then begin Del2Trans_SMVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[12]!=0) then begin Del2Trans_ActVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[13]!=0) then begin Del2Trans_PPVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[14]!=0) then begin Del2Trans_ExpVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[15]!=0) then begin Del2Trans_WSVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[16]!=0) then begin Del2Trans_IVCashVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[17]!=0) then begin Del2Trans_TBIVVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[18]!=0) then begin Del2Trans_ProdVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[19]!=0) then begin Del2Trans_RetPUVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[20]!=0) then begin Del2Trans_RetVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[21]!=0) then begin Del2Trans_AT2WrofVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[22]!=0) then begin Del2Trans_CLInVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[23]!=0) then begin Del2Trans_CLOutVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[24]!=0) then begin Del2Trans_CheckVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[25]!=0) then begin Del2Trans_OwnCheckVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[26]!=0) then begin Del2Trans_IntIVVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[27]!=0) then begin Del2Trans_ProdOperationVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[28]!=0) then begin Del2Trans_INTransferVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.flags[29]!=0) then begin Del2Trans_SRVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.GroupsOnly!=0) then begin Del2Trans_POSBalanceVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.Notation!=0) then begin Del2Trans_ProdOrderVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
  if (RepSpec.TSep!=0) then begin Del2Trans_StockTakeVc(afr,ato,RepSpec.sStartDate,RepSpec.sEndDate); end;
//  Del2Trans_ItemHistVc;
  RETURN;
END;