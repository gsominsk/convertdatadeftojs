global
updating procedure SplitBuyBackCostMn(record RcVc RepSpec)
begin
  record BuyBackVc BBr;
  record BuyBackVc oldBBr;
  Boolean found,testf;  
  val totorgp;
  val cv,dv,comv;
  Integer totbbcnt,bbcnt;
  
  if (blank(RepSpec.f1)) then begin
    MessageBox(20821,"");
    goto LSplitBuyBackCostMn;
  end;
  if (blank(RepSpec.ObjStr)) then begin
    MessageBox(20824,"");
    goto LSplitBuyBackCostMn;
  end;
  if (blank(RepSpec.vals0)) then begin
    MessageBox(20823,"");
    goto LSplitBuyBackCostMn;
  end;
  if (blank(RepSpec.vals1)) then begin
    MessageBox(20823,"");
    goto LSplitBuyBackCostMn;
  end;
  if (blank(RepSpec.vals2)) then begin
    MessageBox(20823,"");
    goto LSplitBuyBackCostMn;
  end;

  found = true;
  BBr.BuyBackNr = RepSpec.f1;
  while (LoopKey("BuyBackNr",BBr,1,found)) begin
    if (BBr.BuyBackNr!=RepSpec.f1) then begin
      found = false;
    end;
    if (found) then begin
      if (nonblank(BBr.ActualCredit)) then begin
        MessageBox(20822," " & BBr.SerNr);
        goto LSplitBuyBackCostMn;
      end;
      if (nonblank(BBr.ActualDebit)) then begin
        MessageBox(20822," " & BBr.SerNr);
        goto LSplitBuyBackCostMn;
      end;
      if (nonblank(BBr.Commision)) then begin
        MessageBox(20822," " & BBr.SerNr);
        goto LSplitBuyBackCostMn;
      end;
      testf = true;
      if (BBr.ArtCode!=RepSpec.ObjStr) then begin
        testf = false;
      end;
      if (testf) then begin
        totorgp = totorgp + (BBr.OrgPrice*BBr.Quant);
        totbbcnt = totbbcnt + 1;
      end;
    end;
  end;
  if (totorgp==0) then begin
    goto LSplitBuyBackCostMn;
  end;

  ResetLoop(BBr);
  found = true;
  BBr.BuyBackNr = RepSpec.f1;
  while (LoopKey("BuyBackNr",BBr,1,found)) begin
    if (BBr.BuyBackNr!=RepSpec.f1) then begin
      found = false;
    end;
    if (found) then begin
      testf = true;
      if (BBr.ArtCode!=RepSpec.ObjStr) then begin
        testf = false;
      end;
      if (testf) then begin
        RecordCopy(oldBBr,BBr);
        BBr.ActualCredit = (BBr.OrgPrice*RepSpec.vals0*BBr.Quant)/totorgp;
        BBr.ActualDebit = (BBr.OrgPrice*RepSpec.vals1*BBr.Quant)/totorgp;
        BBr.Commision = (BBr.OrgPrice*RepSpec.vals2*BBr.Quant)/totorgp;
        BBr.VECredInvoiceNr = RepSpec.AccStr;
        BBr.VEInvoiceNr = RepSpec.TransStr;
        bbcnt = bbcnt + 1;
        if (bbcnt==totbbcnt) then begin
          BBr.ActualCredit = RepSpec.vals0 - cv;
          BBr.ActualDebit = RepSpec.vals1 - dv;
          BBr.Commision = RepSpec.vals2 - comv;
        end;
        cv = cv + BBr.ActualCredit;
        dv = dv + BBr.ActualDebit;
        comv = comv + BBr.Commision;
        RecordUpdate(oldBBr,BBr,false);
      end;
    end;
  end;
LSplitBuyBackCostMn:;  
  return;
end;