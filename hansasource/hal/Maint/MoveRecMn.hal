external function Integer GetLocalCompanyNr(string,Boolean);

procedure ResetAndFlush(Integer oldcomp,var Integer cnt)
begin
  ResetCompany(oldcomp);
  cnt = cnt + 1;
  if (cnt>100) then begin
    DBFlush;
    DBHold;
    cnt = 0;
  end;
  return;
end;

global
updating procedure MoveRecordsVcMn(record RcVc RepSpec)
begin
  record ActVc Actr;
  record COVc COr;
  Integer oldcomp;
  Integer newcomp;
  Boolean foundf;
  Integer cnt;
  
  if (nonblank(RepSpec.f2)) then begin
    cnt = 0;
    newcomp = GetLocalCompanyNr(RepSpec.f2,false);
    oldcomp = CurrentCompany;
    foundf = true;
    if (RepSpec.flags[1]!=0) then begin
      COr.ContractClass = RepSpec.f1;
      while (LoopKey("ContractClass",COr,1,foundf)) begin
        if (nonblank(RepSpec.f1)) then begin
          if (RepSpec.f1!=COr.ContractClass) then begin
            foundf = false;
          end;
        end;
        if (foundf) then begin
          if (SetCompany(newcomp,false)) then begin
            COr.SerNr = NextSerNr("COVc",COr.CODate,-1,false,"");
            if (RecordStore(COr,false)) then begin end;
            ResetAndFlush(oldcomp,cnt);
          end else begin
            foundf = false;
          end;
        end;
      end;
    end;
    if (RepSpec.flags[2]!=0) then begin
      Actr.TransDate = RepSpec.d1;
      while (LoopKey("TransDate",Actr,1,foundf)) begin
        if (nonblankdate(RepSpec.d1)) then begin
          if (RepSpec.d1>Actr.TransDate) then begin
            foundf = false;
          end;
        end;
        if (foundf) then begin
          if (SetCompany(newcomp,false)) then begin
            Actr.SerNr = NextSerNr("ActVc",Actr.TransDate,-1,false,"");
            if (RecordStore(Actr,false)) then begin end;
            ResetAndFlush(oldcomp,cnt);
          end else begin
            foundf = false;
          end;
        end;
      end;
    end;
  end;
  return;
end;
