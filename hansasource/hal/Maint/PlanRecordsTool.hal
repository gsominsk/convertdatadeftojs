external updating procedure DeletePO();
external updating procedure DeleteProd();
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean ExpandStructItem(string,string,val,var record SHVc);
external updating function Boolean CreatePlannedRecords(record RcVc,record INVc,string,Integer,string,LongInt,LongInt,Boolean);

global
updating procedure OrderComponents(record RcVc RepSpec,record RecVc Recp,string incode,string location,string firstitem,Integer ignorestock,Boolean debugf)
begin
  record INVc INr;
  row RecVc Recrw;
  Integer rwcnt,i;

  rwcnt = MatRowCnt(Recp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Recp,i,Recrw);
    if (Recrw.Item!=incode) then begin
      INr.Code = Recrw.Item;
      if (ReadFirstMain(INr,1,true)) then begin
        if (CreatePlannedRecords(RepSpec,INr,location,ignorestock,firstitem,-1,-1,debugf)) then begin
        end;
      end;
    end;
  end;
  return;
end;

global
updating procedure PlanSalesMn(record RcVc RepSpec)
begin
  record SHVc SHr;
  row SHVc SHrw;
  record ORVc ORr;
  row ORVc ORrw;
  record INVc INr;
  record LocationVc Locr;
  LongInt fror,toor;
  string 255 frloc,toloc;
  Boolean foundf,testf,intestf;
  Boolean locfoundf,isstruct;
  Integer rwcnt,i;
  Integer shrwcnt,shi;
  string 60 item;
  Boolean debugf;
  
  debugf = true;
  fror = FirstInRange(RepSpec.f1,10);
  toor = LastInRange(RepSpec.f1,10);
  frloc = FirstInRange(RepSpec.f3,10);
  toloc = LastInRange(RepSpec.f3,10);
  if (debugf) then begin
    CreateFile("PlanSalesMn.TXT");
  end;
L22:;
  ResetLoop(ORr);
  ORr.SerNr = fror;
  foundf = true;
  while (LoopMain(ORr,1,foundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (toor<ORr.SerNr) then begin foundf = false; end;
      if (fror>ORr.SerNr) then begin foundf = false; end;
    end;
    testf = true;
    if (foundf==false) then begin testf = false; end;
    if (testf) then begin
      rwcnt = MatRowCnt(ORr);
      for(i=0;i<rwcnt;i=i+1) begin
        MatRowGet(ORr,i,ORrw);
        isstruct = ExpandStructItem(ORrw.ArtCode,ORrw.Recepy,ORrw.Quant,SHr);
        item = ORrw.ArtCode;
        if (ReadFirstItem(ORrw.ArtCode,INr,false,true)) then begin
          INr.Code = item;  
          intestf = true;
          if (nonblank(RepSpec.f2)) then begin
            if (RepSpec.f2!=INr.Group) then begin
              intestf = false;
            end;
          end;
          if (INr.ItemType==kItemTypeStructured) then begin
            intestf = false;
          end;
          if (intestf) then begin
            if ((nonblank(RepSpec.f3)) and (frloc!=toloc)) then begin
              Locr.Code = frloc;
              locfoundf = true;
              ResetLoop(Locr);
              while (LoopMain(Locr,1,locfoundf)) begin
                if (Locr.Code<frloc) then begin locfoundf = false; end;
                if (Locr.Code>toloc) then begin locfoundf = false; end;
                if (locfoundf) then begin
                  if (CreatePlannedRecords(RepSpec,INr,Locr.Code,0,item,fror,toor,debugf)) then begin goto L22; end;
                end;
              end;
            end else begin
              if (CreatePlannedRecords(RepSpec,INr,RepSpec.f3,0,item,fror,toor,debugf)) then begin goto L22; end;
            end;
          end;
        end;
        if (isstruct) then begin
          shrwcnt = MatRowCnt(SHr);
          for(shi=0;shi<shrwcnt;shi=shi+1) begin
            MatRowGet(SHr,shi,SHrw);
            item = SHrw.ArtCode;
            if (ReadFirstItem(SHrw.ArtCode,INr,false,true)) then begin
              INr.Code = item;
              intestf = true;
              if (nonblank(RepSpec.f2)) then begin
                if (RepSpec.f2!=INr.Group) then begin
                  intestf = false;
                end;
              end;
              if (INr.ItemType==kItemTypeStructured) then begin
                intestf = false;
              end;
              if (intestf) then begin
                if ((nonblank(RepSpec.f3)) and (frloc!=toloc)) then begin
                  Locr.Code = frloc;
                  locfoundf = true;
                  ResetLoop(Locr);
                  while (LoopMain(Locr,1,locfoundf)) begin
                    if (Locr.Code<frloc) then begin locfoundf = false; end;
                    if (Locr.Code>toloc) then begin locfoundf = false; end;
                    if (locfoundf) then begin
                      if (CreatePlannedRecords(RepSpec,INr,Locr.Code,0,item,fror,toor,debugf)) then begin goto L22; end;
                    end;
                  end;
                end else begin
                  if (CreatePlannedRecords(RepSpec,INr,RepSpec.f3,0,item,fror,toor,debugf)) then begin goto L22; end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
    UserTrace(ORr.SerNr,M4Long);      
  end;
  if (RepSpec.flags[2] == 0) then begin
    DeletePO;
  end;
  if (RepSpec.flags[1] == 0) then begin
    DeleteProd;
  end;
  if (debugf) then begin
    CloseFile;
  end;
  return;
end;