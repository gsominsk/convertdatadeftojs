external procedure CheckFlush(var integer,integer);

global
updating procedure DelPriceLMn(record RcVc RepSpec)
begin
  record PLVc PLr;
  record PLQVc PLQr;
  record INVc INr;
  boolean found, testf;
  integer cnt;
  
  found = true;
  PLr.PLCode = RepSpec.f2;
  while (LoopMain(PLr,1,found)) begin
    if (found) then begin
      if (nonblank(RepSpec.f2)) then begin
        if (PLr.PLCode <> RepSpec.f2) then begin
          found = false;
        end;
      end;
    end;
    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.f4)) then begin
        if (PLr.ArtCode <> RepSpec.f4) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f3)) or (RepSpec.flags[1] == 1) then begin 
        INr.Code = PLr.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin end;
        if (nonblank(RepSpec.f3)) then begin
          if (INr.Group <> RepSpec.f3) then begin
            testf = false;
          end;
        end;
        if (RepSpec.flags[1] == 1) then begin
          if (INr.Terminated == 0) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        RecordDelete(PLr);
        StepBack(PLr);
        MaintTrace(PLr.ArtCode); 
        CheckFlush(cnt,25);
      end;
    end;
  end; 
  PLQr.PLCode = RepSpec.f2;
  found = true;
  while (LoopMain(PLQr,1,found)) begin
    if (found) then begin
      if (nonblank(RepSpec.f2)) then begin  
        if (PLQr.PLCode <> RepSpec.f2) then begin
          found = false;
        end;
      end;
    end;
    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.f4)) then begin
        if (PLQr.ArtCode <> RepSpec.f4) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f3)) or (RepSpec.flags[1] == 1) then begin 
        INr.Code = PLQr.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin end;
        if (nonblank(RepSpec.f3)) then begin
          if (INr.Group <> RepSpec.f3) then begin
            testf = false;
          end;
        end;
        if (RepSpec.flags[1] == 1) then begin
          if (INr.Terminated == 0) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        RecordDelete(PLQr);
        StepBack(PLQr);
        MaintTrace(PLQr.ArtCode);
        CheckFlush(cnt,25);
      end;
    end;
  end;
  return;
 end;
