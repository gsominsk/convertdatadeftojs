external procedure CalcInCurtoTBIV(var record TBIVVc);
external procedure CalcExtra(val,string,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);

function
LongInt FindLastChildNr(record TBIVVc oldTBIVr)
BEGIN
  record TBIVVc TBIVr;
  Boolean TrHs;
  LongInt res;
  
  TBIVr.PRCode = oldTBIVr.PRCode;
  TBIVr.oVc = oldTBIVr.oVc;
  TBIVr.SerNr = oldTBIVr.SerNr;
  TBIVr.Row = oldTBIVr.Row;
  TBIVr.ArtCode = oldTBIVr.ArtCode;
  TBIVr.EMCode = oldTBIVr.EMCode;
  if (ReadLastMain(TBIVr,6,true)) then begin
    res = TBIVr.ChildNr;
  end;
/*
  TBIVr.ChildNr = oldTBIVr.ChildNr;
  TrHs = true;
  while (LoopMain(TBIVr,0,TrHs)) begin
    if (TBIVr.PRCode!=oldTBIVr.PRCode) then begin
      TrHs = false;
    end;
    if (TBIVr.oVc!=oldTBIVr.oVc) then begin
      TrHs = false;
    end;
    if (TBIVr.SerNr!=oldTBIVr.SerNr) then begin
      TrHs = false;
    end;
    if (TBIVr.Row!=oldTBIVr.Row) then begin
      TrHs = false;
    end;
    if (TBIVr.ArtCode!=oldTBIVr.ArtCode) then begin
      TrHs = false;
    end;
    if (TBIVr.EMCode!=oldTBIVr.EMCode) then begin
      TrHs = false;
    end;
    if (TBIVr.ChildNr!=oldTBIVr.ChildNr) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
    end;
  end;
*/
    
  FindLastChildNr = res;
  RETURN;
END;

global
updating procedure SplitTBIVMn(record RcVc RepSpec)
BEGIN
  record TBIVVc TBIVr;
  record TBIVVc newTBIVr;
  record TBIVVc oldTBIVr;
  Boolean testf;
  val t,markup;
  record GeneralOptionBlock GenOptRec;

  BlockLoad(GenOptRec);
  TBIVr.PRCode = RepSpec.FirstAcc;
  TBIVr.oVc = RepSpec.UsedOnly;
  TBIVr.SerNr = RepSpec.FirstVer;
  TBIVr.Row = RepSpec.SimVerf;
  TBIVr.ArtCode = RepSpec.AccStr;
  TBIVr.EMCode = RepSpec.TransStr;
  TBIVr.ChildNr = RepSpec.LastVer;
  if (ReadFirstMain(TBIVr,0,true)) then begin
    RecordCopy(newTBIVr,TBIVr);
    newTBIVr.Qty = newTBIVr.Qty/RepSpec.long1;
    newTBIVr.InvQty = newTBIVr.InvQty/RepSpec.long1;
    if ((newTBIVr.Qty>=0.5) and (newTBIVr.InvQty>=0.5)) then begin
      CalcSum(newTBIVr.InvQty,newTBIVr.Price,0,newTBIVr.Discount,t,GenOptRec.UseDiscount);
      newTBIVr.Sum = t;
      if (Mid(newTBIVr.Markup,len(newTBIVr.Markup)-1,1)!="%") then begin
        markup = StringToVal(newTBIVr.Markup,M4Val);
        newTBIVr.Markup = markup/RepSpec.long1;
      end;
      CalcExtra(newTBIVr.Sum,newTBIVr.Markup,t);
      newTBIVr.Sum = newTBIVr.Sum + t;
      newTBIVr.GP = newTBIVr.CostPrice*newTBIVr.Qty;
      newTBIVr.GP = newTBIVr.Sum - newTBIVr.GP;                
      newTBIVr.ChildNr = FindLastChildNr(TBIVr) + 1;
      CalcInCurtoTBIV(newTBIVr);
      if (RecordStore(newTBIVr,false)) then begin
        RecordCopy(oldTBIVr,TBIVr);
        TBIVr.Qty = TBIVr.Qty - newTBIVr.Qty;
        TBIVr.InvQty = TBIVr.InvQty - newTBIVr.InvQty;
        CalcSum(TBIVr.InvQty,TBIVr.Price,0,TBIVr.Discount,t,GenOptRec.UseDiscount);
        TBIVr.Sum = t;
        if (Mid(TBIVr.Markup,len(TBIVr.Markup)-1,1)!="%") then begin
          TBIVr.Markup = StringToVal(TBIVr.Markup,M4Val) - StringToVal(newTBIVr.Markup,M4Val);
        end;
        CalcExtra(TBIVr.Sum,TBIVr.Markup,t);
        TBIVr.Sum = TBIVr.Sum + t;
        TBIVr.GP = blankval;
        TBIVr.GP = TBIVr.CostPrice*TBIVr.Qty;
        TBIVr.GP = TBIVr.Sum - TBIVr.GP;                
        CalcInCurtoTBIV(TBIVr);
        if (RecordUpdate(oldTBIVr,TBIVr,true)==0) then begin
        end;
      end;
    end;  
  end;  
  RETURN;
END;
