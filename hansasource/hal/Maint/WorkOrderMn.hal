external function Boolean GetCustAndBal(var record CUVc,var val,var val,Integer,Integer,Integer,Integer,Integer,Integer,var Boolean);

procedure AddWORow(record WOVc WOp,record SVOVc SVOr,Integer currow)
BEGIN
  row SVOVc SVOrw;
  row WOVc worw;
  Integer rwcnt;

  MatRowGet(SVOr,currow,SVOrw);
  rwcnt = MatRowCnt(WOp);
  worw.stp = 1;
  worw.ContractNr = SVOrw.ContractNr;  
  worw.ArtCode = SVOrw.ArtCode;
  worw.Quant = SVOrw.Quant;
  worw.ContractNr = SVOrw.ContractNr;
  worw.Objects = SVOrw.Objects;
  worw.Spec = SVOrw.Spec;
  worw.SerialNr = SVOrw.SerialNr;
  worw.PlanWork = blankval;
  worw.MaxCost = SVOrw.MaxCost;
  worw.ItemType = SVOrw.ItemType;
  worw.PlanShiprw = SVOrw.PlanShiprw;
  worw.StandProblem = SVOrw.StandProblem;
  MatRowPut(WOp,rwcnt,worw);
  RETURN;
END;

function
Boolean MakeNewWO(record SVOVc SVOr,record WOVc WOp,string salesman)
BEGIN
  record UserVc USr;
  record CUVc CUr;
  val bal,limit;
  Boolean res;
  Boolean limitdaysf;
  
  RecordNew(WOp);
  CUr.Code = SVOr.CustCode;
  if (GetCustAndBal(CUr,limit,bal,0,0,0,0,0,0,limitdaysf)==false) then begin
    goto LMakeNewWO;
  end; 
  if (WOp.SerNr<=0) then begin
    WOp.SerNr = NextSerNr("WOVc",WOp.TransDate,-1,false,WOp.LangCode);
  end;  
  WOp.SVOSerNr = SVOr.SerNr;
  WOp.CustCode = SVOr.CustCode;
  WOp.Addr0 = SVOr.Addr0;
  WOp.OurContact = SVOr.OurContact;
  WOp.CustContact = SVOr.CustContact;
  WOp.Phone = SVOr.Phone;
  WOp.Fax = SVOr.Fax;
  WOp.LangCode = SVOr.LangCode;
  WOp.PlanDate = SVOr.PlanShip;
  WOp.CurncyCode = SVOr.CurncyCode;
  WOp.FrRate = SVOr.FrRate;
  WOp.ToRateB1 = SVOr.ToRateB1;
  WOp.ToRateB2 = SVOr.ToRateB2;
  WOp.BaseRate1 = SVOr.BaseRate1;
  WOp.BaseRate2 = SVOr.BaseRate2;
  WOp.Comment1 = SVOr.Comment1;
  WOp.Comment2 = SVOr.Comment2;
  WOp.Comment3 = SVOr.Comment3;
  WOp.Comment4 = SVOr.Comment4;
  WOp.VATNr = SVOr.VATNr;
  WOp.CustVATCode = SVOr.CustVATCode;
  WOp.InvoiceToCode = SVOr.InvoiceToCode;
  WOp.Objects = SVOr.Objects;
  WOp.CustOrdNr = SVOr.CustOrdNr;
  if (nonblank(salesman)) then begin
    USr.Code = salesman;
    if (ReadFirstMain(USr,1,true)) then begin
      WOp.EMCode = USr.Code;
      WOp.EMName = USr.Name;
      WOp.SalesGroup = USr.SalesGroup;
      if (SetInSet(USr.PersObjx,WOp.Objects)==false) then begin
        WOp.Objects = WOp.Objects & "," & USr.PersObjx;
      end;
    end;
  end;
  res = true;
LMakeNewWO:;
  MakeNewWO = res;
  RETURN;
END;


function
Integer SVORowWOMake(record SVOVc SVOr,LongInt only,var Array LongInt lp)
BEGIN
  row SVOVc SVOrw;
  Integer rwcnt,i,j;
  Integer pos,wocnt;
  Boolean finding,doit;
  
  rwcnt = MatRowCnt(SVOr);
  wocnt = 0;
  for (i=0;i<rwcnt;i=i+1) begin
    pos = 0;
    doit = true;
    finding = true;
    MatRowGet(SVOr,i,SVOrw);
    if (only>-1) then begin
      if (svorw.WOEnum!=only) then begin
        doit = false;
      end;
    end;    
    if (doit) then begin
      while((finding) and (pos<200)) begin
        if (lp[pos]!=-1) then begin
          if (lp[pos]==SVOrw.WOEnum) then begin finding = false; end;
        end else begin
          lp[pos] = SVOrw.WOEnum;
          finding = false;
          wocnt = wocnt + 1;
        end;
        pos = pos + 1;
      end;
    end;
  end;
  SVORowWOMake = wocnt;
  RETURN;
END;

global
updating procedure WorkOrderMn(record RcVc RepSpec)
BEGIN
  record SVOVc oldSVOr;
  record SVOVc SVOr;
  row SVOVc SVOrw;
  record WOVc WOr;
  LongInt svofr,svoto;
  Array LongInt larrey;
  Integer rwcnt,i,j;
  Boolean TrHs,testf;
  Boolean savef,savewof;
  Integer donelines,wocnt;
  Integer flushcnt,curcomp;
  
  curcomp = CurrentCompany;
  svofr = FirstInRange(RepSpec.f1,10);
  svoto = LastInRange(RepSpec.f1,10);
  SVOr.SerNr = svofr;
  TrHs = true;
  while (LoopMain(SVOr,1,TrHs)) begin
    RecordCopy(oldSVOr,SVOr);
    testf = true;
    if (TrHs) then begin
      if (svoto!=-1) then begin
        if  (SVOr.SerNr>svoto) then begin TrHs = false; end;
      end;  
      if (svofr!=-1) then begin
        if  (SVOr.SerNr<svofr) then begin TrHs = false; end;
      end;  
    end;
    if (TrHs) then begin
      if (SVOr.TransDate<RepSpec.sStartDate) then begin testf = false; end;
      if (SVOr.TransDate>RepSpec.sEndDate) then begin testf = false; end;
    end;
    if (TrHs) then begin
      if (nonblank(RepSpec.f3)) then begin
        if (RepSpec.f3!=SVOr.OrderClass) then begin testf = false; end;
      end;
    end;
    if (TrHs==false) then begin testf = false; end;
    if (testf) then begin
      wocnt = SVORowWOMake(SVOr,RepSpec.long1,larrey);
      rwcnt = MatRowCnt(SVOr);
      donelines = 0;
      savef = false;
      for (j=0;j<wocnt;j=j+1) begin
        if (MakeNewWO(SVOr,WOr,RepSpec.f2)) then begin
          savewof = false;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(SVOr,i,SVOrw);
            if (SVOrw.WOEnum==larrey[j]) then begin
              if (SVOrw.WOSerNr==-1) then begin
                AddWORow(WOr,SVOr,i);
                SVOrw.WOSerNr = WOr.SerNr;
                MatRowPut(SVOr,i,SVOrw);
                donelines = donelines + 1;
                savef = true;
                savewof = true;
             end else begin
              end;
            end;
          end;
          if (savewof) then begin
            if (WOr.SerNr<=0) then begin
              WOr.SerNr = NextSerNr("WOVc",WOr.TransDate,-1,false,WOr.LangCode);
            end;  
            if (WOr.SerNr!=-1) then begin
              if (RecordInsert(WOr,false)) then begin
                CreateRecordLink(WOr,curcomp,SVOr,curcomp);
                CreateRecordLink(SVOr,curcomp,WOr,curcomp);
              end;
            end;  
          end;  
        end;
      end;
//      if (donelines==wocnt) then begin 
//        SVOr.WOMark = 1;
//      end;  
      if (savef) then begin
        SVOr.WOMark = 1;
        if (RecordUpdate(oldSVOr,SVOr,false)==0) then begin
        end;
      end;  
    end;
    MaintTrace(SVOr.SerNr);            
  end;
  RETURN;
END;
