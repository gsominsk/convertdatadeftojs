external function roundmode SetRoundModeD(Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);

updating procedure UpdateTRVc(string basecur1,val base1,val base2)
begin
  record TRVc TRr;
  record TRVc oldTRr;
  row TRVc TRrw;
  Integer i,rwcnt;
  Boolean found;
  string 255 curcode;
  
  found = true;
//  TRr.Number = 2;
//  TRr.IntYc = 80;
  while (LoopMain(TRr,2,found)) begin
    if (found) then begin
      RecordCopy(oldTRr,TRr);
      rwcnt = MatRowCnt(TRr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TRr,i,TRrw);
        TRrw.BaseRate1 = base1;
        TRrw.BaseRate2 = base2;
        curcode = basecur1;
        TRrw.DebVal2 = MulRateToBase2(curcode,TRrw.DebVal,blankval,blankval,blankval,base1,base2,SetRoundModeD(2));
        TRrw.CredVal2 = MulRateToBase2(curcode,TRrw.CredVal,blankval,blankval,blankval,base1,base2,SetRoundModeD(2));
        if (TRrw.DebVal2==0) then begin
          TRrw.DebVal2 = blankval;
        end;
        if (TRrw.CredVal2==0) then begin
          TRrw.CredVal2 = blankval;
        end;
        MatRowPut(TRr,i,TRrw);
      end;
      if (RecordUpdate(oldTRr,TRr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateSMVc(string basecur1,val base1,val base2)
begin
  record SMVc SMr;
  record SMVc oldSMr;
  row SMVc SMrw;
  Integer i,rwcnt;
  Boolean found;
  string 255 curcode;
  
  found = true;
  while (LoopMain(SMr,1,found)) begin
    if (found) then begin
      RecordCopy(oldSMr,SMr);
      rwcnt = MatRowCnt(SMr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(SMr,i,SMrw);
        SMrw.BaseRate1 = base1;
        SMrw.BaseRate2 = base2;
        curcode = basecur1;
        SMrw.DebVal2 = MulRateToBase2(curcode,SMrw.DebVal,blankval,blankval,blankval,base1,base2,SetRoundModeD(2));
        SMrw.CredVal2 = MulRateToBase2(curcode,SMrw.CredVal,blankval,blankval,blankval,base1,base2,SetRoundModeD(2));
        if (SMrw.DebVal2==0) then begin
          SMrw.DebVal2 = blankval;
        end;
        if (SMrw.CredVal2==0) then begin
          SMrw.CredVal2 = blankval;
        end;
        MatRowPut(SMr,i,SMrw);
      end;
      if (RecordUpdate(oldSMr,SMr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateIVVc(string basecur1,val base1,val base2)
begin
  record IVVc IVr;
  record IVVc oldIVr;
  row IVVc IVrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(IVr,1,found)) begin
    if (found) then begin
      RecordCopy(oldIVr,IVr);
      IVr.BaseRate1 = base1;
      IVr.BaseRate2 = base2;
      rwcnt = MatRowCnt(IVr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(IVr,i,IVrw);
        if (IVrw.stp==15) or (IVrw.stp==16) or (IVrw.stp==kInvoiceRowTypeChequePayment) then begin
          IVrw.BaseRate1 = base1;
          IVrw.BaseRate2 = base2;
          MatRowPut(IVr,i,IVrw);
        end;
      end;
      if (RecordUpdate(oldIVr,IVr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateVIVc(string basecur1,val base1,val base2)
begin
  record VIVc VIr;
  record VIVc oldVIr;
  row VIVc VIrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(VIr,1,found)) begin
    if (found) then begin
      RecordCopy(oldVIr,VIr);
      VIr.BaseRate1 = base1;
      VIr.BaseRate2 = base2;
      if (RecordUpdate(oldVIr,VIr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateExpVc(string basecur1,val base1,val base2)
begin
  record ExpVc Expr;
  record ExpVc oldExpr;
  row ExpVc Exprw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(Expr,1,found)) begin
    if (found) then begin
      RecordCopy(oldExpr,Expr);
      Expr.BaseRate1 = base1;
      Expr.BaseRate2 = base2;
      if (RecordUpdate(oldExpr,Expr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdatePPVc(string basecur1,val base1,val base2)
begin
  record PPVc PPr;
  record PPVc oldPPr;
  row PPVc PPrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(PPr,1,found)) begin
    if (found) then begin
      RecordCopy(oldPPr,PPr);
      PPr.BaseRate1 = base1;
      PPr.BaseRate2 = base2;
      if (RecordUpdate(oldPPr,PPr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdatePUVc(string basecur1,val base1,val base2)
begin
  record PUVc PUr;
  record PUVc oldPUr;
  row PUVc PUrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(PUr,1,found)) begin
    if (found) then begin
      RecordCopy(oldPUr,PUr);
      PUr.BaseRate1 = base1;
      PUr.BaseRate2 = base2;
      if (RecordUpdate(oldPUr,PUr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateCLInVc(string basecur1,val base1,val base2)
begin
  record CLInVc CLInr;
  record CLInVc oldCLInr;
  row CLInVc CLInrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(CLInr,1,found)) begin
    if (found) then begin
      RecordCopy(oldCLInr,CLInr);
      CLInr.BaseRate1 = base1;
      CLInr.BaseRate2 = base2;
      if (RecordUpdate(oldCLInr,CLInr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateCLOutVc(string basecur1,val base1,val base2)
begin
  record CLOutVc CLOutr;
  record CLOutVc oldCLOutr;
  row CLOutVc CLOutrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(CLOutr,1,found)) begin
    if (found) then begin
      RecordCopy(oldCLOutr,CLOutr);
      CLOutr.BaseRate1 = base1;
      CLOutr.BaseRate2 = base2;
      if (RecordUpdate(oldCLOutr,CLOutr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdatePOVc(string basecur1,val base1,val base2)
begin
  record POVc POr;
  record POVc oldPOr;
  row POVc POrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(POr,1,found)) begin
    if (found) then begin
      RecordCopy(oldPOr,POr);
      POr.BaseRate1 = base1;
      POr.BaseRate2 = base2;
      if (RecordUpdate(oldPOr,POr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdatePOQTVc(string basecur1,val base1,val base2)
begin
  record POQTVc POQTr;
  record POQTVc oldPOQTr;
  row POQTVc POQTrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(POQTr,1,found)) begin
    if (found) then begin
      RecordCopy(oldPOQTr,POQTr);
      POQTr.BaseRate1 = base1;
      POQTr.BaseRate2 = base2;
      if (RecordUpdate(oldPOQTr,POQTr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateORVc(string basecur1,val base1,val base2)
begin
  record ORVc ORr;
  record ORVc oldORr;
  row ORVc ORrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(ORr,1,found)) begin
    if (found) then begin
      RecordCopy(oldORr,ORr);
      ORr.BaseRate1 = base1;
      ORr.BaseRate2 = base2;
      if (RecordUpdate(oldORr,ORr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateEDIORVc(string basecur1,val base1,val base2)
begin
  record EDIORVc EDIORr;
  record EDIORVc oldEDIORr;
  row EDIORVc EDIORrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(EDIORr,1,found)) begin
    if (found) then begin
      RecordCopy(oldEDIORr,EDIORr);
      EDIORr.BaseRate1 = base1;
      EDIORr.BaseRate2 = base2;
      if (RecordUpdate(oldEDIORr,EDIORr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateStockMovVc(string basecur1,val base1,val base2)
begin
  record StockMovVc StockMovr;
  record StockMovVc oldStockMovr;
  row StockMovVc StockMovrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(StockMovr,1,found)) begin
    if (found) then begin
      RecordCopy(oldStockMovr,StockMovr);
      StockMovr.BaseRate1 = base1;
      StockMovr.BaseRate2 = base2;
      if (RecordUpdate(oldStockMovr,StockMovr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateCOVc(string basecur1,val base1,val base2)
begin
  record COVc COr;
  record COVc oldCOr;
  row COVc COrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(COr,1,found)) begin
    if (found) then begin
      RecordCopy(oldCOr,COr);
      COr.BaseRate1 = base1;
      COr.BaseRate2 = base2;
      if (RecordUpdate(oldCOr,COr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateQTVc(string basecur1,val base1,val base2)
begin
  record QTVc QTr;
  record QTVc oldQTr;
  row QTVc QTrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(QTr,1,found)) begin
    if (found) then begin
      RecordCopy(oldQTr,QTr);
      QTr.BaseRate1 = base1;
      QTr.BaseRate2 = base2;
      if (RecordUpdate(oldQTr,QTr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateSVOVc(string basecur1,val base1,val base2)
begin
  record SVOVc SVOr;
  record SVOVc oldSVOr;
  row SVOVc SVOrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(SVOr,1,found)) begin
    if (found) then begin
      RecordCopy(oldSVOr,SVOr);
      SVOr.BaseRate1 = base1;
      SVOr.BaseRate2 = base2;
      if (RecordUpdate(oldSVOr,SVOr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateWOVc(string basecur1,val base1,val base2)
begin
  record WOVc WOr;
  record WOVc oldWOr;
  row WOVc WOrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(WOr,1,found)) begin
    if (found) then begin
      RecordCopy(oldWOr,WOr);
      WOr.BaseRate1 = base1;
      WOr.BaseRate2 = base2;
      if (RecordUpdate(oldWOr,WOr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateWSVc(string basecur1,val base1,val base2)
begin
  record WSVc WSr;
  record WSVc oldWSr;
  row WSVc WSrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(WSr,1,found)) begin
    if (found) then begin
      RecordCopy(oldWSr,WSr);
      WSr.BaseRate1 = base1;
      WSr.BaseRate2 = base2;
      if (RecordUpdate(oldWSr,WSr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateSVGMVc(string basecur1,val base1,val base2)
begin
  record SVGMVc SVGMr;
  record SVGMVc oldSVGMr;
  row SVGMVc SVGMrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(SVGMr,1,found)) begin
    if (found) then begin
      RecordCopy(oldSVGMr,SVGMr);
      SVGMr.BaseRate1 = base1;
      SVGMr.BaseRate2 = base2;
      if (RecordUpdate(oldSVGMr,SVGMr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateRetVc(string basecur1,val base1,val base2)
begin
  record RetVc Retr;
  record RetVc oldRetr;
  row RetVc Retrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(Retr,1,found)) begin
    if (found) then begin
      RecordCopy(oldRetr,Retr);
      Retr.BaseRate1 = base1;
      Retr.BaseRate2 = base2;
      if (RecordUpdate(oldRetr,Retr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateWSIVVc(string basecur1,val base1,val base2)
begin
  record WSIVVc WSIVr;
  record WSIVVc oldWSIVr;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(WSIVr,1,found)) begin
    if (found) then begin
      RecordCopy(oldWSIVr,WSIVr);
      WSIVr.BaseRate1 = base1;
      WSIVr.BaseRate2 = base2;
      if (RecordUpdate(oldWSIVr,WSIVr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateRetPUVc(string basecur1,val base1,val base2)
begin
  record RetPUVc RetPUr;
  record RetPUVc oldRetPUr;
  row RetPUVc RetPUrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(RetPUr,1,found)) begin
    if (found) then begin
      RecordCopy(oldRetPUr,RetPUr);
      RetPUr.BaseRate1 = base1;
      RetPUr.BaseRate2 = base2;
      if (RecordUpdate(oldRetPUr,RetPUr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateIVCashVc(string basecur1,val base1,val base2)
begin
  record IVCashVc IVCashr;
  record IVCashVc oldIVCashr;
  row IVCashVc IVCashrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(IVCashr,1,found)) begin
    if (found) then begin
      RecordCopy(oldIVCashr,IVCashr);
      IVCashr.BaseRate1 = base1;
      IVCashr.BaseRate2 = base2;
      if (RecordUpdate(oldIVCashr,IVCashr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdatePOCOVc(string basecur1,val base1,val base2)
begin
  record POCOVc POCOr;
  record POCOVc oldPOCOr;
  row POCOVc POCOrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(POCOr,1,found)) begin
    if (found) then begin
      RecordCopy(oldPOCOr,POCOr);
      POCOr.BaseRate1 = base1;
      POCOr.BaseRate2 = base2;
      if (RecordUpdate(oldPOCOr,POCOr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateVATIVVc(string basecur1,val base1,val base2)
begin
  record VATIVVc VATIVr;
  record VATIVVc oldVATIVr;
  row VATIVVc VATIVrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(VATIVr,1,found)) begin
    if (found) then begin
      RecordCopy(oldVATIVr,VATIVr);
      VATIVr.BaseRate1 = base1;
      VATIVr.BaseRate2 = base2;
      if (RecordUpdate(oldVATIVr,VATIVr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateVATVIVc(string basecur1,val base1,val base2)
begin
  record VATVIVc VATVIr;
  record VATVIVc oldVATVIr;
  row VATVIVc VATVIrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(VATVIr,1,found)) begin
    if (found) then begin
      RecordCopy(oldVATVIr,VATVIr);
      VATVIr.BaseRate1 = base1;
      VATVIr.BaseRate2 = base2;
      if (RecordUpdate(oldVATVIr,VATVIr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateINTransferVc(string basecur1,val base1,val base2)
begin
  record INTransferVc INTransferr;
  record INTransferVc oldINTransferr;
  row INTransferVc INTransferrw;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(INTransferr,1,found)) begin
    if (found) then begin
      RecordCopy(oldINTransferr,INTransferr);
      INTransferr.BaseRate1 = base1;
      INTransferr.BaseRate2 = base2;
      if (RecordUpdate(oldINTransferr,INTransferr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateAgreementVc(string basecur1,val base1,val base2)
begin
  record AgreementVc Agreementr;
  record AgreementVc oldAgreementr;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(Agreementr,1,found)) begin
    if (found) then begin
      RecordCopy(oldAgreementr,Agreementr);
      Agreementr.BaseRate1 = base1;
      Agreementr.BaseRate2 = base2;
      if (RecordUpdate(oldAgreementr,Agreementr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateRentQTVc(string basecur1,val base1,val base2)
begin
  record RentQTVc RentQTr;
  record RentQTVc oldRentQTr;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(RentQTr,1,found)) begin
    if (found) then begin
      RecordCopy(oldRentQTr,RentQTr);
      RentQTr.BaseRate1 = base1;
      RentQTr.BaseRate2 = base2;
      if (RecordUpdate(oldRentQTr,RentQTr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateORProgVc(string basecur1,val base1,val base2)
begin
  record ORProgVc ORProgr;
  record ORProgVc oldORProgr;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(ORProgr,1,found)) begin
    if (found) then begin
      RecordCopy(oldORProgr,ORProgr);
      ORProgr.BaseRate1 = base1;
      ORProgr.BaseRate2 = base2;
      if (RecordUpdate(oldORProgr,ORProgr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateCostUserVc(string basecur1,val base1,val base2)
begin
  record CostUserVc CostUserr;
  record CostUserVc oldCostUserr;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(CostUserr,1,found)) begin
    if (found) then begin
      RecordCopy(oldCostUserr,CostUserr);
      CostUserr.BaseRate1 = base1;
      CostUserr.BaseRate2 = base2;
      if (RecordUpdate(oldCostUserr,CostUserr,false)) then begin end;
    end;
  end;
  return;
end;

updating procedure UpdateEasyRentVc(string basecur1,val base1,val base2)
begin
  record EasyRentVc EasyRentr;
  record EasyRentVc oldEasyRentr;
  Integer i,rwcnt;
  Boolean found;
  
  found = true;
  while (LoopMain(EasyRentr,1,found)) begin
    if (found) then begin
      RecordCopy(oldEasyRentr,EasyRentr);
      EasyRentr.BaseRate1 = base1;
      EasyRentr.BaseRate2 = base2;
      if (RecordUpdate(oldEasyRentr,EasyRentr,false)) then begin end;
    end;
  end;
  return;
end;

global
updating procedure UpdTransBRateMn(record RcVc RepSpec)
begin
  record BaseCurBlock BCb;
  record BaseERVc BERr;
  val base1,base2;

  BlockLoad(BCb);
  base1 = 100;
  base2 = 100;
  BERr.Date = RepSpec.d1;
  if (ReadLastMain(BERr,1,false)) then begin
    base1 = BERr.Rate1;
    base2 = BERr.Rate2;
  end;
  UpdateTRVc(BCb.BaseCur1,base1,base2);
  UpdateSMVc(BCb.BaseCur1,base1,base2);
  UpdateIVVc(BCb.BaseCur1,base1,base2);
  UpdateVIVc(BCb.BaseCur1,base1,base2);
  UpdateExpVc(BCb.BaseCur1,base1,base2);
  UpdatePUVc(BCb.BaseCur1,base1,base2);
  UpdateCLInVc(BCb.BaseCur1,base1,base2);
  UpdateCLOutVc(BCb.BaseCur1,base1,base2);
  UpdatePOVc(BCb.BaseCur1,base1,base2);
  UpdatePOQTVc(BCb.BaseCur1,base1,base2);
  UpdateORVc(BCb.BaseCur1,base1,base2);
  UpdateEDIORVc(BCb.BaseCur1,base1,base2);
  UpdateStockMovVc(BCb.BaseCur1,base1,base2);
  UpdateCOVc(BCb.BaseCur1,base1,base2);
  UpdateQTVc(BCb.BaseCur1,base1,base2);
  UpdateSVOVc(BCb.BaseCur1,base1,base2);
  UpdateWOVc(BCb.BaseCur1,base1,base2);
  UpdateWSVc(BCb.BaseCur1,base1,base2);
  UpdateSVGMVc(BCb.BaseCur1,base1,base2);
  UpdateRetVc(BCb.BaseCur1,base1,base2);
  UpdateWSIVVc(BCb.BaseCur1,base1,base2);
  UpdateRetPUVc(BCb.BaseCur1,base1,base2);
  UpdateIVCashVc(BCb.BaseCur1,base1,base2);
  UpdatePOCOVc(BCb.BaseCur1,base1,base2);
  UpdateVATIVVc(BCb.BaseCur1,base1,base2);
  UpdateVATVIVc(BCb.BaseCur1,base1,base2);
  UpdateINTransferVc(BCb.BaseCur1,base1,base2);
  UpdateAgreementVc(BCb.BaseCur1,base1,base2);
  UpdateRentQTVc(BCb.BaseCur1,base1,base2);
  UpdateORProgVc(BCb.BaseCur1,base1,base2);
  UpdateCostUserVc(BCb.BaseCur1,base1,base2);
  UpdateEasyRentVc(BCb.BaseCur1,base1,base2);
  return;
end;