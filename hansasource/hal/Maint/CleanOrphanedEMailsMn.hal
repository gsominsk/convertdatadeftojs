external updating procedure TestAndDeleteMail(record MailVc);

procedure StartCounting(string vcname,var longint count,var longint n,var longint m)
begin
  count = CountRecords(vcname);
  n = 0;
  m = 0;
  
  LogText(0,"Looping through " & count & " " & vcname & " records");
  
  return;
end;

procedure CountOne(longint count,var longint n,var longint m)
begin
  val v1,v2;
  
  n = n + 1;
  
  if (n==10) then begin
    m = m + n;
    n = 0;
    
    v1 = m;
    v2 = count;
    
    v1 = v1 / v2;
    v1 = v1 * 100;
    
    LogText(0,"cleaned " & v1 & " percent (" & m & " of " & count & ")");
  end;
end;

global
updating procedure CleanOrpanedEmailsMn(record RcVc RepSpec)
begin
  record MailVc Mailr;
  record MailReadVc MailReadr;
  longint n,m,count;
  val pct;
  
  SetDatabaseToUnsafeMode;
  
  StartCounting("MailVc",count,n,m);
  while (LoopMain(Mailr,1,true)) begin
    TestAndDeleteMail(Mailr);
    CountOne(count,n,m);
  end;
  
  StartCounting("MailReadVc",count,n,m);
  while (LoopMain(MailReadr,1,true)) begin
    Mailr.SerNr = MailReadr.mailSerNr;
    if (ReadFirstMain(Mailr,1,true)==false) then begin
      RecordDelete(MailReadr);
      StepBack(MailReadr);
    end;
    CountOne(count,n,m);
  end;
  
  SetDatabaseToSafeMode;
  
  return;
end;