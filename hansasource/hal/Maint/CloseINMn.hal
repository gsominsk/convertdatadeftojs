external procedure HT2Per(Date, Date , var string);
external procedure HTClasses(string,string,var string);
external procedure HTITs(string,string,var string);
external procedure HTItems(string,var string);
external procedure GetStockValue(string,string,var record ItemStatusVc);

global
updating procedure DoCloseINMn(record INVc INr)
begin
  record INVc oldINr;
  
  if (ReadFirstMain(INr,1,true)) then begin
    RecordCopy(oldINr,INr);
    INr.Terminated = 1; 
    RecordUpdate(oldINr,INr,false);
  end;
  return;
end;

procedure RunCloseIN(record RcVc RepSpec,Boolean reportf)
begin
  record INVc INr;
  Boolean found,testf,skipitemf;
  record ItemStatusVc ISr;
  record ItemHistVc IHr;
  record PIVc PIr;
  record TBIVVc TBIVr;
  string 255 frin,toin;

  frin = FirstInRange(RepSpec.f1,20);
  toin = LastInRange(RepSpec.f1,20);
  found = true;
  INr.Code = frin;
  INr.Terminated = 0;
  while (LoopKey("ActCode",INr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (INr.Code<frin) then begin found = false; end;
      if (INr.Code>toin) then begin found = false; end;
    end;
    if (found) then begin
      testf = true;
      if (INr.Terminated!=0) then begin testf = false; end;
      if (nonblank(RepSpec.f2)) then begin
        if (INr.Group!=RepSpec.f2) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f3)) then begin
        if (SetInSet(RepSpec.f3,INr.DispGroups)==false) then begin testf = false; end;
      end;
      if (testf) then begin
        if (RepSpec.flags[0]!=0) or (RepSpec.flags[2]!=0) or (RepSpec.flags[3]!=0) then begin
          GetStockValue(INr.Code,"",ISr);
          if (RepSpec.flags[0]!=0) then begin
            if (ISr.Instock!=0) then begin testf = false; end;
          end;
          if (RepSpec.flags[2]!=0) then begin
            if (ISr.OrddOut!=0) then begin testf = false; end;
          end;
          if (RepSpec.flags[3]!=0) then begin
            if (ISr.POUnOKQty!=0) then begin testf = false; end;
          end;
        end;
        if (RepSpec.flags[1]!=0) then begin
          PIr.DefaultChoice = 1;
          PIr.ItemCode = INr.Code;
          if (ReadFirstKey("DefaultChoice",PIr,2,true)) then begin testf = false; end;
        end;
        if (RepSpec.flags[4]!=0) then begin
          IHr.FileName = "IVVc";
          IHr.ArtCode = INr.Code;
          IHr.TransDate = RepSpec.sStartDate;
          ResetLoop(IHr);
          if (LoopKey("FNArtCode",IHr,3,true)) then begin
            skipitemf = true;
            if (IHr.FileName!="IVVc") then begin skipitemf = false; end;
            if (IHr.ArtCode!=INr.Code) then begin skipitemf = false; end;
            if (DateInRange(IHr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
              skipitemf = false;
            end;
            if (skipitemf) then begin
              testf = false;
            end;
          end;
        end;
        if (RepSpec.flags[5]!=0) then begin
          IHr.FileName = "PUVc";
          IHr.ArtCode = INr.Code;
          IHr.TransDate = RepSpec.sStartDate;
          ResetLoop(IHr);
          if (LoopKey("FNArtCode",IHr,3,true)) then begin
            skipitemf = true;
            if (IHr.FileName!="PUVc") then begin skipitemf = false; end;
            if (IHr.ArtCode!=INr.Code) then begin skipitemf = false; end;
            if (DateInRange(IHr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
              skipitemf = false;
            end;
            if (skipitemf) then begin
              testf = false;
            end;
          end;
        end;
        if (RepSpec.flags[6]!=0) then begin
          TBIVr.ArtCode = INr.Code;
          TBIVr.TransDate = RepSpec.sStartDate;
          ResetLoop(TBIVr);
          if (LoopKey("TransDateArtCode",TBIVr,2,true)) then begin
            skipitemf = true;
            if (TBIVr.ArtCode!=INr.Code) then begin skipitemf = false; end;
            if (DateInRange(TBIVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
              skipitemf = false;
            end;
            if (skipitemf) then begin
              testf = false;
            end;
          end;
        end;
      end;
      if (testf) then begin
        if (reportf) then begin
          StartFormat(15);
           OutString(0,"DblINVc",INr.Code,false);
           OutString(100,0,INr.Name,false);
          EndFormat;
        end else begin
          qupdating.DoCloseINMn(INr);
        end;
      end;
    end;
  end;
  return;
end;

global
procedure CloseINMn(record RcVc RepSpec)
begin
  RunCloseIN(RepSpec,false);
  return;
end;

global
procedure CloseINRn(record RcVc RepSpec)
begin
  string 255 tstr;
  Integer rw,rightadj;
  
  rw = 1;
  StartReportJob(USetStr(18720));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1); 
  rw = rw + 1; 
  HTItems(RepSpec.f1,tstr);
  Header(rw,tstr,1); 
  rw = rw + 1; 
  HTITs(RepSpec.f2,RepSpec.f2,tstr);
  Header(rw,tstr,0);
  HTClasses(RepSpec.f3,RepSpec.f3,tstr);
  Header(rw,tstr,1); 
  rw = rw + 1; 
  rightadj = 0;
  if (RepSpec.flags[0]!=0) then begin
    Header(rw,USetStr(18723),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  if (RepSpec.flags[1]!=0) then begin
    Header(rw,USetStr(18724),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  if (RepSpec.flags[2]!=0) then begin
    Header(rw,USetStr(18725),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  if (RepSpec.flags[3]!=0) then begin
    Header(rw,USetStr(18726),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  if (RepSpec.flags[4]!=0) then begin
    Header(rw,USetStr(18727),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  if (RepSpec.flags[5]!=0) then begin
    Header(rw,USetStr(18728),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  if (RepSpec.flags[6]!=0) then begin
    Header(rw,USetStr(18729),rightadj); 
    if (rightadj==1) then begin
      rightadj = 0;
      rw = rw + 1;
    end else begin
      rightadj = 1;
    end;
  end;
  EndHeader;
  StartFormat(15);
   OutString(0,0,USetStr(18721),false);
   OutString(100,0,USetStr(18722),false);
  EndFormat;
  Gray_Divider(0,1);
  RunCloseIN(RepSpec,true);
  EndJob;
  return;
end;
