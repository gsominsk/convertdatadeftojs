external procedure CheckFlush(var Integer,Integer);
external function Integer InString2(string,string);
external function Boolean FindUserInMailbox(string,var string,var LongInt);

procedure FindExternalName(record MailVc Mailr,var string externalname)
BEGIN
  LongInt i,lcnt;
  Integer where;
  Integer l,le;
  string 255 tstr;
  string 1 c;
  Boolean recivedf;

  lcnt = LineTextCnt(Mailr);
  for (i=0;i<lcnt;i=i+1) begin
    tstr = LineTextGet(Mailr,i);
    where = InString2(tstr,"Received:");
    if (where>=0) then begin
      recivedf = true;      
    end;
    if (recivedf) then begin
      where = InString2(tstr,"<");
      if (where>=0) then begin
        le = len(tstr);
        for (l=where+1;l<=le;l=l+1) begin
          c = Mid(tstr,l,1);
          if (c==">") then begin goto LBREAK; end;
          externalname = externalname & c;
        end;
      end;
    end;
  end;
LBREAK:;  
  RETURN;
END;

function Boolean MailboxFound(record MailVc Mailr,var string internalname)
BEGIN
  Boolean res,TrHs;
  LongInt i,lcnt;
  string 255 firstpart;
  string 1 c;
  string 255 externalname;
  record EmailAliasVc EmailAliasr;
  
  res = false;
  FindExternalName(Mailr,externalname);
  if (nonblank(externalname)) then begin
    for (i=0;i<=len(externalname);i=i+1) begin
      c = Mid(externalname,i,1);
      if (c=="@") then begin goto L22; end;
      firstpart = firstpart & c;
    end;
L22:;
  end else begin
    goto LMailboxFound;
  end;
  TrHs = true;
  ResetLoop(EmailAliasr);
  EmailAliasr.MatchText = externalname;
  while (LoopKey("MatchText",EmailAliasr,1,TrHs)) begin
    if (EmailAliasr.MatchText!=externalname) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      internalname = EmailAliasr.InternalName;
      res = true;
      goto LMailboxFound;
    end;
  end;  
LMailboxFound:;
  MailboxFound = res;
  RETURN;
END;

global
updating procedure UpdPostmasterMn(record RcVc RepSpec)
BEGIN
  record MailVc oldMailr;
  record MailVc Mailr;
  row MailVc Mailrw;
  record MailSettingsBlock MailSettingsRec;
  Boolean TrHs,changedf;
  string 60 ckey;
  string 60 confcode;
  string 60 confname;
  string 255 internalname;
  LongInt nr;
  Integer i,rwcnt;
  Integer flushcnt;

  BlockLoad(MailSettingsRec);
  if (FindUserInMailbox(MailSettingsRec.Postmaster,confcode,nr)==false) then begin
    goto LUpdPostmasterMn;
  end;
  ckey = "UserTime:";
  ckey = ckey & confcode;
  TrHs = true;
  while (LoopKey(ckey,Mailr,1,TrHs)) begin
    if (TrHs) then begin
      if (MailboxFound(Mailr,internalname)) then begin
        changedf = false;
        RecordCopy(oldMailr,Mailr);
        rwcnt = MatRowCnt(Mailr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Mailr,i,Mailrw);
          if (Mailrw.AddrCode==MailSettingsRec.Postmaster) then begin
            Mailrw.AddrCode = internalname;
            MatRowPut(Mailr,i,Mailrw);            
            changedf = true;
            i = rwcnt;
          end;
        end;
        if (changedf) then begin       
          if (RecordUpdate(oldMailr,Mailr,false)==0) then begin
          end;
          CheckFlush(flushcnt,10);
        end;      
      end;
    end;
  end;  
LUpdPostmasterMn:;  
  RETURN;
END;