external updating procedure SaveTrans(record TRVc);
external function string 255 CheckTrans(var record TRVc,Integer,Boolean);
external function Boolean GetPMRow(string,var row PMBlock);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function Boolean CheckTTRPerRow(string,string,string,Boolean,var string,Integer);
external function Boolean GetAccName(string,var string,Integer);
external function Integer GetIntYc(Date);
external procedure AddEuroTrRow(record TRVc,string,string,string,string,val,val,val,Boolean,Boolean,var val,Boolean,string,string,string);

updating procedure UpdateCoupons(Array LongInt acouponr,Integer acnt,Date nltransdate)
begin
  Integer i;
  record CouponVc Cr;
  
  for (i=0;i<acnt;i=i+1) begin
    if (acouponr[i]>0) then begin
      Cr.SerNr = acouponr[i];
      if (ReadFirstMain(Cr,1,true)) then begin
        Cr.Status = 3;
        Cr.NLTransDate = nltransdate;
        if (RecordStore(Cr,true)) then begin end;
      end;
    end;
  end;
  return;
end;

global
updating procedure NLTransCredCardSlipMn(record RcVc RepSpec)
begin
  record TRVc gTRp;
  record CouponVc Cr;
  record CredCardTypeVc CCTr;
  Boolean found,testf;
  Boolean dc1,dc2;
  string 255 targetacc,tstr,taccnumber;
  val TotSum;
  val fr,to1,to2,br1,br2;
  row PMBlock PMrw;
  Integer acnt;
  Array LongInt acouponr;
  string 255 keystr;
  LongInt frnr,tonr;
  
  if (blank(RepSpec.AccStr)) then begin
    MessageBox(20756,"");
    goto LNLTransCredCardSlipMn;
  end;
  if (blankdate(RepSpec.d1)) then begin
    MessageBox(20755,"");
    goto LNLTransCredCardSlipMn;
  end;
  frnr = FirstInRange(RepSpec.f2,10);
  tonr = LastInRange(RepSpec.f2,10);
  GetFullCurncyRate(tstr,RepSpec.d1,fr,to1,to2,br1,br2);
  dc1 = true;
  dc2 = false;
  RecordNew(gTRp);
  gTRp.RefStr = RepSpec.f1;
  gTRp.TransDate = RepSpec.d1;
  gTRp.Number = NextSerNr("TRVc",gTRp.TransDate,-1,false,"");
  gTRp.IntYc = GetIntYc(gTRp.TransDate);
  found = true;
  if (nonblank(RepSpec.f2)) then begin
    keystr = "SerNr";
    Cr.SerNr = frnr;  
  end else begin
    keystr = "TransDate";
    Cr.TransDate = RepSpec.sStartDate;  
  end;
  while (LoopKey(keystr,Cr,1,found)) begin
    if (nonblank(RepSpec.f2)) then begin
      if (Cr.SerNr>tonr) then begin
        found = false;
      end;
    end else begin
      if (Cr.TransDate>RepSpec.sEndDate) then begin
        found = false;
      end;
    end;
    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.FirstAcc)) then begin 
        if (Cr.CardType!=RepSpec.FirstAcc) then begin
          testf = false;
        end;
      end;
      if (Cr.Status!=0) and (Cr.Status!=1) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (DateInRange(Cr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        CCTr.Code = Cr.CardType;
        if (ReadFirstMain(CCTr,1,true)) then begin end;
        if (GetPMRow(CCTr.PayMode,PMrw)) then begin end;

        targetacc = CCTr.TargetAcc;
        if (blank(targetacc)) then begin
          targetacc = RepSpec.AccStr;
        end;
        if (GetAccName(targetacc,tstr,60)==false) then begin
          goto LNLTransCredCardSlipMn;
        end; 
        if (CheckTTRPerRow("CouponVc",targetacc,"",dc1,taccnumber,0)) then begin end;
        AddEuroTrRow(gTRp,targetacc,"","",tstr,Cr.Amount,br1,br2,false,dc1,TotSum,true,taccnumber,"","");
        if (GetAccName(PMrw.AccNr,tstr,60)==false) then begin
          goto LNLTransCredCardSlipMn;
        end; 
        if (CheckTTRPerRow("CouponVc",PMrw.AccNr,"",dc2,taccnumber,0)) then begin end;
        AddEuroTrRow(gTRp,PMrw.AccNr,"","",tstr,Cr.Amount,br1,br2,false,dc2,TotSum,true,taccnumber,"","");
        acouponr[acnt] = Cr.SerNr;
        acnt = acnt + 1;        
      end;
    end;
  end;
  if (gTRp.Number>0) then begin
    if (MatRowCnt(gTRp)>0) then begin    
      tstr = CheckTrans(gTRp,2,true);
      SaveTrans(gTRp);
      UpdateCoupons(acouponr,acnt,RepSpec.d1);
    end;
  end;
LNLTransCredCardSlipMn:;  
  return;
end;