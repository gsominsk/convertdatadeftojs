external procedure AddORToStockMov(record ORVc,record StockMovVc,record RcVc);
external procedure CheckFlush(var Integer,Integer);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure FindStockValue(string,string,var record ItemStatusVc);
external function Boolean SerialNrAvail(string,string,string,val);

function
Boolean FullShipStockMovCheck(record StockMovVc StockMovp)
BEGIN
   Integer i,rwcnt,cnt;
   record ItemStatusVc ISr;
   record INVc INr;
   record LocationVc Locr;
   row StockMovVc StockMovrw;
   row StockMovVc StockMovrw2;
   record MainStockBlock MainStockRec;
   val prev,t;
   Boolean res;
   string 255 location;

   res = true;
   BlockLoad(MainStockRec);

   location = StockMovp.FrLocation;
   if (blank(location)) then begin
     location = MainStockRec.MainStock;
   end;
   Locr.Code = location;
   if (nonblank(location)) then begin
     if (ReadFirstMain(Locr,1,true)==false) then begin
       res = false;
       goto LFullShipStockMovCheck;
     end;
   end;  
   rwcnt = MatRowCnt(StockMovp);
   for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(StockMovp,i,StockMovrw);
      INr.Code = StockMovrw.ArtCode;
      if (ReadFirstMain(INr,1,true)==false) then begin  
        res = false;
        goto LFullShipStockMovCheck; 
      end;      
      if ((INr.ItemType==1) and (MainStockRec.dontAllowOvership==1)) then begin        
        prev = blankval;
        for (cnt=0;cnt<i;cnt = cnt + 1) begin
          MatRowGet(StockMovp,cnt,StockMovrw2);
          if (StockMovrw2.ArtCode==StockMovrw.ArtCode) then begin
            prev = prev + StockMovrw2.Quant;
          end;  
        end;
        prev = prev + StockMovrw.Quant;
        FindStockValue(StockMovrw.ArtCode,location,ISr);
        t = ISr.Instock - ISr.InShipment;
        if (t<prev) then begin
          res = false;
          goto LFullShipStockMovCheck;
        end;
      end;
      if ((INr.SerNrf>0) and (INr.SerNrf<3)) then begin      
        if (blank(StockMovrw.SerialNr)) then begin
          if (StockMovrw.Quant>0) then begin
            res = false;
            goto LFullShipStockMovCheck;
          end;
        end;
        if (StockMovrw.Quant>0) then begin
          if (INr.SerNrf==1) then begin
            if (SerialNrAvail(StockMovrw.ArtCode,StockMovrw.SerialNr,location,StockMovrw.Quant)==false) then begin
              res = false;
              goto LFullShipStockMovCheck;
            end;
            if (StockMovrw.Quant>1.00) then begin
              res = false;
              goto LFullShipStockMovCheck;
            end;
            for (cnt=0;cnt<i;cnt=cnt+1) begin
              MatRowGet(StockMovp,cnt,StockMovrw2);
              if ((StockMovrw2.ArtCode==StockMovrw.ArtCode) and (StockMovrw2.SerialNr==StockMovrw.SerialNr)) then begin
                res = false;
                goto LFullShipStockMovCheck;
              end;
            end;  
          end else begin
            prev = blankval;
            for (cnt=0;cnt<i;cnt=cnt+1) begin
              MatRowGet(StockMovp,cnt,StockMovrw2);
              if ((StockMovrw2.ArtCode==StockMovrw.ArtCode) and (StockMovrw2.SerialNr==StockMovrw.SerialNr)) then begin
                prev = prev + StockMovrw2.Quant;
              end;  
            end;
            prev = prev + StockMovrw.Quant;
            if (SerialNrAvail(StockMovrw.ArtCode,StockMovrw.SerialNr,location,prev)==false) then begin
              res = false;
              goto LFullShipStockMovCheck;
            end;
          end;
        end;
      end;
   end;//for
LFullShipStockMovCheck:;   
  FullShipStockMovCheck = res;
  RETURN;
END;

global
updating procedure SMFromORMn(record RcVc RepSpec)
BEGIN
  record StockMovVc StockMovr;
  record MainStockBlock MainStockRec;
  record ORVc ORr;
  record ORVc oldORr;
  LongInt fror,toor;
  Boolean TrHs,testf;
  string 255 tstr,t2;
  Integer flushcnt;
  record LocationVc Locr;

  BlockLoad(MainStockRec);
  fror = FirstInRange(RepSpec.f1,10);
  toor = LastInRange(RepSpec.f1,10);
  if (blank(RepSpec.Stext)) then begin goto LSMFromORMn; end;
  if (blank(RepSpec.f1)) then begin goto LSMFromORMn; end;
  ORr.SerNr = fror;
  TrHs = true;
  while (LoopMain(ORr,1,TrHs)) begin
    testf = true;
    if (toor>0) then begin
      if (ORr.SerNr>toor) then begin TrHs = false; end;
    end;
    if (TrHs==false) then begin testf = false; end;
    if (blank(ORr.Location)) then begin
      if (blank(MainStockRec.MainStock)) then begin testf = false; end;
    end;  
    if (nonblank(RepSpec.f2)) then begin
      if (ORr.OrderClass!=RepSpec.f2) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.f3)) then begin
      if (ORr.CustCode!=RepSpec.f3) then begin testf = false; end;
    end;
    if (DateInRange(ORr.OrdDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin 
      testf = false;
    end;  
    if (ORr.Closed!=0) then begin testf = false; end;
    if (ORr.Location==RepSpec.Stext) then begin testf = false; end;
    if (testf) then begin
      RecordCopy(oldORr,ORr);
      RecordNew(StockMovr);
//why not PasteOrdInStockMov client-server
      StockMovr.SerNr = -1;
      StockMovr.TransDate = CurrentDate;
      StockMovr.RegDate = CurrentDate;
      if (nonblankdate(RepSpec.d1)) then begin
        StockMovr.TransDate = RepSpec.d1;
      end else begin
        StockMovr.TransDate = ORr.OrdDate;
      end;  
      StockMovr.SerNr = NextSerNr("StockMovVc",StockMovr.TransDate,-1,false,RepSpec.AccStr);
      StockMovr.FrLocation = RepSpec.Stext;
      AddORToStockMov(ORr,StockMovr,RepSpec);
      if (blank(StockMovr.ToLocation)) then begin
        StockMovr.ToLocation = MainStockRec.MainStock;
      end;  
      Locr.Code = StockMovr.ToLocation;
      ReadFirstMain(Locr,1,true);
      if (nonblank(Locr.ThrouLocation)) then begin
        StockMovr.ThrouLocation = Locr.ThrouLocation;
      end;
      if (RepSpec.flags[1]!=0) then begin 
        if (UserCanAction("StockMovOK",true)) then begin
          if (FullShipStockMovCheck(StockMovr)) then begin
            StockMovr.OKFlag = 1;
          end;  
        end;
      end;
      t2 = StockMovr.Comment;
      tstr = USetStr(1821);      
      tstr = tstr & " ";
      tstr = tstr & ORr.SerNr;
      if (nonblank(tstr)) then begin
        tstr = tstr & "; ";
      end;  
      tstr = tstr & ORr.CustCode;
      if (nonblank(tstr)) then begin 
        tstr = tstr & " ";
      end;  
      tstr = tstr & t2;
      StockMovr.Comment = tstr;
      if (MatRowCnt(StockMovr)>0) then begin
        if (RecordInsert(StockMovr,false)) then begin
        end;
        if (RecordUpdate(oldORr,ORr,true)==0) then begin
        end;
        CheckFlush(flushcnt,10);        
      end;  
    end;
  end;
LSMFromORMn:; 
  RETURN;
END;
