external procedure CalcPrice(val,val,val,var val,Integer);
external procedure IVSumup(var record IVVc,Boolean);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure PastePDInInv(var record IVVc,string,Boolean);

global
procedure PasteGroupORInInv(record ORVc ORp,record IVVc IVp)
BEGIN
  record CUVc CUr;
  
  if (nonblank(ORp.InvoiceToCode)) then begin
    CUr.Code = ORp.InvoiceToCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      IVp.CustCode = CUr.Code;
      IVp.Addr0 = CUr.Name;
      IVp.Addr1 = CUr.InvAddr0;
      IVp.Addr2 = CUr.InvAddr1;
      IVp.Addr3 = CUr.InvAddr2;
      IVp.InvAddr3 = CUr.InvAddr3;
      IVp.InvAddr4 = CUr.InvAddr4;
      IVp.CustCat = CUr.CustCat;
      IVp.OrgCust = ORp.CustCode;
    end else begin
      goto L20PasteGroupORInInv; // if customer is not found then use the original customer 
    end;
  end else begin
L20PasteGroupORInInv:;
    IVp.CustCode = ORp.CustCode;
    IVp.Addr0 = ORp.Addr0;
    IVp.Addr1 = ORp.Addr1;
    IVp.Addr2 = ORp.Addr2;
    IVp.Addr3 = ORp.Addr3;
    IVp.InvAddr3 = ORp.InvAddr3;
    IVp.InvAddr4 = ORp.InvAddr4;
    IVp.CustCat = ORp.CustCat;
    IVp.OrgCust = "";
  end;
  IVp.ClientContact = ORp.CustContact;
  IVp.OurContact = ORp.OurContact;
//  IVp.Objects = ORp.Objects;
  IVp.ExportFlag = ORp.ExportFlag;
  IVp.SalesMan = ORp.SalesMan;
  IVp.CurncyCode = ORp.CurncyCode;
  IVp.LangCode = ORp.LangCode;
  IVp.PriceList = ORp.PriceList;
  IVp.PRCode = ORp.PRCode;
  IVp.InclVAT = ORp.InclVAT;
  IVp.FrRate = ORp.FrRate;
  IVp.ToRateB1 = ORp.ToRateB1;
  IVp.ToRateB2 = ORp.ToRateB2;
  IVp.BaseRate1 = ORp.BaseRate1;
  IVp.BaseRate2 = ORp.BaseRate2;
  IVp.PayDeal = ORp.PayDeal;
  PastePDInInv(IVp,"",false);
  IVp.RebCode = ORp.RebCode;
  IVp.ShipAddr0 = ORp.ShipAddr0;
  IVp.ShipAddr1 = ORp.ShipAddr1;
  IVp.ShipAddr2 = ORp.ShipAddr2;
  IVp.ShipAddr3 = ORp.ShipAddr3;
  IVp.DelAddr3 = ORp.DelAddr3;
  IVp.DelAddr4 = ORp.DelAddr4;
  IVp.ShipMode = ORp.ShipMode;
  IVp.ShipDeal = ORp.ShipDeal;  
  CUr.Code = ORp.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;
  IVp.VATNr = CUr.VATNr;
  IVp.RegNr1 = CUr.RegNr1;
  RETURN;
END;

function Integer FindIVRow(record IVVc IVp,row ORVc orrw)
BEGIN
  Integer res;
  Integer rwcnt,i;
  row IVVc IVrw;
  
  rwcnt = MatRowCnt(IVp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    if ((IVrw.VATCode==orrw.VATCode) and (IVrw.SalesAcc==orrw.SalesAcc)) then begin
      res = i;
      goto LFindIVRow;
    end;
  end;
  ClearRow(IVp,IVrw,1);
  MatRowPut(IVp,rwcnt,IVrw);
  res = rwcnt;
LFindIVRow:;
  FindIVRow = res;
  RETURN;
END;

global
procedure PasteOrdInInv2(record ORVc ORp,record IVVc IVp,record XSVc XSp,var Array record XSrsVc aXSrsr,var Integer axsrscnt)
BEGIN
  Integer i,rwcnt;
  record GeneralOptionBlock GenOptr;
  row ORVc ORrw;
  row IVVc IVrw;
  row XSVc XSrw;
  Integer srw;
  val s,remn,p;
  Integer xsrows;
  record XSrsVc XSrsr;
  
  BlockLoad(GenOptr);
  IVp.OrderNr = ORp.SerNr;
  rwcnt = MatRowCnt(ORp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    remn = ORrw.Shipd2 - ORrw.Invd;
      if (((remn>0) and (remn!=0)) or (ORrw.Sum==0)) then begin
        srw = FindIVRow(IVp,ORrw);

        RecordClear(XSrsr);
        xsrows = MatRowCnt(XSp);
        ClearRow(XSp,XSrw,1);
        XSrw.FromFileName = "ORVc";
        XSrw.xSerNr = ORp.SerNr;
        XSrw.CurncyCode = ORp.CurncyCode;
        XSrw.FrRate = ORp.FrRate;
        XSrw.ToRateB1 = ORp.ToRateB1;
        XSrw.ToRateB2 = ORp.ToRateB2;
        XSrw.BaseRate1 = ORp.BaseRate1;
        XSrw.BaseRate2 = ORp.BaseRate2;
        XSrw.Item = ORrw.ArtCode;
        XSrw.Qty = remn;
        XSrw.GP = remn*ORrw.rowGP;
        XSrw.GP = remn/ORrw.Quant;
        XSrw.Row = i;
        p = ORrw.Price; 
        CalcPrice(ORrw.BasePrice,ORrw.PriceFactor,ORrw.vRebate,p,GenOptr.UseDiscount);
        ORrw.Price = p;  
        CalcSum(remn,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,s,GenOptr.UseDiscount);
        XSrw.Sum = s;
        MatRowPut(XSp,xsrows,XSrw);
        
        XSrsr.TransType = 0;
        XSrsr.ToFileName = "IVVc";
        XSrsr.ToRow = srw;
        XSrsr.FromFileName = "ORVc";
        XSrsr.FromSerNr = ORp.SerNr;
        XSrsr.FromRow = i;
        XSrsr.FromQty = remn;
        aXSrsr[axsrscnt] = XSrsr;
        axsrscnt = axsrscnt + 1;

        if ((ORrw.Quant==0) and (remn==0)) then begin
          remn = blankval;
        end;
        MatRowGet(IVp,srw,IVrw);
        IVrw.SalesAcc = ORrw.SalesAcc;
        IVrw.VATCode = ORrw.VATCode;
        IVrw.RvrsVATCode = ORrw.RvrsVATCode;
        IVrw.PriceFactor = ORrw.PriceFactor;
        p = ORrw.Price; 
        CalcPrice(ORrw.BasePrice,ORrw.PriceFactor,ORrw.vRebate,p,GenOptr.UseDiscount);
        ORrw.Price = p;  
        CalcSum(remn,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,s,GenOptr.UseDiscount);
        IVrw.Sum = IVrw.Sum + s;
        ORrw.Invd = ORrw.Invd + remn;
        IVrw.OrdNr = ORp.SerNr;
        IVrw.OrdRow = -2;
        MatRowPut(IVp,srw,IVrw);
      end;
    MatRowPut(ORp,i,ORrw);
  end;
  IVp.FrGPPercent = blankval;
  IVp.FrBase = blankval;
  IVp.FrGP = blankval;
  IVp.FrPrice = blankval;
  IVp.FrObjects = "";
  IVp.FrVATCode = "";
  IVp.FrSalesAcc = "";
  IVSumup(IVp,true);
  RETURN;
END;
