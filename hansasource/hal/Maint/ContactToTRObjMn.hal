external procedure NormalizeObjstr(var string);
external function string 60 AddObjectToObjectList(string,string);

global
updating procedure ContactToTRObjMn(record RcVc RepSpec)
begin
  Boolean found,testf;
  record TRVc oldTRr;
  record TRVc TRr;
  row TRVc TRrw;
  Integer i,rwcnt;
  record CYBlock CYb;
  record IVVc IVr;
  record VIVc VIr;
  string 255 contactcode;
  
  BlockLoad(CYb);
  if (CYb.ContactCodeAsObjectOnTR==0) then begin
    MessageBox(0,"");
    goto LContactToTRObjMn;
  end;
  found = true;
  TRr.IntYc = IVYc;
  TRr.TransDate = RepSpec.sStartDate;
  while (LoopKey("IntYc",TRr,2,found)) begin
    if (TRr.IntYc<IVYc) then begin found = false; end;
    if (DateInRange(TRr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      found = false;
    end;
    if (found) then begin
      testf = true;
      switch (TRr.IntYc) begin
        case IVYc:
        case VIYc:
        otherwise
          testf = false;
      end;
      if (testf) then begin
        switch (TRr.IntYc) begin
          case IVYc:
            IVr.SerNr = TRr.Number;
            ReadFirstMain(IVr,1,true);
            contactcode = IVr.CustCode;
          case VIYc:
            VIr.SerNr = TRr.Number;
            ReadFirstMain(VIr,1,true);
            contactcode = VIr.VECode;
        end;
        if (nonblank(contactcode)) then begin
          RecordCopy(oldTRr,TRr);
          rwcnt = MatRowCnt(TRr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(TRr,i,TRrw);
            TRrw.Objects = AddObjectToObjectList(TRrw.Objects,contactcode);        
            NormalizeObjstr(TRrw.Objects);
            MatRowPut(TRr,i,TRrw);
          end;
          RecordUpdate(oldTRr,TRr,true);
        end;
      end;
    end;
  end;
LContactToTRObjMn:;  
  return;
end;