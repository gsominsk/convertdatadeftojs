external function Boolean FindItemVAR(string,var string,var string,var string,var string);
external function val ItemHistQtyInPeriod(string,string,Date,Date,Date);
external procedure UpdateSRFIFO(record SRVc);
external procedure PasteArtCodeToSR(var record SRVc,Integer,record ItemStatusVc,string,val);
external procedure SRSumUp(var record SRVc);

updating procedure SaveSR(record SRVc SRr)
begin
  SRr.SerNr = NextSerNr("SRVc",SRr.TransDate,-1,false,""); 
  if (SRr.SerNr>0) and (MatRowCnt(SRr)>0) then begin
    UpdateSRFIFO(SRr);
    SRSumUp(SRr);
    RecordStore(SRr,false);
  end;           
  return;
end;
      
global
updating procedure AgedStockRevMn(record RcVc RepSpec)
begin
  record INVc INr;
  record ItemStatusVc ISr;
  Boolean found,testf;
  string 255 keystr,tstr;
  Integer sorting,rownr;
  string 255 frin,toin;
  val v;
  record SRVc SRr;
  row SRVc SRrw;
  Date sd,ed;
  record SerBalVc SBr;
  val q,serqty;
  string 60 sz,msk,mskrep,serialnr,prevserialnr,firstserialnr;
  string 200 varsubset;
  Boolean itemfound,foundsb,varf;
  record SerNrTrackBlock SNrb;
  
  BlockLoad(SNrb);
  RecordNew(SRr);
  frin = FirstInRange(RepSpec.f1,20);
  toin = LastInRange(RepSpec.f1,20);
  sorting = 0;
  keystr = "Code";
  ISr.Code = frin;
  found = true;
  while (LoopKey(keystr,ISr,1,found)) begin
    INr.Code = ISr.Code;
    ReadFirstMain(INr,1,true);
    if (nonblank(RepSpec.f1)) then begin
      if (ISr.Code>toin) then begin found = false; end;
    end;
    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (INr.Group!=RepSpec.FirstAcc) then begin
          testf = false;
        end;
      end;
      if (ISr.Location==";;;") then begin testf = false; end;
      v = ISr.Instock;
      if (testf) then begin
//        ed = AddMonth(CurrentDate,-RepSpec.long1);
//        sd.year = 1980; sd.month = 1; sd.day = 1;
//        v = ItemHistQtyInPeriod(INr.Code,ISr.Location,CurrentDate,sd,ed);
//why this ?     
        if (v<=0) then begin testf = false; end;
      end;   
      if (testf) then begin
        if (FindItemVAR(INr.Code,sz,msk,mskrep,varsubset)) then begin
          INr.Code = SRrw.ArtCode;
          varf = true;
        end;

        rownr = MatRowCnt(SRr);
        ClearRow(SRr,SRrw,1);
        switch (INr.SerNrf) begin
          case 0:
            PasteArtCodeToSR(SRr,rownr,ISr,"",v);
            MatRowGet(SRr,rownr,SRrw);
            switch (RepSpec.flags[0]) begin
              case 0: SRrw.NewFIFO = INr.LastPurchPrice;
              case 1: SRrw.NewFIFO = INr.WeighedAvPrice;
              case 2: SRrw.NewFIFO = INr.LastPurchPrice2;
            end;
            SRrw.NewFIFORowVal = SRrw.Qty*SRrw.NewFIFO;
            SRrw.DiffFIFO = SRrw.NewFIFO - SRrw.FIFO;
            SRrw.DiffFIFORowVal = SRrw.NewFIFORowVal - SRrw.FIFORowVal;
            MatRowPut(SRr,rownr,SRrw);
            if (rownr>=200) then begin
              SaveSR(SRr);
              RecordNew(SRr);
            end;
          otherwise
            q = 0.00001;
            ResetLoop(SBr);
            foundsb = true;
            SBr.Item = ISr.Code;
            SBr.Location = ISr.Location;
            SBr.Quant = q;
            while (LoopKey("ItemQuant",SBr,3,foundsb)) begin
              if (varf) then begin
                if (Left(SBr.Item,len(INr.Code))!=INr.Code) then begin foundsb = false; end;
              end else begin
                if (SBr.Item!=ISr.Code) then begin foundsb = false; end;
              end;
              if (SBr.Location!=ISr.Location) then begin foundsb = false; end;
              if (SBr.Quant<q) then begin foundsb = false; end;
              if (foundsb) then begin
                testf = true;
                if (varf) then begin
                  if (Right(SBr.Item,len(SBr.Item)-len(INr.Code))!=ISr.Variety) then begin testf = false; end;
                end;
                if (testf) then begin
                  if (SNrb.BulkSerialNos!=0) then begin
                    if (nonblank(prevserialnr)) then begin
                      if (StringToLongInt(SBr.Serial)!=StringToLongInt(prevserialnr)+1) then begin
                        PasteArtCodeToSR(SRr,rownr,ISr,firstserialnr & ":" & SBr.Serial,serqty);
                        serqty = 0;
                        firstserialnr = "";
                        rownr = rownr + 1;
                      end;
                    end;
                    prevserialnr = SBr.Serial;
                    if (blank(firstserialnr)) then begin
                      firstserialnr = SBr.Serial;
                    end;
                    serqty = serqty + 1;
                  end else begin
                    PasteArtCodeToSR(SRr,rownr,ISr,SBr.Serial,SBr.Quant);
                    rownr = rownr + 1;
                  end;
                  MatRowGet(SRr,rownr-1,SRrw);
                  switch (RepSpec.flags[0]) begin
                    case 0: SRrw.NewFIFO = INr.LastPurchPrice;
                    case 1: SRrw.NewFIFO = INr.WeighedAvPrice;
                    case 2: SRrw.NewFIFO = INr.LastPurchPrice2;
                  end;
                  SRrw.NewFIFORowVal = SRrw.Qty*SRrw.NewFIFO;
                  SRrw.DiffFIFO = SRrw.NewFIFO - SRrw.FIFO;
                  SRrw.DiffFIFORowVal = SRrw.NewFIFORowVal - SRrw.FIFORowVal;
                  MatRowPut(SRr,rownr-1,SRrw);
                  if (rownr>=200) then begin
                    SaveSR(SRr);
                    RecordNew(SRr);
                    rownr = MatRowCnt(SRr);
                  end;
                end;
              end;
            end;
        end;
      end;
    end;
  end;
  SaveSR(SRr);
  return;
end;