external function roundmode GetVATRoundMode(record RoundBlock);
external function string 255 FindINObjects(string,string);
external function val FindVAT(string,val,Integer,Integer);

procedure FindVATAccount(string VATCode,var string AccNumber)
BEGIN
  record VATCodeBlock VATr;
  row VATCodeBlock VATrw;
  Integer i,rwcnt;
  
  BlockLoad(VATr);
  rwcnt = MatRowCnt(VATr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw);
    if (VATCode==VATrw.VATCode) then begin
      AccNumber = VATrw.SalesVATAcc;
      goto LFindVATAccount;
    end;
  end;
LFindVATAccount:;  
  RETURN;
END;

/* WHAT IS THIS  ????? */
global
updating procedure CreateSMMn(record RcVc RepSpec)  
BEGIN
  record BankFileBlock bfiler;
  
  BlockLoad(bfiler);
  bfiler.RowSerNr = 10;   
  bfiler.LastSerNr = 20;
  bfiler.LastDate = CurrentDate;  
  bfiler.User = "";
  bfiler.ClientNr = "";
  BlockStore(bfiler);
/*
  record ORVc ORr;
  record INVc INr;
  record UserVc Userr;
  row ORVc ORrw;
  record AccBlock AccRec;
  LongInt afr, ato;
  Boolean testf,TrHs;
  val sumvat,vat,blankv;
  Integer i,smrwcnt,rwcnt;
  Date  currd;
  string 10 accnr;
  record RoundBlock RNr;
    
  BlockLoad(RNr);
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  currd = CURRENTDATE;
  TrHs = true;
  ORr.SerNr = afr;
  BlockLoad(AccRec);
  while (LoopMain(ORr,1,TrHs)) begin
     testf = true;
   if (nonblank(RepSpec.sStartDate)) then begin
       if (ORr.OrdDate<RepSpec.sStartDate) then begin
      testf = false;
     end;
   end;
   if (nonblank(RepSpec.sEndDate)) then begin
       if (ORr.OrdDate>RepSpec.sEndDate) then begin
      testf = false;
     end;
   end;
   if (nonblank(RepSpec.f1)) then begin
    if (ORr.SerNr>ato) then begin
      TrHs = false;
    end;
   end;
   if (nonblank(RepSpec.f2)) then begin
    if (RepSpec.f2<>ORr.CustCode) then begin
      testf = false;
    end;
   end;
   if (nonblank(RepSpec.ObjStr)) then begin
    if (RepSpec.ObjStr<>ORr.Objects) then begin
      testf = false;
    end;
   end;
   if (ORr.InvFlag==2) then begin testf = false; end;
   if (TrHs==false) then begin testf = false; end;
   if (testf) then begin
       record SMVc SMr;   
       row SMVc SMrw;
       
     smrwcnt = 0;
     sumvat = 0;
     RecordNew(SMr);
     SMrw.AccNumber = AccRec.ARAcc;
     GetAccountName(SMrw.AccNumber,SMrw.Comment);
     SMrw.Objects = ORr.Objects;
     SMrw.DebVal = ORr.Sum4;
       SMrw.CredVal = blankv;
       MatRowPut(SMr,smrwcnt,SMrw);
       smrwcnt = smrwcnt + 1;   
       rwcnt = MatRowCnt(ORr);
       for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          SMrw.AccNumber = ORrw.SalesAcc;
          SMrw.Objects = ORr.Objects;
          INr.Code = ORrw.ArtCode;
          if (ReadFirstMain(INr,1,true)) then begin
              if (nonblank(INr.Objects)) then begin
                SMrw.Objects = SMrw.Objects & ",";
                SMrw.Objects = SMrw.Objects & FindINObjects(INr.Objects,INr.Group);
              end;
          end;
          Userr.Code = ORr.SalesMan;
          if (ReadFirstMain(Userr,1,true)) then begin
              if (nonblank(Userr.PersObjx)) then begin
                SMrw.Objects = SMrw.Objects & ",";
                SMrw.Objects = SMrw.Objects & Userr.PersObjx;
              end;  
          end;
          GetAccountName(SMrw.AccNumber,SMrw.Comment);
          SMrw.VATCode = ORrw.VATCode;
          SMrw.CredVal = ORrw.Sum;
          SMrw.DebVal = blankv;
          vat = FindVAT(ORrw.VATCode,ORrw.Sum,ORr.InclVAT,ORr.NoTAXonVAT);
          sumvat = sumvat + vat;
          if (nonblank(SMrw.AccNumber)) then begin
            MatRowPut(SMr,smrwcnt,SMrw);
            smrwcnt = smrwcnt + 1;   
          end;            
          FindVATAccount(ORrw.VATCode,accnr);
          SMrw.AccNumber = accnr;
          SMrw.Objects = "";
          GetAccountName(SMrw.AccNumber,SMrw.Comment);
          SMrw.VATCode = "";
          SMrw.CredVal = Round(vat,GetVATRoundMode(RNr));
          SMrw.DebVal = blankv;          
          if (nonblank(SMrw.AccNumber)) then begin          
            MatRowPut(SMr,smrwcnt,SMrw);
            smrwcnt = smrwcnt + 1;   
          end;           
       end;    
       SMr.DSum = 0;
       SMr.CSum = 0;
       rwcnt = MatRowCnt(SMr);
       for (i=0; i<rwcnt; i=i+1) begin
         MatRowGet(SMr,i,SMrw);
         if (SMrw.DebVal<>0) then begin
           SMr.DSum = SMrw.DebVal + SMr.DSum;
         end;  
         if (SMrw.CredVal<>0) then begin
           SMr.CSum = SMr.CSum - SMrw.CredVal;
         end;  
       end;
       SMr.DiffVal = SMr.DSum + SMr.CSum;
       if (SMr.DiffVal<>0) then begin
         if (SMVc_AddRoundOffRow(SMr,false,currd,SMr.DiffVal,TotSum)==0) then begin
           smrwcnt = smrwcnt + 1;                   
         end;          
         if (SMr.DiffVal<0) then begin
           SMr.DSum = SMr.DiffVal + SMr.DSum;
         end else begin
           SMr.CSum = SMr.CSum - SMr.DiffVal;
         end;  
         SMr.DiffVal = 0;
       end;
       SMr.Comment = "Simulation from Order no."; 
       SMr.Comment = SMr.Comment & ORr.SerNr;
       SMr.TransDate = currd;
       TrHs = RecordStore(SMr,false); 
       if (TrHs==false) then begin
         ErrorMess(1510);
       end;      
   end;
  end;
*/  
  RETURN;
END;
