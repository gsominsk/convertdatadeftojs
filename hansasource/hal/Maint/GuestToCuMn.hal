external function Boolean GetNextCustNr(var string);
external procedure NextM4Number(string,var string);
external procedure CheckFlush(var Integer,Integer);

updating procedure MoveAttachments(record ProfileVc Guestr,record CUVc CUr)
begin
  record RLinkVc RLr;
  record RLinkVc RL2r;
  Boolean foundf;
  string 255 tstr;
  Integer compno;

  compno = CurrentCompany;
  tstr = BuildRecordIdStr(Guestr,compno);
LUpdateAllActLinksOne:;
  foundf = true;
  ResetLoop(RLr);
  RLr.ToRecidStr = tstr;
  while (LoopKey("ToRecKey",RLr,1,foundf)) begin
    if (RLr.ToRecidStr!=tstr) then begin
      foundf = false;
    end;
    if (foundf) then begin
      RecordCopy(RL2r,RLr);
      RLr.ToRecidStr = BuildRecordIdStr(CUr,compno);
      if (RecordUpdate(RL2r,RLr,false)==0) then begin
        goto LUpdateAllActLinksOne;
      end;
    end;
  end;
  tstr = BuildRecordIdStr(Guestr,compno);
LUpdateAllActLinksTwo:;
  foundf = true;
  ResetLoop(RLr);
  RLr.FromRecidStr = tstr;
  while (LoopMain(RLr,1,foundf)) begin
    if (RLr.FromRecidStr!=tstr) then begin
      foundf = false;
    end;
    if (foundf) then begin
      RecordCopy(RL2r,RLr);
      RLr.FromRecidStr = BuildRecordIdStr(CUr,compno);
      if (RecordUpdate(RL2r,RLr,false)==0) then begin
        goto LUpdateAllActLinksTwo;
      end;
    end;
  end;
  return;
end;

global
updating procedure GuestToCuMn(record RcVc RepSpec)
BEGIN
  record CUVc CUr;
  record ProfileVc Guestr;
  record ProfileVc oldGuestr;
  record ContactRelVc ContactRelr;
  Boolean TrHs,testf;
  Boolean corelf;
  string 255 lastcunr;
  Integer flushcnt;
  
  TrHs = true;
  if (nonblank(RepSpec.f1)) then begin
    lastcunr = RepSpec.f1;
  end else begin
    if (GetNextCustNr(lastcunr)) then begin end;
  end;
  Guestr.Code = "";
  while (LoopMain(Guestr,1,TrHs)) begin
    CUr.Code = lastcunr;
    if (ReadFirstMain(CUr,1,true)) then begin
      TrHs = false;
    end;
    testf = TrHs;
/*
    if (Guestr.Closed!=0) then begin
      testf = false;
    end;
*/
    if (testf) then begin
      CUr.Code = Guestr.Company;
      RecordNew(ContactRelr);
      if (ReadFirstMain(CUr,1,true)==false) then begin
        corelf = false;
      end else begin
        ContactRelr.CustCode = CUr.Code;
        ContactRelr.CustName = CUr.Name;
        corelf = true;
      end;
      RecordNew(CUr);
      CUr.Code = lastcunr;
      CUr.Name = Guestr.FirstName & " " & Guestr.LastName;
      CUr.InvAddr0 = Guestr.Addr0;
      CUr.InvAddr1 = Guestr.Addr1;
      CUr.InvAddr2 = Guestr.Addr2;
      CUr.InvAddr3 = Guestr.Addr3;
      CUr.InvAddr4 = Guestr.Addr4;
/*eee what ?      
      CUr.InvAddr0 = Guestr.CUCode;
      CUr.InvAddr1 = Guestr.Company;
      CUr.InvAddr2 = Guestr.ComAddr1;
      CUr.InvAddr3 = Guestr.ComAddr2;
      CUr.InvAddr4 = Guestr.ComAddr3;
*/      
      CUr.Phone = Guestr.Phone;
      CUr.Fax = Guestr.Fax;
      CUr.eMail = Guestr.Email;
      CUr.JobDesc = Guestr.Profesion;
      CUr.Classification = Guestr.Classification;
      CUr.Mobile = Guestr.Mobile;
      CUr.BirthDate = Guestr.BirthDate;
      CUr.NoMailPosting = 0;
      CUr.NoLetterPosting = 0;
      CUr.CustCat = "";
      CUr.CustCat = RepSpec.FirstAcc;
      CUr.RegNr1 = "";
      CUr.RegNr2 = "";
      CUr.VATNr = "";
      CUr.CustType = 1;
      CUr.CUType = 0;
      CUr.VEType = 0;
      CUr.GuestType = 1;
      CUr.Person = "";

      CUr.Nationality = Guestr.Nationality;
      CUr.PassportNr = Guestr.PassportNr;
//      CUr.Incognito = Guestr.Incognito;
//      CUr.Children = Guestr.Children;
//      CUr.EatHabit = Guestr.EatHabit;
//      CUr.DrinkHabit = Guestr.DrinkHabit;
//      CUr.VIP = Guestr.VIP;
//      CUr.Miles = Guestr.Miles;
//      CUr.MilesCat = Guestr.MilesCat;
//      CUr.BreakfCom = Guestr.BreakfCom;
//      CUr.LunchCom = Guestr.LunchCom;
//      CUr.DinnerCom = Guestr.DinnerCom;
//      CUr.NrPlate = Guestr.NrPlate;
      CUr.Blacklist = Guestr.Blacklist;
      CUr.Password = Guestr.Password;
      CUr.DocType = Guestr.DocType;
      CUr.Gender = Guestr.Gender;
      CUr.MarStatus = Guestr.MarStatus;
      CUr.BirthDate = Guestr.BirthDate;
//      CUr.Age = Guestr.Age;
      CUr.Newspaper = Guestr.Newspaper;
//      CUr.CUCode = Guestr.CUCode;
//      CUr.Wages = Guestr.Wages;
      CUr.Department = Guestr.ComDepartment;
//      CUr.WorkYears = Guestr.WorkYears;
//      CUr.PersReferences = Guestr.PersReferences;
//      CUr.CreditCardNr = Guestr.CreditCard;

      CUr.SalesMan = Guestr.SalesMan;
      CUr.Profesion = Guestr.Profesion;
      CUr.CountryCode = Guestr.CountryCode;
      CUr.LangCode = Guestr.LangCode;
      CUr.Smoking = Guestr.Smoking;
      if (CUr.Smoking==0) then begin
        CUr.Smoking = Guestr.Smoker;
      end;
      
      if (RecordStore(CUr,true)) then begin end;
      MoveAttachments(Guestr,CUr);
      ContactRelr.ContactCode = CUr.Code;
      ContactRelr.ContactName = CUr.Name;
      ContactRelr.ContactPhone = CUr.Phone;
      ContactRelr.ContactMobile = CUr.Mobile;
      ContactRelr.ContacteMail = CUr.eMail;
      ContactRelr.ContactTitle = CUr.Title;
      ContactRelr.ContactAltPhone = CUr.AltPhone;
      ContactRelr.Invalid = CUr.blockedFlag;
      ContactRelr.JobTitle = CUr.JobDesc;
      if (corelf) then begin
        if (RecordStore(ContactRelr,true)) then begin end;
      end;
/*      
      RecordCopy(oldGuestr,Guestr);
      Guestr.Closed = 1;
      if (RecordUpdate(oldGuestr,Guestr,false)==0) then begin end;
*/      
      CheckFlush(flushcnt,10);
      NextM4Number(lastcunr,lastcunr);
    end;
  end;
  if (RepSpec.ArtMode!=0) then begin
    ResetLoop(Guestr);
    Guestr.Code = "";
    while (LoopMain(Guestr,1,TrHs)) begin
        RecordDelete(Guestr);
        StepBack(Guestr);
        CheckFlush(flushcnt,20);
    end;
  end;
  RETURN;
END;