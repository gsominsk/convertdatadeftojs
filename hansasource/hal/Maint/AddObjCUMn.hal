external procedure ExtractObj(string,var Integer,var string);
external procedure CheckFlush(var Integer,Integer);

procedure RemoveObject(string removeobj,var string objstr)
BEGIN
  string 255 res,ostr;
  Integer pos; 
 
  res = "";
  pos = 0;
  ExtractObj(objstr,pos,ostr);
  while (nonblank(ostr)) begin
    if (ostr==removeobj) then begin
      goto LRemoveObject;
    end;
    if (nonblank(res)) then begin
      res = res & ",";
    end;
    res = res & ostr;
LRemoveObject:;
    ExtractObj(objstr,pos,ostr);
  end;    
  objstr = res;
  RETURN;
END;

procedure AddObject(record CUVc CUr,string object)
BEGIN
  record ObjVc Objr;
  string 50 OTCode,obj;
  Integer pos;
  string 255 tstr;
  
  Objr.Code = object;
  if (ReadFirstMain(Objr,1,true)) then begin
    OTCode = Objr.OTCode;
    if (nonblank(CUr.Objects)) then begin
LStartLoop:;    
      pos = 0;
      ExtractObj(CUr.Objects,pos,obj);
      while (nonblank(obj)) begin
        Objr.Code = obj;
        if (ReadFirstMain(Objr,1,true)) then begin
          if (Objr.OTCode==OTCode) then begin
            tstr = CUr.Objects;
            RemoveObject(obj,tstr);
            CUr.Objects = tstr;
            goto LStartLoop;
          end;
        end;
        ExtractObj(CUr.Objects,pos,obj);
      end;
      CUr.Objects = CUr.Objects & ",";
    end;
    CUr.Objects = CUr.Objects & object;
  end;
  RETURN;
END;

global
updating procedure AddObjCUMn(record RcVc RepSpec)
BEGIN
  record CustContModuleVc CCMr;
  Boolean found;
  record CUVc CUr;
  record CUVc oldCUr;
  string 20 frcu,tocu;
  Integer flushcnt;
  
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  
  CCMr.CustCode = frcu;
  found = true;
  while (LoopKey("MainKey",CCMr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (CCMr.CustCode>tocu) then begin found = false; end;
    end;
    if (found) then begin
      CUr.Code = CCMr.CustCode;
      if (ReadFirstMain(CUr,1,true)) then begin
        RecordCopy(oldCUr,CUr);
        switch (CCMr.OperatingSystem) begin
          case 1: AddObject(CUr,RepSpec.FirstAcc);
          case 2: AddObject(CUr,RepSpec.LastAcc);
          case 3: AddObject(CUr,RepSpec.AccStr);
          case 4: AddObject(CUr,RepSpec.ObjStr);
          case 5: AddObject(CUr,RepSpec.Stext);
          case 6: AddObject(CUr,RepSpec.TransStr);
          case 31: AddObject(CUr,RepSpec.f2);
        end;
        if (RecordUpdate(oldCUr,CUr,true)) then begin end;
        CheckFlush(flushcnt,10);
      end;
    end;
  end;
  RETURN;
END;