updating procedure UpdateWeighAvPerLocation(string location)
begin
  record WeigAvVc WAr;
  Boolean found,testf;
  record INVc INr;
  
  found = true;
  while (LoopMain(INr,1,found)) begin
    if (found) then begin
      testf = true;
      if (INr.ItemType!=kItemTypeStocked) then begin testf = false; end;
      if (testf) then begin
        RecordNew(WAr);
        WAr.ArtCode = INr.Code;
        WAr.Location = location;
        WAr.WeighedAvPrice = INr.WeighedAvPrice;
        RecordStore(WAr,false);
      end;
    end;
  end;
  return;
end;

global
updating procedure ConvToMultiLocationMn(record RcVc RepSpec)
begin
  record ConvMasterBlock CMb;
  record ConvLocationBlock CLb;
  row ConvLocationBlock CLbrw;
  record LocationVc Locr;
  record MainStockBlock MSb;
  record RcVc RepSpec2,RepSpec3;
  
  if (blank(RepSpec.FirstAcc)) then begin
    MessageBox(33460,"");
    goto LConvToMultiLocationMn;
  end;
  Locr.Code = RepSpec.FirstAcc;
  if (ReadFirstMain(Locr,1,true)==false) then begin
    MessageBox(33460,"");
    goto LConvToMultiLocationMn;
  end;
  BlockLoad(MSb);
  if (nonblank(MSb.MainStock)) then begin
//??  
  end;

  BlockLoad(CMb);
  CMb.ConvLocation = 1;
  BlockStore(CMb);
  
  BlockLoad(CLb);
  while (MatRowCnt(CLb)>0) begin
    MatRowDelete(CLb,0);
  end;
  CLbrw.OldCode = MSb.MainStock;
  CLbrw.NewCode = RepSpec.FirstAcc;
  MatRowPut(CLb,0,CLbrw);
  BlockStore(CLb);

  RebuildDatabase;

  BlockLoad(CMb);
  CMb.ConvLocation = 0;
  BlockStore(CMb);
  
  BlockLoad(CLb);
  while (MatRowCnt(CLb)>0) begin
    MatRowDelete(CLb,0);
  end;
  BlockStore(CLb);

  BlockLoad(MSb);
  MSb.MainStock = RepSpec.FirstAcc;
  BlockStore(MSb);
  UpdateWeighAvPerLocation(RepSpec.FirstAcc);

  RepSpec2.repname = "RecalcItemStatusMn";
  RepSpec2.critname = "RecalcItemStatusVClass";
  RunMaintenance(RepSpec2);
  
  RepSpec3.repname = "RebuildStockMn";
  RepSpec3.critname = "RebuildStockVClass";
  RepSpec3.flags[1] = 1;
  RunMaintenance(RepSpec3);  
  
LConvToMultiLocationMn:;  
  return;
end;