external procedure CheckFlush(var Integer,Integer);
external function val DivWithRateToBase1(string,Date,val,roundmode);

global
updating procedure UpdatePIMn(record RcVc RepSpec)
begin
  record INVc INr;
  record PIVc oldPIr;
  record PIVc PIr;
  Boolean TrHs1,TrHs2;
  string 200 fromart,toart;
  LongInt LLoop1,LLoop2;
  Boolean save;
  Integer res;
  val fr,to1,to2,br1,br2;
  Integer flushcnt;

  fromart = FirstInRange(RepSpec.f1,20);
  toart = LastInRange(RepSpec.f1,20);
  INr.Code = fromart;
  TrHs1 = true;
  while (LoopMain(INr,1,TrHs1)) begin
    if (TrHs1) then begin
      if (nonblank(toart)) then begin
        if (INr.Code>toart) then begin
          TrHs1 = false;
        end;
      end;
    end;
    if (TrHs1) then begin
      ResetLoop(PIr);
      PIr.ItemCode = INr.Code;
      PIr.Location = "";
      PIr.VECode = RepSpec.f2;
      TrHs2 = true;
      while (LoopMain(PIr,3,TrHs2)) begin
        RecordCopy(oldPIr,PIr);
        if (TrHs2) then begin
          if (INr.Code<>PIr.ItemCode) then begin
            TrHs2 = false;
          end;
          if (nonblank(RepSpec.f2)) then begin
            if (RepSpec.f2<>PIr.VECode) then begin
              TrHs2 = false;
            end;
          end;
        end;
        if (TrHs2) then begin
          save = false;
          if (RepSpec.flags[1]<>0) then begin
            if (PIr.Comment<>INr.Name) then begin
              PIr.ItemCode = INr.Code;
              PIr.Comment = INr.Name;
              save = true;
            end;
          end;
          if (RepSpec.flags[2]<>0) then begin
            if (PIr.PurPrice<>INr.InPrice) then begin
              PIr.PurPrice = INr.InPrice;
              if (PIr.PIFactor<>0) then begin
                PIr.PurPrice = PIr.PIFactor * PIr.PurPrice;
              end;
              if (nonblank(PIr.CurncyCode)) then begin
                PIr.PurPrice = DivWithRateToBase1(PIr.CurncyCode,CurrentDate,PIr.PurPrice,DefaultCurRoundOff);
              end;
              save = true;
            end;
          end;
          if (save) then begin
            res = RecordUpdate(oldPIr,PIr,false);
            CheckFlush(flushcnt,10);
          end;
        end;
      end;
    end;
    MaintTrace(INr.Code);            
  end;
  return;
end;

