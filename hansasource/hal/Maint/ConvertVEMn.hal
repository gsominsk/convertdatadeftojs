external procedure CheckFlush(var Integer,Integer);

function Boolean CheckIfSupplierinConvVend(record ConvVendBlock ConvVendRec,string vecode)
BEGIN
  Boolean res;
  row ConvVendBlock ConvVendrw;
  Integer i,rwcnt;
  
  res = false;
  rwcnt = MatRowCnt(ConvVendRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ConvVendRec,i,ConvVendrw);
    if (vecode==ConvVendrw.OldCode) then begin
      res = true;
      goto LCheckIfSupplierinConvVend;
    end;
  end;
LCheckIfSupplierinConvVend:;
  CheckIfSupplierinConvVend = res;
  RETURN;
END;

function Boolean CheckIfConvertAllowed(record RcVc RepSpec,Integer repmode)//if changing this, change PrepConvertVEMn as well
BEGIN
  record VEVc VEr;
  record CUVc CUr;
  Boolean TrHs,firstf,res;
  record ConvVendBlock ConvVendRec;
  
  BlockLoad(ConvVendRec);
  res = true;
  firstf = true;
  TrHs = true;
  while (LoopMain(VEr,1,TrHs)) begin
    if (TrHs) then begin
      CUr.Code = VEr.Code;
      if (ReadFirstMain(CUr,1,true)) then begin
        if (CUr.VATNr!=VEr.VATNr) or blank(CUr.VATNr) or blank(VEr.VATNr) then begin
          if (repmode!=0) then begin
            if (RepSpec.flags[0]!=0) then begin
              if (CheckIfSupplierinConvVend(ConvVendRec,VEr.Code)) then begin
                goto LSKIP1;
              end;
            end;
            if (firstf) then begin
              StartFormat(15);
              OutString(0,0,USetStr(12588),false);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12593),false);
              OutString(150,0,USetStr(12595),false);
              OutString(300,0,USetStr(12594),false);
              OutString(400,0,USetStr(12595),false);
              EndFormat; 
              Gray_Divider(0,1);
              firstf = false;  
            end;
            StartFormat(15);
             OutString(0,"DblCUVc",CUr.Code,false);
             OutString(150,0,CUr.VATNr,false);
             OutString(300,"DbloldVEVc",VEr.Code,false);
             OutString(400,0,VEr.VATNr,false);
            EndFormat;             
          end else begin
            MessageBox(12586," " & VEr.Code & " " & USetStr(12587));
            TrHs = false;
          end;
LSKIP1:;            
          res = false;
        end;
      end;
    end;
  end;
  if (repmode!=0) then begin
    firstf = true;
    ResetLoop(VEr);
    TrHs = true;
    VEr.Code = "";
    while (LoopMain(VEr,1,TrHs)) begin
      if (TrHs) then begin
        if (nonblank(VEr.VATNr)) then begin
          CUr.VATNr = VEr.VATNr;
          if (ReadFirstKey("VATNr",CUr,1,true)) then begin
            if (CUr.Code==VEr.Code) then begin
              goto LSKIP2;
            end;
            if (RepSpec.flags[0]!=0) then begin
              if (CheckIfSupplierinConvVend(ConvVendRec,VEr.Code)) then begin
                goto LSKIP2;
              end;
            end;
            if (firstf) then begin
              StartFormat(30);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12591),false);
              OutString(0,0,USetStr(12592),false);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12593),false);
              OutString(150,0,USetStr(12594),false);
              OutString(300,0,USetStr(12595),false);
              EndFormat; 
              Gray_Divider(0,1);
              firstf = false;  
            end;
            StartFormat(15);
            OutString(0,"DblCUVc",CUr.Code,false);
            OutString(150,"DbloldVEVc",VEr.Code,false);
            OutString(300,0,CUr.VATNr,false);
            EndFormat; 
LSKIP2:;            
          end;
        end;
      end;
    end;
  end;
  if (repmode!=0) then begin
    firstf = true;
    ResetLoop(VEr);
    TrHs = true;
    VEr.Code = "";
    while (LoopMain(VEr,1,TrHs)) begin
      if (TrHs) then begin
        if (nonblank(VEr.VATNr)) then begin
          CUr.VATNr = VEr.VATNr;
          if (ReadFirstKey("VATNr",CUr,1,true)) then begin
            if (CUr.Code!=VEr.Code) then begin
              goto LSKIP3;
            end;
            if (RepSpec.flags[0]!=0) then begin
              if (CheckIfSupplierinConvVend(ConvVendRec,VEr.Code)) then begin
                goto LSKIP3;
              end;
            end;
            if (firstf) then begin
              StartFormat(30);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12596),false);
              OutString(0,0,USetStr(12597),false);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12593),false);
              OutString(150,0,USetStr(12594),false);
              OutString(300,0,USetStr(12595),false);
              EndFormat; 
              Gray_Divider(0,1);
              firstf = false;  
            end;
            StartFormat(15);
            OutString(0,"DblCUVc",CUr.Code,false);
            OutString(150,"DbloldVEVc",VEr.Code,false);
            OutString(300,0,CUr.VATNr,false);
            EndFormat; 
LSKIP3:;            
          end;
        end;
      end;
    end;
  end;

  if (repmode!=0) then begin
    firstf = true;
    ResetLoop(VEr);
    TrHs = true;
    VEr.Code = "";
    while (LoopMain(VEr,1,TrHs)) begin
      if (TrHs) then begin
        if (nonblank(VEr.Name)) then begin
          CUr.Name = VEr.Name;
          if (ReadFirstKey("Name",CUr,1,true)) then begin
            if (CUr.VATNr==VEr.VATNr) then begin goto LSKIP4; end;
            if (RepSpec.flags[0]!=0) then begin
              if (CheckIfSupplierinConvVend(ConvVendRec,VEr.Code)) then begin
                goto LSKIP4;
              end;
            end;
            if (firstf) then begin
              StartFormat(30);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12598),false);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12593),false);
              OutString(150,0,USetStr(12594),false);
              OutString(300,0,USetStr(12599),false);
              EndFormat; 
              Gray_Divider(0,1);
              firstf = false;  
            end;
            StartFormat(15);
            OutString(0,"DblCUVc",CUr.Code,false);
            OutString(150,"DbloldVEVc",VEr.Code,false);
            OutString(300,0,CUr.Name,false);
            EndFormat; 
LSKIP4:;            
          end;
        end;
      end;
    end;
  end;
/*
looks like above
  if (repmode!=0) then begin
    firstf = true;
    ResetLoop(VEr);
    TrHs = true;
    VEr.Code = "";
    while (LoopMain(VEr,1,TrHs)) begin
      if (TrHs) then begin
        if (nonblank(VEr.Name)) then begin
          CUr.Name = VEr.Name;
          if (ReadFirstKey("Name",CUr,1,true)) then begin
            if (RepSpec.flags[0]!=0) then begin
              if (CheckIfSupplierinConvVend(ConvVendRec,VEr.Code)) then begin
                goto LSKIP4;
              end;
            end;
            if (firstf) then begin
              StartFormat(30);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12598),false);
              EndFormat; 
              StartFormat(15);
              OutString(0,0,USetStr(12593),false);
              OutString(150,0,USetStr(12594),false);
              OutString(300,0,USetStr(12599),false);
              EndFormat; 
              Gray_Divider(0,1);
              firstf = false;  
            end;
            StartFormat(15);
            OutString(0,"DblCUVc",CUr.Code,false);
            OutString(150,"DbloldVEVc",VEr.Code,false);
            OutString(300,0,CUr.Name,false);
            EndFormat; 
LSKIP4:;            
          end;
        end;
      end;
    end;
  end;
*/  
  CheckIfConvertAllowed = res;
  RETURN;
END;

updating function Boolean MoveVEToCU(record RcVc RepSpec)
BEGIN
  Boolean res,TrHs,fullinfof;
  record CustomerSettingBlock CSr;
  record VEVc VEr;
  record CUVc CUr;
  record CUVc oldCUr;
  Date blankd;
  Integer cnt;

  res = true;
  TrHs = true;
  BlockLoad(CSr);
  while (LoopMain(VEr,1,TrHs)) begin
    if (TrHs) then begin
      fullinfof = true;
      CUr.Code = VEr.Code;
      if (ReadFirstMain(CUr,1,true)) then begin
        if (CUr.VATNr!=VEr.VATNr) then begin
          res = false;
          TrHs = false;
        end else begin
          if (nonblank(VEr.VATNr)) then begin
            fullinfof = false;
          end;
        end;
      end;      
    end;
    if (TrHs) then begin   
      if (fullinfof) then begin
        RecordNew(CUr);
        CUr.CUType = 0;
        CUr.Code = VEr.Code;
        CUr.Name = VEr.Name;
        CUr.Person = VEr.Person;
        CUr.InvAddr0 = VEr.Addr0;
        CUr.InvAddr1 = VEr.Addr1;
        CUr.InvAddr2 = VEr.Addr2;
        CUr.DelAddr0 = "";
        CUr.DelAddr1 = "";
        CUr.DelAddr2 = "";
        CUr.Phone = VEr.Phone;
        CUr.Fax = VEr.Fax;
        CUr.VECat = VEr.Group;
        CUr.Comment = VEr.Comment;
        CUr.ExportFlag = VEr.ExportFlag;
        CUr.AccFlag = 0;
//        CUr.InterestFlag = 0;//set on new
        CUr.VATNr = VEr.VATNr;
        CUr.CountryCode = VEr.CountryCode;
        CUr.SearchKey = VEr.SearchKey;
//        CUr.RemndrFlag = 0;//set on new
        CUr.LangCode = VEr.LangCode;
        CUr.OnAccount = VEr.OnAccount;
        CUr.SalesMan = VEr.SalesMan;
        CUr.Department = "";
        CUr.OrderComment = "";
        CUr.FreightNr = "";
        CUr.PLCode = "";
        CUr.RebCode = "";
        CUr.Classification = "";
        CUr.blockedFlag = VEr.BlockedFlag;
        CUr.DateChanged = CurrentDate;
        CUr.AccOperator = VEr.BankName;
        CUr.SecAccount = "";
        CUr.BankAccount = VEr.BankAcc;
        CUr.JobDesc = "";
        CUr.CustType = 0;
        CUr.ComCode = "";
        CUr.Sorting = VEr.SortCode;
        CUr.RegNr1 = VEr.RegNr1;
        CUr.RegNr2 = VEr.RegNr2;
        CUr.CPRNr = "";
        CUr.wwwAddr = "";
        CUr.CompItemCode = "";
        CUr.ANACode = VEr.ANACode;
        CUr.EDIFlag = 0;
        CUr.eMail = VEr.eMail;
        CUr.IntRate = blankval;
        CUr.PriceBasedOn = 0;
        CUr.DeliveryBasedOn = 0;
        CUr.SalesGroup = VEr.SalesGroup;
        CUr.SortCode = VEr.SortCode;
        CUr.AllowLogin = 0;
//        CUr.Password = 0;//set on new
        CUr.FTPLogin = 0;
        CUr.DateCreated = CurrentDate;
        CUr.EGOFlag = 0;
        CUr.InvAddr3 = VEr.Addr3;
        CUr.DelAddr3 = "";
        CUr.xArea = "";
        CUr.xAreaName = "";
        CUr.InvAddr4 = VEr.Addr4;
        CUr.DelAddr4 = "";
        CUr.WebConf = "";
        CUr.WebStartPage = "";
        CUr.FreightCode = "";
        CUr.MainDispGroup = "";
        CUr.AutoGiro = 0;
        CUr.OnHoldFlag = 0;
        CUr.ColectionFlag = 0;
        CUr.LocationCode = "";
        CUr.WebDisplays = "";
        CUr.Mobile = "";
        CUr.NoLetterPosting = CSr.NoLetterPosting;
        CUr.NoMailPosting = CSr.NoMailPosting;
        CUr.FiscalFlag = 0;
        CUr.UserStr1 = "";
        CUr.UserStr2 = "";
        CUr.UserStr3 = "";
        CUr.UserStr4 = "";
        CUr.UserStr5 = "";
        CUr.UserVal1 = blankval;
        CUr.UserVal2 = blankval;
        CUr.UserVal3 = blankval;
        CUr.UserDate1 = blankd;
        CUr.UserDate2 = blankd;
        CUr.UserDate3 = blankd;
      end else begin
        RecordCopy(oldCUr,CUr);
      end;
//from Supplier
      CUr.AccAP = VEr.AccAP;
      CUr.AccCost = VEr.AccCost;
      CUr.Bank = VEr.Bank;
      if (blank(CUr.BankAccount)) then begin
        CUr.BankAccount = VEr.BankAcc;
      end;
      if (blank(CUr.AccOperator)) then begin
        CUr.AccOperator = VEr.BankName;
      end;
      CUr.OnAccAccAP = VEr.OnAccAcc;
      CUr.MinOrdSum = blankval;
      CUr.PurchAcc = VEr.PurchAcc;
      CUr.RefStr = VEr.RefStr;
      CUr.WithPayMode = VEr.WithPayMode;
      CUr.RetainPrc = VEr.RetainPrc;
      CUr.VECreditLimit = VEr.CreditLimit;
      CUr.VEShipDeal = VEr.ShipDeal;
      CUr.VEShipMode = VEr.ShipMode;
      CUr.VEPayDeal = VEr.PayDeal;
      CUr.VEObjects = VEr.Objects;
      CUr.VEWarnText1 = VEr.WarnText1;
      CUr.VEFactoring = VEr.PRCode;
      CUr.VECurncyCode = VEr.CurncyCode;
      CUr.VECustID = VEr.CustID;
      CUr.VEVATCode = VEr.VATCode;
      CUr.VEType = 1;
      if (fullinfof) then begin
        if (RecordStore(CUr,false)==false) then begin //newcustomer
          res = false;
          TrHs = false;
        end;
      end else begin
        if (RecordUpdate(oldCUr,CUr,true)!=0) then begin//update existing customer
//          res = false;
//          TrHs = false;
        end;
      end;
      CheckFlush(cnt,20);//if 30 then I have DB with crashes
      UserTrace(VEr.Code,M4Code);                
    end;    
  end;
  DBFlush;
  DBHold;
  VEr.Code = ""; 
  ResetLoop(VEr);
  TrHs = true;
  while (LoopMain(VEr,1,TrHs)) begin
    if (TrHs) then begin
      CUr.Code = VEr.Code;
      if (ReadFirstMain(CUr,1,true)) then begin
        CopyRecordLinks(VEr,CUr);
        CheckFlush(cnt,10);
      end;
    end;
  end;
  MoveVEToCU = res;
  RETURN;
END;

updating procedure MoveVEGVroupToCustCat(record RcVc RepSpec)
BEGIN
  record VGVc VGr;
  record CCatVc CCatr;
  record CCatVc oldCCatr;
  Boolean TrHs;
  Integer cnt;

  TrHs = true;
  while (LoopMain(VGr,1,TrHs)) begin
    if (TrHs) then begin
      CCatr.Code = VGr.Code;
      if (ReadFirstMain(CCatr,1,true)) then begin
        RecordCopy(oldCCatr,CCatr);
        CCatr.AccAP = VGr.AccAP;
        CCatr.RetainAcc = VGr.RetainAcc;
        CCatr.OnAccAccAP = VGr.OnAccAcc;
        if (RecordUpdate(oldCCatr,CCatr,false)==0) then begin
        end;
      end else begin
        CCatr.Code = VGr.Code;
        CCatr.Comment = VGr.Comment;        
        CCatr.AccAP = VGr.AccAP;
        CCatr.OnAccAccAP = VGr.OnAccAcc;
        CCatr.RetainAcc = VGr.RetainAcc;               
        if (RecordStore(CCatr,false)) then begin 
        end;
      end;
      CheckFlush(cnt,20);//if 100 then it crashes
    end;
  end;
  DBFlush;
  DBHold;
  VGr.Code = ""; 
  ResetLoop(VGr);
  TrHs = true;
  while (LoopMain(VGr,1,TrHs)) begin
    if (TrHs) then begin
      CCatr.Code = VGr.Code;
      if (ReadFirstMain(CCatr,1,true)) then begin
        CopyRecordLinks(VGr,CCatr);
        CheckFlush(cnt,10);
      end;
    end;
  end;    
  RETURN;
END;

updating procedure DeleteVendors(record RcVc RepSpec)
BEGIN
  Boolean TrHs;
  record VEVc VEr;
  record CUVc CUr;
  Integer cnt;

  TrHs = true;
  while (LoopMain(VEr,1,TrHs)) begin
    if (TrHs) then begin
      CUr.Code = VEr.Code;      
      RecordDelete(VEr);
      StepBack(VEr);
      CheckFlush(cnt,20);//if 30 then I have DB with crashes
      UserTrace(VEr.Code,M4Code);                
    end;
  end;
  RETURN;
END;

global
updating procedure ConvertVEMn(record RcVc RepSpec)
BEGIN
  if (CheckIfConvertAllowed(RepSpec,0)) then begin 
    if (MoveVEToCU(RepSpec)) then begin
      DeleteVendors(RepSpec);    
//      MoveVEGVroupToCustCat(RepSpec);// not in 4.3
    end else begin
      MessageBox(12590,"");
    end;
  end;
  RETURN;
END;

global
updating procedure ConvertVERn(record RcVc RepSpec)
BEGIN
  StartReportJob(USetStr(12585));
  EndHeader;  
  if (CheckIfConvertAllowed(RepSpec,1)) then begin 
    StartFormat(15);
    OutString(0,0,USetStr(12589),false);
    EndFormat; 
  end;
  EndJob;
  RETURN;
END;