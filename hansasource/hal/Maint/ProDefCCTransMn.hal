external updating function Integer CreditCardPurchase(string,string,string,val,string,string,string,string,string,string,string,string,                                             string,string,Integer,Integer,string,                                             string,string,string,string,string,string,string,string,                                             string,string,string,string,string,string,string,string,                                             longint,string,val,val,string,                                             string,string,var string,var string,var string,var string,                                             string,string,Integer);external procedure FindCCAccountID(string,string,Integer,var record CCAccountIDVc,Integer);globalupdating procedure ProDefCCTransMn(record RcVc RepSpec)begin  record DefCCTransVc DefCCTr;  record DefCCTransStatusVc DefCCTSr;  Boolean found,testf;  Integer err;  record CYBlock CYb;  record CCAccountIDVc CCAccountCPr;   string 255 ccaddr1,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry,ccpaycompany;  string 255 ccdeladdr_first,ccdeladdr_last,ccdeladdr_company,ccdeladdr_addr1,ccdeladdr_addr2,ccdeladdr_state,ccdeladdr_postcode,ccdeladdr_country;  string 255 transid,errordesc,errorcode,AuthCode;  BlockLoad(CYb);  found = true;  DefCCTr.TransDate = RepSpec.sStartDate;  while (LoopKey("TransDate",DefCCTr,1,found)) begin    if (DateInRange(DefCCTr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin      found = false;    end;    if (found) then begin      testf = true;      if (nonblank(RepSpec.f1)) then begin        if (DefCCTr.BranchID!=RepSpec.f1) then begin testf = false; end;      end;      if (nonblank(RepSpec.AccStr)) then begin        if (DefCCTr.LocalMachineCode!=RepSpec.AccStr) then begin testf = false; end;      end;      if (nonblank(RepSpec.FirstAcc)) then begin        if (DefCCTr.DrawerCode!=RepSpec.FirstAcc) then begin testf = false; end;      end;      DefCCTSr.TransNr = DefCCTr.SerNr;      if (ReadFirstKey("TransNr",DefCCTSr,1,true)) then begin        if (DefCCTSr.Processed!=0) then begin testf = false; end;      end;      if (testf) then begin        FindCCAccountID(DefCCTr.CurncyCode,DefCCTr.LocalMachineCode,kCCAccountTypePOS,CCAccountCPr,kCardHolderPresent);        err = CreditCardPurchase(DefCCTr.TransNr,DefCCTr.PaymentReference,CYb.CompName,DefCCTr.Amount,DefCCTr.CardType,DefCCTr.CreditCard,                                 DefCCTr.ExpiryYear,DefCCTr.ExpiryMonth,DefCCTr.CVC,DefCCTr.IssueNr,DefCCTr.StartMonth,DefCCTr.StartYear,                                 DefCCTr.CurncyCode,"",0,kCardTransactionPay,"POS",                                 DefCCTr.Name,ccaddr2,ccaddr3,ccaddr4,ccaddr5,ccaddr6,cccountry,ccpaycompany,                                 ccdeladdr_first,ccdeladdr_last,ccdeladdr_company,ccdeladdr_addr1,ccdeladdr_addr2,ccdeladdr_state,ccdeladdr_postcode,ccdeladdr_country,                                 DefCCTr.TransNr,DefCCTr.PaymentReference,blankval,blankval,CCAccountCPr.Code,                                 "123","",transid,errordesc,errorcode,AuthCode,                                 "","",kCardHolderPresent);                if (err==0) then begin          RecordNew(DefCCTSr);          DefCCTSr.TransNr = DefCCTr.SerNr;          DefCCTSr.ProcTransDate = CurrentDate;          DefCCTSr.ProcTransTime = CurrentTime;          DefCCTSr.Processed = 1;          DefCCTSr.AuthorizationCode = AuthCode;          DefCCTSr.CCTransID = transid;          DefCCTSr.SerNr = NextSerNr("DefCCTransStatusVc",DefCCTSr.ProcTransDate,-1,false,"");                      RecordStore(DefCCTSr,false);        end;      end;    end;  end;  return;end;