global
updating procedure RebuildStockPlainMn(record RcVc RepSpec)
begin
  record ItemHistVc IHr;
  record ItemHistVc oldIHr;
  record INVc INr;
  Boolean foundf,testf;
  val bv;
  
  IHr.ArtCode = "";
  foundf = true;
  while (LoopKey("ActiveQty",IHr,1,foundf)) begin
    if (INr.Code!=IHr.ArtCode) then begin
      INr.Code = IHr.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
      end;
    end;
    testf = foundf;
    if ((INr.ItemType==1) or (INr.ItemType==2)) then begin
      testf = false;
    end;
    if (testf) then begin
      RecordCopy(oldIHr,IHr);
      IHr.RemQty = bv;
      if (RecordUpdate(oldIHr,IHr,false)==0) then begin
        StepBack(IHr);
      end;
    end;
  end;
  return;
end;

function val Last_LocOKNr_OnTheDay(Date transdate,string location,Integer Chronology)
begin
  val res;
  record TempStockVc TSr;
  Boolean found;
  
  if (Chronology==1) then begin
    found = true;
    TSr.Location = location;
    TSr.TransDate = transdate;
    while (LoopBackKey("TransDate",TSr,2,found)) begin
      if (TSr.Location!=location) then begin found = false; end;
      if (TSr.TransDate>transdate) then begin found = false; end;
      if (found) then begin
        if (TSr.LocOKNr>0) then begin
          found = false;
          res = TSr.LocOKNr;
        end;
      end;
    end;
    if (res<=0) then begin
      ResetLoop(TSr);
      found = true;
      TSr.Location = location;
      TSr.TransDate = transdate;
      while (LoopKey("TransDate",TSr,2,found)) begin
        if (TSr.Location!=location) then begin found = false; end;
        if (found) then begin
          if (TSr.LocOKNr>0) then begin
            found = false;
            res = TSr.LocOKNr;
          end;
        end;
      end;
    end;
  end else begin
    found = true;
    TSr.TransDate = transdate;
    while (LoopBackKey("TransDate",TSr,1,found)) begin
      if (TSr.TransDate>transdate) then begin found = false; end;
      if (found) then begin
        if (TSr.LocOKNr>0) then begin
          found = false;
          res = TSr.LocOKNr;
        end;
      end;
    end;
    if (res<=0) then begin
      ResetLoop(TSr);
      found = true;
      TSr.TransDate = transdate;
      while (LoopKey("TransDate",TSr,1,found)) begin
        if (found) then begin
          if (TSr.LocOKNr>0) then begin
            found = false;
            res = TSr.LocOKNr;
          end;
        end;
      end;
    end;
  end;
  Last_LocOKNr_OnTheDay = res;
  return;
end;

global
updating procedure FixTempLocOKNr(Integer Chronology)
begin
  record TempStockVc TSr;
  record TempStockVc oldTSr;
  record LocationVc Locr;
  Boolean found,TrHs;

  if (Chronology==1) then begin
    TrHs = true;
    while (LoopMain(Locr,1,TrHs)) begin
      if (TrHs) then begin
        ResetLoop(TSr);
        found = true;
        TSr.Location = Locr.Code;
        TSr.LocOKNr = 0;
        while (LoopKey("LocationLocOKNr",TSr,2,found)) begin
          if (TSr.Location!=Locr.Code) then begin found = false; end;
          if (TSr.LocOKNr>0) then begin found = false; end;
          if (found) then begin
            RecordCopy(oldTSr,TSr);
            TSr.LocOKNr = Last_LocOKNr_OnTheDay(TSr.TransDate,TSr.Location,Chronology);
            if (TSr.LocOKNr<=0) then begin TSr.LocOKNr = 1; end;
            RecordUpdate(oldTSr,TSr,false);
           StepBack(TSr);
          end;
        end;
      end;
    end;
  end else begin
    found = true;
    TSr.LocOKNr = -1;
    while (LoopKey("LocOKNr",TSr,1,found)) begin
      if (TSr.LocOKNr>0) then begin found = false; end;
      if (found) then begin
        RecordCopy(oldTSr,TSr);
        TSr.LocOKNr = Last_LocOKNr_OnTheDay(TSr.TransDate,"",Chronology);
        if (TSr.LocOKNr<=0) then begin TSr.LocOKNr = 1; end;
        RecordUpdate(oldTSr,TSr,false);
        StepBack(TSr);
      end;
    end;
  end;
  return;
end;
