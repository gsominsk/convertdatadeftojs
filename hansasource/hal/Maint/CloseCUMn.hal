external procedure CheckFlush(var Integer,Integer);

global
updating procedure CloseCUMn(record RcVc RepSpec)
BEGIN
  Boolean found,testf;
  record CUVc CUr;
  record CUVc oldCUr;
  string 20 frcu,tocu;
  Integer cnt;
   
  if (blank(RepSpec.f1)) and (blank(RepSpec.FirstAcc)) and (blank(RepSpec.LastAcc)) then begin
    MessageBox(0,USetStr(20555));
    goto LCloseCUMn;
  end;
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  CUr.Code = frcu;
  found = true;
  while (LoopMain(CUr,1,found)) begin 
    if (nonblank(RepSpec.f1)) then begin 
      if (CUr.Code>tocu) then begin found = false; end;
    end;
    if (found) then begin
      testf = true;
      if (CUr.blockedFlag!=0) then begin testf = false; end;
      switch (RepSpec.flags[0]) begin
        case 0:      
          if (CUr.CUType==0) then begin testf = false; end;
          if (nonblank(RepSpec.FirstAcc)) then begin
            if (CUr.CustCat!=RepSpec.FirstAcc) then begin testf = false; end;
          end;
        case 1:      
          if (CUr.VEType==0) then begin testf = false; end;
          if (nonblank(RepSpec.FirstAcc)) then begin
            if (CUr.VECat!=RepSpec.FirstAcc) then begin testf = false; end;
          end;
      end;      
      if (testf) then begin
        if (nonblank(RepSpec.LastAcc)) then begin 
          testf = true;
          if ((SetInSet(RepSpec.LastAcc,CUr.Classification))==false) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        RecordCopy(oldCUr,CUr);
        CUr.blockedFlag = 1;
        CheckFlush(cnt, 20);          
        if (RecordUpdate(oldCUr,CUr,false)) then begin
        end; 
        MaintTrace(CUr.Code); 
      end;
    end;
  end;
LCloseCUMn:;  
  RETURN;
END;