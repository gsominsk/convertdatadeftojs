external function string 255 FindINObjects(string,string);
external procedure CheckFlush(var Integer,Integer);
external procedure COVcGetCalcItemPrice(record COVc,Integer,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external procedure COSumup(var record COVc);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function Boolean PasteCust2InCO(var record COVc,Boolean,var string);

global
updating procedure UpdateCOMn(record RcVc RepSpec)
BEGIN
  record GeneralOptionBlock GenOptr;
  record COVc oldCOr;
  record COVc COr;
  row COVc COrw;
  record INVc INr;
  LongInt frco,toco;
  string 255 frcc,tocc;
  Integer rwcnt,i;
  Boolean savef;
  Boolean found,testf,calcpricef;
  val perc,t,t2,vreb,baseprice,tax2prc;
  val fr,to1,to2,br1,br2;
  string 255 tstr,salesacc,vatcode,tax2code,taxtemplatecode;
  Integer flushcnt;
  Boolean dummyf;
  Time blankt;
  
  BlockLoad(GenOptr);
  perc = RepSpec.vals0 + 100;
  perc = perc/100;
  frco = FirstInrange(RepSpec.f2,10);
  toco = LastInrange(RepSpec.f2,10);
  frcc = FirstInrange(RepSpec.f1,20);
  tocc = LastInrange(RepSpec.f1,20);
  COr.SerNr = frco;
  COr.ChildSerNr = -1;
  found = true;
  while (LoopKey("SerNr",COr,2,found)) begin
    RecordCopy(oldCOr,COr);
    if (found) then begin
      if (nonblank(RepSpec.f2)) then begin
        if (COr.SerNr>toco) then begin found = false; end;
      end;
    end;
    testf = false;
    if (found) then begin
      savef = false;
      testf = true;
      rwcnt = MatRowCnt(COr);
      if (nonblank(RepSpec.AccStr)) then begin
        testf = false;
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(COr,i,COrw);
          if (COrw.ArtCode==RepSpec.AccStr) then begin
            testf = true;
            i = rwcnt;
          end;
        end;
      end;
     if (nonblank(frcc)) then begin
        if (frcc<COr.CustCode) then begin testf = false; end;
      end;
      if (nonblank(tocc)) then begin
        if (tocc>COr.CustCode) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f3)) then begin
        if (RepSpec.f3!=COr.ContractClass) then begin testf = false; end;
      end;
      if (nonblankdate(COr.NextPriceChange)) then begin
        if (COr.NextPriceChange>CurrentDate) then begin testf = false; end;
      end;
      if (testf) then begin
        if (RepSpec.flags[3]!=0) then begin
          if (PasteCust2InCO(COr,false,tstr)) then begin end;
          savef = true;
        end;
        if (nonblank(RepSpec.LastAcc)) then begin
          COr.OurContact = RepSpec.LastAcc;
          savef = true;
        end;
        if ((RepSpec.flags[0]!=0) or (RepSpec.flags[1]!=0) or (RepSpec.flags[3]!=0)) then begin
          tstr = COr.CurncyCode;
          GetFullCurncyRate(tstr,COr.CODate,fr,to1,to2,br1,br2);
          COr.CurncyCode = tstr;
          COr.FrRate = fr;
          COr.ToRateB1 = to1;
          COr.ToRateB2 = to2;
          COr.BaseRate1 = br1;
          COr.BaseRate2 = br2;          
        end;
        if (RepSpec.flags[0]!=0) then begin
          COr.LastPriceChange = CurrentDate;
        end;
        for (i=0;i<rwcnt;i=i+1) begin
          t = blankval;
          MatRowGet(COr,i,COrw);
          if ((blank(RepSpec.AccStr)) or (RepSpec.AccStr==COrw.ArtCode)) then begin
            if (GetItemPriceDiscount3(COrw.ArtCode,COrw.Quant,INr,COr.CurncyCode,
                COr.FrRate,COr.ToRateB1,COr.ToRateB2,COr.BaseRate1,COr.BaseRate2,
                COr.LangCode,COr.CustCat,COr.PriceList,COr.RebCode,
                t,tstr,vreb,vatcode,baseprice,salesacc,
                COr.ExportFlag,calcpricef,COr.CODate,blankt,COr.CustCode,true,dummyf,COr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)) then begin
          
              if (RepSpec.flags[0]!=0) then begin
                if (nonblank(COrw.ArtCode)) then begin
                  savef = true;
                  if (RepSpec.vals0!=0) then begin
// If you want to update to new prices from priceslists, run WITHOUT the percentage first
                    COrw.Price = COrw.Price*perc;
                  end else begin
                    COrw.Price = t;
                  end;
                  CalcSum(COrw.Quant,COrw.Price,COrw.PriceFactor,COrw.vRebate,t,GenOptr.UseDiscount);
                  COrw.Sum = t;
                  if (calcpricef) then begin
                    COVcGetCalcItemPrice(COr,i,t); 
                  end;
                end;
              end;
              if (RepSpec.flags[1]!=0) then begin
                tstr = INr.Name;
                if (nonblank(COrw.ArtCode)) then begin
                  COrw.Spec = tstr;              
                  savef = true;
                end;
              end;
              if (RepSpec.flags[2]!=0) then begin
                if (nonblank(COrw.ArtCode)) then begin
                  savef = true;
                  COrw.Objects = FindINObjects(INr.Objects,INr.Group);
                  COrw.SalesAcc = salesacc;
                  COrw.VATCode = vatcode;
                end;
              end;
              MatRowPut(COr,i,COrw);
            end;
          end;
        end;
        if (nonblank(RepSpec.ObjStr)) then begin
          savef = true;
          COr.Objects = RepSpec.ObjStr;
        end;
        if (RepSpec.vals1>0) then begin
          COr.invDays = RepSpec.vals1;
          savef = true;
        end;
        if (RepSpec.ArtMode==1) then begin
          COr.invDtype = 0;
          savef = true;
        end;
        if (RepSpec.ArtMode==2) then begin
          COr.invDtype = 1;
          savef = true;
        end;
        if (savef) then begin
          COSumup(COr);
          if (RecordUpdate(oldCOr,COr,true)==0) then begin end;
          CheckFlush(flushcnt,10);
        end;
      end;
    end;
    UserTrace(COr.SerNr,M4Long);
  end;
  RETURN;
END;
