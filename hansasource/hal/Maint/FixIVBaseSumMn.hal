//external function val MulRateToBase1(var string,val,val,val,val,val,val,Integer);external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);function Integer GetParentInvType(record IVVc IVr)begin  Integer res;  row IVVc IVrw;  Integer i,rwcnt;  record IVVc ParentIVr;    rwcnt = MatRowCnt(IVr);  for (i=0;i<rwcnt;i=i+1) begin    MatRowGet(IVr,i,IVrw);    if (IVrw.stp==3) then begin      ParentIVr.SerNr = IVrw.OrdRow;      if (ReadFirstMain(ParentIVr,1,true)) then begin        res = ParentIVr.InvType;      end;    end;  end;    GetParentInvType = res;  return;end;globalupdating procedure FixIVBaseSumMn(record RcVc RepSpec)begin  Boolean found,testf;  record IVVc IVr;  record IVVc oIVr;  record BaseCurBlock BCb;    BlockLoad(BCb);  found = true;  IVr.TransDate = RepSpec.sStartDate;  while (LoopKey("TransDate",IVr,1,found)) begin    if (IVr.TransDate>RepSpec.sEndDate) then begin      found = false;    end;    if (found) then begin      testf = true;      if (testf) then begin        RecordCopy(oIVr,IVr);/*                if (blank(IVr.CurncyCode)) then begin          IVr.BaseSum4 = blankval;        end else begin          if (RepSpec.flags[1]==1) then begin            if (IVr.CurncyCode==BCb.BaseCur1) then begin              IVr.FrRate = blankval;              IVr.ToRateB1 = blankval;              IVr.ToRateB2 = blankval;            end;          end;          IVr.BaseSum4 = MulRateToBase1(IVr.CurncyCode,IVr.Sum4,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);        end;*/                if (RepSpec.flags[0]==1) then begin          if (blank(IVr.CurncyCode)) then begin            IVr.BaseSum4 = blankval;          end else begin            IVr.BaseSum4 = MulRateToBase1(IVr.CurncyCode,IVr.Sum4,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);          end;        end;        if (RepSpec.flags[1]==1) then begin          if (IVr.CurncyCode==BCb.BaseCur1) then begin            IVr.FrRate = blankval;            IVr.ToRateB1 = blankval;            IVr.ToRateB2 = blankval;          end;        end;        if (RepSpec.flags[2]==1) then begin          if (IVr.InvType==kInvoiceTypeCash or IVr.InvType==kInvoiceTypeCashInvoiceReceiptPRT) then begin            IVr.ARAcc = RepSpec.f1;          end else begin            if (GetParentInvType(IVr)==2) then begin              IVr.ARAcc = RepSpec.f1;            end else begin              IVr.ARAcc = RepSpec.f2;            end;          end;        end;        if (RecordUpdate(oIVr,IVr,false)) then begin end;              end;    end;  end;  return;end;