external updating procedure OPUpdatePlannedPayments(record OPVc);
external updating procedure IPUpdatePlannedPayments(record IPVc);
external updating procedure VICreatePlannedPayment(record VIVc);
external updating procedure POCreatePlannedPayment(record POVc);
external updating procedure IVCreatePlannedPayment(record IVVc);
external updating procedure ORCreatePlannedPayment(record ORVc);

updating procedure GenPlanPymntFromOR(record RcVc RepSpec)
begin
  record ORVc ORr;
  Boolean found,testf;
  
  found = true;
  while (LoopKey("SerNr",ORr,1,found)) begin
    if (found) then begin
      testf = true;
//      if (ORr.Invalid!=0) then begin testf = false; end;
//      if (ORr.Closed!=0) then begin testf = false; end;
      if (testf) then begin
        ORCreatePlannedPayment(ORr);
      end;
    end;
  end;
  return;
end;

updating procedure GenPlanPymntFromIV(record RcVc RepSpec)
begin
  record IVVc IVr;
  Boolean found,testf;
  
  found = true;
  while (LoopKey("SerNr",IVr,1,found)) begin
    if (found) then begin
      testf = true;
      if (IVr.Invalid!=0) then begin testf = false; end;
      if (testf) then begin
        IVCreatePlannedPayment(IVr);
      end;
    end;
  end;
  return;
end;

updating procedure GenPlanPymntFromIP(record RcVc RepSpec)
begin
  record IPVc IPr;
  Boolean found,testf;
  
  found = true;
  while (LoopKey("SerNr",IPr,1,found)) begin
    if (found) then begin
      testf = true;
      if (IPr.Invalid!=0) then begin testf = false; end;
      if (testf) then begin
        IPUpdatePlannedPayments(IPr);
      end;
    end;
  end;
  return;
end;

updating procedure GenPlanPymntFromPO(record RcVc RepSpec)
begin
  record POVc POr;
  Boolean found,testf;
  
  found = true;
  while (LoopKey("SerNr",POr,1,found)) begin
    if (found) then begin
      testf = true;
//      if (POr.Invalid!=0) then begin testf = false; end;
//      if (POr.Closed!=0) then begin testf = false; end;
      if (testf) then begin
        POCreatePlannedPayment(POr);
      end;
    end;
  end;
  return;
end;

updating procedure GenPlanPymntFromVI(record RcVc RepSpec)
begin
  record VIVc VIr;
  Boolean found,testf;
  
  found = true;
  while (LoopKey("SerNr",VIr,1,found)) begin
    if (found) then begin
      testf = true;
      if (VIr.Invalid!=0) then begin testf = false; end;
      if (testf) then begin
        VICreatePlannedPayment(VIr);
      end;
    end;
  end;
  return;
end;

updating procedure GenPlanPymntFromOP(record RcVc RepSpec)
begin
  record OPVc OPr;
  Boolean found,testf;
  
  found = true;
  while (LoopKey("SerNr",OPr,1,found)) begin
    if (found) then begin
      testf = true;
      if (OPr.Invalid!=0) then begin testf = false; end;
      if (testf) then begin
        OPUpdatePlannedPayments(OPr);
      end;
    end;
  end;
  return;
end;

global
updating procedure GenPlanPymntMn(record RcVc RepSpec)
begin
  GenPlanPymntFromOR(RepSpec);
  GenPlanPymntFromIV(RepSpec);
  GenPlanPymntFromIP(RepSpec);
  GenPlanPymntFromPO(RepSpec);
  GenPlanPymntFromVI(RepSpec);
  GenPlanPymntFromOP(RepSpec);
  return;
end;