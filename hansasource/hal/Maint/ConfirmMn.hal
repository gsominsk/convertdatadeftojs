external procedure CheckFlush(var Integer,Integer);
external function LongInt DateDiff(Date,Date);

global
updating procedure ConfirmMn(record RcVc RepSpec)
begin
  record JobVc Jobr;
  record JobVc oldJobr;
  record ReservationStatusVc ResStatr;
  Boolean TsHr,testf;
  LongInt Diff;
  Integer keys;
  String 20 mykey;
  string 60 keynam;
  Integer cnt;
  string 20 frcu,tocu;
  
  frcu = FirstInRange(RepSpec.f3,20);
  tocu = LastInRange(RepSpec.f3,20);
  cnt = 0;
  if (RepSpec.flags[2]==0) then begin
    keynam = "TransDate";
   Jobr.TransDate = RepSpec.sStartDate;
  end else begin
    keynam = "ConfDate";
   Jobr.ConfDate = RepSpec.sStartDate;
  end;
  TsHr = true;  
  if ((blank(RepSpec.f2)) and (RepSpec.flags[1]==0)) then begin
    TsHr = true;
  end;
  if (RepSpec.long1<0) then begin
    TsHr = true;
  end;
  while (LoopKey(keynam,Jobr,1,TsHr)) begin
    if (RepSpec.flags[2]==0) then begin
      If (Jobr.TransDate>RepSpec.sEndDate) then begin
        TsHr = false;
      end;
    end else begin
      If (Jobr.ConfDate>RepSpec.sEndDate) then begin
        TsHr = false;
      end;
    end;
   if (TsHr) then begin   
     testf = true;
      if ((nonblank(RepSpec.f1)) and (RepSpec.f1 <> Jobr.ResStatus)) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f3)) then begin
        if (Jobr.CUCode<frcu) or (Jobr.CUCode>tocu) then begin
          testf = false;
        end;
      end;      
      If (testf) then begin
        ResStatr.Code = Jobr.ResStatus;
        if (ReadFirstMain(ResStatr,1,true)) then begin
          if (ResStatr.StatType!=1) then begin
            testf = false;
          end;
        end;
      end;      
      If (testf) then begin
        if (nonblank(Jobr.ConfDate)) then begin
          Diff = DateDiff(CurrentDate,Jobr.ConfDate);
        end else begin
          Diff = DateDiff(CurrentDate,Jobr.TransDate);
        end;
        if (RepSpec.long1!=-1) then begin
          if (RepSpec.long1>Diff) then begin
            testf = false;
          end;
        end;
        if (testf) then begin
          if (RepSpec.flags[1]==1) then begin
            RecordDelete(Jobr);
            StepBack(Jobr);
          end else begin
            RecordCopy(oldJobr,Jobr);
            Jobr.ResStatus = RepSpec.f2;
            if (RecordUpdate(oldJobr,Jobr,false)==0) then begin 
              StepBack(Jobr);
            end;
          end;
        end;
      end;
    end;  
  end;  
  return;
end;

