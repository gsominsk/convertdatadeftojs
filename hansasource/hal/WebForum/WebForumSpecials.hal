 /* Hal file by Sven Jansson Gnesta */
external procedure ToolWebOutMailText(record MailVc,string);
external procedure ToolWebHalPBorder(string,string,string);
external procedure ToolWebHalTdP();


global
procedure ToolWebHalLink(Boolean wanchor,string url,string newargs)
/*  ---------------------------------------------------------------------
    Description:
    Forms every link from the left to right (Leaving old trash at the end of the string)
    The whole string must not be longer than 255. That's why I keep the webarguments short.
    Works fine everywhere. Exept in the mailsend function and forum for some reason.
    I use normal links there for now /Svenne.

    input args:
    url         - The location of the URL
    newargs     - Every new link-argument that is posted
    --------------------------------------------------------------------- */
begin
string 255 tstr;
  tstr = "";
  tstr = url & "?";
  if (nonblank(newargs)) then begin
    tstr = tstr & newargs & "&";
  end;
  if (nonblank(WebGetArg("sessionid"))) then begin
    tstr = tstr & "sessionid=" & WebGetArg("sessionid") & "&";
    //WebOutString(tstr);
    WebOutLink(tstr);
    tstr = "";
  end else begin
    //WebOutString(tstr);
    WebOutLink(tstr);
    tstr = "";
  end;
  if (nonblank(WebGetArg("fnc"))) then begin
    tstr = tstr & "fnc=" & WebGetArg("fnc") & "&"; // page in mail
  end;
  if (nonblank(WebGetArg("pge"))) then begin
    tstr = tstr & "pge=" & WebGetArg("pge") & "&"; // page in mail
  end;
  if (nonblank(WebGetArg("cod"))) then begin
    tstr = tstr & "cod=" & WebGetArg("cod") & "&"; // confcode or catcode
  end;
  if (nonblank(WebGetArg("fnc"))  or (nonblank(WebGetArg("pge")) or (nonblank(WebGetArg("cod"))))) then begin
    WebOutLink(tstr);
    //WebOutString(tstr);
    tstr = "";
  end;
  if (nonblank(WebGetArg("nmr"))) then begin
    tstr = tstr & "nmr=" & WebGetArg("nmr") & "&"; // middle_page
  end;
  if (nonblank(WebGetArg("mip"))) then begin
    tstr = tstr & "mip=" & WebGetArg("mip") & "&"; // middle_page
  end;
  if (nonblank(WebGetArg("dig"))) then begin
    tstr = tstr & "dig=" & WebGetArg("dig") & "&"; // display_group
  end;
  if (nonblank(WebGetArg("crm"))) then begin
    tstr = tstr & "crm=" & WebGetArg("crm") & "&"; // current_menu
  end;
  if (nonblank(WebGetArg("mip"))  or (nonblank(WebGetArg("nmr")) or (nonblank(WebGetArg("dig")) or (nonblank(WebGetArg("crm")))))) then begin
    WebOutLink(tstr);
    //WebOutString(tstr);
    tstr = "";
  end;
  if (wanchor) then begin
    tstr = tstr & "#down";
    WebOutString(tstr);
    tstr = "";
  end;
  return;
end;

global
procedure ToolWebHalPaging(record MailVc Mailr,var LongInt page,LongInt looppos)
/*  ---------------------------------------------------------------------
    Description:
    Takes care of the paging in the Document section. Reads only one mail
    at a time in the conference system. And steps forward or backward.

    input args:
    Mailr   - Record of the mail in progress.
    looppos - A counter that tells me the numbers of mails that are posted in the conferance

    in/output args:
    page - The number of the actual mail link that is clicked
    --------------------------------------------------------------------- */
begin
  integer i;
    WebOutString("<table border=""0"" cellpadding=""0"" cellspacing=""0"">" & chr(13));
    WebOutString("<tr>" & chr(13));
    if ((page > 1)) then begin
      ToolWebHalPBorder("ffffff","ffffff","ffffff");
      ToolWebHalLink(false,"WebHalMain.hal","pge=" & page-1);
      WebOutString("';"">");
      WebOutString("Previous");
      WebOutString("</td>" & chr(13));
    end else begin
      ToolWebHalTdP;
      WebOutString(">");
      WebOutString("Previous");
      WebOutString("</td>" & chr(13));
    end;
    for (i=0;i<looppos;i=i+1) begin
      if (i+1 == page) then begin
        ToolWebHalPBorder("777777","777777","777777");
      end else begin
        ToolWebHalPBorder("ffffff","dedede","ffffff");
      end;
      ToolWebHalLink(false,"WebHalMain.hal","pge=" & i+1);
      WebOutString("';"">");
      WebOutString(i+1);
      WebOutString("</td>" & chr(13));
    end;
    if ((page <> looppos)) then begin
      if ((page < looppos)) then begin
        ToolWebHalPBorder("ffffff","ffffff","ffffff");
        ToolWebHalLink(false,"WebHalMain.hal","pge=" & page+1);
        WebOutString("';"">");
        WebOutString("Next");
        WebOutString("</td>" & chr(13));
      end;
    end else begin
      ToolWebHalTdP;
      WebOutString(">");
      WebOutString("Next");
      WebOutString("</td>" & chr(13));
    end;
  WebOutString("</tr>" & chr(13));
  WebOutString("</table>" & chr(13));
  return;
end;

global
procedure ToolWebHalGetDIrName(string code_,var string name1_,var string name2_,var string name3_)
/*  ---------------------------------------------------------------------
    Description:
    Tells me the name of the parents and childrens of the clicked link in the left menu.
    Since I only send the acual display group code in the posting I keep the links short.

    input args:
    code_    - The display group code.

    in/output args:
    name1_  - gives me the text of the first link
    name2_  - gives me the text of the second link
    name3_  - gives me the text of the third link
    --------------------------------------------------------------------- */
begin
  record DIVc DIr,
              DIr2,
              DIr3;
  Boolean testf,
          foundf;
  Integer cnt;
  foundf = false;
  testf  = true;
  name1_ = "";
  name2_ = "";
  name3_ = "";
  DIr.Code = code_;
  if (ReadFirstMain(DIr,1,testf)) then begin
    name3_ = DIr.Name;
    testf = false;
    DIr2.Code = DIr.DispGroups;
    if (ReadFirstMain(DIr2,1,true)) then begin
      name2_ = DIr2.Name;
      DIr3.Code = DIr2.DispGroups;
      if (ReadFirstMain(DIr3,1,true)) then begin
        if ((DIr3.Code == "HAL") or (
             DIr3.Code == "FORUM") or (
             DIr3.Code == "REFS")) then begin
          foundf = true;
        end;
        if (!foundf) then begin
          name1_ = DIr3.Name;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure ToolWebHalWebCode2(string c, Boolean write)
/*  ---------------------------------------------------------------------
    Description:
    If the [html] tag is used to display html code this procedure will
    do so.

    input args:
    c     - Contains the actual character
    write - Tells me to write or not (The parser does the rest)
    --------------------------------------------------------------------- */
begin
  if ((nonblank(c)) and (write)) then begin
    //if (c == chr(10)) then begin
      //WebOutString("<br>");
    //end else begin
      WebOutString(c);
    //end;
  end;
  return;
end;

global
procedure ToolWebHalWebCode(string c, Boolean write,Integer mode)
/*  ---------------------------------------------------------------------
    Description:
    Takes care of the conversion of the unwanted signs such as < and >

    input args:
    c     - Contains the actual character
    write - Tells me to write or not (The parser does the rest)
    --------------------------------------------------------------------- */
begin
  switch (c) begin
    case "<":  WebOutString("&lt;");
    case ">":  WebOutString("&gt;");
    case "&":  WebOutString("&amp;");
    case """": WebOutString("&quot;");
    case "”":  WebOutString("&#8221;");
    otherwise
        //if (c == chr(10)) then begin
          //WebOutString("<br>");
         // WebOutString(chr(10));
       // end;
      if ((nonblank(c)) and (write)) then begin
        switch (mode) begin
          case 1:
            WebOutString(c);
          case 2:
            WebOutString(c);
          case 3:
          //if (c == chr(10)) then begin
          //end else begin
            if (c == chr(13)) then begin
              WebOutString("<br>");
            end else begin
              //if (c == chr(10)) then begin
              //end else begin
                WebOutString(c);
              end;
            //end;
           // if (c == chr(13)) then begin WebOutString("<br>"); end else begin WebOutString(c); end;
          case 4:// The forum - inside [hal]
          if (c == chr(13)) then begin
          end else begin
            WebOutString(c);
          end;
        end;
     end;
  end;
  return;
end;

global
procedure ToolWebHalGetConfName(string code_,var string name_)
/*  ---------------------------------------------------------------------
    Description:
    Gives me the name of the conferance, picked out by the code.
    The purpose is to keep the links shorter than 255.

    input args:
    code_ - The serial number of the conferance

    input/output args:
    name_ - The name of the conferance
    --------------------------------------------------------------------- */
begin
  record ConfVc Confr;

  Confr.SerNr = code_;
  if (ReadFirstMain(Confr,1,true)) then begin
    name_ = Confr.AddrName;
  end else begin
    name_ = "";
  end;
  return;
end;

global
procedure ToolWebHalGetConfCode(string name_,var string code_)
/*  ---------------------------------------------------------------------
    Description:
    Same as above, but the opposite way

    input args:
    name_ - The name of the conferance

    input/output args:
    code_ - The serial number of the conferance
    --------------------------------------------------------------------- */
begin
  record ConfVc Confr;

  Confr.AddrName = name_;
  if (ReadFirstKey("AddrName",Confr,1,true)) then begin
    code_ = Confr.SerNr;
  end else begin
    code_ = "";
  end;
  return;
end;

global
procedure ToolWebHalGetCatCode(string name_,var string code_)
/*  ---------------------------------------------------------------------
    Description:
    Gives me the name of the hal category code, picked out by the name.

    input args:
    name_ - The name of the category

    input/output args:
    code_ - The name of the code
    --------------------------------------------------------------------- */
begin
  record HCatVc HCCatr;

  HCCatr.Name = name_;
  if (ReadFirstKey("Name",HCCatr,1,true)) then begin
    code_ = HCCatr.Code;
  end else begin
    code_ = "";
  end;
  return;
end;

global
procedure ToolWebHalGetCatName(string code_,var string name_)
/*  ---------------------------------------------------------------------
    Description:
    Same as above, but the opposite way.

    input args:
    code_ - The code of the category

    input/output args:
    name_ - The name of the category
    --------------------------------------------------------------------- */
begin
  record HCatVc HCCatr;

  HCCatr.Code = code_;
  if (ReadFirstMain(HCCatr,1,true)) then begin
    name_ = HCCatr.Name;
  end else begin
    name_ = "";
  end;
  return;
end;

global
procedure ToolWebHalConfText(string confname,LongInt maxmail,Boolean back_button)
/*  ---------------------------------------------------------------------
    Description:
    Shows a specific conferance-text

    input args:
    confname - The name of the conferance
    input/output args:
    maxmail - The maximum numbers of mails to be shown.
    --------------------------------------------------------------------- */
begin
 record MailVc Mailr;
  LongInt loopcnt,
          looppos,
          mail_number;
  Boolean found;
  string 60 confcode,
            ckey;
  string 20 mailheader;
  Integer oldcomp;
  
  oldcomp = CurrentCompany;
  if (SetCompany(1,false)) then begin
  end;
  loopcnt = 0;
  mail_number = WebGetArg("mailnumber");
  ToolWebHalGetConfCode(confname,confcode);
  ckey = "UserTime:" & confcode;
  looppos = RecordsInIndex("MailVc",ckey)+1;
  SetLoopPosition(Mailr,looppos);
  found = true;
  while (LoopBackKey(ckey,Mailr,1,found)) begin
    if (found) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          found = false;
        end;
      end;
      if (found) then begin
        //if (Mailr.Header == mailheader) then begin
          ToolWebOutMailText(Mailr,"");
          found = false;
        //end;
      end;
    end;
  end;
  if (back_button) then begin
    WebOutString("<button OnClick=""location.href='");
    ToolWebHalLink(true,"WebHalMain.hal","updm=" & WebGetArg("updm") & "&mailnumber=" & WebGetArg("mailnumber") & "&mip=edit");
    WebOutString("'"" title=""Previous page"">");
    if (!mail_number==-1) then begin
      WebOutString("Back to your ");
    end else begin
      WebOutString("Back and write a ");
    end;
    WebOutString("message!");
    WebOutString("</button>&nbsp;&nbsp;&nbsp;&nbsp;");
    if (!mail_number==-1) then begin
      WebOutString("<button OnClick=""location.href='");
      ToolWebHalLink
      (true,"WebHalMain.hal","edtm=y&updm=" & WebGetArg("updm") & "&mailnumber=" & WebGetArg("mailnumber") & "&mip=mail");
      WebOutString("'"" title=""Edit your message""> Edit </button><br><br>");
    end;
  end;
  WebOutString("</td>" & chr(13));
  ResetCompany(oldcomp);
  return;
end;

global
function Boolean ToolWebHalLoggedIn()
begin
  Boolean res;
  //if (WebLoginStatus==3) then begin
    res = true;
  //end else begin
    //res = false;
   // ToolWebNotLoggedinMess;
  //end;
  ToolWebHalLoggedIn = res;
  return;
end;
 /* Hal file by Sven Jansson Gnesta */