 /* Hal file by Sven Jansson Gnesta */
external procedure ToolWebHalGetCatCode(string,var string);
external procedure ToolWebHalGetDIrName(string,var string,var string,var string);
external procedure ToolWebHalLink(Boolean,string,string);
external procedure ToolWebHalWebCode(string,Boolean,Integer);
external procedure ToolWebHalWebCode2(string,Boolean);
external procedure ToolWebHalPrintHeader(string);
external procedure ToolWebHalWarning();
external procedure ToolWebHalTdBackground(string,string,string,string,Boolean,Boolean);
external procedure ToolWebHalErrorMsg(integer,integer,var string,string,var Boolean,Boolean,integer,var Boolean,Boolean);
external procedure ToolWebHalAddEndTags(Integer,Integer,string);
external procedure ToolWebHalTrStart();
external procedure ToolWebHalTrEnd();
external procedure ToolWebHalTdEnd();
external procedure ToolWebHalTdTrEnd();
external procedure ToolWebHalTdTrTableEnd();
external procedure ToolWebHalTableEnd(Boolean);
external procedure ToolWebHalTdStart(string,string,string,string,string,string,string,string,string,Boolean);
external procedure ToolWebHalTableStart(string,string,string,string,string,string,string,string);
external procedure ToolWebHalImg(string,string,string,string,string,string,string);
external procedure ToolWebHalALinkStart(string,string);
external procedure ToolWebHalLink(Boolean,string,string);
external procedure ToolWebHalALinkEnd(Boolean);
external procedure ToolWebHalAEnd(Boolean);

global
procedure ToolWebHalCodeExParse(record HCVc HCr, var Boolean read)
/*  ---------------------------------------------------------------------
    Description:
    A really really simple parse variant, compared to the Forum parser Since only Admin will handle input.
    Parses the textblock in the Hal section. The purpose is to be
    able to show code in a nice way for the web and that it will be indented
    the right way. By including [xhtm] "the code" [/xhtm] it also gives opportunity
    to use proper html at the page.
    An errormessage will be shown at the webpage if the administrator uses the [xhtm]
    tag the wrong way. For example if [xhtm] does not have an ending [/xhtm]

    Note:
    It is not necessary to use [hal] "the code" [/hal] for posting of the code here like in the
    tutorial or discussion section.

    input args:
    HCr - Record of the function/procedure in progress.

    input/output args
    read - Gives me true if there is any text to parse, otherwise false and the process ends.
    --------------------------------------------------------------------- */
begin
  string 1 c;
  string 5 c2;
  string 255 errormsg;
  Boolean brack,   // [
          slash,   // /
          star,    // *
          write,   // If text
          html,    // [XHTM]
          blocs,   // / *
          bloce,   // * /
          nesthtmf,// Wrong type of use with [XHTM]
          validf,  // Is true if text is valid
          errf,    // If to many errors
          nestslaf;// Wrong type of use with block comment tag
  Longint i;
  Integer j,
          cnthtms, // Counts [XHTM]
          cnthtme, // Counts [/XHTM]
          res,     // The mod for the nesting check
          cntslas, // Counts / *
          cntslae, // Counts * /
          mode;    // The type of row-break in ToolWebHalWebCode

  c  = "";
  res     = 0;
  i       = 0;
  mode    = 3;
  cnthtms = 0; cnthtme = 0;
  cntslas = 0; cntslae = 0;
  validf   = true;
  nesthtmf = false;
  write    = false;
  errf     = false;
  while (read) begin
    c = StringFromText(HCr,i,1);
    brack = false;
    switch (c) begin
      case "": i = i - 6; read = false;
      case "[": c2 = ""; write = false; brack = true;
      case "/": c2 = ""; write = false; slash = true;
      case "*": c2 = ""; write = false; star = true;
      otherwise write = true;
    end;
    while (slash) begin
      blocs = false;
      c2 = StringFromText(HCr,i,2);
      switch (c2) begin
        case "/*": c2 = ""; mode = 4; blocs = true; write = true; cntslas = cntslas + 1;
        otherwise c2 = ""; write = true; slash = false;
      end;
      if (blocs) then begin
        WebOutString("<span class=""BlockComment"">");
        slash = false;
      end;
    end;
    while (star) begin
      bloce = false;
      c2 = StringFromText(HCr,i,2);
      switch (c2) begin
        case "*/":
          c2 = ""; i = i + 1; bloce = true; write = false; cntslae = cntslae + 1; res = mod(cntslas + cntslae,2); mode = 3;
          WebOutString("*/</span>"); star = false;
          switch (res) begin case 1: nestslaf = true; validf = false; end;
        otherwise c2 = ""; write = true; star = false;
      end;
    end;
    while (brack) begin
      html  = false;
      c2 = StringFromText(HCr,i,5);
      switch (UpperCase(c2)) begin
        case "[XHTM": i = i + 5; c2 = ""; write = false; html = true;  brack = false; cnthtms = cnthtms + 1;
        case "[/XHT": i = i + 6; c2 = ""; write = false; html = false; brack = false; cnthtme = cnthtme + 1; res = mod(cnthtms + cnthtme,2);
          switch (res) begin case 1: nesthtmf = true; validf = false; end;
        otherwise c2 = ""; write = true; brack = false;
      end;
    end;
    if (!html(and(write))) then begin
      ToolWebHalWebCode(c,write,2);
    end;
    if ((html)and(write)) then begin
      ToolWebHalWebCode2(c,write);
    end;
    write = false;
    i = i + 1;
  end;
  ToolWebHalAddEndTags(cntslas,cntslae,"</span>");
  ToolWebHalErrorMsg(cntslas,cntslae,errormsg,"",validf,true,res,nestslaf,false);     if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  ToolWebHalErrorMsg(cnthtms,cnthtme,errormsg,"CODE",validf,true,res,nesthtmf,false); if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  if (!validf) then begin
    ToolWebHalWarning;
    if (errf) then begin
      errormsg = "";
      WebOutString("<br>Oups!! There are errors in the code example on this page!<br>");
      WebOutString("Please contact the administrator!");
    end else begin
      WebOutString("<br>Oups!! There are errors in the code example on this page!<br><br>" & errormsg);
      WebOutString("<br>Please contact the administrator!");
    end;
    WebOutString("</div>");
  end;
  return;
end;

global
procedure ToolWebHalFuncDetail()
/*  ---------------------------------------------------------------------
    Description:
    Displays the detail, attributes, description and example code of the
    clicked function
    --------------------------------------------------------------------- */
begin
  record HCVc HCr;
  record HCVc HC2r;
  record RLinkVc RLr;
  row HCVc HCrw;
  Boolean show,read,found;
  LongInt rwcnt,i;
  Integer notenr;
  Integer cnt;
  string 60 command;
  string 12 code_;
  string 255 name1_,name2_,name3_;
  Integer oldcomp;
  
  oldcomp = CurrentCompany;
  if (SetCompany(1,false)) then begin
  end;
  cnt = 0;
  read = true;
  found = false;
  command = WebGetArg("fnc");
  HCr.Command = command;
  code_ = WebGetArg("dig");
  name1_ = ""; name2_ = ""; name3_ = "";
  ToolWebHalGetDIrName(code_,name1_,name2_,name3_);
  ToolWebHalPrintHeader(name3_);
  if (ReadFirstMain(HCr,1,true)) then begin
    rwcnt = MatRowCnt(HCr);
    if ((HCr.OkOnWeb == 1)) then begin
      ToolWebHalTableStart("0","","0","0","","","","");
      ToolWebHalTrStart;
      ToolWebHalTdStart("","","","","","top","white-space:nowrap","","",false);
      WebOutString("<nobr><span class=""FunctionName"">");
      if (nonblank(HCr.Usage)) then begin
        WebOutString(HCr.Usage);
      end;
      WebOutString(" <a class=""FunctionName"" title=""");
      if (nonblank(HCr.Description)) then begin
        WebOutString(HCr.Description);
      end;
      WebOutString(""">" & HCr.Command & "</a>");
      WebOutString("</span></nobr>");
      ToolWebHalTdEnd;
      ToolWebHalTdStart("","","","","","top","","","",false);
      WebOutString("<span class=""Parenthese"">(</span>");
      ToolWebHalTdEnd;
      ToolWebHalTdStart("","","","","","","","","",true);
      ToolWebHalTableStart("0","","0","0","","","","");
      ToolWebHalTrStart;
      ToolWebHalTdStart("","","","","","top","white-space:nowrap","","",false);
      WebOutString("<nobr>");
      for(i=0;i<rwcnt;i=i+1) begin
        cnt = cnt +1;
        MatRowGet(HCr,i,HCrw);
        if (nonblank(HCrw.Type)) then begin
          WebOutString("<a class=""AttributeType"" title=""");
          if (nonblank(HCrw.Usage)) then begin
            WebOutString(HCrw.Usage);
          end;
        end;
        if (nonblank(HCrw.Name)) then begin
          found = true;
        end;
        if (nonblank(HCrw.Type)) then begin
          WebOutString(""">");
          WebOutString(HCrw.Type);
          WebOutString("</a>");
        end;
        if (nonblank(HCrw.Name)) then begin
          WebOutString(" " & HCrw.Name);
        end;
        if (!i == rwcnt-1) then begin
          WebOutString("<span class=""Comma"">,</span>");
        end;
        if ((cnt > 4) and (!i == rwcnt-1)) then begin
          WebOutString("</nobr>");
          ToolWebHalTdTrEnd;
          ToolWebHalTrStart;
          ToolWebHalTdStart("","","","","","top","white-space:nowrap","","",false);
          WebOutString("<nobr>");
          cnt = 0;
        end;
      end;
      WebOutString("<span class=""Parenthese"">)</span></nobr>");
      ToolWebHalTdTrTableEnd;
      ToolWebHalTdTrTableEnd;
      if (nonblank(HCr.Description)) then begin
        ToolWebHalTableStart("0","100%","0","0","","","","");
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","2","","","top","","","",true);
        ToolWebHalTableStart("0","561","0","0","","","","");
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","","","","","","","",false);
        ToolWebHalImg("0","1","9","/halforum/images/spacer.gif","","","");
        ToolWebHalTdTrEnd;
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","","","","middle","","Header2","",false);
        WebOutString("Description:");
        ToolWebHalTdTrTableEnd;
        ToolWebHalTdTrEnd;
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","2","","","top","","","",false);
        WebOutString(HCr.Description);
        ToolWebHalTdTrEnd;
        ToolWebHalTdBackground("","tabbg","1","9",true,true);
      end;
      ToolWebHalTableEnd(true);
      if (found) then begin
        ToolWebHalTableStart("0","100%","0","0","","","","");
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","","","","","","","",false);
        ToolWebHalImg("0","1","9","/halforum/images/spacer.gif","","","");
        ToolWebHalTdTrEnd;
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","2","","","top","","Header2","",false);
        WebOutString("Parameters:");
        ToolWebHalTdTrEnd;
        ToolWebHalTrStart;
        ToolWebHalTdStart("150","","","","","top","white-space:nowrap","","",false);
      end;
      cnt = 0;
      for(i=0;i<rwcnt;i=i+1) begin
        cnt = cnt +1;
        MatRowGet(HCr,i,HCrw);
        if (nonblank(HCrw.Name)) then begin
          WebOutString("<nobr>");
          WebOutString(HCrw.Name);
        end;
        if (nonblank(HCrw.Usage)) then begin
          WebOutString("</nobr>");
          ToolWebHalTdEnd;
          ToolWebHalTdStart("","","","","","top","","","",false);
          WebOutString(HCrw.Usage);
        end else begin
          WebOutString("</nobr>");
          ToolWebHalTdEnd;
          ToolWebHalTdStart("","","","","","top","","","",false);
          WebOutString("&nbsp;");
        end;
        if ((cnt > 0) and (!i == rwcnt-1)) then begin
          ToolWebHalTdTrEnd;
          ToolWebHalTrStart;
          ToolWebHalTdStart("","","","","","","white-space:nowrap","","",false);
          cnt = 0;
        end;
      end;
      if (found) then begin
        ToolWebHalTdTrEnd;
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","","","","","","","",false);
        ToolWebHalImg("0","1","9","/halforum/images/spacer.gif","","","");
        ToolWebHalTdTrTableEnd;
      end;
      WebOutString("<pre>" & chr(13));
      ToolWebHalCodeExParse(HCr,read);
//      WebOutString(chr(13) & "</pre><br />");
      WebOutString(chr(13) & "</pre>");

      /*ToolWebHalTableStart("0","561","0","0","","","","");
      ToolWebHalTdBackground("2","tabbg","1","9",true,true);
      ToolWebHalTableEnd(false);*/

/*
-----------------------------------------------------
Here we add code for related topics
-----------------------------------------------------
*/
//      if (found) then begin
        ToolWebHalTableStart("0","100%","0","0","","","","");
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","","","","","","","",false);
        ToolWebHalImg("0","1","9","/halforum/images/spacer.gif","","","");
        ToolWebHalTdTrEnd;
        ToolWebHalTrStart;
        ToolWebHalTdStart("","","2","","","top","","Header2","",false);
        WebOutString("Related topics:");
        ToolWebHalTdTrEnd;
        notenr = 1;
        while (ReadRecordLink(HCr,notenr,HC2r,RLr)) begin
          ToolWebHalTrStart;
          ToolWebHalTdStart("150","","","","","top","white-space:nowrap","","",false);
          WebOutString("<a class=""IndexLink"" title=""" & HC2r.Command & """ href=""");
          ToolWebHalLink(false,"WebHalMain.hal","mip=deta&fnc=" & HC2r.Command & "&cod=" & WebGetArg("cod") & "&mip=" & WebGetArg("mip") & "&dig=" & code_ & "&crm=" & WebGetArg("crm"));
          WebOutString(""">" & HC2r.Command & "</a>");
          notenr = notenr + 1;
          ToolWebHalTdTrEnd;
        end;
        ToolWebHalTableEnd(true);
//      end;
    end;
  end;
  ToolWebHalALinkStart("","BackPage");
  ToolWebHalLink(false,"WebHalMain.hal","mip=halc&fnc=");
  WebOutString(""" title=""Go back"">&laquo;&laquo;</a>");
  ToolWebHalTdEnd;
  ResetCompany(oldcomp);
  return;
end;

global
procedure ToolWebHalFunc(string name_)
/*  ---------------------------------------------------------------------
    Description:
    Displays the list of the hal function headers in three columns and
    splits them in blocks of rows.

    Note:
    Set the cnt3 counter to the desired amount of rows in each block.

    input args:
    name_   - The name of the function
    --------------------------------------------------------------------- */
begin
  record HCVc HCr;
  row HCVc HCrw;
  Boolean read,
        testf,
        testf2,
        testf3,
        testf4,
        foundf;
  LongInt cnt,cnt2,cnt3,cnt4,rwcnt,i;
  string 12 code_,
            code2_;
  string 100 name1_,name2_,name3_;

  read   = true;
  testf  = true;
  foundf = false;
  testf2 = false;
  testf3 = false;
  testf4 = false;
  cnt  = 0;
  cnt2 = 0;
  cnt4 = 0;
  cnt3 = 25; // Number of rows in each block
  name1_ = "";
  name2_ = "";
  name3_ = "";
  code2_ = WebGetArg("dig");
  name1_ = ""; name2_ = ""; name3_ = "";
  ToolWebHalGetCatCode(name_,code_);
  ToolWebHalGetDIrName(code2_,name1_,name2_,name3_);
  ToolWebHalPrintHeader(name3_);
  ToolWebHalTableStart("0","561","0","0","","","","");
  ToolWebHalTrStart;
  ToolWebHalTdStart("33%","","","","left","top","","","",true);
  ResetLoop(HCr);
  HCr.CatCode  = code_;
  while (LoopKey("CatCode",HCr,1,testf)) begin
    if (testf) then begin
      cnt = cnt +1;
      cnt2 = cnt2 +1;
      cnt4 = cnt4 +1;
      if (HCr.CatCode <> code_) then begin testf = false; end;
      if ((cnt == cnt3)) then begin testf2 = true; end;
      if ((cnt2 == cnt3*2) and (cnt2 > 1)) then begin testf3 = true; end;
      if ((cnt4 == cnt3*3) and (cnt4 > 1)) then begin testf4 = true; end;
      if (HCr.OkOnWeb == 1) then begin
        if (testf) then begin
          ToolWebHalALinkStart("","FunctionOvr");
          ToolWebHalLink(false,"WebHalMain.hal","mip=deta&fnc=" & HCr.Command);
          WebOutString(""" title=""");

          // If I want to show the arguments in the title tag:
/*
          rwcnt = MatRowCnt(HCr);
          WebOutString(HCr.Command);
          WebOutString("(");
          for(i=0;i<rwcnt;i=i+1) begin
            MatRowGet(HCr,i,HCrw);
            if (nonblank(HCrw.Type)) then begin
              WebOutString(HCrw.Type);
            end;
            if (nonblank(HCrw.Name)) then begin
              WebOutString(" " & HCrw.Name);
            end;
            if (!i == rwcnt-1) then begin
              WebOutString(",");
            end;
          end;
          WebOutString(")");
*/

          if (nonblank(HCr.ReturnType)) then begin
            WebOutString(" Returns: ");
            WebOutString(HCr.ReturnType);
          end;
          if (nonblank(HCr.Description)) then begin
            WebOutString(" - " & HCr.Description);
          end;
          WebOutString(""">");
          WebOutString(HCr.Command & "</a><br>");
          if (!testf2) then begin
            WebOutNL;
          end;
        end;
      end;
      if (testf2) then begin
        cnt = 0;
        if ((!testf3) and (!testf4)) then begin
          ToolWebHalTdEnd;
          ToolWebHalTdStart("33%","","","","left","top","","","",true);
        end;
        testf2 = false;
      end;
      if ((testf3)) then begin
        cnt2 = 0;
        if (!testf4) then begin
          ToolWebHalTdEnd;
          ToolWebHalTdStart("33%","","","","left","top","","","",true);
        end;
        testf3 = false;
     end;
      if (testf4) then begin
        cnt4 = 0;
        ToolWebHalTdTrEnd;
        ToolWebHalTdBackground("6","split","1","25",true,true);
        ToolWebHalTrStart;
        ToolWebHalTdStart("33%","","","","left","top","","","",true);
        testf4 = false;
      end;
    end;
  end;
  ToolWebHalImg("0","1","1","/halforum/images/spacer.gif","","","");
  ToolWebHalTdTrTableEnd;
  ToolWebHalTdEnd;
  return;
end;
 /* Hal file by Sven Jansson Gnesta */