 /* Hal file by Sven Jansson Gnesta */
external procedure ToolWebOutMailText(record MailVc,string);
external procedure WebHalHiddenField(string,string);
external procedure ToolWebHalWebCode(string,Boolean,Integer);
external procedure ToolWebHalWebCode2(string,Boolean);
external procedure ToolWebHalGetConfName(string,var string);
external procedure ToolWebHalGetConfCode(string,var string);
external procedure ToolWebHalWarning();
external procedure ToolWebHalLink(Boolean,string,string);
external function Boolean ToolWebHalLoggedIn();
external procedure ToolWebHalGetDIrName(string,var string,var string,var string);
external procedure WebHalPostingTop();
external procedure WebHalPostingMiddle();
external procedure WebHalPostingBottom();
external procedure WebHalInpt(string,string,string,Boolean);
external procedure ToolWebHalPrintHeader(string);
external procedure ToolWebHalTrStart();
external procedure ToolWebHalTrEnd();
external procedure ToolWebHalTdEnd();
external procedure ToolWebHalTdTrEnd();
external procedure ToolWebHalTdTrTableEnd();
external procedure ToolWebHalTableEnd(Boolean);
external procedure ToolWebHalTdStart(string,string,string,string,string,string,string,string,string,Boolean);
external procedure ToolWebHalTableStart(string,string,string,string,string,string,string,string);
external procedure ToolWebHalImg(string,string,string,string,string,string,string);
external procedure ToolWebHalALinkStart(string,string);
external procedure ToolWebHalLink(Boolean,string,string);
external procedure ToolWebHalALinkEnd(Boolean);
external procedure ToolWebHalAEnd(Boolean);

procedure WebHalForumHeaderParse(record MailVc Mailr_header,var Boolean read,var Boolean validf,Boolean show_dots)
/*  ---------------------------------------------------------------------
    Description:
    This procedure parses the header in the forum, just to make sure that
    not the [hal] tag is used here, and no html is allowed.

    input args:
    Mailr   - The actual record to be parsed

    input/output args:
    read - This one is true as long as there is text to parse. If the
           record is empty the record meets null and the parser exits.
    validf - Setting this to true, just to make the save button visible.
    show_dots - if the first step, show only a part of the header, followed by some dots...if it is too long
    --------------------------------------------------------------------- */
begin
  string 1 c;
  integer i;
  c = "";
  validf = true;
   while (read) begin
    c = StringFromText(Mailr_header,i,1);
    switch (c) begin
      case "":  read = false;
      case "<":  WebOutString("&lt;");
      case ">":  WebOutString("&gt;");
      case "&":  WebOutString("&amp;");
      case """": WebOutString("&quot;");
      case "”":  WebOutString("&#8221;");
      otherwise  if (nonblank(c)) then begin  WebOutString(c); end;
    end;
    i = i + 1;
    if (show_dots) then begin
      if (i > 50) then begin
        WebOutString(" ...");
        c = "";
        read = false;
     end;
   end;
  end;
  return;
end;

global
procedure ToolWebHalAddEndTags(Integer cnts,Integer cnte,string tstr)
/*  ---------------------------------------------------------------------
    Description:
    This procedure adds the endtags if there are to many start tags after
    WebHalForumParse has run.

    input args:
    cnts - the counter for start tags
    cnte - the counter for end tags
    tstr - the endtag
    --------------------------------------------------------------------- */
begin
Integer i;
  if (cnts > 0) then begin
    if (cnts != cnte) then begin
      for (i=0;i<cnts-cnte;i=i+1) begin
        WebOutString(tstr);
      end;
    end;
  end;
return;
end;

global
procedure ToolWebHalErrorMsg(integer cnt1,integer cnt2,var string errormsg,string tstr,var Boolean validf,Boolean ifcomment,integer res,var Boolean nestf,Boolean if_pre)
/*  ---------------------------------------------------------------------
    Description:
    Prints the errormessages if the [Code] tags are used the wrong way. For
    example if they are missing end or starttags, or if they start with a
    end tag and end with a starttag.

    input args:
    cnt1 - Counter for the start tags
    cnt2 - Counter for the end tags
    errormsg - The errormessage
    tstr - The name of the tag
    ifcomment - If it is a block comment instead of [Code]
    res - Not used at the moment
    if_pre - If End tag before start tag and the tag missing is a </pre>, add a </pre> else a </span>

    input/output args:
    validf - The flag that starts the message
    nestf - If this is true, the tags are in a mixed order ([/Code] [Code]) or start tag missing
    --------------------------------------------------------------------- */
begin
  if (!ifcomment) then begin
    if (cnt1 != cnt2) then begin
      validf = false;
      if (cnt1 > cnt2) then begin
        errormsg = errormsg & "[" & tstr & "] is missing the [/" & tstr & "]<br>";
      end else begin
        errormsg = errormsg & "[/" & tstr & "] appears, but no starting [" & tstr & "]<br>";
      end;
    end;
  end else begin
    if (cnt1 != cnt2) then begin
      validf = false;
      if (cnt1 > cnt2) then begin
        errormsg = errormsg & "/* is missing the */<br>";
      end else begin
        errormsg = errormsg & "*/ appears, but no starting /*<br>";
      end;
    end;
  end;
  if (nestf) then begin
    if (cnt1 == cnt2) then begin // If the counters match (End tag before start tag)
      if (if_pre) then begin
        ToolWebHalAddEndTags(cnt1+1,cnt2,"</pre>");
      end else begin
        ToolWebHalAddEndTags(cnt1+1,cnt2,"</span>");
      end;
    end;
    errormsg = errormsg & "End tag before start tag!<br>";
    nestf = false;
  end;
  return;
end;

global
procedure ToolWebHalIfTrueWrite(Boolean tflag,string tstr,var Boolean brack)
/*  ---------------------------------------------------------------------
    Description:
    This procedure writes the result of the desired tags after the parse procedure below.

    input args:
    tflag - The flag for the actual tag
    tstr - the tag

    input/output args:
    brack - This goes false, and the switch is broken
    --------------------------------------------------------------------- */
begin
  if (tflag) then begin
    WebOutString(tstr);
    brack = false;
  end;
  return;
end;

procedure WebHalForumParse(record MailVc Mailr,var Boolean read,var Boolean validf)
/*  ---------------------------------------------------------------------
    Description:
    This procedure reads one character at a time from the input record and determs what it is.
    if it is a [, / or * it starts a separate thread.
    The content is then compared, and if there is a match, it will send some
    additional content, depending on input.

    input args:
    Mailr   - The actual record to be parsed

    input/output args:
    read - This one is true as long as there is text to parse. If the
           record is empty the record meets null and the parser exits.
    validf - This flag is true as long as the [code] tags are used the right way in the record.
             For example if they start with endtags or if some tag is missing it will return false.

    Code description:
    slash   - If the input string c is a / I search for block comments start tags
    blocs   - If there was a * after / I print the start for the blockcomment
    star    - If there was * and a / I print the end for it
    brack   - If the input string c is a [ I search for [CODE] and [/CODE] tags
    --------------------------------------------------------------------- */
begin
  string 1 c;
  string 5 c2;
  string 255 errormsg;
  Longint i;
  Boolean brack, // [
          slash, // /
          star,  // *
          write,
          html,  // [XHTM] (this gives full html control) Since [XHTM] doesn't add anything extra on the web, no boolean for the endtag is necessary
          lbreak,// [<BR>] Temporary solution of one of the problems that appears when WebHalTempToMail runs. See further comments in that procedure
          hals,  // [HAL]
          hale,  // [/HAL
          bols,  // [BOLD]
          bole,  // [/BOLD]
          rede,  // [RED]
          reds,  // [/RED]
          blus,  // [BLUE]
          blue,  // [/BLUE]
          blocs, // / *
          bloce, // * /
          nesthalf, // Check for nesting errors when [HAL]
          nestredf, // Check for nesting errors when [RED]
          nestbluf, // Check for nesting errors when [BLUE]
          nestbolf, // Check for nesting errors when [BOLD]
          nestslaf, // Check for nesting errors when blockcomment
          nesthtmf, // Check for nesting errors when [XHTM]
          errf;     // If the string errormsg is too large
  Integer res,      // The mod for the nesting check
          j,
          mode,    // The type of row-break in ToolWebHalWebCode
          cnthals, // Counts [HAL]
          cnthale, // Counts [/HAL]
          cntbols, // Counts [BOLD]
          cntbole, // Counts [/BOLD]
          cntreds, // Counts [RED]
          cntrede, // Counts [/RED]
          cntblus, // Counts [BLUE]
          cntblue, // Counts [/BLUE]
          cnthtme, // Counts [XHTM]
          cnthtms, // Counts [/XHTM]
          cntslas, // Counts / *
          cntslae; // Counts * /

  cnthals = 0; cnthale = 0; cntbols = 0; cntbole = 0; cntreds = 0; cntrede = 0;
  cntblue = 0; cntblus = 0; cntslas = 0; cntslae = 0; cnthtms = 0; cnthtme = 0;
  i = 0; mode = 3;
  c = ""; errormsg = "";
  validf = true;
  write = false;
  nesthalf = false;
  nestbolf = false;
  nestredf = false;
  nestbluf = false;
  nesthtmf = false;
  errf = false;
  while (read) begin
    c = StringFromText(Mailr,i,1);
    brack = false;
    switch (c) begin
      case "": i = i - 6; read = false;
      case "[": c2 = ""; write = false; brack = true;
      case "/": c2 = ""; write = false; slash = true;
      case "*": c2 = ""; write = false; star = true;
      otherwise write = true;
    end;
    while (slash) begin
      blocs = false;
      c2 = StringFromText(Mailr,i,2);
      switch (c2) begin
        case "/*": c2 = ""; mode = 4; blocs = true; write = true; cntslas = cntslas + 1;
        otherwise c2 = ""; ; write = true; slash = false;
      end;
      if (blocs) then begin
        WebOutString("<span class=""BlockComment"">");
        c2 = "";
        slash = false;
      end;
    end; // end slash
    while (star) begin
      bloce = false;
      c2 = StringFromText(Mailr,i,2);
      switch (c2) begin
        case "*/":
          c2 = ""; i = i + 1; bloce = true; write = false; cntslae = cntslae + 1; res = mod(cntslas + cntslae,2); mode = 3;
          WebOutString("*/</span>"); star = false;
          switch (res) begin case 1: nestslaf = true; validf = false; end;
        otherwise c2 = ""; write = true; star = false;
      end;
    end; // end star
    while (brack) begin
      lbreak= false;
      html  = false;
      hals  = false;
      hale  = false;
      blus  = false;
      blue  = false;
      bols  = false;
      bole  = false;
      rede  = false;
      reds  = false;
      c2 = StringFromText(Mailr,i,5);
      switch (UpperCase(c2)) begin
        case "[<BR>": i = i + 5; c2 = ""; lbreak = true; write = false;
        case "[HAL]": i = i + 4; c2 = ""; hals = true; write = false; cnthals = cnthals + 1; mode = 4;
        case "[/HAL": i = i + 5; c2 = ""; hale = true; write = false; cnthale = cnthale + 1; res = mod(cnthals + cnthale,2); mode = 3;
          switch (res) begin case 1: nesthalf = true; validf = false; end;
        case "[BOLD": i = i + 5; c2 = ""; bols = true; write = false; cntbols = cntbols + 1;
        case "[/BOL": i = i + 6; c2 = ""; bole = true; write = false; cntbole = cntbole + 1; res = mod(cntbols + cntbole,2);
          switch (res) begin case 1: nestbolf = true; validf = false; end;
        case "[RED]": i = i + 4; c2 = ""; reds = true; write = false; cntreds = cntreds + 1;
        case "[/RED": i = i + 5; c2 = ""; rede = true; write = false; cntrede = cntrede + 1; res = mod(cntreds + cntrede,2);
          switch (res) begin case 1: nestredf = true; validf = false; end;
        case "[BLUE": i = i + 5; c2 = ""; blus = true; write = false; cntblus = cntblus + 1;
        case "[/BLU": i = i + 6; c2 = ""; blue = true; write = false; cntblue = cntblue + 1; res = mod(cntblus + cntblue,2);
          switch (res) begin case 1: nestbluf = true; validf = false; end;
        case "[XHTM": i = i + 5; c2 = ""; html = true; write = false; cnthtms = cnthtms + 1; brack = false;
        case "[/XHT": i = i + 6; c2 = ""; write = false; html = false; cnthtme = cnthtme + 1; res = mod(cnthtms + cnthtme,2);brack = false;
          switch (res) begin case 1: nesthtmf = true; validf = false; end;
        otherwise c2 = ""; write = true; mode = 3; brack = false;
      end;
      ToolWebHalIfTrueWrite(lbreak,"<br />",brack);
      ToolWebHalIfTrueWrite(hals,"<pre>" & chr(13) & "<span class=""CodeInfoText"">[Hal]</span>" & chr(13),brack);
      ToolWebHalIfTrueWrite(hale,chr(13) & "<span class=""CodeInfoText"">[/Hal]</span>" & chr(13) & "</pre>" & chr(13) & "" & chr(13),brack);
      ToolWebHalIfTrueWrite(bols,"<span style=""font-weight:bold"">",brack);
      ToolWebHalIfTrueWrite(bole,"</span>",brack);
      ToolWebHalIfTrueWrite(blus,"<span style=""color:blue"">",brack);
      ToolWebHalIfTrueWrite(blue,"</span>",brack);
      ToolWebHalIfTrueWrite(reds,"<span style=""color:red"">",brack);
      ToolWebHalIfTrueWrite(rede,"</span>",brack);
    end; // end brack
    if (!html(and(write))and(!hals)and(c == chr(13))or(!html(and(write))and(!hals)and(c == chr(10)))) then begin
    //if (!html(and(write))and(c == chr(13))) then begin
    end else begin
      if (!html(and(write))) then begin
        ToolWebHalWebCode(c,write,mode);
      end;
    end;
    if (html) then begin
      ToolWebHalWebCode2(c,write);
    end;
    write = false;
    i = i + 1;
  end; // end read
  ToolWebHalAddEndTags(cnthals,cnthale,"</pre><br>");// Add end tags if too many start tags
  ToolWebHalAddEndTags(cntbols,cntbole,"</span>");
  ToolWebHalAddEndTags(cntreds,cntrede,"</span>");
  ToolWebHalAddEndTags(cntblus,cntblue,"</span>");
  ToolWebHalAddEndTags(cntslas,cntslae,"</span>");
  ToolWebHalErrorMsg(cntslas,cntslae,errormsg,"",validf,true,res,nestslaf,false);      if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  ToolWebHalErrorMsg(cntbols,cntbole,errormsg,"BOLD",validf,false,res,nestbolf,false); if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  ToolWebHalErrorMsg(cntreds,cntrede,errormsg,"RED",validf,false,res,nestredf,false);  if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  ToolWebHalErrorMsg(cntblus,cntblue,errormsg,"BLUE",validf,false,res,nestbluf,false); if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  ToolWebHalErrorMsg(cnthals,cnthale,errormsg,"HAL",validf,false,res,nesthalf,true);   if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  ToolWebHalErrorMsg(cnthtms,cnthtme,errormsg,"XHTM",validf,false,res,nesthtmf,false); if (Len(errormsg) > (220)) then begin errormsg = ""; validf = false; errf = true; end;
  if (!validf) then begin
    ToolWebHalWarning;
    if (errf) then begin
      WebOutString("<br>Terminating validation due too many errors!<br>");
    end else begin
      WebOutString("<br>The following errors appeared in your message:<br><br>");
      WebOutString(errormsg);
    end;
  end;
  return;
end;

global
procedure WebHalTheThread(record MailVc Mailr)
/*  ---------------------------------------------------------------------
    Description:
    This procedure prints the modification date and the header of the actual forum thread
    and displays it with a clickable link.

    input args:
    Mailr - The actual mail record
    --------------------------------------------------------------------- */
begin
  record MailVc Mailr_header;
  Boolean read,validf;

  read = true;
  WebOutString(chr(13) & "<span Class=""TransDate"">");
  WebOutString(Mailr.TransDate);
  WebOutString("</span> ");
  ToolWebHalALinkStart("","MessageLink");
  ToolWebHalLink(false,"WebHalMain.hal","mip=mail&nmr=" & Mailr.SerNr & "&updm=" & Mailr.SerNr);
  WebOutString(""">");
  RecordNew(Mailr_header);
  AddToText(Mailr.Header,Mailr_header);
  WebHalForumHeaderParse(Mailr_header,read,validf,true);
  WebOutString("</a><br>");
  return;
end;

global
procedure WebHalThreads(string confname,LongInt maxmail)
/*  ---------------------------------------------------------------------
    Description:
    This procedure loops over the mails in the actual conference MailVc record.
    The ckey adds the UserTime used to sort the mails.

    input args:
    confname - The name of the conferance
    maxmail - The maximum mails to be displayed
    --------------------------------------------------------------------- */
begin
  record MailVc Mailr;
  string 60 ckey;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  string 60 confcode;

  loopcnt = 0;
  ToolWebHalGetConfCode(confname,confcode);
  ckey = "UserTime:" & confcode;
  looppos = RecordsInIndex("MailVc",ckey)+1;
  SetLoopPosition(Mailr,looppos);
  found = true;
  while (LoopBackKey(ckey,Mailr,1,found)) begin
    if (found) then begin
      loopcnt = loopcnt + 1;
      if (maxmail>-1) then begin
        if (loopcnt>maxmail) then begin
          found = false;
        end;
      end;
      if (found) then begin
        WebHalTheThread(Mailr);
      end;
    end;
  end;
  return;
end;

global
procedure WebHalTempToMail(Record MailVc TmpMailr,var record MailVc Mailr,boolean add_divider,boolean is_newmail)
/*  ---------------------------------------------------------------------
    Description:
    Takes the content in one mail and adds it with a divider to another.
    If it is a new mail it does not add any divider.

    input args:
    TmpMailr - The mail to add
    add_divider - if there should be a divider
    is_newmail - If it is a new mail

    input/output args
    Mailr - The original mail
    --------------------------------------------------------------------- */
begin
  String 255 tstr;
  Integer i,rwcnt;
  Boolean foundf;

  if(add_divider) then begin
    //AddToText(chr(13) & "[xhtm]<hr style=""width:561px;height:1px;background-color:#dedede;color:#dedede;"" color=""#dedede"" align=""left"" noshade size=""1"">[/xhtm]",Mailr);
    
    AddToText(chr(13) & "[xhtm]<div class=""Line"" align=""left""></div>[/xhtm]",Mailr);
    
    
    AddToText("Posted[xhtm]&nbsp;&nbsp;[/xhtm]",Mailr);
    AddToText(TmpMailr.TransDate,Mailr);
    AddToText("[xhtm]&nbsp;[/xhtm]",Mailr);
    AddToText(TmpMailr.TransTime,Mailr);
    AddToText("[xhtm]<br>[/xhtm]",Mailr);
  end;
  if(is_newmail) then begin
    AddToText("Posted[xhtm]&nbsp;&nbsp;[/xhtm]",Mailr);
    AddToText(TmpMailr.TransDate,Mailr);
    AddToText("[xhtm]&nbsp;[/xhtm]",Mailr);
    AddToText(TmpMailr.TransTime,Mailr);
    AddToText("[xhtm]<br>[/xhtm]",Mailr);
  end;
  rwcnt = LineTextCnt(TmpMailr);
  tstr = "";
  for (i=0;i<rwcnt;i=i+1) begin
    tstr = LineTextGet(TmpMailr,i);
    if ((Left(tstr,1)) == chr(13)) then begin
      foundf = true;
    end else begin
      foundf = false;
    end;
    if (!foundf) then begin
      AddToText(chr(13) & tstr & chr(10),Mailr);
    end else begin
      AddToText(tstr & chr(10),Mailr);
    end;
  end;
  return;
end;

global
updating procedure ToolWebHalForumPost()
/*  ---------------------------------------------------------------------
    Description:
    Takes care of the posting in the forum. There are several ways.
    --------------------------------------------------------------------- */
begin
  record MailVc Mailr_temp;       // The "TEMP" mail
  record MailVc Mailr_update;     // The "updater-mail"
  record MailVc Mailr_sum;        // The merged mail
  record MailVc Mailr_header_upd; // The header in the updated mail
  record MailVc Mailr_header_tmp; // The header in the "TEMP" mail
  record MailVc Mailr_header_add; // The header in the "add stage"
  row MailVc Mailrw;              // To store the mail in row format
  LongInt temp_mail,              // Serialnumber of the tempmail in progress
          maxmail;
  string 30 update_mail;          // Serialnumber of the updating mail in progress
  string 60 confcode,             // The conferance code of the "TEMP" mail
            code_,                // The conferance code of the actual mail in progress
            code2_,               // The displaygroup code of the position
            timestr;
  string 100 name1_,
             name2_,
             name3_;
  string 255 name_;               // The conferance name of the actual mail in progress
  Boolean temp_mailf,             // Is true if I am in the "temp stage" and validating
          read,                   // Is true since I have text to send through the parser in the "first step"
          read2,                  // Is true since I have text to send through the parser in the "second step"
          read3,                  // Is true since I have text to send through the header parser
          validf,                 // Is true if the mail is validated OK
          validf_header,          // Is true if the header of the mail is validated OK
          update_mailf,           // Is true if I am in the "update stage" and validating
          storef,                 // Is true if the mail should be stored (validated OK)
          edit_moref,             // Is true if I am in the "edit more stage"
          res;                    // The store mail flag
  Integer oldcomp;
  
  oldcomp = CurrentCompany;
  if (SetCompany(1,false)) then begin
  end;
  timestr = CurrentTime;
  timestr = mid(timestr,4,1) & right(timestr,2);
  name1_ = ""; name2_ = ""; name3_ = "";
  maxmail = 100000;
  read  = true;
  read2 = true;
  read3 = true;
  update_mail = WebGetArg("updm");
  temp_mail = WebGetArg("mailnumber");
  ToolWebHalGetConfCode("TEMP",confcode);
  code_ = WebGetArg("cod");
  code2_ = WebGetArg("dig");
  ToolWebHalGetDIrName(code2_,name1_,name2_,name3_);
  if(WebGetArg("edtm") == "y") then begin
    edit_moref = true;
  end else begin
    edit_moref =false;
  end;
  if(WebGetArg("mip") == "stor") then begin
    storef = true;
  end else begin
    storef = false;
  end;
  //if (ToolWebHalLoggedIn()) then begin
    if (!storef) then begin
     ToolWebHalPrintHeader(name3_);
      WebOutString("<div id=""lbottom"">");
    end;
    RecordNew(Mailr_temp);
    Mailr_temp.SerNr = temp_mail;
    if (ReadFirstMain(Mailr_temp,1,true)==false) then begin
      temp_mailf = false;
      Mailr_temp.TransDate = CurrentDate;
      Mailr_temp.Header = "";
    end else begin                                          // set temp_mailf to true if validating
      temp_mailf = true;
      SetReadFlag(Mailr_temp,0,"");
    end;
    RecordNew(Mailr_update);
    if (nonblank(update_mail)) then begin
      Mailr_update.SerNr = update_mail;
    end else begin
      update_mail = "-1";
    end;
    if (ReadFirstMain(Mailr_update,1,true)) then begin      // set update_mailf to true if updating
      update_mailf = true;
    end else begin
      update_mailf = false;
    end;
    // Step 2
    if (temp_mailf and (!edit_moref)) then begin            // Validating and adding text to existing thread
      WebOutNL;
      RecordNew(Mailr_sum);
      if(update_mailf) then begin                           // Add the two mails toghether
        WebHalTempToMail(Mailr_update,Mailr_sum,false,false);
        WebHalTempToMail(Mailr_temp,Mailr_sum,true,false);
      end else begin
        WebHalTempToMail(Mailr_temp,Mailr_sum,false,true);
      end;
      if(storef) then begin
        if(update_mailf) then begin
          Mailr_sum.SerNr = Mailr_update.SerNr;
          MatRowGet(Mailr_update,0,Mailrw);
          MatRowPut(Mailr_sum,0,Mailrw);
          MatRowGet(Mailr_update,1,Mailrw);
          MatRowPut(Mailr_sum,1,Mailrw);
          Mailr_sum.SendFlag = 1;
          Mailr_sum.TransDate = CurrentDate;
          Mailr_sum.TransTime = CurrentTime;
          Mailr_sum.Header = Mailr_update.Header;
          res = RecordStore(Mailr_sum,true);              // Store the updated mail
        end else begin
          Mailr_sum.SerNr = NextSerNr("MailVc",CurrentDate,-1,false,"");
          Mailr_sum.Header = Mailr_temp.Header;
          Mailrw.RowTyp = 1;         // From
          Mailrw.AddrCode = "Sven Jansson";
          MatRowPut(Mailr_sum,0,Mailrw);
          Mailrw.RowTyp = 0;         // To
          ToolWebHalGetConfName(code_,name_);
          Mailrw.AddrCode = name_;
          MatRowPut(Mailr_sum,1,Mailrw);
          Mailr_sum.SendFlag = 1;
          Mailr_sum.TransDate = CurrentDate;
          Mailr_sum.TransTime = CurrentTime;
          res = RecordStore(Mailr_sum,true);             // Store the new mail
        end;
      end;
      if (!storef) then begin
        WebOutString("<span class=""MessageSubject"">");
        if(update_mailf) then begin                      // Print Header
          RecordNew(Mailr_header_upd);
          AddToText(Mailr_update.Header,Mailr_header_upd);
          WebHalForumHeaderParse(Mailr_header_upd,read3,validf_header,false); WebOutString("<br>");
        end else begin
          RecordNew(Mailr_header_tmp);
          AddToText(Mailr_temp.Header,Mailr_header_tmp);
          WebHalForumHeaderParse(Mailr_header_tmp,read3,validf_header,false); WebOutString("<br>");
        end;
        WebOutString("</span>");
        WebHalForumParse(Mailr_sum,read2,validf);
        WebOutNL;
        WebOutNL;
        WebOutString("<br>");
        WebOutString("<br>" & chr(13));
      end;
      if(!storef) then begin
        if ((!validf) or (!validf_header)) then begin
        end else begin
          ToolWebHalTableStart("0","561","0","0","","","","");
          ToolWebHalTrStart;
          ToolWebHalTdStart("","","","","","","","","",false);
          WebOutString("<span style=""color:red"">The message is valid! Please press the save button!</span><br><br><button OnClick=""location.href='");
          WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&mip=stes&updm=" & update_mail & "&mailnumber=" & temp_mail);
          WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
          WebOutString("&tms=" & timestr);
          WebOutString("#down");
          WebOutString("'"" title=""Save your message""> Save </button>" & chr(13));
          WebOutString("&nbsp;&nbsp;&nbsp;&nbsp;");
        end;
      end else begin
        WebHalPostingTop;
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&mip=mail&nmr=" & Mailr_sum.SerNr & "&updm=" & Mailr_sum.SerNr);
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString("#down");
        WebHalPostingMiddle;
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&mip=mail&nmr=" & Mailr_sum.SerNr & "&updm=" & Mailr_sum.SerNr);
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString("#down");
        WebHalPostingBottom;
      end;
      if (!storef) then begin
        if (!validf) then begin
          ToolWebHalTableStart("0","561","0","0","","","","");
          ToolWebHalTrStart;
          ToolWebHalTdStart("","","","","","","","","",false);
        end;
        WebOutString("<a class=""erroranchor"" name=""down"" id=""down""></a>");
        WebOutString("<button OnClick=""location.href='");
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&edtm=y&mip=mail&updm=" & update_mail & "&mailnumber=" & WebGetArg("mailnumber"));
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString("#down");
        WebOutString("'"" title=""Edit your message""> Edit </button>&nbsp;&nbsp;&nbsp;&nbsp;" & chr(13));
        WebOutString("<button OnClick=""location.href='");
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&updm=" & WebGetArg("updm") & "&mailnumber=" & WebGetArg("mailnumber") & "&mip=cnfo");
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString("#down");
        WebOutString("'"" title=""How to use code tags""> Help </button>");
        ToolWebHalTdTrTableEnd;
        if (!validf) then begin
          WebOutString("</div>");
        end;
        WebOutString("</div>");
        ToolWebHalTdEnd;
      end;
    end else begin
      // Step 1
      if (update_mailf == false) then begin // This is a new post
        ToolWebHalTableStart("0","561","0","0","","","","");
            ToolWebHalTrStart;
        ToolWebHalTdStart("","","","","","","","","",false);
        WebOutString("New message");
        ToolWebHalTdTrTableEnd;
      end else begin                        // Add to thread
        WebOutString("<span class=""MessageSubject"">" & chr(13));
        RecordNew(Mailr_header_add);
        AddToText(Mailr_update.Header,Mailr_header_add);
        WebHalForumHeaderParse(Mailr_header_add,read3,validf_header,false); WebOutString("<br>");
        WebOutString("</span>" & chr(13));
        WebHalForumParse(Mailr_update,read,validf);
      end;
      ToolWebHalTableStart("0","100%","0","0","","","","");
      ToolWebHalTrStart;
      ToolWebHalTdStart("","","","","","","","","",true);
      WebOutString("<script language=""Javascript"" type=""text/Javascript"">" & chr(13));
      WebOutString("<!--" & chr(13));
      WebOutString("function checkForm(){" & chr(13));
      if(!update_mailf) then begin
        WebOutString("  if (document.HansaForm.subject_field.value == """"){    " & chr(13));
        WebOutString("    alert (""");
        WebOutString("Please type a subject for your message!");
        WebOutString(""")" & chr(13));
        WebOutString("    document.HansaForm.subject_field.focus();" & chr(13));
        WebOutString("    return false;" & chr(13));
        WebOutString("  }" & chr(13));
        WebOutString("  if (document.HansaForm.subject_field.value.length > 90){    " & chr(13));
        WebOutString("    alert (""");
        WebOutString("Max 90 characters in the subjectfield! \\nRemove 1 character");
        WebOutString(""")" & chr(13));
        WebOutString("    document.HansaForm.subject_field.focus();" & chr(13));
        WebOutString("    return false;" & chr(13));
        WebOutString("  }" & chr(13));
      end;
      WebOutString("  if (document.HansaForm.mail_body.value == """"){    " & chr(13));
      WebOutString("    alert (""");
      WebOutString("Please type your message!");
      WebOutString(""")" & chr(13));
      WebOutString("    document.HansaForm.mail_body.focus();" & chr(13));
      WebOutString("    return false;" & chr(13));
      WebOutString("  }" & chr(13));
      WebOutString("}" & chr(13));
      WebOutString("function inpt(tstr) {" & chr(13));
      WebOutString("  document.HansaForm.mail_body.value += """" +tstr+ """";" & chr(13));
      WebOutString("  document.HansaForm.mail_body.focus();" & chr(13));
      WebOutString("}" & chr(13));
      WebOutString("function inpt2(tstr) {" & chr(13));
      WebOutString("  document.HansaForm.mail_body.value += ""\\n"" +tstr+ "" "";" & chr(13));
      WebOutString("  document.HansaForm.mail_body.focus();" & chr(13));
      WebOutString("}" & chr(13));
      WebOutString("          // -->" & chr(13));
      WebOutString("</script>" & chr(13));
      WebOutString("<form name=""HansaForm"" method=""POST"" onSubmit=""return checkForm()"" action=""");
      WebOutLink("/WebMailSend.hal?sessionid=" & WebGetArg("sessionid") & "&mailnumber=" & temp_mail);
      WebOutString(""">");
      WebOutNL;
      if ((blank(update_mail) or (update_mail == "-1"))) then begin
        WebOutString("<input type=""hidden"" name=""backpage"" value=""");
        // I cannot make the WebOutLink Work here../Svenne
        WebOutString("WebHalForum.hal?mip=noup&dig=" & WebGetArg("dig") & "&crm=" & WebGetArg("crm"));
        WebOutString("&cod=" & WebGetArg("cod"));
        WebOutString("&tms=" & timestr);
        WebOutString(""">" & chr(13));
      end else begin
        WebOutString("<input type=""hidden"" name=""backpage"" value=""");
        WebOutString("WebHalForum.hal?mip=yeup&dig=" & WebGetArg("dig") & "&crm=" & WebGetArg("crm"));
        WebOutString("&cod=" & WebGetArg("cod") & "&updm=" & update_mail);
        WebOutString("&tms=" & timestr);
        WebOutString(""">" & chr(13));
      end;
      WebHalHiddenField("confcode",confcode);
      WebHalHiddenField("from_field","Sven Jansson");
      WebHalHiddenField("date_field",Mailr_temp.TransDate);
      WebHalHiddenField("to_field","TEMP");
      if(!update_mailf) then begin
        WebOutString("<br>Subject:<br>");
        WebOutString("<input type=""text"" class=""subject"" name=""subject_field"" SIZE=""43"" MAXLENGTH=""91"" value=""");
        RecordNew(Mailr_header_upd);
        AddToText(Mailr_temp.Header,Mailr_header_upd);
        WebHalForumHeaderParse(Mailr_header_upd,read3,validf_header,false);
        WebOutString(""">" & chr(13));
      end;
      WebOutString("<br>");
      if (update_mail != "-1") then begin
        WebOutString("Add to this thread below!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Or create a ");
        WebOutString("<a style=""text-decoration:underline"" class=""ThirdLeft"" href=""");
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&mip=newm&cod=" & code_ & "&mailnumber=-1");
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString(""">New message!</a><br>");
      end;
      WebOutString("<textarea rows=""10"" id=""mail_body"" name=""mail_body"" cols=""82"">");
      if(edit_moref) then begin
        ToolWebOutMailText(Mailr_temp,"");
      end;
      WebOutString("</textarea>" & chr(13));
      WebOutString("<br>");
      WebOutString("<a class=""erroranchor"" name=""down"" id=""down""></a>" & chr(13));
      WebOutString("<input type=""submit"" class=""validate"" value=""Validate"" name=""b1"">&nbsp;&nbsp;" & chr(13));
      WebHalInpt("Line break","[<br>]","[&lt;br&gt;]",false);
      WebHalInpt("Start Hal code tag","[Hal]","[Hal]",true);
      WebHalInpt("End Hal code tag","[/Hal]","[/Hal]",true);
      WebHalInpt("Start Red tag","[Red]","[Red]",false);
      WebHalInpt("End Red tag","[/Red]","[/Red]",false);
      WebHalInpt("Start Blue tag","[Blue]","[Blue]",false);
      WebHalInpt("End Blue tag","[/Blue]","[/Blue]",false);
      WebHalInpt("Start Bold tag","[Bold]","[Bold]",false);
      WebHalInpt("End Bold tag","[/Bold]","[/Bold]",false);
      WebOutString("<button OnClick=""");
      if (edit_moref) then begin
        WebOutString("location.href='");
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&updm=" & WebGetArg("updm") & "&mailnumber=" & WebGetArg("mailnumber") & "&mip=cnfo");
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString("'"" ");
      end else begin
        WebOutString("if(confirm('");
        WebOutString("This is the first step and nothing has yet been saved!\\nIf you are writing a message your text will now \\ndissapear from the textfield!\\n\\nContinue?\\n");
        WebOutString("')){location.href='");
        WebOutLink("WebHalMain.hal?sessionid=" & WebGetArg("sessionid") & "&updm=" & WebGetArg("updm") & "&mailnumber=-1&mip=cnfo");
        WebOutLink("&crm=" & WebGetArg("crm") & "&cod=" & WebGetArg("cod") & "&crm=" & WebGetArg("crm") & "&dig=" & WebGetArg("dig"));
        WebOutString("&tms=" & timestr);
        WebOutString("';}"" ");
      end;
      WebOutString("title=""How to use code tags""> Help </button>");
      WebOutString("</form>");
      ToolWebHalTdTrEnd;
      ToolWebHalTableEnd(false);
      WebOutString("</div>");
      ToolWebHalTdEnd;
    end;
  //end;
  ResetCompany(oldcomp);
  return;
end;

global
updating procedure ToolWebHalShowThreads(string code_)
begin
  Boolean validf;
  LongInt maxmail;
  string 12 code2_;
  string 255 name_;
  string 100 name1_,name2_,name3_;
  maxmail = 100000;
  //if (ToolWebHalLoggedIn()) then begin
    code2_ = WebGetArg("dig");
    name1_ = ""; name2_ = ""; name3_ = "";
    ToolWebHalGetDIrName(code2_,name1_,name2_,name3_);
    ToolWebHalPrintHeader(name3_);
    ToolWebHalTableStart("0","561","0","0","","","","");
        ToolWebHalTrStart;
    ToolWebHalTdStart("","","","","","","","","",false);
    ToolWebHalALinkStart("text-decoration:underline","MessageLink");
    ToolWebHalLink(false,"WebHalMain.hal","mip=newm&cod=" & code_ & "&mailnumber=-1");
    WebOutString(""">New message</a>");
    ToolWebHalTdTrEnd;
    ToolWebHalTrStart;
    ToolWebHalTdStart("","","","","","","","","",false);
    ToolWebHalImg("0","1","5","/halforum/images/spacer.gif","","","");
    ToolWebHalTdTrEnd;
    ToolWebHalTrStart;
    ToolWebHalTdStart("","","","","","","","","",true);
    WebOutString("<span class=""Header2"">Modified:</span><br>");
    ToolWebHalGetConfName(code_,name_);
    WebHalThreads(name_,maxmail);
    ToolWebHalTdTrEnd;
    ToolWebHalTableEnd(false);
    ToolWebHalTdEnd;
  //end;
  return;
end;
 /* Hal file by Sven Jansson Gnesta */