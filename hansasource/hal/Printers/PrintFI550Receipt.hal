external function Boolean FindLocalSerialPortDevice(Integer,LongInt,string,var record LSerialPortDeviceVc);
external procedure M4PadString(string,Integer,string,Boolean,var string);

function string 255 ReadError(string filename_error)
begin
  Boolean testf;
  string 255 res;
  
  OpenFile(filename_error);
  testf = true;
  while (testf) begin  
    res = res & ImportField;
    testf = NextImportLine(true);
  end;
  CloseFile;
  ReadError = res;
  return;
end;

function Boolean ReadFI550Reply(string device,LongInt sernr,var string errorstr)
begin
  Boolean res;
  LongInt curtick,starttick,timeout;
  string 255 filename_success,filename_error;
  
  res = false;
  errorstr = "";
  filename_success = device;
  filename_success = filename_success & "Log/" & "RAC" & sernr;
  filename_success = filename_success & ".111";

  filename_error = device;
  filename_error = filename_error & "Log/" & "RAC" & sernr;
  filename_error = filename_error & ".000";

  timeout = 15*1000;
  starttick = GetCurTick;
  curtick = starttick;
  while ((curtick-starttick)<timeout) begin
    curtick = GetCurTick;
    if (FileExists(filename_success)) then begin
      res = true;
      goto LReadFI550Reply;
    end;
    if (FileExists(filename_error)) then begin
      errorstr = ReadError(filename_error);
      res = false;
      goto LReadFI550Reply;
    end;
  end;
LReadFI550Reply:;  
  ReadFI550Reply = res;
  return;
end;

procedure AddInvoiceTotals(record IVVc IVr,var Area outa)
begin
  string 255 tstr;
  string 255 eol,cashtype;
  row IVVc IVrw;
  Integer i,rwcnt;
  val totrow;
  
  eol = chr(13) & chr(10);
  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    switch (IVrw.stp) begin
       case kInvoiceRowTypeLoyaltyPointsPayment:
         cashtype = "G";
         tstr = ValToString(IVrw.Sum,M4Val,"",".",0);
         M4PadString(tstr,40," ",true,tstr);      
         AddTextToArea(tstr,outa);
         AddTextToArea(cashtype,outa);
         AddTextToArea(eol,outa);
         totrow = totrow + IVrw.Sum;
       case kInvoiceRowTypeCashPayment:
         cashtype = "G";
         tstr = ValToString(IVrw.Sum,M4Val,"",".",0);
         M4PadString(tstr,40," ",true,tstr);      
         AddTextToArea(tstr,outa);
         AddTextToArea(cashtype,outa);
         AddTextToArea(eol,outa);
         totrow = totrow + IVrw.Sum;
       case kInvoiceRowTypeCreditCardPayment:
         cashtype = "K";
         tstr = ValToString(IVrw.Sum,M4Val,"",".",0);
         M4PadString(tstr,40," ",true,tstr);      
         AddTextToArea(tstr,outa);
         AddTextToArea(cashtype,outa);
         AddTextToArea(eol,outa);
         totrow = totrow + IVrw.Sum;
       case kInvoiceRowTypeChequePayment:
         cashtype = "C";
         tstr = ValToString(IVrw.Sum,M4Val,"",".",0);
         M4PadString(tstr,40," ",true,tstr);      
         AddTextToArea(tstr,outa);
         AddTextToArea(cashtype,outa);
         AddTextToArea(eol,outa);
         totrow = totrow + IVrw.Sum;
    end;
  end;
  if (((IVr.RetnValue + IVr.Sum4) - totrow)>0) then begin
    cashtype = IVr.PayDeal;
    if (cashtype!="K") and (cashtype!="G") and (cashtype!="C") then begin
      cashtype = "G";
    end;
  
    tstr = ValToString((IVr.RetnValue + IVr.Sum4) - totrow,M4Val,"",".",0);
    M4PadString(tstr,40," ",true,tstr);      
    AddTextToArea(tstr,outa);
    AddTextToArea(cashtype,outa);
    AddTextToArea(eol,outa);
  end;
  return;
end;

procedure AddInvoiceRowsToArea(record IVVc IVr,var Area outa)
begin
  Integer i,rwcnt;
  row IVVc IVrw;
  string 255 tstr;
  string 255 eol,invoiceline;
  
  eol = chr(13) & chr(10);
  invoiceline = "S";
  rwcnt =  MatRowCnt(IVr);  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    if (nonblank(IVrw.ArtCode)) then begin
      M4PadString(IVrw.ArtCode,20," ",false,tstr);      
      AddTextToArea(tstr,outa);

      tstr = ValToString(IVrw.Quant,M4Val,"",".",0);
      M4PadString(tstr,10," ",true,tstr);      
      AddTextToArea(tstr,outa);
      tstr = ValToString(IVrw.Price,M4Val,"",".",0);
      M4PadString(tstr,10," ",true,tstr);      
      AddTextToArea(tstr,outa);
      AddTextToArea(invoiceline,outa);
      AddTextToArea(eol,outa);
    end;
  end;
  return;
end;

global
updating procedure PrintFI550Receipt(record IVVc IVr,record LSerialPortDeviceVc LSPDr)
begin
  record IVVc lIVr;
  record CashPrintBlock CPb;
  string 255 filename,errstr;
  record LocalMachineBlock LMb;
  record MachineCashVc MCr;
  Integer FiscalPrinter,noErr;
  record IVVc oldIVr;
  Area outa;

  if (blank(LSPDr.Port)) then begin
    LSPDr.Port = "FI550/";
  end;
  filename = LSPDr.Port & "Print/";
  filename = filename & "RAC" & IVr.SerNr;
  filename = filename & ".txt";
  if ((IVr.FiscalFlag!=0) and (IVr.OKFlag!=0) and (IVr.Prntdf==0) and (IVr.InvType==kInvoiceTypeCash or IVr.InvType==kInvoiceTypeCashInvoiceReceiptPRT)) then begin
//  if (true) then begin
    noErr = 0;
    if (OpenExportFile(filename,false)) then begin
      MessageBox(1694," " & filename);
      goto LEND;
    end;
    AddInvoiceRowsToArea(IVr,outa);
    AddInvoiceTotals(IVr,outa);
    CreateFile(filename);
    CloseFile;
    if (OpenExportFile(filename,false)==false) then begin
      MessageBox(1695," " & filename);
      goto LEND;
    end;
    CloseFile;
    WriteAreaToFile(outa,filename,0);
    
    if (ReadFI550Reply(LSPDr.Port,IVr.SerNr,errstr)==false) then begin
      Delete_File(filename);
      if (nonblank(errstr)) then begin
        MessageBox(0,errstr);
      end else begin
        MessageBox(1696,"");
      end;
      goto LEND;
    end;
    lIVr.SerNr = IVr.SerNr;
    if (ReadFirstMain(lIVr,1,true)) then begin
      RecordCopy(oldIVr,lIVr);
      lIVr.Prntdf = 1;
      if (RecordUpdate(oldIVr,lIVr,false)==0) then begin
      end;
    end;
  end;
LEND:;
  return;
end;

procedure AddIVCashInvoiceTotals(record IVCashVc IVr,var Area outa)
begin
  string 255 tstr;
  string 255 eol,cashtype;
  
  eol = chr(13) & chr(10);
  if (IVr.RecValue>0) then begin
    cashtype = "K";
    tstr = ValToString(IVr.RecValue,M4Val,"",".",0);
    M4PadString(tstr,40," ",true,tstr);      
    AddTextToArea(tstr,outa);
    AddTextToArea(cashtype,outa);
    AddTextToArea(eol,outa);
  end;
  if (IVr.RecValue2>0) then begin
    cashtype = "K";
    tstr = ValToString(IVr.RecValue2,M4Val,"",".",0);
    M4PadString(tstr,40," ",true,tstr);      
    AddTextToArea(tstr,outa);
    AddTextToArea(cashtype,outa);
    AddTextToArea(eol,outa);
  end;
  if (((IVr.RetValue + IVr.Sum4)-IVr.RecValue-IVr.RecValue2)>0) then begin
    cashtype = "G";
    tstr = ValToString((IVr.RetValue + IVr.Sum4)-IVr.RecValue-IVr.RecValue2,M4Val,"",".",0);
    M4PadString(tstr,40," ",true,tstr);      
    AddTextToArea(tstr,outa);
    AddTextToArea(cashtype,outa);
    AddTextToArea(eol,outa);
  end;
  return;
end;

procedure AddIVCashInvoiceRowsToArea(record IVCashVc IVr,var Area outa)
begin
  Integer i,rwcnt;
  row IVCashVc IVrw;
  string 255 tstr;
  string 255 eol,invoiceline;
  
  eol = chr(13) & chr(10);
  invoiceline = "S";
  rwcnt =  MatRowCnt(IVr);  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    if (nonblank(IVrw.ArtCode)) then begin
      M4PadString(IVrw.ArtCode,20," ",false,tstr);      
      AddTextToArea(tstr,outa);

      tstr = ValToString(IVrw.Quant,M4Val,"",".",0);
      M4PadString(tstr,10," ",true,tstr);      
      AddTextToArea(tstr,outa);
      tstr = ValToString(IVrw.Price,M4Val,"",".",0);
      M4PadString(tstr,10," ",true,tstr);      
      AddTextToArea(tstr,outa);
      AddTextToArea(invoiceline,outa);
      AddTextToArea(eol,outa);
    end;
  end;
  return;
end;

global
updating procedure PrintFI550IVCashReceipt(record IVCashVc IVr)
begin
  record CashPrintBlock CPb;
  string 255 device,filename,errstr;
  record LocalMachineBlock LMb;
  record MachineCashVc MCr;
  Integer FiscalPrinter,noErr;
  record IVVc oldIVr;
  Area outa;
  record LSerialPortDeviceVc LSPDr;

  BlockLoad(LMb);  
  if (FindLocalSerialPortDevice(kSerialPortDeviceClassFiscalPrinter,kSerialPortDeviceModelFiscPrinterFI550,LMb.LocalMachineCode,LSPDr)) then begin  
    FiscalPrinter = LSPDr.Printer;
    device = LSPDr.Port;
  end else begin
    BlockLoad(CPb);  
    MCr.Code = LMb.LocalMachineCode;
    if (ReadFirstMain(MCr,1,true)) then begin
      FiscalPrinter = MCr.FiscalPrinter;
      device = MCr.CommPort;
    end;
    if (FiscalPrinter==0) then begin
      FiscalPrinter = CPb.FiscalPrinter;
    end;
    if (blank(device)) then begin
      device = LMb.DefPrinter;
    end;
    if (blank(device)) then begin
      device = CPb.CommPort;
    end;
  end;
  if (blank(device)) then begin
    device = "FI550/";
  end;
  filename = device & "Print/";
  filename = filename & "RAC" & IVr.SerNr;
  filename = filename & ".txt";
  if ((IVr.FiscalFlag!=0) and (IVr.OKFlag!=0) and (IVr.Prntdf==0)) then begin
//  if (true) then begin
    noErr = 0;
    if (OpenExportFile(filename,false)) then begin
      MessageBox(1694," " & filename);
      goto LEND;
    end;
    AddIVCashInvoiceRowsToArea(IVr,outa);
    AddIVCashInvoiceTotals(IVr,outa);
    CreateFile(filename);
    CloseFile;
    if (OpenExportFile(filename,false)==false) then begin
      MessageBox(1695," " & filename);
      goto LEND;
    end;
    CloseFile;
    WriteAreaToFile(outa,filename,0);
    
    if (ReadFI550Reply(device,IVr.SerNr,errstr)==false) then begin
      Delete_File(filename);
      if (nonblank(errstr)) then begin
        MessageBox(0,errstr);
      end else begin
        MessageBox(1696,"");
      end;
      goto LEND;
    end;
    RecordCopy(oldIVr,IVr);
    IVr.Prntdf = 1;
    if (RecordUpdate(oldIVr,IVr,false)==0) then begin
    end;
  end;
LEND:;
  return;
end;

global
procedure FI550DailyReport(string device,Date d1)
begin
  string 255 filename,errstr,ldevice;
  Area outa;

  ldevice = device;
  if (blank(ldevice)) then begin
    ldevice = "FI550/";
  end;
  filename = ldevice & "Print/";
  if (nonblankdate(d1)) then begin
    filename = filename & "KOM" & DateToString(d1,"YYYYMMDD");
  end else begin
    filename = filename & "KOM" & DateToString(CurrentDate,"YYYYMMDD");
  end;
  filename = filename & ".txt";
  if (OpenExportFile(filename,false)) then begin
    MessageBox(1694," " & filename);
    goto LEND;
  end;
  CreateFile(filename);
  CloseFile;
  if (OpenExportFile(filename,false)==false) then begin
    MessageBox(1695," " & filename);
    goto LEND;
  end;
  CloseFile;
  AddTextToArea("100",outa);
  WriteAreaToFile(outa,filename,0);
LEND:;  
  return;
end;
