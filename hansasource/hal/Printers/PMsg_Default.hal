external procedure PMsgFormat_DefVar(integer,integer,integer,var array integer); 

function string 10 PMsg_NativeCommands(integer PMsgCommandId) 
begin
  integer res;

  switch(PMsgCommandId) begin
    case PMsgCmdConst_Terminate: 
      res = CC_EOT;
    case PMsgCmdConst_Request:
      res = CC_ENQ;
    case PMsgCmdConst_Acknowledge:
      res = CC_ACK;
  end;

  PMsg_NativeCommands = chr(res);
  return;
end;

procedure PMsg_NativePack(integer PMsgCmdId,var array integer pformat) 
begin
  string 255 res;
  
  switch(PMsgCmdId) begin
    case PMsgCmdConst_RawHex:
      PMsgFormat_DefVar(PMsgVar_Data,PMsg_Hex,100,pformat);
  end;

  return;
end;

// [COMM/] User for debugging
global
function string 255 Msg_TranslateCmd(integer CmdId) 
begin
  string 255 res;

  switch(CmdId) begin
    // [COMM/] Communication commands
    case PMsgCmdConst_Request:
      res = "Request";
    case PMsgCmdConst_Acknowledge:
      res = "Acknowledge";
    case PMsgCmdConst_Terminate:
      res = "Terminate";
    case PMsgCmdConst_Message:
      res = "Message";
    case PMsgCmdConst_Const:
      res = "Const";
    case PMsgCmdConst_CmdDelay:
      res = "CmdDelay";
    case PMsgCmdConst_RetryDelay:
      res = "RetryDelay";    
    // [COMM/] Printer specific commands
    case PMsgCmdConst_Sound:
      res = "Sound";
    case PMsgCmdConst_Beep:
      res = "Beep";
    case PMsgCmdConst_Feed:
      res = "Feed";
    case PMsgCmdConst_Cut:
      res = "Cut";
    case PMsgCmdConst_PrintLine:
      res = "PrintLine";
    // [COMM/] Print Footer for the Receipt -- will also print new header for next Receipt
    case PMsgCmdConst_PrintFooter:
      res = "PrintFooter";
    case PMsgCmdConst_PrintDocument:
      res = "PrintDocument";  
    case PMsgCmdConst_CompleteDocument:
      res = "CompleteDocument";
    case PMsgCmdConst_Status:
      res = "Status";
    case PMsgCmdConst_PrintText:
      res = "PrintText";
    case PMsgCmdConst_DemoPrint:
      res = "DemoPrint";
    case PMsgCmdConst_HandShake:
      res = "HandShake";
    case PMsgCmdConst_EndOfTransfer:
      res = "EndOfTransfer";
    case PMsgCmdConst_RequestStatusCode:
      res = "RequestStatusCode";
    case PMsgCmdConst_OpenCashDrawer:
      res = "OpenCashDrawer";
    case PMsgCmdConst_CashInRegisterDrawer:
      res = "CashInRegisterDrawer";
    case PMsgCmdConst_GetDeviceType:
      res = "GetDeviceType";
    case PMsgCmdConst_ReadRegister:
      res = "ReadRegister";
    case PMsgCmdConst_SetDate:
      res = "SetDate";
    case PMsgCmdConst_SetTime:
      res = "SetTime";
    case PMsgCmdConst_SetDecimalPoint:
      res = "SetDecimalPoint";
    case PMsgCmdConst_CancelCurrentReceipt:
      res = "CancelCurrentReceipt";
    case PMsgCmdConst_MoneyDeposit:
      res = "MoneyDeposit";
    case PMsgCmdConst_MoneyWithdraw:
      res = "MoneyWithdraw";
    case PMsgCmdConst_GetLastErrorCode:
      res = "GetLastErrorCode";
    case PMsgCmdConst_PrintDocumentFooter:
      res = "PrintDocumentFooter";
    case PMsgCmdConst_PrintImageFromHost:
      res = "PrintImageFromHost";
    case PMsgCmdConst_PrintByNumber:
      res = "PrintByNumber";
    case PMsgCmdConst_EnterMode:
      res = "EnterMode";
    case PMsgCmdConst_ExitCurrentMode:
      res = "ExitCurrentMode";
    case PMsgCmdConst_OpenReceipt:
      res = "OpenReceipt";
    case PMsgCmdConst_AddSalesSumQty:
      res = "AddSalesSumQty";
    case PMsgCmdConst_RemSumQty:
      res = "RemSumQty";
    case PMsgCmdConst_CloseReceipt:
      res = "CloseReceipt";
    case PMsgCmdConst_AddCancelSumQty:
      res = "AddCancelSumQty";
    case PMsgCmdConst_AddReturnSumQty:
      res = "AddReturnSumQty";
    case PMsgCmdConst_AddReceiptPayment:
      res = "AddReceiptPayment";
    case PMsgCmdConst_RemReceiptPayment:
      res = "RemReceiptPayment";
    case PMsgCmdConst_AddDiscountPercentage:
      res = "AddDiscountPercentage";
    case PMsgCmdConst_AddDiscountSum:
      res = "AddDiscountSum";
    case PMsgCmdConst_CancelDiscount:
      res = "CancelDiscount";
    case PMsgCmdConst_GetLastShiftSales:
      res = "GetLastShiftSales";
    case PMsgCmdConst_TotalExtinction:
      res = "TotalExtinction";
    case PMsgCmdConst_GetVATValue:
      res = "GetVATValue";
    case PMsgCmdConst_Reset:
      res = "Reset";
    case PMsgCmdConst_OpenShift:
      res = "OpenShift";    
    case PMsgCmdConst_ModeFiscalReporting:
      res = "ModeFiscalReporting";
    case PMsgCmdConst_ModeProgramming:
      res = "ModeProgramming";
    case PMsgCmdConst_SetGeneralSettings:
      res = "SetGeneralSettings";
    case PMsgCmdConst_GetNextDocumentNumber:
      res = "GetNextDocumentNumber";
    // [COMM/] Specific settings
    case PMsgCmdConst_PrintCashierName:
      res = "PrintCashierName";
    case PMsgCmdConst_PrintReceiptType:
      res = "PrintReceiptType";
    case PMsgCmdConst_ReceiptCut:
      res = "ReceiptCut";
    case PMsgCmdConst_PrintUnitForSingleItem:
      res = "PrintUnitForSingleItem";
    // [COMM/] Settings
    case PMsgCmdConst_PrinterGet:
      res = "PrinterGet";
    case PMsgCmdConst_PrinterSet:
      res = "PrinterSet";
    // [COMM/] Reports
    case PMsgCmdConst_Report:
      res = "Report"; // X-report
    case PMsgCmdConst_ReportDateRanges:
      res = "ReportDateRanges";
    case PMsgCmdConst_FiscalReportDateRange:
      res = "FiscalReportDateRange";
    case PMsgCmdConst_ReportMonthly:
      res = "ReportMonthly";
    // [COMM/] For debugging
    case PMsgCmdConst_RawHex:
      res = "RawHex";
    case PMsgCmdConst_Diagnostics:
      res = "Diagnostics";
    case PMsgCmdConst_CloseShift:
      res = "CloseShift";
    otherwise
      res = "UnknownCommand_" & CmdId;
  end;

  Msg_TranslateCmd = res;
  return;
end;

global
function string 255 PMsgExtension_Default(integer PMsgExtensionType,integer PMsgExtensionVarId,string KeyWord,var array integer format,var array string msgstack,array string altparams) 
begin
  string 255 res;

  switch(PMsgExtensionType) begin
    case PMsgExtensionType_TrasnalteCmd:
      res = Msg_TranslateCmd(PMsgExtensionVarId);
    case PMsgExtensionType_Cmd: 
      res = PMsg_NativeCommands(PMsgExtensionVarId);
    case PMsgExtensionType_Pack: 
      PMsg_NativePack(PMsgExtensionVarId,format);
    case PMsgExtensionType_ProcessVariable:
      res = KeyWord;
    otherwise
      res = "-1";
  end;
  PMsgExtension_Default = res;
  return;
end;
