external updating function integer RestAcc_CommunicateWithCleanCash(var record RestAccVc,var record RestAccVc,record LocalMachineBlock,record LSerialPortDeviceVc,
                                                          record SMVc,record SMVc,record SMVc,val,val,var string);
external function Integer CalculateVATTotalsCleanCash_RestAccVc(record RestAccVc,var record SMVc,var val,var record SMVc,var val,var record SMVc);
external function Integer CalculateVATTotalsCleanCash(record IVVc,var record SMVc,var val,var record SMVc,var val,var record SMVc);
external function Integer CalculateVATTotalsCleanCash_IVCashVc(record IVCashVc,var record SMVc,var val,var record SMVc,var val,var record SMVc);
remote updating function integer CommunicateWithCleanCash(var record IVVc,var record IVVc,record LocalMachineBlock,record LSerialPortDeviceVc,
                                                          record SMVc,record SMVc,record SMVc,val,val,var string);
remote updating function integer IVCash_CommunicateWithCleanCash_TypeC(var record IVCashVc,var record IVCashVc,record LocalMachineBlock,record LSerialPortDeviceVc,
                                                                 record SMVc,record SMVc,record SMVc,val,val,var string);
remote updating function integer IVCash_CommunicateWithCleanCash(var record IVCashVc,var record IVCashVc,record LocalMachineBlock,record LSerialPortDeviceVc,
                                                          record SMVc,record SMVc,record SMVc,val,val,var string);

global
updating function Boolean StoreCleanCashReceiptClient(record LocalMachineBlock LMb,var record IVVc IVr,record LSerialPortDeviceVc LSPDr)
begin
  Boolean res;
  Integer err,noErr;
  record SMVc VATr;
  record SMVc pVATr;
  record SMVc nVATr;
  record IVVc oldIVr;
  val positivetotal,negativetotal;
  string 255 errorstr;

//8.4 CCSP v1 Mode A/C sequence chart

  noErr = 0;
    

  if ((nonblank(IVr.OfficialSerNr)) and (nonblank(IVr.OfficialSerNr2))) then begin
    MessageBox(12388,"");
    goto LStoreCleanCashReceiptClient;
  end;
  err = CalculateVATTotalsCleanCash(IVr,VATr,positivetotal,pVATr,negativetotal,nVATr);
  if (err!=noErr) then begin
    goto LStoreCleanCashReceiptClient;
  end;
  
  err = CommunicateWithCleanCash(IVr,oldIVr,LMb,LSPDr,VATr,pVATr,nVATr,positivetotal,negativetotal,errorstr);
  if (err!=noErr) then begin
    MessageBox(errorstr,"");
    goto LStoreCleanCashReceiptClient;
  end;
  
  IVr.FiscalFlag = 1;
  if (RecordUpdate(oldIVr,IVr,false)==0) then begin
    res = true;
  end;
  PrintDocument(IVr,"CashInvForm",false);
  if (IVr.Prntdf!=1) then begin
    RecordCopy(oldIVr,IVr);
    IVr.Prntdf = 1;
    if (RecordUpdate(oldIVr,IVr,false)==0) then begin
    end;
  end;
LStoreCleanCashReceiptClient:;
  StoreCleanCashReceiptClient = res;
  return;
end;

global
updating function Boolean StoreCleanCashIVCashReceiptClient(record LocalMachineBlock LMb,var record IVCashVc IVCashr,record LSerialPortDeviceVc LSPDr)
begin
  Boolean res;
  Integer err,noErr;
  record SMVc VATr;
  record SMVc pVATr;
  record SMVc nVATr;
  record IVCashVc oldIVCashr;
  val positivetotal,negativetotal;
  string 255 errorstr;

//8.4 CCSP v1 Mode A/C sequence chart
//Type C

  noErr = 0;
    

  if ((nonblank(IVCashr.OfficialSerNr)) and (nonblank(IVCashr.OfficialSerNr2))) then begin
    MessageBox(12388,"");
    goto LStoreCleanCashIVCashReceiptClient;
  end;
  err = CalculateVATTotalsCleanCash_IVCashVc(IVCashr,VATr,positivetotal,pVATr,negativetotal,nVATr);
  if (err!=noErr) then begin
    goto LStoreCleanCashIVCashReceiptClient;
  end;
  
  err = IVCash_CommunicateWithCleanCash(IVCashr,oldIVCashr,LMb,LSPDr,VATr,pVATr,nVATr,positivetotal,negativetotal,errorstr);
//  err = IVCash_CommunicateWithCleanCash_TypeC(IVCashr,oldIVCashr,LMb,LSPDr,VATr,pVATr,nVATr,positivetotal,negativetotal,errorstr);
//why type C ? for IVVc we do just CommunicateWithCleanCash

  if (err!=noErr) then begin
    MessageBox(errorstr,"");
    goto LStoreCleanCashIVCashReceiptClient;
  end;
  
  IVCashr.FiscalFlag = 1;
  if (RecordUpdate(oldIVCashr,IVCashr,false)==0) then begin
    res = true;
  end;
  PrintDocument(IVCashr,"InvCashForm",false);
  RecordCopy(oldIVCashr,IVCashr);
  IVCashr.Prntdf = 1;
  if (RecordUpdate(oldIVCashr,IVCashr,false)==0) then begin
  end;
LStoreCleanCashIVCashReceiptClient:;
  StoreCleanCashIVCashReceiptClient = res;
  return;
end;

global
updating function Boolean StoreCleanCashRestAccReceiptClient(record LocalMachineBlock LMb,var record RestAccVc RestAccr,record LSerialPortDeviceVc LSPDr)
begin
  Boolean res;
  Integer err,noErr;
  record SMVc VATr;
  record SMVc pVATr;
  record SMVc nVATr;
  record RestAccVc oldRestAccr;
  val positivetotal,negativetotal;
  string 255 errorstr;

//8.4 CCSP v1 Mode A/C sequence chart
//Type C

  noErr = 0;
    

  if ((nonblank(RestAccr.OfficialSerNr)) and (nonblank(RestAccr.OfficialSerNr2))) then begin
    MessageBox(12388,"");
    goto LStoreCleanCashRestAccReceiptClient;
  end;
  err = CalculateVATTotalsCleanCash_RestAccVc(RestAccr,VATr,positivetotal,pVATr,negativetotal,nVATr);
  if (err!=noErr) then begin
    goto LStoreCleanCashRestAccReceiptClient;
  end;
  
  err = RestAcc_CommunicateWithCleanCash(RestAccr,oldRestAccr,LMb,LSPDr,VATr,pVATr,nVATr,positivetotal,negativetotal,errorstr);
//  err = RestAcc_CommunicateWithCleanCash_TypeC(RestAccr,oldRestAccr,LMb,LSPDr,VATr,pVATr,nVATr,positivetotal,negativetotal,errorstr);
//why type C ? for IVVc we do just CommunicateWithCleanCash

  if (err!=noErr) then begin
    MessageBox(errorstr,"");
    goto LStoreCleanCashRestAccReceiptClient;
  end;
  
  RestAccr.FiscalFlag = 1;
  if (RecordUpdate(oldRestAccr,RestAccr,false)==0) then begin
    res = true;
  end;
  PrintDocument(RestAccr,"RestAccForm",false);
  RecordCopy(oldRestAccr,RestAccr);
  RestAccr.Prntdf = 1;
  if (RecordUpdate(oldRestAccr,RestAccr,false)==0) then begin
  end;
LStoreCleanCashRestAccReceiptClient:;
  StoreCleanCashRestAccReceiptClient = res;
  return;
end;