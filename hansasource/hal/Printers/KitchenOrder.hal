external procedure BarPrintEPSONTMU210(Integer,record RestAccVc);

global
procedure KitchenOrderPrnt()
BEGIN
  record CashierDefBlock CDb;
  Integer wn;
  record RestAccVc RestAccr;
  
  wn = CurWindow;  
  BlockLoad(CDb);
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RestAccr);
  if (CDb.Printer==1) then begin
    BarPrintEPSONTMU210(wn,RestAccr);
  end;
  RETURN;
END;

global
procedure SwitchToConfS()
BEGIN
  Integer wn,mwn,wn2;
  record ConfVc Confr;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("ConfSClass",0,mwn,"","",Confr);
  RETURN;
END;

global
procedure SwitchToMailContactS()
BEGIN
  Integer wn,mwn,wn2;
  record ContactRelVc ContactRelr;
  record CUVc CUr;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
//  wn2 = OpenWindow("MailContactRelSClass",0,mwn,"","",ContactRelr);
  wn2 = OpenWindow("MailContactCUSClass",0,mwn,"","",CUr);
//  wn2 = OpenWindow("MailCUSClass",0,mwn,"","",CUr);
  RETURN;
END;

/*
global
function Boolean MailContactCUSClassListDblClick(Integer wn)
begin
  Boolean res;
  record CUVc CUr;
  Integer mwn,rownr;

  mwn = MotherWindow(wn);
  if (mwn>0) then begin
    if (ReadMarkedRecord(wn,CUr)) then begin
      PasteString(mwn,CUr.eMail);
      res = false;
      CloseWindow(wn);
    end;
  end;
  MailContactCUSClassListDblClick = res;
  return;
end;
*/

global
procedure SwitchToMailCUS()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc CUr;
  record UserVc Userr;
  string 255 subset;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  Userr.Code = CurrentUser;
  if (ReadFirstMain(Userr,1,true)) then begin
    switch (Userr.limitedAccess) begin
      case 1: subset = Userr.SalesGroup;
      case 2: subset = Userr.Code;
    end;
  end;  
  wn2 = OpenWindow("MailCUSClass",0,mwn,subset,"",CUr);
  RETURN;
END;

global
procedure SwitchToMailVES()
begin
  Integer wn,mwn,wn2;
  record CUVc CUr;
  record UserVc Userr;
  string 255 subset;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  Userr.Code = CurrentUser;
  if (ReadFirstMain(Userr,1,true)) then begin
    switch (Userr.limitedAccess) begin
      case 1: subset = Userr.SalesGroup;
      case 2: subset = Userr.Code;
    end;
  end;
  wn2 = OpenWindow("MailVESClass",0,mwn,subset,"",CUr);
  RETURN;
END;

global
procedure SwitchToMailL()
BEGIN
  Integer wn,wn2;
  record MailVc Mailr;
  string 255 subset;
  string 255 namearg;
  
  wn = CurWindow;
  subset = GetWindowSubset(wn);
  namearg = GetWindowNameArg(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("MailLClass",0,0,subset,namearg,Mailr);
  RETURN;
END;

global
procedure SwitchToAllMailL()
BEGIN
  Integer wn,mwn,wn2;
  record MailVc Mailr;
  string 255 subset;
  string 255 namearg;
  
  wn = CurWindow;
  subset = GetWindowSubset(wn);
  namearg = GetWindowNameArg(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("AllMailLClass",0,mwn,subset,namearg,Mailr);
  RETURN;
END;

global
procedure OpenLocalMailbox()
BEGIN
  Integer wn2;
  record MailVc Mailr;
  
  wn2 = OpenWindow("LocalMailLClass",0,0,"","",Mailr); //Shouldn't this be RcVc record?
  RETURN;
END;

global
procedure SwitchToContactCU()
begin
  Integer wn,mwn,wn2;
  record CUVc CUr;
  
  wn = CurWindow;
  if (wn>0) then begin
    mwn = MotherWindow(wn);
    CloseWindow(wn);      
    wn2 = OpenWindow("ContactCUSClass",0,mwn,"","",CUr);
  end;
  RETURN;
END;

global
procedure SwitchToVE()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc VEr;
  
  wn = CurWindow;
  if (wn>0) then begin
    mwn = MotherWindow(wn);
    CloseWindow(wn);      
    wn2 = OpenWindow("AllVESClass",0,mwn,"","",VEr);
  end;
  RETURN;
END;

global
procedure SwitchToCU()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc CUr;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("AllCUSClass",0,mwn,"","",CUr);
  RETURN;
END;

global
procedure SwitchToVEGuest()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc VEr;
  
  wn = CurWindow;
  if (wn>0) then begin
    mwn = MotherWindow(wn);
    CloseWindow(wn);      
    wn2 = OpenWindow("AllVEGuestSClass",0,mwn,"","",VEr);
  end;
  RETURN;
END;

global
procedure SwitchToCUGuest()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc CUr;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("AllCUGuestSClass",0,mwn,"","",CUr);
  RETURN;
END;

global
procedure SwitchToProfileGuest()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc Profiler;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("AllProfileGuestSClass",0,mwn,"","",Profiler);
  RETURN;
END;

global
procedure SwitchToBlockS()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc CUr;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("BlockSClass",0,mwn,"","",CUr);
  RETURN;
END;

global
procedure SwitchToRegisterS()
BEGIN
  Integer wn,mwn,wn2;
  record CUVc CUr;
  
  wn = CurWindow;
  mwn = MotherWindow(wn);
  CloseWindow(wn);      
  wn2 = OpenWindow("RegisterSClass",0,mwn,"","",CUr);
  RETURN;
END;

global
procedure SwitchToUser()
BEGIN
  Integer wn,mwn,wn2;
  record UserVc Userr;
  
  wn = CurWindow;
  if (wn>0) then begin
    mwn = MotherWindow(wn);
    CloseWindow(wn);      
    wn2 = OpenWindow("UserSClass",0,mwn,"","",Userr);
  end;
  RETURN;
END;

global
procedure SwitchToGlobalUser()
BEGIN
  Integer wn,mwn,wn2;
  record GlobalUserVc GlobalUserr;
  
  wn = CurWindow;
  if (wn>0) then begin
    mwn = MotherWindow(wn);
    CloseWindow(wn);      
    wn2 = OpenWindow("GlobalUserSClass",0,mwn,"","",GlobalUserr);
  end;
  RETURN;
END;
