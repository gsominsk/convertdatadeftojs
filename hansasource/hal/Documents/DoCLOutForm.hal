external procedure PrintCurrencyName(string,string);
external procedure PrintCurrencyCode(string,string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean GetPM(string,var string,var string);
external function Boolean FindFormcode(Integer,Integer);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetVATCodeAccNumbers(string,var string,var string);
external procedure GetSuppBankSWIFT(string,var string);
external procedure GetSuppBankName(string,var string);
external procedure GetSuppBankAcc(string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetCorspAccNumber(string,var string);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetUserName(string,var string);
external procedure GetMonthText(string,Date,var string);
external function Boolean GetPMTAX(string,var val);
external function Integer NumberofDocumentPages(string,Integer);
external function Boolean GetPM(string,var string,var string);

procedure PrintCollectionRow(LongInt sernr,string custcode,string custname,Date transdate,
                             string costaccs,string curncycode,val payval,val basesum4,
                             record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  string 255 tstr;
  
  OUTFORMFIELD("F_FAKTNR",sernr);
  OUTFORMFIELD("F_SUBCUSTCODE",custcode);
  OUTFORMFIELD("F_SUBCUSTNAME",custname);
  OUTFORMFIELD("F_TRANSDATUM",transdate);
  OUTFORMFIELD("F_SALESACC",costaccs);
  tstr = ValToString(basesum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);    
  OUTFORMFIELD("F_BASE1ROWTOT",tstr);
  tstr = ValToString(payval,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);    
  OUTFORMFIELD("F_ROWTOT",basesum4);
  PrintCurrencyCode("F_SUBVALUTA",curncycode);
  if (FIELDINFORM("F_SUBVALUTANAMN")) then begin
    PrintCurrencyName("F_SUBVALUTANAMN",tstr);
  end;  
  RETURN;
END;

procedure MakeCostAccString(record VIVc VIr,var string costaccs)
BEGIN
  row VIVc VIrw;
  Integer i,rwcnt;
  string 10 svatacc,pvatacc;

  rwcnt = MatRowCnt(VIr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VIr,i,VIrw);
    if (SetInSet(VIrw.AccNumber,costaccs)==false) then begin
      if (nonblank(costaccs)) then begin
        costaccs = costaccs & ",";
      end;  
      costaccs = costaccs & VIrw.AccNumber;    
    end; 
    GetVATCodeAccNumbers(VIrw.VATCode,svatacc,pvatacc);
    if (SetInSet(pvatacc,costaccs)==false) then begin
      if (nonblank(costaccs)) then begin
        costaccs = costaccs & ",";
      end;  
      costaccs = costaccs & pvatacc;
    end;     
  end;   
  RETURN;
END;

procedure PrintCLOutInvoice(record CLOutVc CLOutr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record VIVc VIr;
  string 255 costaccs;
  
  if (CLOutr.FileName=="VIVc") then begin
    VIr.SerNr = CLOutr.FSerNr;
    if (ReadFirstMain(VIr,1,true)) then begin
      costaccs = "";
      if (FIELDINFORM("F_SALESACC")) then begin
        MakeCostAccString(VIr,costaccs);
      end;
      PrintCollectionRow(VIr.SerNr,VIr.VECode,VIr.VEName,VIr.TransDate,costaccs,VIr.CurncyCode,VIr.PayVal,MulRateToBase1(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff),SysFormatRec,LangNrr);
    end;  
  end else begin
    GetCorspAccNumber(CLOutr.CorspCode,costaccs);
    OUTFORMFIELD("F_SALESACC",costaccs);
  end;
  RETURN;
END;

procedure PrintCLOutRows(record CLOutVc CLOutr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  row CLOutVc CLOutrw;
  Integer i,rwcnt;
  record CheckVc Checkr;
  record OwnCheckVc OwnCheckr;
  record VIVc VIr;
  string 255 tstr,t2;
  
  rwcnt = MatRowCnt(CLOutr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CLOutr,i,CLOutrw);
    if (CLOutrw.Type!=0) then begin
      OUTFORMFIELD("F_INVOICENR",CLOutrw.TransNr);
      OUTFORMFIELD("F_ORDERNUMMER",CLOutrw.OrderNr);
    end;
    OUTFORMFIELD("F_COMPANY",CLOutrw.Company);
    OUTFORMFIELD("F_OBJECT",CLOutrw.Objects);
    OUTFORMFIELD("F_TEXTTYPE",StringFromSet(73,CLOutrw.Type));
    OUTFORMFIELD("F_PAYMODE2",CLOutrw.CorspCode);
    OUTFORMFIELD("F_CORSPMODEROW",CLOutrw.CorspCode);
    if (FIELDINFORM("F_CORSPMODEACCOUNTROW")) then begin
      GetCorspAccNumber(CLOutrw.CorspCode,tstr);
      OUTFORMFIELD("F_CORSPMODEACCOUNTROW",tstr);
    end;
    OUTFORMFIELD("F_SPECIFIKATION",CLOutrw.Comment);
    PrintValue("F_BELOPP",CLOutrw.Sum,M4Val,LangNrr,SysFormatRec,false);
    switch (CLOutrw.Type) begin
      case 2:
        VIr.SerNr = CLOutrw.TransNr;
        if (ReadFirstMain(VIr,1,true)) then begin end;
        OUTFORMFIELD("F_FAKTURANR",VIr.InvoiceNr);
      case 6:
        Checkr.SerNr = CLOutrw.TransNr;
        if (ReadFirstMain(Checkr,1,true)) then begin end;
        OUTFORMFIELD("F_CHECKNR",Checkr.CheckNr);
        OUTFORMFIELD("F_BANKNAME2",Checkr.BankName);
      case 7:
        OwnCheckr.SerNr = CLOutrw.TransNr;
        if (ReadFirstMain(OwnCheckr,1,true)) then begin end;
        OUTFORMFIELD("F_CHECKNR",OwnCheckr.CheckNr);
        OUTFORMFIELD("F_BANKNAME2",OwnCheckr.BankName);
    end;
    if (FIELDINFORM("F_PAYMODEROW")) then begin
      tstr = CLOutrw.PayMode;
      if (blank(tstr)) then begin
        tstr = CLOutr.PayMode;
      end;
      OUTFORMFIELD("F_PAYMODEROW",tstr);
      if (GetPM(tstr,t2,tstr)==false) then begin
      end;
      if (FIELDINFORM("F_PAYMODEROWCOMMENT")) then begin
        OUTFORMFIELD("F_PAYMODEROWCOMMENT",tstr);
      end;
    end;
    EndFormRow;
  end;
  RETURN;
END;

global
procedure DoCLOutForm(record RcVc RepSpec,record CLOutVc CLOutr)
BEGIN
  string 255 tstr,t2;
  val t;
  record UserVc Userr;
  record CUVc CUr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  
  GetLangNr(CLOutr.LangCode,LangNrr);      
  if (CLOutr.OKFlag==0) then begin
//    goto LDoCLOutForm;//?
  end;
  BlockLoad(SysFormatRec);
  langcode = CLOutr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCLOutForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(CLOutr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,CLOutr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"CLOutVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
          CommonDocumentFields(RepSpec);
          NumberofDocumentPages(formcode,MatRowCnt(CLOutr));
          if (FIELDINFORM("F_BASE1BETALA")) then begin
            t = MulRateToBase1(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
            tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
            OUTFORMFIELD("F_BASE1BETALA",tstr);
          end;
          if (FIELDINFORM("F_BASE2BETALA")) then begin
            t = MulRateToBase2(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
            tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
            OUTFORMFIELD("F_BASE2BETALA",tstr);
          end;
          if (FIELDINFORM("F_RUSPAYNR")) then begin
            RussianPaymentNr(CLOutr.SerNr,tstr);
            OUTFORMFIELD("F_RUSPAYNR",tstr);
          end;  
          PrintCurrencyCode("F_VALUTA",CLOutr.CurncyCode);
          if (FIELDINFORM("F_VALUTANAMN")) then begin
            PrintCurrencyName("F_VALUTANAMN",CLOutr.CurncyCode);
          end;  
          if (FIELDINFORM("F_SECACC")) then begin
            GetCorspAccNumber(CLOutr.CorspCode,tstr);
            OUTFORMFIELD("F_SECACC",tstr);
          end;  
          CUr.Code = CLOutr.CUCode;
          if (ReadFirstMain(CUr, 1, true)) then begin
            OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);
            OUTFORMFIELD("F_REGNUMBER1",CUr.RegNr1);
            OUTFORMFIELD("F_REGNUMBER2",CUr.RegNr2);
            OUTFORMFIELD("F_LEVVATNR",CUr.VATNr);
          end;
          
          if (FIELDINFORM("F_PAYMODE2")) then begin
            if (GetPM(CLOutr.PayMode,t2,tstr)==false) then begin
            end;    
            OUTFORMFIELD("F_PAYMODE2",tstr);
          end;            
          
          OUTFORMFIELD("F_TRANSDATE",CLOutr.TransDate);
          OUTFORMFIELD("F_SERNR",CLOutr.SerNr);
          tstr = ValToString(CLOutr.NetVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_SUMMA",tstr);
          tstr = ValToString(CLOutr.VATVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_MOMS",tstr);
          tstr = ValToString(CLOutr.Total,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_ATTBETALA",tstr);
          if (FIELDINFORM("F_ATTBETALATEXT")) then begin
            ValToText(CLOutr.Total,M4Val,CLOutr.CurncyCode,"",tstr);
            OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
          end;            
          OUTFORMFIELD("F_COMMENT",CLOutr.Comment);
          OUTFORMFIELD("F_PERSON",CLOutr.Person);
          if (FIELDINFORM("F_SALJARNAMN")) then begin
            GetUserName(CLOutr.Person,tstr);
            OUTFORMFIELD("F_SALJARNAMN",tstr);
          end;  
          OutAddress("F_ADRESS",CLOutr.CUName,CLOutr.Addr0,CLOutr.Addr1,CLOutr.Addr2,CLOutr.Addr3,CLOutr.Addr4);
//          OUTFORMFIELD("F_ADRESS",CLOutr.CUName);
          if (FIELDINFORM("F_BANKACC")) then begin
            GetSuppBankAcc(CLOutr.CUCode,tstr);
            OUTFORMFIELD("F_BANKACC",tstr);
          end;  
          if (FIELDINFORM("F_BANKNAME")) then begin
            GetSuppBankName(CLOutr.CUCode,tstr);
            OUTFORMFIELD("F_BANKNAME",tstr);
          end;  
          if (FIELDINFORM("F_SWIFT")) then begin
            GetSuppBankSWIFT(CLOutr.Person,tstr);
            OUTFORMFIELD("F_SWIFT",tstr);
          end;  
          OUTFORMFIELD("F_KUNDNR",CLOutr.CUCode);
          OUTFORMFIELD("F_KUNDNAMN",CLOutr.CUName);
          OUTFORMFIELD("F_ADDR1",CLOutr.Addr0);
          OUTFORMFIELD("F_ADDR2",CLOutr.Addr1);
          OUTFORMFIELD("F_ADDR3",CLOutr.Addr2);
          OUTFORMFIELD("F_INVADDR3",CLOutr.Addr3);
          OUTFORMFIELD("F_INVADDR4",CLOutr.Addr4);
          if (FIELDINFORM("F_SIGNATURE")) then begin
            GetUserName(CurrentUser,tstr);
            OUTFORMFIELD("F_SIGNATURE",tstr);
          end;  
          Userr.Code = CLOutr.Person;
          if (ReadFirstMain(Userr,1,true)) then begin end;
          OUTFORMFIELD("F_OURREF",Userr.CurOurContact);
          OUTFORMFIELD("F_PERSONACCOUNT",Userr.PersAcc);
          OUTFORMFIELD("F_PERSONID",Userr.IDCode);
          OUTFORMFIELD("F_PERSONCOMMENT",Userr.Comment);
          OUTFORMFIELD("F_PERSONSPEC",Userr.Spec);
          OUTFORMFIELD("F_DATEDAY",GetDay(CLOutr.TransDate));
          OUTFORMFIELD("F_DATEMONTH",GetMonth(CLOutr.TransDate));
          OUTFORMFIELD("F_DATEYEAR",GetYear(CLOutr.TransDate));
          GetMonthText(CLOutr.LangCode,CLOutr.TransDate,tstr);
          OUTFORMFIELD("F_DATEMONTHTEXT",tstr);
          OUTFORMFIELD("F_REFERENSNUMMER",CLOutr.RefStr);
          OUTFORMFIELD("F_CORSPMODE",CLOutr.CorspCode);
          GetCorspAccNumber(CLOutr.CorspCode,tstr);
          OUTFORMFIELD("F_CORSPMODEACCOUNT",tstr);
          OUTFORMFIELD("F_PAYMODE",CLOutr.PayMode);
          OUTFORMFIELD("F_KOMMENTAR",CLOutr.CorspComment);
          
          PrintCLOutInvoice(CLOutr,SysFormatRec,LangNrr);
          PrintCLOutRows(CLOutr,SysFormatRec,LangNrr);
          CloseForm;          
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCLOutForm:;
  RETURN;  
END;     
