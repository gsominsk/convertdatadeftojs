external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function string 255 GetVarietyComment(string,string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);

procedure PrintGiftReceiptRows(record RcVc RepSpec,record DocVc Docr,record GiftReceiptVc GRr,record LangNrVc LangNrr,record SysFormatBlock SFb)
begin
  row GiftReceiptVc GRrw;
  Integer i,rwcnt;
  record INVc INr;
  string 255 tstr;
  
  rwcnt = MatRowCnt(GRr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(GRr,i,GRrw);
    if (ReadFirstItem(GRrw.ArtCode,INr,true,false)) then begin
    end;
    OUTFORMFIELD("F_ARTNR",GRrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",GRrw.ArtCode);
    OUTFORMFIELD("F_ARTCODEVARIETIES",GetVarietyComment(GRrw.ArtCode,INr.Code));
    OUTFORMFIELD("F_ARTCODENOVARIETIES",INr.Code);
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(GRrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(GRrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(GRrw.ArtCode,tstr);      
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;  
    tstr = ValToString(GRrw.Quant,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_ANTAL",tstr);
    tstr = ValToString(GRrw.Price,M423Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_APRIS",tstr);
    tstr = ValToString(GRrw.Sum,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BELOPP",tstr);
    OUTFORMFIELD("F_RABATT",GRrw.vRebate);
    OUTFORMFIELD("F_SPECIFIKATION",GRrw.Spec);
    OUTFORMFIELD("F_SERIENR",GRrw.SerialNr);
    EndFormRow;
  end;
  return;
end;

global
procedure DoGiftReceiptForm(record RcVc RepSpec,record GiftReceiptVc GRr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  record CUVc CUr;
  string 255 tstr;
  record RoundBlock RoundRec;
  val t;
  record SMVc VATr;
  Integer vatcnt;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record DocVc Docr;
  record CashierDefBlock CDb;
  vector val vpaymodes;
  record UserVc Userr;
  record LocationVc Locr;
  record SysFormatBlock SFb;
  
  GetLangNr(GRr.LangCode,LangNrr);
  BlockLoad(SFb);  
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoGiftReceiptForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = GRr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  if (GRr.Prntdf!=0) then begin
    if (UserCanAction("DisallowPrintCopy",false)) then begin
      MessageBox(1274,StringFromStringSet(3,"DisallowPrintCopy"));
      printf = false;
    end;
  end;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(GRr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,GRr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"IVCashVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
          if (GRr.OKFlag!=0) then begin
            if (GRr.Prntdf!=0) then begin
              FormWaterMark(1118,1);
            end;
          end;
          CommonDocumentFields(RepSpec);
          NumberofDocumentPages(FDrw.FPCode,MatRowCnt(GRr));
          Docr.Code = formcode;
          if (ReadFirstMain(Docr,1,true)) then begin
          end;
          CUr.Code = GRr.CustCode;
          if (ReadFirstMain(CUr,1,true)) then begin
          end;
          Locr.Code = GRr.Location;
          if (ReadFirstMain(Locr,1,true)) then begin
          end;
          
          BlockLoad(RoundRec);  
          if (GRr.Prntdf==0) then begin
            OUTFORMFIELD("F_COPYTYPE",USetStr(18630));
          end else begin
            OUTFORMFIELD("F_COPYTYPE",USetStr(18631));
          end;
          OUTFORMFIELD("F_KUNDNAMN",CUr.Name);   
          OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);
          OUTFORMFIELD("F_FAKTURANUMMER",GRr.SerNr);
          OUTFORMFIELD("F_SERNR",GRr.SerNr);
          OUTFORMFIELD("F_KUNDNR",GRr.CustCode);
          OUTFORMFIELD("F_TRANSDATE",GRr.TransDate);
          OUTFORMFIELD("F_TRANSDATEHIJRI",ConvertDate(kCalendarGregorian,GRr.TransDate,kCalendarHijri));
          OUTFORMFIELD("F_ATTBETALA",GRr.Sum4);
          
//          if (FIELDINFORM("F_RATE")) then begin
//            GetFullCurncyRateText(true,tstr,GRr.FrRate,GRr.ToRateB1,GRr.ToRateB2,GRr.BaseRate1,GRr.BaseRate2);                    
//            OUTFORMFIELD("F_RATE",tstr);
//          end;  
//          if (FIELDINFORM("F_BASERATE")) then begin
//            GetFullCurncyRateText(false,tstr,GRr.FrRate,GRr.ToRateB1,GRr.ToRateB2,GRr.BaseRate1,GRr.BaseRate2);                    
//            OUTFORMFIELD("F_BASERATE",tstr);
//          end;  
          
          OUTFORMFIELD("F_FAKTKOMMENTAR",GRr.Comment);

          OUTFORMFIELD("F_LOCATION",GRr.Location);
          if (FIELDINFORM("F_LOCATIONNAME")) then begin
            OUTFORMFIELD("F_LOCATIONNAME",Locr.Name);
          end;  
          if (FIELDINFORM("F_LOCCONTACT")) then begin
            OUTFORMFIELD("F_LOCCONTACT",Locr.Contact);
          end;  
          if (FIELDINFORM("F_LOCPHONE")) then begin
            OUTFORMFIELD("F_LOCPHONE",Locr.Phone);
          end;  
          if (FIELDINFORM("F_LOCFAX")) then begin
            OUTFORMFIELD("F_LOCFAX",Locr.Fax);
          end;  
          if (FIELDINFORM("F_LOCEMAIL")) then begin
            OUTFORMFIELD("F_LOCEMAIL",Locr.Email);
          end;  
          if (FIELDINFORM("F_LOCADDRESS")) then begin
            OUTFORMFIELD("F_LOCADDRESS",Locr.Addr0);
            OUTFORMFIELD("F_LOCADDRESS",Locr.Addr1);
            OUTFORMFIELD("F_LOCADDRESS",Locr.Addr2);
            OUTFORMFIELD("F_LOCADDRESS",Locr.Addr3);
            OUTFORMFIELD("F_LOCADDRESS",Locr.Addr4);
          end;  
          OUTFORMFIELD("F_FAKTURADATUM",GRr.TransDate);
          OUTFORMFIELD("F_FAKTURADATUMHIJRI",ConvertDate(kCalendarGregorian,GRr.TransDate,kCalendarHijri));
          OUTFORMFIELD("F_BAGGER",GRr.Bagger);
          Userr.Code = GRr.Bagger;
          ReadFirstMain(Userr,1,true);
          OUTFORMFIELD("F_BAGGERNAME",Userr.Name);
          OUTFORMFIELD("F_SALESCLERK",GRr.Supervisor);
          Userr.Code = GRr.Supervisor;
          ReadFirstMain(Userr,1,true);
          OUTFORMFIELD("F_SALESCLERKNAME",Userr.Name);
          OUTFORMFIELD("F_SALJARE",GRr.SalesMan);
          Userr.Code = GRr.SalesMan;
          ReadFirstMain(Userr,1,true);
          OUTFORMFIELD("F_SALJARNAMN",Userr.Name);
          OUTFORMFIELD("F_TRANSTIME",GRr.TransTime);
          OutAddress("F_ADRESS",GRr.Addr0,GRr.Addr1,GRr.Addr2,GRr.Addr3,GRr.InvAddr3,GRr.InvAddr4);
          OUTFORMFIELD("F_ADDR1",GRr.Addr0);
          OUTFORMFIELD("F_ADDR2",GRr.Addr1);
          OUTFORMFIELD("F_ADDR3",GRr.Addr2);
          OUTFORMFIELD("F_ADDR4",GRr.Addr3);
          OUTFORMFIELD("F_INVADDR3",GRr.InvAddr3);
          OUTFORMFIELD("F_INVADDR4",GRr.InvAddr4);
          OUTFORMFIELD("F_TERMINALID",GRr.TerminalID);
          OUTFORMFIELD("F_MACHINE",GRr.LocalMachineCode);
          PrintGiftReceiptRows(RepSpec,Docr,GRr,LangNrr,SFb);
          CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoGiftReceiptForm:;  
  return;
end;
