external procedure PrintCurrencyCode(string,string);
external function string 255 GetOffSerNrIVJournalID(LongInt,string,string);
external procedure PrintCountryCode(string,string);
external procedure PrintBankData(string);
external procedure FindSalesExVat(record TaxMatrixVc,string,val,Integer,Integer,var val);
external function string 255 SAFTHashControl(string);
external function roundmode SetRoundModeD(Integer);
external function roundmode DefaultRoundMode();
external procedure PrintSignature(string);
external procedure PrintPersonsCustomerDetails(string);
external procedure PrintValToTextBaseCur(val,Integer,string,Integer,var string);
external procedure PrintUserDefinedCustomerFields(string,string,string,string,string,Date,Date,Date,val,val,val);
external procedure PrintUserDefinedItemFields(string,string,string,string,string,Date,Date,Date,val,val,val);
external procedure OutAddress(string,string,string,string,string,string,string);
external function string 255 GetVarietyComment(string,string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure OYSetFax(record CUVc,record OYVc);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure SelectUnitText(string,string,var string);
external procedure GetShipModeText(string,string,var string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure GetPayDealText(string,string,var string);
external procedure GetUserEmail(string,var string);
external procedure GetShipDealText(string,string,var string);
external procedure GetUserName(string,var string);
external procedure GetPRName(string,var string);
external procedure GetItemCommodityCode(string,var string);
external procedure GetAlternativeItemCode(string,var string);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure BuildKSerno(LongInt,string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure Mul2VAT(string,val,var val,var val,Integer);
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external function Boolean GetVATincl(string,var val,var Integer);
external procedure ValToText(val,Integer,string,string,var string);
external procedure PrintNote(record NotepadVc);
external procedure GetVATdouble(string,var val,var val,Integer);
external procedure SetRowStyle(record Docvc,string,Integer,string,val);
external procedure PrintBranchData(string);
external function string 255 GetJwl_CustomerName(string);

function
Integer CountQuotationRows(record OYVc OYr)
BEGIN
  row OYVc OYrw;
  Integer i,rwcnt;
  rwcnt = MatRowCnt(OYr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OYr,i,OYrw);
    if (OYrw.stp==10) then begin
      rwcnt = i;
      goto LCountQuotationRows;
    end;
  end;
LCountQuotationRows:;
 CountQuotationRows = rwcnt;
  RETURN;
END;

procedure OYPrintNote(record OYVc OYr,string argumentstr)
BEGIN
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer notenr;

  notenr = 1;
  while (ReadRecordLink(OYr,notenr,Noter,RLr)) begin
    if ((argumentstr==RLr.Comment) or (blank(argumentstr))) then begin
      PrintNote(Noter);
      goto LOYPrintNote;
    end;
    notenr = notenr + 1;
  end;
LOYPrintNote:;  
  RETURN;
END;

procedure CalcSubtotWithoutDisc(record OYVc OYr,var val res)
BEGIN
  row OYVc OYrw;  
  Integer i,rwcnt;
  
  res = 0;
  rwcnt = MatRowCnt(OYr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OYr,i,OYrw);
    if (OYrw.stp==1) then begin
      res = res + OYrw.Quant*OYrw.Price;
    end;  
  end;    
  RETURN;        
END;

procedure CalcOYTotVolume(record OYVc OYr,var val res)
BEGIN
  record INVc INr;
  row OYVc OYrw;  
  Integer i,rwcnt;

  res = blankval;
  rwcnt = MatRowCnt(OYr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OYr,i,OYrw);
    if (OYrw.stp==1) or (OYrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
      INr.Code = OYrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
      end;
      res = res + OYrw.Quant*INr.Volume;
    end;  
  end;  
  RETURN;        
END;

procedure CalcOYTotWeight(record OYVc OYr,var val res)
BEGIN
  record INVc INr;
  row OYVc OYrw;
  Integer i,rwcnt;

  res = blankval;
  rwcnt = MatRowCnt(OYr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OYr,i,OYrw);
    if (OYrw.stp==1) or (OYrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
      INr.Code = OYrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
      end;
      res = res + OYrw.Quant*INr.Weight;
    end;  
  end;  
  RETURN;        
END;

procedure OYVat(Integer stp,Integer incvat,Integer exportflag,string vatcode,val rowsump,
                var val vatprcp,var val vatvalp,var val vatexclprc,var val vatinclprc)
BEGIN
  Integer rn;
  
  vatprcp = blankval;
  vatvalp = blankval;
  vatexclprc = blankval;
  vatinclprc = blankval;
  if (stp==1) then begin
    switch (incvat) begin
      case 0:
        if ((exportflag==0) or (exportflag==3) or (exportflag==4)) then begin
          Mul2VAT(vatcode,rowsump,vatvalp,vatprcp,incvat);
          if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
          end;
          if (GetVATincl(vatcode,vatinclprc,rn)) then begin
          end;
        end;
      otherwise 
        Mul2VAT(vatcode,rowsump,vatvalp,vatprcp,incvat);
        if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
        end;
        if (GetVATincl(vatcode,vatinclprc,rn)) then begin
        end;
    end;
  end;
  RETURN;
END;

procedure PrintQuotationRows(record RcVc RepSpec,record DocVc Docr,record OYVc OYr,record LangNrVc LangNrr,record SysFormatBlock SFb,Integer rwcnt,var val totdiscount)
BEGIN
  Integer i,rownr;
  row OYVc OYrw;
  string 255 tstr;
  val t,t1,t2,v;
  record INVc INr;
  val vatprc,vatval,vatexclprc,vatinclprc;
  record GeneralOptionBlock GenOptRec;
  record MainStockBlock MSb;
  record RegionVc Regionr;
  record TaxMatrixVc TMr;
  record RoundBlock Roundb;

  BlockLoad(GenOptRec);
  BlockLoad(MSb);
  BlockLoad(Roundb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OYr,i,OYrw);
    SetRowStyle(Docr,"OYVc",OYrw.stp,OYrw.ArtCode,OYrw.Sum);
    switch (OYrw.stp) begin
      case kInvoiceRowTypeStructuredItemComponent:
        goto LkInvoiceRowTypeNormal;
      case kInvoiceRowTypeNormal:
  LkInvoiceRowTypeNormal:;    
        if (ReadFirstItem(OYrw.ArtCode,INr,true,false)) then begin
        end;
        OUTFORMFIELD("F_CUSTARTNR",OYrw.CustArtCode);
        OUTFORMFIELD("F_ARTNR",OYrw.ArtCode);
        OUTFORMFIELD("F_ARTNR2",OYrw.ArtCode);
        OUTFORMFIELD("F_ARTCODEVARIETIES",GetVarietyComment(OYrw.ArtCode,INr.Code));
        OUTFORMFIELD("F_ARTCODENOVARIETIES",INr.Code);
        OUTFORMFIELD("F_CPSCODE",INr.CPSCode);

        v = OYrw.vRebate;
        GetFieldArgument(Docr,F_RABATT,tstr);
        if (nonblank(tstr)) then begin
          if (blank(OYrw.ArtCode)) then begin
            PrintValue("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SFb,false);
          end else begin
            PrintValueInclZero("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SFb,false);
          end;
        end else begin
          if (blank(OYrw.ArtCode)) then begin
            PrintValue("F_RABATT",v,M41Val,LangNrr,SFb,false);
          end else begin
            PrintValueInclZero("F_RABATT",v,M41Val,LangNrr,SFb,false);
          end;
        end;

        OUTFORMFIELD("F_MOMSKOD",OYrw.VATCode);
        OUTFORMFIELD("F_UNITFACTQUANT",OYrw.UnitFactQuant);
        OUTFORMFIELD("F_UNITCODE",OYrw.UnitCode);
        tstr = ValToString(OYrw.UnitFactPrice,M423Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_UNITFACTPRICE",tstr);
        GetItemCommodityCode(OYrw.ArtCode,tstr);
        OUTFORMFIELD("F_COMMODITYCODE",tstr);
        GetAlternativeItemCode(OYrw.ArtCode,tstr);
        OUTFORMFIELD("F_ALTERNATIVECODE",tstr);
        OUTFORMFIELD("F_ROWWIDTH",OYrw.UnitXval);
        OUTFORMFIELD("F_ROWHEIGHT",OYrw.UnitYval);
        OUTFORMFIELD("F_ROWDEPTH",OYrw.UnitZval);
        if (FIELDINFORM("F_ARTNRBC39")) then begin
          ItemBC39(OYrw.ArtCode,tstr);
          OUTFORMFIELD("F_ARTNRBC39",tstr);
        end;  
        if (FIELDINFORM("F_ARTNRBCEAN")) then begin
          ItemBCEAN(OYrw.ArtCode,tstr);
          OUTFORMFIELD("F_ARTNRBCEAN",tstr);
        end;  
        if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
          ItemBCEAN13(OYrw.ArtCode,tstr);      
          OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
        end;  
        OUTFORMFIELD("F_SPECIFIKATION",OYrw.Spec);
        tstr = ValToString(OYrw.Sum,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_BELOPP",tstr);
        tstr = ValToString(OYrw.Quant,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_ANTAL",tstr);
        if (MSb.UnitConvCalc==0) then begin
          tstr = ValToString(OYrw.Quant*INr.UnitCoefficient,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        end else begin
          tstr = ValToString(OYrw.Quant/INr.UnitCoefficient,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        end;
        OUTFORMFIELD("F_ANTAL2",tstr);
        tstr = ValToString(OYrw.Price,M423Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_APRIS",tstr);
        if (OYrw.PriceFactor==blankval) then begin
          tstr = "";
        end else begin
          tstr = OYrw.PriceFactor;
        end;
        OUTFORMFIELD("F_PRICEFACTOR",tstr);
        if (OYrw.PriceFactor!=blankval) then begin
          t = OYrw.Price/OYrw.PriceFactor;
        end else begin
          t = OYrw.Price;
        end;
        tstr = ValToString(t,M423Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_UNITPRICE",tstr);      
        if (FIELDINFORM("F_ENHET")) then begin
          SelectUnitText(OYr.LangCode,INr.Unittext,tstr);
          OUTFORMFIELD("F_ENHET",tstr);
        end;
        OUTFORMFIELD("F_VOLUME",INr.Volume);      
        OUTFORMFIELD("F_WIDTH",INr.Width);      
        OUTFORMFIELD("F_HEIGHT",INr.Height);      
        OUTFORMFIELD("F_DEPTH",INr.Depth);      
        OUTFORMFIELD("F_WEIGHT",INr.Weight);      
        OUTFORMFIELD("F_ROWWEIGHT",OYrw.Quant*INr.Weight);      
        OUTFORMFIELD("F_ROWVOLUME",OYrw.Quant*INr.Volume);  
        tstr = -OYrw.vRebate;
        if (nonblank(tstr)) then begin
          tstr = tstr & "%";
        end;
        OUTFORMFIELD("F_RABATTSPEC",tstr);      
        OUTFORMFIELD("F_AMOUNTROUNDED",Round(OYrw.Sum,SetRoundModeD(0)));      
        t = OYrw.Sum*OYr.DiscPerc;
        t = t/100;
        OUTFORMFIELD("F_DIFFROWVALUE",t);      
        if (nonblank(OYrw.ArtCode)) then begin
          rownr = rownr + 1;
          OUTFORMFIELD("F_ROWNR",rownr);      
        end;  
        CalcSum(1,OYrw.Price,OYrw.PriceFactor,OYrw.vRebate,t,GenOptRec.UseDiscount);
        tstr = ValToString(t,M423Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);      
        if (t==0) then begin
          t = blankval;
        end;
        OUTFORMFIELD("F_ROWPRICEREBATE",t);         
        t = MulRateToBase1(OYr.CurncyCode,OYrw.Price,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
        if (t==0) then begin
          t = blankval;
        end;
        OUTFORMFIELD("F_PRICEBASECURNCY1",t);      
        t = MulRateToBase2(OYr.CurncyCode,OYrw.Price,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
        if (t==0) then begin
          t = blankval;
        end;
        OUTFORMFIELD("F_PRICEBASECURNCY2",t);
        t = MulRateToBase1(OYr.CurncyCode,OYrw.Sum,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
        if (t==0) then begin
          t = blankval;
        end;
        OUTFORMFIELD("F_ROWPRICEBASECURNCY1",t);
        t = MulRateToBase2(OYr.CurncyCode,OYrw.Sum,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
        if (t==0) then begin
          t = blankval;
        end;
        OUTFORMFIELD("F_ROWPRICEBASECURNCY2",t);
        BuildKSerno(OYr.SerNr,OYrw.ArtCode,tstr);
        OUTFORMFIELD("F_KFAKTURANR",tstr);
        OYVat(OYrw.stp,OYr.InclVAT,OYr.ExportFlag,OYrw.VATCode,OYrw.Sum,vatprc,vatval,vatexclprc,vatinclprc);
        if (HasLocalization("POL")) then begin
          tstr = "";
          if (nonblank(OYrw.Sum)) then begin
            if (nonblank(vatinclprc)) then begin
              if ((vatinclprc==0) and (nonblank(vatexclprc))) then begin
                tstr = USetStr(8111);
              end;
            end;
            if ((vatinclprc==0) and (nonblank(vatinclprc))) then begin
              if (blank(vatexclprc)) then begin
                tstr = USetStr(8110);
              end;
            end;
          end;
          if (blank(tstr)) then begin
            tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          end;
          if (blank(tstr)) then begin
            tstr = USetStr(1244);
          end;
          OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);    
        end else begin
          if (nonblank(OYrw.Sum)) then begin
            tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
            if (blank(tstr)) then begin
              tstr = USetStr(1244);
            end else begin
              tstr = tstr & "%";
            end;
            OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);
          end;
        end;


        if (FIELDINFORM("F_BASE1ROWVATVAL")) then begin
          t = MulRateToBase1(OYr.CurncyCode,vatval,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
          if (t==0) then begin
            t = blankval;
          end;
          OUTFORMFIELD("F_BASE1ROWVATVAL",t);    
        end;
        if (FIELDINFORM("F_BASE2ROWVATVAL")) then begin
          t = MulRateToBase2(OYr.CurncyCode,vatval,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
          if (t==0) then begin
            t = blankval;
          end;
          OUTFORMFIELD("F_BASE2ROWVATVAL",t);    
        end;
        if (FIELDINFORM("F_DIFFTOTVALUE")) then begin
          if (OYrw.Sum!=blankval) then begin
            t = vatexclprc*OYr.DiscPerc;
            t = t/100;
            if (t==0) then begin
              t = blankval;
            end;
            tstr = t;
            if (blank(tstr)) then begin
              tstr = USetStr(1244);
            end;  
            OUTFORMFIELD("F_DIFFTOTVALUE",tstr);
          end;
        end;
        if (OYrw.Sum!=blankval) then begin
          MulVATIV(OYrw.VATCode,OYrw.Sum,t,t1,OYr.InclVAT,OYr.NoTAXonVAT);
          OUTFORMFIELD("F_ROWTAXVAL",t1);    
          OUTFORMFIELD("F_ROWVATVAL",t);
          t1 = t + OYrw.Sum + t1;          
          OUTFORMFIELD("F_ROWSUMTOTAL",t1);    
          t = t + OYrw.Sum;          
          OUTFORMFIELD("F_ROWSUMWITHVAT",t);    
          GetVATdouble(OYrw.VATCode,t,t1,OYr.InclVAT);
          PrintValue("F_ROWVATPRC",t,M4Val,LangNrr,SFb,false);
        end;
        OUTFORMFIELD("F_TIMECLASS",OYrw.TimeClass);

        if (FIELDINFORM("F_ROWTOT")) then begin
          v = OYrw.Sum;
          if (OYr.InclVAT==0) then begin
            v = v + vatval;
          end;
          if ((nonblank(vatval)) or (nonblank(OYrw.Sum))) then begin
            GetFieldArgument(Docr,F_ROWTOT,tstr);
            if (nonblank(tstr)) then begin
              if (blank(OYrw.ArtCode)) then begin
                PrintValue("F_ROWTOT",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,false);
              end else begin
                PrintValueInclZero("F_ROWTOT",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,false);
              end;
            end else begin
              if (blank(OYrw.ArtCode)) then begin
                PrintValue("F_ROWTOT",v,M4Val,LangNrr,SFb,false);
              end else begin
                PrintValueInclZero("F_ROWTOT",v,M4Val,LangNrr,SFb,false);
              end;
            end;
          end;
        end;
        
        if (FIELDINFORM("F_ROWBASE")) then begin
          v = OYrw.Sum;
          if (OYr.InclVAT>0) then begin
            if (v!=0) then begin
              v = v - vatval;
            end;
          end;
          GetFieldArgument(Docr,F_ROWBASE,tstr);
          if (v==0) then begin v = blankval; end;          
          if (nonblank(tstr)) then begin
            if (OYrw.Sum==0) then begin v = blankval; end;          
            PrintValueInclZero("F_ROWBASE",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,false);
          end else begin
            if (OYrw.Sum==0) then begin v = blankval; end;          
            PrintValueInclZero("F_ROWBASE",v,M4Val,LangNrr,SFb,false);
          end;
        end;
        if (FIELDINFORM("F_BASE1ROWBASE")) then begin
          v = OYrw.Sum;
          if (OYr.InclVAT>0) then begin
            if (v!=0) then begin
              v = v - vatval;
            end;
          end;
          GetFieldArgument(Docr,F_BASE1ROWBASE,tstr);
          if (nonblank(tstr)) then begin
            t = Round(v,SetRoundModeD(StringToInt(tstr)));
            t = MulRateToBase1(OYr.CurncyCode,t,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
            if (blank(OYrw.Sum)) then begin
              if (t==0) then begin t = blankval; end;
            end;
            PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,false);
          end else begin
            t = MulRateToBase1(OYr.CurncyCode,v,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
            if (blank(OYrw.Sum)) then begin
              if (t==0) then begin t = blankval; end;          
            end;
            PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,false);
          end;
        end;
        if (FIELDINFORM("F_BASE2ROWBASE")) then begin
          v = OYrw.Sum;
          if (OYr.InclVAT>0) then begin
            if (v!=0) then begin
              v = v - vatval;
            end;
          end;
          GetFieldArgument(Docr,F_BASE2ROWBASE,tstr);
          if (nonblank(tstr)) then begin
            t = Round(v,SetRoundModeD(StringToInt(tstr)));
            t = MulRateToBase2(OYr.CurncyCode,t,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
            if (t==0) then begin t = blankval; end;          
            PrintValueInclZero("F_BASE2ROWBASE",t,M4Val,LangNrr,SFb,false);
          end else begin
            t = MulRateToBase2(OYr.CurncyCode,v,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
            if (t==0) then begin t = blankval; end;          
            PrintValueInclZero("F_BASE2ROWBASE",t,M4Val,LangNrr,SFb,false);
          end;
        end;
        
        UnpackRowFieldMatrix(OYrw,"TaxMatrix",TMr);
        if (FIELDINFORM("F_APRISEXCLVAT")) then begin
          FindSalesExVat(TMr,OYrw.VATCode,OYrw.Price,OYr.InclVAT,OYr.NoTAXonVAT,t);
          GetFieldArgument(Docr,F_APRISEXCLVAT,tstr);
          if (nonblank(tstr)) then begin
            t = Round(t,SetRoundModeD(StringToInt(tstr)));
            PrintValueInclZero("F_APRISEXCLVAT",t,M423Val,LangNrr,SFb,false);
          end else begin
            if (Roundb.Discount==0) then begin
              t = Round(t,SetRoundModeD(3));
            end else begin
              t = Round(t,DefaultRoundMode);
            end;
            PrintValueInclZero("F_APRISEXCLVAT",t,M423Val,LangNrr,SFb,false);
          end;  
        end;
        if (FIELDINFORM("F_BASPRIS")) then begin
          if (OYr.InclVAT==0) then begin
            MulVATIV(OYrw.VATCode,OYrw.Price,t,t2,0,0);
            t = t + OYrw.Price;
          end else begin
            t = OYrw.Price*OYrw.vRebate;
            t = t/100;
            v = OYrw.Price - t;
            t = vatval/OYrw.Quant;
            t = v - t;
          end;
          GetFieldArgument(Docr,F_BASPRIS,tstr);
          if (nonblank(tstr)) then begin
            PrintValue("F_BASPRIS",Round(t,SetRoundModeD(StringToInt(tstr))),M423Val,LangNrr,SFb,false);
          end else begin
            GetFieldArgument(Docr,F_BASPRIS,tstr);
            if (nonblank(tstr)) then begin
              PrintValue("F_BASPRIS",Round(t,SetRoundModeD(StringToInt(tstr))),M423Val,LangNrr,SFb,false);
            end else begin
              PrintValue("F_BASPRIS",t,M423Val,LangNrr,SFb,false);
            end;
          end;
        end;
        totdiscount = totdiscount + (OYrw.Quant*OYrw.Price - OYrw.Sum);        
        PrintUserDefinedItemFields(INr.UserStr1,INr.UserStr2,INr.UserStr3,INr.UserStr4,INr.UserStr5,INr.UserDate1,INr.UserDate2,INr.UserDate3,INr.UserVal1,INr.UserVal2,INr.UserVal3);
        OutFormImage(INr);
        EndFormRow;
      case kInvoiceRowTypeSubtotal:
        PrintValueInclZero("F_BELOPP",OYrw.Sum,M4Val,LangNrr,SFb,false);
        PrintValueInclZero("F_SUBTOTALAMOUNT",OYrw.Sum,M4Val,LangNrr,SFb,false);
        OUTFORMFIELD("F_SPECIFIKATION",OYrw.Spec);    
        EndFormRow;
      case 10:
        goto LPrintQuotationRows;
      case 17:
        OUTFORMFIELD("F_SPECIFIKATION",OYrw.Spec);    
        EndFormRow;
      case kInvoiceRowTypePerceptionTax:
        OUTFORMFIELD("F_ROWNAME",USetStr(8108));
        OUTFORMFIELD("F_REGIONROW",OYrw.Region);
        Regionr.Code = OYrw.Region;
        ReadFirstMain(Regionr,1,true);
        OUTFORMFIELD("F_REGIONNAMEROW",Regionr.Name);
        OUTFORMFIELD("F_SPECIFIKATION",OYrw.Spec); 
        OUTFORMFIELD("F_SALESACC",OYrw.SalesAcc);
        PrintValue("F_TAX2PRC",OYrw.TAX2Prc,M4Val,LangNrr,SFb,false);          
        PrintValue("F_BELOPP",OYrw.Sum,M4Val,LangNrr,SFb,false);        
        EndFormRow;        
    end;
  end;  
LPrintQuotationRows:;  
  RETURN;
END;

procedure PrintOY(record RcVc RepSpec,record SysFormatBlock SFb,string formcode,record OYVc OYr,record LangNrVc LangNrr)
begin
  record DocVc Docr;
  record PRVc PRr;
  record LocationVc Locr;
  Integer i,rwcnt,rwcnt2;
  record CUVc CUr;
  record IIBlock IIRec;
  string 255 tstr;
  val t;
  val totdiscount;

  Docr.Code = formcode;
  ReadFirstMain(Docr,1,true);
  CommonDocumentFields(RepSpec);          
  rwcnt2 = CountQuotationRows(OYr);
  NumberofDocumentPages(formcode,rwcnt2);
  CUr.Code = OYr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;        
  PrintUserDefinedCustomerFields(CUr.UserStr1,CUr.UserStr2,CUr.UserStr3,CUr.UserStr4,CUr.UserStr5,CUr.UserDate1,CUr.UserDate2,CUr.UserDate3,CUr.UserVal1,CUr.UserVal2,CUr.UserVal3);
  PrintSignature(OYr.Sign);
  OUTFORMFIELD("F_KUNDNAMN",OYr.Addr0);        
  OUTFORMFIELD("F_DISCSUM",OYr.DiscSum);        
  OUTFORMFIELD("F_DISCPERC",OYr.DiscPerc);        
  OUTFORMFIELD("F_RECIPIENTGLN",OYr.RecipientGLN);
  OUTFORMFIELD("F_GOODSRECIPIENTGLN",OYr.DelRecipientGLN);
  OUTFORMFIELD("F_VATNR",OYr.VATNr);        
  OUTFORMFIELD("F_COMMENT",OYr.Comment);        
  OUTFORMFIELD("F_KOMMENTAR",OYr.Comment);
  OUTFORMFIELD("F_KOMMENTAR",OYr.Comment2);
  OUTFORMFIELD("F_KOMMENTAR",OYr.Comment3);
  OUTFORMFIELD("F_KOMMENTAR",OYr.Comment4);
  OUTFORMFIELD("F_SERVICEORDER",OYr.SVOSerNr);
  PrintBankData(OYr.BankCode);
  OUTFORMFIELD("F_OFFERTDATUM",OYr.OYDate);        
  OUTFORMFIELD("F_OFFERTDATUMHIJRI",ConvertDate(kCalendarGregorian,OYr.OYDate,kCalendarHijri));
  OUTFORMFIELD("F_NUMMER",OYr.SerNr);        
  tstr = ValToString(OYr.Sum1,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMMA",tstr);      
  tstr = ValToString(OYr.Sum3,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_MOMS",tstr);      
  tstr = ValToString(OYr.Sum4,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_ATTBETALA",tstr);       
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    ValToText(OYr.Sum4,M4Val,OYr.CurncyCode,OYr.LangCode,tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
  end;
  if (FIELDINFORM("F_AMOUNTINTEXTBASECUR1")) then begin
    t = MulRateToBase1(OYr.CurncyCode,OYr.Sum4,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
    PrintValToTextBaseCur(t,M4Val,OYr.LangCode,1,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXTBASECUR1",tstr);  
  end;  
  if (FIELDINFORM("F_AMOUNTINTEXT")) then begin
    ValToText(OYr.Sum4,M4Val,OYr.CurncyCode,OYr.LangCode,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXT",tstr);        
  end;
  if (FIELDINFORM("F_BASE1SUMMA")) then begin
    t = MulRateToBase1(OYr.CurncyCode,OYr.Sum1,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE1SUMMA",tstr);
  end;
  if (FIELDINFORM("F_BASE2SUMMA")) then begin
    t = MulRateToBase2(OYr.CurncyCode,OYr.Sum1,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE2SUMMA",tstr);
  end;
  if (FIELDINFORM("F_BASE1BETALA")) then begin
    t = MulRateToBase1(OYr.CurncyCode,OYr.Sum4,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE1BETALA",tstr);
  end;
  if (FIELDINFORM("F_BASE2BETALA")) then begin
    t = MulRateToBase2(OYr.CurncyCode,OYr.Sum4,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE2BETALA",tstr);
  end;

  OUTFORMFIELD("F_KUNDNR",OYr.CustCode);        
  OUTFORMFIELD("F_DEPARTMENT",CUr.Department); 
  PrintCountryCode("F_CUCOUNTRYCODE",CUr.CountryCode)
  GetUserEmail(OYr.SalesMan,tstr);       
  OUTFORMFIELD("F_EMAIL",tstr);        
  OUTFORMFIELD("F_CUSTOMEREMAIL",CUr.eMail);     
  OUTFORMFIELD("F_AMOUNTWITHOUTDISCSUM",OYr.Sum4-OYr.DiscSum);        
  OUTFORMFIELD("F_AVSNAME",OYr.ShipAddr0);        
  OUTFORMFIELD("F_AVSADRESS1",OYr.ShipAddr1);        
  OUTFORMFIELD("F_AVSADRESS2",OYr.ShipAddr2);        
  OUTFORMFIELD("F_AVSADRESS3",OYr.ShipAddr3);        
  OUTFORMFIELD("F_AVSADRESS4",OYr.DelAddr3);        
  OUTFORMFIELD("F_AVSADRESS5",OYr.DelAddr4); 
  if (FIELDINFORM("F_VILLKOR")) then begin
    GetPayDealText(OYr.PayDeal,OYr.LangCode,tstr);
    OUTFORMFIELD("F_VILLKOR",tstr);
  end;                   
  OUTFORMFIELD("F_VARREFERENS",OYr.OurContact);        
  OUTFORMFIELD("F_ERREFERENS",OYr.CustContact);        
  OUTFORMFIELD("F_PLANLEVDATUM",OYr.PlanShip);        
  OUTFORMFIELD("F_LEVSATT",OYr.ShipMode); 
  if (FIELDINFORM("F_LEVSATTTEXT")) then begin
    GetShipModeText(OYr.ShipMode,OYr.LangCode,tstr);
    OUTFORMFIELD("F_LEVSATTTEXT",tstr);
  end;
  if (OYr.DaysToDelivery>0) then begin
    OUTFORMFIELD("F_DAYSTODELIERY",OYr.DaysToDelivery);
  end;
  OUTFORMFIELD("F_SALJARE",OYr.SalesMan);        
  PrintCurrencyCode("F_VALUTA",OYr.CurncyCode);
  OUTFORMFIELD("F_SHIPTERM",OYr.ShipDeal);        
  if (FIELDINFORM("F_SHIPTERMTEXT")) then begin
    GetShipDealText(OYr.ShipDeal,OYr.LangCode,tstr);
    OUTFORMFIELD("F_SHIPTERMTEXT",tstr);
  end;  
  OUTFORMFIELD("F_GILTIGTDATUM",OYr.ValidUntilDate);      
  OUTFORMFIELD("F_GILTIGTDATUMHIJRI",ConvertDate(kCalendarGregorian,OYr.ValidUntilDate,kCalendarHijri));
  if (FIELDINFORM("F_SALJARNAMN")) then begin
    GetUserName(OYr.SalesMan,tstr);
    OUTFORMFIELD("F_SALJARNAMN",tstr);
  end;  
  PrintPersonsCustomerDetails(OYr.SalesMan);
  PrintBranchData(OYr.BranchID);
  OUTFORMFIELD("F_ADRESSATT",OYr.Addr0);
  OUTFORMFIELD("F_ADRESSATT",OYr.CustContact);
  OUTFORMFIELD("F_ADRESSATT",OYr.Addr1);
  OUTFORMFIELD("F_ADRESSATT",OYr.Addr2);
  OUTFORMFIELD("F_ADRESSATT",OYr.Addr3);
  OUTFORMFIELD("F_ADRESSATT",OYr.InvAddr3);
  OUTFORMFIELD("F_ADRESSATT",OYr.InvAddr4);
  OutAddress("F_ADRESS",OYr.Addr0,OYr.Addr1,OYr.Addr2,OYr.Addr3,OYr.InvAddr3,OYr.InvAddr4);
  OutAddress("F_LEVADRESS",OYr.ShipAddr0,OYr.ShipAddr1,OYr.ShipAddr2,OYr.ShipAddr3,OYr.DelAddr3,OYr.DelAddr4);
  OUTFORMFIELD("F_ADRESSNAMN",OYr.Addr0);
  OUTFORMFIELD("F_ADDR1",OYr.CustContact);
  OUTFORMFIELD("F_ADDR2",OYr.Addr1);
  OUTFORMFIELD("F_ADDR3",OYr.Addr2);
  OUTFORMFIELD("F_ADDR4",OYr.Addr3);
  OUTFORMFIELD("F_INVADDR3",OYr.InvAddr3);
  OUTFORMFIELD("F_INVADDR4",OYr.InvAddr4);
  if (blank(OYr.Fax)) then begin
    tstr = CUr.Fax;
  end else begin
    tstr = OYr.Fax;
  end;  
  OUTFORMFIELD("F_KUNDFAX",tstr);
  OUTFORMFIELD("F_MOBILE",CUr.Mobile);
  if (blank(OYr.Phone)) then begin
    tstr = CUr.Phone;
  end else begin
    tstr = OYr.Phone;
  end;  
  OUTFORMFIELD("F_KUNDTEL",tstr);
  if (FIELDINFORM("F_RANTASATS")) then begin
    OUTFORMFIELD("F_RANTASATS",IIRec.IntRate);
  end;
  OUTFORMFIELD("F_NETTO",Round(OYr.Sum1 - OYr.Sum3,DefaultRoundMode));
  OUTFORMFIELD("F_NETTOROUNDED",Round(OYr.Sum1 - OYr.Sum3,SetRoundModeD(0)));
  OUTFORMFIELD("F_PROJEKTNUMMER",OYr.PRCode);
  GetPRName(OYr.PRCode,tstr);
  OUTFORMFIELD("F_PROJECTNAME",tstr);

  if (FIELDINFORM("F_TOTVOLUME")) then begin
    CalcOYTotVolume(OYr,t);
    OUTFORMFIELD("F_TOTVOLUME",t);
  end;
  if (FIELDINFORM("F_TOTWEIGHT")) then begin
    CalcOYTotWeight(OYr,t);
    OUTFORMFIELD("F_TOTWEIGHT",t);
  end;      
  if (FIELDINFORM("F_SUBTOTALWITHOUTDISCOUNT")) or (FIELDINFORM("F_TOTALDISCOUNT")) then begin
    CalcSubtotWithoutDisc(OYr,t);
    tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_SUBTOTALWITHOUTDISCOUNT",tstr);
    tstr = ValToString(t-OYr.Sum1,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_TOTALDISCOUNT",tstr);
  end;
  tstr = ValToString(OYr.SumTime,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMTIME",tstr);
  tstr = ValToString(OYr.SumMaterial,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMMATERIAL",tstr);
  tstr = ValToString(OYr.SumStocked,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMSTOCKED",tstr);
  tstr = ValToString(OYr.SumOther,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMOTHER",tstr);
  if (FIELDINFORM("F_NOTE")) then begin
    GetFieldArgument(Docr,F_NOTE,tstr);
    OYPrintNote(OYr,tstr);
  end;
  PrintQuotationRows(RepSpec,Docr,OYr,LangNrr,SFb,rwcnt2,totdiscount);
  OUTFORMFIELD("F_CLASS",OYr.QuoteClass);      
  OUTFORMFIELD("F_TAXSUM",OYr.TAX1Sum);          
  if (OYr.InclVAT==0) then begin
    t = OYr.Sum3+OYr.Sum1;
  end else begin
    t = OYr.Sum1;
  end;
  OUTFORMFIELD("F_SUBTOTALWITHVAT",t);          
  OYSetFax(CUr,OYr);
  if (FIELDINFORM("F_PROJECTTEXT")) then begin
    if (nonblank(OYr.PRCode)) then begin
      PRr.Code = OYr.PRCode;
      if (ReadFirstMain(PRr,1,true)) then begin
        OUTFORMFIELD("F_PROJECTTEXT",PRr.Desc0);
        OUTFORMFIELD("F_PROJECTTEXT",PRr.Desc1);
        OUTFORMFIELD("F_PROJECTTEXT",PRr.Desc2);
      end;
    end;
  end;
  PrintValue("F_DISCSUMTOT",totdiscount,M4Val,LangNrr,SFb,false);
  t = MulRateToBase1(OYr.CurncyCode,totdiscount,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_DISCSUMTOTBC1",t,M4Val,LangNrr,SFb,false);
  t = MulRateToBase2(OYr.CurncyCode,totdiscount,OYr.FrRate,OYr.ToRateB1,OYr.ToRateB2,OYr.BaseRate1,OYr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_DISCSUMTOTBC2",t,M4Val,LangNrr,SFb,false);
  Locr.Code = OYr.Location;
  if (ReadFirstMain(Locr,1,true)) then begin
  end;
  OUTFORMFIELD("F_LOCATION",OYr.Location);          
  OUTFORMFIELD("F_LOCATIONNAME",Locr.Name);
  OUTFORMFIELD("F_LOCCONTACT",Locr.Contact);
  OUTFORMFIELD("F_LOCPHONE",Locr.Phone);
  OUTFORMFIELD("F_LOCFAX",Locr.Fax);
  OUTFORMFIELD("F_LOCEMAIL",Locr.Email);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr0);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr1);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr2);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr3);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr4);


  if (FIELDINFORM("F_TEXT")) then begin
    if (nonblank(OYr.PRCode)) then begin
      PRr.Code = OYr.PRCode;
      if (ReadFirstMain(PRr,1,true)) then begin
        OUTFORMFIELD("F_TEXT",PRr.Text0);
        OUTFORMFIELD("F_TEXT",PRr.Text1);
        OUTFORMFIELD("F_TEXT",PRr.Text2);
        OUTFORMFIELD("F_TEXT",PRr.Text3);
        OUTFORMFIELD("F_TEXT",PRr.Text4);
        OUTFORMFIELD("F_TEXT",PRr.Text5);
        OUTFORMFIELD("F_TEXT",PRr.Text6);
        OUTFORMFIELD("F_TEXT",PRr.Text7);
        OUTFORMFIELD("F_TEXT",PRr.Text8);
        OUTFORMFIELD("F_TEXT",PRr.Text9);
      end;
    end;
  end;
  tstr = GetJwl_CustomerName(OYr.CustCode);
  OUTFORMFIELD("F_KUNDNAMNJWL",tstr);
  OutFormImage(OYr);
  return;
end;

global
procedure DoOYForm(record RcVc RepSpec,record OYVc OYr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt,rwcnt2;
  record LangNrVc LangNrr;
  record CUVc CUr;
  string 255 tstr;
  record IIBlock IIRec;
  val t;
  record SysFormatBlock SFb;
  record DocVc Docr;
  record PRVc PRr;
  record LocationVc Locr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
    
  BlockLoad(SFb);  
  BlockLoad(IIRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto L99;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = OYr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  GetLangNr(OYr.LangCode,LangNrr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,OYr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"OYVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        OUTFORMFIELD("F_DOCTYPE",USetStr(23454));
        PrintOY(RepSpec,SFb,formcode,OYr,LangNrr);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
/*//fixdoc          
    case F_SUMFORPAGE:begin
        Integer i,rwcnt;
        OYRowType OY2rw;
        m4val t2,v;
        
        rwcnt = MatRowCnt(OYVc,1,ivrp);
        SetM4ValBlank(&t);
        for (i = glDoc2p->DocRowTop;i<(glDoc2p->DocRowTop+glDoc2p->DocRowMax);i++) begin
          if (i<rwcnt) then begin
            MatRowGet(OYVc,1,ivrp,i,&OY2rw);
            if (ivrp->InclVAT==0) then
              AddM4Val(&t,&OY2rw.Sum,&t);
            else begin
              MulVAT(OY2rw.VATCode,&OY2rw.Sum,&t2,1);              
              SubM4Val(&OY2rw.Sum,&t2,&v);
              AddM4Val(&t,&v,&t);
            end;  
          end;  
        end;
        M4ToStr(&t,M4Val,res);
      end;    
      break;  
  */
L99:;
  RETURN;
END;

global
procedure DoProformaOYForm(record RcVc RepSpec,record OYVc OYr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt,rwcnt2;
  record LangNrVc LangNrr;
  record CUVc CUr;
  string 255 tstr;
  record IIBlock IIRec;
  val t;
  record SysFormatBlock SFb;
  record DocVc Docr;
  record PRVc PRr;
  record LocationVc Locr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
    
  BlockLoad(SFb);  
  BlockLoad(IIRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto L99;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = OYr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  GetLangNr(OYr.LangCode,LangNrr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,OYr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"OYVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        OUTFORMFIELD("F_DOCTYPE",USetStr(23461));
        PrintOY(RepSpec,SFb,formcode,OYr,LangNrr);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
L99:;
  RETURN;
END;
