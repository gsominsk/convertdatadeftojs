external procedure GetUserName(string,var string);
external procedure GetStateDesc(Integer,Var String);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure CommonDocumentFields(record RcVc);

procedure PrintExcurRows(record RcVc RepSpec,record ExcursionVc Excurr)
BEGIN
  Integer i,rwcnt;
  row ExcursionVc Excurrw;
  Record CUVc Profiler;
  string 255 tstr;
  val t;
  
  rwcnt = MatRowCnt(Excurr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Excurr,i,Excurrw);
    Profiler.Code = Excurrw.GuestCode;
    if (ReadFirstMain(Profiler,1,true)) then begin
      OUTFORMFIELD("F_NATIONNALITY",Profiler.Nationality);
      OUTFORMFIELD("F_PASSPORT",Profiler.PassportNr);
      if (Profiler.Gender==0) then begin
        OUTFORMFIELD("F_GENDER",USetStr(20745));
      end else begin
        OUTFORMFIELD("F_GENDER",USetStr(20746));
      end;
    end;
    OUTFORMFIELD("F_TRANSNR",i+1);          
    OUTFORMFIELD("F_SERIENR",Excurrw.JobNr);
    OUTFORMFIELD("F_GUESTCODE",Excurrw.GuestCode);
    OUTFORMFIELD("F_GUESTNAME",Excurrw.GuestName);
    OUTFORMFIELD("F_AGE",Excurrw.Age);
    OUTFORMFIELD("F_RESOURCE",Excurrw.SrcRes);
    switch (Excurrw.Status) begin
      case 0: OUTFORMFIELD("F_CONFIRM",USetStr(20748));
      case 1: OUTFORMFIELD("F_CONFIRM",USetStr(20749));
    end;    
    OUTFORMFIELD("F_ANTAL",1);
    EndFormRow;
  end;  
  RETURN;
END;

global
procedure DoExcurDocForm(record RcVc RepSpec,record ExcursionVc Excurr)
BEGIN
  record CUVc CUr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  string 255 tstr;
  val t;
  record LangNrVc LangNrr;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  
  GetLangNr("",LangNrr);  
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoExcurDocForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,Excurr.SerNr,FDrw.PrintGroupCode,
                      "",intdocnr,"ExcursionVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
          CommonDocumentFields(RepSpec);
          NumberofDocumentPages(FDrw.FPCode,MatRowCnt(Excurr));
          CommonDocumentFields(RepSpec);  
          GetStateDesc(Excurr.Status,tstr);
          OUTFORMFIELD("F_STATUS",tstr); 
          OUTFORMFIELD("F_SERNR",Excurr.SerNr);
          OUTFORMFIELD("F_TRANSDATE",Excurr.TransDate);
          OUTFORMFIELD("F_STARTTIME",Excurr.StartTime);
          OUTFORMFIELD("F_ENDTIME",Excurr.EndTime);
          OUTFORMFIELD("F_COMMENT",Excurr.Comment);
          OUTFORMFIELD("F_PERSON",Excurr.MainPersons);
          GetUserName(Excurr.MainPersons,tstr);
          OUTFORMFIELD("F_PERSNAME",tstr);
          OUTFORMFIELD("F_LEVERANTOR",Excurr.VECode);
          OUTFORMFIELD("F_LEVNAMN",Excurr.VEName);
          OUTFORMFIELD("F_RESOURCE",Excurr.ResCode);
          OUTFORMFIELD("F_EVENTTYPE",Excurr.ExcurType);
          OUTFORMFIELD("F_MAXQTY",Excurr.MaxQty);
          tstr = MatrowCnt(Excurr);
          OUTFORMFIELD("F_TOTAL",tstr);
          PrintExcurRows(RepSpec,Excurr);
          CloseForm;         
      end else begin
        printf = false;
      end;
    end else begin
      printf = false;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoExcurDocForm:;  
  RETURN;  
END;     
 
