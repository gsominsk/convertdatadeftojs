external procedure PrintCurrencyCode(string,string);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure GetItemGroup(string,var string);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external function val MulWithRateToBase2(var string,Date,val,roundmode);
external procedure GetContractClassText(string,var string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external procedure GetDateMonthInWords(Date,var string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetUserName(string,var string);
external procedure ItemBC39(string,var string);
external procedure GetUnitStr(string,string,var string);
external procedure GetPayDealText(string,string,var string);
external procedure GetShipDealText(string,string,var string);
external procedure GetShipModeText(string,string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure ValToText(val,Integer,string,string,var string);
external function val CUServiceFactor(record CUServiceVc,record COCUServiceVc);

procedure PrintHWContractText(record COCUServiceVc COCUServicer,Boolean newlin)
BEGIN
  Integer i,rwcnt;
  string 255 tstr;
  
  rwcnt = LineTextCnt(COCUServicer);
  for (i=0;i<rwcnt;i=i+1) begin
    tstr = LineTextGet(COCUServicer,i);
    OUTFORMFIELD("F_TEXT",tstr);
    if (newlin) then begin
      EndFormRow;
    end;
  end;
  RETURN;
END;

global
procedure PrintHWContractInformation(record RcVc RepSpec,record COCUServiceVc COCUServicer,record CUVc CUr)
begin
  string 255 tstr;
  val factor;
  
  OUTFORMFIELD("F_REPORTINGDATE",RepSpec.d1);
  OUTFORMFIELD("F_KUNDNAMN",COCUServicer.Addr0);
  OUTFORMFIELD("F_KUNDNR",COCUServicer.CustCode);
  OUTFORMFIELD("F_NUMMER",COCUServicer.SerNr);
  OUTFORMFIELD("F_SERNR",COCUServicer.SerNr);
  OUTFORMFIELD("F_ERREFERENS",COCUServicer.ClientContact);
  OutAddress("F_ADRESS",COCUServicer.Addr0,COCUServicer.Addr1,COCUServicer.Addr2,COCUServicer.Addr3,COCUServicer.InvAddr3,COCUServicer.InvAddr4);
  OUTFORMFIELD("F_ADDR2",COCUServicer.Addr1);
  OUTFORMFIELD("F_ADDR3",COCUServicer.Addr2);
  OUTFORMFIELD("F_ADDR4",COCUServicer.Addr3);
  OUTFORMFIELD("F_INVADDR3",COCUServicer.InvAddr3);
  OUTFORMFIELD("F_INVADDR4",COCUServicer.InvAddr4);
  OUTFORMFIELD("F_VARREFERENS",COCUServicer.OurContact);
  OUTFORMFIELD("F_KOMMENTAR",COCUServicer.InvComment);
  if (FIELDINFORM("F_SALJARNAMN")) then begin
    GetUserName(COCUServicer.SalesMan,tstr);
    OUTFORMFIELD("F_SALJARNAMN",tstr);
  end;
  OUTFORMFIELD("F_INLEVADRESS",COCUServicer.ShipAddr0);
  OUTFORMFIELD("F_INLEVADRESS",COCUServicer.ShipAddr1);
  OUTFORMFIELD("F_INLEVADRESS",COCUServicer.ShipAddr2);
  OUTFORMFIELD("F_INLEVADRESS",COCUServicer.ShipAddr3);
  OUTFORMFIELD("F_INLEVADRESS",COCUServicer.DelAddr3);
  OUTFORMFIELD("F_INLEVADRESS",COCUServicer.DelAddr4);
  OUTFORMFIELD("F_INVLEVSATT",COCUServicer.ShipMode);
  if (FIELDINFORM("F_INVLEVSATTTEXT")) then begin
    GetShipModeText(COCUServicer.ShipMode,COCUServicer.LangCode,tstr);
    OUTFORMFIELD("F_INVLEVSATTTEXT",tstr);
  end;
  OUTFORMFIELD("F_INVLEVVILLK",COCUServicer.ShipDeal);
  if (FIELDINFORM("F_INVLEVVILLKTEXT")) then begin
    GetShipDealText(COCUServicer.ShipDeal,COCUServicer.LangCode,tstr);
    OUTFORMFIELD("F_INVLEVVILLKTEXT",tstr);
  end;
  if (FIELDINFORM("F_VILLKOR")) then begin
    GetPayDealText(COCUServicer.PayDeal,COCUServicer.LangCode,tstr);
    OUTFORMFIELD("F_VILLKOR",tstr);
  end;
  PrintCurrencyCode("F_VALUTA",COCUServicer.CurncyCode);
  OUTFORMFIELD("F_KONTRAKTSDATUM",COCUServicer.CODate);
  OUTFORMFIELD("F_STARTDATUM",COCUServicer.startDate);
//  OUTFORMFIELD("F_LASTINVDATE",COCUServicer.lastInvDate);
  OUTFORMFIELD("F_ENDDATE",COCUServicer.endDate);
  if (blank(COCUServicer.ShipAddr0)) then begin
    tstr = COCUServicer.Addr0;
  end else begin
    tstr = COCUServicer.ShipAddr0;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(COCUServicer.ShipAddr0)) then begin
    tstr = COCUServicer.Addr1;
  end else begin
    tstr = COCUServicer.ShipAddr1;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(COCUServicer.ShipAddr0)) then begin
    tstr = COCUServicer.Addr2;
  end else begin
    tstr = COCUServicer.ShipAddr2;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(COCUServicer.ShipAddr0)) then begin
    tstr = COCUServicer.Addr3;
  end else begin
    tstr = COCUServicer.ShipAddr3;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(COCUServicer.ShipAddr0)) then begin
    tstr = COCUServicer.InvAddr3;
  end else begin
    tstr = COCUServicer.DelAddr3;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(COCUServicer.ShipAddr0)) then begin
    tstr = COCUServicer.InvAddr4;
  end else begin
    tstr = COCUServicer.DelAddr4;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);
  if (blank(COCUServicer.Phone)) then begin
    OUTFORMFIELD("F_KUNDTEL",CUr.Phone);
  end else begin
    OUTFORMFIELD("F_KUNDTEL",COCUServicer.Phone);
  end;
  if (blank(COCUServicer.Fax)) then begin
    OUTFORMFIELD("F_KUNDFAX",CUr.Fax);
  end else begin
    OUTFORMFIELD("F_KUNDFAX",COCUServicer.Fax);
  end;
  if (blank(COCUServicer.eMail)) then begin
    OUTFORMFIELD("F_EMAIL",CUr.eMail);
  end else begin
    OUTFORMFIELD("F_EMAIL",COCUServicer.eMail);
  end;
  OUTFORMFIELD("F_DATEDAY",GetDay(COCUServicer.TransDate));
  GetDateMonthInWords(COCUServicer.TransDate,tstr);
  OUTFORMFIELD("F_DATEMONTHINWORDS",tstr);

//  OUTFORMFIELD("F_DEPARTMENT",COr.Department);
//  OUTFORMFIELD("F_AVRUNDNING",COr.Sum0);
  OUTFORMFIELD("F_SUMMA",COCUServicer.TotalCOWorth);
  if (FIELDINFORM("F_AVTALSKLASS")) then begin
    GetContractClassText(COCUServicer.Class,tstr);
    OUTFORMFIELD("F_AVTALSKLASS",tstr);
  end;
  OUTFORMFIELD("F_PERIODLENGTH",COCUServicer.perLength);
  OUTFORMFIELD("F_FAKTURADAGAR",COCUServicer.invDays);
  if (FIELDINFORM("F_PERIODTYPE")) then begin
    if (true) then begin
      tstr = USetStr(2991);
    end else begin
      tstr = USetStr(2990);
    end;
    OUTFORMFIELD("F_PERIODTYPE",tstr);
  end;
  if (FIELDINFORM("F_FAKTURAPERIOD")) then begin
    if (COCUServicer.invDtype!=0) then begin
      tstr = USetStr(2992);
    end else begin
      tstr = USetStr(2993);
    end;
    OUTFORMFIELD("F_FAKTURAPERIOD",tstr);
  end;
//  OUTFORMFIELD("F_SUMMAMOMS",COr.Sum1 - COr.Sum2);
  OUTFORMFIELD("F_BASE1SUMMA",MulWithRateToBase1(COCUServicer.CurncyCode,CurrentDate,COCUServicer.TotalCOWorth,DefaultCurRoundOff));
  OUTFORMFIELD("F_BASE2SUMMA",MulWithRateToBase2(COCUServicer.CurncyCode,CurrentDate,COCUServicer.TotalCOWorth,DefaultCurRoundOff));
  OUTFORMFIELD("F_BASE1BETALA",MulWithRateToBase1(COCUServicer.CurncyCode,CurrentDate,COCUServicer.TotalCOWorth,DefaultCurRoundOff));
  OUTFORMFIELD("F_BASE2BETALA",MulWithRateToBase2(COCUServicer.CurncyCode,CurrentDate,COCUServicer.TotalCOWorth,DefaultCurRoundOff));
  factor = 1.00;
  if (COCUServicer.normalFactor!=0) then begin
    factor = COCUServicer.normalFactor;
  end;
  OUTFORMFIELD("F_BASE1BETALAFACTOR",MulWithRateToBase1(COCUServicer.CurncyCode,CurrentDate,COCUServicer.TotalCOWorth*factor,DefaultCurRoundOff));
  OUTFORMFIELD("F_BASE2BETALAFACTOR",MulWithRateToBase2(COCUServicer.CurncyCode,CurrentDate,COCUServicer.TotalCOWorth*factor,DefaultCurRoundOff));
//  OUTFORMFIELD("F_SUMMAEJMOMS",COr.Sum2);
//  OUTFORMFIELD("F_BASE1MOMS",MulRateToBase1(COr.CurncyCode,COr.Sum3,COr.FrRate,COr.ToRateB1,COr.ToRateB2,COr.BaseRate1,COr.BaseRate2,DefaultCurRoundOff));
//  OUTFORMFIELD("F_BASE2MOMS",MulRateToBase2(COr.CurncyCode,COr.Sum3,COr.FrRate,COr.ToRateB1,COr.ToRateB2,COr.BaseRate1,COr.BaseRate2,DefaultCurRoundOff));
//  OUTFORMFIELD("F_TOPAYEXCLFREIGHT",COr.Sum1 - COr.FrPrice + COr.Sum3);
//  OUTFORMFIELD("F_MOMS",COr.Sum3);
  OUTFORMFIELD("F_ATTBETALA",COCUServicer.TotalCOWorth);
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    ValToText(COCUServicer.TotalCOWorth,M4Val,COCUServicer.CurncyCode,COCUServicer.LangCode,tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);
  end;
  if (FIELDINFORM("F_POSNEGTEXT")) then begin
    if (COCUServicer.TotalCOWorth<0) then begin
      tstr = USetStr(1567);
    end else begin
      tstr = USetStr(1566);
    end;
    OUTFORMFIELD("F_POSNEGTEXT",tstr);
  end;
/*
  if (FIELDINFORM("F_SUMMAMOMSPLIKTIGT")) then begin
    if (COr.InclVAT>0) then begin
      tstr = COr.Sum4 - COr.Sum3 - COr.Sum2;
    end else begin
      tstr = COr.Sum1 - COr.Sum2;
    end;
    OUTFORMFIELD("F_SUMMAMOMSPLIKTIGT",tstr);
  end;
  if (FIELDINFORM("F_SUMMAMOMSPLIKTEJFRAKT")) then begin
    if (COr.InclVAT>0) then begin
      t = COr.Sum1;
    end else begin
      t = COr.Sum1 - COr.Sum2;
    end;
    tstr = t - COr.FrPrice;
    OUTFORMFIELD("F_SUMMAMOMSPLIKTEJFRAKT",tstr);
  end;
  OUTFORMFIELD("F_FRAKT",COr.FrPrice);
  OUTFORMFIELD("F_SUMFREIGHT",COr.Sum1 - COr.FrPrice);
*/

  return;
end;

procedure PrintHWContractRows(record RcVc RepSpec,record COCUServiceVc COCUServicer,record CUVc CUr,record LangNrVc LangNrr)
BEGIN
  record CUServiceVc CUServicer;
  row CUServiceVc CUServicerw;
  Integer i,rwcnt;
  string 200 ckey,tstr,sicname;
  Boolean foundf,testf;
  record SysFormatBlock SFb;
  val sicprice,sicqty,t,totrowsum,sicprice2;
  record INVc INr;
  
  BlockLoad(SFb);
  foundf = true;
  ckey = "COCUMasterPackageSerNr:" & COCUServicer.SerNr;
  CUServicer.Closed = 0;
  while (LoopKey(ckey,CUServicer,1,foundf)) begin
    testf = foundf;
    if (CUServicer.Closed!=0) then begin
      testf = false;
    end;
    if (CUServicer.PartOfPackage!=0) then begin
      testf = false; // Hmm, matter of discussion, but comment need to be more than the package comment then...
    end;
    if (nonblank(RepSpec.d1)) then begin
      if ((CUServicer.StartDate>RepSpec.d1) or (nonblank(CUServicer.EndDate) and DateInRange(RepSpec.d1,CUServicer.StartDate,CUServicer.EndDate)==false)) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      rwcnt = MatRowCnt(CUServicer);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(CUServicer,i,CUServicerw);
        if (CUServicerw.ArtCode==COCUServicer.SupportItemCode) then begin
          sicname = CUServicerw.Text;
          sicqty = sicqty + CUServicerw.InvoiceQty*CUServicer.TotFuncQty;
          CalcSum(CUServicerw.InvoiceQty*CUServicer.TotFuncQty,CUServicerw.Price,blankval,CUServicerw.vRebate,t,0);
          sicprice = sicprice + t;
        end else begin
//---- licence items
          INr.Code = CUServicer.Package;
          if (Right(CUServicer.Package,1)=="1") then begin
            INr.Code = Left(CUServicer.Package,len(CUServicer.Package)-1) & "0";
          end;
          ReadFirstMain(INr,1,true);
          OUTFORMFIELD("F_ORGITEM",INr.Code);
          OUTFORMFIELD("F_ORGITEMDESC",INr.Name);
          GetItemNameStr(1,tstr,COCUServicer.LangCode,INr.Name,INr.Code);
          OUTFORMFIELD("F_OTHERROW",tstr);
          PrintValue("F_PRIS",INr.UPrice1,M4Val,LangNrr,SFb,false);
          PrintValue("F_ROWSUMTOTAL",INr.UPrice1*CUServicerw.InvoiceQty,M4Val,LangNrr,SFb,false);
          PrintValue("F_SUMPRIS",INr.UPrice1*CUServicerw.InvoiceQty*CUServicer.TotInvQty,M4Val,LangNrr,SFb,false);
          totrowsum = totrowsum + INr.UPrice1*CUServicerw.InvoiceQty*CUServicer.TotInvQty;
          CalcSum(CUServicerw.InvoiceQty*CUServicer.TotInvQty,CUServicerw.Price,blankval,CUServicerw.vRebate,t,0);
          tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_SUMOTHER",tstr);
          sicprice2 = sicprice2 + t;

//----

          if (FIELDINFORM("F_ENHET")) then begin
            GetUnitStr(CUServicer.Package,COCUServicer.LangCode,tstr);
            OUTFORMFIELD("F_ENHET",tstr);
          end;
          OUTFORMFIELD("F_ARTNR",CUServicer.Package);
          OUTFORMFIELD("F_ARTNR2",CUServicer.Package);
          if (FIELDINFORM("F_ARTNRBC39")) then begin
            ItemBC39(CUServicer.Package,tstr);
            OUTFORMFIELD("F_ARTNRBC39",tstr);
          end;
          if (FIELDINFORM("F_ARTNRBCEAN")) then begin
            ItemBCEAN(CUServicer.Package,tstr);
            OUTFORMFIELD("F_ARTNRBCEAN",tstr);
          end;
          if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
            ItemBCEAN13(CUServicer.Package,tstr);
            OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
          end;
          GetItemGroup(CUServicer.Package,tstr);
          OUTFORMFIELD("F_ARTGRUPP",tstr);
          tstr = ValToString(CUServicerw.InvoiceQty*CUServicer.TotFuncQty,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_ANTAL",tstr);
          tstr = ValToString(CUServicerw.InvoiceQty*CUServicer.TotInvQty,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_QTY2",tstr);
          CalcSum(CUServicerw.InvoiceQty*CUServicer.TotFuncQty,CUServicerw.Price,blankval,CUServicerw.vRebate,t,0);
          tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_BELOPP",tstr);
/*          
          tstr = ValToString(CUServicer.TotInvQty,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_ANTAL",tstr);
*/          
          OUTFORMFIELD("F_SPECIFIKATION",CUServicer.Comment);
          OUTFORMFIELD("F_KOMMENTAR2",StringFromStringSet(254,CUServicer.Function));

          tstr = ValToString(CUServicer.TotChargePrice/CUServicer.TotInvQty,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_APRIS",tstr);
          tstr = ValToString(CUServicerw.vRebate,M41Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_RABATT",tstr);
/*          
          OUTFORMFIELD("F_BELOPP",CUServicer.TotChargePrice);
    //      OUTFORMFIELD("F_BASPRIS",CUServicer.BasePrice);
    //      OUTFORMFIELD("F_MOMSKOD",CUServicer.VATCode);
          OUTFORMFIELD("F_PRICEFACTOR",CUServiceFactor(CUServicer,COCUServicer));
    //      OUTFORMFIELD("F_DUEDATE",CUServicer.InvoiceAfter);
    //      OUTFORMFIELD("F_FAKTURANUMMER",CUServicer.InvoiceNo);
*/          
          EndFormRow;
        end;
      end;
    end;
  end;
  PrintValue("F_TOTALAMOUNT",totrowsum,M4Val,LangNrr,SFb,false);
  tstr = ValToString(sicprice2,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_TOTROWTOT",tstr);
  if (sicqty>0) then begin
    INr.Code = COCUServicer.SupportItemCode;
    ReadFirstMain(INr,1,true);
    if (FIELDINFORM("F_ENHET")) then begin
      GetUnitStr(COCUServicer.SupportItemCode,COCUServicer.LangCode,tstr);
      OUTFORMFIELD("F_ENHET",tstr);
    end;
    OUTFORMFIELD("F_ARTNR",COCUServicer.SupportItemCode);
    OUTFORMFIELD("F_ARTNR2",COCUServicer.SupportItemCode);
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(COCUServicer.SupportItemCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(COCUServicer.SupportItemCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(COCUServicer.SupportItemCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;
    GetItemGroup(COCUServicer.SupportItemCode,tstr);
    OUTFORMFIELD("F_ARTGRUPP",tstr);
    OUTFORMFIELD("F_SPECIFIKATION",INr.Name);

    tstr = ValToString(sicqty,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_ANTAL",tstr);
    tstr = ValToString(sicprice,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BELOPP",tstr);
    EndFormRow;
  end;
  RETURN;
END;

global
procedure DoHWContractForm2(record RcVc RepSpec,record COCUServiceVc COCUServicer,Boolean detailed)
BEGIN
  record CUVc CUr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  val t;
  record DocVc Docr;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  
  GetLangNr(COCUServicer.LangCode,LangNrr);
  langcode = COCUServicer.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoHWContractForm2;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = "";end;
  
  intdocnr = 1;
  printf = true;
  while (printf) begin
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(COCUServicer.OKFlag,FDrw.Typ)) then begin
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,COCUServicer.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"COCUServiceVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
          RepSpec.sStartDate = COCUServicer.startDate;
          RepSpec.sEndDate = COCUServicer.endDate;
          CommonDocumentFields(RepSpec);
          if (detailed) then begin
            NumberofDocumentPages(FDrw.FPCode,LineTextCnt(COCUServicer)+1);
          end else begin
            NumberofDocumentPages(FDrw.FPCode,1);// Number of RentRes...
          end;
          CUr.Code = COCUServicer.CustCode;
          if (ReadFirstMain(CUr,1,true)) then begin
          end;
          PrintHWContractInformation(RepSpec,COCUServicer,CUr);
          if (detailed) then begin
            PrintHWContractText(COCUServicer,true);
          end else begin
            PrintHWContractText(COCUServicer,false);
            PrintHWContractRows(RepSpec,COCUServicer,CUr,LangNrr);
          end;
          CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoHWContractForm2:;  
  RETURN;
END;

global
procedure DoHWContractForm(record RcVc RepSpec,record COCUServiceVc COCUServicer)
BEGIN
//  record RentControlBlock RCr;
//  record RentQTVc RentQTr;
  
//  BlockLoad(RCr);
//  if (RCr.PrintQTOnAgr==0) then begin // I agree this is a wierd setting, but very much used...
    DoHWContractForm2(RepSpec,COCUServicer,RepSpec.ArtMode);
//  end else begin
//    RentQTr.COCUServiceNr = COCUServicer.SerNr;
//    if (ReadFirstKey("COCUServiceNr",RentQTr,1,true)) then begin
//      DoRentQTForm(RepSpec,RentQTr);
//    end;
//  end;
  return;
END;

global
procedure DoHWContractDetForm(record RcVc RepSpec,record COCUServiceVc COCUServicer)
BEGIN
  DoHWContractForm2(RepSpec,COCUServicer,true);
  return;
END;
