external outer procedure DoInvFormRowCustomizedFields(record IVVc,row IVVc,record DocVc,record SysFormatBlock,record RoundBlock,record LangNrVc,Boolean);

external procedure PrintCurrencyCode(string,string);
external procedure GetCountryName(string,string,var string);
external function string 255 SerialNumbersString(string,LongInt,Integer);
external function Integer VATType(string);
external function roundmode SetRoundModeD(Integer);
external function roundmode DefaultRoundMode();
external procedure GetVATText(string,var string);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure FindShpPackages(LongInt,LongInt,string,record LangNrVc,record SysFormatBlock,var string);
external procedure PrintUserDefinedItemFields(string,string,string,string,string,Date,Date,Date,val,val,val);
external procedure PrintNotDeliveredQty(LongInt,string,integer,record LangNrVc,record SysFormatBlock);
external function string 255 GetVarietyComment(string,string);
external procedure GetCustomsDeclarationNumber(string,LongInt,LongInt,string,string,Integer,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure FindSalesExVat(record TaxMatrixVc,string,val,Integer,Integer,var val);
external procedure GetCreditCardType(string,var string);
external function string 255 CreateInvoiceNumber(LongInt,string);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure FinRefChecksum1(var string);
external procedure FinnishBankacc(var string,string);
external procedure FillBC128(Array Integer,Array Integer);
external procedure SelectUnitText(string,string,var string);
external procedure GetObjectText(string,var string);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure InvoiceCalcCommisionValue(record IVVc,val,val,var val);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure IntToText(string,Integer,var string);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure SetConversionFields(record INVc,val,var val,var val,var val);
external procedure GetVATdouble(string,var val,var val,Integer);
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external function Boolean GetVATincl(string,var val,var Integer);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure GetOriginCoutry(string,string,var string);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external procedure GetItemGroupDescription(string,var string);
external procedure Mul2VAT(string,val,var val,var val,Integer);
external procedure SetRowStyle(record Docvc,string,Integer,string,val);

global
procedure InvVat(Integer stp,Integer incvat,Integer NoTAXonVAT,Integer exportflag,string vatcode,val rowsump,
                var val vatprcp,var val vatvalp,var val vatexclprc,var val vatinclprc,var val rowtaxp)
BEGIN
  Integer rn;
  val tax1;
  
  vatprcp = blankval;
  vatvalp = blankval;
  vatexclprc = blankval;
  vatinclprc = blankval;
  rowtaxp = blankval;
  if (stp==1) then begin
    switch (incvat) begin
      case 0:
        if ((exportflag==0) or (exportflag==3) or (exportflag==4)) then begin
          Mul2VAT(vatcode,rowsump,vatvalp,vatprcp,incvat);
          GetVATdouble(vatcode,vatprcp,tax1,incvat);
          MulVATIV(vatcode,rowsump,vatvalp,rowtaxp,incvat,NoTAXonVAT);
          if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
          end;
          if (GetVATincl(vatcode,vatinclprc,rn)) then begin
          end;
        end;
      otherwise 
        GetVATdouble(vatcode,vatprcp,tax1,incvat);
        MulVATIV(vatcode,rowsump,vatvalp,rowtaxp,incvat,NoTAXonVAT);
        if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
        end;
        if (GetVATincl(vatcode,vatinclprc,rn)) then begin
        end;
    end;
    if (blank(vatprcp)) then begin
      if (vatvalp==0) then begin
        vatvalp = blankval;
      end;
    end;
  end;
  RETURN;
END;

procedure IVRowTot(record IVVc ivrp,row IVVc IVrwp,record LangNrVc LangNrr,record SysFormatBlock SFb,val vatval,var string res)
BEGIN
  val v;
  
  res = "";
  v = IVrwp.Sum;
  if (ivrp.InclVAT==0) then begin
    v = v + vatval;
  end;
  if ((blank(vatval)) and (blank(IVrwp.Sum))) then begin
  end else begin
    res = ValToString(v,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  end;
  RETURN;
END;

procedure IVRowSum(record IVVc ivrp,row IVVc IVrwp,record LangNrVc LangNrr,record SysFormatBlock SFb,val vatval,var string res)
BEGIN
  val v;
  
  res = "";
  v = IVrwp.Sum;
  if (ivrp.InclVAT!=0) then begin
    v = v - vatval;
  end;
  if ((blank(vatval)) and (blank(IVrwp.Sum))) then begin
  end else begin
    res = ValToString(v,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
  end;
  RETURN;
END;

procedure PrintInvoiceRow_1(record MainStockBlock MSb,record INVc INr,row IVVc IVrw,Integer rownr,val vatprc,val vatval,val vatexclprc,val vatinclprc,val rowtax,var Integer printedrownr,
                            record RcVc RepSpec,record IVVc IVr,record DocVc Docr,record RoundBlock RoundRec,record LangNrVc LangNrr,record SysFormatBlock SFb,var val totdiscount,
                            var val totcombase2sum,var val totcombase2vat,Boolean negamountf)
BEGIN
  record RecVc Recr;
  string 255 tstr,location;
  val t,t2,qtyconv1,qtyconv2,qtyconv3,v;
  Integer typ;
  roundmode rm;  
  record BatchTextVc BTr;
  record TaxMatrixVc TMr;
  record ItemHistVc IHr;
  record PUVc PUr;
  row PUVc PUrw;

  DoInvFormRowCustomizedFields(IVr,IVrw,Docr,SFb,RoundRec,LangNrr,negamountf);
  if (FIELDINFORM("F_CUSTOMSDECLNUMBER")) then begin
    tstr = IVrw.CustomsNr;
    if (blank(tstr)) then begin
      GetCustomsDeclarationNumber("IVVc",IVr.SerNr,rownr,IVrw.ArtCode,IVrw.SerialNr,0,tstr);
    end;
    OUTFORMFIELD("F_CUSTOMSDECLNUMBER",tstr);
  end;
  if (FIELDINFORM("F_COUNTRYOFORIGIN")) then begin
    tstr = IVrw.CountryOfOrg;
    if (blank(tstr)) then begin
      GetCustomsDeclarationNumber("IVVc",IVr.SerNr,rownr,IVrw.ArtCode,IVrw.SerialNr,1,tstr);
    end else begin
      GetCountryName(IVrw.CountryOfOrg,IVr.LangCode,tstr);
    end;
    OUTFORMFIELD("F_COUNTRYOFORIGIN",tstr);
  end;
  if (FIELDINFORM("F_CUSTOMSDECLDATE")) then begin
    tstr = "";
    if (blank(tstr)) then begin
      GetCustomsDeclarationNumber("IVVc",IVr.SerNr,rownr,IVrw.ArtCode,IVrw.SerialNr,3,tstr);
    end;
    OUTFORMFIELD("F_CUSTOMSDECLDATE",tstr);
  end;
  GetObjectText(IVrw.Objects,tstr);
  OUTFORMFIELD("F_ROWOBJEKTTEXT",tstr);
  OUTFORMFIELD("F_ROWOBJECT",IVrw.Objects);
  OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);
  PrintValue("F_ROWWIDTH",IVrw.UnitXval,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_ROWHEIGHT",IVrw.UnitYval,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_ROWDEPTH",IVrw.UnitZval,M4Qty,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_ROWLOCATION",IVrw.Location);  
  PrintValue("F_WARRANTY",INr.WarrantyLength,M4UVal,LangNrr,SFb,false);//OUTFORMFIELD("F_WARRANTY",INr.WarrantyLength);
  if (FIELDINFORM("F_UNITCOMMENT")) then begin
    SelectUnitText(IVr.LangCode,IVrw.UnitCode,tstr);
    OUTFORMFIELD("F_UNITCOMMENT",tstr);
  end;  
  PrintValue("F_UNITFACTQUANT",IVrw.UnitFactQuant,M4UVal,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_UNITCODE",IVrw.UnitCode);
  PrintValue("F_UNITFACTPRICE",IVrw.UnitFactPrice,M423Val,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_ROWFOBVALFORR")) then begin
    t = IVrw.Quant*IVrw.Price;
    MulVATIV(IVrw.VATCode,t,t,t2,0,0);
    v = v - vatval;
    t = t - IVrw.Sum;
    t = t + v;
    PrintValue("F_ROWFOBVALFORR",t,M4Val,LangNrr,SFb,negamountf);
  end;  
  if (FIELDINFORM("F_OUTQTY")) then begin
    if (MSb.UnitConvCalc==0) then begin
      t = IVrw.Quant*IVrw.Coefficient;
    end else begin
      t = IVrw.Quant/IVrw.Coefficient;
    end;
    t = Round(t,SetRoundModeD(3));
    PrintValue("F_OUTQTY",t,M45Val,LangNrr,SFb,negamountf);
  end;  
  PrintValue("F_COEFFICIENT",Round(IVrw.Coefficient,SetRoundModeD(3)),M45Val,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_COMBASE2TOPAY")) then begin
    t = MulRateToBase2(IVr.CurncyCode,IVr.SumIncCom,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
    PrintValue("F_COMBASE2TOPAY",t,M4Val,LangNrr,SFb,negamountf);
  end;
  OUTFORMFIELD("F_SHELFCODE",INr.InvCode);
  OUTFORMFIELD("F_EXCISE",IVrw.ExciseNr);
  OUTFORMFIELD("F_ROWDELIVERYDATE",IVrw.ExciseNr); // For Hotel.... The Excise Number is not used anyway....
  if (FIELDINFORM("F_ORIGINCOUNTRY")) then begin
    tstr = IVrw.CountryOfOrg;
    if (blank(tstr)) then begin
      location = IVrw.Location;
      if (blank(location)) then begin location = IVr.Location; end;
      GetOriginCoutry(IVrw.ArtCode,location,tstr);
    end;
    OUTFORMFIELD("F_ORIGINCOUNTRY",tstr);
  end;
  if (nonblank(IVrw.SerialNr)) then begin 
    IHr.ArtCode = IVrw.ArtCode;
    IHr.SerialNr = IVrw.SerialNr;
    IHr.FileName = "PUVc";  
    if (ReadFirstKey("ArtCodeSerialNr",IHr,3,true)) then begin
      PUr.SerNr = IHr.TransNr;
      if (ReadFirstKey("SerNr",PUr,1,true)) then begin
        MatRowGet(PUr,IHr.Row,PUrw);
        GetCountryName(PUrw.CountryOfOrg,IVr.LangCode,tstr);
        OUTFORMFIELD("F_COUNTRYOFORIGIN1",tstr);
        OUTFORMFIELD("F_CUSTOMNR",PUrw.CustomsNr);
      end;
    end;
  end;
  OUTFORMFIELD("F_EUCODE",INr.EUCodex);
  OUTFORMFIELD("F_EKNCODE",INr.EKNCode);

  PrintValue("F_WEIGHT",INr.Weight,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_VOLUME",INr.Volume,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_HEIGHT",INr.Height,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_DEPTH",INr.Depth,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_WIDTH",INr.Width,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_NETWEIGHT",INr.NetWeight,M4Qty,LangNrr,SFb,negamountf);
  
  BTr.ArtCode  = IVrw.ArtCode;
  BTr.SerialNr = IVrw.SerialNr;
  if (ReadFirstMain(BTr,2,true)) then begin 
    OUTFORMFIELD("F_SUPPSERIALNR",BTr.SuppSerialNr);
    OUTFORMFIELD("F_MAJORSTONE",BTr.MajStoneDet);
    OUTFORMFIELD("F_COLOUR",BTr.Colour);
    OUTFORMFIELD("F_CLARITY",BTr.Clarity);
    OUTFORMFIELD("F_CERT",BTr.Cert);
    OUTFORMFIELD("F_MINORSTONE",BTr.MinStoneDet);
    OUTFORMFIELD("F_METAL",BTr.Metal);
    OUTFORMFIELD("F_ROWWEIGHT",BTr.RowWeight);
    OUTFORMFIELD("F_SIZE",BTr.Size);
    OUTFORMFIELD("F_LENGTH",BTr.Length);

    OUTFORMFIELD("F_WATCHBRAND",BTr.WatchBrand);
    OUTFORMFIELD("F_STYLENAME",BTr.StyleName);
    OUTFORMFIELD("F_WATCHMETAL",BTr.WatchMetal);
    OUTFORMFIELD("F_MOVEMENT",BTr.Movement);
    OUTFORMFIELD("F_BRCSTR",BTr.BrcStr);
    OUTFORMFIELD("F_GENDER",BTr.Gender);
    OUTFORMFIELD("F_OTHER",BTr.Other);
    OUTFORMFIELD("F_OTHER2",BTr.Other2);
  end;  
  t = IVrw.Quant*INr.Weight;
  if (t==0) then begin t = blankval; end;
  PrintValue("F_ROWWEIGHT",t,M4Qty,LangNrr,SFb,negamountf);

  t = IVrw.Quant*INr.NetWeight;
  if (t==0) then begin t = blankval; end;
  PrintValue("F_ROWNETWEIGHT",t,M4Qty,LangNrr,SFb,negamountf);

  t = IVrw.Quant*INr.Volume;
  if (t==0) then begin t = blankval; end;
  PrintValue("F_ROWVOLUME",t,M4Qty,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_ARTNRBC39")) then begin
    ItemBC39(IVrw.ArtCode,tstr);
    OUTFORMFIELD("F_ARTNRBC39",tstr);
  end;  
  if (FIELDINFORM("F_ARTNRBCEAN")) then begin
    ItemBCEAN(IVrw.ArtCode,tstr);
    OUTFORMFIELD("F_ARTNRBCEAN",tstr);
  end;  
  if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
    ItemBCEAN13(IVrw.ArtCode,tstr);      
    OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
  end;  
  tstr = IVrw.Spec;
  if (tstr==INr.Name) then begin
    if (GetItemNameStr(1,tstr,IVr.LangCode,INr.Name,INr.Code)) then begin end;
  end;
  OUTFORMFIELD("F_SPECIFIKATION",tstr);
  PrintValueInclZero("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
//  PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
  PrintValueInclZero("F_ANTAL",IVrw.Quant,M4UVal,LangNrr,SFb,negamountf);
//  PrintValue("F_ANTAL",IVrw.Quant,M4UVal,LangNrr,SFb,negamountf);

  if (MSb.UnitConvCalc==0) then begin
    PrintValue("F_ANTAL2",IVrw.Quant*IVrw.Coefficient,M4UVal,LangNrr,SFb,negamountf);
  end else begin
    PrintValue("F_ANTAL2",IVrw.Quant/IVrw.Coefficient,M4UVal,LangNrr,SFb,negamountf);
  end;

  PrintValue("F_INQTY",IVrw.Quant,M4Qty,LangNrr,SFb,negamountf);
  PrintValue("F_KOSTPRIS",IVrw.BasePrice,M4Val,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_UNITPRICEINCDISC")) then begin
    GetFieldArgument(Docr,F_UNITPRICEINCDISC,tstr);
    rm = DefaultRoundMode;
    typ = M4Val;
    if (nonblank(tstr)) then begin
      rm.decimals = StringToLongInt(tstr);
      switch (rm.decimals) begin
        case 3: typ = M423Val;
        otherwise typ = M4Val;
      end;
    end;
    PrintValueInclZero("F_UNITPRICEINCDISC",Round(IVrw.Sum/IVrw.Quant,rm),typ,LangNrr,SFb,negamountf);
//    PrintValue("F_UNITPRICEINCDISC",Round(IVrw.Sum/IVrw.Quant,rm),typ,LangNrr,SFb,negamountf);
  end;
  if (FIELDINFORM("F_APRIS")) then begin
    GetFieldArgument(Docr,F_APRIS,tstr);
    if (nonblank(tstr)) then begin
      t = Round(IVrw.Price,SetRoundModeD(StringToInt(tstr)));
      PrintValueInclZero("F_APRIS",t,M423Val,LangNrr,SFb,negamountf);
    end else begin
      if (RoundRec.Discount==0) then begin
        t = Round(IVrw.Price,SetRoundModeD(3));
      end else begin
        t = Round(IVrw.Price,DefaultRoundMode);
      end;
      PrintValueInclZero("F_APRIS",t,M423Val,LangNrr,SFb,negamountf);
    end;  
  end;
  UnpackRowFieldMatrix(IVrw,"TaxMatrix",TMr);
  if (FIELDINFORM("F_APRISEXCLVAT")) then begin
    FindSalesExVat(TMr,IVrw.VATCode,IVrw.Price,IVr.InclVAT,IVr.NoTAXonVAT,t);
    GetFieldArgument(Docr,F_APRISEXCLVAT,tstr);
    if (nonblank(tstr)) then begin
      t = Round(t,SetRoundModeD(StringToInt(tstr)));
      PrintValueInclZero("F_APRISEXCLVAT",t,M423Val,LangNrr,SFb,negamountf);
    end else begin
      if (RoundRec.Discount==0) then begin
        t = Round(t,SetRoundModeD(3));
      end else begin
        t = Round(t,DefaultRoundMode);
      end;
      PrintValueInclZero("F_APRISEXCLVAT",t,M423Val,LangNrr,SFb,negamountf);
    end;  
  end;
  
  if (FIELDINFORM("F_BASPRIS")) then begin
    if (IVr.InclVAT==0) then begin
      MulVATIV(IVrw.VATCode,IVrw.Price,t,t2,0,0);
      t = t + IVrw.Price;
    end else begin
      t = IVrw.Price*IVrw.vRebate;
      t = t/100;
      v = IVrw.Price - t;
      t = vatval/IVrw.Quant;
      t = v - t;
    end;
    GetFieldArgument(Docr,F_BASPRIS,tstr);
    if (nonblank(tstr)) then begin
      PrintValue("F_BASPRIS",Round(t,SetRoundModeD(StringToInt(tstr))),M423Val,LangNrr,SFb,negamountf);
    end else begin
      GetFieldArgument(Docr,F_BASPRIS,tstr);
      if (nonblank(tstr)) then begin
        PrintValue("F_BASPRIS",Round(t,SetRoundModeD(StringToInt(tstr))),M423Val,LangNrr,SFb,negamountf);
      end else begin
        PrintValue("F_BASPRIS",t,M423Val,LangNrr,SFb,negamountf);
      end;    
    end;    
  end;
  PrintValue("F_REPA_TAX",IVrw.RepaExVAT,M4Val,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_CUSTARTNR",IVrw.CustArtCode);
  OUTFORMFIELD("F_ARTNR",IVrw.ArtCode);
  OUTFORMFIELD("F_ARTNR2",IVrw.ArtCode);
  OUTFORMFIELD("F_ARTCODEVARIETIES",GetVarietyComment(IVrw.ArtCode,INr.Code));
  OUTFORMFIELD("F_ARTCODENOVARIETIES",INr.Code);
  OUTFORMFIELD("F_ARTGRUPP",INr.Group);
  v = IVrw.vRebate;
  GetFieldArgument(Docr,F_RABATT,tstr);
  if (nonblank(tstr)) then begin
    if (blank(IVrw.ArtCode)) then begin
      PrintValue("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SFb,negamountf);
    end else begin
      PrintValueInclZero("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SFb,negamountf);
    end;
  end else begin
    if (blank(IVrw.ArtCode)) then begin
      PrintValue("F_RABATT",v,M41Val,LangNrr,SFb,false);
    end else begin
      PrintValueInclZero("F_RABATT",v,M41Val,LangNrr,SFb,false);
    end;
  end;
  if (nonblank(IVrw.RvrsVATCode)) then begin
    OUTFORMFIELD("F_REVERSEVATCODE",IVrw.RvrsVATCode);
    if (HasLocalization("GBR,LTU")) then begin
      if (nonblank(IVr.RvrsVAT) and nonblank(IVr.Sum3)) then begin
        OUTFORMFIELD("F_ROWREVERSEVATTEXT",USetStr(39370));
      end;
    end;
  end;
  if (nonblank(IVrw.RvrsVATCode)) then begin
    OUTFORMFIELD("F_MOMSKOD",IVrw.RvrsVATCode);
  end else begin
    OUTFORMFIELD("F_MOMSKOD",IVrw.VATCode);
  end;
  OUTFORMFIELD("F_SALESACC",IVrw.SalesAcc);
  SelectUnitText(IVr.LangCode,INr.Unittext,tstr);    
  OUTFORMFIELD("F_ENHET",tstr);
  PrintValue("F_PRICEFACTOR",IVrw.PriceFactor,M4UVal,LangNrr,SFb,negamountf);
  if (IVrw.Price!=0) then begin
    t = IVrw.Price;
  end else begin
    t = IVrw.Sum/IVrw.Quant;
  end;
  if (IVrw.PriceFactor!=0) then begin
    t = t/IVrw.PriceFactor;
  end;
  PrintValue("F_UNITPRICE",t,M45Val,LangNrr,SFb,negamountf);
  FindSalesExVat(TMr,IVrw.VATCode,IVrw.Sum,IVr.InclVAT,IVr.NoTAXonVAT,t);
  t2 = IVrw.Quant;
  if (t2==0) then begin
    t2 = 1;
  end;
  PrintValue("F_SECISIN",Round(t/t2,SetRoundModeD(3)),M423Val,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_SUMFIFO")) then begin
    GetFieldArgument(Docr,F_SUMFIFO,tstr);
    if (nonblank(tstr)) then begin
      PrintValue("F_SUMFIFO",Round(IVrw.FIFORowVal,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
    end else begin
      PrintValue("F_SUMFIFO",IVrw.FIFORowVal,M45Val,LangNrr,SFb,negamountf);
    end;
  end;
  t = MulRateToBase1(IVr.CurncyCode,IVrw.Price,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_PRICEBASECURNCY1",t,M4Val,LangNrr,SFb,negamountf);
  t = MulRateToBase2(IVr.CurncyCode,IVrw.Price,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_PRICEBASECURNCY2",t,M4Val,LangNrr,SFb,negamountf);
  t = MulRateToBase1(IVr.CurncyCode,IVrw.Sum,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValueInclZero("F_ROWPRICEBASECURNCY1",t,M4Val,LangNrr,SFb,negamountf);
//  PrintValue("F_ROWPRICEBASECURNCY1",t,M4Val,LangNrr,SFb,negamountf);
  t = MulRateToBase2(IVr.CurncyCode,IVrw.Sum,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_ROWPRICEBASECURNCY2",t,M4Val,LangNrr,SFb,negamountf);
  if (vatval!=0) then begin
  t = MulRateToBase1(IVr.CurncyCode,vatval,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValueInclZero("F_BASE1ROWVATVAL",t,M4Val,LangNrr,SFb,negamountf);
  t = MulRateToBase2(IVr.CurncyCode,vatval,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_BASE2ROWVATVAL",t,M4Val,LangNrr,SFb,negamountf);
  end;
  OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
  if (nonblank(IVrw.ArtCode)) then begin
    printedrownr = printedrownr + 1;
    OUTFORMFIELD("F_ROWNR",printedrownr);
    IntToText(IVr.LangCode,printedrownr,tstr);
    OUTFORMFIELD("F_ROWNRINTEXT",tstr);
  end;
  PrintValue("F_DIFFROWVALUE",(IVr.DiscPerc*IVrw.Sum)/100,M4Val,LangNrr,SFb,negamountf);
  if ((FIELDINFORM("F_ITEMCODE")) or (FIELDINFORM("F_ITEMNAME")) or (FIELDINFORM("F_ITEMUNIT"))) then begin
    if ((INr.ItemType==2) and (INr.ExplodeRec!=0)) then begin
      SelectUnitText(IVr.LangCode,INr.Unittext,tstr);
      OUTFORMFIELD("F_ITEMUNIT",tstr);
      Recr.Code = INr.Recepy;
      if (ReadFirstMain(Recr,1,true)) then begin
        OUTFORMFIELD("F_ITEMCODE",Recr.Code);
        OUTFORMFIELD("F_ITEMNAME",Recr.Comment);
      end;
    end;
  end;
  OUTFORMFIELD("F_AVDELNING",INr.Department);
  tstr = "";
  if (HasLocalization("POL")) then begin
    if (nonblank(IVrw.Sum)) then begin
      if (nonblank(vatinclprc)) then begin
        if ((vatinclprc==0) and (nonblank(vatexclprc))) then begin
          tstr = USetStr(8111);
        end;
      end;
      if ((vatinclprc==0) and (nonblank(vatinclprc))) then begin
        if (blank(vatexclprc)) then begin
          tstr = USetStr(8110);
        end;
      end;
    end;
    if (blank(tstr)) then begin
      tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    end;
    if (blank(tstr)) then begin
      tstr = USetStr(1244);
    end;
    OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);    
  end else begin
    if (nonblank(IVrw.Sum)) then begin
      if (blank(tstr)) then begin
        tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
      end;
      if (blank(tstr)) then begin
        tstr = USetStr(1244);
      end else begin
        tstr = tstr & "%";
      end;
      OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);
    end;
  end;
  if (blank(vatprc)) then begin 
    PrintValue("F_ROWVATPRC",0,M4Val,LangNrr,SFb,negamountf);
  end else begin
    PrintValueInclZero("F_ROWVATPRC",vatprc,M4Val,LangNrr,SFb,negamountf);
  end;
  OUTFORMFIELD("F_BARCODE",INr.BarCode);
  OUTFORMFIELD("F_CPSCODE",INr.CPSCode);
  PrintValue("F_ROWTAXVAL",rowtax,M4Val,LangNrr,SFb,negamountf);
  SetConversionFields(INr,IVrw.Quant,qtyconv1,qtyconv2,qtyconv3);      
  PrintValue("F_CONVERSION1",qtyconv1,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSION2",qtyconv2,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSION3",qtyconv3,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSIONVAL1",INr.Conversion1,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSIONVAL2",INr.Conversion2,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_SALESPRICE",INr.UPrice1,M423Val,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_ROWITEMGROUP",INr.Group);
  OUTFORMFIELD("F_MOTHERNR",IVrw.MotherNr);
  if (INr.SerNrf==1) and (IVrw.Quant>1) then begin
    OUTFORMFIELD("F_SERIENR",SerialNumbersString("IVVc",IVr.SerNr,rownr));
  end else begin
    OUTFORMFIELD("F_SERIENR",IVrw.SerialNr);
  end;
  if (FIELDINFORM("F_ROWITEMGROUPNAME")) then begin
    GetItemGroupDescription(INr.Group,tstr);
    OUTFORMFIELD("F_ROWITEMGROUPNAME",tstr);
  end;
  if (FIELDINFORM("F_ROWTOTIFVAT")) then begin
    if (vatval!=0) then begin
      IVRowTot(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWTOTIFVAT",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWTOTIFNOVAT")) then begin
    if (vatval==0) then begin
      IVRowTot(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWTOTIFNOVAT",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWSUMIFVAT")) then begin
    if (vatval!=0) then begin
      IVRowSum(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWSUMIFVAT",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWSUMIFNOVAT")) then begin
    if (vatval==0) then begin
      IVRowSum(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWSUMIFNOVAT",tstr);
    end;
  end;
  
  if (IVr.InclVAT==0) then begin
    PrintValueInclZero("F_SUMMAEJMOMS",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
  end else begin
    PrintValueInclZero("F_SUMMAEJMOMS",IVrw.Sum-vatval,M4Val,LangNrr,SFb,negamountf);
  end;

  if (FIELDINFORM("F_ROWTOT")) then begin
    v = IVrw.Sum;
    if (blank(IVrw.RvrsVATCode)) then begin
      if (IVr.InclVAT==0) then begin v = v + vatval; end;
    end;
    if ((nonblank(vatval)) or (nonblank(IVrw.Sum))) then begin
      GetFieldArgument(Docr,F_ROWTOT,tstr);
      if (nonblank(tstr)) then begin
        if (blank(IVrw.ArtCode)) then begin
          PrintValue("F_ROWTOT",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
        end else begin
          PrintValueInclZero("F_ROWTOT",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
        end;
      end else begin
        if (blank(IVrw.ArtCode)) then begin
          PrintValue("F_ROWTOT",v,M4Val,LangNrr,SFb,negamountf);
        end else begin
          PrintValueInclZero("F_ROWTOT",v,M4Val,LangNrr,SFb,negamountf);
        end;
      end;
    end;
  end;
        if (FIELDINFORM("F_ROWBASE")) then begin
          v = IVrw.Sum;
          if (IVr.InclVAT>0) then begin
            if (v!=0) then begin
              v = v - vatval;
            end;
          end;
          GetFieldArgument(Docr,F_ROWBASE,tstr);
          if (blank(v)) then begin v = blankval; end;          
          if (nonblank(tstr)) then begin
            if (blank(IVrw.Sum)) then begin v = blankval; end;          
            PrintValueInclZero("F_ROWBASE",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
          end else begin
            if (blank(IVrw.Sum)) then begin v = blankval; end;          
            PrintValueInclZero("F_ROWBASE",v,M4Val,LangNrr,SFb,negamountf);
          end;
        end;
        if (FIELDINFORM("F_BASE1ROWBASE")) then begin
          v = IVrw.Sum;
          if (IVr.InclVAT>0) then begin
            if (v!=0) then begin
              v = v - vatval;
            end;
          end;
          GetFieldArgument(Docr,F_BASE1ROWBASE,tstr);
          if (nonblank(tstr)) then begin
            t = Round(v,SetRoundModeD(StringToInt(tstr)));
            t = MulRateToBase1(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
            if (blank(IVrw.Sum)) then begin
              if (t==0) then begin t = blankval; end;
            end;
            PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
          end else begin
            t = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
            if (blank(IVrw.Sum)) then begin
              if (t==0) then begin t = blankval; end;          
            end;
            PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
          end;
        end;
        if (FIELDINFORM("F_BASE2ROWBASE")) then begin
          v = IVrw.Sum;
          if (IVr.InclVAT>0) then begin
            if (v!=0) then begin
              v = v - vatval;
            end;
          end;
          GetFieldArgument(Docr,F_BASE2ROWBASE,tstr);
          if (nonblank(tstr)) then begin
            t = Round(v,SetRoundModeD(StringToInt(tstr)));
            t = MulRateToBase2(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
            if (t==0) then begin t = blankval; end;          
            PrintValueInclZero("F_BASE2ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
          end else begin
            t = MulRateToBase2(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
            if (t==0) then begin t = blankval; end;          
            PrintValueInclZero("F_BASE2ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
          end;
        end;
        if (nonblank(IVrw.ArtCode)) then begin
        if (FIELDINFORM("F_ROWVATVAL")) then begin
          if (true) then begin//nonblank(vatval)
          GetFieldArgument(Docr,F_ROWVATVAL,tstr);
          if (nonblank(tstr)) then begin
            PrintValueInclZero("F_ROWVATVAL",Round(vatval,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
          end else begin
            if (blank(vatprc)) then begin 
              PrintValueInclZero("F_ROWVATVAL",0,M4Val,LangNrr,SFb,negamountf);
            end else begin
              PrintValueInclZero("F_ROWVATVAL",vatval,M4Val,LangNrr,SFb,negamountf);
            end;
          end;
          end;
        end;
        end;
        t = IVrw.Sum + vatval + rowtax;
        if (IVr.InclVAT==1) then begin
          t = IVrw.Sum;
        end;
        if (IVr.InclVAT==2) then begin
          t = IVrw.Sum + rowtax;
        end;
        if (t!=0) then begin
          PrintValue("F_ROWSUMTOTAL",t,M4Val,LangNrr,SFb,negamountf);
        end;
        if (vatval!=0) then begin
          PrintValue("F_ROWSUMWITHVAT",vatval,M4Val,LangNrr,SFb,negamountf);
        end;
        if (IVr.InclVAT>0) then begin
          PrintValue("F_ROWSUMWITHOUTVAT",IVrw.Sum-vatval,M4Val,LangNrr,SFb,negamountf);
        end else begin
          PrintValue("F_ROWSUMWITHOUTVAT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        end;
        if (FIELDINFORM("F_DIFFTOTVALUE")) then begin
          if (IVrw.Sum!=0) then begin
            t = IVr.DiscPerc*vatexclprc;
            t = t/100;
            tstr = ValToString(t,M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
            if (blank(tstr)) then begin
              tstr = USetStr(1244);
            end;
            OUTFORMFIELD("F_DIFFTOTVALUE",tstr);
          end;
        end;
        if (FIELDINFORM("F_ROWPACKAGES")) then begin
          if (nonblank(IVrw.ArtCode)) then begin
            FindShpPackages(IVr.OrderNr,IVrw.OrdRow,IVrw.ArtCode,LangNrr,SFb,tstr);
            OUTFORMFIELD("F_ROWPACKAGES",tstr);
          end;
        end;
        if (FIELDINFORM("F_KOLLI")) then begin
          if (nonblank(IVrw.ArtCode)) then begin
            FindShpPackages(IVr.OrderNr,-1,"",LangNrr,SFb,tstr);
            OUTFORMFIELD("F_KOLLI",tstr);
          end;
        end;
        if (FIELDINFORM("F_COMBASE2ROWVATVAL")) then begin
          InvoiceCalcCommisionValue(IVr,IVrw.Quant,IVrw.Price,t);
          t = t + IVrw.Price;
          t = t*IVrw.Quant;
          MulVATIV(IVrw.VATCode,t,v,t2,IVr.InclVAT,IVr.NoTAXonVAT);
          t = MulRateToBase2(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          totcombase2vat = totcombase2vat + t;
          PrintValue("F_COMBASE2ROWVATVAL",t,M4Val,LangNrr,SFb,negamountf);
        end;
        v = IVrw.Sum;
        if (IVr.InclVAT==0) then begin
          if (v!=0) then begin
            v = v + vatval;
          end;
        end;
        if ((nonblank(vatval)) or (nonblank(IVrw.Sum))) then begin
          t = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          PrintValueInclZero("F_BASE1ROWTOT",t,M4Val,LangNrr,SFb,negamountf);
          t = MulRateToBase2(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          PrintValueInclZero("F_BASE2ROWTOT",t,M4Val,LangNrr,SFb,negamountf);
        end;
        if (FIELDINFORM("F_ROWPRICEREBATE")) then begin
          if (nonblank(IVrw.Sum)) then begin
            CalcSum(1,IVrw.Price,IVrw.PriceFactor,IVrw.vRebate,t,0);
            /*
            if (IVrw.PriceFactor!=0) then begin
              t = t/IVrw.PriceFactor;
            end;
            */ 
            if (RoundRec.Discount==0) then begin
              t = Round(t,SetRoundModeD(3));
            end else begin
              t = Round(t,DefaultRoundMode);
            end;
            GetFieldArgument(Docr,F_ROWPRICEREBATE,tstr);
            if (nonblank(tstr)) then begin
              PrintValueInclZero("F_ROWPRICEREBATE",Round(t,SetRoundModeD(StringToInt(tstr))),M423Val,LangNrr,SFb,negamountf);
            end else begin
              GetFieldArgument(Docr,F_ROWPRICEREBATE,tstr);
            if (nonblank(tstr)) then begin
              PrintValueInclZero("F_ROWPRICEREBATE",Round(t,SetRoundModeD(StringToInt(tstr))),M423Val,LangNrr,SFb,negamountf);
            end else begin
              PrintValueInclZero("F_ROWPRICEREBATE",t,M423Val,LangNrr,SFb,negamountf);            
            end;
            end;
          end;
        end;
        if ((nonblank(IVrw.Quant)) and (nonblank(IVrw.Price))) then begin
        if (FIELDINFORM("F_COMBASE2ROWTOT")) then begin
          InvoiceCalcCommisionValue(IVr,IVrw.Quant,IVrw.Price,t);
          t = t + IVrw.Price;
          t = t * IVrw.Quant;
          t = MulRateToBase2(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          PrintValue("F_COMBASE2ROWTOT",t,M4Val,LangNrr,SFb,negamountf);
        end;
        if (FIELDINFORM("F_COMROWPRICEBASECURNCY2")) then begin
          InvoiceCalcCommisionValue(IVr,IVrw.Quant,IVrw.Price,t);
          t = t + IVrw.Price;
          t = MulRateToBase2(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          totcombase2sum = totcombase2sum + t;
          PrintValue("F_COMROWPRICEBASECURNCY2",t,M4Val,LangNrr,SFb,negamountf);
        end; 
        end; 
      PrintUserDefinedItemFields(INr.UserStr1,INr.UserStr2,INr.UserStr3,INr.UserStr4,INr.UserStr5,INr.UserDate1,INr.UserDate2,INr.UserDate3,INr.UserVal1,INr.UserVal2,INr.UserVal3);
      PrintNotDeliveredQty(IVr.OrderNr,IVrw.ArtCode,IVrw.OrdRow,LangNrr,SFb);
      PrintValueInclZero("F_ROWSUMWITHOUTDISCOUNT",IVrw.Quant*IVrw.Price,M4Val,LangNrr,SFb,negamountf);            
      totdiscount = totdiscount + (IVrw.Quant*IVrw.Price - IVrw.Sum);        
  RETURN;
END;

procedure PrintInvoiceRow_5(row IVVc IVrw,record INVc INr,val vatprc,val vatval,val vatexclprc,val vatinclprc,val rowtax,var Integer printedrownr,
                            record RcVc RepSpec,record IVVc IVr,record DocVc Docr,record RoundBlock RoundRec,
                            record LangNrVc LangNrr,record SysFormatBlock SFb,Boolean negamountf)
BEGIN      
  val t,v;
  string 255 tstr;

  if (nonblank(IVrw.ArtCode)) then begin
    printedrownr = printedrownr + 1;
    OUTFORMFIELD("F_ROWNR",printedrownr);
    IntToText(IVr.LangCode,printedrownr,tstr);
    OUTFORMFIELD("F_ROWNRINTEXT",tstr);
    if (FIELDINFORM("F_ENHET")) then begin
      SelectUnitText(IVr.LangCode,INr.Unittext,tstr);    
      OUTFORMFIELD("F_ENHET",tstr);
    end;
  end;
  OUTFORMFIELD("F_ARTNR",IVrw.ArtCode);
  OUTFORMFIELD("F_ARTNR2",IVrw.ArtCode);
  if (FIELDINFORM("F_ARTNRBC39")) then begin
    ItemBC39(IVrw.ArtCode,tstr);
    OUTFORMFIELD("F_ARTNRBC39",tstr);
  end;  
  if (FIELDINFORM("F_ARTNRBCEAN")) then begin
    ItemBCEAN(IVrw.ArtCode,tstr);
    OUTFORMFIELD("F_ARTNRBCEAN",tstr);
  end;  
  if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
    ItemBCEAN13(IVrw.ArtCode,tstr);      
    OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
  end;
  PrintValueInclZero("F_ANTAL",IVrw.Quant,M4UVal,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_APRIS")) then begin
    GetFieldArgument(Docr,F_APRIS,tstr);
    t = IVrw.Price;
    if (IVrw.Price==0) then begin t = IVrw.Sum/IVrw.Quant; end;
    if (nonblank(tstr)) then begin
      t = Round(t,SetRoundModeD(StringToInt(tstr)));
      PrintValue("F_APRIS",t,M45Val,LangNrr,SFb,negamountf);
    end else begin
      if (RoundRec.Discount==0) then begin
        t = Round(t,SetRoundModeD(3));
      end else begin
        t = Round(t,DefaultRoundMode);
      end;
      PrintValue("F_APRIS",t,M423Val,LangNrr,SFb,negamountf);
    end;  
  end;
  v = IVrw.vRebate;
  GetFieldArgument(Docr,F_RABATT,tstr);
  if (nonblank(tstr)) then begin
    if (blank(IVrw.ArtCode)) then begin
      PrintValue("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SFb,negamountf);
    end else begin
      PrintValueInclZero("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SFb,negamountf);
    end;
  end else begin
    if (blank(IVrw.ArtCode)) then begin
      PrintValue("F_RABATT",v,M41Val,LangNrr,SFb,false);
    end else begin
      PrintValueInclZero("F_RABATT",v,M41Val,LangNrr,SFb,false);
    end;
  end;
  t = IVrw.Sum;
  if (IVr.InclVAT==0) then begin
    t = t + vatval;
  end;  
  if ((nonblank(vatval)) or (nonblank(IVrw.Sum))) then begin
    PrintValue("F_ROWTOTIFVAT",t,M4Val,LangNrr,SFb,negamountf);
    PrintValue("F_ROWTOTIFNOVAT",t,M4Val,LangNrr,SFb,negamountf);       
    PrintValue("F_ROWTOT",t,M4Val,LangNrr,SFb,negamountf);
  end;
  OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
//  PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
  PrintValueInclZero("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
  if (nonblank(IVrw.RvrsVATCode)) then begin
    OUTFORMFIELD("F_MOMSKOD",IVrw.RvrsVATCode);
  end else begin
    OUTFORMFIELD("F_MOMSKOD",IVrw.VATCode);
  end;
  if (HasLocalization("POL")) then begin
    tstr = "";
    if (nonblank(IVrw.Sum)) then begin
      if (nonblank(vatinclprc)) then begin
        if ((vatinclprc==0) and (nonblank(vatexclprc))) then begin
          tstr = USetStr(8111);
        end;
      end;
      if ((vatinclprc==0) and (nonblank(vatinclprc))) then begin
        if (blank(vatexclprc)) then begin
          tstr = USetStr(8110);
        end;
      end;
    end;
    if (blank(tstr)) then begin
      tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    end;
    if (blank(tstr)) then begin
      tstr = USetStr(1244);
    end;
    OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);    
  end else begin
    tstr = "";
    if (nonblank(IVrw.Sum)) then begin
      if (blank(tstr)) then begin
        tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
      end;
      if (blank(tstr)) then begin
        tstr = USetStr(1244);
      end;
      OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);
    end;
  end;
  if (FIELDINFORM("F_BASE1ROWBASE")) then begin
    v = IVrw.Sum;
    if (IVr.InclVAT>0) then begin
      if (v!=0) then begin
        v = v - vatval;
      end;
    end;
    GetFieldArgument(Docr,F_BASE1ROWBASE,tstr);
    if (nonblank(tstr)) then begin
      t = Round(v,SetRoundModeD(StringToInt(tstr)));
      t = MulRateToBase1(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
      if (blank(IVrw.Sum)) then begin
        if (t==0) then begin t = blankval; end;
      end;
      PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
    end else begin
      t = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
      if (blank(IVrw.Sum)) then begin
        if (t==0) then begin t = blankval; end;
      end;
      PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
    end;
  end;
  if (blank(vatprc)) then begin 
    PrintValue("F_ROWVATPRC",0,M4Val,LangNrr,SFb,negamountf);
  end else begin
    PrintValueInclZero("F_ROWVATPRC",vatprc,M4Val,LangNrr,SFb,negamountf);
  end;
  if (FIELDINFORM("F_ROWVATVAL")) then begin
    if (true) then begin//nonblank(vatval)
      GetFieldArgument(Docr,F_ROWVATVAL,tstr);
      if (nonblank(tstr)) then begin
        if (blank(IVrw.ArtCode)) then begin
          PrintValue("F_ROWVATVAL",Round(vatval,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
        end else begin
          PrintValueInclZero("F_ROWVATVAL",Round(vatval,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
        end;
      end else begin
        if (blank(vatprc)) then begin 
          if (blank(IVrw.ArtCode)) then begin
            PrintValue("F_ROWVATVAL",0,M4Val,LangNrr,SFb,negamountf);
          end else begin
            PrintValueInclZero("F_ROWVATVAL",0,M4Val,LangNrr,SFb,negamountf);
          end;
        end else begin
          if (blank(IVrw.ArtCode)) then begin
            PrintValue("F_ROWVATVAL",vatval,M4Val,LangNrr,SFb,negamountf);
          end else begin
            PrintValueInclZero("F_ROWVATVAL",vatval,M4Val,LangNrr,SFb,negamountf);
          end;
        end;
      end;
    end;
  end;

  if (FIELDINFORM("F_ROWBASE")) then begin
    v = IVrw.Sum;
    if (IVr.InclVAT>0) then begin
      if (v!=0) then begin
        v = v - vatval;
      end;
    end;
    GetFieldArgument(Docr,F_ROWBASE,tstr);
    if (v==0) then begin v = blankval; end;          
    if (nonblank(tstr)) then begin
      if (IVrw.Sum==0) then begin v = blankval; end;          
      PrintValueInclZero("F_ROWBASE",Round(v,SetRoundModeD(StringToInt(tstr))),M45Val,LangNrr,SFb,negamountf);
    end else begin
      if (IVrw.Sum==0) then begin v = blankval; end;          
      PrintValueInclZero("F_ROWBASE",v,M4Val,LangNrr,SFb,negamountf);
    end;
  end;
  if (FIELDINFORM("F_BASE1ROWBASE")) then begin
    v = IVrw.Sum;
    if (IVr.InclVAT>0) then begin
      if (v!=0) then begin
        v = v - vatval;
      end;
    end;
    GetFieldArgument(Docr,F_BASE1ROWBASE,tstr);
    if (nonblank(tstr)) then begin
      t = Round(v,SetRoundModeD(StringToInt(tstr)));
      t = MulRateToBase1(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
      if (blank(IVrw.Sum)) then begin
        if (t==0) then begin t = blankval; end;
      end;
      PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
    end else begin
      t = MulRateToBase1(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
      if (blank(IVrw.Sum)) then begin
        if (t==0) then begin t = blankval; end;          
      end;
      PrintValueInclZero("F_BASE1ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
    end;
  end;
  if (FIELDINFORM("F_BASE2ROWBASE")) then begin
    v = IVrw.Sum;
    if (IVr.InclVAT>0) then begin
      if (v!=0) then begin
        v = v - vatval;
      end;
    end;
    GetFieldArgument(Docr,F_BASE2ROWBASE,tstr);
    if (nonblank(tstr)) then begin
      t = Round(v,SetRoundModeD(StringToInt(tstr)));
      t = MulRateToBase2(IVr.CurncyCode,t,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
      if (t==0) then begin t = blankval; end;          
      PrintValueInclZero("F_BASE2ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
    end else begin
      t = MulRateToBase2(IVr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
      if (t==0) then begin t = blankval; end;          
      PrintValueInclZero("F_BASE2ROWBASE",t,M4Val,LangNrr,SFb,negamountf);
    end;
  end;
  RETURN;
END;

procedure PrintInvoiceRow_4(record MainStockBlock MSb,record INVc INr,row IVVc IVrw,val vatprc,val vatval,val vatexclprc,val vatinclprc,val rowtax,var Integer printedrownr,
                            record RcVc RepSpec,record IVVc IVr,record DocVc Docr,record RoundBlock RoundRec,
                            record LangNrVc LangNrr,record SysFormatBlock SFb,Boolean negamountf)
BEGIN
  val t,t2,v;
  string 255 tstr;
  val qtyconv1,qtyconv2,qtyconv3;
  record IVVc orgIVr;

  orgIVr.SerNr = StringToLongInt(IVrw.ArtCode);
  if (ReadFirstMain(orgIVr,1,true)) then begin end;
  if (FIELDINFORM("F_UNITCOMMENT")) then begin
    SelectUnitText(IVr.LangCode,IVrw.UnitCode,tstr);
    OUTFORMFIELD("F_UNITCOMMENT",tstr);
  end;  
  PrintValue("F_UNITFACTQUANT",IVrw.UnitFactQuant,M4UVal,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_UNITCODE",IVrw.UnitCode);
  PrintValue("F_UNITFACTPRICE",IVrw.UnitFactPrice,M423Val,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_ROWFOBVALFORR")) then begin
    t = IVrw.Quant*IVrw.Price;
    MulVATIV(IVrw.VATCode,t,t,t2,0,0);
    v = v - vatval;
    t = t - IVrw.Sum;
    t = t + v;
    PrintValue("F_ROWFOBVALFORR",t,M4Val,LangNrr,SFb,negamountf);
  end;  
  if (FIELDINFORM("F_OUTQTY")) or (FIELDINFORM("F_ANTAL2")) then begin
    if (MSb.UnitConvCalc==0) then begin
      t = IVrw.Quant*IVrw.Coefficient;
    end else begin
      t = IVrw.Quant/IVrw.Coefficient;
    end;
    t = Round(t,SetRoundModeD(3));
    PrintValue("F_OUTQTY",t,M45Val,LangNrr,SFb,negamountf);
    PrintValue("F_ANTAL2",t,M4UVal,LangNrr,SFb,negamountf);
  end;  
  PrintValue("F_COEFFICIENT",Round(IVrw.Coefficient,SetRoundModeD(3)),M45Val,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
  PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
  PrintValue("F_ANTAL",IVrw.Quant,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_INQTY",IVrw.Quant,M4Qty,LangNrr,SFb,negamountf);
  if (FIELDINFORM("F_APRIS")) then begin
    GetFieldArgument(Docr,F_APRIS,tstr);
    if (nonblank(tstr)) then begin
      t = Round(IVrw.Price,SetRoundModeD(StringToInt(tstr)));
      PrintValue("F_APRIS",t,M45Val,LangNrr,SFb,negamountf);
    end else begin
      if (RoundRec.Discount==0) then begin
        t = Round(IVrw.Price,SetRoundModeD(3));
      end else begin
        t = Round(IVrw.Price,DefaultRoundMode);
      end;
      PrintValue("F_APRIS",t,M423Val,LangNrr,SFb,negamountf);
    end;  
  end;
  if (FIELDINFORM("F_BASPRIS")) then begin
    if (IVr.InclVAT==0) then begin
      MulVATIV(IVrw.VATCode,IVrw.Price,t,t2,0,0);
      t = t + IVrw.Price;
    end else begin
      t = IVrw.Price*IVrw.vRebate;
      t = t/100;
      v = IVrw.Price - t;
      t = vatval/IVrw.Quant;
      t = v - t;
    end;
    PrintValue("F_BASPRIS",t,M423Val,LangNrr,SFb,negamountf);
  end;
  OUTFORMFIELD("F_ARTNR",IVrw.ArtCode);
  OUTFORMFIELD("F_ARTNR2",IVrw.ArtCode);
  OUTFORMFIELD("F_ARTGRUPP",INr.Group);
  PrintValue("F_RABATT",IVrw.vRebate,M4Val,LangNrr,SFb,negamountf);
  if (nonblank(IVrw.RvrsVATCode)) then begin
    OUTFORMFIELD("F_MOMSKOD",IVrw.RvrsVATCode);
  end else begin
    OUTFORMFIELD("F_MOMSKOD",IVrw.VATCode);
  end;
  OUTFORMFIELD("F_REMLEVEL",IVrw.OrdRow);
  PrintValue("F_GRUNDBELOPP",IVrw.BasePrice,M4Val,LangNrr,SFb,negamountf);
  SetConversionFields(INr,IVrw.Quant,qtyconv1,qtyconv2,qtyconv3);      
  PrintValue("F_CONVERSION1",qtyconv1,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSION2",qtyconv2,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSION3",qtyconv3,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSIONVAL1",INr.Conversion1,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_CONVERSIONVAL2",INr.Conversion2,M4UVal,LangNrr,SFb,negamountf);
  PrintValue("F_SALESPRICE",INr.UPrice1,M423Val,LangNrr,SFb,negamountf);
  if (HasLocalization("POL")) then begin
    tstr = "";
    if (nonblank(IVrw.Sum)) then begin
      if (nonblank(vatinclprc)) then begin
        if ((vatinclprc==0) and (nonblank(vatexclprc))) then begin
          tstr = USetStr(8111);
        end;
      end;
      if ((vatinclprc==0) and (nonblank(vatinclprc))) then begin
        if (blank(vatexclprc)) then begin
          tstr = USetStr(8110);
        end;
      end;
    end;
    if (blank(tstr)) then begin
      tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
    end;
    if (blank(tstr)) then begin
      tstr = USetStr(1244);
    end;
    OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);    
  end else begin
    if (nonblank(IVrw.Sum)) then begin
      if (blank(tstr)) then begin
        tstr = ValToString(vatexclprc,M4UVal,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
      end;
      if (blank(tstr)) then begin
        tstr = USetStr(1244);
      end;
      OUTFORMFIELD("F_ROWVATEXCLPRC",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWTOTIFVAT")) then begin
    if (vatval!=0) then begin
      IVRowTot(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWTOTIFVAT",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWTOTIFNOVAT")) then begin
    if (vatval==0) then begin
      IVRowTot(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWTOTIFNOVAT",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWSUMIFVAT")) then begin
    if (vatval!=0) then begin
      IVRowSum(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWSUMIFVAT",tstr);
    end;
  end;
  if (FIELDINFORM("F_ROWSUMIFNOVAT")) then begin
    if (vatval==0) then begin
      IVRowSum(IVr,IVrw,LangNrr,SFb,vatval,tstr);
      OUTFORMFIELD("F_ROWSUMIFNOVAT",tstr);
    end;
  end;
  PrintValue("F_KOSTPRIS",IVrw.BasePrice,M4Val,LangNrr,SFb,negamountf);
  OUTFORMFIELD("F_DUEDATE",orgIVr.PayDate);
  RETURN;
END;      
  
function Boolean PrintInvoiceRow_Payments(row IVVc IVrw,record LangNrVc LangNrr,record SysFormatBlock SFb,Boolean negamountf)
BEGIN
  string 255 tstr;
  Boolean endformrowf;

  endformrowf = true;
  switch (IVrw.stp) begin
    case kInvoiceRowTypeGiftVoucherSold:
      OUTFORMFIELD("F_ROWNAME",USetStr(8112));
      OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
      OUTFORMFIELD("F_GCNr",IVrw.GCNr);
      PrintValueInclZero("F_ANTAL",1.00,M4UVal,LangNrr,SFb,negamountf);
      if FIELDINFORM("F_APRIS") then begin
        PrintValueInclZero("F_APRIS",IVrw.Sum,M423Val,LangNrr,SFb,negamountf);
      end else begin
        PrintValueInclZero("F_APRISEXCLVAT",IVrw.Sum,M423Val,LangNrr,SFb,negamountf);
      end;
      PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf); 
      PrintValue("F_ROWSUMTOTAL",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
    case kInvoiceRowTypeLoyaltyPointsPayment:
      OUTFORMFIELD("F_ROWNAME",USetStr(19300));
      OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);      
      PrintValueInclZero("F_APRIS",IVrw.Sum,M423Val,LangNrr,SFb,negamountf);
      PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);          
    case kInvoiceRowTypeGiftVoucherPayment:
      endformrowf = false;
      if (FIELDINFORM("F_PAYMODESUMTEXT")==false) or (FIELDINFORM("F_PAYMODESUMAMOUNT")==false) then begin
        OUTFORMFIELD("F_ROWNAME",USetStr(8113));
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);      
        OUTFORMFIELD("F_GCNr",IVrw.GCNr);
        PrintValueInclZero("F_ANTAL",1.00,M4UVal,LangNrr,SFb,negamountf);
        PrintValueInclZero("F_APRIS",IVrw.Sum,M423Val,LangNrr,SFb,negamountf);
        PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        endformrowf = true;
      end;
    case kInvoiceRowTypeCashPayment:
      endformrowf = false;
      if (FIELDINFORM("F_PAYMODESUMTEXT")==false) or (FIELDINFORM("F_PAYMODESUMAMOUNT")==false) then begin
        OUTFORMFIELD("F_ROWNAME",USetStr(8114));
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        PrintCurrencyCode("F_RECCURENCY",IVrw.CurncyCode);
        PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);          
        endformrowf = true;
      end;
    case kInvoiceRowTypeCreditCardPayment:
      endformrowf = false;
      if (FIELDINFORM("F_PAYMODESUMTEXT")==false) or (FIELDINFORM("F_PAYMODESUMAMOUNT")==false) then begin
        OUTFORMFIELD("F_ROWNAME",USetStr(8109));
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        OUTFORMFIELD("F_CREDCARDROW",IVrw.CreditCard);  
        if (FIELDINFORM("F_CREDCARDTYPEROW")) then begin
          GetCreditCardType(IVrw.CreditCard,tstr);
          OUTFORMFIELD("F_CREDCARDTYPEROW",tstr);
        end;  
        OUTFORMFIELD("F_AUTHORIZATIONROW",IVrw.AuthorizationCode);        
        PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);          
        endformrowf = true;
      end;
  end;
  PrintInvoiceRow_Payments = endformrowf;
  RETURN;
END;      
  
global
procedure PrintInvoiceRows2(record RcVc RepSpec,record IVVc IVr,record DocVc Docr,record RoundBlock RoundRec,record LangNrVc LangNrr,record SysFormatBlock SFb,var val totdiscount,
                           var val totinprice,var val totweight,var val totnetweight,var val totvolume,var val totcombase2sum,var val totqty,var val totqty2,var val totfifo,var val totcombase2vat,
                           var val totwithh,var val totnormwinttax,var val totnormwithvatprc,var val PointsSpent,
                           Boolean negamountf,Integer rwcnt)
begin
  record MainStockBlock MSb;
  record INVc INr;
  record RecVc Recr;
  row IVVc IVrw;
  Integer i,j;
  string 255 tstr;
  val t,t2,qtyconv1,qtyconv2,qtyconv3,v;
  Integer printedrownr;
  val vatprc,vatval,vatexclprc,vatinclprc,rowtax;
  record ARPayHistVc ARHistr;
  record RegionVc Regionr;
  Boolean hiddenrowf,testf,endformrowf;
  record FormBlock Formb;
  record INVc dummyINr;

  RecordClear(dummyINr);
  BlockLoad(MSb);
  if (HasLocalization("ARG")) then begin
    BlockLoad(Formb);
  end;
  totinprice = blankval;
  totvolume = blankval;
  totweight = blankval;
  totcombase2sum = blankval;
  totdiscount = blankval;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    testf = true;
    if (hiddenrowf) then begin
      if (IVrw.stp!=kInvoiceRowTypePerceptionTax) then begin
        testf = false;
      end;
    end;
    if (IVrw.stp==kInvoiceRowTypeHidden) then begin
      hiddenrowf = true;
      testf = false;
    end;
    if (IVrw.ovst!=0) then begin testf = false; end;
    if (HasLocalization("ARG")) then begin
      switch (Formb.PerceptionTax) begin
        case kDonotPrintPerceptionTaxRow:
          if (IVrw.stp==kInvoiceRowTypePerceptionTax) then begin
            testf = false;
          end;
      end;
    end;
    if (testf) then begin
    PointsSpent = PointsSpent + IVrw.Points;
    endformrowf = true;
    SetRowStyle(Docr,"IVVc",IVrw.stp,IVrw.ArtCode,IVrw.Sum);
    RecordClear(INr);
    INr.Code = IVrw.ArtCode;
    if (ReadFirstItem(IVrw.ArtCode,INr,true,true)) then begin
    end;
    if (INr.HasExcise==0) then begin
      OUTFORMFIELD("F_HASEXCISE",USetStr(23352));
    end;    
    totinprice = totinprice + IVrw.Quant*INr.InPrice;
    switch (IVrw.stp) begin 
      case kInvoiceRowTypeMultiBuyDiscount:
        OUTFORMFIELD("F_ARTNR",IVrw.ArtCode);
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        PrintValueInclZero("F_ANTAL",IVrw.Quant,M4UVal,LangNrr,SFb,false);
        if (FIELDINFORM("F_APRIS")) then begin
          GetFieldArgument(Docr,F_APRIS,tstr);
          if (nonblank(tstr)) then begin
            t = Round(IVrw.Price,SetRoundModeD(StringToInt(tstr)));
            PrintValueInclZero("F_APRIS",t,M423Val,LangNrr,SFb,false);
          end else begin
            if (RoundRec.Discount==0) then begin
              t = Round(IVrw.Price,SetRoundModeD(3));
            end else begin
              t = Round(IVrw.Price,DefaultRoundMode);
            end;
            PrintValueInclZero("F_APRIS",t,M423Val,LangNrr,SFb,false);
          end;  
        end;      
        PrintValueInclZero("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,false);
        PrintValue("F_RABATT",IVrw.vRebate,M4Val,LangNrr,SFb,false);
      case kInvoiceRowTypeStructuredItemComponent:
        goto LkInvoiceRowTypeNormal1;
      case kInvoiceRowTypeNormal:
LkInvoiceRowTypeNormal1:;
        totweight = totweight + IVrw.Quant*INr.Weight;
        totnetweight = totnetweight + IVrw.Quant*INr.NetWeight;
        totvolume = totvolume + IVrw.Quant*INr.Volume;
        totqty = totqty + IVrw.Quant;
        if (MSb.UnitConvCalc==0) then begin
          totqty2 = totqty2 + IVrw.Coefficient*IVrw.Quant;
        end else begin
          totqty2 = totqty2 + IVrw.Quant/IVrw.Coefficient;
        end;
/*
done using ovst        
      case kInvoiceRowTypeVoid:
        totweight = totweight - IVrw.Quant*INr.Weight;
        totvolume = totvolume - IVrw.Quant*INr.Volume;
        totqty = totqty - IVrw.Quant;
        if (MSb.UnitConvCalc==0) then begin
          totqty2 = totqty2 - IVrw.Coefficient*IVrw.Quant;
        end else begin
          totqty2 = totqty2 - IVrw.Quant/IVrw.Coefficient;
        end;
*/                
      case kInvoiceRowTypeCorrection:
        totweight = totweight - IVrw.Quant*INr.Weight;
        totnetweight = totnetweight - IVrw.Quant*INr.NetWeight;
        totvolume = totvolume - IVrw.Quant*INr.Volume;
        totqty = totqty - IVrw.Quant;
        if (MSb.UnitConvCalc==0) then begin
          totqty2 = totqty2 - IVrw.Coefficient*IVrw.Quant;
        end else begin
          totqty2 = totqty2 - IVrw.Quant/IVrw.Coefficient;
        end;
    end;
    totfifo = totfifo + IVrw.FIFORowVal;
    InvVat(1,IVr.InclVAT,IVr.NoTAXonVAT,IVr.ExportFlag,IVrw.VATCode,IVrw.Sum,vatprc,vatval,vatexclprc,vatinclprc,rowtax);
    switch (IVrw.stp) begin
      case kInvoiceRowTypeStructuredItemComponent:
        goto LkInvoiceRowTypeNormal2;
      case kInvoiceRowTypeNormal:
LkInvoiceRowTypeNormal2:;      
        PrintInvoiceRow_1(MSb,INr,IVrw,i,vatprc,vatval,vatexclprc,vatinclprc,rowtax,printedrownr,
                          RepSpec,IVr,Docr,RoundRec,LangNrr,SFb,totdiscount,totcombase2sum,totcombase2vat,negamountf);
        if (FIELDINFORM("F_TOTALINTERNALTAXES")) or (FIELDINFORM("F_TOTALVATPERCEPTIONS")) then begin
          switch (VATType(IVrw.VATCode)) begin
            case kVATTypeNormalWithInternalTaxes:
              totnormwinttax = totnormwinttax + rowtax;
            case kVATTypeNormalWithVATPerceptions:
              totnormwithvatprc = totnormwithvatprc + rowtax;
          end;
        end;
      case kInvoiceRowTypeVoid:
        IVrw.Quant = -IVrw.Quant;
        OUTFORMFIELD("F_ROWNAME",USetStr(1216));
        PrintInvoiceRow_1(MSb,INr,IVrw,i,vatprc,vatval,vatexclprc,vatinclprc,rowtax,printedrownr,
                          RepSpec,IVr,Docr,RoundRec,LangNrr,SFb,totdiscount,totcombase2sum,totcombase2vat,negamountf);
      case kInvoiceRowTypeCorrection:
        PrintInvoiceRow_1(MSb,INr,IVrw,i,vatprc,vatval,vatexclprc,vatinclprc,rowtax,printedrownr,
                          RepSpec,IVr,Docr,RoundRec,LangNrr,SFb,totdiscount,totcombase2sum,totcombase2vat,negamountf);
        if (FIELDINFORM("F_TOTALINTERNALTAXES")) or (FIELDINFORM("F_TOTALVATPERCEPTIONS")) then begin
          switch (VATType(IVrw.VATCode)) begin
            case kVATTypeNormalWithInternalTaxes:
              totnormwinttax = totnormwinttax - rowtax;
            case kVATTypeNormalWithVATPerceptions:
              totnormwithvatprc = totnormwithvatprc - rowtax;
          end;
        end;
      case kInvoiceRowTypeDebit:
        goto  LLPrintInvoiceRows;   
      case kInvoiceRowTypeCredit:
LLPrintInvoiceRows:;
        if (IVrw.OrdRow!=-1) then begin
          if (FieldInForm("F_BESKRIVNING")) then begin
            tstr = IVrw.Spec & CreateInvoiceNumber(IVrw.OrdRow,IVrw.CredOfficialSerNr);
            OUTFORMFIELD("F_BESKRIVNING",tstr);
          end else begin
            tstr = USetStr(1807) & CreateInvoiceNumber(IVrw.OrdRow,IVrw.CredOfficialSerNr);
            OUTFORMFIELD("F_SPECIFIKATION",tstr);
          end;
//          tstr = USetStr(1807) & CreateInvoiceNumber2(IVrw.OrdRow);
//          OUTFORMFIELD("F_ARGINVNUMBER3",tstr);
        end;
      case kInvoiceRowTypeInterest:
        PrintInvoiceRow_4(MSb,INr,IVrw,vatprc,vatval,vatexclprc,vatinclprc,rowtax,printedrownr,
                          RepSpec,IVr,Docr,RoundRec,LangNrr,SFb,negamountf);

      case kInvoiceRowTypeDownpayment:
        PrintInvoiceRow_5(IVrw,INr,vatprc,vatval,vatexclprc,vatinclprc,rowtax,printedrownr,
                          RepSpec,IVr,Docr,RoundRec,LangNrr,SFb,negamountf);
      case kInvoiceRowTypePrepayment:
        if (HasLocalization("RUS,UKR")==false) then begin
          if (HasLocalization("POL")==false) then begin
            OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
          end;
          PrintValue("F_BELOPP",-IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
          OUTFORMFIELD("F_PREPAYNR",IVrw.CUPNr);
          ARHistr.CUPNr = IVrw.CUPNr;
          ARHistr.FileName = "IPVc";
          if (ReadFirstMain(ARHistr,2,true)==false) then begin 
            ARHistr.CUPNr = IVrw.CUPNr;
            ARHistr.FileName = "CLInVc";
            if (ReadFirstMain(ARHistr,2,true)==false) then begin end;
          end;
          OUTFORMFIELD("F_PREPAYDATE",ARHistr.TransDate);          
        end else begin
          endformrowf = false;
        end;
      case kInvoiceRowTypeLoan:
        OUTFORMFIELD("F_SALESACC",IVrw.SalesAcc);
        if (nonblank(IVrw.RvrsVATCode)) then begin
          OUTFORMFIELD("F_MOMSKOD",IVrw.RvrsVATCode);
        end else begin
          OUTFORMFIELD("F_MOMSKOD",IVrw.VATCode);
        end;
        OUTFORMFIELD("F_ROWOBJECT",IVrw.Objects);
        PrintValue("F_ROWTOTIFVAT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        PrintValue("F_ROWTOTIFNOVAT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        PrintValue("F_ROWTOT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        OUTFORMFIELD("F_BESKRIVNING",USetStr(8080));
      case kInvoiceRowTypeLoanInterest:
        OUTFORMFIELD("F_SALESACC",IVrw.SalesAcc);
        if (nonblank(IVrw.RvrsVATCode)) then begin
          OUTFORMFIELD("F_MOMSKOD",IVrw.RvrsVATCode);
        end else begin
          OUTFORMFIELD("F_MOMSKOD",IVrw.VATCode);
        end;
        OUTFORMFIELD("F_ROWOBJECT",IVrw.Objects);
        PrintValue("F_ROWTOTIFVAT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        PrintValue("F_ROWTOTIFNOVAT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        PrintValue("F_ROWTOT",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        OUTFORMFIELD("F_BESKRIVNING",USetStr(8081));
      case kInvoiceRowTypeSubtotal:
        PrintValueInclZero("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,false);
        PrintValueInclZero("F_SUBTOTALAMOUNT",IVrw.Sum,M4Val,LangNrr,SFb,false);
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        OutFormImage(dummyINr);
        EndFormRow;
        OutFormImage(dummyINr);
      case kInvoiceRowTypeGiftVoucherSold:
        endformrowf = PrintInvoiceRow_Payments(IVrw,LangNrr,SFb,negamountf);
      case kInvoiceRowTypeGiftVoucherPayment:
        endformrowf = PrintInvoiceRow_Payments(IVrw,LangNrr,SFb,negamountf);
      case kInvoiceRowTypeLoyaltyPointsPayment:
        endformrowf = PrintInvoiceRow_Payments(IVrw,LangNrr,SFb,negamountf);
      case kInvoiceRowTypeCashPayment:
        endformrowf = PrintInvoiceRow_Payments(IVrw,LangNrr,SFb,negamountf);
      case kInvoiceRowTypeCreditCardPayment:
        endformrowf = PrintInvoiceRow_Payments(IVrw,LangNrr,SFb,negamountf);
      case kInvoiceRowTypeHeader:
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec);
        OutFormImage(dummyINr);
        EndFormRow;
/*
      case kInvoiceRowTypePreviousDownpayment:
        PrintValue("F_APRIS",IVrw.Price,M4Val,LangNrr,SFb,negamountf);
        PrintValueInclZero("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,false);
*/        
        OutFormImage(dummyINr);
      case kInvoiceRowTypePerceptionTax:
        OUTFORMFIELD("F_ROWNAME",USetStr(8108));
        OUTFORMFIELD("F_REGIONROW",IVrw.CuAccCode);
        Regionr.Code = IVrw.CuAccCode;
        ReadFirstMain(Regionr,1,true);
        OUTFORMFIELD("F_REGIONNAMEROW",Regionr.Name);
        OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec); 
        OUTFORMFIELD("F_SALESACC",IVrw.SalesAcc);
        PrintValue("F_TAX2PRC",IVrw.TAX2Prc,M4Val,LangNrr,SFb,negamountf);          
        PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);        
      case kInvoiceRowTypeWithholdingTax:
        OUTFORMFIELD("F_ROWNAME",USetStr(13875));
        OUTFORMFIELD("F_REGIONROW",IVrw.WHTax);
        if (blank(IVrw.Spec)) then begin
          OUTFORMFIELD("F_SPECIFIKATION",USetStr(13875) & " " & IVrw.WHTax ); 
        end else begin
          OUTFORMFIELD("F_SPECIFIKATION",IVrw.Spec); 
        end;
        if (HasLocalization("ITA,PRT")) then begin
          tstr = ValToString(IVrw.TAX2Prc,M4Val,SFb.thousSep,SFb.decimalPt,0) & "%";
          OUTFORMFIELD("F_TAX2PRC",tstr);
        end else begin
          PrintValue("F_TAX2PRC",IVrw.TAX2Prc,M4Val,LangNrr,SFb,negamountf);          
        end;
        PrintValue("F_BELOPP",IVrw.Sum,M4Val,LangNrr,SFb,negamountf);        
        totwithh = totwithh + IVrw.Sum;
    end;
//    if (nonblank(INr.Code)) then begin
      OutFormImage(INr);
//    end;
    if (endformrowf) then begin
      EndFormRow;
    end;
    end;
  end;
  RETURN;
END;

global
procedure PrintInvoiceRows(record RcVc RepSpec,record IVVc IVr,record DocVc Docr,record RoundBlock RoundRec,record LangNrVc LangNrr,record SysFormatBlock SFb,var val totdiscount,
                           var val totinprice,var val totweight,var val totvolume,var val totcombase2sum,var val totqty,var val totqty2,var val totfifo,var val totcombase2vat,
                           var val totwithh,var val totnormwinttax,var val totnormwithvatprc,var val PointsSpent,
                           Boolean negamountf,Integer rwcnt)
begin
   val totnetweight;
   
   PrintInvoiceRows2(RepSpec,IVr,Docr,RoundRec,LangNrr,SFb,totdiscount,
                    totinprice,totweight,totnetweight,totvolume,totcombase2sum,totqty,totqty2,totfifo,totcombase2vat,
                    totwithh,totnormwinttax,totnormwithvatprc,PointsSpent,
                    negamountf,rwcnt);
  return;
end;
