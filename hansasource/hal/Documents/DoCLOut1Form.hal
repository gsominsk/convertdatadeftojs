external procedure PrintCurrencyName(string,string);
external procedure PrintCurrencyCode(string,string);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetSuppBankSWIFT(string,var string);
external procedure GetSuppBankName(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetMonthText(string,Date,var string);
external procedure GetUserName(string,var string);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetCorspAccNumber(string,var string);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);

procedure PrintFormRowFields(record CUVc VEr,Array LongInt VIPaySernrs,Array string VIPayInvoicenrs,Array string VIPayAccnumbers,Array string VIPayComments,
                             Array string VIPayPaymodes,Array val VIPayRecvals,Array Date VIPayIVdates,Integer rowsnr)
BEGIN
  Integer i;
  record APAccBlock APAccRec;
  record CCatVc CCatr;
  record VGVc VGr;
  string 255 tstr;
  
  BlockLoad(APAccRec);
  for (i=0;i<=rowsnr;i=i+1) begin
    OUTFORMFIELD("F_INVOICENR",VIPaySernrs[i]);
    OUTFORMFIELD("F_FAKTNR",VIPayInvoicenrs[i]);
    if (VIPaySernrs[i]!=-1) then begin
      OUTFORMFIELD("F_CREDVAL",VIPayRecvals[i]);
      if (nonblank(VIPayAccnumbers[i])) then begin
        OUTFORMFIELD("F_SALESACC",VIPayAccnumbers[i]);
      end else begin
        if (blank(VEr.VECat)) then begin
          CCatr.Code = VEr.CustCat;
          if (ReadFirstMain(CCatr,1,true)) then begin
            if (nonblank(CCatr.AccAP)) then begin
              tstr = CCatr.AccAP; 
            end else begin
              tstr = APAccRec.APAcc; 
            end;  
          end;
        end else begin
          VGr.Code = VEr.VECat;
          if (ReadFirstMain(VGr,1,true)) then begin
            if (nonblank(VGr.AccAP)) then begin
              tstr = VGr.AccAP; 
            end else begin
              tstr = APAccRec.APAcc; 
            end;  
          end;
        end;
        OUTFORMFIELD("F_SALESACC",tstr);
      end;
    end;
    EndFormRow;
  end;
  RETURN;
END;

procedure PrintFormFields(record OPVc OPr,record CLOutVc CLOutr,record CUVc VEr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record UserVc Userr;
  val t;
  string 255 tstr;

  tstr = ValToString(CLOutr.NetVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_DEBVAL",tstr);
  tstr = ValToString(CLOutr.VATVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMMAMOMS",tstr);
  if (FIELDINFORM("F_BASE1BETALA")) then begin
    t = MulRateToBase1(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE1BETALA",tstr);
  end;
  if (FIELDINFORM("F_BASE2BETALA")) then begin
    t = MulRateToBase2(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE2BETALA",tstr);
  end;
  if (FIELDINFORM("F_RUSPAYNR")) then begin
    RussianPaymentNr(CLOutr.SerNr,tstr);
    OUTFORMFIELD("F_RUSPAYNR",tstr);
  end;  
  if (FIELDINFORM("F_SECACC")) then begin
    GetCorspAccNumber(CLOutr.CorspCode,tstr);
    OUTFORMFIELD("F_SECACC",tstr);
  end;  
  OUTFORMFIELD("F_TRANSDATE",CLOutr.TransDate);
  OUTFORMFIELD("F_SERNR",CLOutr.SerNr);
  tstr = ValToString(CLOutr.Total,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_ATTBETALA",tstr);
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    ValToText(CLOutr.Total,M4Val,CLOutr.CurncyCode,"",tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
  end;    
  OUTFORMFIELD("F_COMMENT",CLOutr.Comment);
  OUTFORMFIELD("F_PERSON",CLOutr.Person);
  if (FIELDINFORM("F_SALJARNAMN")) then begin
    GetUserName(CLOutr.Person,tstr);
    OUTFORMFIELD("F_SALJARNAMN",tstr);
  end;  
  OUTFORMFIELD("F_ADRESS",CLOutr.CUName);
  OUTFORMFIELD("F_LEVVATNR",VEr.VATNr);
  OUTFORMFIELD("F_BANKACC",VEr.BankAccount);
  if (FIELDINFORM("F_BANKNAME")) then begin
    GetSuppBankName(VEr.Code,tstr);
    OUTFORMFIELD("F_BANKNAME",tstr);
  end;  
  if (FIELDINFORM("F_SWIFT")) then begin
    GetSuppBankSWIFT(VEr.Code,tstr);
    OUTFORMFIELD("F_SWIFT",tstr);
  end;  
  OUTFORMFIELD("F_ADDR1",CLOutr.Addr0);
  OUTFORMFIELD("F_ADDR2",CLOutr.Addr1);
  OUTFORMFIELD("F_ADDR3",CLOutr.Addr2);
  OUTFORMFIELD("F_INVADDR3",CLOutr.Addr3);
  OUTFORMFIELD("F_INVADDR4",CLOutr.Addr4);
  if (FIELDINFORM("F_SIGNATURE")) then begin
    GetUserName(CurrentUser,tstr);
    OUTFORMFIELD("F_SIGNATURE",tstr);
  end;  
  Userr.Code = CLOutr.Person;
  if (ReadFirstMain(Userr,1,true)) then begin end;
  OUTFORMFIELD("F_OURREF",Userr.CurOurContact);
  OUTFORMFIELD("F_PERSONACCOUNT",Userr.PersAcc);
  OUTFORMFIELD("F_PERSONID",Userr.IDCode);
  OUTFORMFIELD("F_PERSONSPEC",Userr.Spec);
  OUTFORMFIELD("F_PERSONCOMMENT",Userr.Comment);
  OUTFORMFIELD("F_DATEDAY",GetDay(CLOutr.TransDate));
  OUTFORMFIELD("F_DATEMONTH",GetMonth(CLOutr.TransDate));
  OUTFORMFIELD("F_DATEYEAR",GetYear(CLOutr.TransDate));
  GetMonthText(CLOutr.LangCode,CLOutr.TransDate,tstr);
  OUTFORMFIELD("F_DATEMONTHTEXT",tstr);
  PrintCurrencyCode("F_VALUTA",CLOutr.CurncyCode);
  if (FIELDINFORM("F_VALUTANAMN")) then begin
    PrintCurrencyName("F_VALUTANAMN",CLOutr.CurncyCode);
  end;  
  tstr = ValToString(CLOutr.NetVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMMA",tstr);
  tstr = ValToString(CLOutr.VATVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_MOMS",tstr);
  OUTFORMFIELD("F_KUNDNR",CLOutr.CUCode);
  OUTFORMFIELD("F_KUNDNAMN",CLOutr.CUName);
  OUTFORMFIELD("F_REFERENSNUMMER",CLOutr.RefStr);
  RETURN;
END;

global
procedure DoCLOut1Form(record RcVc RepSpec,record OPVc OPr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record VIVc VIr;
  record CUVc VEr;
  record CLOutVc OPDr;
  row OPVc OPrw;
  row OPVc OP2rw;
  Integer j,k,rownr;
  Integer ovst;
  Boolean VIs,VEs;
  Array string 20 avecodes;
  Array LongInt asernrs;
  Array string 10 aaccnumbers;
  Array Date ainvdates;
  Array Date atransdates;
  Array val asums;
  Array string 5 acurncycodes;
  Array string 20 ainvoicenrs;

  Array LongInt VIPaySernrs;
  Array string 20 VIPayInvoicenrs;
  Array string 10 VIPayAccounts;
  Array string 5 VIPayCurencycodes;
  Array val VIPayRecvals;
  Array Date VIPayInvDates;
  Array string 60 VIPayComments;
  Array string 2 VIPayPaymodes;

  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  Integer i,rwcnt,doccnt;
    
  GetLangNr("",LangNrr);
  BlockLoad(SysFormatRec);  
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCLOut1Form;
  end;
  doccnt = MatRowCnt(FDr);
  
  rwcnt = MatRowCnt(OPr);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if (OPrw.ovst==0) then begin
      VIr.SerNr = OPrw.VISerNr;
      avecodes[i] = OPrw.VECode;
      if (ReadFirstMain(VIr,1,true)) then begin
        avecodes[i] = VIr.VECode;
        asernrs[i] = VIr.SerNr;
        ainvdates[i] = VIr.InvDate;
        atransdates[i] = VIr.TransDate;
        aaccnumbers[i] = VIr.APAcc;
        acurncycodes[i] = VIr.CurncyCode;
        ainvoicenrs[i] = VIr.InvoiceNr;
      end;
    end;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if (OPrw.ovst==0) then begin
      if (blank(avecodes[i])) then begin goto L77; end;
      for (j=0;j<i;j=j+1) begin
        if (avecodes[j]==avecodes[i]) then begin goto L77; end;
      end;
      for (j=0;j<rwcnt;j=j+1) begin
        VIPaySernrs[j] = -1;
      end;
      rownr = 0;
      VIPaySernrs[rownr] = asernrs[i];
      VIPayInvoicenrs[rownr] = ainvoicenrs[i];
      VIPayAccounts[rownr] = aaccnumbers[i];
      VIPayCurencycodes[rownr] = acurncycodes[i];
      VIPayRecvals[rownr] = OPrw.RecVal;
      VIPayInvDates[rownr] = ainvdates[i];
      VIPayComments[rownr] = OPrw.Comment;
      if (nonblank(OPrw.PayMode)) then begin
        VIPayPaymodes[rownr] = OPrw.PayMode;
      end else begin
        VIPayPaymodes[rownr] = OPr.PayMode;
      end;
      OPDr.Total = OPrw.RecVal;
      for (j=i+1;j<rwcnt;j=j+1) begin
        if (avecodes[j]==avecodes[i]) then begin          
          MatRowGet(OPr,j,OP2rw);
          OPDr.Total = OPDr.Total + OP2rw.RecVal;
          rownr = rownr + 1;
          VIPaySernrs[rownr] = asernrs[j];
          VIPayInvoicenrs[rownr] = ainvoicenrs[j];
          VIPayAccounts[rownr] = aaccnumbers[j];
          VIPayCurencycodes[rownr] = acurncycodes[j];
          VIPayRecvals[rownr] = OP2rw.RecVal;
          VIPayInvDates[rownr] = ainvdates[j];
          VIPayComments[rownr] = OP2rw.Comment;
          if (nonblank(OP2rw.PayMode)) then begin
            VIPayPaymodes[rownr] = OP2rw.PayMode;
          end else begin
            VIPayPaymodes[rownr] = OPr.PayMode;
          end;
        end;
      end;
      VIr.SerNr = OPrw.VISerNr;
      VIs = ReadFirstMain(VIr,1,true);
      VEr.Code = avecodes[i];
      VEs = ReadFirstMain(VEr,1,true);
      OPDr.SerNr = OPr.SerNr;
      OPDr.TransDate = OPr.TransDate;
      OPDr.OKFlag = OPr.DoneFlag;
      OPDr.ExportedFlag = OPr.ExportedFlag;
      OPDr.CUCode = OPrw.VECode;
      OPDr.CUName = VEr.Name;
      OPDr.Addr1 = VEr.InvAddr0;
      OPDr.Addr2 = VEr.InvAddr1;
      OPDr.Addr3 = VEr.InvAddr2;
      OPDr.Objects = VEr.VEObjects;
      intdocnr = 1;
      printf = true;
      while (printf) begin  
        formcode = "";
        for (k=doccnt-1;k>=0;k=k-1) begin
          MatRowGet(FDr,k,FDrw);
          if (FindFormcode(OPr.DoneFlag,FDrw.Typ)) then begin 
            if (Getformcode(k,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,OPr.SerNr,FDrw.PrintGroupCode,
                            "",intdocnr,"OPVc",formcode)) then
            begin
              goto LBREAK;
            end;
          end;
        end;
LBREAK:;
        if (nonblank(formcode)) then begin
          if (OpenForm(formcode)) then begin
            CommonDocumentFields(RepSpec);    
//            NumberofDocumentPages(formcode,MatRowCnt(OPr));        
            PrintFormFields(OPr,OPDr,VEr,SysFormatRec,LangNrr);
            PrintFormRowFields(VEr,VIPaySernrs,VIPayInvoicenrs,VIPayAccounts,VIPayComments,VIPayPaymodes,VIPayRecvals,VIPayInvDates,rownr);
            CloseForm;
          end else begin
            printf = false;
            MessageBox(1546,formcode);
          end;
        end else begin
          printf = false;
          if (intdocnr==1) then begin
            MessageBox(1624, " " & USetStr(1623));
          end;
        end;
        intdocnr = intdocnr + 1;
      end;
    end;
L77:; 
  end;
LDoCLOut1Form:;  
  RETURN;
END;