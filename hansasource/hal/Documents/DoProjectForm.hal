external procedure PortugueseFormFields(Integer);
external procedure OutAddress(string,string,string,string,string,string,string);
external procedure CommonDocumentFields(record RcVc);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure ValToText(val,Integer,string,string,var string);
external procedure FindPrTransPrice(string,Integer,LongInt,Integer,string,string,var val,var val);
external procedure GetObjectText(string ,var string);
external procedure SplitEclass(string,var Array string);
external function val PRDiffCost(record RcVc,string);
external function val PRCost(record RcVc,string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure Val2ToText(string,val,Integer,string,string,var string);
external procedure GetProjectStats(string,Boolean,Boolean,var val,var val,var val);
external procedure GetUserName(string,var string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);

procedure PrintPRExtra(record RcVc RepSpec,record PRVc PRp)
BEGIN
  record GeneralOptionBlock GenOptr;
  record PErsVc PErsr;
  record UserVc EMr;
  record TSVc TSr;
  row TSVc tsrw;
  Integer i,rwcnt;
  Boolean found;
  Boolean testf;
  val t,t2,r;
  string 255 tstr;
  
  BlockLoad(GenOptr);
  PErsr.Date = RepSpec.sStartDate;
  PErsr.TSSerNr = -1;
  found = true;
  while (LoopMain(PErsr,3,found)) begin
    if (found) then begin
      testf = true;
      if (PErsr.FileName!="TSVc") then begin testf = false; end;
      if ((nonblankdate(RepSpec.sStartDate)) and (PErsr.Date<RepSpec.sStartDate)) then begin testf = false; end;
      if ((nonblankdate(RepSpec.sEndDate)) and (PErsr.Date>RepSpec.sEndDate)) then begin testf = false; end;
      if (PErsr.PRCode!=PRp.Code) then begin testf = false; end;
    end;
    if (testf) then begin
      EMr.Code = PErsr.Person;
      if (ReadFirstMain(EMr,1,true)) then begin end;
      TSr.SerNr = PErsr.TSSerNr;
      if (ReadFirstMain(TSr,1,true)) then begin
        rwcnt = MatRowCnt(TSr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(TSr,i,TSrw);
          if ((TSrw.EMCode==PErsr.Person) and (TSrw.date==PErsr.Date)) then begin             
            if ((blank(RepSpec.f2)) or (TSrw.PRCode==RepSpec.f2)) then begin
              if ((TSrw.ArtCode==PErsr.Item) and (TSrw.PRCode==PErsr.PRCode)) then begin
                OUTFORMFIELD("F_ARTNR",TSrw.ArtCode);
                OUTFORMFIELD("F_SPECIFIKATION",TSrw.Spec);
                OUTFORMFIELD("F_PROJECT",TSrw.PRCode);
                OUTFORMFIELD("F_EMPLOYEE",TSrw.EMCode);
                OUTFORMFIELD("F_EMPLOYEENAME",EMr.Name);
                OUTFORMFIELD("F_TRANSDATUM",TSrw.date); // F_DATUM is a common field that always prints current date...
                FindPrTransPrice(TSrw.PRCode,1,TSr.SerNr,i,TSrw.ArtCode,"",t2,r);
                ValToText(TSrw.Qty,M4Qty,"","",tstr);
                OUTFORMFIELD("F_ANTAL",tstr);
                ValToText(t2,M4Val,"","",tstr);
                OUTFORMFIELD("F_APRIS",tstr);
                CalcSum(TSrw.Qty,t2,0,r,t,GenOptr.UseDiscount);
                ValToText(t,M4Val,"","",tstr);
                OUTFORMFIELD("F_SUMMA",tstr);
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  RETURN;
END;

procedure PrintProhectRows(record PRVc PRr)
BEGIN
  Integer i,rwcnt;
  row PRVc PRrw;
  string 255 tstr;

  rwcnt = MatRowCnt(PRr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PRr,i,PRrw);
    OUTFORMFIELD("F_FAKTSIGN",PRrw.Person);
    GetUserName(PRrw.Person,tstr);
    OUTFORMFIELD("F_AVSNAME",tstr);
    OUTFORMFIELD("F_FAKTDATUM",PRrw.PlanDate);
    OUTFORMFIELD("F_FAKTBELOPP",PRrw.ValStr);
    OUTFORMFIELD("F_FAKTKOMMENTAR",PRrw.Comment);
    OUTFORMFIELD("F_FAKTFAKTURANR",PRrw.InvNr);
    EndFormRow;
  end;
  RETURN;
END;

global 
procedure DoProjectForm(record RcVc RepSpec,record PRVc PRr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  row PRVc PRrw;
  record LangNrVc LangNrr;
  record CUVc CUr;
  record DocVc Docr;
  Integer rwcnt;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode,fldarg;
  Integer doci,doccnt;
  string 255 tstr;
  val budget,invoiced,invable;
//  PRExtraRowType* prxp;
//  Integer xrows;
  record UserVc Userr;
  Array string 20 ac;
    
  BlockLoad(SysFormatRec);  
  GetLangNr("",LangNrr);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoProjectForm;
  end;
  doccnt = MatRowCnt(FDr);

  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (doci=doccnt-1;doci>=0;doci=doci-1) begin
      MatRowGet(FDr,doci,FDrw);
      if (Getformcode(doci,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      "",intdocnr,"PRVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        if (HasLocalization("PRT")) then begin
          PortugueseFormFields(18231);
        end;
        OUTFORMFIELD("F_DESCRIPTION",PRr.Name);
        OUTFORMFIELD("F_BESKRIVNING",PRr.Desc0);
        OUTFORMFIELD("F_BESKRIVNING",PRr.Desc1);
        OUTFORMFIELD("F_BESKRIVNING",PRr.Desc2);
        OUTFORMFIELD("F_TEXT",PRr.Text0);
        OUTFORMFIELD("F_TEXT",PRr.Text1);
        OUTFORMFIELD("F_TEXT",PRr.Text2);
        OUTFORMFIELD("F_TEXT",PRr.Text3);
        OUTFORMFIELD("F_TEXT",PRr.Text4);
        OUTFORMFIELD("F_TEXT",PRr.Text5);
        OUTFORMFIELD("F_TEXT",PRr.Text6);
        OUTFORMFIELD("F_TEXT",PRr.Text7);
        OUTFORMFIELD("F_TEXT",PRr.Text8);
        OUTFORMFIELD("F_TEXT",PRr.Text9);
        OUTFORMFIELD("F_CLASS",PRr.PRClass);
        OUTFORMFIELD("F_LEDARE",PRr.LeaderName);
        OUTFORMFIELD("F_LEDARE2",PRr.Leader2);
        OUTFORMFIELD("F_LEDARE3",PRr.Leader3);
        OUTFORMFIELD("F_LEDARE4",PRr.Leader4);
        OUTFORMFIELD("F_LEDARE5",PRr.Leader5);
        OUTFORMFIELD("F_NAMN",PRr.LeaderName);  
        OUTFORMFIELD("F_NAMN2",PRr.Leader2Name);  
        OUTFORMFIELD("F_NAMN3",PRr.Leader3Name);  
        OUTFORMFIELD("F_NAMN4",PRr.Leader4Name);  
        OUTFORMFIELD("F_NAMN5",PRr.Leader5Name);  
        OUTFORMFIELD("F_STARTDATUM",PRr.StartDate);
        OUTFORMFIELD("F_SLUTDATUM",PRr.EndDate);
        OUTFORMFIELD("F_PROJEKTNUMMER",PRr.Code);
        OUTFORMFIELD("F_KONTAKT",PRr.Contact);

        OUTFORMFIELD("F_KUNDNR",PRr.CustCode);
        OUTFORMFIELD("F_KUNDNAMN",PRr.CustName);
        OUTFORMFIELD("F_SALESMAN",PRr.PrSalesMan);
        Userr.Code = PRr.PrSalesMan;
        if (ReadFirstMain(Userr,1,true)) then begin end;
        OUTFORMFIELD("F_SALESMANNAME",Userr.Name);
        
        CUr.Code = PRr.CustCode;
        if (ReadFIrstMain(CUr,1,true)) then begin
        end;
        OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);      
        OUTFORMFIELD("F_KUNDTEL",CUr.Phone);
        OUTFORMFIELD("F_KUNDFAX",CUr.Fax);
        OutAddress("F_ADRESS",CUr.Name,CUr.InvAddr0,CUr.InvAddr1,CUr.InvAddr2,CUr.InvAddr3,CUr.InvAddr4);
//        OUTFORMFIELD("F_LEVPHONE",CCr.Phone); // wierd code was here to find the contact, can't even have been correct.
        if ((FIELDINFORM("F_INVOICEABLE")) or (FIELDINFORM("F_INVOICED")) or (FIELDINFORM("F_BUDGET")) 
            or (FIELDINFORM("F_DIFFBUDGET"))) then begin
          budget = blankval;
          invoiced = blankval;
          invable = blankval;
          GetFieldArgument(Docr,F_INVOICEABLE,fldarg);
          if (fldarg=="1") then begin
            GetProjectStats(PRr.Code,false,false,budget,invoiced,invable);
          end else begin
            GetProjectStats(PRr.Code,true,false,budget,invoiced,invable);
          end;
          Val2ToText(fldarg,invable,M4Val,"","",tstr);
          OUTFORMFIELD("F_INVOICEABLE",tstr);  
          GetFieldArgument(Docr,F_INVOICED,fldarg);
          Val2ToText(fldarg,invoiced,M4Val,"","",tstr);
          OUTFORMFIELD("F_INVOICED",tstr);  
          GetFieldArgument(Docr,F_BUDGET,fldarg);
          Val2ToText(fldarg,budget,M4Val,"","",tstr);
          OUTFORMFIELD("F_BUDGET",tstr);  
          GetFieldArgument(Docr,F_DIFFBUDGET,fldarg);
          Val2ToText(fldarg,invoiced+invable-budget,M4NegVal,"","",tstr);
          OUTFORMFIELD("F_DIFFBUDGET",tstr);  
        end;
        if (FIELDINFORM("F_COST")) then begin
          budget = PRCost(RepSpec,PRr.Code);
          GetFieldArgument(Docr,F_COST,fldarg);
          Val2ToText(fldarg,budget,M4Val,"","",tstr);
          OUTFORMFIELD("F_COST",tstr);  
        end;
        if (FIELDINFORM("F_DIFFCOST")) then begin
          budget = PRCost(RepSpec,PRr.Code);
          GetFieldArgument(Docr,F_DIFFCOST,fldarg);
          Val2ToText(fldarg,budget,M4Val,"","",tstr);
          OUTFORMFIELD("F_DIFFCOST",tstr);  
        end;
        rwcnt = MatRowCnt(PRr);
        if (rwcnt>0) then begin
          MatRowGet(PRr,rwcnt-1,PRrw);
        end;
        OUTFORMFIELD("F_LASTFAKTSIGN",PRrw.Person);
        OUTFORMFIELD("F_LASTFAKTDATUM",PRrw.PlanDate);
        OUTFORMFIELD("F_LASTFAKTBELOPP",PRrw.ValStr);
        OUTFORMFIELD("F_LASTFAKTKOMMENTAR",PRrw.Comment);
        OUTFORMFIELD("F_LASTFAKTFAKTURANR",PRrw.InvNr);
        SplitEclass(PRr.Objects,ac);
        if (nonblank(ac[0])) then begin
          GetObjectText(ac[0],tstr);
        end;
        OUTFORMFIELD("F_OBJECTTEXT",tstr);
        PrintPRExtra(RepSpec,PRr);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoProjectForm:;  
  RETURN;
END;