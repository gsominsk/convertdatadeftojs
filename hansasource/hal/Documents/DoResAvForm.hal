external function roundmode DefaultRoundMode();
external function Boolean FindCustomerRelation(string,string,var record CUVc);
external procedure OutAddress(string,string,string,string,string,string,string);
external function val GetCleverQty(val,String,String,LongInt);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure GetPayDealText(string,string,var string);
external procedure SetFaxInfo(string,string,string,string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external function Boolean FindResourceItem(String,String,LongInt,var String,var string,Date,var val,var string);
external procedure CommonDocumentFields(record RcVc);

procedure PrintResAvText(record ResAvVc ResAvr,Boolean newlin)
BEGIN
  Integer i,rwcnt;
  string 255 tstr;
  
  rwcnt = LineTextCnt(ResAvr);
  for (i=0;i<rwcnt;i=i+1) begin
    tstr = LineTextGet(ResAvr,i);
    OUTFORMFIELD("F_TEXT",tstr);
    if (newlin) then begin
      EndFormRow;
    end;
  end;  
  RETURN;
END;

global
procedure ResAvForm(record RcVc RepSpec)
BEGIN
  record ResAvVc ResAvr;
  Boolean TrHs;
  LongInt afr,ato;
  Boolean tmpf,previewf;
  
  StartPrintDialogGroup;
  previewf = false;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  ResAvr.SerNr = afr;
  TrHs = true;
  while (LoopMain(ResAvr,1,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (ResAvr.SerNr>ato) then begin
          TrHs = false;
        end;
      end; 
    end;
    if (TrHs) then begin
      tmpf = PrintDocument(ResAvr,"ResAvForm",previewf);    
    end;
  end;
  EndPrintDialogGroup;
  RETURN;
END;

procedure ResAvSetFax(record CUVc CUr,record ResAvVc ResAvr)
BEGIN
  string 50 contact,addr,faxno;
  
  addr = ResAvr.CUName;
  contact = CUr.Person;
  if (blank(addr)) then begin
    addr = CUr.InvAddr0;
  end;
  if (blank(faxno)) then begin
    faxno = CUr.Fax;
  end;  
  SetFaxInfo(contact,addr,faxno,USetStr(1845));  
  RETURN;
END;

procedure PrintResAvRows(record RcVc RepSpec,record ResAvVc ResAvr,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec)
BEGIN
  Integer i,rwcnt;
  record ResUsageVc ResUsage;
  row ResAvVc ResAvrw;
  Record INVc INr;
  string 255 tstr,tstr1,cclassd,pricerules;
  val t,mRate;
  val pers;
  
  rwcnt = MatRowCnt(ResAvr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ResAvr,i,ResAvrw);
    if nonblank(ResAvrw.Comment) then begin
      pers = ResAvrw.NoOfGuests;
      OUTFORMFIELD("F_TRANSNR",i+1);
      OUTFORMFIELD("F_ARTCODE",ResAvrw.ArtCode);
      OUTFORMFIELD("F_KOMMENTAR",ResAvrw.Comment);
      OUTFORMFIELD("F_RESTYPE",ResAvrw.ResType);
      OUTFORMFIELD("F_QTY",ResAvrw.QtyWanted);
      OUTFORMFIELD("F_PUBPL",ResAvrw.PubPriceList);
      OUTFORMFIELD("F_USAGE",ResAvrw.Usage);
      OUTFORMFIELD("F_QTYCONV",ResAvrw.NoOfGuests);
      t = GetCleverQty(ResAvrw.QtyWanted,ResAvrw.ResType,ResAvrw.Usage,ResAvrw.NoOfGuests);
      OUTFORMFIELD("F_ANTAL2",t);
      pers = Round(ResAvrw.PubPrice/pers,DefaultRoundMode);
      PrintValue("F_SUMPRIS",pers,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_PUBPRICE",ResAvrw.PubPrice,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_PUBSUM",ResAvrw.PubSum,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_ROWVATVAL",ResAvrw.PubVat,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_AGENTPRICE",ResAvrw.AgentPrice,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_AGENTSUM",ResAvrw.AgentSum,M4Val,LangNrr,SysFormatRec,false);
      OUTFORMFIELD("F_PERSONS",ResAvrw.Persons);
      OUTFORMFIELD("F_ORTRANSDATE",ResAvrw.TransDate);
      OUTFORMFIELD("F_ORENDDATE",ResAvrw.EndDate);
      tstr = ""; 
      tstr1 = "";
      if (nonblank(ResAvrw.ResType) and nonblank(ResAvrw.Usage) and nonblank(ResAvrw.NoOfGuests)) then begin
        if (FindResourceItem(ResAvrw.ResType,ResAvrw.Usage,ResAvrw.NoOfGuests,tstr,pricerules,ResAvrw.TransDate,t,cclassd)) then begin end;
        INr.Code = tstr;
        if readfirstmain(INr,1,true) then begin
          tstr1 = INr.Name;
        end;
      end;
      OUTFORMFIELD("F_RESITEM",tstr);
      OUTFORMFIELD("F_RESITEMDESC",tstr1);
      OUTFORMFIELD("F_ANTAL",1); 
      OUTFORMFIELD("F_RESUSAGE",ResAvrw.Usage);
      OUTFORMFIELD("F_ROWPACKAGES",ResAvrw.Usage);
      if (FieldInForm("F_ROWPACKTEXT")) then begin
        ResUsage.Code = ResAvrw.Usage;
        if (ReadFirstMain(ResUsage,1,true)) then begin
          OUTFORMFIELD("F_ROWPACKTEXT",ResUsage.Comment);
        end;
      end;
    end;
    EndFormRow;
  end;  
  RETURN;
END;

function val GetResAvVATSum(record ResAvVc ResAvr,Integer whichone)
begin
  row ResAvVc ResAvrw;
  Integer i,rwcnt;
  val res;
  
  res = BlankVal;
  rwcnt = MatRowCnt(ResAvr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ResAvr,i,ResAvrw);
    if (whichone==0) then begin
      res = res + ResAvrw.PubVat;
    end else begin
      res = res + ResAvrw.AgentVat;
    end;
  end;
  GetResAvVATSum = res;
  return;
end;

global
procedure DoResAvForm(record RcVc RepSpec,record ResAvVc ResAvr)
BEGIN
  record CUVc ContactCOr;
  record CUVc CUr;
  record PDVc PDr;
  record UserVc User;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  string 255 tstr;
  val t,temp;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;

  BlockLoad(SysFormatRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoResAvForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = ResAvr.LangCode;
  GetLangNr(langcode,LangNrr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      langcode,intdocnr,"ResAvVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(FDrw.FPCode,MatRowCnt(ResAvr));
        OUTFORMFIELD("F_NUMMER",ResAvr.SerNr);
        OUTFORMFIELD("F_AGENT",ResAvr.SourceCode);
        OUTFORMFIELD("F_NAMN",ResAvr.SourceName);
        OUTFORMFIELD("F_AGENTNAME",ResAvr.SourceName);
        OUTFORMFIELD("F_KUNDNR",ResAvr.CUCode);
        OUTFORMFIELD("F_KUNDNAMN",ResAvr.CUName);
        CUr.Code = ResAvr.CUCode;
        if (ReadFirstMain(CUr,1,true)) then begin
          ResAvSetFax(CUr,ResAvr);
        end;
        CUr.Code = ResAvr.CUCode; //ResAvr.SourceCode;
        if (readfirstmain(CUr,1,true)) then begin
          if (FindCustomerRelation(CUr.Code,ResAvr.CustContact,ContactCOr)) then begin
            OUTFORMFIELD("F_KONTAKT",ContactCOr.Name);
            if (nonblank(ContactCOr.Fax)) then begin
              OUTFORMFIELD("F_KUNDFAX",ContactCOr.Fax);
            end else begin
            OUTFORMFIELD("F_KUNDFAX",CUr.Fax);
            end;
            if (nonblank(ContactCOr.Phone)) then begin
              OUTFORMFIELD("F_KUNDTEL",ContactCOr.Phone);
            end else begin
              OUTFORMFIELD("F_KUNDTEL",CUr.Phone);
            end;
            if (nonblank(ContactCOr.Phone)) then begin
              OUTFORMFIELD("F_EMAIL",ContactCOr.eMail);
            end else begin
              OUTFORMFIELD("F_EMAIL",CUr.eMail);
            end;
          end else begin
            OUTFORMFIELD("F_KONTAKT",CUr.Person);
            OUTFORMFIELD("F_KUNDFAX",CUr.Fax);
            OUTFORMFIELD("F_KUNDTEL",CUr.Phone);
            OUTFORMFIELD("F_EMAIL",CUr.eMail);
          end;
        end;
        if (nonblank(ResAvr.CustContact)) then begin
        end else begin
        end;
        OutAddress("F_ADRESS",CUr.Name,CUr.InvAddr0,CUr.InvAddr1,CUr.InvAddr2,CUr.InvAddr3,CUr.InvAddr4);
        OUTFORMFIELD("F_ADDR2",CUr.InvAddr0);
        OUTFORMFIELD("F_ADDR3",CUr.InvAddr1);
        OUTFORMFIELD("F_ADDR4",CUr.InvAddr2);
        OUTFORMFIELD("F_INVADDR3",CUr.InvAddr3);
        OUTFORMFIELD("F_INVADDR4",CUr.InvAddr4);
        OUTFORMFIELD("F_ADRESSATT",CUr.Name);  
        OUTFORMFIELD("F_ADRESSATT",CUr.Person);  
        OUTFORMFIELD("F_ADRESSATT",CUr.InvAddr0);  
        OUTFORMFIELD("F_ADRESSATT",CUr.InvAddr1);  
        OUTFORMFIELD("F_ADRESSATT",CUr.InvAddr2);  
        OUTFORMFIELD("F_ADRESSATT",CUr.InvAddr3);  
        OUTFORMFIELD("F_ADRESSATT",CUr.InvAddr4);
        if (FIELDINFORM("F_VILLKOR")) then begin
          GetPayDealText(CUr.PayDeal,CUr.LangCode,tstr);
          OUTFORMFIELD("F_VILLKOR",tstr);
        end;
        OUTFORMFIELD("F_AGENTPLDEF",ResAvr.AgentPriceList);
        OUTFORMFIELD("F_TRANSDATE",ResAvr.TransDate);
        OUTFORMFIELD("F_CHECKIN",ResAvr.TransDate);
        OUTFORMFIELD("F_ENDDATE",ResAvr.EndDate);
        OUTFORMFIELD("F_CHECKOUT",ResAvr.EndDate);
        OUTFORMFIELD("F_RESNR",ResAvr.MatherJobNr);
        OUTFORMFIELD("F_COMMENT",ResAvr.Comment);
        OUTFORMFIELD("F_SUMMA",ResAvr.PubSum4);
        OUTFORMFIELD("F_TOTALAGENT",ResAvr.AgentSum4);
        OUTFORMFIELD("F_TOTPERSONS",ResAvr.TotPersons);
        OUTFORMFIELD("F_STARTTIME",ResAvr.StartTime);
        OUTFORMFIELD("F_ENDTIME",ResAvr.EndTime);
        PrintValue("F_MOMS",GetResAvVATSum(ResAvr,0),M4Val,LangNrr,SysFormatRec,false);
        PrintResAvText(ResAvr,false);
        PrintResAvRows(RepSpec,ResAvr,LangNrr,SysFormatRec);
        CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoResAvForm:;  
  RETURN;  
END;     
 
 
