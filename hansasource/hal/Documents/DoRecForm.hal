external function Boolean FindFormcode(Integer,Integer);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);

procedure PrintItem(string ItemCode,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
begin
  record INVc INr;

  if (ReadFirstItem(ItemCode,INr,true,false)) then begin
  end;
  OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
  OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);
  OUTFORMFIELD("F_SHELFCODE",INr.InvCode);
  OUTFORMFIELD("F_WIDTH",INr.Width);
  OUTFORMFIELD("F_HEIGHT",INr.Height);
  OUTFORMFIELD("F_DEPTH",INr.Depth);
  OUTFORMFIELD("F_WEIGHT",INr.Weight);
  OUTFORMFIELD("F_VOLUME",INr.Volume);
  OUTFORMFIELD("F_BARCODE",INr.BarCode);
  PrintValue("F_INPRICE",INr.InPrice,M423Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_ITEMLOCATION",INr.Department);
  OUTFORMFIELD("F_ENHET",INr.Unittext);
  OUTFORMFIELD("F_GRUPP",INr.Group);
  OUTFORMFIELD("F_OBJECT",INr.Objects);
  OUTFORMFIELD("F_PRICECHANGE",INr.LastPriceChange);
  PrintValue("F_BASPRIS",INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_TRANSDATE",INr.LastBasePriceChange);
end;


procedure PrintRecRows(string formcode,record RcVc RepSpec,record RoutingVc Recr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  row RecVc Recrw;
  Integer i,rwcnt,rownr;
  boolean act,first;
  
  rwcnt = MatRowCnt(Recr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Recr,i,Recrw);
    OUTFORMFIELD("F_ROWNR",i+1);
    OUTFORMFIELD("F_ARTNR",Recrw.Item);
    OUTFORMFIELD("F_COMMENT",Recrw.Comment);
    PrintValue("F_PLANINQTY",Recrw.InQty,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_PLANOUTQTY",Recrw.OutQty,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_RELVAL",Recrw.RelVal,M45Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_MATERIAL",Recrw.Material);
    OUTFORMFIELD("F_SUBRECIPE",Recrw.Recipe);
    PrintItem(Recrw.Item,SysFormatRec,LangNrr);
    endFormRow;
  end;
  RETURN;
END;


procedure PrintRec(string formcode,record RcVc RepSpec,record RecVc Recr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record RoutingVc Router;
  record UserVc Userr;
  string 255 tstr;

  CommonDocumentFields(RepSpec);
  NumberofDocumentPages(formcode,MatRowCnt(Recr));

  OUTFORMFIELD("F_RECEPY",Recr.Code);
  OUTFORMFIELD("F_RECNAME",Recr.Comment);
  OUTFORMFIELD("F_SETUPTIME",Recr.SetUpTime);
  
  PrintValue("F_NORMPRODQTY",Recr.NormProdQty,M4UVal,LangNrr,SysFormatRec,false);
  PrintValue("F_MINPRODQTY",Recr.MinProdQty,M4UVal,LangNrr,SysFormatRec,false);
  
  OUTFORMFIELD("F_QTYASSEMBLYDAYS",Recr.QtyAssemblyDays);
  OUTFORMFIELD("F_FIXEDASSEMBDAYS",Recr.FixedAssembDays);
  OUTFORMFIELD("F_HRSTOPROD",Recr.HrsToProd);
  OUTFORMFIELD("F_MINSTOPROD",Recr.MinsToProd);
  OUTFORMFIELD("F_SECSTOPROD",Recr.SecsToProd);
  OUTFORMFIELD("F_NUMPROD",Recr.NumProd);
  OUTFORMFIELD("F_STDBATCH",Recr.StdBatch);
  OUTFORMFIELD("F_ROUTING",Recr.DefaultRouting);

  Router.Code = Recr.DefaultRouting;
  if (ReadFirstMain(Router,1,true)) then begin
    PrintValue("F_OPTPRODQUANT",Router.RouteOptQty,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_MINPRODQUANT",Router.RouteMinQty,M4Val,LangNrr,SysFormatRec,false);
  end;
  
  OUTFORMFIELD("F_INSTRUCTIONS",Recr.Instr0);
  OUTFORMFIELD("F_INSTRUCTIONS1",Recr.Instr1);
  OUTFORMFIELD("F_INSTRUCTIONS2",Recr.Instr2);

  PrintRecRows(formcode,RepSpec,Recr,SysFormatRec,LangNrr);

  PrintValue("F_INSUM",Recr.InSum,M45Val,LangNrr,SysFormatRec,false);
  PrintValue("F_OUTSUM",Recr.OutSum,M45Val,LangNrr,SysFormatRec,false);

  RETURN;
END;

global
procedure DoRecForm(record RcVc RepSpec,record RecVc Recr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt;
  string 20 langcode;
  Boolean langf;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;

  BlockLoad(SysFormatRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoSTForm;
  end;
  rwcnt = MatRowCnt(FDr);

  GetLangNr("",LangNrr);
  intdocnr = 1;
  printf = true;
  while (printf) begin
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(Recr.OKFlag,FDrw.Typ)) then begin
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,Recr.Code,FDrw.PrintGroupCode,
                        langcode,intdocnr,"RecVc",formcode)) then
        begin
          goto LBREAKST;
        end;
      end;
    end;
LBREAKST:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintRec(formcode,RepSpec,Recr,SysFormatRec,LangNrr);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoSTForm:;
  RETURN;
END;

global
procedure RecForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
  record RecVc Recr;

  Recr.Code = RepSpec.f1;
  if(readfirstmain(Recr,1,true)) then begin
    tmpf = PrintDocument(Recr,"RecForm",false);
  end;
  RETURN;
END;
