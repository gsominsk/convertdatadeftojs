global
procedure AddVePerFormTransactionRow(Array Integer aRwtype,Array LongInt aInvoiceNr,Array string aVEInvNo,
                           Array Date aInvDate,Array Date aDueDate,Array val aRVal,Array val aCredVal,Array val aDebVal,Array string aCurncyCode,var Integer acnt,
                           record RcVc RepSpec,record CUVc VEp,record TRVc TRr,row TRVc TRrwp,val v, LongInt invoice)
begin
  Date blankd;
  
  aRwtype[acnt] = 8;
  aInvoiceNr[acnt] = TRr.Number;
  aVEInvNo[acnt] = invoice;
  aInvDate[acnt] = TRr.TransDate;
  aDueDate[acnt] = TRr.TransDate;
  aRVal[acnt] = v;
  if (TRrwp.DebVal!=0) then begin
    aDebVal[acnt] = v;
  end;
  if (TRrwp.CredVal!=0) then begin
    aCredVal[acnt] = v;
  end;
  aCurncyCode[acnt] = TRrwp.Curncy;
  acnt = acnt + 1;
  return;
end;

global
procedure AddVePerFormPaymentRow(Array Integer aRwtype,Array LongInt aInvoiceNr,Array string aVEInvNo,
                           Array Date aInvDate,Array Date aDueDate,Array val aRVal,Array val aDebVal,Array string aCurncyCode,var Integer acnt,
                           record RcVc RepSpec,record CUVc VEp,record OPVc OPr,row OPVc OPrwp)
begin
  Date blankd;
  
  aRwtype[acnt] = 12;
  aInvoiceNr[acnt] = OPr.SerNr;
  aInvDate[acnt] = OPr.TransDate;
  aDueDate[acnt] = OPr.TransDate;
  aRVal[acnt] = OPrwp.RecVal;
  aDebVal[acnt] = OPrwp.RecVal;
  aCurncyCode[acnt] = OPrwp.RecCurncy;
  acnt = acnt + 1;
  return;
end;

global
procedure AddVePerFormCashOutRow(Array Integer aRwtype,Array LongInt aInvoiceNr,Array string aVEInvNo,
                           Array Date aInvDate,Array Date aDueDate,Array val aRVal,Array val aDebVal,Array string aCurncyCode,var Integer acnt,
                           record RcVc RepSpec,record CUVc VEp,record CLOutVc CLOutr,row CLOutVc CLOutrw)
begin
  Date blankd;
  
  aRwtype[acnt] = 11;
  aInvoiceNr[acnt] = CLOutr.SerNr;
  aInvDate[acnt] = CLOutr.TransDate;
  aDueDate[acnt] = CLOutr.TransDate;
  aRVal[acnt] = CLOutrw.Sum;
  aDebVal[acnt] = CLOutrw.Sum;
  aCurncyCode[acnt] = CLOutr.CurncyCode;
  acnt = acnt + 1;
  return;
end;

global
procedure AddVePerFormCashInRow(Array Integer aRwtype,Array LongInt aInvoiceNr,Array string aVEInvNo,
                           Array Date aInvDate,Array Date aDueDate,Array val aRVal,Array val aDebVal,Array string aCurncyCode,var Integer acnt,
                           record RcVc RepSpec,record CUVc VEp,record CLInVc CLInr,row CLInVc CLInrw,Integer typ)
begin
  Date blankd;
  
  aRwtype[acnt] = typ;//13, 14
  aInvoiceNr[acnt] = CLInr.SerNr;
  aInvDate[acnt] = CLInr.TransDate;
  aDueDate[acnt] = CLInr.TransDate;
  aRVal[acnt] = -CLInrw.Sum;
  aDebVal[acnt] = CLInrw.Sum;
  aCurncyCode[acnt] = CLInr.CurncyCode;
  acnt = acnt + 1;
  return;
end;

global
procedure AddVePerFormInvoiceRow(Array Integer aRwtype,Array LongInt aInvoiceNr,Array string aVEInvNo,
                           Array Date aInvDate,Array Date aDueDate,Array val aRVal,Array val aCredVal,Array string aCurncyCode,var Integer acnt,
                           record RcVc RepSpec,record CUVc VEp,record VIVc VIp)
begin
  LongInt intdays;
  record IIBlock IIRec;
  Date blankd;
  val t;
  
  BlockLoad(IIRec);
  aRwtype[acnt] = VIp.InvType;
  aInvoiceNr[acnt] = VIp.SerNr;
  aVEInvNo[acnt] = VIp.InvoiceNr;
  aInvDate[acnt] = VIp.InvDate;
  aDueDate[acnt] = VIp.DueDate;
  if (VIp.InvType==kInvoiceTypeCredit) then begin
    if (RepSpec.flags[7]!=0) then begin
      aCredVal[acnt] = -VIp.PayVal;
      aRVal[acnt] = -VIp.PayVal;
    end else begin
      aCredVal[acnt] = VIp.PayVal;
      aRVal[acnt] = VIp.PayVal;
    end;
  end else begin
    aCredVal[acnt] = VIp.PayVal;
    if (VIp.InvType==kInvoiceTypeCash or VIp.InvType==kInvoiceTypeEmployee) then begin
      aRVal[acnt] = 0;
    end else begin
      aRVal[acnt] = VIp.PayVal;
    end;
  end;
  aCurncyCode[acnt] = VIp.CurncyCode;
  acnt = acnt + 1;
  return;
end;
