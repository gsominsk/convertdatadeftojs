external procedure PrintCurrencyCode(string,string);
external procedure PrintValToTextBaseCur(val,Integer,string,Integer,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external procedure ToStrTRCode(var string,Integer,LongInt);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);
external procedure TRExtYc(record TRVc,var string);

external procedure SelectUnitText(string,string,var string);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure PrintTR(record RcVc RepSpec,record TRVc TRr,string formcode)
begin
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;
  Integer i,rwcnt,rownr;
  row TRVc TRrw;
  string 255 tstr;
  Boolean Accs;
  record AccVc Accr;
  record CUVc CUr;

  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(TRr));
  BlockLoad(SFb);  
  GetLangNr("",LangNrr);
  TRExtYc(TRr,tstr);
  OUTFORMFIELD("F_SERNR",tstr);
  OUTFORMFIELD("F_TRANSDATE",TRr.TransDate);
  OUTFORMFIELD("F_TRANSDATEHIJRI",ConvertDate(kCalendarGregorian,TRr.TransDate,kCalendarHijri));
  OUTFORMFIELD("F_REGDATUM",TRr.RegDate);
  OUTFORMFIELD("F_REGDATUMHIJRI",ConvertDate(kCalendarGregorian,TRr.RegDate,kCalendarHijri));
  OUTFORMFIELD("F_COMMENT",TRr.Comment);
  OUTFORMFIELD("F_SIGNATURE",TRr.Sign);
  PrintValue("F_DEBVAL",TRr.DSum,M4Val,LangNrr,SFb,false);
  PrintValue("F_CREDVAL",TRr.CSum,M4NegVal,LangNrr,SFb,false);
  if (FIELDINFORM("F_DEBVALINTEXTBASECUR1")) then begin
    PrintValToTextBaseCur(TRr.DSum,M4Val,"",1,tstr);
    OUTFORMFIELD("F_DEBVALINTEXTBASECUR1",tstr);  
  end;
  if (FIELDINFORM("F_DEBVALINTEXTBASECUR2")) then begin
    PrintValToTextBaseCur(TRr.DSum2,M4Val,"",2,tstr);
    OUTFORMFIELD("F_DEBVALINTEXTBASECUR2",tstr);  
  end;
  if (FIELDINFORM("F_CREDVALINTEXTBASECUR1")) then begin
    PrintValToTextBaseCur(TRr.CSum,M4NegVal,"",1,tstr);
    OUTFORMFIELD("F_CREDVALINTEXTBASECUR1",tstr);  
  end;
  if (FIELDINFORM("F_CREDVALINTEXTBASECUR2")) then begin
    PrintValToTextBaseCur(TRr.CSum2,M4NegVal,"",2,tstr);
    OUTFORMFIELD("F_CREDVALINTEXTBASECUR2",tstr);  
  end;
  PrintValue("F_DIFF",TRr.DiffVal,M4Val,LangNrr,SFb,false);
  PrintValue("F_DEBVAL2",TRr.DSum2,M4Val,LangNrr,SFb,false);
  PrintValue("F_CREDVAL2",TRr.CSum2,M4NegVal,LangNrr,SFb,false);
  PrintValue("F_DIFF2",TRr.Diff2Val,M4Val,LangNrr,SFb,false);
  OUTFORMFIELD("F_REFERENSNUMMER",TRr.RefStr);
  OUTFORMFIELD("F_STARTDATE",TRr.LastChangeDate);
  OUTFORMFIELD("F_STARTDATEHIJRI",ConvertDate(kCalendarGregorian,TRr.LastChangeDate,kCalendarHijri));
  OUTFORMFIELD("F_SEQUENCE",TRr.SeqNr);

  rwcnt = MatRowCnt(TRr);  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TRr,i,TRrw);
    switch (TRrw.stp) begin
      case 1:
        OUTFORMFIELD("F_TRACCOUNT",TRrw.AccNumber);
        OUTFORMFIELD("F_ROWOBJECT",TRrw.Objects);
        PrintValue("F_DEBVALROW",TRrw.DebVal,M4Val,LangNrr,SFb,false);
        PrintValue("F_DEBVAL2ROW",TRrw.DebVal2,M4Val,LangNrr,SFb,false);
        PrintValue("F_DEBVALCURROW",TRrw.CurDebVal,M4Val,LangNrr,SFb,false);
        PrintValue("F_CREDVALROW",TRrw.CredVal,M4Val,LangNrr,SFb,false);
        PrintValue("F_CREDVAL2ROW",TRrw.CredVal2,M4Val,LangNrr,SFb,false);
        PrintValue("F_CREDVALCURROW",TRrw.CurCredVal,M4Val,LangNrr,SFb,false);
        OUTFORMFIELD("F_KOMMENTAR",TRrw.Comment);
        OUTFORMFIELD("F_OTHERROW",TRrw.ExtraComment);
        PrintCurrencyCode("F_VALUTA",TRrw.Curncy);
        OUTFORMFIELD("F_CONTACT",TRrw.CompCode);
        CUr.Code = TRrw.CompCode;
        if (ReadFirstMain(CUr,1,true)) then begin end;
        OUTFORMFIELD("F_NAMN",CUr.Name);
        OUTFORMFIELD("F_UPDATEMARKDATE",TRrw.UpdDate);
        OUTFORMFIELD("F_UPDATEMARKDATEHIJRI",ConvertDate(kCalendarGregorian,TRrw.UpdDate,kCalendarHijri));
        OUTFORMFIELD("F_SIGNATUREROW",TRrw.Sign);
        OUTFORMFIELD("F_OLDDATEROW",TRrw.OldTransDate);
        OUTFORMFIELD("F_OLDDATEROWHIJRI",ConvertDate(kCalendarGregorian,TRrw.OldTransDate,kCalendarHijri));
        OUTFORMFIELD("F_CORRECTIONDATEROW",TRrw.CorrDate);
        OUTFORMFIELD("F_CORRECTIONDATEROWHIJRI",ConvertDate(kCalendarGregorian,TRrw.CorrDate,kCalendarHijri));
        ToStrTRCode(tstr,TRrw.CorrYc,TRrw.CorrNr);
        OUTFORMFIELD("F_CORRECTIONNUMBER",tstr);
        GetFullCurncyRateText(true,tstr,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2);         
        OUTFORMFIELD("F_RATE",tstr);
        GetFullCurncyRateText(false,tstr,TRrw.FrRate,TRrw.ToRateB1,TRrw.ToRateB2,TRrw.BaseRate1,TRrw.BaseRate2);         
        OUTFORMFIELD("F_BASERATE",tstr);
        PrintValue("F_ANTAL",TRrw.Qty,M4Val,LangNrr,SFb,false);
        OUTFORMFIELD("F_MOMS",TRrw.VATCode);
        if (TRrw.Reconsf) then begin
          OUTFORMFIELD("F_STATUS",USetStr(1329));
        end;
        OUTFORMFIELD("F_RECONCODE",TRrw.ReconCode);
        OUTFORMFIELD("F_ACCSHORTCODE",TRrw.ACShort);
        OUTFORMFIELD("F_TAXACC",TRrw.TAccNumber);
        if (TRrw.SerNr>0) then begin
          OUTFORMFIELD("F_ROWDOCNR",TRrw.SerNr);
        end;
        switch (TRrw.Typ) begin
          case 0:
          case 1:
          case 2:
       end;
      case 2:      
        OUTFORMFIELD("F_SIGNATUREROW",TRrw.Sign);
        OUTFORMFIELD("F_OLDDATEROW",TRrw.OldTransDate);
        OUTFORMFIELD("F_OLDDATEROWHIJRI",ConvertDate(kCalendarGregorian,TRrw.OldTransDate,kCalendarHijri));
        OUTFORMFIELD("F_OTHERROW",TRrw.ExtraComment);
      case 3:
        ToStrTRCode(tstr,TRrw.CorrYc,TRrw.CorrNr);
        OUTFORMFIELD("F_CORRECTIONNUMBER",tstr);
        OUTFORMFIELD("F_CORRECTIONDATEROW",TRrw.CorrDate);
        OUTFORMFIELD("F_CORRECTIONDATEROWHIJRI",ConvertDate(kCalendarGregorian,TRrw.CorrDate,kCalendarHijri));
        OUTFORMFIELD("F_OTHERROW",TRrw.ExtraComment);
      case 4:
        ToStrTRCode(tstr,TRrw.CorrYc,TRrw.CorrNr);
        OUTFORMFIELD("F_CORRECTIONNUMBER",tstr);
        OUTFORMFIELD("F_CORRECTIONDATEROW",TRrw.CorrDate);
        OUTFORMFIELD("F_CORRECTIONDATEROWHIJRI",ConvertDate(kCalendarGregorian,TRrw.CorrDate,kCalendarHijri));
        OUTFORMFIELD("F_OTHERROW",TRrw.ExtraComment);
    end;
/*
  ArrayField(ovst,M4Int,0,0);!!??

*/      
    EndFormRow;
  end;
  return;
end;

global
procedure DoTRForm(record RcVc RepSpec,record TRVc TRr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  Integer i,rwcnt;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoTRForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,TRr.Number,FDrw.PrintGroupCode,
                      "",intdocnr,"TRVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintTR(RepSpec,TRr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoTRForm:;  
  return;
end;

