external function Boolean FindFormcode(Integer,Integer);
external procedure GetPRName(string,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);
external procedure SelectUnitText(string,string,var string);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure PrintSR(record RcVc RepSpec,record SRVc SRr,string formcode)
begin
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record LocationVc Locr;
  record INVc INr;
  Integer i,rwcnt,rownr;
  row SRVc SRrw;
  string 255 tstr;
  val totupr,totfifo,totqty;
  record MainStockBlock MSb;
  record StandProblemVc SPr;
  
  BlockLoad(MSb);
  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(SRr));
  BlockLoad(SysFormatRec);  
  GetLangNr("",LangNrr);
  OUTFORMFIELD("F_COSTACCOUNT",SRr.SRVarAcc);
  OUTFORMFIELD("F_OBJECT",SRr.Objects);
  OUTFORMFIELD("F_LEVDATUM",SRr.TransDate);
  OUTFORMFIELD("F_LEVNUMMER",SRr.SerNr);
  if (FIELDINFORM("F_RUSPAYNR")) then begin
    RussianPaymentNr(SRr.SerNr,tstr);
    OUTFORMFIELD("F_RUSPAYNR",tstr);
  end;    
  Locr.Code = SRr.Location;
  if (ReadFirstMain(Locr,1,true)) then begin
  end;
  OUTFORMFIELD("F_LOCATIONNAME",Locr.Name);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr0);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr1);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr2);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr3);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr4);
  OUTFORMFIELD("F_LOCPHONE",Locr.Phone);
  OUTFORMFIELD("F_LOCFAX",Locr.Fax);
  OUTFORMFIELD("F_LOCCONTACT",Locr.Contact);
  OUTFORMFIELD("F_LOCATION",SRr.Location);

  OUTFORMFIELD("F_COMMENT",SRr.Comment);
  OUTFORMFIELD("F_REASON",SRr.Reason);
  if (FIELDINFORM("F_REASONTEXT")) then begin
    SPr.Code = SRr.Reason;
    if (ReadFirstMain(SPr,1,true)) then begin end;
    OUTFORMFIELD("F_REASONTEXT",SPr.Comment1);
    OUTFORMFIELD("F_REASONTEXT",SPr.Comment2);
    OUTFORMFIELD("F_REASONTEXT",SPr.Comment3);
  end;  
  rwcnt = MatRowCnt(SRr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SRr,i,SRrw);
    INr.Code = SRrw.ArtCode;
    if (ReadFirstItem(SRrw.ArtCode,INr,true,true)) then begin
    end;
    OUTFORMFIELD("F_POSITIONCODE",SRrw.PosCode);
    OUTFORMFIELD("F_ARTNR",SRrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",SRrw.ArtCode);
    OUTFORMFIELD("F_ROWOBJECT",SRrw.Objects);
    OUTFORMFIELD("F_COSTACCOUNTROW",SRrw.SRVarAcc);
    OUTFORMFIELD("F_SERIENR",SRrw.SerialNr);
    OUTFORMFIELD("F_SPECIFIKATION",SRrw.Spec);
    OUTFORMFIELD("F_LAGERPLATS",INr.InvCode);
    OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
    OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);
    PrintValue("F_WEIGHTEDAVARAGE",INr.WeighedAvPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_WEIGHTEDAVARAGETOTAL",SRrw.Qty*INr.WeighedAvPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWPRICE",INr.LastPurchPrice2,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_PURCHVAL",SRrw.Qty*INr.LastPurchPrice2,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_KOSTPRIS",INr.LastPurchPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_BELOPP",SRrw.Qty*INr.LastPurchPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_BASPRIS",INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_SUMBASPRIS",SRrw.Qty*INr.UPrice1,M45Val,LangNrr,SysFormatRec,false);
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(SRrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(SRrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(SRrw.ArtCode,tstr);      
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;  
    if (FIELDINFORM("F_SERIENRBC39")) then begin
      BC39(SRrw.SerialNr,tstr);      
      OUTFORMFIELD("F_SERIENRBC39",tstr);
    end;  
    PrintValue("F_ANTAL",SRrw.Qty,M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWWIDTH",SRrw.UnitXval,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWHEIGHT",SRrw.UnitYval,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWDEPTH",SRrw.UnitZval,M4Qty,LangNrr,SysFormatRec,false);

    if (MSb.UnitConvCalc==0) then begin
      PrintValue("F_ANTAL2",SRrw.Qty*SRrw.Coefficient,M4UVal,LangNrr,SysFormatRec,false);
		end else begin
      PrintValue("F_ANTAL2",SRrw.Qty/SRrw.Coefficient,M4UVal,LangNrr,SysFormatRec,false);
    end;

    PrintValue("F_FIFO",SRrw.FIFO,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_SUMFIFO",SRrw.FIFORowVal,M45Val,LangNrr,SysFormatRec,false);

    PrintValue("F_PRIS",SRrw.NewFIFO,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_SUMPRIS",SRrw.NewFIFORowVal,M45Val,LangNrr,SysFormatRec,false);

    PrintValue("F_DIFF",SRrw.DiffFIFO,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_TOTDIFF",SRrw.DiffFIFORowVal,M45Val,LangNrr,SysFormatRec,false);

    totfifo = totfifo + SRrw.FIFORowVal;
    SelectUnitText("",INr.Unittext,tstr);    
    OUTFORMFIELD("F_ENHET",tstr);
    if (nonblank(SRrw.ArtCode)) then begin
      rownr = rownr + 1;
      OUTFORMFIELD("F_ROWNR",rownr);      
    end;      
    if (nonblank(SRrw.Location)) then begin
      OUTFORMFIELD("F_ROWLOCATION",SRrw.Location);  
    end;
    EndFormRow;
  end;
  PrintValue("F_TOTBASPRIS",totupr,M4Val,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTPRIS",totfifo,M4Val,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTQTY",SRr.TotQty,M4Qty,LangNrr,SysFormatRec,false);
  return;
end;

global
procedure DoSRForm(record RcVc RepSpec,record SRVc SRr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  Integer i,rwcnt;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoSRForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(SRr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,SRr.SerNr,FDrw.PrintGroupCode,
                        "",intdocnr,"SRVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintSR(RepSpec,SRr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoSRForm:;  
  return;
end;
