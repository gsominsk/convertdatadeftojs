external procedure DoPrintAPSForm(record RcVc,record CUVc,
                   val,val,val,val,val,val,val,val,val,
                   Integer,Integer,
                   val,val,val,val,val,val,val,val,
                   Array Integer,Array LongInt,Array LongInt,Array LongInt,
                   Array Date,Array Date,Array val,Array val,Array val,Array val,Array val,
                   Array string,Array string,Integer);
external procedure RunVePer(record RcVc,Boolean,var array val,var array val,var array val,var array string,var Integer,var val,var val);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function val OrderedOPSum(record RcVc,record CUVc);
external function Boolean SetInSet2(string,string);
external procedure ClassTypef(string,string,var Boolean);

global
procedure PrintVePerForm(record RcVc RepSpec,record CUVc VEp,val ARSStartBal,val ARSSum,
                         var array Integer adocRwtype,var array LongInt adocInvoiceNr,var array string adocVEInvNo,
                         var array Date adocInvDate,var array Date adocDueDate,var array val adocRVal,var array val adocSum4,var array val adocDebVal,
                         var array string adocCurncyCode,var Integer adoccnt)
begin
  Integer i,rwcnt;  
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  
  val ARSOnAccBal,ARSIntSum,ARSSumLate,ARSARSum,ARSSumNotLate,ARSLateCount,ARSNotLateCount;
  val ARSs0,ARSs1,ARSs16,ARSs31,ARSs61,ARSs91,ARSs121,ARSs151;
  val ARSOnAccBalb1,ARSSumb1;
  Array LongInt alatedays;
  Array LongInt aRemndr;
  Array val aIntVal;
  Array val aRVAT;

  langcode = VEp.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LPrintVePerForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      langcode,intdocnr,"",formcode)) then
      begin
        goto LBREAKVePer;
      end;
    end;
LBREAKVePer:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(FDrw.FPCode,adoccnt);
        DoPrintAPSForm(RepSpec,VEp,ARSSum,ARSOnAccBal,ARSOnAccBalb1,ARSSumb1,ARSIntSum,ARSSumLate,ARSARSum,ARSStartBal,ARSSumNotLate,ARSLateCount,ARSNotLateCount,
                       ARSs0,ARSs1,ARSs16,ARSs31,ARSs61,ARSs91,ARSs121,ARSs151,
                       adocRwtype,adocInvoiceNr,alatedays,aRemndr,adocInvDate,adocDueDate,aIntVal,
                       adocRVal,aRVAT,adocSum4,adocDebVal,adocVEInvNo,adocCurncyCode,adoccnt);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
  end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LPrintVePerForm:;  
  return;
end;

global
procedure DoVePerForm(record RcVc RepSpec)
begin
  array val acurv1;
  array val acurv2;
  array val acurv3;
  array string 20 acur;
  Integer curcnt;
  val TotStartBal,TotEndBal;

   RunVePer(RepSpec,false,acurv1,acurv2,acurv3,acur,curcnt,TotStartBal,TotEndBal);
   return;
end;

global
procedure VePerForm(record RcVc RepSpec)
begin
  Boolean tmpf;
  
  if (RepSpec.wholemonthf==0) then begin
//    MessageBox(1163,"");
//    goto LVePerForm;
  end;
  tmpf = PrintDocument(RepSpec,"VePerForm",false);
LVePerForm:;
  return;
end;
