external function val CalculateTotalVATFromTaxMatrix(record TaxMatrixVc,Integer);
external procedure RowCalculateTaxMatrix(var record TaxMatrixVc,Integer,Integer,val);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external function Boolean FindFormcode(Integer,Integer);
external procedure GetUserName(string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure SelectUnitText(string,string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

global
procedure DoBPChangeForm(record RcVc RepSpec,record BPCVc BPCr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;
  record AccBlock Accb;
  record CYBlock CYb;
  row BPCVc BPCrw;
  record INVc INr;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  Integer doci,doccnt;
  Integer i,rwcnt;
  string 255 tstr;
  val totbpaiv,totbpiv,totdiff,totdiffincvat,vatv,t1;
  record TaxMatrixVc TMr;
    
  BlockLoad(SFb);  
  BlockLoad(CYb);
  BlockLoad(Accb);  
  GetLangNr("",LangNrr);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoBPChangeForm;
  end;
  doccnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (doci=doccnt-1;doci>=0;doci=doci-1) begin
      MatRowGet(FDr,doci,FDrw);
      if (FindFormcode(BPCr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(doci,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,BPCr.SerNr,FDrw.PrintGroupCode,
                        "",intdocnr,"BPCVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        rwcnt = MatRowCnt(BPCr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(BPCr,i,BPCrw);
          INr.Code = BPCrw.ArtCode;
          if (ReadFirstMain(INr,1,true)) then begin
          end;
          OUTFORMFIELD("F_ARTNR",BPCrw.ArtCode);
          if (FIELDINFORM("F_ARTNRBC39")) then begin
            ItemBC39(BPCrw.ArtCode,tstr);
            OUTFORMFIELD("F_ARTNRBC39",tstr);
          end;  
          if (FIELDINFORM("F_ARTNRBCEAN")) then begin
            ItemBCEAN(BPCrw.ArtCode,tstr);
            OUTFORMFIELD("F_ARTNRBCEAN",tstr);
          end;  
          if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
            ItemBCEAN13(BPCrw.ArtCode,tstr);
            OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
          end;  
          OUTFORMFIELD("F_SPECIFIKATION",BPCrw.Spec);
          SelectUnitText("",INr.Unittext,tstr);    
          OUTFORMFIELD("F_ENHET",tstr);
          OUTFORMFIELD("F_MOMSKOD",BPCrw.VATCode);
          PrintValue("F_ANTAL",BPCrw.Qty,M4Qty,LangNrr,SFb,false);

          PrintValue("F_ROWPRICE",BPCrw.BasePriceBefore,M4Val,LangNrr,SFb,false);
          PrintValue("F_SUMBASPRIS",BPCrw.Qty*BPCrw.BasePriceBefore,M4Val,LangNrr,SFb,false);
          PrintValue("F_BELOPP",BPCrw.BasePriceAfter,M4Val,LangNrr,SFb,false);
          PrintValue("F_SUMBASPRISNEW",BPCrw.Qty*BPCrw.BasePriceAfter,M4Val,LangNrr,SFb,false);
          PrintValue("F_TOTROWTOT",BPCrw.Qty*(BPCrw.BasePriceAfter-BPCrw.BasePriceBefore),M4Val,LangNrr,SFb,false);
          totdiff = totdiff + (BPCrw.BasePriceAfter-BPCrw.BasePriceBefore);
          PrintValue("F_ROWVATVAL",BPCrw.VATSum,M4Val,LangNrr,SFb,false);
          if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
            if (Accb.BasePriceInclVAT!=0) then begin
              PrintValue("F_BASPRISINCLVAT",BPCrw.BasePriceBefore,M4Val,LangNrr,SFb,false);
              PrintValue("F_BASPRISROWINCLVAT",BPCrw.Qty*BPCrw.BasePriceBefore,M4Val,LangNrr,SFb,false);
            end else begin
              UnpackRowFieldMatrix(BPCrw,"TaxMatrix",TMr);
              vatv = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
              RowCalculateTaxMatrix(TMr,BPCr.InclVAT,0,BPCrw.BasePriceBefore);
              vatv = CalculateTotalVATFromTaxMatrix(TMr,BPCr.InclVAT);
              PrintValue("F_BASPRISINCLVAT",BPCrw.BasePriceBefore+vatv,M4Val,LangNrr,SFb,false);
              PrintValue("F_BASPRISROWINCLVAT",BPCrw.Qty*(BPCrw.BasePriceBefore+vatv),M4Val,LangNrr,SFb,false);
            end;
          end else begin
            MulVATIV(BPCrw.VATCode,BPCrw.BasePriceBefore,vatv,t1,2,Accb.BasePriceInclVAT);
            if (Accb.BasePriceInclVAT!=0) then begin
              PrintValue("F_BASPRISINCLVAT",BPCrw.BasePriceBefore,M4Val,LangNrr,SFb,false);
              PrintValue("F_BASPRISROWINCLVAT",BPCrw.Qty*BPCrw.BasePriceBefore,M4Val,LangNrr,SFb,false);
            end else begin
              PrintValue("F_BASPRISINCLVAT",BPCrw.BasePriceBefore+vatv,M4Val,LangNrr,SFb,false);
              PrintValue("F_BASPRISROWINCLVAT",BPCrw.Qty*(BPCrw.BasePriceBefore+vatv),M4Val,LangNrr,SFb,false);
            end;
          end;
          totbpiv = totbpiv + BPCrw.Qty*(BPCrw.BasePriceBefore+vatv);

          PrintValue("F_PRISDIFF",BPCrw.BasePriceAfterSumInclVAT - BPCrw.Qty*(BPCrw.BasePriceBefore+vatv),M4Val,LangNrr,SFb,false);
          totdiffincvat = totdiffincvat + BPCrw.BasePriceAfterSumInclVAT - BPCrw.Qty*(BPCrw.BasePriceBefore+vatv);

          PrintValue("F_BASPRISAFTERINCLVAT",BPCrw.BasePriceAfterInclVAT,M4Val,LangNrr,SFb,false);
          PrintValue("F_BASPRISAFTERROWINCLVAT",BPCrw.BasePriceAfterSumInclVAT,M4Val,LangNrr,SFb,false);
          totbpaiv = totbpaiv + BPCrw.BasePriceAfterSumInclVAT;

          OUTFORMFIELD("F_SERIALNR",BPCrw.SerialNr);
          OUTFORMFIELD("F_TRANSNR",i+1);
          EndFormRow;
        end;
        OUTFORMFIELD("F_TRANSDATE",BPCr.TransDate);
        OUTFORMFIELD("F_SERNR",BPCr.SerNr);
        OUTFORMFIELD("F_SIGNATURE",BPCr.Signature);
        PrintValue("F_TOTANTAL",BPCr.TotQty,M4Qty,LangNrr,SFb,false);
        PrintValue("F_TOTPRICE",BPCr.TotPriceBefore,M4Val,LangNrr,SFb,false);
        PrintValue("F_BASPRISTOTINCLVAT",totbpiv,M4Val,LangNrr,SFb,false);
        PrintValue("F_BASPRISAFTERTOTINCLVAT",totbpaiv,M4Val,LangNrr,SFb,false);
        PrintValue("F_TOTSUMDIFF",totdiff,M4Val,LangNrr,SFb,false);
        PrintValue("F_TOTDIFF",totdiffincvat,M4Val,LangNrr,SFb,false);
        if (FIELDINFORM("F_EMPLOYEENAME")) then begin
          GetUserName(BPCr.Signature,tstr);
          OUTFORMFIELD("F_EMPLOYEENAME",tstr);
        end;  
        OUTFORMFIELD("F_COMMENT",BPCr.Comment0);
        OUTFORMFIELD("F_COMMENT",BPCr.Comment1);
        OUTFORMFIELD("F_COMMENT",BPCr.Comment2);
        OUTFORMFIELD("F_COMMENT",BPCr.Comment3);
        OUTFORMFIELD("F_DOCTYPE",USetStr(23469));
        PrintValue("F_TOTVATBEFORE",BPCr.TotVATBefore,M4Val,LangNrr,SFb,false);
        PrintValue("F_TOTVATAFTER",BPCr.TotVATAfter,M4Val,LangNrr,SFb,false);
        PrintValue("F_TOTSUMBEFORE",BPCr.TotQty*(BPCr.TotPriceBefore-BPCr.TotVATBefore),M4Val,LangNrr,SFb,false);
        PrintValue("F_TOTSUMAFTER",BPCr.TotQty*(BPCr.TotPriceAfter-BPCr.TotVATAfter),M4Val,LangNrr,SFb,false);
        PrintValue("F_TOTVATDIFF",BPCr.TotQty*(BPCr.TotVATAfter-BPCr.TotVATBefore),M4Val,LangNrr,SFb,false);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoBPChangeForm:;  
  RETURN;
END;
