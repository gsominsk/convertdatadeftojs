external procedure PrintCurrencyName(string,string);
external procedure PrintCurrencyCode(string,string);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetVATCodeAccNumbers(string,var string,var string);
external procedure GetSuppBankSWIFT(string,var string);
external procedure GetSuppBankName(string,var string);
external procedure GetSuppBankAcc(string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure GetCorspAccNumber(string,var string);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetUserName(string,var string);
external procedure GetMonthText(string,Date,var string);
external function Boolean GetPMTAX(string,var val);

function Boolean CLOutVIRecordExists(LongInt cloutsernr,LongInt vinr,string filename)
BEGIN
  Boolean res;
  record CLOutVIVc CLOutVIr;
  
  if (cloutsernr==-1) then begin
    CLOutVIr.SerNr = vinr;
    CLOutVIr.FileName = filename;
    res = ReadFirstKey("FileName",CLOutVIr,2,true);
  end else begin
    CLOutVIr.CLOutNr = cloutsernr;
    CLOutVIr.SerNr = vinr;
    CLOutVIr.FileName = filename;
    res = ReadFirstMain(CLOutVIr,3,true);
  end;
  CLOutVIRecordExists = res;
  RETURN;
END;

/*
updating procedure UpdateCLOutVI(LongInt cloutvi,LongInt vinr,string filename)
BEGIN
  record CLOutVIVc CLOutVIr;
  
  CLOutVIr.CLOutNr = cloutvi;
  CLOutVIr.SerNr = vinr;
  CLOutVIr.FileName = filename;
  if (RecordStore(CLOutVIr,false)) then begin end;
  RETURN;
END;
*/

procedure PrintCollectionRow(LongInt sernr,string custcode,string custname,Date transdate,
                             string costaccs,string curncycode,val payval,val basesum4,
                             record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  string 255 tstr;

  OUTFORMFIELD("F_FAKTNR",sernr);
  OUTFORMFIELD("F_SUBCUSTCODE",custcode);
  OUTFORMFIELD("F_SUBCUSTNAME",custname);
  OUTFORMFIELD("F_TRANSDATUM",transdate);
  OUTFORMFIELD("F_SALESACC",costaccs);
  tstr = ValToString(basesum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);    
  OUTFORMFIELD("F_BASE1ROWTOT",tstr);
  tstr = ValToString(payval,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);    
  OUTFORMFIELD("F_ROWTOT",basesum4);
  PrintCurrencyCode("F_SUBVALUTA",curncycode);
  if (FIELDINFORM("F_SUBVALUTANAMN")) then begin
    PrintCurrencyName("F_SUBVALUTANAMN",tstr);
  end;  
  RETURN;
END;

procedure MakeCostAccString(record VIVc VIr,var string costaccs)
BEGIN
  row VIVc VIrw;
  Integer i,rwcnt;
  string 10 svatacc,pvatacc;

  rwcnt = MatRowCnt(VIr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VIr,i,VIrw);
    if (SetInSet(VIrw.AccNumber,costaccs)==false) then begin
      if (nonblank(costaccs)) then begin
        costaccs = costaccs & ",";
      end;  
      costaccs = costaccs & VIrw.AccNumber;    
    end; 
    GetVATCodeAccNumbers(VIrw.VATCode,svatacc,pvatacc);
    if (SetInSet(pvatacc,costaccs)==false) then begin
      if (nonblank(costaccs)) then begin
        costaccs = costaccs & ",";
      end;  
      costaccs = costaccs & pvatacc;
    end;     
  end;   
  RETURN;
END;

procedure PrintCollectionInvoices(LongInt cloutsernr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record CLOutVIVc CLOutVIr;
  record VIVc VIr;
  Boolean TrHs,testf;
  string 255 costaccs;

  TrHs = true;
  CLOutVIr.CLOutNr = cloutsernr;
  while (LoopMain(CLOutVIr,1,TrHs)) begin
    if (CLOutVIr.CLOutNr!=cloutsernr) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      if (CLOutVIr.FileName=="VIVc") then begin
        costaccs = "";
        VIr.SerNr = CLOutVIr.SerNr;
        if (ReadFirstMain(VIr,1,true)) then begin
          if (FIELDINFORM("F_SALESACC")) then begin
            MakeCostAccString(VIr,costaccs);
          end;
          PrintCollectionRow(VIr.SerNr,VIr.VECode,VIr.VEName,VIr.TransDate,costaccs,VIr.CurncyCode,VIr.PayVal,MulRateToBase1(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff),SysFormatRec,LangNrr);
          EndFormRow;          
        end;
      end;  
    end;
  end;
  RETURN;
END;

procedure PrintCLOutColInvoice(LongInt cloutsernr,LongInt visernr,string filename,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record VIVc VIr;
  string 255 costaccs;
  
  if (filename=="VIVc") then begin
    VIr.SerNr = visernr;
    if (ReadFirstMain(VIr,1,true)) then begin
      costaccs = "";
      if (FIELDINFORM("F_SALESACC")) then begin
        MakeCostAccString(VIr,costaccs);
      end;
      PrintCollectionRow(VIr.SerNr,VIr.VECode,VIr.VEName,VIr.TransDate,costaccs,VIr.CurncyCode,VIr.PayVal,MulRateToBase1(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff),SysFormatRec,LangNrr);
    end;  
  end;
  RETURN;
END;

procedure CashCollectionInvoices(LongInt cloutsernr,LongInt fsernr,string ffilename,record LangNrVc LangNrr)
BEGIN
  Integer mode;
  record SysFormatBlock SysFormatRec;
  
  BlockLoad(SysFormatRec);
  mode = 0;
  if ((fsernr!=-1) and (nonblank(ffilename))) then begin
    mode = 1;
  end;
  
  switch (mode) begin
    case 0: 
      PrintCollectionInvoices(cloutsernr,SysFormatRec,LangNrr);
    case 1:
      PrintCLOutColInvoice(cloutsernr,fsernr,ffilename,SysFormatRec,LangNrr);
  end;
  RETURN;  
END;     

global
procedure DoCLOutColForm(record RcVc RepSpec,record CLOutVc CLOutr)
BEGIN
  string 255 tstr;
  val t;
  record UserVc Userr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record SysFormatBlock SysFormatRec;
  
  BlockLoad(SysFormatRec);
  GetLangNr(CLOutr.LangCode,LangNrr);    
  if (CLOutr.OKFlag==0) then begin
//    goto LDoCLOutColForm;//?
  end;
  langcode = CLOutr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCLOutColForm;
  end;
  rwcnt = MatRowCnt(FDr);

  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,CLOutr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"CLOutVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
          CommonDocumentFields(RepSpec);
          if (CLOutr.FSerNr==-1) then begin
            tstr = USetStr(2046);
          end else begin
            tstr = USetStr(2001);
          end;
          if (FIELDINFORM("F_BASE1BETALA")) then begin
            t = MulRateToBase1(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
            tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
            OUTFORMFIELD("F_BASE1BETALA",tstr);
          end;
          if (FIELDINFORM("F_BASE2BETALA")) then begin
            t = MulRateToBase2(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
            tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
            OUTFORMFIELD("F_BASE2BETALA",tstr);
          end;
          PrintCurrencyCode("F_VALUTA",CLOutr.CurncyCode);
          if (FIELDINFORM("F_VALUTANAMN")) then begin
            PrintCurrencyName("F_VALUTANAMN",CLOutr.CurncyCode);
          end;  
          if (FIELDINFORM("F_SECACC")) then begin
            GetCorspAccNumber(CLOutr.CorspCode,tstr);
            OUTFORMFIELD("F_SECACC",tstr);
          end;  
          OUTFORMFIELD("F_TRANSDATE",CLOutr.TransDate);
          OUTFORMFIELD("F_SERNR",CLOutr.SerNr);
          tstr = ValToString(CLOutr.NetVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_SUMMA",tstr);
          tstr = ValToString(CLOutr.VATVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_MOMS",tstr);
          tstr = ValToString(CLOutr.Total,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_ATTBETALA",tstr);
          if (FIELDINFORM("F_ATTBETALATEXT")) then begin
            ValToText(CLOutr.Total,M4Val,CLOutr.CurncyCode,"",tstr);
            OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
          end;            
          OUTFORMFIELD("F_COMMENT",CLOutr.Comment);
          OUTFORMFIELD("F_PERSON",CLOutr.Person);
          if (FIELDINFORM("F_SALJARNAMN")) then begin
            GetUserName(CLOutr.Person,tstr);
            OUTFORMFIELD("F_SALJARNAMN",tstr);
          end;  
          OUTFORMFIELD("F_ADRESS",CLOutr.CUName);
          if (FIELDINFORM("F_BANKACC")) then begin
            GetSuppBankAcc(CLOutr.Person,tstr);
            OUTFORMFIELD("F_BANKACC",tstr);
          end;  
          if (FIELDINFORM("F_BANKNAME")) then begin
            GetSuppBankName(CLOutr.Person,tstr);
            OUTFORMFIELD("F_BANKNAME",tstr);
          end;  
          if (FIELDINFORM("F_SWIFT")) then begin
            GetSuppBankSWIFT(CLOutr.Person,tstr);
            OUTFORMFIELD("F_SWIFT",tstr);
          end;  
          OUTFORMFIELD("F_KUNDNR",CLOutr.CUCode);
          OUTFORMFIELD("F_KUNDNAMN",CLOutr.CUName);
          OUTFORMFIELD("F_ADDR1",CLOutr.Addr0);
          OUTFORMFIELD("F_ADDR2",CLOutr.Addr1);
          OUTFORMFIELD("F_ADDR3",CLOutr.Addr2);
          OUTFORMFIELD("F_INVADDR3",CLOutr.Addr3);
          OUTFORMFIELD("F_INVADDR4",CLOutr.Addr4);
          if (FIELDINFORM("F_SIGNATURE")) then begin
            GetUserName(CurrentUser,tstr);
            OUTFORMFIELD("F_SIGNATURE",tstr);
          end;  
          Userr.Code = CLOutr.Person;
          if (ReadFirstMain(Userr,1,true)) then begin end;
          OUTFORMFIELD("F_OURREF",Userr.CurOurContact);
          OUTFORMFIELD("F_PERSONACCOUNT",Userr.PersAcc);
          OUTFORMFIELD("F_PERSONID",Userr.IDCode);
          OUTFORMFIELD("F_PERSONCOMMENT",Userr.Comment);
          OUTFORMFIELD("F_PERSONSPEC",Userr.Spec);
          OUTFORMFIELD("F_DATEDAY",GetDay(CLOutr.TransDate));
          OUTFORMFIELD("F_DATEMONTH",GetMonth(CLOutr.TransDate));
          OUTFORMFIELD("F_DATEYEAR",GetYear(CLOutr.TransDate));
          GetMonthText(CLOutr.LangCode,CLOutr.TransDate,tstr);
          OUTFORMFIELD("F_DATEMONTHTEXT",tstr);
          OUTFORMFIELD("F_REFERENSNUMMER",CLOutr.RefStr);
          CashCollectionInvoices(CLOutr.SerNr,CLOutr.FSerNr,CLOutr.FileName,LangNrr);
          CloseForm;          
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCLOutColForm:;
  RETURN;  
END;     
