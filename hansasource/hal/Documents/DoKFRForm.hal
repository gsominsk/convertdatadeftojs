external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure ExtractObj(string,var Integer,var string);
external procedure CalcKeyRn(string,string,Integer,Integer,string,Integer,Integer,Integer,Integer,string,string,string,var val);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);

procedure PrepareToPrintKFR(record RcVc RepSpec,record UserDefRepVc UDRr,row UserDefRepVc UDRrw,record UserDefRepColumnsVc UDRCr,
                   var vector string vColumnCode,var vector string vColumnComment,var vector string vColumnRowCode,var vector string vColumnRowComment,
                   var vector val vValue)
begin
  val tmp;
  Integer i,colrcwcnt;
  row UserDefRepColumnsVc UDRCrw;
  transaction record RcVc KeyRepSpec;

  RecordCopy(KeyRepSpec,RepSpec);
  colrcwcnt = MatRowCnt(UDRCr);
  vColumnCode["F_KFRCOLUMNCODE" & "_" & UDRrw.Code] = UDRrw.Code;
  vColumnComment["F_KFRCOLUMNCOMMENT" & "_" & UDRrw.Code] = UDRrw.Comment;
  if (colrcwcnt<=0) then begin
    CalcKeyRn(UDRrw.Code,UDRrw.defstr,RepSpec.IncDaughter,RepSpec.basecurncy,"",0,UDRrw.PeriodType,UDRrw.PeriodOffset,UDRrw.PeriodLength,RepSpec.ObjStr,"","",tmp);
    vValue["F_KFRVALUE" & "_" & UDRrw.Code] = tmp;
  end else begin
    for (i=0;i<colrcwcnt;i=i+1) begin
      MatRowGet(UDRCr,i,UDRCrw);
      if (nonblank(UDRrw.Code)) then begin
        switch (UDRCrw.ColType) begin
          case kUserDefRepColumnTypeCode:
            vColumnRowCode["F_KFRROWCODE" & "_" & UDRrw.Code & "_" & UDRCrw.ColCode] = UDRrw.Code;
          case kUserDefRepColumnTypeComment:
            vColumnRowComment["F_KFRROWCOMMENT" & "_" & UDRrw.Code & "_" & UDRCrw.ColCode] = UDRrw.Comment;
          otherwise
            switch (UDRrw.PeriodType) begin
              case kUserDefRepPeriodTypeFromColumnsDefintion:
                CalcKeyRn(UDRrw.Code,UDRrw.defstr,RepSpec.IncDaughter,RepSpec.basecurncy,UDRCrw.ColCode,UDRCrw.ColType,UDRCrw.PeriodType,UDRCrw.PeriodOffset,UDRCrw.PeriodLength,UDRCrw.Objects,UDRCrw.AddInfo,UDRCrw.CompCode,tmp);
              otherwise
                CalcKeyRn(UDRrw.Code,UDRrw.defstr,RepSpec.IncDaughter,RepSpec.basecurncy,UDRCrw.ColCode,UDRCrw.ColType,UDRrw.PeriodType,UDRrw.PeriodOffset,UDRrw.PeriodLength,UDRCrw.Objects,UDRCrw.AddInfo,UDRCrw.CompCode,tmp);
            end;
            vValue["F_KFRVALUE" & "_" & UDRrw.Code & "_" & UDRCrw.ColCode] = tmp;
        end;
      end;
    end;
  end;
  return;
end;

procedure PrintKFR(string formcode,record UserDefRepColumnsVc UDRCr,var vector string vColumnCode,var vector string vColumnComment,var vector string vColumnRowCode,var vector string vColumnRowComment,var vector val vValue)
begin  
  Boolean testf;
  record DocVc Docr;
  row DocVc Docrw;
  Integer i,rwcnt,colrcwcnt;
  Integer pos;
  string 255 columncode,rowcode;
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;
  string 255 fieldname,tstr;
  
  BlockLoad(SFb);
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
    colrcwcnt = MatRowCnt(UDRCr);
    rwcnt = MatRowCnt(Docr);
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(Docr,i,Docrw);
      pos = 0;
      ExtractObj(Docrw.unitText,pos,columncode);
      ExtractObj(Docrw.unitText,pos,rowcode);
      if (blank(columncode)) then begin
        goto LSKIPROW;
      end;
      if (Docrw.fieldSetNr==F_KFRCOLUMNCODE) then begin
        OutFormField(F_KFRCOLUMNCODE & ":" & i,vColumnCode["F_KFRCOLUMNCODE" & "_" & columncode]);
      end;
      if (Docrw.fieldSetNr==F_KFRCOLUMNCOMMENT) then begin
        OutFormField(F_KFRCOLUMNCOMMENT & ":" & i,vColumnComment["F_KFRCOLUMNCOMMENT" & "_" & columncode]);
      end;
      if (Docrw.fieldSetNr==F_KFRROWCODE) then begin
        if (blank(rowcode)) then begin
          goto LSKIPROW;
        end;
        OutFormField(F_KFRROWCODE & ":" & i,vColumnRowCode["F_KFRROWCODE" & "_" & columncode & "_" & rowcode]);
      end;
      if (Docrw.fieldSetNr==F_KFRROWCOMMENT) then begin
        if (blank(rowcode)) then begin
          goto LSKIPROW;
        end;
        OutFormField(F_KFRROWCOMMENT & ":" & i,vColumnRowComment["F_KFRROWCOMMENT" & "_" & columncode & "_" & rowcode]);
      end;
      if (Docrw.fieldSetNr==F_KFRVALUE) then begin
        fieldname = F_KFRVALUE & ":" & i;
        if (blank(rowcode)) then begin
          tstr = ValToString(vValue["F_KFRVALUE" & "_" & columncode],M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD(F_KFRVALUE & ":" & i,tstr);  

//          PrintValueInclZero("F_KFRVALUE" & ":" & i,vValue["F_KFRVALUE" & "_" & columncode],M4Val,LangNrr,SFb,false);
        end else begin
          tstr = ValToString(vValue["F_KFRVALUE" & "_" & columncode & "_" & rowcode],M4Val,SFb.thousSep,SFb.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD(F_KFRVALUE & ":" & i,tstr);  
          PrintValueInclZero("F_KFRVALUE"  & ":" & i,vValue["F_KFRVALUE" & "_" & columncode & "_" & rowcode],M4Val,LangNrr,SFb,false);
        end;
      end;
LSKIPROW:;        
    end;
  end;
  return;
end;

procedure DoKFR(string formcode,record RcVc RepSpec,record UserDefRepVc UDRr,record UserDefRepColumnsVc UDRCr)
begin
  row UserDefRepVc UDRrw;
  Integer gKsprwcnt,i;
  Boolean testf;
  vector string 255 vColumnCode;
  vector string 255 vColumnComment;
  vector string 255 vColumnRowCode;
  vector string 255 vColumnRowComment;  
  vector val vValue;
  
  gKsprwcnt = MatRowCnt(UDRr);
  for (i=0; i<gKsprwcnt; i=i+1) begin
    MatRowGet(UDRr,i,UDRrw);
    testf = true;
    if (nonblank(RepSpec.f3)) then begin
      if (SetInSet(UDRrw.Code,RepSpec.f3)==false) then begin testf = false; end;
      if (blank(UDRrw.Code)) then begin testf = false; end;
    end;
    if (testf) then begin
      PrepareToPrintKFR(RepSpec,UDRr,UDRrw,UDRCr,vColumnCode,vColumnComment,vColumnRowCode,vColumnRowComment,vValue);
    end;
  end;
  PrintKFR(formcode,UDRCr,vColumnCode,vColumnComment,vColumnRowCode,vColumnRowComment,vValue);
LDoKFR:;  
  return;
end;

/*
in case of vectrors strings not working use below, it should be removed though when aboive code works
procedure DoKFR(string formcode,record RcVc RepSpec,record UserDefRepVc UDRr,record UserDefRepColumnsVc UDRCr)
begin
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;
  record DocVc Docr;
  row DocVc Docrw;
  Integer i,rwcnt;
  row UserDefRepVc UDRrw;
  Integer gKsprwcnt,gi;
  Boolean testf;
  Integer pos;
  string 255 columncode,rowcode;
  val tmp;
  transaction record RcVc KeyRepSpec;
  Integer colrcwcnt,coli;
  row UserDefRepColumnsVc UDRCrw;
  
  RecordCopy(KeyRepSpec,RepSpec);
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
    colrcwcnt = MatRowCnt(UDRCr);
    BlockLoad(SFb);  
    rwcnt = MatRowCnt(Docr);
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(Docr,i,Docrw);
      gKsprwcnt = MatRowCnt(UDRr);
      for (gi=0;gi<gKsprwcnt;gi=gi+1) begin
        MatRowGet(UDRr,gi,UDRrw);
        testf = true;
        if (nonblank(RepSpec.f3)) then begin
          if (SetInSet(UDRrw.Code,RepSpec.f3)==false) then begin testf = false; end;
          if (blank(UDRrw.Code)) then begin testf = false; end;
        end;
        if (testf) then begin
          pos = 0;
          ExtractObj(Docrw.unitText,pos,columncode);
          ExtractObj(Docrw.unitText,pos,rowcode);
          if (Docrw.fieldSetNr==F_KFRCOLUMNCODE) then begin
            if (columncode==UDRrw.Code) then begin
              OutFormField(F_KFRCOLUMNCODE & ":" & i,UDRrw.Code);
            end;
          end;
          if (Docrw.fieldSetNr==F_KFRCOLUMNCOMMENT) then begin
            if (columncode==UDRrw.Code) then begin
              OutFormField(F_KFRCOLUMNCOMMENT & ":" & i,UDRrw.Comment);
            end;
          end;
          if (Docrw.fieldSetNr==F_KFRROWCODE) then begin
            if (columncode==UDRrw.Code) then begin
              if (colrcwcnt<=0) then begin
              end else begin
                for (coli=0;coli<colrcwcnt;coli=coli+1) begin
                  MatRowGet(UDRCr,coli,UDRCrw);
                  switch (UDRCrw.ColType) begin
                    case kUserDefRepColumnTypeCode:
                      if (rowcode==UDRCrw.ColCode) then begin
                        OutFormField(F_KFRCOLUMNCODE & ":" & i,UDRrw.Code);
                      end;
                  end;
                end;
              end;
            end;
          end;
          if (Docrw.fieldSetNr==F_KFRROWCOMMENT) then begin
            if (columncode==UDRrw.Code) then begin
              if (colrcwcnt<=0) then begin
              end else begin
                for (coli=0;coli<colrcwcnt;coli=coli+1) begin
                  MatRowGet(UDRCr,coli,UDRCrw);
                  switch (UDRCrw.ColType) begin
                    case kUserDefRepColumnTypeComment:
                      if (rowcode==UDRCrw.ColCode) then begin
                        OutFormField(F_KFRCOLUMNCODE & ":" & i,UDRrw.Code);
                      end;
                  end;
                end;
              end;
            end;
          end;
          if (Docrw.fieldSetNr==F_KFRVALUE) then begin
            if (columncode==UDRrw.Code) then begin
              if (colrcwcnt<=0) then begin
                CalcKeyRn(UDRrw.Code,UDRrw.defstr,RepSpec.IncDaughter,RepSpec.basecurncy,"",0,0,0,0,RepSpec.ObjStr,"","",tmp);
                PrintValueInclZero("F_KFRVALUE"  & ":" & i,tmp,M4Val,LangNrr,SFb,false);
              end else begin
                for (coli=0;coli<colrcwcnt;coli=coli+1) begin
                  MatRowGet(UDRCr,coli,UDRCrw);
                  switch (UDRCrw.ColType) begin
                    case kUserDefRepColumnTypeCode:
                    case kUserDefRepColumnTypeComment:
                    otherwise
                      CalcKeyRn(UDRrw.Code,UDRrw.defstr,RepSpec.IncDaughter,RepSpec.basecurncy,UDRCrw.ColCode,UDRCrw.ColType,UDRCrw.PeriodType,UDRCrw.PeriodOffset,UDRCrw.PeriodLength,UDRCrw.Objects,UDRCrw.AddInfo,UDRrw.CompCode,tmp);
                      PrintValueInclZero("F_KFRVALUE"  & ":" & i,tmp,M4Val,LangNrr,SFb,false);
                  end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;
*/

function Boolean TestKFRDefinition(record RcVc RepSpec,var record UserDefRepVc UDRr,var record UserDefRepColumnsVc UDRCr)
begin
  Boolean res;
  
  if (blank(RepSpec.shortname)) then begin
    UDRr.shortname = RepSpec.repname;
    UDRr.shortname = "KeyRn";
  end else begin
    UDRr.shortname = RepSpec.shortname;
  end;
  if (ReadFirstMain(UDRr,1,true)==false) then begin
    UDRr.shortname = RepSpec.repname;
    if (ReadFirstMain(UDRr,1,true)==false) then begin
      goto LTestKFRDefinition;
    end;
  end;  
  if (blank(RepSpec.shortname)) then begin
    UDRCr.shortname = RepSpec.repname;
    UDRCr.shortname = "KeyRn";
  end else begin
    UDRCr.shortname = RepSpec.shortname;
  end;  
  if (ReadFirstMain(UDRCr,1,true)) then begin
  end;
  res = true;
LTestKFRDefinition:;  
  TestKFRDefinition = res;
  return;
end;

global
procedure DoKFRForm(record RcVc Dummyr,record RcVc RepSpec)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  val t;
  record DocVc Docr;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record UserDefRepVc UDRr; 
  record UserDefRepColumnsVc UDRCr;
    
  if (TestKFRDefinition(RepSpec,UDRr,UDRCr)==false) then begin
    MessageBox(3167,"");
    goto LDoKFRForm;
  end;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,2,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoKFRForm;
  end;
  langcode = "";
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;  
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      langcode,intdocnr,"",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
        CommonDocumentFields(RepSpec);
//        NumberofDocumentPages(KFRDefrw.FPCode,0);
        DoKFR(formcode,RepSpec,UDRr,UDRCr);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoKFRForm:;  
  return;
end;
