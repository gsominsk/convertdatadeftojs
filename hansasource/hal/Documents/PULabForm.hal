external procedure PrintCurrencyCode(string,string);
external procedure Base1ToBase2(var val,Date,var val);
external function string 255 BC128(string);
external function string 255 SerialNrBC128(string);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val FindVAT(string,val,Integer,Integer);
external procedure BCEAN(string,var string);
external procedure BC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure ItemBC39(string,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);//nk
external function Boolean SetInSet2(string,string);

procedure PULab(record PUVc PUr,row PUVc PUrw,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec,
                var val totcostprice)
BEGIN
  string 255 tstr;
  val t;
  record CUVc VEr;
  record INVc INr;
  record BatchTextVc BatchTextr;
  
  PrintCurrencyCode("F_VALUTA",PUr.CurncyCode);
  GetFullCurncyRateText(true,tstr,PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2);
  OUTFORMFIELD("F_RATE",tstr);
  GetFullCurncyRateText(false,tstr,PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2);
  OUTFORMFIELD("F_BASERATE",tstr);
  OUTFORMFIELD("F_PORDER",PUr.PONr);
  OUTFORMFIELD("F_KOMMENTAR",PUr.Comment);
  OUTFORMFIELD("F_REGDATUM",PUr.RegDate);
  OUTFORMFIELD("F_LEVERANTOR",PUr.VECode);
  OUTFORMFIELD("F_LEVNAMN",PUr.VEName);
  OUTFORMFIELD("F_TRANSDATUM",PUr.TransDate);
  OUTFORMFIELD("F_INLEVNR",PUr.SerNr);  
  OUTFORMFIELD("F_COMMENT",PUr.Comment);
  if (blank(PUrw.Location)) then begin
    OUTFORMFIELD("F_LOCATION",PUr.Location);
  end else begin
    OUTFORMFIELD("F_LOCATION",PUrw.Location);
  end;
  VEr.Code = PUr.VECode;
  if (ReadFirstMain(VEr,1,true)) then begin end;
  OUTFORMFIELD("F_ADRESS",VEr.InvAddr0);  
  OUTFORMFIELD("F_ADRESS",VEr.InvAddr1);  
  OUTFORMFIELD("F_ADRESS",VEr.InvAddr2);  
  OUTFORMFIELD("F_ADRESS",VEr.InvAddr3);  
  OUTFORMFIELD("F_ADRESS",VEr.InvAddr4);  

  ItemBC39(PUrw.ArtCode,tstr);
  OUTFORMFIELD("F_ARTNRBC39",tstr);
  ItemBCEAN(PUrw.ArtCode,tstr);
  OUTFORMFIELD("F_ARTNRBCEAN",tstr);
  ItemBCEAN13(PUrw.ArtCode,tstr);
  OUTFORMFIELD("F_ARTNRBCEAN13",tstr);  
  BC39(PUrw.SerialNr,tstr);
  OUTFORMFIELD("F_SERIENRBC39",tstr);  
  OUTFORMFIELD("F_ARTNR",PUrw.ArtCode);
  OUTFORMFIELD("F_ARTNR2",PUrw.ArtCode);
  PrintValue("F_ANTAL",PUrw.Quant,M4UVal,LangNrr,SysFormatRec,false);
  PrintValue("F_PRIS",PUrw.CostPrice,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_SERIENR",PUrw.SerialNr);
  OUTFORMFIELD("F_SPECIFIKATION",PUrw.Spec);
  BC39(PUrw.VEItemCode,tstr);
  OUTFORMFIELD("F_LEVARTNRBC39",tstr);
  BCEAN(PUrw.VEItemCode,tstr);
  OUTFORMFIELD("F_LEVARTNRBCEAN",tstr);
  OUTFORMFIELD("F_LEVARTNR",PUrw.VEItemCode);
  PrintValue("F_SUMPRIS",PUrw.Quant*PUrw.CostPrice,M4UVal,LangNrr,SysFormatRec,false);
  totcostprice = totcostprice + PUrw.Quant*PUrw.CostPrice;
  if (ReadFirstItem(PUrw.ArtCode,INr,true,true)) then begin end;
  PrintValue("F_ROWPRICEBASECURNCY1",INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
  t = MulRateToBase2(PUr.CurncyCode,INr.UPrice1,PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_ROWPRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);
  t = FindVAT(PUrw.VATCode,INr.UPrice1,1,PUr.NoTAXonVAT);
  PrintValue("F_PRICEBASECURNCY1",t,M4Val,LangNrr,SysFormatRec,false);
  t = MulRateToBase2(PUr.CurncyCode,t,PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2,DefaultCurRoundOff);
  PrintValue("F_PRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);

  if (FIELDINFORM("F_SERIENRBC128")) then begin
    OUTFORMFIELD("F_SERIENRBC128",BC128(PUrw.SerialNr));
  end;  

  OUTFORMFIELD("F_ENHET",INr.Unittext);
  OUTFORMFIELD("F_GRUPP",INr.Group);
  OUTFORMFIELD("F_OBJECT",INr.Objects);
  OUTFORMFIELD("F_AVDELNING",INr.Department);
  OUTFORMFIELD("F_LAGERPLATS",INr.InvCode);
  OUTFORMFIELD("F_EUCODE",INr.EUCodex);
  OUTFORMFIELD("F_PRICECHANGE",INr.LastPriceChange);
  PrintValue("F_BASPRIS",INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_TRANSDATE",INr.LastBasePriceChange);
  OUTFORMFIELD("F_ITEMCODE",INr.AlternativeCode);
  OUTFORMFIELD("F_BARCODE",INr.BarCode);

  OUTFORMFIELD("F_SUPPSERIALNRROW",PUrw.SuppSerialNr);
  OUTFORMFIELD("F_MAJORSTONEROW",PUrw.MajStoneDet);
  OUTFORMFIELD("F_COLOURROW",PUrw.Colour);
  OUTFORMFIELD("F_CLARITYROW",PUrw.Clarity);
  OUTFORMFIELD("F_CERTROW",PUrw.Cert);
  OUTFORMFIELD("F_MINORSTONEROW",PUrw.MinStoneDet);
  OUTFORMFIELD("F_METALROW",PUrw.Metal);
  OUTFORMFIELD("F_ROWWEIGHTROW",PUrw.RowWeight);
  OUTFORMFIELD("F_SIZEROW",PUrw.Size);
  OUTFORMFIELD("F_LENGTHROW",PUrw.Length);
  OUTFORMFIELD("F_WATCHBRANDROW",PUrw.WatchBrand);
  OUTFORMFIELD("F_STYLENAMEROW",PUrw.StyleName);
  OUTFORMFIELD("F_WATCHMETALROW",PUrw.WatchMetal);
  OUTFORMFIELD("F_MOVEMENTROW",PUrw.Movement);
  OUTFORMFIELD("F_BRCSTRROW",PUrw.BrcStr);
  OUTFORMFIELD("F_GENDERROW",PUrw.Gender);
  OUTFORMFIELD("F_OTHERROW",PUrw.Other);
  OUTFORMFIELD("F_OTHER2ROW",PUrw.Other2);
  if nonblank(PUrw.SerialNr) and nonblank(PUrw.ArtCode) then begin 
    BatchTextr.SerialNr = PUrw.SerialNr;
    BatchTextr.ArtCode = PUrw.ArtCode;
    if ReadFirstMain(BatchTextr,2,true) then begin 
      OUTFORMFIELD("F_SUPPSERIALNR",BatchTextr.SuppSerialNr);
      OUTFORMFIELD("F_MAJORSTONE",BatchTextr.MajStoneDet);
      OUTFORMFIELD("F_COLOUR",BatchTextr.Colour);
      OUTFORMFIELD("F_CLARITY",BatchTextr.Clarity);
      OUTFORMFIELD("F_CERT",BatchTextr.Cert);
      OUTFORMFIELD("F_MINORSTONE",BatchTextr.MinStoneDet);
      OUTFORMFIELD("F_METAL",BatchTextr.Metal);
      OUTFORMFIELD("F_ROWWEIGHT",BatchTextr.RowWeight);
      OUTFORMFIELD("F_SIZE",BatchTextr.Size);
      OUTFORMFIELD("F_LENGTH",BatchTextr.Length);

      OUTFORMFIELD("F_WATCHBRAND",BatchTextr.WatchBrand);
      OUTFORMFIELD("F_STYLENAME",BatchTextr.StyleName);
      OUTFORMFIELD("F_WATCHMETAL",BatchTextr.WatchMetal);
      OUTFORMFIELD("F_MOVEMENT",BatchTextr.Movement);
      OUTFORMFIELD("F_BRCSTR",BatchTextr.BrcStr);
      OUTFORMFIELD("F_GENDER",BatchTextr.Gender);
      OUTFORMFIELD("F_OTHER",BatchTextr.Other);
      OUTFORMFIELD("F_OTHER2",BatchTextr.Other2);
      //base price - in standard , name of the argument "Item Price"
    end;
  end;
  RETURN;  
END;

procedure ProdLab(record ProdVc Prodr,row ProdVc Prodrw,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec,
                var val totcostprice)
BEGIN
  string 255 tstr;
  val t;
  record CUVc VEr;
  record INVc INr;
  record BatchTextVc BatchTextr;
  
  OUTFORMFIELD("F_KOMMENTAR",Prodr.Comment);
  OUTFORMFIELD("F_TRANSDATUM",Prodr.ProdDate);
  OUTFORMFIELD("F_INLEVNR",Prodr.SerNr);  
  OUTFORMFIELD("F_COMMENT",Prodr.Comment);
  OUTFORMFIELD("F_LOCATION",Prodr.Location);
  ItemBC39(Prodrw.Item,tstr);
  OUTFORMFIELD("F_ARTNRBC39",tstr);
  ItemBCEAN(Prodrw.Item,tstr);
  OUTFORMFIELD("F_ARTNRBCEAN",tstr);
  ItemBCEAN13(Prodrw.Item,tstr);
  OUTFORMFIELD("F_ARTNRBCEAN13",tstr);  
  BC39(Prodrw.SerialNr,tstr);
  OUTFORMFIELD("F_SERIENRBC39",tstr);  
  OUTFORMFIELD("F_ARTNR",Prodrw.Item);
  OUTFORMFIELD("F_ARTNR2",Prodrw.Item);
  PrintValue("F_ANTAL",Prodrw.OutQty,M4UVal,LangNrr,SysFormatRec,false);
  PrintValue("F_PRIS",Prodrw.ItemCost,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_SERIENR",Prodrw.SerialNr);
  OUTFORMFIELD("F_SPECIFIKATION",Prodrw.Comment);
  PrintValue("F_SUMPRIS",Prodrw.FIFORowVal,M4UVal,LangNrr,SysFormatRec,false);
  totcostprice = totcostprice + Prodrw.FIFORowVal;
  if (ReadFirstItem(Prodrw.Item,INr,true,true)) then begin end;
  PrintValue("F_ROWPRICEBASECURNCY1",INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
  Base1ToBase2(INr.UPrice1,Prodr.ProdDate,t);
  PrintValue("F_ROWPRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);
  if (FIELDINFORM("F_SERIENRBC128")) then begin
    OUTFORMFIELD("F_SERIENRBC128",BC128(Prodrw.SerialNr));
  end;  

  OUTFORMFIELD("F_ENHET",INr.Unittext);
  OUTFORMFIELD("F_GRUPP",INr.Group);
  OUTFORMFIELD("F_OBJECT",INr.Objects);
  OUTFORMFIELD("F_AVDELNING",INr.Department);
  OUTFORMFIELD("F_LAGERPLATS",INr.InvCode);
  OUTFORMFIELD("F_EUCODE",INr.EUCodex);
  OUTFORMFIELD("F_PRICECHANGE",INr.LastPriceChange);
  PrintValue("F_BASPRIS",INr.UPrice1,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_TRANSDATE",INr.LastBasePriceChange);
  OUTFORMFIELD("F_ITEMCODE",INr.AlternativeCode);
  OUTFORMFIELD("F_BARCODE",INr.BarCode);

/*  
  OUTFORMFIELD("F_SUPPSERIALNRROW",Prodrw.SuppSerialNr);
  OUTFORMFIELD("F_MAJORSTONEROW",Prodrw.MajStoneDet);
  OUTFORMFIELD("F_COLOURROW",Prodrw.Colour);
  OUTFORMFIELD("F_CLARITYROW",Prodrw.Clarity);
  OUTFORMFIELD("F_CERTROW",Prodrw.Cert);
  OUTFORMFIELD("F_MINORSTONEROW",Prodrw.MinStoneDet);
  OUTFORMFIELD("F_METALROW",Prodrw.Metal);
  OUTFORMFIELD("F_ROWWEIGHTROW",Prodrw.RowWeight);
  OUTFORMFIELD("F_SIZEROW",Prodrw.Size);
  OUTFORMFIELD("F_LENGTHROW",Prodrw.Length);
  OUTFORMFIELD("F_WATCHBRANDROW",Prodrw.WatchBrand);
  OUTFORMFIELD("F_STYLENAMEROW",Prodrw.StyleName);
  OUTFORMFIELD("F_WATCHMETALROW",Prodrw.WatchMetal);
  OUTFORMFIELD("F_MOVEMENTROW",Prodrw.Movement);
  OUTFORMFIELD("F_BRCSTRROW",Prodrw.BrcStr);
  OUTFORMFIELD("F_GENDERROW",Prodrw.Gender);
  OUTFORMFIELD("F_OTHERROW",Prodrw.Other);
  OUTFORMFIELD("F_OTHER2ROW",Prodrw.Other2);
*/
  if nonblank(Prodrw.SerialNr) and nonblank(Prodrw.Item) then begin 
    BatchTextr.SerialNr = Prodrw.SerialNr;
    BatchTextr.ArtCode = Prodrw.Item;
    if ReadFirstMain(BatchTextr,2,true) then begin 
      OUTFORMFIELD("F_SUPPSERIALNR",BatchTextr.SuppSerialNr);
      OUTFORMFIELD("F_MAJORSTONE",BatchTextr.MajStoneDet);
      OUTFORMFIELD("F_COLOUR",BatchTextr.Colour);
      OUTFORMFIELD("F_CLARITY",BatchTextr.Clarity);
      OUTFORMFIELD("F_CERT",BatchTextr.Cert);
      OUTFORMFIELD("F_MINORSTONE",BatchTextr.MinStoneDet);
      OUTFORMFIELD("F_METAL",BatchTextr.Metal);
      OUTFORMFIELD("F_ROWWEIGHT",BatchTextr.RowWeight);
      OUTFORMFIELD("F_SIZE",BatchTextr.Size);
      OUTFORMFIELD("F_LENGTH",BatchTextr.Length);

      OUTFORMFIELD("F_WATCHBRAND",BatchTextr.WatchBrand);
      OUTFORMFIELD("F_STYLENAME",BatchTextr.StyleName);
      OUTFORMFIELD("F_WATCHMETAL",BatchTextr.WatchMetal);
      OUTFORMFIELD("F_MOVEMENT",BatchTextr.Movement);
      OUTFORMFIELD("F_BRCSTR",BatchTextr.BrcStr);
      OUTFORMFIELD("F_GENDER",BatchTextr.Gender);
      OUTFORMFIELD("F_OTHER",BatchTextr.Other);
      OUTFORMFIELD("F_OTHER2",BatchTextr.Other2);
      //base price - in standard , name of the argument "Item Price"
    end;
  end;
  RETURN;  
END;

function LongInt LabelSetup(integer mode,longint defystep)
begin
  longint lbls,ystep;
  
  if (defystep>0) then begin
    ystep = defystep;
  end else begin
    switch (mode) begin
      case 0: ystep = 1;
      case 1: ystep = 98;
      case 2: ystep = 98;
      case 4: ystep = 206;
      case 5: ystep = 112; //2 *7 117
    end;
  end;

  switch (mode) begin
    case 0: FormLabelGrid(1,1,1,ystep); lbls = 1;
    case 1: FormLabelGrid(3,195,8,ystep); lbls = 24;
    case 2: FormLabelGrid(2,280,8,ystep); lbls = 16;
    case 4: FormLabelGrid(2,280,4,ystep); lbls = 8;
    case 5: FormLabelGrid(2,305,7,ystep); lbls = 14; //2 *7 last 112??
  end;

  LabelSetup = lbls;
  return;
end;

function Boolean EndAndTestLabel(longint lbls,var longint cnt)
begin
  Boolean res;
  
  EndFormLabel;
  cnt = cnt + 1;
  
  if (cnt>=lbls) then begin
    CloseForm;
    cnt = 0;
    res = false;
  end else begin
    res = true;
  end;
  
  EndAndTestLabel = res;
  return;
end;  

procedure DoProdLabFormPrint(record RcVc RepSpec,string formcode,string printer,var Integer labcnt)
BEGIN
  LongInt fromprod,toprod;
  record ProdVc Prodr;
  Boolean TrHs;
  Integer lbls;
  row ProdVc Prodrw;
  Integer rwcnt,i,j;
  LongInt quant,prodcnt;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  val totcostprice;
  Boolean formisopen;
  val vquant;
  record DocVc Docr;
  row DocVc Docrw;
  Integer dwcnt,di;
  LongInt frlab,tolab;
  string 255 frin, toin;
  Boolean test;
  record INVc INr;
  record ItemStatusVc ISr;
  record SerBalVc SBr;
  string 10 location;
  
  //if (blank(RepSpec.f7)) then begin goto LDoProdLabFormPrint; end;
  GetLangNr("",LangNrr);
  BlockLoad(SysFormatRec);
  
  frin = FirstInRange(RepSpec.f3,20);
  toin = LastInRange(RepSpec.f3,20);
  
  lbls = LabelSetup(RepSpec.ArtMode,RepSpec.flags[29]);

  if (nonblank(RepSpec.f2)) then begin 
    frlab = FirstInRange(RepSpec.f2,10);
    tolab = LastInRange(RepSpec.f2,10);    
//    skiplabcnt = tolab - frlab; 
  end;

  prodcnt = 0;
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin end;
  fromprod = FirstInRange(RepSpec.f7,20);
  toprod = LastInRange(RepSpec.f7,20);
  if nonblank(RepSpec.f7) then begin 
    Prodr.SerNr = fromprod;
  end;  
  TrHs = true;
  while (LoopMain(Prodr,1,TrHs)) begin
    test = true;
    if (TrHs) then begin
      if (toprod!=-1) then begin
        if (Prodr.SerNr>toprod) then begin
          TrHs = false;
          test = false;
        end;
      end;
    end;
    if (test) then begin
      rwcnt = MatRowCnt(Prodr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Prodr,i,Prodrw);
        if (nonblank(Prodrw.Item)) and (Prodrw.OutQty>0) then begin
          if (nonblank(RepSpec.f3)) then begin
            if (Prodrw.Item<frin) then begin goto LSKIPLABEL; end;
            if (Prodrw.Item>frin) then begin goto LSKIPLABEL; end;
          end;
          if nonblank(RepSpec.FirstAcc) then begin 
            if (Prodrw.SerialNr<>RepSpec.FirstAcc) then begin goto LSKIPLABEL; end;
          end;
          if nonblank(RepSpec.f5) or nonblank(RepSpec.f4) then begin 
            if (ReadFirstItem(Prodrw.Item,INr,true,true)) then begin end;
            if nonblank(RepSpec.f4) then begin 
              if (SetInSet2(RepSpec.f4,INr.DispGroups)==false) then begin
                goto LSKIPLABEL;
              end;
            end;
            if nonblank(RepSpec.f5) then begin 
              if (INr.Group<>RepSpec.f5) then begin 
                goto LSKIPLABEL;
              end;
            end;
          end;
          if nonblank(RepSpec.f6) then begin 
            if (RepSpec.f6<>Prodr.Location) then begin 
              goto LSKIPLABEL;
            end;
          end;
          if (RepSpec.flags[0]!=0) then begin
            if (nonblank(Prodrw.SerialNr)) then begin
              location = Prodr.Location;
              SBr.Item = Prodrw.Item;
              SBr.Serial = Prodrw.SerialNr;
              if ReadFirstKey("ItemSerial",SBr,2,true) then begin
                if (SBr.Quant==0) then begin
                  goto LSKIPLABEL;
                end;
              end;
            end;  
          end;    
          
          vquant = Prodrw.OutQty;
          quant = vquant;
          vquant = vquant - quant;
          if (vquant>0) then begin
            quant = quant + 1;
          end;
          for (j=0;j<quant;j=j+1) begin
            if (frlab>0) then begin 
              if (labcnt<frlab) then begin goto LSKIPLABEL; end;
            end;
            if (tolab>0) then begin 
              if (labcnt>tolab) then begin goto LDoProdLabFormPrint; end;
            end;

            if (formisopen==false) then begin
              if (OpenForm(formcode)==false) then begin goto LDoProdLabFormPrint; end;
              SetPrinter(printer);  
              lbls = LabelSetup(RepSpec.ArtMode,RepSpec.flags[29]);
//            lbls = 0; //Why zero ? 
              formisopen = true;
            end;
            ProdLab(Prodr,Prodrw,LangNrr,SysFormatRec,totcostprice);
            PrintValue("F_TOTPRIS",totcostprice,M4Val,LangNrr,SysFormatRec,false);
            dwcnt = MatRowCnt(Docr);
            for (di=0;di<dwcnt;di=di+1) begin
              MatRowGet(Docr,di,Docrw);
              if (Docrw.fieldSetNr==0) then begin
                OUTFORMFIELD(Docrw.unitText,Docrw.unitText);
              end;
            end;    
            formisopen = EndAndTestLabel(lbls,prodcnt);
LSKIPLABEL:;            
            labcnt = labcnt + 1;
          end;
        end;
      end;
    end;
  end;
LDoProdLabFormPrint:;
  if (formisopen) then begin
    CloseForm;
  end;
  RETURN;
END;  

procedure DoPULabFormPrint(record RcVc RepSpec,string formcode,string printer,var Integer labcnt)
BEGIN
  LongInt frompu,topu;
  record PUVc PUr;
  Boolean TrHs;
  Integer lbls;
  row PUVc PUrw;
  Integer rwcnt,i,j;
  LongInt quant,pucnt;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  val totcostprice;
  Boolean formisopen;
  val vquant;
  record DocVc Docr;
  row DocVc Docrw;
  Integer dwcnt,di;
  LongInt frlab,tolab;
  string 255 frin, toin;
  Boolean test;
  record INVc INr;
  record ItemStatusVc ISr;
  record SerBalVc SBr;
  string 10 location;
  
  //if (blank(RepSpec.f1)) then begin goto LDoPULabFormPrint; end;
  GetLangNr("",LangNrr);
  BlockLoad(SysFormatRec);
  
  frin = FirstInRange(RepSpec.f3,20);
  toin = LastInRange(RepSpec.f3,20);
  
  lbls = LabelSetup(RepSpec.ArtMode,RepSpec.flags[29]);

  if (nonblank(RepSpec.f2)) then begin 
    frlab = FirstInRange(RepSpec.f2,10);
    tolab = LastInRange(RepSpec.f2,10);    
//    skiplabcnt = tolab - frlab; 
  end;

  pucnt = 0;
  /*
  FormLabelGrid(1,1,1,1);
  lbls = 1;
  */
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin end;
  frompu = FirstInRange(RepSpec.f1,20);
  topu = LastInRange(RepSpec.f1,20);
  if nonblank(RepSpec.f1) then begin 
    PUr.SerNr = frompu;
  end;  
  TrHs = true;
  while (LoopMain(PUr,1,TrHs)) begin
    test = true;
    if (TrHs) then begin
      if (topu!=-1) then begin
        if (PUr.SerNr>topu) then begin
          TrHs = false;
          test = false;
        end;
      end;
    end;
    if nonblank(RepSpec.LastAcc) then begin 
      if (RepSpec.LastAcc<>PUr.VECode) then begin 
        test = false;
      end;
    end;
    if (test) then begin
      rwcnt = MatRowCnt(PUr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(PUr,i,PUrw);
        if (nonblank(PUrw.ArtCode)) then begin
          if (nonblank(RepSpec.f3)) then begin
            if (PUrw.ArtCode<frin) then begin goto LSKIPLABEL; end;
            if (PUrw.ArtCode>frin) then begin goto LSKIPLABEL; end;
          end;
          if nonblank(RepSpec.FirstAcc) then begin 
            if (PUrw.SerialNr<>RepSpec.FirstAcc) then begin goto LSKIPLABEL; end;
          end;
          if nonblank(RepSpec.f5) or nonblank(RepSpec.f4) then begin 
            if (ReadFirstItem(PUrw.ArtCode,INr,true,true)) then begin end;
            if nonblank(RepSpec.f4) then begin 
              if (SetInSet2(RepSpec.f4,INr.DispGroups)==false) then begin
                goto LSKIPLABEL;
              end;
            end;
            if nonblank(RepSpec.f5) then begin 
              if (INr.Group<>RepSpec.f5) then begin 
                goto LSKIPLABEL;
              end;
            end;
          end;
          if nonblank(RepSpec.f6) then begin 
            if nonblank(PUrw.Location) then begin
              if (RepSpec.f6<>PUrw.Location) then begin 
                goto LSKIPLABEL;
              end;
            end else begin
              if (RepSpec.f6<>PUr.Location) then begin 
                goto LSKIPLABEL;
              end;
            end;   
          end;
        if (RepSpec.flags[0]!=0) then begin
          if (nonblank(PUrw.SerialNr)) then begin
            location = PUrw.Location;
            if (blank(location)) then begin
              location = PUr.Location;
          end;
            SBr.Item = PUrw.ArtCode;
            SBr.Serial = PUrw.SerialNr;
            if ReadFirstKey("ItemSerial",SBr,2,true) then begin
              if (SBr.Quant==0) then begin
                goto LSKIPLABEL;
              end;
            end;
          end;  
        end;    
          
          vquant = PUrw.Quant;
          quant = vquant;
          vquant = vquant - quant;
          if (vquant>0) then begin
            quant = quant + 1;
          end;
          for (j=0;j<quant;j=j+1) begin
            if (frlab>0) then begin 
              if (labcnt<frlab) then begin goto LSKIPLABEL; end;
            end;
            if (tolab>0) then begin 
              if (labcnt>tolab) then begin goto LDoPULabFormPrint; end;
            end;

            if (formisopen==false) then begin
              if (OpenForm(formcode)==false) then begin goto LDoPULabFormPrint; end;
              SetPrinter(printer);  
              lbls = LabelSetup(RepSpec.ArtMode,RepSpec.flags[29]);
//            lbls = 0; //Why zero ? 
              formisopen = true;
            end;
            PULab(PUr,PUrw,LangNrr,SysFormatRec,totcostprice);
            PrintValue("F_TOTPRIS",totcostprice,M4Val,LangNrr,SysFormatRec,false);
            dwcnt = MatRowCnt(Docr);
            for (di=0;di<dwcnt;di=di+1) begin
              MatRowGet(Docr,di,Docrw);
              if (Docrw.fieldSetNr==0) then begin
                OUTFORMFIELD(Docrw.unitText,Docrw.unitText);
              end;
            end;    
            formisopen = EndAndTestLabel(lbls,pucnt);
            /*
            EndFormLabel;
            if (formisopen) then begin
              CloseForm;
              formisopen = false;
            end;
            */
LSKIPLABEL:;            
            labcnt = labcnt + 1;
          end;
        end;
      end;
    end;
  end;
LDoPULabFormPrint:;
  if (formisopen) then begin
    CloseForm;
  end;
  RETURN;
END;  

global
procedure DoPULabForm(record RcVc Dummyr,record RcVc RepSpec)
BEGIN
  Integer i,rwcnt;  
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer labcnt;

  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoPULabForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,"",
                      "",intdocnr,"",formcode)) then
      begin
        goto LBREAKPULab;
      end;
    end;
LBREAKPULab:;
    if (nonblank(formcode)) then begin
      labcnt = 1;
      DoPULabFormPrint(RepSpec,formcode,FDrw.PrintGroupCode,labcnt);
      if (RepSpec.flags[1]!=0) then begin
        DoProdLabFormPrint(RepSpec,formcode,FDrw.PrintGroupCode,labcnt);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoPULabForm:;  
  RETURN;
END;  

global
procedure PULabForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
  
  tmpf = PrintDocument(RepSpec,"PULabForm",false);
  RETURN;
END;
