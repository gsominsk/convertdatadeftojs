external function roundmode SetRoundModeD(Integer);
external function LongInt TimeToMinutes(Time);
external procedure SetRowStyle(record Docvc,string,Integer,string,val);
external function Boolean FindFormcode(Integer,Integer);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);

function val DurationToMinutes(Duration adur)
begin
  val resv,t;

  resv = adur.hour*60;
  t = adur.minute;
  resv = resv + t;
  t = adur.second;
  resv = resv + t/60;
  resv = Round(resv,SetRoundModeD(2));
  DurationToMinutes = resv;
  return;
end;

function boolean GetStdInstructions(string stdoperation,var record StdOperationVc StdOperr)
begin
  boolean res;

  StdOperr.Code= stdoperation;
  if (ReadFirstMain(StdOperr,1,true)) then begin
    if (SizeTextCnt(StdOperr)) > 0 then begin
      res = true;
    end;
  end;
  GetStdInstructions = res;
  return;
end;

procedure PrintRouteRows(record DocVc Docr,string formcode,record RcVc RepSpec,record RoutingVc Router,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr,string printer)
BEGIN
  record StdOperationVc StdOperr;
  record AT2UnitVc AT2Unitr;
  string 255 EndStr;
  integer size;
  row RoutingVc Routerw;
  row DocVc Docrw;
  Integer i,rwcnt,rownr,rw,rwc;
  boolean act,first,foundf;
  integer rcnt,lbls;
  string 255 tstr;
  
  rwcnt = MatRowCnt(Router);
  rownr = 0;
  rcnt = 0;
  for (i =0; i < 200; i = i + 1) begin  
    EndStr = EndStr & "_"; 
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Router,i,Routerw);
    foundf = false;
    rownr = rownr + 1;
    OUTFORMFIELD("F_SEPARATOR",EndStr);
    OUTFORMFIELD("F_COMMENT",Routerw.Comment);
    OUTFORMFIELD("F_ROWNR",rownr);
    OUTFORMFIELD("F_OPERATION",Routerw.StdOperation);
    OUTFORMFIELD("F_FIXASSETCODE",Routerw.Machine);
    OUTFORMFIELD("F_FIXASSETGROUP",Routerw.MachineGroup);
    AT2Unitr.InventoryNr = Routerw.Machine;
    if (ReadFirstMain(AT2Unitr,1,true)) then begin
      OUTFORMFIELD("F_FIXASSETGROUPNAME",AT2Unitr.Description);    
    end;
    OUTFORMFIELD("F_SEQUENCE",Routerw.Sequence);
    OUTFORMFIELD("F_SUBSEQUENCE",Routerw.SubSequence);
    PrintValue("F_RUNMINUTES",DurationToMinutes(Routerw.RunTime),M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_SETUPMINS",TimeToMinutes(Routerw.SetupTime),M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_QUEUEMINS",TimeToMinutes(Routerw.QueueTime),M4UVal,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_RUNTIME",Routerw.RunTime);
    OUTFORMFIELD("F_SETUPTIME",Routerw.SetupTime);
    OUTFORMFIELD("F_QUEUETIME",Routerw.QueueTime);
    OUTFORMFIELD("F_MOVETIME",Routerw.MoveTime);
    OUTFORMFIELD("F_MINCOEF",Routerw.MinCoef);
    OUTFORMFIELD("F_OPTCOEF",Routerw.OptCoef);
    rwc = MatRowCnt(Docr);
    for (rw=0;rw<rwc;rw=rw+1) begin
      MatRowGet(Docr,rw,Docrw);
      if (Docrw.fieldSetNr==F_LEDTEXT and Docrw.unitText<>"" and Docrw.formatNr==1 ) then begin
        OUTFORMFIELD(Docrw.unitText,Docrw.unitText);
      end;
    end;  
    EndFormRow;
    if (FIELDINFORM("F_INSTRUCTIONS")) then begin
      if GetStdInstructions(Routerw.StdOperation,StdOperr) then begin 
        rwc = LineTextCnt(StdOperr);
        for (rw = 0; rw < rwc; rw = rw + 1) begin
          if (nonblank(Docr.DescriptionStyle)) then begin
            SetFormStyle(Docr.DescriptionStyle,Docr.DescriptionHeight);
          end;    
          tstr = LineTextGet(StdOperr,rw);
          OUTFORMFIELD("F_INSTRUCTIONS",tstr);
          EndFormRow;
        end;
      end;
    end;
  end;
  if (FIELDINFORM("F_SEPARATOR")) then begin
    OUTFORMFIELD("F_SEPARATOR",EndStr);
    EndFormRow;
  end;
LDoFormPrint:;
  RETURN;
END;

procedure PrintRoute(string formcode,record RcVc RepSpec,record RoutingVc Router,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr,string PrintGroupCode)
BEGIN
  record DocVc Docr;
  record UserVc Userr;
  string 255 tstr;
  record INVc INr;

  Docr.Code = formcode;
  ReadFirstMain(Docr,1,true);
  CommonDocumentFields(RepSpec);
  NumberofDocumentPages(formcode,MatRowCnt(Router));
  PrintRouteRows(Docr,formcode,RepSpec,Router,SysFormatRec,LangNrr,PrintGroupCode);
  OUTFORMFIELD("F_ROUTING",Router.Code);
  OUTFORMFIELD("F_ROUTINGCOMMENT",Router.Comment);
  OUTFORMFIELD("F_VALIDFROM",Router.ValidFrom);
  OUTFORMFIELD("F_VALIDTO",Router.ValidTo);
  OUTFORMFIELD("F_CLASS",Router.Classification);
  OUTFORMFIELD("F_DATECREATED",Router.RegDate);
  PrintValue("F_MINPRODQUANT",Router.RouteMinQty,M45Val,LangNrr,SysFormatRec,false);
  PrintValue("F_OPTPRODQUANT",Router.RouteOptQty,M45Val,LangNrr,SysFormatRec,false);
  PrintValue("F_MINCOEF",Router.RouteMinCoef,M45Val,LangNrr,SysFormatRec,false);
  PrintValue("F_OPTCOEF",Router.RouteOptCoef,M45Val,LangNrr,SysFormatRec,false);
  RETURN;
END;

global
procedure DoRoutingForm(record RcVc RepSpec,record RoutingVc Router)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt;
  string 20 langcode;
  Boolean langf;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;

  BlockLoad(SysFormatRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,2,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoSTForm;
  end;
  rwcnt = MatRowCnt(FDr);
  GetLangNr("",LangNrr);
  intdocnr = 1;
  printf = true;
  while (printf) begin
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(Router.OKFlag,FDrw.Typ)) then begin
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,Router.Code,FDrw.PrintGroupCode,
                        langcode,intdocnr,"RoutingVc",formcode)) then
        begin
          goto LBREAKST;
        end;
      end;
    end;
LBREAKST:;
    if (NonBlank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintRoute(formcode,RepSpec,Router,SysFormatRec,LangNrr,FDrw.PrintGroupCode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoSTForm:;
  RETURN;
END;

global
procedure RoutingForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
  record RoutingVc Router;

  Router.Code = RepSpec.f1;
  if (ReadFirstMain(Router,1,true)) then begin
    tmpf = PrintDocument(Router,"RoutingForm",false);
  end;
  RETURN;
END;
