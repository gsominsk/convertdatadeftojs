external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure PrintValToTextBaseCur(val,Integer,string,Integer,var string);
external procedure Val2ToText(string,val,Integer,string,string,var string);
external procedure OutAddress(string,string,string,string,string,string,string);
external procedure PrintCurrencyCode(string,string);
external function roundmode DefaultRoundMode();
external function roundmode SetRoundModeD(Integer);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function val CalculateVINettVal(record VIVc,Boolean);
external function Boolean FindFormcode(Integer,Integer);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);
external procedure SelectUnitText(string,string,var string);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure PrintBranchData(string);

procedure PrintVI(record RcVc RepSpec,record VIVc VIr,string formcode)
begin
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;
  Integer i,rwcnt,rownr;
  row VIVc VIrw;
  string 255 tstr;
  Boolean Accs;
  record AccVc Accr;
  record CUVc VEr;
  val t;
  record INVc INr;
  record RoundBlock Roundb;
  record DocVc Docr;

  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
  end;
  VEr.Code = VIr.VECode;
  if (ReadFirstMain(VEr,1,true)) then begin
  end;
  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(VIr));
  BlockLoad(SFb);  
  BlockLoad(Roundb);  
  GetLangNr("",LangNrr);
  OUTFORMFIELD("F_SERNR",VIr.SerNr);
  OUTFORMFIELD("F_LEVERANTOR",VIr.VECode);
  OUTFORMFIELD("F_LEVNAMN",VIr.VEName);
  OUTFORMFIELD("F_FAKTURADATUM",VIr.InvDate);
  OUTFORMFIELD("F_PERSON",VIr.OKPersons);
  OUTFORMFIELD("F_TRANSDATE",VIr.TransDate);
  OUTFORMFIELD("F_REFSTR",VIr.RefStr);
  OUTFORMFIELD("F_VILLKOR",VIr.PayDeal);
  OUTFORMFIELD("F_FAKTURANR",VIr.InvoiceNr);
  OUTFORMFIELD("F_LEVVATNR",VEr.VATNr);
  OUTFORMFIELD("F_KUNDMOMSNR",VEr.VATNr);
  OUTFORMFIELD("F_REGNUMBER1",VEr.RegNr1);
  OUTFORMFIELD("F_REGNUMBER2",VEr.RegNr2);
  OutAddress("F_ADRESS",VIr.VEName,VIr.Addr1,VIr.Addr2,VIr.Addr3,VIr.InvAddr3,VIr.InvAddr4);
  OUTFORMFIELD("F_LEVNAMN",VIr.VEName);
  OUTFORMFIELD("F_ADDR1",VIr.Addr1);
  OUTFORMFIELD("F_ADDR2",VIr.Addr2);
  OUTFORMFIELD("F_ADDR3",VIr.Addr3);
  OUTFORMFIELD("F_ADDR4",VIr.InvAddr3);
  OUTFORMFIELD("F_INVADDR3",VIr.InvAddr4);

  if (FIELDINFORM("F_AMOUNTINTEXT")) then begin
    GetFieldArgument(Docr,F_AMOUNTINTEXT,tstr);
    Val2ToText(tstr,VIr.PayVal,M4Val,VIr.CurncyCode,VIr.LangCode,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXT",tstr);
  end;
  if (FIELDINFORM("F_AMOUNTINTEXTBASECUR1")) then begin
    t = MulRateToBase1(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff);
    PrintValToTextBaseCur(t,M4Val,VIr.LangCode,1,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXTBASECUR1",tstr);  
  end;  
  if (FIELDINFORM("F_AMOUNTINTEXTBASECUR2")) then begin
    t = MulRateToBase2(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff);
    PrintValToTextBaseCur(t,M4Val,VIr.LangCode,2,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXTBASECUR2",tstr);  
  end;  

  PrintCurrencyCode("F_VALUTA",VIr.CurncyCode);
  if (FIELDINFORM("F_SALESINVNO")) then begin
    if (VIr.IVNr>0)  then begin
      OUTFORMFIELD("F_SALESINVNO",VIr.IVNr);
    end;
  end;  
  PrintBranchData(VIr.BranchID);

  rwcnt = MatRowCnt(VIr);
  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VIr,i,VIrw);
    if (VIrw.stp==1) then begin
      Accr.AccNumber = VIrw.AccNumber;
      Accs = ReadFirstKey("AccNumber",Accr,1,true);   
      if (nonblank(VIrw.Comment)) then begin
        tstr = VIrw.Comment;
      end else begin
        if (Accs) then begin
          tstr = Accr.Comment;
        end;    
      end;        
      OUTFORMFIELD("F_COMMENT",tstr);
      OUTFORMFIELD("F_COSTACCOUNT",VIrw.AccNumber);
      OUTFORMFIELD("F_ROWOBJECT",VIrw.Objects);
      if (VIr.InvType!=kInvoiceTypeCredit and VIr.InvType!=kInvoiceTypeCreditSpecialSales) then begin
        if (VIrw.Sum < 0) then begin  
//          VIrw.Sum = -VIrw.Sum;//tell me why please ? //JJ
          PrintValue("F_BELOPP",VIrw.Sum,M4Val,LangNrr,SFb,false);
        end else begin
          PrintValue("F_BELOPP",VIrw.Sum,M4Val,LangNrr,SFb,false);
        end;    
      end;
      if (VIr.InvType==kInvoiceTypeCredit or VIr.InvType==kInvoiceTypeCreditSpecialSales) then begin
        if (VIrw.Sum > 0) then begin  
          PrintValue("F_BELOPP",VIrw.Sum,M4Val,LangNrr,SFb,false);
        end else begin
          VIrw.Sum = -VIrw.Sum;
          PrintValue("F_BELOPP",VIrw.Sum,M4Val,LangNrr,SFb,false);
        end;    
      end;
      OUTFORMFIELD("F_MOMSKOD",VIrw.VATCode);
      if (blank(VIr.VATVal)==false) then begin
        PrintValueInclZero("F_MOMS",VIr.VATVal,M4Val,LangNrr,SFb,false);
      end else begin
        PrintValueInclZero("F_MOMS",VIr.CalcVATVal,M4Val,LangNrr,SFb,false);
      end;
      if (nonblank(VIrw.AccNumber)) then begin
        rownr = rownr + 1;
        OUTFORMFIELD("F_ROWNR",rownr);      
      end;      
      OUTFORMFIELD("F_ARTNR",VIrw.Item);
      if (ReadFirstItem(VIrw.Item,INr,true,true)) then begin
      end;
      SelectUnitText(VIr.LangCode,INr.Unittext,tstr);    
      OUTFORMFIELD("F_ENHET",tstr);
      PrintValueInclZero("F_ANTAL",VIrw.qty,M4UVal,LangNrr,SFb,false);

      if (FIELDINFORM("F_APRIS")) then begin
        GetFieldArgument(Docr,F_APRIS,tstr);
        if (nonblank(tstr)) then begin
          t = Round(VIrw.Sum/VIrw.qty,SetRoundModeD(StringToInt(tstr)));
          PrintValueInclZero("F_APRIS",t,M423Val,LangNrr,SFb,false);
        end else begin
          if (Roundb.Discount==0) then begin
            t = Round(VIrw.Sum/VIrw.qty,SetRoundModeD(3));
          end else begin
            t = Round(VIrw.Sum/VIrw.qty,DefaultRoundMode);
          end;
          PrintValueInclZero("F_APRIS",t,M423Val,LangNrr,SFb,false);
        end;  
      end;
      if (GetItemNameStr(1,tstr,VIr.LangCode,INr.Name,INr.Code)) then begin end;
      OUTFORMFIELD("F_SPECIFIKATION",tstr);
    end;
    EndFormRow;
  end;
  if (VIr.InvType==kInvoiceTypeCredit or VIr.InvType==kInvoiceTypeCreditSpecialSales) then begin
    PrintValue("F_SUMMA",VIr.PayVal,M4Val,LangNrr,SFb,false);
  end else begin
    PrintValue("F_SUMMA",VIr.PayVal,M4Val,LangNrr,SFb,false);
  end;    
  PrintValue("F_NETTO",CalculateVINettVal(VIr,true),M4Val,LangNrr,SFb,false);
  PrintValue("F_WITHHOLDINGTAX",VIr.WithHoldingTax,M4Val,LangNrr,SFb,false);
  if (nonblank(VIr.VATVal)) then begin
    t = VIr.PayVal - VIr.WithHoldingTax - VIr.VATVal;  
  end else begin
    t = VIr.PayVal - VIr.WithHoldingTax - VIr.CalcVATVal;  
  end;
  PrintValue("F_ATTBETALA",t,M4Val,LangNrr,SFb,false);
  return;
end;

global
procedure DoVIForm(record RcVc RepSpec,record VIVc VIr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  langcode = VIr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoVIForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(VIr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,VIr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"VIVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintVI(RepSpec,VIr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoVIForm:;  
  return;
end;

global
procedure DoDebVIForm(record RcVc RepSpec,record VIVc VIr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  langcode = VIr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoDebVIForm;
  end;
  rwcnt = MatRowCnt(FDr);

  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;

  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(VIr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,VIr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"VIVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;        
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintVI(RepSpec,VIr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoDebVIForm:;  
  return;
end;
/*
global
procedure DoDebVIForm(record RcVc RepSpec,record VIVc VIr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  langcode = VIr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoDebVIForm;
  end;
  rwcnt = MatRowCnt(FDr);

  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;

  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(VIr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,VIr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"VIVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;        
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintVI(RepSpec,VIr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoDebVIForm:;  
  return;
end;
*/