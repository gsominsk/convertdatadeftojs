external function LongInt YearsOld(Date);
external function Boolean FindFormcode(Integer,Integer);
external function Integer NumberofDocumentPages(string,Integer);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure CommonDocumentFields(record RcVc);
external procedure GetCreditCardType(string,var string);

global
procedure DoGuestDocForm(record RcVc RepSpec,record CUVc Guestr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  string 255 tstr;
  val t;
  record LangNrVc LangNrr;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
          
  GetLangNr("",LangNrr);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoGuestDocForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      "",intdocnr,"CUVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
        if (OpenForm(formcode)) then begin  
          CommonDocumentFields(RepSpec);
          NumberofDocumentPages(FDrw.FPCode,0);
          OUTFORMFIELD("F_GUESTCODE",Guestr.Code);
          OUTFORMFIELD("F_GUESTNAME",Guestr.Name);
          OUTFORMFIELD("F_NAMN",Guestr.Name);
          OUTFORMFIELD("F_ADDR1",Guestr.InvAddr0);
          OUTFORMFIELD("F_ADDR2",Guestr.InvAddr1);
          OUTFORMFIELD("F_ADDR3",Guestr.InvAddr2);
          OUTFORMFIELD("F_ADDR4",Guestr.InvAddr3);
          OUTFORMFIELD("F_TEXT",Guestr.InvAddr4);
// What?
//          OUTFORMFIELD("F_TEXTTYPE",Guestr.Addr5);
          
          GetCreditCardType(Guestr.InvAddr2,tstr); // ???
          OUTFORMFIELD("F_CREDCARDTYPE",tstr);
          OUTFORMFIELD("F_PASSPORT",Guestr.PassportNr);
          OUTFORMFIELD("F_DOCTYPE",Guestr.DocType);
          OUTFORMFIELD("F_NATIONNALITY",Guestr.Nationality);
          if (Guestr.Gender==0) then begin
            OUTFORMFIELD("F_GENDER","M");
          end else begin
            OUTFORMFIELD("F_GENDER","F");
          end;
          OUTFORMFIELD("F_AGE",YearsOld(Guestr.BirthDate));
          OUTFORMFIELD("F_BIRTHDATE",Guestr.BirthDate);
          tstr = "";
// This will need a register behind it, or a set.
          switch (Guestr.MarStatus) begin
            case 0: tstr = "Single";
            case 1: tstr = "Married";
            case 2: tstr = "Divorced";
            case 3: tstr = "Widow";
          end;
          OUTFORMFIELD("F_MARSTAT",tstr);
          OUTFORMFIELD("F_MOBILE",Guestr.Mobile);
// KJELL
//          OUTFORMFIELD("F_PLATENR",Guestr.NrPlate);
          OUTFORMFIELD("F_PROFESSION",Guestr.Profesion);
          OUTFORMFIELD("F_CONTACTTEL",Guestr.Phone);
          OUTFORMFIELD("F_EMAIL",Guestr.eMail);
          OUTFORMFIELD("F_GRUPP",Guestr.CustCat);
          CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoGuestDocForm:;  
  RETURN;  
END;     
 
 
