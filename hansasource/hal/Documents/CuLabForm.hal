external procedure PortugueseFormFields(Integer);
external function Boolean IsOffice(Boolean);
external function Integer SclassInEclass(Array string,string);
external procedure SplitEclass(string,var Array string);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure Lab(record DocVc Docr,record CUVc CUr,record CUVc Contactr,Boolean contactf)
BEGIN
  string 255 tstr,t2;
  val t;
  row DocVc Docrw;
  Integer rwcnt,i;
  
  if (HasLocalization("PRT")) then begin  
    PortugueseFormFields(23470);
  end;  
  if (contactf) then begin  
    OUTFORMFIELD("F_KUNDNR",CUr.Code);
    OUTFORMFIELD("F_KUNDNAMN",CUr.Name);
    OUTFORMFIELD("F_NAMN",CUr.Name);
    
    if (nonblank(Contactr.InvAddr0)) or (nonblank(Contactr.InvAddr1)) or (nonblank(Contactr.InvAddr2)) or 
        (nonblank(Contactr.InvAddr3)) or (nonblank(Contactr.InvAddr4)) then begin
      OUTFORMFIELD("F_ADDR1",Contactr.InvAddr0);
      OUTFORMFIELD("F_ADDR2",Contactr.InvAddr1);
      OUTFORMFIELD("F_ADDR3",Contactr.InvAddr2);
      OUTFORMFIELD("F_INVADDR3",Contactr.InvAddr3);
      OUTFORMFIELD("F_INVADDR4",Contactr.InvAddr4);
    end else begin
      OUTFORMFIELD("F_ADDR1",CUr.InvAddr0);
      OUTFORMFIELD("F_ADDR2",CUr.InvAddr1);
      OUTFORMFIELD("F_ADDR3",CUr.InvAddr2);
      OUTFORMFIELD("F_INVADDR3",CUr.InvAddr3);
      OUTFORMFIELD("F_INVADDR4",CUr.InvAddr4);
    end;
    if (nonblank(Contactr.DelAddr0)) or (nonblank(Contactr.DelAddr1)) or (nonblank(Contactr.DelAddr2)) or
        (nonblank(Contactr.DelAddr3))  or (nonblank(Contactr.DelAddr4)) then begin
      OUTFORMFIELD("F_LEVADDR1",Contactr.DelAddr0);
      OUTFORMFIELD("F_LEVADDR2",Contactr.DelAddr1);
      OUTFORMFIELD("F_LEVADDR3",Contactr.DelAddr2);
      OUTFORMFIELD("F_LEVADDR3",Contactr.DelAddr3);
      OUTFORMFIELD("F_LEVADDR4",Contactr.DelAddr4);
    end else begin
      OUTFORMFIELD("F_LEVADDR1",CUr.DelAddr0);
      OUTFORMFIELD("F_LEVADDR2",CUr.DelAddr1);
      OUTFORMFIELD("F_LEVADDR3",CUr.DelAddr2);
      OUTFORMFIELD("F_DELADDR3",CUr.DelAddr3);
      OUTFORMFIELD("F_DELADDR4",CUr.DelAddr4);
    end;
    OUTFORMFIELD("F_KONTAKT",Contactr.Name);
    OUTFORMFIELD("F_DEPARTMENT",Contactr.Department);
    OUTFORMFIELD("F_COUNTRYNAME",Contactr.CountryCode);
    OUTFORMFIELD("F_COMMENT",Contactr.Comment);
    OUTFORMFIELD("F_COMMENT1ORDERCOMMENT",Contactr.OrderComment);
    OUTFORMFIELD("F_COMMENT2WARNING",Contactr.WarnText1);
    OUTFORMFIELD("F_JOBDESC",Contactr.Title);
    OUTFORMFIELD("F_SALUTATION1",Contactr.Salutation1);
    OUTFORMFIELD("F_SALUTATION2",Contactr.Salutation2);
    OUTFORMFIELD("F_SALUTATION3",Contactr.Salutation3);
    OUTFORMFIELD("F_JOBDESCRIPTION",Contactr.JobDesc);
  end else begin
    OUTFORMFIELD("F_KUNDNR",CUr.Code);
    OUTFORMFIELD("F_KUNDNAMN",CUr.Name);
    OUTFORMFIELD("F_NAMN",CUr.Name);
    OUTFORMFIELD("F_ADDR1",CUr.InvAddr0);
    OUTFORMFIELD("F_ADDR2",CUr.InvAddr1);
    OUTFORMFIELD("F_ADDR3",CUr.InvAddr2);
    OUTFORMFIELD("F_ADDR4",CUr.InvAddr3);
    OUTFORMFIELD("F_INVADDR3",CUr.InvAddr4);
    OUTFORMFIELD("F_LEVADDR1",CUr.DelAddr0);
    OUTFORMFIELD("F_LEVADDR2",CUr.DelAddr1);
    OUTFORMFIELD("F_LEVADDR3",CUr.DelAddr2);
    OUTFORMFIELD("F_DELADDR3",CUr.DelAddr3);
    OUTFORMFIELD("F_DELADDR4",CUr.DelAddr4);
    OUTFORMFIELD("F_KONTAKT",CUr.Person);
    OUTFORMFIELD("F_DEPARTMENT",CUr.Department);
    OUTFORMFIELD("F_COUNTRYNAME",CUr.CountryCode);
    OUTFORMFIELD("F_COMMENT",CUr.Comment);
    OUTFORMFIELD("F_COMMENT1ORDERCOMMENT",CUr.OrderComment);
    OUTFORMFIELD("F_COMMENT2WARNING",CUr.WarnText1);
    OUTFORMFIELD("F_JOBDESC",CUr.Title);
    OUTFORMFIELD("F_SALUTATION1",CUr.Salutation1);
    OUTFORMFIELD("F_SALUTATION2",CUr.Salutation2);
    OUTFORMFIELD("F_SALUTATION3",CUr.Salutation3);
    OUTFORMFIELD("F_JOBDESCRIPTION",CUr.JobDesc);
  end;  
  rwcnt = MatRowCnt(Docr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docr,i,Docrw);
    if (Docrw.fieldSetNr==0) then begin
      OUTFORMFIELD(Docrw.unitText,Docrw.unitText);
    end;
  end;  
  RETURN;  
END;
  
procedure DoCuLabFormPrint(record RcVc RepSpec,string formcode,string printer)
BEGIN
  record CUVc CUr;
  record CUVc ContactCUr;
  record ContactRelVc ContactRelr;
  string 255 fromcust,tocust;
  string 5 fromcountry,tocountry;
  string 20 fromso,toso;
  Boolean TrHs;
  LongInt cucnt;
  Integer lbls,lblYstep,keys;
  LongInt j;
  Boolean testf,testf2,found;
  string 20 ckey;
  Array string 20 ac;
  Array string 20 cucac;
  record DocVc Docr;
  Boolean formisopenf;
  string 255 thekey;

  if (OpenForm(formcode)==false) then begin 
    goto LDoCuLabFormPrint; 
  end;
  SetPrinter(printer);  
  formisopenf = true;
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin end;
  cucnt = 0;
  switch (RepSpec.ArtMode) begin
    case 0: lblYstep = 98; // 103 doesn't work
    case 1: lblYstep = 98; // 103
    case 2: lblYstep = 1;
    case 4: lblYstep = 206;
    case 5: lblYstep = 112; //2 *7 117
  end;
  if (RepSpec.flags[29]>0) then begin
    lblYstep = RepSpec.flags[29];
  end;
  if (RepSpec.long2!=-1) then begin 
    cucnt = RepSpec.long2-1;
    switch (RepSpec.ArtMode) begin
      case 0: FormLabelGrid(2,280,8,lblYstep); lbls = 16;
      case 1: FormLabelGrid(3,195,8,lblYstep); lbls = 24;
      case 2: FormLabelGrid(1,1,1,lblYstep); lbls = 1;
      case 3: FormLabelGrid(3,195,10,lblYstep); lbls = 30;
      case 4: FormLabelGrid(2,280,4,lblYstep); lbls = 8;
      case 5: FormLabelGrid(2,305,7,lblYstep); lbls = 14; //2 *7 last 112??
    end;
    for (j=0;j<cucnt;j=j+1) begin
      EndFormLabel;
    end;
  end;
  SplitEclass(RepSpec.Stext,ac);
  SplitEclass(RepSpec.ObjStr,cucac);
  switch (RepSpec.ArtMode) begin
    case 0: FormLabelGrid(2,280,8,lblYstep); lbls = 16;
    case 1: FormLabelGrid(3,195,8,lblYstep); lbls = 24;
    case 2: FormLabelGrid(1,1,1,lblYstep); lbls = 1;
    case 3: FormLabelGrid(3,195,10,lblYstep); lbls = 30;
    case 4: FormLabelGrid(2,280,4,lblYstep); lbls = 8;
    case 5: FormLabelGrid(2,305,7,lblYstep); lbls = 14; //2 *7 last 112??
  end;
  fromcust = FirstInRange(RepSpec.f1,20);
  tocust = LastInRange(RepSpec.f1,20);
  fromcountry = FirstInRange(RepSpec.FirstAcc,20);
  tocountry = LastInRange(RepSpec.FirstAcc,20);
  fromso = FirstInRange(RepSpec.LastAcc,20);
  toso = LastInRange(RepSpec.LastAcc,20);
  
  switch (RepSpec.flags[1]) begin
    case 1:
      CUr.Name = fromcust;
      CUr.Code = "";
      ckey = "Name";
      keys = 1;
    case 0:
      if (blank(RepSpec.f3)) then begin
        CUr.Code = fromcust;
        ckey = "Code";
        keys = 1;
      end else begin
        CUr.CustCat = RepSpec.f3;
        CUr.Code = fromcust;
        ckey = "Group";
        keys = 2;
      end;
    case 2:
      CUr.Sorting = fromso;
      ckey = "Sorting";
      keys = 1;
  end;
  TrHs = true;
  while (LoopKey(ckey,CUr,1,TrHs)) begin  
    if (TrHs) then begin
      switch (RepSpec.flags[1]) begin
        case 1:
          if (nonblank(tocust)) then begin
            if (CUr.Name>tocust) then begin
              TrHs = false;
            end;
          end;
        case 0:
          if (nonblank(RepSpec.f3)) then begin
            if (CUr.CustCat!=RepSpec.f3) then begin
              TrHs = false;
            end;
          end;
          if (nonblank(tocust)) then begin
            if (CUr.Code>tocust) then begin
              TrHs = false;
            end;
          end;
        case 2:
          if (nonblank(RepSpec.LastAcc)) then begin
            if (CUr.Sorting>toso) then begin
              TrHs = false;
            end;
          end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (testf) then begin
        if (nonblank(RepSpec.Stext)) then begin
          if (SclassInEclass(ac,CUr.Classification)==0) then begin
            testf = false;
          end;
        end;
        if (RepSpec.flags[1]!=2) then begin
          if (nonblank(RepSpec.LastAcc)) then begin
            if (CUr.Sorting<fromso) then begin testf = false; end;
            if (CUr.Sorting>toso) then begin testf = false; end;
          end;
        end;  
      end;
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (CUr.CountryCode<fromcountry) then begin testf = false; end;
        if (CUr.CountryCode>tocountry) then begin testf = false; end;
      end;
      if (RepSpec.flags[3]==0) then begin
        if (CUr.blockedFlag!=0) then begin testf = false; end;
      end;
      if (RepSpec.flags[4]!=0) then begin
        if (nonblank(CUr.eMail)) then begin testf = false; end;
      end;
      if (RepSpec.flags[5]!=0) then begin
        if (nonblank(CUr.Fax)) then begin testf = false; end;
      end;
      if (RepSpec.flags[7]!=0) then begin
        if (CUr.CUType!=0) or (CUr.VEType!=0) then begin
          ContactRelr.CustCode = CUr.Code;
          testf = !ReadFirstKey("CompKey",ContactRelr,1,true);
        end else begin
          testf = false;
        end;
      end;
      if (RepSpec.flags[6]>0) then begin
        if (RepSpec.flags[6]==1) then begin
          if (CUr.CUType==0) then begin
            testf = false;
          end;
        end;
        if (RepSpec.flags[6]==2) then begin
          if (CUr.VEType == 0) then begin
            testf = false;
          end;
        end;
      end;
//      if (CUr.CUType==0) then begin testf = false; end;
      if (testf) then begin
        if ((blank(RepSpec.f3)) or (CUr.CustCat==RepSpec.f3)) then begin
//StopAlert("RepSpec.flags[2] " & RepSpec.flags[2]);
          if ((CUr.CUType!=0) or (CUr.VEType!=0) or (CUr.DealerType!=0)) then begin
            if (RepSpec.flags[2]==1) then begin
  /* The contact on the Customer card is no longer a Contact in itself, you NEED a Contact Record
              if (nonblank(RepSpec.f2)) then begin
                if (RepSpec.f2!=CUr.JobDesc) then begin
                  goto L22DoCuLabFormPrint;
                end;
              end;
              if (nonblank(RepSpec.ObjStr)) then begin
                goto L22DoCuLabFormPrint;
              end;
              if (blank(CUr.Person)) then begin
                goto L22DoCuLabFormPrint;
              end;
  */
              goto L22DoCuLabFormPrint;
            end;        
          end;
          cucnt = cucnt + 1;
          if (formisopenf==false) then begin
            if (OpenForm(formcode)==false) then begin 
              goto LDoCuLabFormPrint; 
            end;
            SetPrinter(printer);  
            formisopenf = true;
            switch (RepSpec.ArtMode) begin
              case 0: FormLabelGrid(2,280,8,lblYstep); lbls = 16;
              case 1: FormLabelGrid(3,195,8,lblYstep); lbls = 24;
              case 2: FormLabelGrid(1,1,1,lblYstep); lbls = 1;
              case 4: FormLabelGrid(2,280,4,lblYstep); lbls = 8;
              case 5: FormLabelGrid(2,305,7,lblYstep); lbls = 14; //2 *7 last 112??
            end;
          end;
          Lab(Docr,CUr,CUr,false);
          EndFormLabel;
          if (cucnt>=lbls) then begin
            CloseForm;
            cucnt = 0;
            formisopenf = false;
          end;
L22DoCuLabFormPrint:;
          if (RepSpec.flags[2]==1) then begin            
            found = true;
            ResetLoop(ContactRelr);
            ContactRelr.CustCode = CUr.Code;
            while (LoopKey("CompKey",ContactRelr,1,found)) begin
              if (found) then begin
                if (ContactRelr.CustCode!=CUr.Code) then begin
                  found = false;
                end;
              end;
              testf2 = true;
              if (found==false) then begin testf2 = false; end;
              if (ContactRelr.Invalid!=0) then begin testf2 = false; end;
              if (testf2) then begin
                ContactCUr.Code = ContactRelr.ContactCode;
                if (ReadFirstMain(ContactCUr,1,true)==false) then begin
                  testf2 = false;
                end;
                if (ContactCUr.blockedFlag!=0) then begin testf2 = false; end;
                if (testf2) then begin
                  if (nonblank(RepSpec.f2)) then begin
                    if (RepSpec.f2!=ContactCUr.JobDesc) then begin
                      testf2 = false;
                    end;
                  end;
                  if (nonblank(RepSpec.ObjStr)) then begin
                    if (SclassInEclass(cucac,ContactCUr.Classification)==0) then begin
                      testf2 = false;      
                    end;
                  end;
                end;
              end;
              if (testf2) then begin
                if (formisopenf==false) then begin
                  if (OpenForm(formcode)==false) then begin 
                    goto LDoCuLabFormPrint; 
                  end;
                  SetPrinter(printer);  
                  switch (RepSpec.ArtMode) begin
                    case 0: FormLabelGrid(2,280,8,lblYstep); lbls = 16;
                    case 1: FormLabelGrid(3,195,8,lblYstep); lbls = 24;
                    case 2: FormLabelGrid(1,1,1,lblYstep); lbls = 1;
                    case 4: FormLabelGrid(2,280,4,lblYstep); lbls = 8;
                    case 5: FormLabelGrid(2,305,7,lblYstep); lbls = 14; //2 *7 last 112??
                  end;
                  formisopenf = true;
                end;
                cucnt = cucnt + 1;
                Lab(Docr,CUr,ContactCUr,true);
                EndFormLabel;
                if (cucnt>=lbls) then begin
                  CloseForm;
                  formisopenf = false;
                  cucnt = 0;
                end;
              end;
            end;
          end;          
        end;
      end;    
    end;
  end;
  if (formisopenf) then begin
    CloseForm;        
  end;
LDoCuLabFormPrint:;
  RETURN;
END;  

global
procedure DoCuLabForm(record RcVc Dummyr,var record RcVc RepSpec)
BEGIN
  Integer i,rwcnt;  
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  record FormDefVc FDr;
  row FormDefVc FDrw;

  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCuLabForm;
  end;
  rwcnt = MatRowCnt(FDr);

  intdocnr = 1;
  printf = true;
  if (IsOffice(false)) then begin
  end else begin  
    RepSpec.flags[2] = 0; //Supposed to be zero, Customer Labels should print Customers only.
  end;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,"",
                      "",intdocnr,"",formcode)) then
      begin
        goto LBREAKCuLab;
      end;
    end;
LBREAKCuLab:;
    if (nonblank(formcode)) then begin
      DoCuLabFormPrint(RepSpec,formcode,FDrw.PrintGroupCode);
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCuLabForm:;  
  RETURN;
END;  

global
procedure CuLabForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
  
  tmpf = PrintDocument(RepSpec,"CuLabForm",false);
  RETURN;
END;

global
procedure DoCoLabForm(record RcVc Dummyr,var record RcVc RepSpec)
BEGIN
  Integer i,rwcnt;  
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  record FormDefVc FDr;
  row FormDefVc FDrw;

  FDr.repname = Dummyr.repname;
  FDr.shortname = Dummyr.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCoLabForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  if (IsStandardProduct==false) then begin
    RepSpec.flags[2] = 1;
  end;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,"",
                      "",intdocnr,"",formcode)) then
      begin
        goto LBREAKCoLab;
      end;
    end;
LBREAKCoLab:;
    if (nonblank(formcode)) then begin
      DoCuLabFormPrint(RepSpec,formcode,FDrw.PrintGroupCode);
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCoLabForm:;
  RETURN;
END;  

global
procedure CoLabForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
  
  tmpf = PrintDocument(RepSpec,"CoLabForm",false);
  RETURN;
END;

