external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);
external procedure GetProjectStats(string,Boolean,Boolean,var val,var val,var val);
external procedure SumPrTrans2(record RcVc,string,Integer,var val,var val,Integer,Integer);
external procedure ContactPhone(string,string,var string);


procedure PrintPRRows(record RcVc RepSpec,record PRVc PRr)
BEGIN
  Integer i,rwcnt;
  row PRVc PRrw;
  
  rwcnt = MatRowCnt(PRr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PRr,i,PRrw);
    OUTFORMFIELD("F_FAKTSIGN",PRrw.Person);
    OUTFORMFIELD("F_FAKTDATUM",PRrw.PlanDate);
    OUTFORMFIELD("F_FAKTBELOPP",PRrw.ValStr);
    OUTFORMFIELD("F_FAKTKOMMENTAR",PRrw.Comment);
    OUTFORMFIELD("F_FAKTFAKTURANR",PRrw.InvNr);
    EndFormRow;
  end;    
  RETURN;
END;

function val PRBudget(string prcode)
BEGIN
  val res;
  val budget,invoiced,invable,diff;

//  if (fldarg=="1") then begin//fixdoc
  if (true) then begin
    GetProjectStats(prcode,false,false,budget,invoiced,invable);
  end else begin
    GetProjectStats(prcode,true,false,budget,invoiced,invable);
  end;      
  res = budget;
  PRBudget = res;
  RETURN;
END;

function val PRDiffBudget(string prcode)
BEGIN
  val res;
  val budget,invoiced,invable,diff;

//  if (fldarg=="1") then begin//fixdoc
  if (true) then begin
    GetProjectStats(prcode,false,false,budget,invoiced,invable);
  end else begin
    GetProjectStats(prcode,true,false,budget,invoiced,invable);
  end;      
  diff = invoiced + invable;
  diff = diff - budget;
  res = -diff;
  PRDiffBudget = res;
  RETURN;
END;

function val PRInvoiceable(string prcode)
BEGIN
  val res;
  val budget,invoiced,invable,diff;

//  if (fldarg=="1") then begin//fixdoc
  if (true) then begin
    GetProjectStats(prcode,false,false,budget,invoiced,invable);
  end else begin
    GetProjectStats(prcode,true,false,budget,invoiced,invable);
  end;      
  res = invable;
  PRInvoiceable = res;
  RETURN;
END;

function val PRInvoiced(string prcode)
BEGIN
  val res;
  val budget,invoiced,invable,diff;

//  if (fldarg=="1") then begin//fixdoc
  if (true) then begin
    GetProjectStats(prcode,false,false,budget,invoiced,invable);
  end else begin
    GetProjectStats(prcode,true,false,budget,invoiced,invable);
  end;      
  res = invoiced;
  PRInvoiced = res;
  RETURN;
END;

global
function val PRDiffCost(record RcVc RepSpec,string prcode)
BEGIN
  val res;
  val budget,invoiced,invable,diff,sum,cost;

  GetProjectStats(prcode,true,false,budget,invoiced,invable);
  SumPrTrans2(RepSpec,prcode,1,sum,cost,1,1);
  budget = cost;
  SumPrTrans2(RepSpec,prcode,2,sum,cost,1,1);
  budget = budget + cost;
  SumPrTrans2(RepSpec,prcode,3,sum,cost,1,1);
  budget = budget + cost;
  SumPrTrans2(RepSpec,prcode,4,sum,cost,1,1);
  budget = budget + cost;
  diff = invoiced + invable;
  diff = diff - budget;
  res = diff;
  PRDiffCost = res;
  RETURN;
END;
    
global
function val PRCost(record RcVc RepSpec,string prcode)
BEGIN
  val res;
  val budget,diff,sum,cost;

  SumPrTrans2(RepSpec,prcode,1,sum,cost,1,1);
  budget = cost;
  SumPrTrans2(RepSpec,prcode,2,sum,cost,1,1);
  budget = budget + cost;
  SumPrTrans2(RepSpec,prcode,3,sum,cost,1,1);
  budget = budget + cost;
  SumPrTrans2(RepSpec,prcode,4,sum,cost,1,1);
  budget = budget + cost;
  res = budget;
  PRCost = res;
  RETURN;
END;

procedure PrintHeader(record RcVc RepSpec,record PRVc PRr)
begin
  record CUVc CUr;
  record UserVc Userr;
  string 255 tstr;

  CUr.Code = PRr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;        
//  if (HasLocalization("PRT")) then begin   // to be removed. Moved below for individual invoice type forms.
//    OUTFORMFIELD("F_DOCTYPE",USetStr(4896));
//    OUTFORMFIELD("F_VALIDINVOICE",USetStr(23401));  
//  end;
  OUTFORMFIELD("F_KUNDNR",PRr.CustCode);
  OUTFORMFIELD("F_KUNDNAMN",PRr.CustName);
  OUTFORMFIELD("F_SALESMAN",PRr.PrSalesMan);
  Userr.Code = PRr.PrSalesMan;
  if (ReadFirstMain(Userr,1,true)) then begin end;
  OUTFORMFIELD("F_SALESMANNAME",Userr.Name);
  
  OUTFORMFIELD("F_DESCRIPTION",PRr.Name);
  if (FIELDINFORM("F_BUDGET")) then begin            
    OUTFORMFIELD("F_BUDGET",PRBudget(PRr.Code));
  end;
  if (FIELDINFORM("F_DIFFBUDGET")) then begin            
    OUTFORMFIELD("F_DIFFBUDGET",PRDiffBudget(PRr.Code));
  end;
  if (FIELDINFORM("F_DIFFCOST")) then begin            
    OUTFORMFIELD("F_DIFFCOST",PRDiffCost(RepSpec,PRr.Code));
  end;
  if (FIELDINFORM("F_COST")) then begin            
    OUTFORMFIELD("F_COST",PRCost(RepSpec,PRr.Code));
  end;
  if (FIELDINFORM("F_INVOICEABLE")) then begin            
    OUTFORMFIELD("F_INVOICEABLE",PRInvoiceable(PRr.Code));
  end;
  if (FIELDINFORM("F_INVOICED")) then begin            
    OUTFORMFIELD("F_INVOICED",PRInvoiced(PRr.Code));
  end;
  OUTFORMFIELD("F_KUNDTEL",CUr.Phone);
  OUTFORMFIELD("F_KUNDFAX",CUr.Fax);
  if (FIELDINFORM("F_LEVPHONE")) then begin            
    ContactPhone(PRr.Contact,PRr.CustCode,tstr);
    OUTFORMFIELD("F_LEVPHONE",tstr);
  end;
  OutAddress("F_ADRESS",CUr.Name,CUr.InvAddr0,CUr.InvAddr1,CUr.InvAddr2,CUr.InvAddr3,CUr.InvAddr4);
  OUTFORMFIELD("F_KONTAKT",PRr.Contact);
  OUTFORMFIELD("F_BESKRIVNING",PRr.Desc0);
  OUTFORMFIELD("F_BESKRIVNING",PRr.Desc1);
  OUTFORMFIELD("F_BESKRIVNING",PRr.Desc2);
  OUTFORMFIELD("F_TEXT",PRr.Text0);
  OUTFORMFIELD("F_TEXT",PRr.Text1);
  OUTFORMFIELD("F_TEXT",PRr.Text2);
  OUTFORMFIELD("F_TEXT",PRr.Text3);
  OUTFORMFIELD("F_TEXT",PRr.Text4);
  OUTFORMFIELD("F_TEXT",PRr.Text5);
  OUTFORMFIELD("F_TEXT",PRr.Text6);
  OUTFORMFIELD("F_TEXT",PRr.Text7);
  OUTFORMFIELD("F_TEXT",PRr.Text8);
  OUTFORMFIELD("F_TEXT",PRr.Text9);
  OUTFORMFIELD("F_CLASS",PRr.PRClass);
  OUTFORMFIELD("F_LEDARE",PRr.LeaderName);
  OUTFORMFIELD("F_LEDARE2",PRr.Leader2Name);
  OUTFORMFIELD("F_LEDARE3",PRr.Leader3Name);
  OUTFORMFIELD("F_LEDARE4",PRr.Leader4Name);
  OUTFORMFIELD("F_LEDARE5",PRr.Leader5Name);
  OUTFORMFIELD("F_STARTDATUM",PRr.StartDate);
  OUTFORMFIELD("F_SLUTDATUM",PRr.EndDate);
  OUTFORMFIELD("F_PROJEKTNUMMER",PRr.Code);
  OUTFORMFIELD("F_PROJECTNAME",PRr.Name);
  return;
end;     
       
global
procedure DoProjectInfoForm(record RcVc RepSpec,record PRVc PRr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  val t;
  row PRVc PRrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer prrowcnt;

  prrowcnt = MatRowCnt(PRr);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoProjectInfoForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = PRr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      langcode,intdocnr,"PRVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin    
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(FDrw.FPCode,MatRowCnt(PRr));
        PrintHeader(RepSpec,PRr);
        OUTFORMFIELD("F_DOCTYPE",USetStr(4896));
        OUTFORMFIELD("F_VALIDINVOICE",USetStr(23401));  
        if (FIELDINFORM("F_LASTFAKTDATUM")) then begin
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTDATUM",PRrw.PlanDate);
          end;
        end;
        if (FIELDINFORM("F_LASTFAKTBELOPP")) then begin            
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTBELOPP",PRrw.ValStr);
          end;
        end;
        if (FIELDINFORM("F_LASTFAKTKOMMENTAR")) then begin            
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTKOMMENTAR",PRrw.Comment);
          end;
        end;
        if (FIELDINFORM("F_LASTFAKTFAKTURANR")) then begin            
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTFAKTURANR",PRrw.InvNr);
          end;
        end;

        PrintPRRows(RepSpec,PRr);
        CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoProjectInfoForm:;  
  RETURN;
END;
       
procedure PrintPRTransactions(record RcVc RepSpec,record SysFormatBlock SFb,record LangNrVc LangNrr,record PRVc PRr,var Integer prtranscnt)
begin
  record UserVc Userr;
  record TBIVVc TBIVr;
  Boolean found;
  
  prtranscnt = 0;
  found = true;
  TBIVr.PRCode = PRr.Code;
  while (LoopKey("MainKey",TBIVr,1,found)) begin
    if (TBIVr.PRCode!=PRr.Code) then begin found = false; end;
    if (found) then begin
      OUTFORMFIELD("F_TRANSDATUM",TBIVr.TransDate);
      OUTFORMFIELD("F_EMPLOYEE",TBIVr.EMCode);
      Userr.Code = TBIVr.EMCode;
      ReadFirstMain(Userr,1,true);
      OUTFORMFIELD("F_EMPLOYEENAME",Userr.Name);
      OUTFORMFIELD("F_COMMENT",TBIVr.Comment);
      PrintValueInclZero("F_ACTUALQTY",TBIVr.InvQty,M4Val,LangNrr,SFb,false);
      PrintValueInclZero("F_REGISTEREDQTY",TBIVr.Qty,M4Val,LangNrr,SFb,false);
      EndFormRow;
      prtranscnt = prtranscnt + 1;
    end;
  end;
  return;
end;
       
global
procedure DoProjectTransForm(record RcVc RepSpec,record PRVc PRr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  val t;
  row PRVc PRrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer prrowcnt,prtranscnt;
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;

  BlockLoad(SFb);
  GetLangNr("",LangNrr);  
  prrowcnt = MatRowCnt(PRr);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoProjectTransForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = PRr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      langcode,intdocnr,"PRVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin    
        CommonDocumentFields(RepSpec);
        PrintHeader(RepSpec,PRr);
        OUTFORMFIELD("F_DOCTYPE",USetStr(3541));
        if (FIELDINFORM("F_LASTFAKTDATUM")) then begin
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTDATUM",PRrw.PlanDate);
          end;
        end;
        if (FIELDINFORM("F_LASTFAKTBELOPP")) then begin            
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTBELOPP",PRrw.ValStr);
          end;
        end;
        if (FIELDINFORM("F_LASTFAKTKOMMENTAR")) then begin            
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTKOMMENTAR",PRrw.Comment);
          end;
        end;
        if (FIELDINFORM("F_LASTFAKTFAKTURANR")) then begin            
          if (prrowcnt>0) then begin
            MatRowGet(PRr,prrowcnt-1,PRrw);
            OUTFORMFIELD("F_LASTFAKTFAKTURANR",PRrw.InvNr);
          end;
        end;
        PrintPRTransactions(RepSpec,SFb,LangNrr,PRr,prtranscnt);
        
        NumberofDocumentPages(FDrw.FPCode,prtranscnt);
        CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoProjectTransForm:;  
  return;
end;
