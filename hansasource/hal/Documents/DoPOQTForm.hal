external procedure PrintCurrencyCode(string,string);
external function roundmode GetVATRoundMode(record RoundBlock);
external function roundmode SetRoundModeD(Integer);
external procedure OutAddress(string,string,string,string,string,string,string);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure InvVat(Integer,Integer,Integer,Integer,string,val,var val,var val,var val,var val,var val);
external function Boolean GetPurchaseItem(string,string,var record PIVc);
external procedure SelectUnitText(string,string,var string);
external procedure SelectUnitText(string,string,var string);
external procedure BCEAN(string,var string);
external procedure BC39(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBC39(string,var string);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure GetShipDealText(string,string,var string);
external procedure GetShipModeText(string,string,var string);
external procedure GetPayDealText(string,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure ValToText(val,Integer,string,string,var string);
external function Boolean GetPD(var record PDVc);
external procedure CommonDocumentFields(record RcVc);
external function Integer NumberofDocumentPages(string,Integer);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure PrintBranchData(string);

procedure PrintPOQT(record RcVc RepSpec,record POQTVc POQTr,string formcode)
BEGIN
  record LangNrVc LangNrr;
  record SysFormatBlock SysFormatRec;
  record IIBlock IIRec;
  record CUVc VEr;
  record CUVc FactoringVEr;
  record PDVc PDr;
  record INVc INr;
  record PIVc PIr;
  record DocVc Docr;
  row POQTVc POQTrw;
  string 255 tstr;
  Integer i,rwcnt;
  val t,totweight,totvolume;
  val vatprc,vatval,vatexclprc,vatinclprc,rowtax;
  record RoundBlock RoundRec;  
  
  GetLangNr(POQTr.LangCode,LangNrr);
  BlockLoad(RoundRec);
  BlockLoad(IIRec);
  BlockLoad(SysFormatRec);  
  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(POQTr));
  VEr.Code = POQTr.VECode;
  if (ReadFirstMain(VEr,1,true)) then begin
  end;
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
  end;
  FactoringVEr.Code = POQTr.VEFactoring;
  if (ReadFirstMain(FactoringVEr,1,true)) then begin
  end;
  OUTFORMFIELD("F_FAKTURATILL",FactoringVEr.Name);
  OUTFORMFIELD("F_FAKTURATILL",FactoringVEr.InvAddr0);
  OUTFORMFIELD("F_FAKTURATILL",FactoringVEr.InvAddr1);
  OUTFORMFIELD("F_FAKTURATILL",FactoringVEr.InvAddr2);
  OUTFORMFIELD("F_FAKTURATILL",FactoringVEr.InvAddr3);
  OUTFORMFIELD("F_FAKTURATILL",FactoringVEr.InvAddr4);
  OUTFORMFIELD("F_LEVPHONE",VEr.Phone);
  OUTFORMFIELD("F_LEVFAX",VEr.Fax);
  OUTFORMFIELD("F_LEVVATNR",VEr.VATNr);
  OUTFORMFIELD("F_EGETKUNDNR",VEr.VECustID);
  if (FIELDINFORM("F_PAYTERMTEXT")) then begin
    PDr.Code = POQTr.PayDeal;
    if (GetPD(PDr)) then begin
    end;
    OUTFORMFIELD("F_PAYTERMTEXT",PDr.pdComment);
  end;
  OUTFORMFIELD("F_ADRESSNAMN",POQTr.Addr0);
  OUTFORMFIELD("F_PROJEKTNUMMER",POQTr.PRCode);
  if (POQTr.OrdNr!=-1) then begin
    tstr = POQTr.OrdNr;
  end else begin
    tstr = "";
  end;
  OUTFORMFIELD("F_ORDNUMMER",POQTr.OrdNr);
  if (POQTr.OrdNr!=-1) then begin
    tstr = POQTr.OrdNr;
  end else begin
    tstr = "";
  end;
  OUTFORMFIELD("F_ORDERNUMMER",POQTr.OrdNr);
  OUTFORMFIELD("F_ORDERDATE",POQTr.TransDate);
  if (POQTr.SerNr!=-1) then begin
    tstr = POQTr.SerNr;
  end else begin
    tstr = "";
  end;
  OUTFORMFIELD("F_SERNR",tstr);
  if (FIELDINFORM("F_SUMMA")) then begin
    GetFieldArgument(Docr,F_SUMMA,tstr);
    if (nonblank(tstr)) then begin
      tstr = ValToString(Round(POQTr.Sum1,SetRoundModeD(StringToInt(tstr))),M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(POQTr.Sum1,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_SUMMA",tstr);
  end;
  if (FIELDINFORM("F_MOMS")) then begin
    GetFieldArgument(Docr,F_MOMS,tstr);
    if (nonblank(tstr)) then begin
      tstr = ValToString(Round(POQTr.Sum3,SetRoundModeD(StringToInt(tstr))),M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(POQTr.Sum3,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_MOMS",tstr);
  end;
  if (FIELDINFORM("F_ATTBETALA")) then begin
    GetFieldArgument(Docr,F_ATTBETALA,tstr);
    if (nonblank(tstr)) then begin
      tstr = ValToString(Round(POQTr.Sum4,SetRoundModeD(StringToInt(tstr))),M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(POQTr.Sum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_ATTBETALA",tstr);
  end;
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    ValToText(POQTr.Sum4,M4Val,POQTr.CurncyCode,POQTr.LangCode,tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);  
  end;
  OUTFORMFIELD("F_COMMENT",POQTr.Comment);
  OUTFORMFIELD("F_LEVNR",POQTr.VECode);
  OUTFORMFIELD("F_REFERENSNUMMER",POQTr.Reference);
  OutAddress("F_ADRESS",POQTr.Addr0,POQTr.Addr1,POQTr.Addr2,POQTr.Addr3,POQTr.InvAddr3,POQTr.InvAddr4);
  OutAddress("F_LEVADRESS",POQTr.ShipAddr0,POQTr.ShipAddr1,POQTr.ShipAddr2,POQTr.ShipAddr3,POQTr.DelAddr3,POQTr.DelAddr4);
  if (FIELDINFORM("F_VILLKOR")) then begin
    GetPayDealText(POQTr.PayDeal,POQTr.LangCode,tstr);
    OUTFORMFIELD("F_VILLKOR",tstr);
  end;
  OUTFORMFIELD("F_VARREFERENS",POQTr.OurContact);
  OUTFORMFIELD("F_CONTACTEMAIL",VEr.eMail);
  OUTFORMFIELD("F_ERREFERENS",POQTr.VEContact);
  OUTFORMFIELD("F_PLANLEVDATUM",POQTr.PlanShip);
  OUTFORMFIELD("F_LEVSATT",POQTr.ShipMode);
  if (FIELDINFORM("F_LEVSATTTEXT")) then begin
    GetShipModeText(POQTr.ShipMode,POQTr.LangCode,tstr);
    OUTFORMFIELD("F_LEVSATTTEXT",tstr);
  end;
  PrintCurrencyCode("F_VALUTA",POQTr.CurncyCode);
  OUTFORMFIELD("F_SHIPTERM",POQTr.ShipDeal);
  if (FIELDINFORM("F_SHIPTERMTEXT")) then begin
    GetShipDealText(POQTr.ShipDeal,POQTr.LangCode,tstr);
    OUTFORMFIELD("F_SHIPTERMTEXT",tstr);
  end;
  PrintBranchData(POQTr.BranchID);
  PrintValue("F_RANTASATS",IIRec.IntRate,M4Val,LangNrr,SysFormatRec,false);
  rwcnt = MatRowCnt(POQTr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(POQTr,i,POQTrw);
    INr.Code = POQTrw.ArtCode;
    if (ReadFirstMain(INr,1,true)) then begin
    end;
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(POQTrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(POQTrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(POQTrw.ArtCode,tstr);      
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;  
    if (FIELDINFORM("F_LEVARTNRBC39")) then begin
      BC39(POQTrw.VEArtCode,tstr);      
      OUTFORMFIELD("F_LEVARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_LEVARTNRBCEAN")) then begin
      BCEAN(POQTrw.VEArtCode,tstr);      
      OUTFORMFIELD("F_LEVARTNRBCEAN",tstr);
    end;  
    OUTFORMFIELD("F_SPECIFIKATION",POQTrw.Spec);
    PrintValue("F_VARTANTAL",POQTrw.Quant,M4UVal,LangNrr,SysFormatRec,false);    
    PrintValue("F_BELOPP",POQTrw.Sum,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ANTAL",POQTrw.VEQuant,M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_APRIS",POQTrw.Price,M423Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_ARTNR",POQTrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",POQTrw.ArtCode);
    OUTFORMFIELD("F_LEVARTNR",POQTrw.VEArtCode);
    PrintValue("F_RABATT",POQTrw.vRebate,M4Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_MOMSKOD",POQTrw.VATCode);
    PrintValue("F_PRICEFACTOR",POQTrw.PriceFactor,M4UVal,LangNrr,SysFormatRec,false);
    if (POQTrw.PriceFactor!=0) then begin
      t = POQTrw.Price/POQTrw.PriceFactor;
    end else begin
      t = POQTrw.Price;
    end;
    PrintValue("F_UNITPRICE",t,M423Val,LangNrr,SysFormatRec,false);
    SelectUnitText(POQTr.LangCode,INr.Unittext,tstr);    
    OUTFORMFIELD("F_ENHET",tstr);
    if (FIELDINFORM("F_ENHETLEV")) then begin        
      tstr = "";
      if (GetPurchaseItem(POQTrw.ArtCode,"",PIr)) then begin
        SelectUnitText(VEr.LangCode,PIr.VEUnit,tstr);
      end;  
      OUTFORMFIELD("F_ENHETLEV",tstr);
    end;  
    PrintValue("F_VOLUME",INr.Volume,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_WIDTH",INr.Width,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_HEIGHT",INr.Height,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_DEPTH",INr.Depth,M4Qty,LangNrr,SysFormatRec,false);
    PrintValue("F_WEIGHT",INr.Weight,M4Qty,LangNrr,SysFormatRec,false);
    InvVat(1,POQTr.InclVAT,0,POQTr.ExportFlag,POQTrw.VATCode,POQTrw.Sum,vatprc,vatval,vatexclprc,vatinclprc,rowtax);
    t = MulRateToBase1(POQTr.CurncyCode,vatval,POQTr.FrRate,POQTr.ToRateB1,POQTr.ToRateB2,POQTr.BaseRate1,POQTr.BaseRate2,DefaultCurRoundOff);
    PrintValue("F_BASE1ROWVATVAL",Round(t,GetVATRoundMode(RoundRec)),M4Val,LangNrr,SysFormatRec,false);
    t = MulRateToBase2(POQTr.CurncyCode,vatval,POQTr.FrRate,POQTr.ToRateB1,POQTr.ToRateB2,POQTr.BaseRate1,POQTr.BaseRate2,DefaultCurRoundOff);
    PrintValue("F_BASE2ROWVATVAL",Round(t,GetVATRoundMode(RoundRec)),M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWVATVAL",vatval,M4Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_ROWOBJECT",POQTrw.Objects);
    totweight = totweight + INr.Weight;
    totvolume = totvolume + INr.Volume;
    EndFormRow;
  end;  
  OUTFORMFIELD("F_OBJECT",POQTr.Objects);
  PrintValue("F_TOTWEIGHT",totweight,M4Qty,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTVOLUME",totvolume,M4Qty,LangNrr,SysFormatRec,false);
  RETURN;
END;

global
procedure DoPOQTForm(record RcVc RepSpec,record POQTVc POQTr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoPOQTForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = POQTr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,POQTr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"POQTVc",formcode)) then
      begin
        goto LBREAKPOQT;
      end;
    end;
LBREAKPOQT:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintPOQT(RepSpec,POQTr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoPOQTForm:;  
  RETURN;
END;
