external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetUserName(string,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external procedure ItemBC39(string,var string);
external procedure GetItemGroup(string,var string);
external procedure GetUnitStr(string,string,var string);
external procedure GetPayDealText(string,string,var string);
external procedure GetShipDealText(string,string,var string);
external procedure GetShipModeText(string,string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure ValToText(val,Integer,string,string,var string);
external procedure PrintCredManHeader(record CredManVc);
//external procedure CredManSetFax(record CUVc,record CredManVc);

function Integer PrintCredManStatRows(record RcVc RepSpec,record CredManVc CredManr,record LangNrVc LangNrr,var val curbal,Boolean printf)
BEGIN
  record CredManEventVc CredManEventr;
  Boolean foundf,testf,addedf;
  string 255 tstr,keystr;
  Integer res;
  
  res = 0;
  foundf = true;
  keystr = "CredManTransDate:";
  keystr = keystr & CredManr.SerNr;
  while (LoopKey(keystr,CredManEventr,1,foundf)) begin
    if (printf) then begin
      OUTFORMFIELD("F_TRANSDATE",CredManEventr.TransDate);
      OUTFORMFIELD("F_DUEDATE",CredManEventr.DueDate);
      OUTFORMFIELD("F_SALDO",CredManEventr.CredManBal);
      OUTFORMFIELD("F_DEBVAL",CredManEventr.InvSum);
      OUTFORMFIELD("F_CREDVAL",CredManEventr.PaidSum);
      OUTFORMFIELD("F_SPECIFIKATION",CredManEventr.Comment);
      EndFormRow;
    end;
    curbal = CredManEventr.CredManBal;
    res = res + 1;
  end;
  PrintCredManStatRows = res;
  RETURN;
END;

global
procedure DoCredManStatForm(record RcVc RepSpec,record CredManVc CredManr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  string 255 tstr;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  val curbal;
  
  GetLangNr(CredManr.LangCode,LangNrr);      
  langcode = CredManr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCredManStatForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(CredManr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,CredManr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"CredManVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
          RepSpec.sStartDate = CredManr.startDate;
          RepSpec.sEndDate = CredManr.endDate;
          CommonDocumentFields(RepSpec);
          rwcnt = PrintCredManStatRows(RepSpec,CredManr,LangNrr,curbal,false);
          NumberofDocumentPages(FDrw.FPCode,rwcnt);
          PrintCredManHeader(CredManr);
          OUTFORMFIELD("F_ENDBAL",curbal);
          PrintCredManStatRows(RepSpec,CredManr,LangNrr,curbal,true);
          CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCredManStatForm:;  
  RETURN;
END;
