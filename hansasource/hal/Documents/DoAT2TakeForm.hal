external function Boolean FindFormcode(Integer,Integer);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);
external function Boolean GetLastDprStartVal(Integer,string,val,var val,var val);

global
procedure GetAssetPrevDepartment(string InventoryNr,longint sernr,var string depcode,var string respperson) 
BEGIN
  record InvrsVc Invrsr;
  record At2UnitVc At2Unitr;
  boolean testf,TrHs;

  At2Unitr.InventoryNr = inventoryNr;
  if (Readfirstmain(AT2Unitr,1,true)) then begin
    depcode = AT2Unitr.DepCode;
    respperson = AT2Unitr.RespPerson;
  end;
  TrHs = true;
  Invrsr.InventoryNr = InventoryNr;
  Invrsr.FileName = "AT2TakeVc";
  while (loopBackKey("FileName",Invrsr,1,TrHs)) begin
    if (Invrsr.FileName != "AT2TakeVc") then begin
      trHs = false;
    end;
    if (Invrsr.InventoryNr != InventoryNr) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      if (Invrsr.TransNr != sernr or sernr==-1) then begin
        depcode = Invrsr.Department;
        respperson = Invrsr.LegalCode;
        Trhs = false;
      end;
    end;
  end;
  RETURN;
END;

procedure PrintAT2TakeRows(record RcVc RepSpec,record AT2TakeVc AT2Taker)
BEGIN
  record DepVc Depr;
  Integer i,rwcnt;
  row AT2TakeVc AT2Takerw;
  record AT2UnitVc AT2Unitr;
  string 255 tstr,respp;
  val t,t2;
  
  rwcnt = MatRowCnt(AT2Taker);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(AT2Taker,i,AT2Takerw);
    AT2Unitr.InventoryNr = AT2Takerw.InventoryNr;
    if (ReadFirstMain(AT2Unitr,1,true)) then begin
    end;    
    OUTFORMFIELD("F_USEDFROM",AT2Unitr.UsedFromDate);
    OUTFORMFIELD("F_PURCHVAL",AT2Unitr.PurchVal);    
    OUTFORMFIELD("F_ANTAL",AT2Unitr.Quantity);
    t = AT2Unitr.PurchVal / AT2Unitr.Quantity;
    OUTFORMFIELD("F_PRIS",t);    
    

    OUTFORMFIELD("F_TRANSNR",i+1);          
    OUTFORMFIELD("F_FIXASSETCODE",AT2Takerw.InventoryNr);
    OUTFORMFIELD("F_FIXASSETNAME",AT2Takerw.Description);
    OUTFORMFIELD("F_SERIALNR",AT2Takerw.InventoryNr);
    OUTFORMFIELD("F_INVENTORYNR",AT2Takerw.InventoryNr);
    OUTFORMFIELD("F_COMMENT",AT2Takerw.Comment);
    OUTFORMFIELD("F_ANTAL",AT2Takerw.Qty);
    GetAssetPrevDepartment(AT2Takerw.InventoryNr,-1,tstr,respp);
    OUTFORMFIELD("F_CURRESPONSIBLEPERSON",respp);
    Depr.Code = tstr;
    if (readfirstmain(Depr,1,true)) then begin
      OUTFORMFIELD("F_CURDEPNAME",Depr.Description);
    end;
    GetAssetPrevDepartment(AT2Takerw.InventoryNr,AT2Taker.SerNr,tstr,respp);
    OUTFORMFIELD("F_PREVRESPPERSON",respp);
    Depr.Code = tstr;
    if (ReadFirstMain(Depr,1,true)) then begin
      OUTFORMFIELD("F_PREVDEPNAME",Depr.Description);
    end;
    if (FIELDINFORM("F_REVALUATEDVALUE")) then begin
      if (GetLastDprStartVal(0,AT2Takerw.InventoryNr,AT2Unitr.PurchVal,t,t2)) then begin 
      end;
      OUTFORMFIELD("F_REVALUATEDVALUE",t);
    end;  
    OUTFORMFIELD("F_PURCHVAL",AT2Unitr.PurchVal);    
    EndFormRow;        
  end;  
  RETURN;
END;

global
procedure DoAT2TakeForm(record RcVc RepSpec,record AT2TakeVc AT2Taker)
BEGIN
  record DepVc Depr;
  record UserVc Userr;
  record CUVc CUr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  string 255 tstr;
  val t;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoAT2TakeForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(AT2Taker.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,AT2Taker.SerNr,FDrw.PrintGroupCode,
                         "",intdocnr,"AT2TakeVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(FDrw.FPCode,MatRowCnt(AT2Taker));
        OUTFORMFIELD("F_SERNR",AT2Taker.SerNr);
        OUTFORMFIELD("F_TRANSDATE",AT2Taker.TransDate);
        OUTFORMFIELD("F_KOMMENTAR",AT2Taker.Comment);
        OUTFORMFIELD("F_SIGNATURE",AT2Taker.Sign);
        OUTFORMFIELD("F_DEPARTMENT",AT2Taker.DepCode);
        Depr.Code = AT2Taker.DepCode;
        if (readfirstmain(Depr,1,true)) then begin
          OUTFORMFIELD("F_DEPNAME",Depr.Description);
          OUTFORMFIELD("F_DEPADDRESS",Depr.Addr0);
          OUTFORMFIELD("F_DEPADDRESS",Depr.Addr1);
          OUTFORMFIELD("F_DEPADDRESS",Depr.Addr2);
          OUTFORMFIELD("F_DEPADDRESS",Depr.Addr3);
          OUTFORMFIELD("F_DEPADDRESS",Depr.Addr4);
          OUTFORMFIELD("F_DEPADDRESS",Depr.Addr5);
        end;
        OUTFORMFIELD("F_PERSON",AT2Taker.RespPerson);
        OUTFORMFIELD("F_DOCTYPE",USetStr(23466));
        USerr.Code = AT2Taker.RespPerson;
        if (readfirstmain(USerr,1,true)) then begin  
          OUTFORMFIELD("F_PERSNAME",Userr.Name);
          OUTFORMFIELD("F_JOBDESC",Userr.Spec);
        end;
        PrintAT2TakeRows(RepSpec,AT2Taker);
        CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoAT2TakeForm:;  
  RETURN;  
END;     
 
