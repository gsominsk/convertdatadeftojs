external procedure CalcORTotals(record ORVc,record DocVc,record SysFormatBlock,record LangNrVc);
external procedure LongDateToStr(Date,Integer,var string);
external procedure CalcSum(val,val,val,val,var val,Integer);
external function string 255 GetVarietyComment(string,string);
external function Integer SetDateOrder(string);
external procedure GetObjectText(string,var string);
external function roundmode GetVATRoundModeRB();
external function roundmode SetRoundModeD(Integer);
external function roundmode DefaultRoundMode();
external procedure SetRowStyle(record Docvc,string,Integer,string,val);
external procedure Mul2VAT(string,val,var val,var val,Integer);
external procedure CalcVATBaseVAT(record SMVc,Integer,Integer,Integer,var val,var val);
external procedure PrintUserDefinedItemFields(string,string,string,string,string,Date,Date,Date,val,val,val);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external function Boolean GetVATincl(string,var val,var Integer);
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external procedure GetVATdouble(string,var val,var val,Integer);
external function Boolean GetPurchaseItem(string,string,var record PIVc);
external function Boolean GetItemNameStr(Integer,var string,string,string,string);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure SelectUnitText(string,string,var string);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure GetPayDealText(string,string,var string);
external function string 255 GetOffSerNrIVJournalID(LongInt,string,string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function string 255 SAFTHashControl(string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure PrintNote(record NotepadVc);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure GetMonthText(string,Date,var string);
external procedure GetCurUser(var record UserVc);
external procedure ValToText(val,Integer,string,string,var string);
external function Boolean FindFormcode(Integer,Integer);
external procedure SetConversionFields(record INVc,val,var val,var val,var val);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintCountryCode(string,string);

procedure StockMovInvPrintNote(record StockMovVc StockMovr,string argumentstr)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer notenr;

  notenr = 1;
  while (ReadRecordLink(StockMovr,notenr,Noter,RLr)) begin
    if ((argumentstr==RLr.Comment) or (blank(argumentstr))) then begin
      PrintNote(Noter);
      goto LStockMovInvPrintNote;
    end;
    notenr = notenr + 1;
  end;
LStockMovInvPrintNote:;  
  return;
end;

procedure ORVat(Integer stp,Integer incvat,Integer NoTAXonVAT,Integer exportflag,string vatcode,val rowsump,
                var val vatprcp,var val vatvalp,var val vatexclprc,var val vatinclprc,var val rowtaxp)
begin
  Integer rn;
  val tax1;
  
  vatprcp = blankval;
  vatvalp = blankval;
  vatexclprc = blankval;
  vatinclprc = blankval;
  rowtaxp = blankval;
  if (stp==1) then begin
    switch (incvat) begin
      case 0:
        if ((exportflag==0) or (exportflag==3) or (exportflag==4)) then begin
//          Mul2VAT(vatcode,rowsump,vatvalp,vatprcp,incvat);
          GetVATdouble(vatcode,vatprcp,tax1,incvat);
          MulVATIV(vatcode,rowsump,vatvalp,rowtaxp,incvat,NoTAXonVAT);
          if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
          end;
          if (GetVATincl(vatcode,vatinclprc,rn)) then begin
          end;
        end;
      otherwise 
        Mul2VAT(vatcode,rowsump,vatvalp,vatprcp,incvat);
        if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
        end;
        if (GetVATincl(vatcode,vatinclprc,rn)) then begin
        end;
    end;
  end;
  return;
end;

procedure PrintOrderRows(record RcVc RepSpec,record DocVc Docr,record ORVc ORr,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec,
                         var val totinprice,var val totweight,var val totvolume,var val totcombase2sum,var val totqty, var val totqty2,var val totnodiscount,Integer rwcnt)
begin
  record INVc INr;
  record RecVc Recr;
  row ORVc ORrw;
  Integer i;
  string 255 tstr;
  val t,t2,v,qtyconv1,qtyconv2,qtyconv3;
  Integer rownr,r,valtyp;
  record PIVc PIr;
  val vatprc,vatval,vatexclprc,vatinclprc,rowtax;
  record GeneralOptionBlock GenOptRec;
  record MainStockBlock MainStockRec;
  string 255 location;
  record SMVc nodiscVATr;
  Integer vatcnt;
  record RegionVc Regionr;
  record INVc dummyINr;

  RecordClear(dummyINr);
  BlockLoad(MainStockRec);
  BlockLoad(GenOptRec);
  RecordClear(dummyINr);
  totinprice = blankval;
  totvolume = blankval;
  totweight = blankval;
  totcombase2sum = blankval;
  SetupVATBase(nodiscVATr,vatcnt);          
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    SetRowStyle(Docr,"ORVc",ORrw.stp,ORrw.ArtCode,ORrw.Sum);
    switch (ORrw.stp) begin
    case kInvoiceRowTypeStructuredItemComponent:
      goto LkInvoiceRowTypeNormal;
    case kInvoiceRowTypeSubtotal:
      PrintValueInclZero("F_BELOPP",ORrw.Sum,M4Val,LangNrr,SysFormatRec,false);
      PrintValueInclZero("F_SUBTOTALAMOUNT",ORrw.Sum,M4Val,LangNrr,SysFormatRec,false);
      OUTFORMFIELD("F_SPECIFIKATION",ORrw.Spec); 
      OutFormImage(dummyINr);
      EndFormRow;        
    case kInvoiceRowTypeHeader:
      OUTFORMFIELD("F_SPECIFIKATION",ORrw.Spec);    
      OutFormImage(dummyINr);
      EndFormRow;        
    case kInvoiceRowTypePerceptionTax:
      OUTFORMFIELD("F_ROWNAME",USetStr(8108));
      OUTFORMFIELD("F_REGIONROW",ORrw.Region);
      Regionr.Code = ORrw.Region;
      ReadFirstMain(Regionr,1,true);
      OUTFORMFIELD("F_REGIONNAMEROW",Regionr.Name);
      OUTFORMFIELD("F_SPECIFIKATION",ORrw.Spec); 
      OUTFORMFIELD("F_SALESACC",ORrw.SalesAcc);
      PrintValue("F_TAX2PRC",ORrw.TAX2Prc,M4Val,LangNrr,SysFormatRec,false);          
      PrintValue("F_BELOPP",ORrw.Sum,M4Val,LangNrr,SysFormatRec,false);        
      EndFormRow;        
    case kInvoiceRowTypeNormal:
LkInvoiceRowTypeNormal:;      
      MulVATIV(ORrw.VATCode,ORrw.Sum,vatval,t,ORr.InclVAT,ORr.NoTAXonVAT);
      if (vatval<>0) or (ORrw.Sum!=0) then begin
        vatval = Round(vatval,GetVATRoundModeRB);
      end;    
//      if (vatval==0) then begin vatval = blankval; end;
      if (ReadFirstItem(ORrw.ArtCode,INr,true,false)) then begin
      end;
      totweight = totweight + ORrw.Quant*INr.Weight;
      totvolume = totvolume + ORrw.Quant*INr.Volume;
      totinprice = totinprice + ORrw.Quant*INr.InPrice;
      if ((FIELDINFORM("F_ITEMCODE")) or (FIELDINFORM("F_ITEMNAME")) or (FIELDINFORM("F_ITEMUNIT"))) then begin
        if ((INr.ItemType==2) and (INr.ExplodeRec!=0)) then begin
          SelectUnitText(ORr.LangCode,INr.Unittext,tstr);
          OUTFORMFIELD("F_ITEMUNIT",tstr);
          Recr.Code = INr.Recepy;
          if (ReadFirstMain(Recr,1,true)) then begin
            OUTFORMFIELD("F_ITEMCODE",Recr.Code);
            OUTFORMFIELD("F_ITEMNAME",Recr.Comment);
          end;
        end;
      end;
      if (nonblank(ORrw.ArtCode)) then begin
        rownr = rownr + 1;
        OUTFORMFIELD("F_ROWNR",rownr);
      end;
      if (FIELDINFORM("F_APRIS")) then begin
        GetFieldArgument(Docr,F_APRIS,tstr);
        if (nonblank(tstr)) then begin
          r = StringToInt(tstr);
          t = Round(ORrw.Price,SetRoundModeD(r));
          PrintValueInclZero("F_APRIS",t,M45Val,LangNrr,SysFormatRec,false);
        end else begin
          PrintValueInclZero("F_APRIS",ORrw.Price,M423Val,LangNrr,SysFormatRec,false);
        end;
      end;
      if (FIELDINFORM("F_BASPRIS")) then begin
        if (ORr.InclVAT==0) then begin
          MulVATIV(ORrw.VATCode,ORrw.Price,t,t2,0,0);
          t = t + ORrw.Price;
        end else begin
          t = ORrw.Price*ORrw.vRebate;
          t = t/100;
          v = ORrw.Price - t;
          t = vatval/ORrw.Quant;
          t = v - t;
        end;
        PrintValue("F_BASPRIS",t,M423Val,LangNrr,SysFormatRec,false);
      end;
      
      OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
      OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);
      OUTFORMFIELD("F_CPSCODE",INr.CPSCode);
      OUTFORMFIELD("F_SHELFCODE",INr.InvCode);
      OUTFORMFIELD("F_WIDTH",INr.Width);
      OUTFORMFIELD("F_HEIGHT",INr.Height);
      OUTFORMFIELD("F_DEPTH",INr.Depth);
      OUTFORMFIELD("F_WEIGHT",INr.Weight);
      OUTFORMFIELD("F_VOLUME",INr.Volume);
      OUTFORMFIELD("F_BARCODE",INr.BarCode);
      PrintValue("F_INPRICE",INr.InPrice,M423Val,LangNrr,SysFormatRec,false);
      OUTFORMFIELD("F_ITEMLOCATION",INr.Department);
      PrintValue("F_INPRICESUM",INr.InPrice*ORrw.Quant,M423Val,LangNrr,SysFormatRec,false);
      t = ORrw.Quant*INr.Weight;
      if (t==0) then begin t = blankval; end;
      PrintValue("F_ROWWEIGHT",t,M4Qty,LangNrr,SysFormatRec,false);
      t = ORrw.Quant*INr.Volume;
      if (t==0) then begin t = blankval; end;
      PrintValue("F_ROWVOLUME",t,M4Qty,LangNrr,SysFormatRec,false);
      SetConversionFields(INr,ORrw.Quant,qtyconv1,qtyconv2,qtyconv3);      
      PrintValue("F_CONVERSION1",qtyconv1,M4UVal,LangNrr,SysFormatRec,false);
      PrintValue("F_CONVERSION2",qtyconv2,M4UVal,LangNrr,SysFormatRec,false);
      PrintValue("F_CONVERSION3",qtyconv3,M4UVal,LangNrr,SysFormatRec,false);
      PrintValue("F_CONVERSIONVAL1",INr.Conversion1,M4UVal,LangNrr,SysFormatRec,false);
      PrintValue("F_CONVERSIONVAL2",INr.Conversion2,M4UVal,LangNrr,SysFormatRec,false);
      
      
      OUTFORMFIELD("F_SOURCE",ORrw.Source);      
      OUTFORMFIELD("F_KOSTPRIS",ORrw.BasePrice);      
      OUTFORMFIELD("F_ROWWIDTH",ORrw.UnitXval);
      OUTFORMFIELD("F_ROWHEIGHT",ORrw.UnitYval);
      OUTFORMFIELD("F_ROWDEPTH",ORrw.UnitZval);
      OUTFORMFIELD("F_ROWOBJECT",ORrw.Objects);
      if (FIELDINFORM("F_OBJEKTTEXT")) then begin
        GetObjectText(ORrw.Objects,tstr);
        OUTFORMFIELD("F_OBJEKTTEXT",tstr);
      end;
      if (FIELDINFORM("F_ROWOBJEKTTEXT")) then begin
        GetObjectText(ORrw.Objects,tstr);
        OUTFORMFIELD("F_ROWOBJEKTTEXT",tstr);
      end;        
//       OrderCalcCommisionValue(ORr,ORrw.Quant,ORrw.Price,t);
//       t = t + ORrw.Price;
//       t = MulRateToBase2(ORr.CurncyCode,t,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
//       PrintValue("F_COMROWPRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);
//       totcombase2sum = totcombase2sum + t;
      
       
//       if (FIELDINFORM("F_COMBASE2ROWTOT")) then begin
//         OrderCalcCommisionValue(ORr,ORrw.Quant,ORrw.Price,t);
//         t = t + ORrw.Price;
//         t = t * ORrw.Quant;
//         t = MulRateToBase2(ORr.CurncyCode,t,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
//         PrintValue("F_COMBASE2ROWTOT",t,M4Val,LangNrr,SysFormatRec,false);
//       end;
      PrintValue("F_UNITFACTQUANT",ORrw.UnitFactQuant,M4UVal,LangNrr,SysFormatRec,false);
      SelectUnitText(ORr.LangCode,ORrw.UnitCode,tstr);
      OUTFORMFIELD("F_UNITCOMMENT",tstr);
      OUTFORMFIELD("F_UNITCODE",ORrw.UnitCode);
      PrintValue("F_UNITFACTPRICE",ORrw.UnitFactPrice,M423Val,LangNrr,SysFormatRec,false);
      OUTFORMFIELD("F_PLANSHIPROW",ORrw.PlanShipRow);
//       if (FIELDINFORM("F_WARRANTY")) then begin
//         GetWarrantyLength(ORrw.ArtCode,tstr);
//         OUTFORMFIELD("F_WARRANTY",tstr);
//       end;
//       if (FIELDINFORM("F_AVDELNING")) then begin
//         GetItemDepartment(ORrw.ArtCode,tstr);
//         OUTFORMFIELD("F_AVDELNING",tstr);
//       end;
      if (FIELDINFORM("F_ARTNRBC39")) then begin
        ItemBC39(ORrw.ArtCode,tstr);
        OUTFORMFIELD("F_ARTNRBC39",tstr);
      end;  
      if (FIELDINFORM("F_ARTNRBCEAN")) then begin
        ItemBCEAN(ORrw.ArtCode,tstr);
        OUTFORMFIELD("F_ARTNRBCEAN",tstr);
      end;  
      if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
        ItemBCEAN13(ORrw.ArtCode,tstr);      
        OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
      end;  
      OUTFORMFIELD("F_ROWLOCATION",ORrw.Location);
      OUTFORMFIELD("F_ROWPICKINGDATE",ORrw.PickingDate);
      OUTFORMFIELD("F_ROWPICKINGTIME",ORrw.PickingTime);
      OUTFORMFIELD("F_ROWINLOADINGDATE",ORrw.InloadingDate);
      OUTFORMFIELD("F_ROWINLOADINGTIME",ORrw.InloadingTime);
      OUTFORMFIELD("F_ROWDELIVERYDATE",ORrw.DespatchRowDate);
      OUTFORMFIELD("F_ROWDELIVERYTIME",ORrw.DespatchRowTime);
      PrintValueInclZero("F_BELOPP",ORrw.Sum,M4Val,LangNrr,SysFormatRec,false);
      OUTFORMFIELD("F_CUSTARTNR",ORrw.CustArtCode);
      OUTFORMFIELD("F_ARTNR",ORrw.ArtCode);
      OUTFORMFIELD("F_ARTNR2",ORrw.ArtCode);
      OUTFORMFIELD("F_ARTCODEVARIETIES",GetVarietyComment(ORrw.ArtCode,INr.Code));
      OUTFORMFIELD("F_ARTCODENOVARIETIES",INr.Code);
      v = ORrw.vRebate;
      GetFieldArgument(Docr,F_RABATT,tstr);
      if (nonblank(tstr)) then begin
        if (blank(ORrw.ArtCode)) then begin
          PrintValue("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SysFormatRec,false);
        end else begin
          PrintValueInclZero("F_RABATT",Round(v,SetRoundModeD(StringToInt(tstr))),M4Qty,LangNrr,SysFormatRec,false);
        end;
      end else begin
        if (blank(ORrw.ArtCode)) then begin
          PrintValue("F_RABATT",v,M41Val,LangNrr,SysFormatRec,false);
        end else begin
          PrintValueInclZero("F_RABATT",v,M41Val,LangNrr,SysFormatRec,false);
        end;
      end;
      OUTFORMFIELD("F_SERIENR",ORrw.SerialNr);
      OUTFORMFIELD("F_EUCODE",INr.EUCodex);
      tstr = ORrw.Spec;
      if (tstr==INr.Name) then begin
        if (GetItemNameStr(1,tstr,ORr.LangCode,INr.Name,INr.Code)) then begin end;
      end;
      OUTFORMFIELD("F_SPECIFIKATION",tstr);
      PrintValue("F_ANTAL",ORrw.Quant,M4UVal,LangNrr,SysFormatRec,false);
      totqty = totqty + ORrw.Quant;

      totqty2 = totqty2 + ORrw.Quant*INr.UnitCoefficient;
      PrintValue("F_COEFFICIENT",INr.UnitCoefficient,M45Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase1(ORr.CurncyCode,ORrw.Price,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_PRICEBASECURNCY1",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase2(ORr.CurncyCode,ORrw.Price,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_PRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase1(ORr.CurncyCode,ORrw.Sum,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_ROWPRICEBASECURNCY1",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase2(ORr.CurncyCode,ORrw.Sum,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_ROWPRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);

      if (FIELDINFORM("F_BASE1ROWBASE")) then begin
        v = ORrw.Sum;
        if (ORr.InclVAT>0) then begin
          if (v!=0) then begin
            v = v - vatval;
          end;
        end;
        GetFieldArgument(Docr,F_BASE1ROWBASE,tstr);
        if (nonblank(tstr)) then begin
          t = Round(v,SetRoundModeD(StringToInt(tstr)));
          t = MulRateToBase1(ORr.CurncyCode,t,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
          PrintValue("F_BASE1ROWBASE",t,M4Val,LangNrr,SysFormatRec,false);
        end else begin
          t = MulRateToBase1(ORr.CurncyCode,v,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
          PrintValue("F_BASE1ROWBASE",t,M4Val,LangNrr,SysFormatRec,false);
        end;
      end;
      if (FIELDINFORM("F_BASE2ROWBASE")) then begin
        v = ORrw.Sum;
        if (ORr.InclVAT>0) then begin
          if (v!=0) then begin
            v = v - vatval;
          end;
        end;
        GetFieldArgument(Docr,F_BASE2ROWBASE,tstr);
        if (nonblank(tstr)) then begin
          t = Round(v,SetRoundModeD(StringToInt(tstr)));
          t = MulRateToBase2(ORr.CurncyCode,t,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,SetRoundModeD(StringToInt(tstr)));
          PrintValue("F_BASE2ROWBASE",t,M4Val,LangNrr,SysFormatRec,false);
        end else begin
          t = MulRateToBase2(ORr.CurncyCode,v,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
          PrintValue("F_BASE2ROWBASE",t,M4Val,LangNrr,SysFormatRec,false);
        end;
      end;      
      OUTFORMFIELD("F_RECEPY",ORrw.Recepy);
      OUTFORMFIELD("F_MOMSKOD",ORrw.VATCode);
      if (nonblank(ORrw.RvrsVATCode)) then begin
        OUTFORMFIELD("F_REVERSEVATCODE",ORrw.RvrsVATCode);
        if (HasLocalization("GBR,LIT")) then begin
          if (blank(ORr.Sum3)) then begin
            OUTFORMFIELD("F_ROWREVERSEVATTEXT",USetStr(39370));
          end;
        end;
      end;
      SelectUnitText(ORr.LangCode,INr.Unittext,tstr);    
      OUTFORMFIELD("F_ENHET",tstr);
      t = Round(ORrw.Sum/ORrw.Quant,DefaultRoundMode);
      PrintValue("F_UNITPRICEINCDISC",t,M4Val,LangNrr,SysFormatRec,false);
      CalcSum(1,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,t,GenOptRec.UseDiscount);
      if (t!=0) then begin
        PrintValue("F_ROWPRICEREBATE",t,M423Val,LangNrr,SysFormatRec,false);
      end;
      if (ORrw.Quant!=blankval) then begin
        PrintValue("F_KVARATTLEV",ORrw.Quant-ORrw.Shipd1,M4UVal,LangNrr,SysFormatRec,false);
      end;
      if (FIELDINFORM("F_KVARATTLEVVIKT")) then begin
        if (ORrw.Quant!=blankval) then begin
          t = INr.Weight*(ORrw.Quant-ORrw.Shipd1);
          PrintValue("F_KVARATTLEVVIKT",t,M4UVal,LangNrr,SysFormatRec,false);
        end;
      end;  
      tstr = -ORrw.vRebate;
      if (nonblank(tstr)) then begin
        tstr = tstr & "%";
        OUTFORMFIELD("F_RABATTSPEC",tstr);
      end;
      
      if (FIELDINFORM("F_PRICEFACTOR")) then begin
        if (ORrw.PriceFactor==blankval) then begin
          OUTFORMFIELD("F_PRICEFACTOR","");
        end else begin
          PrintValue("F_PRICEFACTOR",ORrw.PriceFactor,M4UVal,LangNrr,SysFormatRec,false);
        end;
      end;  
      if (FIELDINFORM("F_UNITPRICE")) then begin
        if (ORrw.PriceFactor==blankval) then begin
          PrintValue("F_UNITPRICE",ORrw.Price,M423Val,LangNrr,SysFormatRec,false);
        end else begin
          PrintValue("F_UNITPRICE",ORrw.Price/ORrw.PriceFactor,M423Val,LangNrr,SysFormatRec,false);
        end;
      end;  
      PrintValue("F_AMOUNTROUNDED",Round(ORrw.Sum,DefaultRoundMode),M4Val,LangNrr,SysFormatRec,false);
      if (MainStockRec.UnitConvCalc==0) then begin
        t = ORrw.Quant*ORrw.Coefficient;
      end else begin
        t = ORrw.Quant/ORrw.Coefficient;
      end;
      PrintValue("F_OUTQTY",t,M4Qty,LangNrr,SysFormatRec,false);      
      if (MainStockRec.UnitConvCalc==0) then begin
        tstr = ValToString(ORrw.Quant*INr.UnitCoefficient,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      end else begin
        tstr = ValToString(ORrw.Quant/INr.UnitCoefficient,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      end;
      OUTFORMFIELD("F_ANTAL2",tstr);
      PrintValue("F_DIFFROWVALUE",(ORr.DiscPerc*ORrw.Sum)/100,M4Val,LangNrr,SysFormatRec,false);
      location = ORrw.Location;
      if (blank(location)) then begin location = ORr.Location; end;
      if (GetPurchaseItem(ORrw.ArtCode,location,PIr)) then begin
        OUTFORMFIELD("F_LEV_ARTNR",PIr.VEItemCode);
        OUTFORMFIELD("F_LEVSPECIFIKATION",PIr.Comment);
        OUTFORMFIELD("F_LEVKOSTPRIS",PIr.PurPrice);
        PrintValue("F_ANTALLEV",ORrw.Quant,M4UVal,LangNrr,SysFormatRec,false);
        PrintValue("F_RABATTLEV",ORrw.vRebate,M4UVal,LangNrr,SysFormatRec,false);
        OUTFORMFIELD("F_ARTNRLEV",ORrw.ArtCode);
        SelectUnitText(ORr.LangCode,ORrw.UnitCode,tstr);
        OUTFORMFIELD("F_ENHETLEV",tstr);
        OUTFORMFIELD("F_SPECIFIKATIONLEV",ORrw.Spec);
      end;      
      ORVat(1,ORr.InclVAT,ORr.NoTAXonVAT,ORr.ExportFlag,ORrw.VATCode,ORrw.Sum,vatprc,vatval,vatexclprc,vatinclprc,rowtax);
      PrintValue("F_ROWTAXVAL",rowtax,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_ROWVATVAL",vatval,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_ROWVATPRC",vatprc,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase1(ORr.CurncyCode,vatval,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_BASE1ROWVATVAL",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase2(ORr.CurncyCode,vatval,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_BASE2ROWVATVAL",t,M4Val,LangNrr,SysFormatRec,false);
      t = (vatexclprc*ORr.DiscPerc)/100;
      if (t==blankval) then begin
        tstr = USetStr(1244);
      end else begin
        tstr = t;
      end;
      OUTFORMFIELD("F_DIFFTOTVALUE",t);
      PrintValue("F_ROWSUMTOTAL",ORrw.Sum+vatval+rowtax,M4Val,LangNrr,SysFormatRec,false);
      totnodiscount = totnodiscount + ORrw.Quant * ORrw.Price;
      PrintValue("F_ROWSUMWITHVAT",ORrw.Sum+vatval,M4Val,LangNrr,SysFormatRec,false);

      AddVATBase(nodiscVATr,ORrw.VATCode,ORrw.Quant * ORrw.Price,blankval,vatcnt,ORr.InclVAT,ORr.NoTAXonVAT);      

      t = ORrw.Sum;
      if (ORr.InclVAT>0) then begin
        t = t + vatval;
      end;
      t = MulRateToBase1(ORr.CurncyCode,t,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_BASE1ROWTOT",t,M4Val,LangNrr,SysFormatRec,false);
      t = ORrw.Sum;
      if (ORr.InclVAT>0) then begin
        t = t + vatval;
      end;
      t = MulRateToBase2(ORr.CurncyCode,t,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_BASE2ROWTOT",t,M4Val,LangNrr,SysFormatRec,false);
      PrintUserDefinedItemFields(INr.UserStr1,INr.UserStr2,INr.UserStr3,INr.UserStr4,INr.UserStr5,INr.UserDate1,INr.UserDate2,INr.UserDate3,INr.UserVal1,INr.UserVal2,INr.UserVal3);
      PrintValueInclZero("F_REMAININGQTY",ORrw.Quant-ORrw.Shipd1,M4UVal,LangNrr,SysFormatRec,false);
      PrintValueInclZero("F_LEVANTAL",ORrw.Shipd1,M4UVal,LangNrr,SysFormatRec,false);
      PrintValueInclZero("F_ORDQTY",ORrw.Quant,M4UVal,LangNrr,SysFormatRec,false);      
      OutFormImage(INr);
      EndFormRow;        
    end;
  end;
  CalcVATBaseVAT(nodiscVATr,ORr.InclVAT,ORr.NoTAXonVAT,vatcnt,vatval,rowtax);
  totnodiscount = totnodiscount + vatval + rowtax;
  return;
end;

function integer CountOrderRows(record ORVc ORr)
begin
  Integer i,rwcnt;
  row ORVc ORrw;
  
  rwcnt = MatRowCnt(ORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    if (ORrw.stp==10) then begin
      rwcnt = i;
      goto LCountOrderRows;
    end;
  end;
LCountOrderRows:;
  CountOrderRows = rwcnt;
  return;
end;

global
procedure DoStockMovInvForm(record RcVc RepSpec,record StockMovVc StockMovr)
begin
  record UserVc Userr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt;
  record LocationVc FromLocr;
  record LocationVc ToLocr;
  record LocationVc ViaLocr;
  record MainStockBlock MainStockRec;
  val totbasprice,totinprice,totprice,totqty,totweight,totvolume,totordweight;
  string 255 tstr;
  Integer OKFlag;
  record StockMovVc realStockMovr;
  record DocVc Docr;
  Boolean printf;
  Integer intdocnr,rwcnt2;
  string 30 formcode;
  record StandProblemVc SPr;
  record ModuleBlock MBr;
  record CUVc CUr;
  record ORVc ORr;
  record eShipTaxAuthReplyVc eSTARr;
  val ord_totinprice,ord_totweight,ord_totvolume,ord_totcombase2sum,ord_totqty,ord_totqty2,ord_totnodiscount;
    
  realStockMovr.SerNr = StockMovr.SerNr;
  if (ReadFirstMain(realStockMovr,1,true)) then begin end;//for some reason we change OKFlag status in ivdclassprint
  BlockLoad(MainStockRec);
  BlockLoad(SysFormatRec);  
  BlockLoad(MBr);  
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto L99;
  end;
  rwcnt = MatRowCnt(FDr);
  GetLangNr("",LangNrr);
  OKFlag = realStockMovr.OKFlag;
  if (OKFlag==0) then begin
//    OKFlag = realStockMovr.OrdFlag;
  end;
  if (OKFlag==0) then begin
    OKFlag = realStockMovr.SentOKFlag;
  end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,StockMovr.SerNr,FDrw.PrintGroupCode,
                        "",intdocnr,"ConsStockMovInvVc",formcode)) then
        begin
          goto LBREAKStockMov;
        end;
      end;
    end;
LBREAKStockMov:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        NumberofDocumentPages(FDrw.FPCode,MatRowCnt(StockMovr));
        OUTFORMFIELD("F_DOCTYPE",StringFromSet(564,StockMovr.StockMovType));        
        Docr.Code = formcode;
        if (ReadFirstMain(Docr,1,true)) then begin
        end;
        OUTFORMFIELD("F_FAKTURANUMMER",StockMovr.InvoiceNr);
        OUTFORMFIELD("F_VARREFERENS",StockMovr.Comment);
        OUTFORMFIELD("F_ORDERDATE",StockMovr.TransDate);
//         if (blank(StockMovr.FrLocation)) then begin
//           FromLocr.Code = MainStockRec.MainStock;
//         end else begin
//           FromLocr.Code = StockMovr.FrLocation;
//         end;
//         if (blank(StockMovr.ToLocation)) then begin
//           ToLocr.Code = MainStockRec.MainStock;
//         end else begin
//           ToLocr.Code = StockMovr.ToLocation;
//         end;
//         if (ReadFirstMain(FromLocr,1,true)) then begin end;
//         if (ReadFirstMain(ToLocr,1,true)) then begin end;
//         if nonblank(StockMovr.ThrouLocation) then begin
//           ViaLocr.Code = StockMovr.ThrouLocation;
//           if (ReadFirstMain(ViaLocr,1,true)) then begin end;
//           OUTFORMFIELD("F_VIALOCATION",StockMovr.ThrouLocation);
//           OUTFORMFIELD("F_VIANAME",ViaLocr.Name);
//           OUTFORMFIELD("F_VIAPHONE",ViaLocr.Phone);
//           OUTFORMFIELD("F_VIAFAX",ViaLocr.Fax);
//           OUTFORMFIELD("F_VIACONTACT",ViaLocr.Contact);
//           OUTFORMFIELD("F_VIAEMAIL",ViaLocr.Email);  
//           OutAddress("F_VIAADRESS",ViaLocr.Addr0,ViaLocr.Addr1,ViaLocr.Addr2,ViaLocr.Addr3,ViaLocr.Addr4,"");
//         end;  
//         OUTFORMFIELD("F_LEVDATUM",StockMovr.TransDate);
//         OUTFORMFIELD("F_PLANSENTTIME",StockMovr.PlanSendTime);
//         OUTFORMFIELD("F_PLANSENTDATE",StockMovr.PlanSendDate);
//         OUTFORMFIELD("F_LEVNUMMER",StockMovr.SerNr);
//         OUTFORMFIELD("F_COMMENT",StockMovr.Comment);
//         OUTFORMFIELD("F_FROMLOCATION",StockMovr.FrLocation);
//         OUTFORMFIELD("F_TOLOCATION",StockMovr.ToLocation);
//         
//         OUTFORMFIELD("F_FROMNAME",FromLocr.Name);
//         OUTFORMFIELD("F_FROMPHONE",FromLocr.Phone);
//         OUTFORMFIELD("F_FROMFAX",FromLocr.Fax);
//         OUTFORMFIELD("F_FROMCONTACT",FromLocr.Contact);
//         OutAddress("F_FROMADRESS",FromLocr.Addr0,FromLocr.Addr1,FromLocr.Addr2,FromLocr.Addr3,FromLocr.Addr4,"");
//         OUTFORMFIELD("F_TONAME",ToLocr.Name);
//         OUTFORMFIELD("F_TOPHONE",ToLocr.Phone);
//         OUTFORMFIELD("F_TOFAX",ToLocr.Fax);
//         OUTFORMFIELD("F_TOCONTACT",ToLocr.Contact);
//         OutAddress("F_TOADRESS",ToLocr.Addr0,ToLocr.Addr1,ToLocr.Addr2,ToLocr.Addr3,ToLocr.Addr4,"");
//         OUTFORMFIELD("F_FREIGHTCOMPCODE",StockMovr.FreightCode);
//         OUTFORMFIELD("F_FREIGHTCOMP",StockMovr.FreightCompany); 
//         OUTFORMFIELD("F_FREIGHTCOMPREGNO",StockMovr.FreightCompanyRegNr);
//         OUTFORMFIELD("F_TRUCKINFO",StockMovr.TruckInfo); 
//         OUTFORMFIELD("F_DRIVER",StockMovr.Driver); 
//         OUTFORMFIELD("F_CMRTEXT",StockMovr.CMRText);
//         OUTFORMFIELD("F_REASON",StockMovr.Reason);
//         OutAddress("F_POSTADRESS",StockMovr.FrAddr0,StockMovr.FrAddr1,StockMovr.FrAddr2,StockMovr.FrAddr3,StockMovr.FrAddr4,"");
//         OutAddress("F_ORDLEVADRESS",StockMovr.ThrouAddr0,StockMovr.ThrouAddr1,StockMovr.ThrouAddr2,StockMovr.ThrouAddr3,StockMovr.ThrouAddr4,"");
//         OutAddress("F_LEVADRESS",StockMovr.ToAddr0,StockMovr.ToAddr1,StockMovr.ToAddr2,StockMovr.ToAddr3,StockMovr.ToAddr4,"");
        if (FIELDINFORM("F_REASONTEXT")) then begin
          SPr.Code = StockMovr.Reason;
          if (ReadFirstMain(SPr,1,true)) then begin end;
          OUTFORMFIELD("F_REASONTEXT",SPr.Comment1);
          OUTFORMFIELD("F_REASONTEXT",SPr.Comment2);
          OUTFORMFIELD("F_REASONTEXT",SPr.Comment3);
        end;  
        if (FIELDINFORM("F_NOTE")) then begin
          GetFieldArgument(Docr,F_NOTE,tstr);
          StockMovInvPrintNote(StockMovr,tstr);
        end;
//        PrintStockMovInvRows(RepSpec,StockMovr,LangNrr,SysFormatRec,MainStockRec,totbasprice,totinprice,totprice,totqty,totweight,totvolume,totordweight);
//         if (HasLocalization("PRT")==false) then begin
//           PrintValue("F_TOTALINPRICE",totinprice,M45Val,LangNrr,SysFormatRec,false);
//           PrintValue("F_TOTBASPRIS",totbasprice,M45Val,LangNrr,SysFormatRec,false);
//           PrintValue("F_TOTPRIS",totprice,M45Val,LangNrr,SysFormatRec,false);
//         end;
//         PrintValue("F_TOTQTY",totqty,M45Val,LangNrr,SysFormatRec,false);
//         PrintValue("F_TOTVOLUME",totvolume,M4Qty,LangNrr,SysFormatRec,false);
//         PrintValue("F_TOTWEIGHT",totweight,M4Qty,LangNrr,SysFormatRec,false);
//         PrintValue("F_ORDTOTWEIGHT",totordweight,M4Qty,LangNrr,SysFormatRec,false);
//         OUTFORMFIELD("F_FROMPOSITION",StockMovr.FrPos);
//         OUTFORMFIELD("F_TOPOSITION",StockMovr.ToPos);
//         OUTFORMFIELD("F_SENTTRANSDATE",StockMovr.SentTransDate);
//         OUTFORMFIELD("F_DATEDAY",GetDay(StockMovr.TransDate));  
//         OUTFORMFIELD("F_DATEMONTH",GetMonth(StockMovr.TransDate));  
//         GetMonthText("",StockMovr.TransDate,tstr);
//         OUTFORMFIELD("F_DATEMONTHTEXT",tstr);  
//         OUTFORMFIELD("F_DATEYEAR",GetYear(StockMovr.TransDate));  
//         GetCurUser(Userr);
//         OUTFORMFIELD("F_PERSON",Userr.Name);
//         if (FIELDINFORM("F_ATTBETALATEXT")) then begin//jzs
//           ValToText(totprice,M4Val,StockMovr.CurncyCode,"",tstr);
//           OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
//         end;            
        if (HasLocalization("PRT")) then begin 
          OUTFORMFIELD("F_OFFICIALSERNO",GetOffSerNrIVJournalID(StockMovr.InvoiceNr,"ConsStockMovInvVc",StockMovr.InvoiceOfficialSerNr) & " " & StockMovr.InvOfficialSerNrSerie & "/" & Right(StockMovr.InvoiceOfficialSerNr,len(StockMovr.InvoiceOfficialSerNr)-len(StockMovr.InvOfficialSerNrSerie)));
          OUTFORMFIELD("F_SAFTHASHCONTROL",SAFTHashControl(StockMovr.InvoiceHash));
          eSTARr.FileName = "StockMovVc";
          eSTARr.TransNr = StockMovr.SerNr;
          ReadLastKey("FNTransNr",eSTARr,2,true);
          OUTFORMFIELD("F_ATDocCodeID",eSTARr.TaxAdminServSeal);                   
        end else begin
          OUTFORMFIELD("F_OFFICIALSERNO",StockMovr.OfficialSerNr);
        end;
        if (StockMovr.Prntdf==0) then begin
          OUTFORMFIELD("F_COPYTYPE",USetStr(18630));
        end else begin
          OUTFORMFIELD("F_COPYTYPE",USetStr(18631));
        end;
        OUTFORMFIELD("F_TYPE",StringFromSet(564,StockMovr.StockMovType));
        if (StockMovr.OrderNr>0) then begin
          OUTFORMFIELD("F_ORDERNUMMER",StockMovr.OrderNr);
          ORr.SerNr = StockMovr.OrderNr;
          ReadFirstMain(ORr,1,true);
          CUr.Code = ORr.CustCode;
          ReadFirstMain(CUr,1,true);

          CalcORTotals(ORr,Docr,SysFormatRec,LangNrr);
          OUTFORMFIELD("F_KUNDNR",ORr.CustCode);
          OutAddress("F_ADRESS",ORr.Addr0,ORr.Addr1,ORr.Addr2,ORr.Addr3,ORr.InvAddr3,ORr.InvAddr4);
          OutAddress("F_LEVADRESS",ORr.ShipAddr0,ORr.ShipAddr1,ORr.ShipAddr2,ORr.ShipAddr3,ORr.DelAddr3,ORr.DelAddr4);
          OUTFORMFIELD("F_KUNDNAMN",ORr.Addr0);
          OUTFORMFIELD("F_KUNDMOMSNR",ORr.VATNr); 
          PrintCountryCode("F_CUCOUNTRYCODE",CUr.CountryCode);     
          if (HasLocalization("PRT")) then begin    
            if (CUr.CustType==1) then begin
              OUTFORMFIELD("F_CUSTTYPE",USetStr(23361));
            end;
          end;
          if (FIELDINFORM("F_SUMMA")) then begin
            PrintValue("F_SUMMA",ORr.Sum1,M4Val,LangNrr,SysFormatRec,false);
          end;
          if (FIELDINFORM("F_MOMS")) then begin
            PrintValue("F_MOMS",ORr.Sum3,M4Val,LangNrr,SysFormatRec,false);
          end; 
          if (FIELDINFORM("F_ATTBETALATEXT")) then begin
            ValToText(ORr.Sum4,M4Val,ORr.CurncyCode,ORr.LangCode,tstr);
            OUTFORMFIELD("F_ATTBETALATEXT",tstr);  
          end;
          OutAddress("F_INLEVADRESS",ORr.ShipAddr0,ORr.ShipAddr1,ORr.ShipAddr2,ORr.ShipAddr3,ORr.DelAddr3,ORr.DelAddr4);
          OutAddress("F_FAKTADRESS",ORr.Addr0,ORr.Addr1,ORr.Addr2,ORr.Addr3,ORr.InvAddr3,ORr.InvAddr4);
          LongDateToStr(StockMovr.InvDate,SetDateOrder(ORr.LangCode),tstr);
          OUTFORMFIELD("F_FAKTURADATUM",tstr);   
          if (FIELDINFORM("F_VILLKOR")) then begin
            GetPayDealText(ORr.PayDeal,ORr.LangCode,tstr);
            OUTFORMFIELD("F_VILLKOR",tstr);
          end;
          PrintValue("F_DISCPERC",ORr.DiscPerc,M4Val,LangNrr,SysFormatRec,false);
          if (FIELDINFORM("F_ATTBETALA")) then begin
            PrintValue("F_ATTBETALA",ORr.Sum4,M4Val,LangNrr,SysFormatRec,false);
          end;          
          rwcnt2 = CountOrderRows(ORr);
          PrintOrderRows(RepSpec,Docr,ORr,LangNrr,SysFormatRec,ord_totinprice,ord_totweight,ord_totvolume,ord_totcombase2sum,
                         ord_totqty,ord_totqty2,ord_totnodiscount,rwcnt2);  
          PrintValue("F_DISCSUMTOT",ord_totnodiscount - ORr.Sum1 ,M4Val,LangNrr,SysFormatRec,false);
          PrintValue("F_TOTVOLUME",ord_totvolume,M4Qty,LangNrr,SysFormatRec,false);
          PrintValue("F_TOTWEIGHT",ord_totweight,M4Qty,LangNrr,SysFormatRec,false);
          PrintValue("F_TOTALINPRICE",ord_totinprice,M4Val,LangNrr,SysFormatRec,false);
          PrintValue("F_COMBASE2SUM",ord_totcombase2sum,M4Val,LangNrr,SysFormatRec,false);        
          PrintValue("F_SUMMQTY",ord_totqty,M4Qty,LangNrr,SysFormatRec,false);
          PrintValue("F_SUMMQTY2",ord_totqty2,M4Qty,LangNrr,SysFormatRec,false);          
        end;
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
L99:;
  RETURN;
END;
