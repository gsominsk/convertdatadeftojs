external procedure PrintCurrencyCode(string,string);
external procedure PortugueseFormFields(Integer);
external function roundmode SetRoundModeD(Integer);
external function string 255 BC128(string);
external procedure GetVATproc(string,Integer,var val);
external procedure GetObjectText(string,var string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure GetItemVATCode(string,Integer,var string,Boolean);
external procedure FindSalesExVat(record TaxMatrixVc,string,val,Integer,Integer,var val);
external procedure PUSetFax(record CUVc,record PUVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external procedure SelectUnitText(string,string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);

function
Integer CountPURows(record PUVc PUr)
BEGIN
  Integer i,rwcnt;
  row PUVc PUrw;
  
  rwcnt = MatRowCnt(PUr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PUr,i,PUrw);
    if (PUrw.stp==10) then begin
      rwcnt = i;
      goto LCountPURows;
    end;
  end;
LCountPURows:;
  CountPURows = rwcnt;
  RETURN;
END;

global
function string 255 SerialNumbersString(string filename,LongInt transnr,Integer rownr)
begin
  string 255 res;
  record ItemHistVc IHr;
  Boolean found;

  IHr.FileName = filename;
  IHr.TransNr = transnr;
  IHr.Row = rownr;
  found = ReadFirstKey("FNTransNr",IHr,3,true);
  res = IHr.SerialNr;
  IHr.FileName = filename;
  IHr.TransNr = transnr;
  IHr.Row = rownr;
  found = ReadLastKey("FNTransNr",IHr,3,true);
  res = res & ":" & IHr.SerialNr;
  SerialNumbersString = res;
  return;
end;

procedure PrintGRRows(record RcVc RepSpec,record CUVc VEr,record PUVc PUr,record LangNrVc LangNrr,record SysFormatBlock SysFormatRec,var val sumprice,var val totgp)
BEGIN
  record INVc INr;
  row PUVc PUrw;
  Integer i,rwcnt,rownr;
  string 255 tstr;
  val t,t2;
  record AccBlock ARRec;
  record MainStockBlock MSb;
  record MinPerLocVc MinPerLocr;
  record TaxMatrixVc TMr;

  BlockLoad(ARRec);
  BlockLoad(MSb);
  rwcnt = CountPURows(PUr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(PUr,i,PUrw);
    if (PUrw.ovst!=0) then begin
      goto LSKIPROW;
    end;
    INr.Code = PUrw.ArtCode;
    if (ReadFirstItem(PUrw.ArtCode,INr,true,true)) then begin
    end;
    OUTFORMFIELD("F_FROMPOSITIONROW",PUrw.PosCode);
    OUTFORMFIELD("F_TOPOSITIONROW",PUrw.ToPosCode);
    OUTFORMFIELD("F_COMMODITYCODE",INr.EUCodex);
    OUTFORMFIELD("F_ALTERNATIVECODE",INr.AlternativeCode);

    OUTFORMFIELD("F_SUPPSERIALNRROW",PUrw.SuppSerialNr);
    OUTFORMFIELD("F_MAJORSTONEROW",PUrw.MajStoneDet);
    OUTFORMFIELD("F_COLOURROW",PUrw.Colour);
    OUTFORMFIELD("F_CLARITYROW",PUrw.Clarity);
    OUTFORMFIELD("F_DISPATCHNUMBERRow",PUrw.DispatchNumber);
    OUTFORMFIELD("F_CERTROW",PUrw.Cert);
    OUTFORMFIELD("F_MINORSTONEROW",PUrw.MinStoneDet);
    OUTFORMFIELD("F_METALROW",PUrw.Metal);
    OUTFORMFIELD("F_ROWWEIGHTROW",PUrw.RowWeight);
    OUTFORMFIELD("F_SIZEROW",PUrw.Size);
    OUTFORMFIELD("F_LENGTHROW",PUrw.Length);

    OUTFORMFIELD("F_WATCHBRANDROW",PUrw.WatchBrand);
    OUTFORMFIELD("F_STYLENAMEROW",PUrw.StyleName);
    OUTFORMFIELD("F_WATCHMETALROW",PUrw.WatchMetal);
    OUTFORMFIELD("F_MOVEMENTROW",PUrw.Movement);
    OUTFORMFIELD("F_BRCSTRROW",PUrw.BrcStr);
    OUTFORMFIELD("F_GENDERROW",PUrw.Gender);
    OUTFORMFIELD("F_OTHERROW",PUrw.Other);
    OUTFORMFIELD("F_OTHER2ROW",PUrw.Other2);

    if (FIELDINFORM("F_SERIENRBC39")) then begin
      BC39(PUrw.SerialNr,tstr);    
      OUTFORMFIELD("F_SERIENRBC39",tstr);
    end;  
    OUTFORMFIELD("F_ITEMLOCATION",INr.Department);
    OUTFORMFIELD("F_SHELFCODE",INr.InvCode);
    if (FIELDINFORM("F_ARTNRBC39")) then begin
      ItemBC39(PUrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBC39",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN")) then begin
      ItemBCEAN(PUrw.ArtCode,tstr);
      OUTFORMFIELD("F_ARTNRBCEAN",tstr);
    end;  
    if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
      ItemBCEAN13(PUrw.ArtCode,tstr);      
      OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
    end;  
    if (FIELDINFORM("F_SERIENRBC39")) then begin
      BC39(PUrw.SerialNr,tstr);    
      OUTFORMFIELD("F_SERIENRBC39",tstr);
    end;  
    if (FIELDINFORM("F_SERIENRBC128")) then begin
      OUTFORMFIELD("F_SERIENRBC128",BC128(PUrw.SerialNr));
    end;  
    OUTFORMFIELD("F_ARTNR",PUrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",PUrw.ArtCode);
    PrintValue("F_ANTAL",PUrw.Quant,M4UVal,LangNrr,SysFormatRec,false);
    PrintValue("F_LEVQUANT",PUrw.VEQuant,M4UVal,LangNrr,SysFormatRec,false);

    if (MSb.UnitConvCalc==0) then begin
      PrintValue("F_ANTAL2",PUrw.Quant*PUrw.Coefficient,M4UVal,LangNrr,SysFormatRec,false);
    end else begin
      PrintValue("F_ANTAL2",PUrw.Quant/PUrw.Coefficient,M4UVal,LangNrr,SysFormatRec,false);
    end;
    OUTFORMFIELD("F_BESTBEFORE",PUrw.BestBefore);

    PrintValue("F_PRIS",PUrw.UPrice,M45Val,LangNrr,SysFormatRec,false);
    PrintValue("F_KOSTPRIS",PUrw.CostPrice,M45Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_EXTRA",PUrw.Extra);
    if (INr.SerNrf==1) and (PUrw.Quant>1) then begin
      OUTFORMFIELD("F_SERIENR",SerialNumbersString("PUVc",PUr.SerNr,i));
    end else begin
      OUTFORMFIELD("F_SERIENR",PUrw.SerialNr);
    end;
    OUTFORMFIELD("F_SPECIFIKATION",PUrw.Spec);
    SelectUnitText(VEr.LangCode,INr.Unittext,tstr);    
    OUTFORMFIELD("F_ENHET",tstr);
    PrintValue("F_SUMPRIS",PUrw.Quant*PUrw.CostPrice,M45Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_ARTNRLEV",PUrw.VEItemCode);
    OUTFORMFIELD("F_TRANSPURTCOST",PUrw.ShipCost);
    OUTFORMFIELD("F_CUSTOMCOST",PUrw.CustomsCost);
    OUTFORMFIELD("F_CUSTOMSDECLDATE",PUrw.CustomsDate);
    OUTFORMFIELD("F_CUSTOMSDECLNUMBER",PUrw.CustomsNr);
    PrintValue("F_BELOPP",PUrw.Quant*PUrw.BasePrice,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWPRICE",PUrw.BasePrice,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_OLDKOSTPRIS",INr.InPrice,M45Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_OBJECT",PUrw.Objects);
    GetObjectText(PUrw.Objects,tstr);
    OUTFORMFIELD("F_OBJECTTEXT",tstr);

/* F_MARKUP looks VERY wierd, what the h... is it supposed to print ? */
    if (ARRec.BasePriceInclVAT<>0) then begin
      GetItemVATCode(INr.Code,PUr.ExportFlag,tstr,true);
      FindSalesExVat(TMr,tstr,INr.UPrice1,1,0,t);
    end else begin
       t = INr.UPrice1;
    end;
    t2 = t / PUrw.CostPrice;
    t2 = t2 * 100;
    t2 = t2 - 100;
    PrintValue("F_MARKUP",t2,M4Prcnt,LangNrr,SysFormatRec,false);

    PrintValue("F_SALESPRICE",t,M4Val,LangNrr,SysFormatRec,false);
    if (ARRec.BasePriceInclVAT<>0) then begin
       t = INr.UPrice1;
    end else begin
      GetItemVATCode(INr.Code,PUr.ExportFlag,tstr,true);
      MulVATIV(tstr,INr.UPrice1,t,t2,0,0);
      t = t + INr.UPrice1;
    end;
    PrintValue("F_SALESINCVAT",t,M4Val,LangNrr,SysFormatRec,false);
    if (FIELDINFORM("F_MINSTOCKPERLOC")) then begin
      MinPerLocr. ItemCode = PUrw.ArtCode;
      if (blank(PUrw.Location)) then begin
        MinPerLocr. Location = PUr.Location;
      end else begin
        MinPerLocr. Location = PUrw.Location;
      end;
      if (ReadFirstMain(MinPerLocr,2,true)) then begin
        OUTFORMFIELD("F_MINSTOCKPERLOC",MinPerLocr.MinLevel);
      end;
    end;      
    sumprice = sumprice + (PUrw.Quant * PUrw.BasePrice);
    if (nonblank(PUrw.ArtCode)) then begin
      rownr = rownr + 1;
      OUTFORMFIELD("F_ROWNR",rownr);      
    end;      
    MulVATIV(PUrw.VATCode,PUrw.CostPrice,t,t2,0,0);
    PrintValue("F_ROWVATVAL",t,M4Val,LangNrr,SysFormatRec,false);
    PrintValue("F_ROWSUMWITHVAT",PUrw.CostPrice+t,M4Val,LangNrr,SysFormatRec,false);
    GetVATproc(PUrw.VATCode,0,t);
    PrintValue("F_VATPRC",t,M4Val,LangNrr,SysFormatRec,false);
    t = PUrw.Quant*PUrw.CostPrice - PUrw.Quant*INr.UPrice1;
    PrintValue("F_ROWGP",t,M4Val,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_CUSTOMSDECLNUMBER",PUrw.CustomsNr);

    totgp = totgp + t;
    OutFormImage(INr);
    tstr = StringFromSet(359,PUrw.StockType);
    OUTFORMFIELD("F_STOCKTYPE",tstr);
    EndFormRow;   
LSKIPROW:;         
  end;
  OutFormImage(PUr);
  RETURN;
END;

procedure PrintGROrder(string formcode,record RcVc RepSpec,record PUVc PUr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record CUVc VEr;
  string 255 tstr;
  val sumprice,totgp;

  sumprice = BlankVal;
  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(PUr));
  VEr.Code = PUr.VECode;
  if (ReadFirstMain(VEr,1,true)) then begin
  end;
  RussianPaymentNr(PUr.SerNr,tstr);
  
  if (HasLocalization("PRT")) then begin
    PortugueseFormFields(1335);
  end;
  OUTFORMFIELD("F_RUSPAYNR",tstr);
  OUTFORMFIELD("F_NUMMER",PUr.SerNr);
  PrintCurrencyCode("F_VALUTA",PUr.CurncyCode);
  if (PUr.PONr>0) then begin
    OUTFORMFIELD("F_PORDER",PUr.PONr);
  end;
  OUTFORMFIELD("F_KOMMENTAR",PUr.Comment);
  OUTFORMFIELD("F_COMMENT",PUr.Comment);
  OUTFORMFIELD("F_REGDATUM",PUr.RegDate);
  OUTFORMFIELD("F_LEVERANTOR",PUr.VECode);
  OUTFORMFIELD("F_LEVNAMN",PUr.VEName);
  OUTFORMFIELD("F_TRANSDATUM",PUr.TransDate);
  OUTFORMFIELD("F_INLEVNR",PUr.SerNr);
  OutAddress("F_ADRESS",PUr.VEName,VEr.InvAddr0,VEr.InvAddr1,VEr.InvAddr2,VEr.InvAddr3,VEr.InvAddr4);
  OUTFORMFIELD("F_LOCATION",PUr.Location);  
  OUTFORMFIELD("F_FREIGHTCODE",PUr.FreightCode);
  OUTFORMFIELD("F_FREIGHTCOMP",PUr.FreightCompany);
  OUTFORMFIELD("F_FREIGHTCOMPREGNO",PUr.FreightCompanyRegNr);
  OUTFORMFIELD("F_TRUCKINFO",PUr.TruckInfo);
  OUTFORMFIELD("F_DRIVER",PUr.Driver);
  OUTFORMFIELD("F_CMRTEXT",PUr.CMRText);
  if (FIELDINFORM("F_RATE")) then begin
    GetFullCurncyRateText(true,tstr,PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2);
    OUTFORMFIELD("F_RATE",tstr);
  end;  
  if (FIELDINFORM("F_BASERATE")) then begin
    GetFullCurncyRateText(false,tstr,PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2);
    OUTFORMFIELD("F_BASERATE",tstr);
  end;  
  PrintValue("F_TOTPRIS",PUr.SumCostPrice,M4Val,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTANTAL",PUr.SumQuant,M4Qty,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTTRANSPORT",PUr.ShipCost,M4Val,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTCUSTOM",PUr.CustomsCost,M4Val,LangNrr,SysFormatRec,false);
  OUTFORMFIELD("F_DISPATCHNUMBER",PUr.DispatchNumber);
  PrintGRRows(RepSpec,VEr,PUr,LangNrr,SysFormatRec,sumprice,totgp);

  PrintValue("F_TOTCUSTOM",PUr.CustomsCost,M4Val,LangNrr,SysFormatRec,false);
  PrintValue("F_SUMBASPRIS",Round(sumprice,SetRoundModeD(5)),M45Val,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTALGP",totgp,M4Val,LangNrr,SysFormatRec,false);

  PrintValue("F_MOMS",PUr.VATVal,M4Val,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTSUM",PUr.PayVal,M4Val,LangNrr,SysFormatRec,false);

  PUSetFax(VEr,PUr);
  RETURN;
END;

global
procedure DoPurchaseForm(record RcVc RepSpec,record PUVc PUr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Integer i,rwcnt;
  string 20 langcode;
  Boolean langf;
  
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
    
  BlockLoad(SysFormatRec);  
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoPurchaseForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = PUr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  
  GetLangNr(PUr.LangCode,LangNrr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(PUr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,PUr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"PUVc",formcode)) then
        begin
          goto LBREAKPU;
        end;
      end;
    end;
LBREAKPU:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintGROrder(formcode,RepSpec,PUr,SysFormatRec,LangNrr);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoPurchaseForm:; 
  RETURN;
END;

