external procedure PrintCurrencyName(string,string);
external procedure PrintCurrencyCode(string,string);
external procedure GetAccountName(String,var String);  
external function longint GetOriginNr(Integer,LongInt);  
external procedure GetMonthText(string,Date,var string);
external procedure GetCurncyComment(string,var string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure Val2ToText(string,val,Integer,string,string,var string);
external procedure GetDateMonthInWords(Date,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure CommonDocumentFields(record RcVc);

procedure PrintCLOutRowsChequeVoucher(LongInt CLOutNr,Record OwnCheckVc OwnCheckr)
begin
  Integer i,rows,r;
  row CLOutVc CLOutrw;
  string 255 tstr,cta;
  val t,temp,mRate,SumTot,temp1;
  record CLOutVc CLOutr;
  
  r = 1;
  CLOutr.SerNr = CLOutNr;
  if (Readfirstmain(CLOutr,1,true)) then begin
    cta = OwnCheckr.OrigAccNr;
    GetAccountName(cta,tstr); 
    OUTFORMFIELD("F_ROWNR",r);   
    r = r + 1;
    OUTFORMFIELD("F_SPECIFIKATION",tstr);
    OUTFORMFIELD("F_DESCRIPTION",CLOutr.CorspComment);
    OUTFORMFIELD("F_BANKACC",cta);
    OUTFORMFIELD("F_DEBVAL",OwnCheckr.Amount);
    OUTFORMFIELD("F_CREDVAL","");
    EndFormRow; 
    rows = MatRowCnt(CLOutr);
    for (i=0;i<rows;i=i+1) begin
      MatRowGet(CLOutr,i,CLOutrw); 
      if (CLOutrw.Type==7) then begin
      if (OwnCheckr.SerNr == CLOutrw.TransNr) then begin
        OUTFORMFIELD("F_ROWNR",r);   
        r = r + 1;       
        OUTFORMFIELD("F_SPECIFIKATION",CLOutrw.Comment);
        OUTFORMFIELD("F_DESCRIPTION",CLOutrw.Comment);
        OUTFORMFIELD("F_BANKACC",OwnCheckr.TempAccNr);
        OUTFORMFIELD("F_DEBVAL","");
        OUTFORMFIELD("F_CREDVAL",CLOutrw.Sum);
        EndFormRow; 
      end;
      end;
    end;  
  end;  
  return;
end;

procedure PrintOPRowsChequeVoucher(LongInt OPNr,Record OwnCheckVc OwnCheckr)
begin
  Integer i,rows,r;
  row OPVc OPrw;
  string 255 tstr,cta;
  val t,temp,mRate,SumTot,temp1;
  record OPVc OPr;
  record VIVc VIr;
  
  r = 1;
  OPr.SerNr = OPNr;
  if (Readfirstmain(OPr,1,true)) then begin
    cta = OwnCheckr.OrigAccNr;
    GetAccountName(cta,tstr); 
    OUTFORMFIELD("F_ROWNR",r);   
    r = r + 1;
    OUTFORMFIELD("F_SPECIFIKATION",tstr);
    OUTFORMFIELD("F_DESCRIPTION",OPr.BankName);
    OUTFORMFIELD("F_BANKACC",cta);
    OUTFORMFIELD("F_DEBVAL",OwnCheckr.Amount);
    OUTFORMFIELD("F_CREDVAL","");
    OUTFORMFIELD("F_OKEDBY",OPr.OKBy);
    EndFormRow; 
    rows = MatRowCnt(OPr);
    for (i=0;i<rows;i=i+1) begin
      MatRowGet(OPr,i,OPrw); 
      if (OwnCheckr.SerNr == OPrw.ChequeNr) then begin
        VIr.SerNr = OPrw.VISerNr;
        ReadFirstMain(VIr,1,true);
        OUTFORMFIELD("F_ROWNR",r);   
        r = r + 1;       
        OUTFORMFIELD("F_FAKTNR",OPrw.VISerNr);
        OUTFORMFIELD("F_FAKTURADATUM",VIr.TransDate);
        OUTFORMFIELD("F_REFERENSNUMMER",VIr.RefStr);
        OUTFORMFIELD("F_SPECIFIKATION",OPrw.Comment);
        OUTFORMFIELD("F_DESCRIPTION",OPrw.Comment);
        OUTFORMFIELD("F_BANKACC",OwnCheckr.TempAccNr);
        OUTFORMFIELD("F_DEBVAL","");
        OUTFORMFIELD("F_CREDVAL",OPrw.RecVal);
        EndFormRow; 
      end;
    end;  
  end;  
  return;
end;

procedure PrintPPRowsChequeVoucher(LongInt PPNr,Record OwnCheckVc OwnCheckr)
begin
  Integer i,rows,r;
  row PPVc PPrw;
  string 255 tstr,cta;
  val t,temp,mRate,SumTot,temp1;
  record PPVc PPr;
  
  r = 1;
  PPr.SerNr = PPNr;
  if (Readfirstmain(PPr,1,true)) then begin
    cta = OwnCheckr.OrigAccNr;
    GetAccountName(cta,tstr); 
    OUTFORMFIELD("F_ROWNR",r);   
    r = r + 1;
    OUTFORMFIELD("F_SPECIFIKATION",tstr);
    OUTFORMFIELD("F_DESCRIPTION",PPr.BankName);
    OUTFORMFIELD("F_BANKACC",cta);
    OUTFORMFIELD("F_DEBVAL",OwnCheckr.Amount);
    OUTFORMFIELD("F_CREDVAL","");
    EndFormRow; 
    rows = MatRowCnt(PPr);
    for (i=0;i<rows;i=i+1) begin
      MatRowGet(PPr,i,PPrw); 
      if (OwnCheckr.SerNr == PPrw.ChequeNr) then begin
        OUTFORMFIELD("F_ROWNR",r);   
        r = r + 1;       
        OUTFORMFIELD("F_SPECIFIKATION",PPrw.Comment);
        OUTFORMFIELD("F_DESCRIPTION",PPrw.Comment);
        OUTFORMFIELD("F_BANKACC",OwnCheckr.TempAccNr);
        OUTFORMFIELD("F_DEBVAL","");
        OUTFORMFIELD("F_CREDVAL",PPrw.PayVal);
        EndFormRow; 
      end;
    end;  
  end;  
  return;
end;

global
procedure PrintOwnCheck(record RcVc RepSpec,record OwnCheckVc OwnCheckr,string formcode,string langcode)
begin
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record DocVc Docr;
  Integer i,rwcnt;
  string 255 tstr;
  Longint OPNr;
  string 100 tstr2;  

  BlockLoad(SysFormatRec);  
  GetLangNr("",LangNrr);
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
  end;
  GetDateMonthInWords(OwnCheckr.TransDate,tstr);
  OUTFORMFIELD("F_DATEMONTHINWORDS",tstr);
  OUTFORMFIELD("F_SERNR",OwnCheckr.SerNr);
  OUTFORMFIELD("F_CHECKNR",OwnCheckr.CheckNr);
  PrintValue("F_AMOUNT",OwnCheckr.Amount,M4Val,LangNrr,SysFormatRec,false);
  if (FIELDINFORM("F_AMOUNTINTEXT")) then begin
    GetFieldArgument(Docr,F_AMOUNTINTEXT,tstr);
    Val2ToText(tstr,OwnCheckr.Amount,M4Val,OwnCheckr.CurncyCode,"",tstr);
    OUTFORMFIELD("F_AMOUNTINTEXT",tstr);
  end;
  if (FIELDINFORM("F_AMOUNTINTEXTPARANTESISMEX")) then begin
    GetFieldArgument(Docr,F_AMOUNTINTEXTPARANTESISMEX,tstr);
    Val2ToText(tstr,OwnCheckr.Amount,M4Val,OwnCheckr.CurncyCode,"",tstr);
    tstr2 = "( " & tstr & " M.N.)";
    OUTFORMFIELD("F_AMOUNTINTEXTPARANTESISMEX",tstr2);
  end;
  if (FIELDINFORM("F_AMOUNTINTEXTASTERISK")) then begin
    GetFieldArgument(Docr,F_AMOUNTINTEXTASTERISK,tstr);
    Val2ToText(tstr,OwnCheckr.Amount,M4Val,OwnCheckr.CurncyCode,"",tstr);
    tstr2 = tstr & " *******";
    OUTFORMFIELD("F_AMOUNTINTEXTASTERISK",tstr2);
  end;
  OUTFORMFIELD("F_REGDATUM",OwnCheckr.TransDate);
  OUTFORMFIELD("F_EFFECTDATE",OwnCheckr.EffectDate);
  OUTFORMFIELD("F_CLEARINGDATE",OwnCheckr.ClearingDate);
  PrintCurrencyCode("F_VALUTA",OwnCheckr.CurncyCode);
  if (FIELDINFORM("F_VALUTANAMN")) then begin
    PrintCurrencyName("F_VALUTANAMN",OwnCheckr.CurncyCode);
  end;  
  OUTFORMFIELD("F_LEVERANTOR",OwnCheckr.VECode);
  if (RepSpec.flags[0]!=0) then begin
    OUTFORMFIELD("F_LEVNAMN",OwnCheckr.VEName & " - " & USetStr(17070) & " - ***");
  end else begin
    OUTFORMFIELD("F_LEVNAMN",OwnCheckr.VEName);
  end;
  tstr2 = OwnCheckr.VEName & " **********";
  OUTFORMFIELD("F_LEVNAMNWITHASTERSK",tstr2);
  OUTFORMFIELD("F_COMMENT",OwnCheckr.Comment);
  OUTFORMFIELD("F_DATEDAY",GetDay(OwnCheckr.TransDate));
  OUTFORMFIELD("F_DATEMONTH",GetMonth(OwnCheckr.TransDate));
  GetMonthText(langcode,OwnCheckr.TransDate,tstr);
  OUTFORMFIELD("F_DATEMONTHTEXT",tstr);  
  OUTFORMFIELD("F_DATEYEAR",GetYear(OwnCheckr.TransDate));
  OUTFORMFIELD("F_ORIGACCNR",OwnCheckr.OrigAccNr);
  OUTFORMFIELD("F_TEMPACCNR",OwnCheckr.TempAccNr);
  OUTFORMFIELD("F_TARGETACCNR",OwnCheckr.TargetAccNr);
  OUTFORMFIELD("F_ORIGOBJECTS",OwnCheckr.OrigObjects);
  OUTFORMFIELD("F_TEMPOBJECTS",OwnCheckr.TempObjects);
  OUTFORMFIELD("F_TARGETOBJECTS",OwnCheckr.TargetObjects);
  tstr = ValToString(OwnCheckr.Amount,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  tstr = Left(tstr,len(tstr)-3);
  OUTFORMFIELD("F_ATTBETALAFIXED",tstr);
  OUTFORMFIELD("F_DATEDAY2",GetDay(OwnCheckr.EffectDate));
  OUTFORMFIELD("F_DATEMONTH2",GetMonth(OwnCheckr.EffectDate));
  GetMonthText(langcode,OwnCheckr.EffectDate,tstr);
  OUTFORMFIELD("F_DATEMONTHTEXT2",tstr);  
  OUTFORMFIELD("F_DATEYEAR2",GetYear(OwnCheckr.EffectDate));
  tstr = ValToString(OwnCheckr.Amount,M4Val,".",",",LangNrr.CutDecimals);
  OutFormField("F_CHEQUETOTAL","***" & tstr & "***");
  switch (OwnCheckr.ToFileName) begin
    case "OPVc":
      OPNr = OwnCheckr.ToNo;
      PrintOPRowsChequeVoucher(OPNr,OwnCheckr);
    case "PPVc":
      OPNr = OwnCheckr.ToNo;
      PrintPPRowsChequeVoucher(OwnCheckr.ToNo,OwnCheckr);
    case "CLOutVc":
      OPNr = OwnCheckr.ToNo;
      PrintCLOutRowsChequeVoucher(OwnCheckr.ToNo,OwnCheckr);
  end;
  if (OPNr<0) then begin
    OPNr = GetOriginNr(1,OwnCheckr.SerNr); 
    PrintOPRowsChequeVoucher(OPNr,OwnCheckr);
  end;  
  return;
end;

global
procedure DoOwnChkForm(record RcVc RepSpec,record OwnCheckVc OwnCheckr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  langcode = OwnCheckr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoOwnChkForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;  
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,OwnCheckr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"OwnCheckVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        PrintOwnCheck(RepSpec,OwnCheckr,formcode,langcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoOwnChkForm:;  
  return;
end;
