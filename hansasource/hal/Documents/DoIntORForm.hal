external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure CommonDocumentFields(record RcVc);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetShipModeText(string,string,var string);
external procedure GetShipDealText(string,string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure SelectUnitText(string,string,var string);

procedure PrintIntORRows(record RcVc RepSpec,record IntORVc IntORr,record LangNrVc LangNrr)
BEGIN
  Integer i,rwcnt;
  row IntORVc IntORrw;
  string 255 tstr;
  record INVc INr;
  record SysFormatBlock SysFormatRec;
  val t;
  
  BlockLoad(SysFormatRec);
  rwcnt = MatRowCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntORr,i,IntORrw);
      INr.Code = IntORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
      end;
      OUTFORMFIELD("F_ROWOBJECT",IntORrw.Objects);
      if (FIELDINFORM("F_ARTNRBC39")) then begin
        ItemBC39(IntORrw.ArtCode,tstr);
        OUTFORMFIELD("F_ARTNRBC39",tstr);
      end;  
      if (FIELDINFORM("F_ARTNRBCEAN")) then begin
        ItemBCEAN(IntORrw.ArtCode,tstr);
        OUTFORMFIELD("F_ARTNRBCEAN",tstr);
      end;  
      if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
        ItemBCEAN13(IntORrw.ArtCode,tstr);      
        OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
      end;  
      OUTFORMFIELD("F_SPECIFIKATION",IntORrw.Spec);
      OUTFORMFIELD("F_BELOPP",IntORrw.Sum);
      tstr = ValToString(IntORrw.Quant,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);          
      OUTFORMFIELD("F_VARTANTAL",tstr);
      tstr = ValToString(IntORrw.Price,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      OUTFORMFIELD("F_APRIS",tstr);
      OUTFORMFIELD("F_ARTNR",IntORrw.ArtCode);
      OUTFORMFIELD("F_ARTNR2",IntORrw.ArtCode);
      if (FIELDINFORM("F_ENHET")) then begin
        SelectUnitText("",INr.Unittext,tstr);
        OUTFORMFIELD("F_ENHET",tstr);
      end;  
      tstr = ValToString(INr.Volume,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      OUTFORMFIELD("F_VOLUME",tstr);
      tstr = ValToString(INr.Width,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      OUTFORMFIELD("F_WIDTH",tstr);
      tstr = ValToString(INr.Height,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      OUTFORMFIELD("F_HEIGHT",tstr);
      tstr = ValToString(INr.Depth,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      OUTFORMFIELD("F_DEPTH",tstr);
      tstr = ValToString(INr.Weight,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      OUTFORMFIELD("F_WEIGHT",tstr); 
      EndFormRow;     
  end;    
  RETURN;
END;

procedure CalcIntORTotVolume(record IntORVc IntORr,var val res)
BEGIN
  record INVc INr;
  row IntORVc IntORrw;  
  Integer i,rwcnt;

  res = blankval;
  rwcnt = MatRowCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntORr,i,IntORrw);
    INr.Code = IntORrw.ArtCode;
    if (ReadFirstMain(INr,1,true)) then begin
    end;
    res = res + IntORrw.Quant*INr.Volume;
  end;  
  RETURN;        
END;

procedure CalcIntORTotWeight(record IntORVc IntORr,var val res)
BEGIN
  record INVc INr;
  row IntORVc IntORrw;
  Integer i,rwcnt;

  res = blankval;
  rwcnt = MatRowCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntORr,i,IntORrw);
    INr.Code = IntORrw.ArtCode;
    if (ReadFirstMain(INr,1,true)) then begin
    end;
    res = res + IntORrw.Quant*INr.Weight;
  end;  
  RETURN;        
END;

procedure PrintIntORText(record IntORVc IntORr)
BEGIN
  Integer i,rwcnt;
  string 255 tstr;
  
  rwcnt = LineTextCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    tstr = LineTextGet(IntORr,i);
    OUTFORMFIELD("F_TEXT",tstr);    
  end;  
  RETURN;
END;

global
procedure DoIntORForm(record RcVc RepSpec,record IntORVc IntORr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  record ORVc ORr;
  string 255 tstr;
  val t;
  Integer ori,orrwcnt;
  row IntORVc IntORrw;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  
  GetLangNr(IntORr.LangCode,LangNrr);
  BlockLoad(SysFormatRec);
  langcode = IntORr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoIntORForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,IntORr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"IntORVc",formcode)) then
        begin
          goto LBREAK;
        end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
          CommonDocumentFields(RepSpec);
          NumberofDocumentPages(FDrw.FPCode,MatRowCnt(IntORr));
          OUTFORMFIELD("F_SERNR",IntORr.SerNr);
          OUTFORMFIELD("F_PERSON",IntORr.OurUser);
          OUTFORMFIELD("F_VARREFERENS",IntORr.OurUser);
          OUTFORMFIELD("F_PERSNAME",IntORr.Name);
          OUTFORMFIELD("F_ORDERDATE",IntORr.TransDate);
          OUTFORMFIELD("F_PLANLEVDATUM",IntORr.PlanShip);
          OUTFORMFIELD("F_SIGNATURE",IntORr.OKPersons);
          OUTFORMFIELD("F_REFERENSNUMMER",IntORr.Reference);
          OUTFORMFIELD("F_DEPARTMENT",IntORr.Department);
          OUTFORMFIELD("F_LOCATION",IntORr.Location);
          OUTFORMFIELD("F_LEVSATT",IntORr.ShipMode);
          if (FIELDINFORM("F_LEVSATTTEXT")) then begin
            GetShipModeText(IntORr.ShipMode,IntORr.LangCode,tstr);
            OUTFORMFIELD("F_LEVSATTTEXT",tstr);
          end;  
          OUTFORMFIELD("F_SHIPTERM",IntORr.ShipDeal);
          if (FIELDINFORM("F_SHIPTERMTEXT")) then begin
            GetShipDealText(IntORr.ShipDeal,IntORr.LangCode,tstr);
            OUTFORMFIELD("F_SHIPTERMTEXT",tstr);
          end;  
          OUTFORMFIELD("F_TOPHONE",IntORr.Phone);
          OUTFORMFIELD("F_TOFAX",IntORr.Fax);
          OUTFORMFIELD("F_EMAIL",IntORr.emailAddr);
          tstr = ValToString(IntORr.Total,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_ATTBETALA",tstr);
          if (FIELDINFORM("F_ATTBETALATEXT")) then begin
            ValToText(IntORr.Total,M4Val,"",IntORr.LangCode,tstr);
            OUTFORMFIELD("F_ATTBETALATEXT",tstr);
          end;  
          OUTFORMFIELD("F_AUTHORIZEDBY",IntORr.OKPersons);
          OutAddress("F_ADRESS",IntORr.ShipAddr0,IntORr.ShipAddr1,IntORr.ShipAddr2,IntORr.ShipAddr3,IntORr.DelAddr3,IntORr.DelAddr4);
          OutAddress("F_LEVADRESS",IntORr.ShipAddr0,IntORr.ShipAddr1,IntORr.ShipAddr2,IntORr.ShipAddr3,IntORr.DelAddr3,IntORr.DelAddr4);
          if (FIELDINFORM("F_TOTWEIGHT")) then begin
            CalcIntORTotWeight(IntORr,t);
            tstr = ValToString(t,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
            OUTFORMFIELD("F_TOTWEIGHT",tstr);
          end;
          if (FIELDINFORM("F_TOTVOLUME")) then begin
            CalcIntORTotVolume(IntORr,t);
            tstr = ValToString(t,M4Qty,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
            OUTFORMFIELD("F_TOTVOLUME",tstr);
          end;
          if (FIELDINFORM("F_TEXT")) then begin
            PrintIntORText(IntORr);
          end;
          PrintIntORRows(RepSpec,IntORr,LangNrr);
          CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoIntORForm:;  
  RETURN;
END;
