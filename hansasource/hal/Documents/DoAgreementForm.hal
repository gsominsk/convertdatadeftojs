external procedure PrintCurrencyCode(string,string);
external updating procedure SetAgreementPrntdf(LongInt);
external function roundmode DefaultRoundMode();
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external procedure GetDateMonthInWords(Date,var string);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function LongInt CountWorkingDays(Date,Date,string,string);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetUserName(string,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external procedure ItemBC39(string,var string);
external procedure GetUnitStr(string,string,var string);
external procedure GetInterestPrc(var string);
external procedure GetPayDealText(string,string,var string);
external procedure GetShipDealText(string,string,var string);
external procedure GetShipModeText(string,string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure ValToText(val,Integer,string,string,var string);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure DoRentQTForm(record RcVc,record RentQTVc);

procedure PrintAgreementText(record AgreementVc Agreementr,Boolean newlin)
BEGIN
  Integer i,rwcnt;
  string 255 tstr;
  
  rwcnt = LineTextCnt(Agreementr);
  for (i=0;i<rwcnt;i=i+1) begin
    tstr = LineTextGet(Agreementr,i);
    OUTFORMFIELD("F_TEXT",tstr);
    if (newlin) then begin
      EndFormRow;
    end;
  end;  
  RETURN;
END;

global
procedure PrintSiteInformation(string sitecodr,string custcode)
begin
  record DelAddrVc DelAddrr;

  DelAddrr.DelCode = sitecodr;
  DelAddrr.CustCode = custcode;
  if (ReadFirstMain(DelAddrr,2,true)==false) then begin
    DelAddrr.DelCode = sitecodr;
    DelAddrr.CustCode = "";
    if (ReadFirstMain(DelAddrr,2,true)==false) then begin
      RecordClear(DelAddrr);
    end;
  end;
  OUTFORMFIELD("F_SITE",DelAddrr.DelCode);
  OUTFORMFIELD("F_SITENAME",DelAddrr.Comment);
  OUTFORMFIELD("F_SITETEL",DelAddrr.Phone);
  OUTFORMFIELD("F_SITEFAX",DelAddrr.Fax);
  OUTFORMFIELD("F_SITEADDRESS",DelAddrr.DelAddr0);
  OUTFORMFIELD("F_SITEADDRESS",DelAddrr.DelAddr1);
  OUTFORMFIELD("F_SITEADDRESS",DelAddrr.DelAddr2);
  OUTFORMFIELD("F_SITEADDRESS",DelAddrr.DelAddr3);
  OUTFORMFIELD("F_SITEADDRESS",DelAddrr.DelAddr4);
  OUTFORMFIELD("F_SITECONTACT",DelAddrr.Contact);
  return;
end;

global
procedure PrintLocationInformation(string locationcodr)
begin
  record LocationVc Locr;

  Locr.Code = locationcodr;
  if (ReadFirstMain(Locr,1,true)==false) then begin
    RecordClear(Locr);
  end;
  OUTFORMFIELD("F_LOCATION",Locr.Code);
  OUTFORMFIELD("F_LOCATIONNAME",Locr.Name);
  OUTFORMFIELD("F_LOCCONTACT",Locr.Contact);
  OUTFORMFIELD("F_LOCPHONE",Locr.Phone);
  OUTFORMFIELD("F_LOCFAX",Locr.Fax);
  OUTFORMFIELD("F_LOCEMAIL",Locr.Email);
  OUTFORMFIELD("F_LOCATIONNAME",Locr.Name);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr0);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr1);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr2);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr3);
  OUTFORMFIELD("F_LOCADDRESS",Locr.Addr4);
  return;
end;

global
procedure PrintAgreementInformation(record AgreementVc Agreementr,record CUVc CUr,Boolean sitef,Boolean locationf)
begin
  string 255 tstr;
  record AgreeTypeVc AgreeTyper;
  
  OutAddress("F_ADRESS",Agreementr.Addr0,Agreementr.Addr1,Agreementr.Addr2,Agreementr.Addr3,Agreementr.InvAddr3,Agreementr.InvAddr4);
  OUTFORMFIELD("F_ADDR2",Agreementr.Addr1);
  OUTFORMFIELD("F_ADDR3",Agreementr.Addr2);
  OUTFORMFIELD("F_ADDR4",Agreementr.Addr3);
  OUTFORMFIELD("F_INVADDR3",Agreementr.InvAddr3);
  OUTFORMFIELD("F_INVADDR4",Agreementr.InvAddr4);
  OUTFORMFIELD("F_VARREFERENS",Agreementr.OurContact);
  OUTFORMFIELD("F_KOMMENTAR",Agreementr.InvComment);
  if (FIELDINFORM("F_SALJARNAMN")) then begin
    GetUserName(Agreementr.SalesMan,tstr);
    OUTFORMFIELD("F_SALJARNAMN",tstr);
  end; 
  OUTFORMFIELD("F_LOCATION",Agreementr.Location);
  OUTFORMFIELD("F_INLEVADRESS",Agreementr.ShipAddr0);
  OUTFORMFIELD("F_INLEVADRESS",Agreementr.ShipAddr1);
  OUTFORMFIELD("F_INLEVADRESS",Agreementr.ShipAddr2);
  OUTFORMFIELD("F_INLEVADRESS",Agreementr.ShipAddr3);
  OUTFORMFIELD("F_INLEVADRESS",Agreementr.DelAddr3);
  OUTFORMFIELD("F_INLEVADRESS",Agreementr.DelAddr4);
  OUTFORMFIELD("F_INVLEVSATT",Agreementr.ShipMode);
  if (FIELDINFORM("F_INVLEVSATTTEXT")) then begin
    GetShipModeText(Agreementr.ShipMode,Agreementr.LangCode,tstr);
    OUTFORMFIELD("F_INVLEVSATTTEXT",tstr);
  end; 
  OUTFORMFIELD("F_INVLEVVILLK",Agreementr.ShipDeal);
  if (FIELDINFORM("F_INVLEVVILLKTEXT")) then begin
    GetShipDealText(Agreementr.ShipDeal,Agreementr.LangCode,tstr);
    OUTFORMFIELD("F_INVLEVVILLKTEXT",tstr);
  end; 
  if (FIELDINFORM("F_VILLKOR")) then begin
    GetPayDealText(Agreementr.PayDeal,Agreementr.LangCode,tstr);
    OUTFORMFIELD("F_VILLKOR",tstr);
  end; 
  PrintCurrencyCode("F_VALUTA",Agreementr.CurncyCode);
  OUTFORMFIELD("F_KONTRAKTSDATUM",Agreementr.AgreementDate);
//  OUTFORMFIELD("F_STARTDATUM",Agreementr.startDate);
  OUTFORMFIELD("F_LASTINVDATE",Agreementr.lastInvDate);
//  OUTFORMFIELD("F_ENDDATE",Agreementr.endDate);
  AgreeTyper.Code = Agreementr.AgreeType;
  if (ReadFirstMain(AgreeTyper,1,true)==false) then begin
    AgreeTyper.Comment = "";
  end;
  if (nonblank(AgreeTyper.Comment)) then begin
    OUTFORMFIELD("F_CHARGESCODE",AgreeTyper.Comment);
  end else begin
    OUTFORMFIELD("F_CHARGESCODE",AgreeTyper.Code);
  end;
  OUTFORMFIELD("F_ACTTYPE",AgreeTyper.Code);
  OUTFORMFIELD("F_ACTTYPECOMMENT",AgreeTyper.Comment);  
  GetFullCurncyRateText(true,tstr,Agreementr.FrRate,Agreementr.ToRateB1,Agreementr.ToRateB2,Agreementr.BaseRate1,Agreementr.BaseRate2);         
  OUTFORMFIELD("F_RATE",tstr);
  GetFullCurncyRateText(false,tstr,Agreementr.FrRate,Agreementr.ToRateB1,Agreementr.ToRateB2,Agreementr.BaseRate1,Agreementr.BaseRate2);         
  OUTFORMFIELD("F_BASERATE",tstr);
  GetInterestPrc(tstr);
  OUTFORMFIELD("F_RANTASATS",tstr);
  if (blank(Agreementr.ShipAddr0)) then begin
    tstr = Agreementr.Addr0;
  end else begin
    tstr = Agreementr.ShipAddr0;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(Agreementr.ShipAddr0)) then begin
    tstr = Agreementr.Addr1;
  end else begin
    tstr = Agreementr.ShipAddr1;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(Agreementr.ShipAddr0)) then begin
    tstr = Agreementr.Addr2;
  end else begin
    tstr = Agreementr.ShipAddr2;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(Agreementr.ShipAddr0)) then begin
    tstr = Agreementr.Addr3;
  end else begin
    tstr = Agreementr.ShipAddr3;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(Agreementr.ShipAddr0)) then begin
    tstr = Agreementr.InvAddr3;
  end else begin
    tstr = Agreementr.DelAddr3;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  if (blank(Agreementr.ShipAddr0)) then begin
    tstr = Agreementr.InvAddr4;
  end else begin
    tstr = Agreementr.DelAddr4;
  end;
  OUTFORMFIELD("F_INLEVADRESS2",tstr);
  OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);
  if (blank(Agreementr.Phone)) then begin
    OUTFORMFIELD("F_KUNDTEL",CUr.Phone);
  end else begin
    OUTFORMFIELD("F_KUNDTEL",Agreementr.Phone);      
  end;      
  if (blank(Agreementr.Fax)) then begin
    OUTFORMFIELD("F_KUNDFAX",CUr.Fax);      
  end else begin
    OUTFORMFIELD("F_KUNDFAX",Agreementr.Fax);      
  end;      
  if (blank(Agreementr.eMail)) then begin
    OUTFORMFIELD("F_EMAIL",CUr.eMail);      
  end else begin
    OUTFORMFIELD("F_EMAIL",Agreementr.eMail);      
  end;      
  OUTFORMFIELD("F_DATEDAY",GetDay(Agreementr.TransDate));
  GetDateMonthInWords(Agreementr.TransDate,tstr);
  OUTFORMFIELD("F_DATEMONTHINWORDS",tstr);
  if (sitef) then begin
    PrintSiteInformation(Agreementr.Site,Agreementr.CustCode);
  end;
  if (locationf) then begin
    PrintLocationInformation(Agreementr.Location);
  end;
  return;
end;

procedure PrintAgreementRows(record RcVc RepSpec,record AgreementVc Agreementr,record CUVc CUr,record LangNrVc LangNrr)
BEGIN
  record RentINVc RentINr;
  record RentResVc RentResr;
  Boolean foundf;
  string 255 tstr;
  record SysFormatBlock SysFormatRec;
  record GeneralOptionBlock GenOptRec;
  val quant,t,rowsum;
  
  BlockLoad(GenOptRec);
  BlockLoad(SysFormatRec);
  foundf = true;
  RentResr.AgreementNr = Agreementr.SerNr;
  while (LoopKey("AgreementNr",RentResr,1,foundf)) begin
    if (RentResr.AgreementNr<>Agreementr.SerNr) then begin
      foundf = false;
    end;
    if (foundf) then begin
      RentINr.Code = RentResr.Code;
      if (ReadFirstMain(RentINr,1,true)==false) then begin
        RentINr.Code = "";
        RentINr.Group = "";
        RentINr.Value = BlankVal;
      end;
      quant = CountWorkingDays(RentResr.TransDate,RentResr.EndDate,CUr.Code,CUr.CountryCode);
      quant = RentResr.InvQuant * quant;
      if (quant==0) then begin
        quant = 1;
      end;
      if (blankdate(RentResr.EndDate)) then begin
        quant = BlankVal;
      end;
      if (FIELDINFORM("F_ENHET")) then begin
        GetUnitStr(RentResr.Code,Agreementr.LangCode,tstr);
        OUTFORMFIELD("F_ENHET",tstr);
      end; 
      OUTFORMFIELD("F_ARTNR",RentResr.Code);
      if (FIELDINFORM("F_ARTNRBC39")) then begin
        ItemBC39(RentResr.Code,tstr);
        OUTFORMFIELD("F_ARTNRBC39",tstr);
      end; 
      if (FIELDINFORM("F_ARTNRBCEAN")) then begin
        ItemBCEAN(RentResr.Code,tstr);
        OUTFORMFIELD("F_ARTNRBCEAN",tstr);
      end; 
      if (FIELDINFORM("F_ARTNRBCEAN13")) then begin
        ItemBCEAN13(RentResr.Code,tstr);   
        OUTFORMFIELD("F_ARTNRBCEAN13",tstr);
      end; 
      OUTFORMFIELD("F_RENTALITEM",RentResr.Code);
      OUTFORMFIELD("F_INVITEM",RentResr.InvItem);
      OUTFORMFIELD("F_INVITEMNAME",RentResr.InvItemName);
      OUTFORMFIELD("F_RENTALITEMSERNO",RentResr.SerialNr);
      OUTFORMFIELD("F_RENTALITEMGROUP",RentINr.Group);
      OUTFORMFIELD("F_RENTALITEMNAME",RentResr.Name);
      OUTFORMFIELD("F_ARTGRUPP",RentINr.Group);
      OUTFORMFIELD("F_SERIALNR",RentResr.SerialNr);
      OUTFORMFIELD("F_RECEPY",RentResr.IncludeRecepy);
      PrintValue("F_FAKTURADAGAR",quant,M4UVal,LangNrr,SysFormatRec,false);
      PrintValue("F_ANTAL",RentResr.RentQuant,M4UVal,LangNrr,SysFormatRec,false);
      OUTFORMFIELD("F_SPECIFIKATION",RentResr.Name);
      PrintValue("F_RABATT",RentResr.vRebate,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_KOSTPRIS",RentINr.Value,M4Val,LangNrr,SysFormatRec,false);
      CalcSum(quant,RentResr.Price,0,RentResr.vRebate,rowsum,GenOptRec.UseDiscount);
      if (quant==BlankVal) then begin
        rowsum = BlankVal;
      end;
      PrintValue("F_BELOPP",rowsum,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_UNITPRICEINCDISC",rowsum,M4Val,LangNrr,SysFormatRec,false);
      CalcSum(1,RentResr.Price,0,RentResr.vRebate,t,GenOptRec.UseDiscount);
      PrintValue("F_ROWPRICEREBATE",t,M423Val,LangNrr,SysFormatRec,false);
      PrintValue("F_APRIS",RentResr.Price,M423Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase1(Agreementr.CurncyCode,RentResr.Price,Agreementr.FrRate,Agreementr.ToRateB1,Agreementr.ToRateB2,Agreementr.BaseRate1,Agreementr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_PRICEBASECURNCY1",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase2(Agreementr.CurncyCode,RentResr.Price,Agreementr.FrRate,Agreementr.ToRateB1,Agreementr.ToRateB2,Agreementr.BaseRate1,Agreementr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_PRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase1(Agreementr.CurncyCode,rowsum,Agreementr.FrRate,Agreementr.ToRateB1,Agreementr.ToRateB2,Agreementr.BaseRate1,Agreementr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_ROWPRICEBASECURNCY1",t,M4Val,LangNrr,SysFormatRec,false);
      t = MulRateToBase2(Agreementr.CurncyCode,rowsum,Agreementr.FrRate,Agreementr.ToRateB1,Agreementr.ToRateB2,Agreementr.BaseRate1,Agreementr.BaseRate2,DefaultCurRoundOff);
      PrintValue("F_ROWPRICEBASECURNCY2",t,M4Val,LangNrr,SysFormatRec,false);
      PrintValue("F_AMOUNTROUNDED",Round(rowsum,DefaultRoundMode),M4Val,LangNrr,SysFormatRec,false);
      EndFormRow;   
    end;
  end;
  RETURN;
END;

global
procedure DoAgreementForm2(record RcVc RepSpec,record AgreementVc Agreementr,Boolean detailed)
BEGIN
  record CUVc CUr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  val t;
  record DocVc Docr;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  
  GetLangNr(Agreementr.LangCode,LangNrr);     
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoAgreementForm2;
  end;
  rwcnt = MatRowCnt(FDr);

  langcode = Agreementr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(Agreementr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,Agreementr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"AgreementVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
          RepSpec.sStartDate = Agreementr.startDate;
          RepSpec.sEndDate = Agreementr.endDate;
          CommonDocumentFields(RepSpec);
          if (detailed) then begin
            NumberofDocumentPages(FDrw.FPCode,LineTextCnt(Agreementr));
          end else begin
            NumberofDocumentPages(FDrw.FPCode,1);// Number of RentRes...
          end;
          CUr.Code = Agreementr.CustCode;
          if (ReadFirstMain(CUr,1,true)) then begin
          end;
          if (Agreementr.Prntdf==0) then begin
            OUTFORMFIELD("F_COPYTYPE",USetStr(18630));
          end else begin
            OUTFORMFIELD("F_COPYTYPE",USetStr(18631));
          end;
          if (Agreementr.OKFlag!=0) then begin
            if (Agreementr.Prntdf!=0) then begin
              FormWaterMark(1118,-1);
            end;
          end else begin
            FormWaterMark(1118,-1);
          end;
          OUTFORMFIELD("F_DOCTYPE",USetStr(23465));
          OUTFORMFIELD("F_KUNDNAMN",Agreementr.Addr0);
          OUTFORMFIELD("F_KUNDNR",Agreementr.CustCode);
          OUTFORMFIELD("F_NUMMER",Agreementr.SerNr);
          OUTFORMFIELD("F_SERNR",Agreementr.SerNr);
          OUTFORMFIELD("F_ERREFERENS",Agreementr.ClientContact);
          OUTFORMFIELD("F_STARTDATUM",Agreementr.startDate);
          OUTFORMFIELD("F_ENDDATE",Agreementr.endDate);  
          PrintAgreementInformation(Agreementr,CUr,true,true);
          if (detailed) then begin
            PrintAgreementText(Agreementr,true);
          end else begin
            PrintAgreementText(Agreementr,false);
            PrintAgreementRows(RepSpec,Agreementr,CUr,LangNrr);
          end;
          CloseForm;
          if (Agreementr.OKFlag!=0) then begin
            queued.SetAgreementPrntdf(Agreementr.SerNr);
          end;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoAgreementForm2:;  
  RETURN;
END;

global
procedure DoAgreementForm(record RcVc RepSpec,record AgreementVc Agreementr)
BEGIN
  record RentControlBlock RCr;
  record RentQTVc RentQTr;
  
  BlockLoad(RCr);
  if (RepSpec.OnlyUnprntd==2) then begin
    Agreementr.Prntdf = 0;
  end;
  if (RCr.PrintQTOnAgr==0) then begin // I agree this is a wierd setting, but very much used...
    DoAgreementForm2(RepSpec,Agreementr,false);
  end else begin
    RentQTr.AgreementNr = Agreementr.SerNr;
    if (ReadFirstKey("AgreementNr",RentQTr,1,true)) then begin
      RepSpec.flags[29] = 1;
      DoRentQTForm(RepSpec,RentQTr);
    end else begin
      MessageBox(2064,"")
    end;
  end;
  return;
END;

global
procedure DoAgreementDetForm(record RcVc RepSpec,record AgreementVc Agreementr)
BEGIN
  DoAgreementForm2(RepSpec,Agreementr,true);
  return;
END;
