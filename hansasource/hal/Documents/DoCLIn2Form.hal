external function roundmode GetVATRoundModeRB();
external function roundmode DefaultRoundMode();
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure GetVATCodeAccNumbers(string,var string,var string);
external procedure GetUserName(string,var string);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external function Boolean GetPMTAX(string,var val);
external procedure RussianPaymentNr(LongInt,var string);
external procedure CommonDocumentFields(record RcVc);

procedure MakeSalesAccArray(string salesacc,val rowsum,var Integer scnt,
                            var Array val salesval,var Array string salesaccarr)
BEGIN
  Integer i;
  
  for (i=0;i<scnt;i=i+1) begin
    if (salesaccarr[i]==salesacc) then begin
      salesval[i] = salesval[i] + rowsum;
      goto LMakeSalesAccArray;
    end;
  end;
  salesaccarr[i] = salesacc;
  salesval[i] = rowsum;
LMakeSalesAccArray:;  
  RETURN;
END;

procedure PrintCLInInvoiceRows(record IVVc IVr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record SMVc VATr;
  row SMVc VATrw;
  row IVVc IVrw;
  Integer i,rwcnt,vatcnt;
  Array string 10 salesacc;
  Array val salesval;
  Integer scnt;
  string 10 svatacc,pvatacc;
  val vatv,t1;
  string 255 tstr;  
  
  RecordClear(VATr);
  SetupVATBase(VATr,vatcnt);          
  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    AddVATBase(VATr,IVrw.VATCode,IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);
    MakeSalesAccArray(IVrw.SalesAcc,IVrw.Sum,scnt,salesval,salesacc);
  end;
  for (i=0;i<scnt;i=i+1) begin
    tstr = ValToString(salesval[i],M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);  
    OUTFORMFIELD("F_DEBVAL",tstr);
    OUTFORMFIELD("F_SALESACC",salesacc[i]);    
  end;
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw);
    GetVATCodeAccNumbers(VATrw.VATCode,svatacc,pvatacc);
    OUTFORMFIELD("F_VATACCOUNT",svatacc);
    MulVATIV(VATrw.VATCode,VATrw.DebVal,vatv,t1,IVr.InclVAT,IVr.NoTAXonVAT);
    vatv = Round(vatv,GetVATRoundModeRB);
    tstr = ValToString(vatv,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_VATVAL",tstr);
  end;
  RETURN;
END;

global
procedure GetLangNr(string langcode,var record LangNrVc LangNrr)
BEGIN
  record CYBlock cyr;

  LangNrr.LangCode = langcode;
  if (ReadFirstMain(LangNrr,1,true)==false) then begin
    BlockLoad(cyr);
    LangNrr.LangCode = cyr.LangCode;
    if (ReadFirstMain(LangNrr,1,true)==false) then begin
    end;
  end;
  RETURN;
END;

global
procedure DoCLIn2Form(record RcVc RepSpec,record IVVc IVr)
BEGIN
  string 255 tstr;
  val t;
  record UserVc Userr;
  Integer i,rwcnt;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  
  GetLangNr(IVr.LangCode,LangNrr);
  BlockLoad(SysFormatRec);
  langcode = IVr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCLIn2Form;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(IVr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,IVr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"IVVc",formcode)) then
        begin
          goto LBREAK;
        end;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
        CommonDocumentFields(RepSpec);
        OUTFORMFIELD("F_SERNR",IVr.SerNr);
        OUTFORMFIELD("F_TRANSDATE",IVr.TransDate);
        if (FIELDINFORM("F_BASE1BETALA")) then begin
          t = MulRateToBase1(IVr.CurncyCode,IVr.Sum4,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_BASE1BETALA",tstr);
        end;
        if (FIELDINFORM("F_BASE2BETALA")) then begin
          t = MulRateToBase2(IVr.CurncyCode,IVr.Sum4,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
          tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_BASE2BETALA",tstr);
        end;
        tstr = ValToString(IVr.Sum1,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_SUMMA",tstr);
        tstr = ValToString(IVr.Sum3,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_MOMS",tstr);
        if (FIELDINFORM("F_PAYMODETAXPERC")) then begin
          if (GetPMTAX(IVr.PayDeal,t)) then begin end;
          OUTFORMFIELD("F_PAYMODETAXPERC",t);
        end;  
        OUTFORMFIELD("F_KUNDNR",IVr.CustCode);
        OUTFORMFIELD("F_KUNDNAMN",IVr.Addr0);
        OutAddress("F_ADRESS",IVr.Addr0,IVr.Addr1,IVr.Addr2,IVr.Addr3,IVr.InvAddr3,IVr.InvAddr4);
        OUTFORMFIELD("F_COMMENT",IVr.InvComment);
        OUTFORMFIELD("F_REFERENSNUMMER",IVr.OurContact);
        OUTFORMFIELD("F_PERSON",IVr.SalesMan);
        if (FIELDINFORM("F_SALJARNAMN")) then begin
          GetUserName(IVr.SalesMan,tstr);
          OUTFORMFIELD("F_SALJARNAMN",tstr);
        end;                  
        if (FIELDINFORM("F_RUSPAYNR")) then begin
          RussianPaymentNr(IVr.SerNr,tstr);
          OUTFORMFIELD("F_RUSPAYNR",tstr);
        end;  
        PrintCLInInvoiceRows(IVr,SysFormatRec,LangNrr);
        CloseForm;          
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCLIn2Form:;
  RETURN;  
END;     

