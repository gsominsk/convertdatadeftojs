external function roundmode GetVATRoundModeRB();
external function roundmode GetVATRoundMode(record RoundBlock);
external function roundmode GetTotalRoundMode(record RoundBlock);
external function roundmode SetRoundModeD(Integer);
external function roundmode DefaultRoundMode();
external procedure Mul2VAT(string,val,var val,var val,Integer);
external procedure GetVATdouble(string,var val,var val,Integer);
external procedure GetVATText(string,var string);
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external function Boolean GetVATincl(string,var val,var Integer);
external procedure GetVATproc(string,Integer,var val);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure SelectUnitText(string,string,var string);
external procedure IntToText(string,Integer,var string);
external function Integer SetDateOrder(string);
external procedure LongDateToStr(Date,Integer,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure ValToText(val,Integer,string,string,var string);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure Val2ToText(string,val,Integer,string,string,var string);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetLangNr(string,var record LangNrVc);

procedure IntIVVat(Integer incvat,string vatcode,val rowsump,
                   var val vatprcp,var val vatvalp,var val vatexclprc,var val vatinclprc)
begin
  Integer rn;
  val tax1,rowtaxp;
  
  vatprcp = blankval;
  vatvalp = blankval;
  vatexclprc = blankval;
  vatinclprc = blankval;
  switch (incvat) begin
    case 0:
      Mul2VAT(vatcode,rowsump,vatvalp,vatprcp,incvat);
      GetVATdouble(vatcode,vatprcp,tax1,incvat);
      MulVATIV(vatcode,rowsump,vatvalp,rowtaxp,incvat,0);
      if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
      end;
      if (GetVATincl(vatcode,vatinclprc,rn)) then begin
      end;
    otherwise 
      GetVATdouble(vatcode,vatprcp,tax1,incvat);
      MulVATIV(vatcode,rowsump,vatvalp,rowtaxp,incvat,0);
      if (GetVAT2(vatcode,vatexclprc,rn,0)) then begin
      end;
      if (GetVATincl(vatcode,vatinclprc,rn)) then begin
      end;
  end;
  if (blank(vatprcp)) then begin
    if (vatvalp==0) then begin
      vatvalp = blankval;
    end;
  end;
  return;
end;

procedure PrintIntIV(record RcVc RepSpec,record IntIVVc IntIVr,string formcode)
BEGIN
  record DocVc Docr;
  record LangNrVc LangNrr;
  Integer i,rwcnt,vatcnt;
  string 255 tstr;
  record SysFormatBlock SysFormatRec;
  record RoundBlock RoundRec; 
  row IntIVVc IntIVrw;
  val t;
  record INVc INr;
  record SMVc VATr;
  row SMVc VATrw;
  val vatv,t1,vattot,vatbase,vatval,vatexclprc,vatinclprc;
  val totvatval,totvatbase,totrowtot;
  Integer valtyp,rn;
  val vatprc;
  record VIVc VIr;
  record CUVc VEr;
  
  VIr.SerNr = IntIVr.VISerNr;
  ReadFirstMain(VIr,1,true);
  VEr.Code = VIr.VECode;
  ReadFirstMain(VEr,1,true);
  BlockLoad(RoundRec);  
  BlockLoad(SysFormatRec);  
  GetLangNr(IntIVr.LangCode,LangNrr);
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
  end;
  CommonDocumentFields(RepSpec);    
  rwcnt = MatRowCnt(IntIVr);
  NumberofDocumentPages(formcode,rwcnt);

  OUTFORMFIELD("F_LEVERANTOR",VIr.VECode);
  OUTFORMFIELD("F_LEVNAMN",VIr.VEName);
  OUTFORMFIELD("F_LEVVATNR",VEr.VATNr);
  OUTFORMFIELD("F_LEVLEVERANTOR",VEr.Name);
  OUTFORMFIELD("F_LEVLEVERANTOR",VEr.InvAddr0);
  OUTFORMFIELD("F_LEVLEVERANTOR",VEr.InvAddr1);
  OUTFORMFIELD("F_LEVLEVERANTOR",VEr.InvAddr2);
  OUTFORMFIELD("F_LEVLEVERANTOR",VEr.InvAddr3);
  OUTFORMFIELD("F_LEVLEVERANTOR",VEr.InvAddr4);

  if (FieldINFORM("F_RUSPAYNR")) then begin
    RussianPaymentNr(IntIVr.SerNr,tstr);
    OUTFORMFIELD("F_RUSPAYNR",tstr);
  end;    
  OUTFORMFIELD("F_FAKTURANUMMER",IntIVr.SerNr);  
  OUTFORMFIELD("F_SALJARE",IntIVr.SalesMan);
  OUTFORMFIELD("F_SALJARNAMN",IntIVr.Name);
  LongDateToStr(IntIVr.TransDate,SetDateOrder(IntIVr.LangCode),tstr);
  OUTFORMFIELD("F_TRANSDATE",tstr);
  OUTFORMFIELD("F_REFERENSNUMMER",IntIVr.Reference);
  OUTFORMFIELD("F_DEPARTMENT",IntIVr.Department);

//  RecordField(Sign,M4Code,10,UserVc);
//  RecordField(SalesGroup,M4Code,5,SalesGroupVc);

  PrintValue("F_AVRUNDNING",IntIVr.Sum0,M4Val,LangNrr,SysFormatRec,false);

//  RecordField(Sum1,M4Val,0,0);
  PrintValue("F_SUMMAEJMOMS",IntIVr.Sum2,M4Val,LangNrr,SysFormatRec,false);
  if (FIELDINFORM("F_VATINTEXT")) then begin
    Val2ToText("",IntIVr.Sum3,M4Val,"",IntIVr.LangCode,tstr);
    OUTFORMFIELD("F_VATINTEXT",tstr);
  end;
  if (FIELDINFORM("F_MOMS")) then begin
    GetFieldArgument(Docr,F_MOMS,tstr);
    if (nonblank(tstr)) then begin
      t = Round(IntIVr.Sum3,SetRoundModeD(StringToInt(tstr)));
      tstr = ValToString(t,M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(IntIVr.Sum3,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_MOMS",tstr);      
  end;  
  PrintValueInclZero("F_TOTSUM",IntIVr.Sum4,M4Val,LangNrr,SysFormatRec,false);
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    t = IntIVr.Sum4;
    ValToText(t,M4Val,"",IntIVr.LangCode,tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);  
  end;
  if (FIELDINFORM("F_AMOUNTINTEXT")) then begin
    GetFieldArgument(Docr,F_AMOUNTINTEXT,tstr);
    Val2ToText(tstr,IntIVr.Sum4,M4Val,"",IntIVr.LangCode,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXT",tstr);
  end;
  if (FIELDINFORM("F_ATTBETALA")) then begin
    GetFieldArgument(Docr,F_ATTBETALA,tstr);
    if (nonblank(tstr)) then begin
      t = Round(IntIVr.Sum4,SetRoundModeD(StringToInt(tstr)));
      tstr = ValToString(t,M45Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end else begin
      tstr = ValToString(IntIVr.Sum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    end;
    OUTFORMFIELD("F_ATTBETALA",tstr);      
  end;  
  OUTFORMFIELD("F_INVOICENR",IntIVr.VISerNr);      

  SetupVATBase(VATr,vatcnt);          
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntIVr,i,IntIVrw);
    OUTFORMFIELD("F_ROWNR",i+1);
    IntToText("",i+1,tstr);
    OUTFORMFIELD("F_ROWNRINTEXT",tstr);
    
    INr.Code = IntIVrw.ArtCode;
    if (ReadFIrstMain(INr,1,true)) then begin      
    end;
    OUTFORMFIELD("F_UNITCODE",INr.Unittext);
    if (FIELDINFORM("F_UNITCOMMENT")) then begin
      SelectUnitText("",INr.Unittext,tstr);
      OUTFORMFIELD("F_UNITCOMMENT",tstr);
    end;  
    
    OUTFORMFIELD("F_ARTNR",IntIVrw.ArtCode);
    OUTFORMFIELD("F_ARTNR2",IntIVrw.ArtCode);
    PrintValueInclZero("F_ANTAL",IntIVrw.Quant,M4UVal,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_SPECIFIKATION",IntIVrw.Spec);
    if (FIELDINFORM("F_APRIS")) then begin
      GetFieldArgument(Docr,F_APRIS,tstr);
      if (nonblank(tstr)) then begin
        t = Round(IntIVrw.Price,SetRoundModeD(StringToInt(tstr)));
        PrintValue("F_APRIS",t,M45Val,LangNrr,SysFormatRec,false);
      end else begin
        if (RoundRec.Discount==0) then begin
          t = Round(IntIVrw.Price,SetRoundModeD(3));
        end else begin
          t = Round(IntIVrw.Price,DefaultRoundMode);
        end;
        PrintValue("F_APRIS",t,M423Val,LangNrr,SysFormatRec,false);
      end;  
    end;
    OUTFORMFIELD("F_MOMSKOD",IntIVrw.VATCode);
    OUTFORMFIELD("F_SALESACC",IntIVrw.SalesAcc);

    AddVATBase(VATr,IntIVrw.VATCode,IntIVrw.Sum,blankval,vatcnt,IntIVr.InclVAT,0);      

    IntIVVat(0,IntIVrw.VATCode,IntIVrw.Sum,vatprc,vatval,vatexclprc,vatinclprc);
    PrintValueInclZero("F_ROWVATPRC",vatprc,M4Val,LangNrr,SysFormatRec,false);
    PrintValueInclZero("F_BELOPP",IntIVrw.Sum,M4Val,LangNrr,SysFormatRec,false);
    PrintValueInclZero("F_RADSUMMAMEDMOMS",IntIVrw.Sum+vatval,M4Val,LangNrr,SysFormatRec,false);
    PrintValueInclZero("F_ROWVATVAL",vatval,M4Val,LangNrr,SysFormatRec,false);
    EndFormRow;
  end;
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw);
    MulVATIV(VATrw.VATCode,VATrw.DebVal,vatv,t1,IntIVr.InclVAT,0);
    if (vatv!=0) or (nonblank(VATrw.DebVal)) then begin
      vatval = Round(vatv,GetVATRoundModeRB);
      totvatval = totvatval + vatval;
      totvatbase = totvatbase + VATrw.DebVal;
      totrowtot = totrowtot + VATrw.DebVal;    
      if (IntIVr.InclVAT>0) then begin
        totvatbase = totvatbase - vatval;
        vatbase = VATrw.DebVal - vatval;
        vattot = VATrw.DebVal;
      end else begin
        totrowtot = totrowtot + vatval;
        vatbase = VATrw.DebVal;
        vattot = VATrw.DebVal + vatval;
      end;
      OUTFORMFIELD("F_MOMSKODTOTAL",VATrw.VATCode);    
      if (FIELDINFORM("F_VATBASE")) then begin
        valtyp = M4Val;
        GetFieldArgument(Docr,F_VATBASE,tstr);
        if (tstr=="-") then begin
          valtyp = M4NegVal;
        end;
        PrintValueInclZero("F_VATBASE",vatbase,valtyp,LangNrr,SysFormatRec,false);
      end;    
      PrintValueInclZero("F_SUMMAMEDMOMS",VATrw.DebVal,valtyp,LangNrr,SysFormatRec,false);
      if (FIELDINFORM("F_VATVAL")) then begin
        valtyp = M4Val;
        GetFieldArgument(Docr,F_VATVAL,tstr);
        if (tstr=="-") then begin
          valtyp = M4NegVal;
        end;
        PrintValueInclZero("F_VATVAL",vatval,valtyp,LangNrr,SysFormatRec,false);
      end;
      if (FIELDINFORM("F_VATTOT")) then begin
        valtyp = M4Val;
        GetFieldArgument(Docr,F_VATTOT,tstr);
        if (tstr=="-") then begin
          valtyp = M4NegVal;
        end;
        PrintValueInclZero("F_VATTOT",vattot,valtyp,LangNrr,SysFormatRec,false);
      end;

      GetVATproc(VATrw.VATCode,0,t);
      PrintValue("F_VATEXCLPRC",t,M4Val,LangNrr,SysFormatRec,false);    
      if (HasLocalization("POL")) then begin
        tstr = "";
        if (GetVAT2(VATrw.VATCode,vatexclprc,rn,0)) then begin
        end;
        if (GetVATincl(VATrw.VATCode,vatinclprc,rn)) then begin
        end;
        if (nonblank(vatbase)) then begin
          if (nonblank(vatinclprc)) then begin
            if ((vatinclprc==0) and (nonblank(vatexclprc))) then begin
              tstr = USetStr(8111);
            end;
          end;
          if ((vatinclprc==0) and (nonblank(vatinclprc))) then begin
            if (blank(vatexclprc)) then begin
              tstr = USetStr(8110);
            end;
          end;
        end;
        if (blank(tstr)) then begin
          tstr = ValToString(vatexclprc,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        end;
        if (blank(tstr)) then begin
          tstr = USetStr(1244);
        end;
        OUTFORMFIELD("F_VATPRC",tstr);    
      end else begin
        tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        if (blank(tstr)) then begin
          tstr = USetStr(1244);
        end;
        OUTFORMFIELD("F_VATPRC",tstr);
      end;
      GetVATText(VATrw.VATCode,tstr);
      OUTFORMFIELD("F_VATCOMMENT",tstr);
    end;
  end;
  totvatval = Round(totvatval,GetVATRoundMode(RoundRec));
  totvatbase = Round(totvatbase,GetTotalRoundMode(RoundRec));
  totrowtot = Round(totrowtot,GetTotalRoundMode(RoundRec));
  PrintValueInclZero("F_TOTVATVAL",totvatval,M4Val,LangNrr,SysFormatRec,false);
  PrintValueInclZero("F_TOTVATBASE",totvatbase,M4Val,LangNrr,SysFormatRec,false);
  PrintValueInclZero("F_TOTROWTOT",totrowtot,M4Val,LangNrr,SysFormatRec,false);
  RETURN;
END;

global
procedure DoIntIVForm(record RcVc RepSpec,record IntIVVc IntIVr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  langcode = IntIVr.LangCode;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoIntIVForm;
  end;
  rwcnt = MatRowCnt(FDr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,IntIVr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"IntIVVc",formcode)) then
      begin
        goto LIIInvBREAK;
      end;
    end;
LIIInvBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
//        printf = PrintInvoiceWatermarks(IntIVr,true);
        PrintIntIV(RepSpec,IntIVr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1546,formcode);
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoIntIVForm:;  
  RETURN;
END;
