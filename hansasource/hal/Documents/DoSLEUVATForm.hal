external function Boolean FindFormcode(Integer,Integer);
external function Integer NumberofDocumentPages(string,Integer);
external procedure GetMonthText(string,Date,var string);
external procedure GetDateTurnover(string,string,string,string,string,record ICSVc,string,Date,Date,var val,Integer);
external function Boolean TestArtCodeMatch(string,string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure GetSalesItemType(string customer,record RcVc RepSpec,var val tsum)
BEGIN
 boolean test,TrHs,stfound;
 record INVc INr;
 record ICSVc ICSp;
 val sum;
    
 tsum = 0;
 TrHs = true;
 if (RepSpec.flags[8] == 1) then begin
    INr.ItemType = 3;
 end;
 if (RepSpec.flags[7] == 1) then begin
    INr.ItemType = 2;
 end;
 if (RepSpec.flags[6] == 1) then begin
    INr.ItemType = 1;
 end;
 if (RepSpec.flags[5] == 1) then begin
    INr.ItemType = 0;
 end;
 ResetLoop(INr);
 while (LoopKey("ItemType",INr,1,TrHs)) begin
    test = false;
    if (RepSpec.flags[8] == 1) and (INr.ItemType == 3) then begin
        test = true;
    end;
    if (RepSpec.flags[7] == 1) and (INr.ItemType == 2) then begin
        test = true;
    end;
    if (RepSpec.flags[6] == 1) and (INr.ItemType == 1) then begin
        test = true;
    end;
    if (RepSpec.flags[5] == 1) and (INr.ItemType == 0) then begin
        test = true;
    end;
    if test then begin
      ICSp.ArtCode = INr.Code;
      ICSp.CustCode = customer;
      stfound = ReadFirstMain(ICSp,2,false);
      if (TestArtCodeMatch(ICSp.ArtCode,INr.Code)==false) then begin
        stfound = false;
      end;
      if (ICSp.CustCode<>customer) then begin
        stfound = false;
      end;
      if (stfound==true) then begin
        GetDateTurnover(INr.Code,"",customer,"","",ICSp,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,sum,0);
        tsum = tsum + sum;
      end;
    end;
 end;
END;
RETURN;


procedure PrintSLEUVATForm(record RcVc RepSpec, var integer rowcnt)
begin
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;

  record CUVc CUr;
  Boolean TrHs,stfound;
  val sum,t,gps,totgp,totsum;
  string 255 frcu,tocu;
  Boolean testf;
  record CYBlock CompYear;
  string 255 tstr;
  Integer rw;

  GetLangNr("",LangNrr);  
  BlockLoad(SysFormatRec);
  BlockLoad(CompYear);
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  CUr.Code = frcu;
  TrHs = true;
  rw = 1;
  while (LoopMain(CUr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(tocu)) then begin
        if (CUr.Code>tocu) then begin
          TrHs = false;
        end;
      end;    
    end;
    if (TrHs) then begin
      testf = true;
      if (testf) then begin
        if (CUr.ExportFlag==0) then begin
          if (RepSpec.flags[1]==0) then begin testf = false; end;
        end;  
        if (CUr.ExportFlag==1 or CUr.ExportFlag==3) then begin
          if (RepSpec.flags[2]==0) then begin testf = false; end;
        end;  
        if (CUr.ExportFlag==2 or CUr.ExportFlag==4) then begin
          if (RepSpec.flags[3]==0) then begin testf = false; end;
        end;  
      end;
      if (CUr.CUType==0) then begin testf = false; end;
      if (testf) then begin
        if (nonblank(RepSpec.Stext)) then begin
          if (SetInSet(RepSpec.Stext,CUr.Classification)==false) then begin
            testf = false;
          end;  
        end;
      end;
      if (testf) then begin
        if (RepSpec.flags[5]==0 and RepSpec.flags[6]==0 and RepSpec.flags[7]==0 and RepSpec.flags[8]==0) then begin        //per item type calculations
             sum = GetTurnover(CUr,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate);
        end else begin
             GetSalesItemType(CUr.Code,RepSpec,sum);
        end;
        if (RepSpec.flags[4]==1) then begin
          if (sum==0) then begin
            goto L12;
          end;
        end;    
        OUTFORMFIELD("F_ROWNR",rw);
        OUTFORMFIELD("F_COUNTRYCODE",CUr.CountryCode);//country code
        OUTFORMFIELD("F_ORGCUSTNAME",CUr.Code);//org cust name
        OUTFORMFIELD("F_KUNDNAMN",CUr.Name);//customess name
        OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);///customer vat nr
        OUTFORMFIELD("F_REGNUMBER1",CUr.RegNr1);
        OUTFORMFIELD("F_REGNUMBER2",CUr.RegNr2);
        PrintValue("F_BELOPP",sum,M4Val,LangNrr,SysFormatRec,false);//row sum
        EndFormRow;
        rw = rw + 1;
        totsum = totsum + sum;
L12:;
      end;
    end;
  end;
  OUTFORMFIELD("F_DATEDAY",GetDay(CurrentDate));  
  OUTFORMFIELD("F_DATEMONTH",GetMonth(CurrentDate));  
  GetMonthText("",CurrentDate,tstr);
  OUTFORMFIELD("F_DATEMONTHTEXT",tstr);  
  OUTFORMFIELD("F_DATEYEAR",GetYear(CurrentDate));    
  PrintValue("F_SUMMA",totsum,M4Val,LangNrr,SysFormatRec,false);
  rowcnt = rw;
  RETURN;
return;
end;

global
procedure DoSLEUVATForm(record RcVc RepSpec,record CUVc tempCur)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  string 255 tstr;
  Boolean printf;
  Integer intdocnr,rowcnt;
  string 30 formcode;
  record DocVc Docr;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoSLEUVATForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,FDrw.PrintGroupCode,
                      "",intdocnr,"",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin  
      if (OpenForm(formcode)) then begin
        CommonDocumentFields(RepSpec);
        PrintSLEUVATForm(RepSpec,rowcnt);
        NumberofDocumentPages(formcode,rowcnt)
        CloseForm;        
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoSLEUVATForm:;  
  RETURN;  
END;     
 