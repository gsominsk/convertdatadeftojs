external function Boolean FindFormcode(Integer,Integer);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure CommonDocumentFields(record RcVc);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure Lab(record DocVc Docr,Array string aAddr0,Array string aAddr1,Array string aAddr2,Array string aAddr3,
              Array string aAddr4,Array string aAddr5,Array LongInt aContractNr,Array val aTotQuant,
              Array string aSorting,Array string aClass,Array string aCountry,Array string aClientContact,
              record SysFormatBlock SysFormatRec,record LangNrVc LangNrr,LongInt cocnt)
BEGIN
  Integer i,j,rwcnt;
  row DocVc Docrw;
  
  for (i=0;i<cocnt;i=i+1) begin
    OUTFORMFIELD("F_ADDR1",aAddr0[i]);
    OUTFORMFIELD("F_ADDR2",aAddr1[i]);
    OUTFORMFIELD("F_ADDR3",aAddr2[i]);
    OUTFORMFIELD("F_ADDR4",aAddr3[i]);
    OUTFORMFIELD("F_DELADDR3",aAddr4[i]);
    OUTFORMFIELD("F_DELADDR4",aAddr5[i]);
    OUTFORMFIELD("F_CONTRACTNR",aContractNr[i]);
    PrintValue("F_TOTQTY",aTotQuant[i],M4Qty,LangNrr,SysFormatRec,false);
    OUTFORMFIELD("F_COMMENT",aSorting[i]);
    OUTFORMFIELD("F_SORTING",aSorting[i]);
    OUTFORMFIELD("F_CLASS",aClass[i]);
    OUTFORMFIELD("F_COUNTRYNAME",aCountry[i]);
    OUTFORMFIELD("F_ERREFERENS",aClientContact[i]);
    rwcnt = MatRowCnt(Docr);
    for (j=0;j<rwcnt;j=j+1) begin
      MatRowGet(Docr,j,Docrw);
      if (Docrw.fieldSetNr==0) then begin
        OUTFORMFIELD(Docrw.unitText,Docrw.unitText);
      end;
    end;    
    EndFormLabel;
  end;
  RETURN;  
END;

procedure Sortcontarr(Array LongInt aContractNr,Array string aAddr0,Array string aAddr1,
                      Array string aAddr2,Array string aAddr3,Array string aSorting,                      
                      Array val aTotQuant,Array string aClass,Array string aAddr4,
                      Array string aAddr5,Array string aCountry,Array string aClientContact,
                      LongInt cocnt)
BEGIN
  Integer change;
  LongInt i,changing;
  string 255 tmpstr;
  LongInt tmpl;
  val tmpv;

  changing = 1;
  while (changing==1) begin
    changing = 0;
    for (i=0;i<=cocnt;i=i+1) begin
      if (aTotQuant[i]<aTotQuant[i+1]) then begin
        changing = 1;
        tmpl = aContractNr[i];
        aContractNr[i+1] = aContractNr[i];
        aContractNr[i] = tmpl;
        tmpstr = aAddr0[i];
        aAddr0[i+1] = aAddr0[i];
        aAddr0[i] = tmpstr;
        tmpstr = aAddr1[i];
        aAddr1[i+1] = aAddr1[i];
        aAddr1[i] = tmpstr;
        tmpstr = aAddr2[i];
        aAddr2[i+1] = aAddr2[i];
        aAddr2[i] = tmpstr;
        tmpstr = aAddr3[i];
        aAddr3[i+1] = aAddr3[i];
        aAddr3[i] = tmpstr;
        tmpstr = aSorting[i];
        aSorting[i+1] = aSorting[i];
        aSorting[i] = tmpstr;
        tmpv = aTotQuant[i];
        aTotQuant[i+1] = aTotQuant[i];
        aTotQuant[i] = tmpv;
        tmpstr = aClass[i];
        aClass[i+1] = aClass[i];
        aClass[i] = tmpstr;
        tmpstr = aAddr4[i];
        aAddr4[i+1] = aAddr4[i];
        aAddr4[i] = tmpstr;
        tmpstr = aAddr5[i];
        aAddr5[i+1] = aAddr5[i];
        aAddr5[i] = tmpstr;
        tmpstr = aCountry[i];
        aCountry[i+1] = aCountry[i];
        aCountry[i] = tmpstr;
        tmpstr = aClientContact[i];
        aClientContact[i+1] = aClientContact[i];
        aClientContact[i] = tmpstr;
      end;
    end;
  end;
  RETURN;  
END;
  
procedure DoContLabFormPrint(record RcVc RepSpec,string formcode,string printer)
BEGIN
  record COVc COr;
  record CUVc CUr;
  string 20 frcu,tocu;
  string 5 frcocl,tococl;
  LongInt fromco,toco;
  Boolean TrHs;
  LongInt cocnt;
  Integer lbls,keys;
  LongInt j;
  Boolean testf,found;
  string 20 ckey;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  Array LongInt aContractNr;
  Array string 60 aAddr0;
  Array string 60 aAddr1;
  Array string 60 aAddr2;
  Array string 60 aAddr3;
  Array string 20 aSorting;
  Array val aTotQuant;
  Array string 5 aClass;
  Array string 60 aAddr4;
  Array string 60 aAddr5;
  Array string 60 aCountry;
  Array string 60 aClientContact;
  record DocVc Docr;

  cocnt = 0;
  GetLangNr("",LangNrr);  
  BlockLoad(SysFormatRec);
  if (OpenForm(formcode)==false) then begin goto LDoContLabFormPrint; end;
  SetPrinter(printer);  
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin end;

  if (RepSpec.long2!=-1) then begin cocnt = RepSpec.long2-1; end;
  switch (RepSpec.ArtMode) begin
    case 0: FormLabelGrid(2,280,8,98); lbls = 16;
    case 1: FormLabelGrid(3,195,8,98); lbls = 24;
    case 2: FormLabelGrid(1,1,1,1); lbls = 1;
    case 3: FormLabelGrid(5,112,13,54); lbls = 65;
    case 4: FormLabelGrid(2,280,4,206); lbls = 8;
  end;
  fromco = FirstInRange(RepSpec.f1,20);
  toco = LastInRange(RepSpec.f1,20);
  frcu = FirstInRange(RepSpec.f2,20);
  tocu = LastInRange(RepSpec.f2,20);
  frcocl = FirstInRange(RepSpec.FirstAcc,20);
  tococl = LastInRange(RepSpec.FirstAcc,20);
  
  switch (RepSpec.flags[1]) begin
    case 0:
      COr.SerNr = fromco;    
      COr.Addr0 = "";
      ckey = "SerNr";
      keys = 1;
    case 1:
      COr.SerNr = fromco;    
      COr.Addr0 = "";
      ckey = "Name";
      keys = 1;
    case 2:
      COr.SerNr = fromco;    
      COr.Addr0 = "";
      ckey = "Sorting";
      keys = 2;
    case 3:
      COr.SerNr = fromco;    
      COr.Addr0 = ""; 
      ckey = "SerNr";
      keys = 2;
    case 4:
      COr.SerNr = fromco;
      COr.ContractClass = frcocl;
      ckey = "ContractClass";
      keys = 2;
  end;
  TrHs = true;
  while (LoopKey(ckey,COr,1,TrHs)) begin  
    if (TrHs) then begin
      if (toco!=-1) then begin
        if (COr.SerNr>toco) then begin TrHs = false; end;
      end;
    end;      
    if (TrHs) then begin
      testf = true;
      if (testf) then begin
        if (nonblank(RepSpec.AccStr)) then begin
          if (RepSpec.AccStr!=COr.Sorting) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.FirstAcc)) then begin
          switch (RepSpec.flags[1]) begin
            case 4:
             if (COr.ContractClass<frcocl) then begin TrHs = false; end;
             if (COr.ContractClass>tococl) then begin TrHs = false; end;
            otherwise
             if (COr.ContractClass<frcocl) then begin testf = false; end;
             if (COr.ContractClass>tococl) then begin testf = false; end;
          end;  
        end;        
      end;   
      if (COr.OKFlag==0) then begin
        if (RepSpec.flags[2]==0) then begin testf = false; end;
      end;
      if (COr.OKFlag==1) then begin
        if (RepSpec.flags[3]==0) then begin testf = false; end;
      end;
      if (nonblank(frcu)) then begin
        if (COr.CustCode<frcu) then begin testf = false; end;
      end;   
      if (nonblank(tocu)) then begin
        if (COr.CustCode>tocu) then begin testf = false; end;
      end;
      CUr.Code = COr.CustCode;
      if (ReadFirstMain(CUr,1,true)==false) then begin testf = false; end;
//      if (CUr.CUType==0) then begin testf = false; end;
      if (RepSpec.flags[5]!=0) then begin
        if (CUr.ExportFlag==0) then begin testf = false; end;
      end;
      if (nonblankdate(COr.CancelDate)) then begin
        testf = false;
      end;      
      if (testf) then begin
        aContractNr[cocnt] = COr.SerNr;
        if (RepSpec.flags[4]==1) then begin
          aAddr0[cocnt] = COr.ShipAddr0;
          aAddr1[cocnt] = COr.ShipAddr1;
          aAddr2[cocnt] = COr.ShipAddr2;
          aAddr3[cocnt] = COr.ShipAddr3;
          aAddr4[cocnt] = COr.DelAddr3;
          aAddr5[cocnt] = COr.DelAddr4;
        end else begin
          aAddr0[cocnt] = COr.Addr0;
          aAddr1[cocnt] = COr.Addr1;
          aAddr2[cocnt] = COr.Addr2;
          aAddr3[cocnt] = COr.Addr3;
          aAddr4[cocnt] = COr.InvAddr3;
          aAddr5[cocnt] = COr.InvAddr4;
        end;
        aSorting[cocnt] = COr.Sorting;
        aClientContact[cocnt] = COr.ClientContact;
        aClass[cocnt] = COr.ContractClass;
        aTotQuant[cocnt] = COr.TotQuant;
        aCountry[cocnt] = CUr.CountryCode;
        if (cocnt>=lbls) then begin
          if (RepSpec.flags[1]==3) then begin 
            Sortcontarr(aContractNr,aAddr0,aAddr1,aAddr2,aAddr3,aSorting,                      
                        aTotQuant,aClass,aAddr4,aAddr5,aCountry,aClientContact,cocnt);
          end;
          Lab(Docr,aAddr0,aAddr1,aAddr2,aAddr3,aAddr4,aAddr5,
              aContractNr,aTotQuant,aSorting,aClass,aCountry,
              aClientContact,SysFormatRec,LangNrr,cocnt);              
          CloseForm;
          if (OpenForm(formcode)==false) then begin goto LDoContLabFormPrint; end;
          SetPrinter(printer);  
          switch (RepSpec.ArtMode) begin
            case 0: FormLabelGrid(2,280,8,98); lbls = 16;
            case 1: FormLabelGrid(3,195,8,98); lbls = 24;
            case 2: FormLabelGrid(1,1,1,1); lbls = 1;
            case 3: FormLabelGrid(5,112,13,54); lbls = 65;
            case 4: FormLabelGrid(2,280,4,206); lbls = 8;
          end;
          cocnt = 0;
        end;        
        cocnt = cocnt + 1;
      end;    
    end;
  end;
  if (cocnt>0) then begin
    if (RepSpec.flags[1]==3) then begin 
      Sortcontarr(aContractNr,aAddr0,aAddr1,aAddr2,aAddr3,aSorting,            
                  aTotQuant,aClass,aAddr4,aAddr5,aCountry,aClientContact,cocnt);
    end;
    Lab(Docr,aAddr0,aAddr1,aAddr2,aAddr3,aAddr4,aAddr5,
        aContractNr,aTotQuant,aSorting,aClass,aCountry,
        aClientContact,SysFormatRec,LangNrr,cocnt);              
  end;
  CloseForm;        
LDoContLabFormPrint:;
  RETURN;
END;  

global
procedure DoContLabForm(record RcVc Dummyr,record RcVc RepSpec)
BEGIN
  Integer i,rwcnt;  
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  record FormDefVc FDr;
  row FormDefVc FDrw;

  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoContLabForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,-1,"",
                      "",intdocnr,"",formcode)) then
      begin
        goto LBREAKContLab;
      end;
    end;
LBREAKContLab:;
    if (nonblank(formcode)) then begin
      DoContLabFormPrint(RepSpec,formcode,FDrw.PrintGroupCode);
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoContLabForm:;  
  RETURN;
END;  

global
procedure ContLabForm(record RcVc RepSpec)
BEGIN
  Boolean tmpf;
  
  tmpf = PrintDocument(RepSpec,"ContLabForm",false);
  RETURN;
END;
