external procedure PrintCurrencyCode(string,string);
external function roundmode SetRoundModeD(Integer);
external procedure GetVATproc(string,Integer,var val);
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external function Boolean GetVATincl(string,var val,var Integer);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure SelectUnitText(string,string,var string);
external function Integer SetDateOrder(string);
external procedure PrintValueInclZero(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external procedure InvoiceType(Integer,var string);
external procedure LongDateToStr(Date,Integer,var string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure CommonDocumentFields(record RcVc);
external function Integer NumberofDocumentPages(string,Integer);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetCurncyComment(string,var string);
external procedure GetFieldArgument(record DocVc,Integer,var string);
external procedure Val2ToText(string,val,Integer,string,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure PrintVEIV(record RcVc RepSpec,record VEIVVc VEIVr,string formcode)
BEGIN
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record IIBlock IIRec;
  record DocVc Docr;
  record CUVc VEr;
  record INVc INr;
  record PIVc PIr;
  Integer i,rwcnt,rownr,vatcnt;
  string 255 tstr;
  row VEIVVc VEIVrw;
  record RoundBlock RoundRec;
  val t;  
  record SMVc VATr;
  row SMVc VATrw;
  Integer valtyp,rn;
  val vatval,vatbase,vattot,vatexclprc,vatinclprc;

  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(VEIVr));
  BlockLoad(RoundRec);
  BlockLoad(IIRec);  
  BlockLoad(SysFormatRec);  
  GetLangNr("",LangNrr);
  Docr.Code = formcode;
  if (ReadFirstMain(Docr,1,true)) then begin
  end;
  VEr.Code = VEIVr.VECode;
  if (ReadFirstMain(VEr,1,true)) then begin
  end;

  OUTFORMFIELD("F_LEVERANTOR",VEr.Code);
  OUTFORMFIELD("F_LEVNAMN",VEr.Name);

  OUTFORMFIELD("F_SUPPLIEREMAIL",VEr.eMail);     
  OUTFORMFIELD("F_LEVPHONE",VEr.Phone);
  OUTFORMFIELD("F_LEVFAX",VEr.Fax);
  OUTFORMFIELD("F_LEVVATNR",VEr.VATNr);
  OUTFORMFIELD("F_EGETKUNDNR",VEr.VECustID);
  OUTFORMFIELD("F_TILLGIRO",VEr.BankAccount);
  OUTFORMFIELD("F_TILLBANK",VEr.AccOperator);
  OutAddress("F_FROMADRESS",VEr.Name,VEr.InvAddr0,VEr.InvAddr1,VEr.InvAddr2,VEr.InvAddr3,VEr.InvAddr4);
  OUTFORMFIELD("F_VEREGNUMBER1",VEr.RegNr1);
  OUTFORMFIELD("F_VEREGNUMBER2",VEr.RegNr2);

  OUTFORMFIELD("F_FAKTURANR",VEIVr.VESerNr);  
  OUTFORMFIELD("F_FAKTURANUMMER",VEIVr.SerNr);  
  OUTFORMFIELD("F_TRANSDATE",VEIVr.TransDate);
  OUTFORMFIELD("F_FAKTURADATUM",VEIVr.InvDate);
  OUTFORMFIELD("F_FORFALLODATUM",VEIVr.PayDate);
  OUTFORMFIELD("F_VILLKOR",VEIVr.PayDeal);
  OUTFORMFIELD("F_PAYTERMTEXT",VEIVr.pdComment);
  OUTFORMFIELD("F_ADRESSNAMN",VEIVr.Addr0);
  OUTFORMFIELD("F_KUNDNAMN",VEIVr.Addr0);
  OutAddress("F_ADRESS",VEIVr.Addr0,VEIVr.Addr1,VEIVr.Addr2,VEIVr.Addr3,VEIVr.InvAddr3,VEIVr.InvAddr4);
  OUTFORMFIELD("F_VARREFERENS",VEIVr.OurContact);
  OUTFORMFIELD("F_ERREFERENS",VEIVr.ClientContact);
  OUTFORMFIELD("F_REGNUMBER1",VEIVr.RegNr1);
  OUTFORMFIELD("F_REGNUMBER2",VEIVr.RegNr2);
  if (VEIVr.VEOrderNr==-1) then begin
    tstr = "";
  end else begin
    tstr = VEIVr.VEOrderNr;
  end;
  OUTFORMFIELD("F_ORDERNUMMER",tstr);  
  if (FIELDINFORM("F_KASSADATUM")) then begin
    if ((VEIVr.InvType==kInvoiceTypeNormal or VEIVr.InvType==kInvoiceTypeNormalSpecialSales) or (VEIVr.InvType==kInvoiceTypeDownpayment)) then begin
      if (VEIVr.pdvrebt!=0) then begin
        OUTFORMFIELD("F_KASSADATUM",AddDay(VEIVr.InvDate,VEIVr.pdrdays));
      end;
    end;
  end;
  if (FIELDINFORM("F_KASSADATUM_2")) then begin
    if ((VEIVr.InvType==kInvoiceTypeNormal or VEIVr.InvType==kInvoiceTypeNormalSpecialSales) or (VEIVr.InvType==kInvoiceTypeDownpayment)) then begin
      if (VEIVr.pdvrebt2!=0) then begin
        OUTFORMFIELD("F_KASSADATUM_2",AddDay(VEIVr.InvDate,VEIVr.pdrdays2));
      end;
    end;
  end;
  InvoiceType(VEIVr.InvType,tstr);
  OUTFORMFIELD("F_FAKTTYP",tstr);
  OUTFORMFIELD("F_FAKTURATYP",tstr);
  OUTFORMFIELD("F_FAKTHUVUD",VEIVr.InvComment);
  if (FIELDINFORM("F_CREDITEDINVOICENR")) then begin
    if (VEIVr.InvType==kInvoiceTypeCredit or VEIVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
      tstr = USetStr(1807);
      tstr = tstr & VEIVr.CredInv;
      OUTFORMFIELD("F_CREDITEDINVOICENR",tstr);
    end;
  end;
  OUTFORMFIELD("F_SALJARE",VEIVr.SalesMan);
  PrintCurrencyCode("F_VALUTA",VEIVr.CurncyCode);
  PrintValue("F_FRAKT",VEIVr.FrPrice,M4Val,LangNrr,SysFormatRec,false);
//    OUTFORMFIELD("F_ORGCUSTNR",VEIVr.CustCode);      
  if (FIELDINFORM("F_SUMMA")) then begin
    GetFieldArgument(Docr,F_SUMMA,tstr);
    if (nonblank(tstr)) then begin
      t = Round(VEIVr.Sum1,SetRoundModeD(StringToInt(tstr)));
      PrintValueInclZero("F_SUMMA",t,M45Val,LangNrr,SysFormatRec,false);
    end else begin
      PrintValueInclZero("F_SUMMA",VEIVr.Sum1,M4Val,LangNrr,SysFormatRec,false);
    end;
  end;
  PrintValue("F_SUMMAEJMOMS",VEIVr.Sum2,M4Val,LangNrr,SysFormatRec,false);
  if (FIELDINFORM("F_MOMS")) then begin
    GetFieldArgument(Docr,F_MOMS,tstr);
    if (nonblank(tstr)) then begin
      t = Round(VEIVr.Sum3,SetRoundModeD(StringToInt(tstr)));
      PrintValueInclZero("F_MOMS",t,M45Val,LangNrr,SysFormatRec,false);
    end else begin
      PrintValueInclZero("F_MOMS",VEIVr.Sum3,M4Val,LangNrr,SysFormatRec,false);
    end;
  end;  
  if (FIELDINFORM("F_ATTBETALA")) then begin
    GetFieldArgument(Docr,F_ATTBETALA,tstr);
    if (nonblank(tstr)) then begin
      t = Round(VEIVr.Sum4,SetRoundModeD(StringToInt(tstr)));
      PrintValueInclZero("F_ATTBETALA",t,M45Val,LangNrr,SysFormatRec,false);
    end else begin
      PrintValueInclZero("F_ATTBETALA",VEIVr.Sum4,M4Val,LangNrr,SysFormatRec,false);
    end;
  end;  
 
  OutAddress("F_INLEVADRESS",VEIVr.ShipAddr0,VEIVr.ShipAddr1,VEIVr.ShipAddr2,VEIVr.ShipAddr3,VEIVr.DelAddr3,VEIVr.DelAddr4);

  OUTFORMFIELD("F_KUNDTEL",VEIVr.Phone);      
  OUTFORMFIELD("F_KUNDFAX",VEIVr.Fax);      
  OUTFORMFIELD("F_KUNDMOMSNR",VEIVr.VEVATNr);      
  OUTFORMFIELD("F_REFERENSNUMMER",VEIVr.CalcFinRef);
  OUTFORMFIELD("F_KUNDORDNR",VEIVr.OurOrdNr);
  OUTFORMFIELD("F_OFFICIALSERNO",VEIVr.OfficialSerNr);
  PrintValue("F_TOTQTY",VEIVr.VETotQty,M4Qty,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTVOLUME",VEIVr.VETotVolume,M4Qty,LangNrr,SysFormatRec,false);
  PrintValue("F_TOTWEIGHT",VEIVr.VETotWeight,M4Qty,LangNrr,SysFormatRec,false);
  LongDateToStr(VEIVr.ServiceDelDate,SetDateOrder(VEIVr.LangCode),tstr);
  OUTFORMFIELD("F_SERVICEDELDATE",tstr);
  if (FIELDINFORM("F_AMOUNTINTEXT")) then begin
    GetFieldArgument(Docr,F_AMOUNTINTEXT,tstr);
    Val2ToText(tstr,VEIVr.Sum4,M4Val,VEIVr.CurncyCode,VEIVr.LangCode,tstr);
    OUTFORMFIELD("F_AMOUNTINTEXT",tstr);
  end;
  OUTFORMFIELD("F_RANTASATS",VEIVr.IntCode);
  OUTFORMFIELD("F_BANKCODE",VEIVr.VEBankCode);
  OUTFORMFIELD("F_BANKNAME",VEIVr.VEBank1);
  OUTFORMFIELD("F_BANKACC",VEIVr.VEBank2);
  OUTFORMFIELD("F_REFSTR",VEIVr.RefStr);


//  RecordField(OurCustCode,M4Code,20,CUVc);
//  RecordField(PayDeal,M4Code,2,0);
//  RecordField(TAX1Sum,M4Val,0,0);
//  RecordField(Sum0,M4Val,0,0);
//  RecordField(TAX2Sum,M4Val,0,0);
//  RecordField(VECode,M4Code,20,CUVc);
//  RecordField(CostAcc,M4Code,10,AccVc);
//  RecordField(VISerNr,M4Long,0,0);
  
  SetupVATBase(VATr,vatcnt);          

  rwcnt = MatRowCnt(VEIVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VEIVr,i,VEIVrw);
    switch (VEIVrw.stp) begin
      case 1:
        PIr.VEItemCode = VEIVrw.VEArtCode;
        PIr.VECode = VEIVr.VECode;
        if (ReadFirstKey("VEItemCode",PIr,2,true)) then begin end;

        OUTFORMFIELD("F_LEVARTNR",VEIVrw.VEArtCode);
        PrintValueInclZero("F_ORDANTAL",VEIVrw.VEQuant,M4UVal,LangNrr,SysFormatRec,false);
        PrintValueInclZero("F_APRIS",VEIVrw.VEPrice,M423Val,LangNrr,SysFormatRec,false);
        PrintValueInclZero("F_BELOPP",VEIVrw.VESum,M4Val,LangNrr,SysFormatRec,false);
        PrintValue("F_RABATT",VEIVrw.VEvRebate,M4Val,LangNrr,SysFormatRec,false);
        OUTFORMFIELD("F_MOMSKOD",VEIVrw.VATCode);
        OUTFORMFIELD("F_SERIENR",VEIVrw.VESerialNr);
        PrintValue("F_PRICEFACTOR",VEIVrw.VEPriceFactor,M4UVal,LangNrr,SysFormatRec,false);
        OUTFORMFIELD("F_EXCISE",VEIVrw.VEExciseNr);
        PrintValue("F_REPA_TAX",VEIVrw.VERepaExVAT,M4Val,LangNrr,SysFormatRec,false);
        OUTFORMFIELD("F_ARTNR2",VEIVrw.ArtCode);
        PrintValueInclZero("F_ANTAL",VEIVrw.VEQuant,M4UVal,LangNrr,SysFormatRec,false);
        OUTFORMFIELD("F_ROWOBJECT",VEIVrw.Objects);
        if (FIELDINFORM("F_ENHETORD")) then begin
          SelectUnitText(VEr.LangCode,PIr.VEUnit,tstr);
          OUTFORMFIELD("F_ENHETORD",tstr);
        end;  
        OUTFORMFIELD("F_SPECIFIKATION",VEIVrw.VESpec);        
        EndFormRow;
        AddVATBase(VATr,VEIVrw.VATCode,VEIVrw.VESum,blankval,vatcnt,VEIVr.InclVAT,VEIVr.NoTAXonVAT);      
      case 101: ;
    end;
  end;    
  
  rwcnt = MatRowCnt(VEIVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VEIVr,i,VEIVrw);
    switch (VEIVrw.stp) begin
      case 101: ;
        if (FIELDINFORM("F_VATBASE")) then begin
          valtyp = M4Val;
          GetFieldArgument(Docr,F_VATBASE,tstr);
          if (tstr=="-") then begin
            valtyp = M4NegVal;
          end;
          PrintValueInclZero("F_VATBASE",VEIVrw.VEPrice,valtyp,LangNrr,SysFormatRec,false);
        end;    
        tstr = ValToString(VEIVrw.VEVATPrc,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        if (blank(tstr)) then begin
          tstr = USetStr(1244);
        end;
        OUTFORMFIELD("F_VATPRC",tstr);      
        if (FIELDINFORM("F_VATVAL")) then begin
          valtyp = M4Val;
          GetFieldArgument(Docr,F_VATVAL,tstr);
          if (tstr=="-") then begin
            valtyp = M4NegVal;
          end;
          PrintValueInclZero("F_VATVAL",VEIVrw.VESum,valtyp,LangNrr,SysFormatRec,false);
        end;
        if (FIELDINFORM("F_VATTOT")) then begin
          valtyp = M4Val;
          GetFieldArgument(Docr,F_VATTOT,tstr);
          if (tstr=="-") then begin
            valtyp = M4NegVal;
          end;
          PrintValueInclZero("F_VATTOT",VEIVrw.VEPrice+VEIVrw.VESum,valtyp,LangNrr,SysFormatRec,false);
        end;

    end;
  end;
/*  
this is from suuplier DB not ours
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw);    
    if (VEIVr.InclVAT>0) then begin
      vatbase = VATrw.DebVal - vatval;
      vattot = VATrw.DebVal;
    end else begin
      vatbase = VATrw.DebVal;
      vattot = VATrw.DebVal + vatval;
    end;
    if (vatbase!=0) then begin
      if (FIELDINFORM("F_VATBASE")) then begin
        valtyp = M4Val;
        GetFieldArgument(Docr,F_VATBASE,tstr);
        if (tstr=="-") then begin
          valtyp = M4NegVal;
        end;
        PrintValueInclZero("F_VATBASE",vatbase,valtyp,LangNrr,SysFormatRec,false);
      end;    
      GetVATproc(VATrw.VATCode,0,t);
      tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
      if (blank(tstr)) then begin
        tstr = USetStr(1244);
      end;
      OUTFORMFIELD("F_VATPRC",tstr);      
      
      if (FIELDINFORM("F_VATVAL")) then begin
        valtyp = M4Val;
        GetFieldArgument(Docr,F_VATVAL,tstr);
        if (tstr=="-") then begin
          valtyp = M4NegVal;
        end;
        PrintValueInclZero("F_VATVAL",vatval,valtyp,LangNrr,SysFormatRec,false);
      end;
      if (FIELDINFORM("F_VATTOT")) then begin
        valtyp = M4Val;
        GetFieldArgument(Docr,F_VATTOT,tstr);
        if (tstr=="-") then begin
          valtyp = M4NegVal;
        end;
        PrintValueInclZero("F_VATTOT",vattot,valtyp,LangNrr,SysFormatRec,false);
      end;
    end;
  end;
*/  
  RETURN;
END;

global
procedure DoVEIVForm(record RcVc RepSpec,record VEIVVc VEIVr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  Integer i,rwcnt;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoVEIVForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = VEIVr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (FindFormcode(VEIVr.OKFlag,FDrw.Typ)) then begin 
        if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,VEIVr.SerNr,FDrw.PrintGroupCode,
                        langcode,intdocnr,"VEIVVc",formcode)) then
        begin
          goto LBREAKVEIV;
        end;
      end;
    end;
LBREAKVEIV:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintVEIV(RepSpec,VEIVr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoVEIVForm:;  
  RETURN;
END;

