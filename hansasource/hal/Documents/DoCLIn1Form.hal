external procedure PrintCurrencyName(string,string);
external procedure PrintCurrencyCode(string,string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetMonthText(string,Date,var string);
external procedure GetUserName(string,var string);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetCorspAccNumber(string,var string);
external function Boolean GetPMTAX(string,var val);
external procedure RussianPaymentNr(LongInt,var string);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure GetLangNr(string,var record LangNrVc);

procedure PrintFormRowFields(record CUVc CUr,Array LongInt IVRecinvoicenrs,Array string IVRecaccnumbers,Array string IVReccomments,
                             Array string IVRecpaymodes,Array val IVRecrecvals,Array Date IVRecinvdates,Integer rowsnr)
BEGIN
  Integer i;
  record AccBlock ARRec;
  record CCatVc CCr;
  string 255 tstr;
  
  BlockLoad(ARRec);
  for (i=0;i<=rowsnr;i=i+1) begin
    OUTFORMFIELD("F_INVOICENR",IVRecinvoicenrs[i]);
    if (IVRecinvoicenrs[i]!=-1) then begin
      OUTFORMFIELD("F_DEBVAL",IVRecrecvals[i]);
    end;
    if (IVRecinvoicenrs[i]!=-1) then begin
      if (nonblank(IVRecaccnumbers[i])) then begin
        OUTFORMFIELD("F_SALESACC",IVRecaccnumbers[i]);
      end else begin
        CCr.Code = CUr.CustCat;
        if (ReadFirstMain(CCr,1,true)) then begin
          if (nonblank(CCr.ARAcc)) then begin
            tstr = CCr.ARAcc; 
          end else begin
            tstr = ARRec.ARAcc; 
          end;  
        end;
        OUTFORMFIELD("F_SALESACC",tstr);
      end;
    end;
    EndFormRow;
  end;
  RETURN;
END;

procedure PrintFormFields(record IPVc IPr,record CLInVc CLInr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record CUVc CUr;
  record UserVc Userr;
  val t;
  string 255 tstr;

  if (FIELDINFORM("F_BASE1BETALA")) then begin
    t = MulRateToBase1(CLInr.CurncyCode,CLInr.Total,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE1BETALA",tstr);
  end;  
  if (FIELDINFORM("F_BASE2BETALA")) then begin
    t = MulRateToBase2(CLInr.CurncyCode,CLInr.Total,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
    tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
    OUTFORMFIELD("F_BASE2BETALA",tstr);
  end; 
  if (FIELDINFORM("F_RUSPAYNR")) then begin
    RussianPaymentNr(IPr.SerNr,tstr);
    OUTFORMFIELD("F_RUSPAYNR",tstr);
  end;  
  if (FIELDINFORM("F_PAYMODETAXPERC")) then begin
    if (GetPMTAX(CLInr.PayMode,t)) then begin end;
    OUTFORMFIELD("F_PAYMODETAXPERC",t);
  end;  
  OUTFORMFIELD("F_PAYMODETAXTOTAL",CLInr.TAX1Sum);
  OUTFORMFIELD("F_PAYMODETAXTOTAL",CLInr.Total);
  PrintCurrencyCode("F_VALUTA",CLInr.CurncyCode);
  if (FIELDINFORM("F_VALUTANAMN")) then begin
    PrintCurrencyName("F_VALUTANAMN",CLInr.CurncyCode);
  end;  
  if (FIELDINFORM("F_SECACC")) then begin
    GetCorspAccNumber(CLInr.CorspCode,tstr);
    OUTFORMFIELD("F_SECACC",tstr);
  end;  
  OUTFORMFIELD("F_TRANSDATE",CLInr.TransDate);
  OUTFORMFIELD("F_OFFICIALSERNO",CLInr.OfficialSerNr);
  OUTFORMFIELD("F_SERNR",CLInr.SerNr);
  tstr = ValToString(CLInr.NetVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_SUMMA",tstr);
  tstr = ValToString(CLInr.VATVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_MOMS",tstr);
  tstr = ValToString(CLInr.Total,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
  OUTFORMFIELD("F_ATTBETALA",tstr);
  if (FIELDINFORM("F_ATTBETALATEXT")) then begin
    ValToText(CLInr.Total,M4Val,CLInr.CurncyCode,"",tstr);
    OUTFORMFIELD("F_ATTBETALATEXT",tstr);  
  end;    
  OUTFORMFIELD("F_COMMENT",CLInr.Comment);
  OUTFORMFIELD("F_PERSON",CLInr.Person);
  if (FIELDINFORM("F_SALJARNAMN")) then begin
    GetUserName(CLInr.Person,tstr);
    OUTFORMFIELD("F_SALJARNAMN",tstr);
  end;
  OutAddress("F_ADRESS",CLInr.CUName,CLInr.Addr0,CLInr.Addr1,CLInr.Addr2,CLInr.Addr3,CLInr.Addr4);
  OUTFORMFIELD("F_KUNDNR",CLInr.CUCode);
  OUTFORMFIELD("F_KUNDNAMN",CLInr.CUName);
  OUTFORMFIELD("F_ADDR1",CLInr.Addr0);
  OUTFORMFIELD("F_ADDR2",CLInr.Addr1);
  OUTFORMFIELD("F_ADDR3",CLInr.Addr2);
  OUTFORMFIELD("F_INVADDR3",CLInr.Addr3);
  OUTFORMFIELD("F_INVADDR4",CLInr.Addr4);
  if (FIELDINFORM("F_SIGNATURE")) then begin
    GetUserName(CurrentUser,tstr);
    OUTFORMFIELD("F_SIGNATURE",tstr);
  end;  
  Userr.Code = CLInr.Person;
  if (ReadFirstMain(Userr,1,true)) then begin
  end;
  CUr.Code = CLInr.CUCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;
  OUTFORMFIELD("F_OURREF",Userr.CurOurContact);
  OUTFORMFIELD("F_PERSONACCOUNT",Userr.PersAcc);
  OUTFORMFIELD("F_PERSONID",Userr.IDCode);
  OUTFORMFIELD("F_PERSONCOMMENT",Userr.Comment);
  OUTFORMFIELD("F_PERSONSPEC",Userr.Spec);
  OUTFORMFIELD("F_DATEDAY",GetDay(CLInr.TransDate));
  OUTFORMFIELD("F_DATEMONTH",GetMonth(CLInr.TransDate));
  GetMonthText("",CLInr.TransDate,tstr);
  OUTFORMFIELD("F_DATEMONTHTEXT",tstr);
  OUTFORMFIELD("F_DATEYEAR",GetYear(CLInr.TransDate));
  OUTFORMFIELD("F_KUNDMOMSNR",CUr.VATNr);
  RETURN;
END;

global
procedure DoCLIn1Form(record RcVc RepSpec,record IPVc IPr)
BEGIN
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,j,k,rwcnt,doccnt;
  record SysFormatBlock SysFormatRec;
  record LangNrVc LangNrr;
  record CLInVc CLInr;
  record CUVc CUr;
  record IVVc IVr;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  row IPVc IPrw;
  row IPVc IP2rw;
  Array string 20 acustcodes;
  Array string 10 aaccnumbers;
  Array string 5 acurncycodes;
  Array LongInt ainvoicenrs;
  Array Date ainvdates;
  Array Date atransdates;
  Array LongInt IVRecinvoicenrs;
  Array string 10 IVRecaccnumbers;
  Array string 60 IVReccomments;
  Array string 2 IVRecpaymodes;
  Array val IVRecrecvals;
  Array Date IVRecinvdates;
  Integer ivreccnt,rownr;
  
  GetLangNr("",LangNrr);
  BlockLoad(SysFormatRec);
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCLIn1Form;
  end;
  doccnt = MatRowCnt(FDr);
  rwcnt = MatRowCnt(IPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IPr,i,IPrw);
    acustcodes[i] = "";
    if (IPrw.ovst==0) then begin
      IVr.SerNr = IPrw.InvoiceNr;
      acustcodes[i] = IPrw.CustCode;
      if (ReadFirstMain(IVr,1,true)) then begin
        acustcodes[i] = IVr.CustCode;
        ainvoicenrs[i] = IVr.SerNr;
        ainvdates[i] = IVr.InvDate;
        atransdates[i] = IVr.TransDate;
        aaccnumbers[i] = IVr.ARAcc;
        acurncycodes[i] = IVr.CurncyCode;
      end;
    end;
  end;
        
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IPr,i,IPrw);
    if (IPrw.ovst==0) then begin
      if (blank(acustcodes[i])) then begin goto L77; end;
      for (j=0;j<i;j=j+1) begin
        if (acustcodes[j]==acustcodes[i]) then begin goto L77; end;
      end;
      for (j=0;j<rwcnt;j=j+1) begin
        IVRecinvoicenrs[j] = -1;
      end;
      rownr = 0;
      IVRecinvoicenrs[rownr] = ainvoicenrs[i];
      IVRecaccnumbers[rownr] = aaccnumbers[i];
      IVRecrecvals[rownr] = IPrw.RecVal;
      IVRecinvdates[rownr] = ainvdates[i];
      IVReccomments[rownr] = IPrw.CustName;
      if (nonblank(IPrw.PayMode)) then begin
        IVRecpaymodes[rownr] = IPrw.PayMode;
      end else begin
        IVRecpaymodes[rownr] = IPr.PayMode;
      end;
      CLInr.Total = IPrw.RecVal;
      for (j=i+1;j<rwcnt;j=j+1) begin
        if (acustcodes[j]==acustcodes[i]) then begin          
          MatRowGet(IPr,j,IP2rw);
          CLInr.Total = IP2rw.RecVal;
          rownr = rownr + 1;
          IVRecinvoicenrs[rownr] = ainvoicenrs[j];
          IVRecaccnumbers[rownr] = aaccnumbers[j];
          IVRecrecvals[rownr] = IP2rw.RecVal;
          IVRecinvdates[rownr] = ainvdates[j];
          IVReccomments[rownr] = IP2rw.CustName;
          if (nonblank(IP2rw.PayMode)) then begin
            IVRecpaymodes[rownr] = IP2rw.PayMode;
          end else begin
            IVRecpaymodes[rownr] = IPr.PayMode;
          end;
        end;
      end;
      IVr.SerNr = IPrw.InvoiceNr;
      if (ReadFirstMain(IVr,1,true)) then begin end;
      CUr.Code = acustcodes[i];
      if (ReadFirstMain(CUr,1,true)) then begin end;
      CLInr.SerNr = IPr.SerNr;
      CLInr.TransDate = IPr.TransDate;
      CLInr.OKFlag = IPr.OKFlag;
      CLInr.ExportedFlag = IPr.ExportedFlag;
      CLInr.NetVal = blankval;
      CLInr.VATVal = blankval;
      CLInr.CUCode = IPrw.CustCode;
      CLInr.CUName = CUr.Name;
      CLInr.Addr0 = CUr.InvAddr0;
      CLInr.Addr1 = CUr.InvAddr1;
      CLInr.Addr2 = CUr.InvAddr2;
      CLInr.Addr3 = CUr.DelAddr0;
      CLInr.Person = "";
      CLInr.Objects = "";
      CLInr.Comment = "";
    end;    
    intdocnr = 1;
    printf = true;
    while (printf) begin  
      formcode = "";
      for (k=doccnt-1;k>=0;k=k-1) begin
        MatRowGet(FDr,k,FDrw);
        if (FindFormcode(IPr.OKFlag,FDrw.Typ)) then begin 
          if (Getformcode(k,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,IPr.SerNr,FDrw.PrintGroupCode,
                        "",intdocnr,"IPVc",formcode)) then
          begin
            goto LBREAK;
          end;
        end;
      end;
LBREAK:;
      if (nonblank(formcode)) then begin
        if (OpenForm(formcode)) then begin
          CommonDocumentFields(RepSpec);
          PrintFormFields(IPr,CLInr,SysFormatRec,LangNrr);
          PrintFormRowFields(CUr,IVRecinvoicenrs,IVRecaccnumbers,IVReccomments,IVRecpaymodes,IVRecrecvals,IVRecinvdates,rownr);
          CloseForm;          
        end else begin
          printf = false;
          MessageBox(1546,formcode);
        end;
      end else begin
        printf = false;
        if (intdocnr==1) then begin
          MessageBox(1624, " " & USetStr(1623));
        end;
      end;
      intdocnr = intdocnr + 1;
    end;
L77:; 
  end;  
LDoCLIn1Form:;
  RETURN;  
END;     

