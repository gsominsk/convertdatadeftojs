external procedure PrintCurrencyCode(string,string);
external procedure PrintValToTextBaseCur(val,Integer,string,Integer,var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);
external function Integer NumberofDocumentPages(string,Integer);
external procedure CommonDocumentFields(record RcVc);

external procedure SelectUnitText(string,string,var string);
external procedure BC39(string,var string);
external procedure ItemBC39(string,var string);
external procedure ItemBCEAN(string,var string);
external procedure ItemBCEAN13(string,var string);
external procedure RussianPaymentNr(LongInt,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure PrintValue(string,val,Integer,record LangNrVc,record SysFormatBlock,Boolean);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);

procedure PrintSM(record RcVc RepSpec,record SMVc SMr,string formcode)
begin
  record SysFormatBlock SFb;
  record LangNrVc LangNrr;
  Integer i,rwcnt,rownr,stp;
  row SMVc SMrw;
  string 255 tstr;
  Boolean Accs;
  record AccVc Accr;
  record CUVc CUr;

  CommonDocumentFields(RepSpec);    
  NumberofDocumentPages(formcode,MatRowCnt(SMr));
  BlockLoad(SFb);  
  GetLangNr("",LangNrr);
  OUTFORMFIELD("F_SERNR",SMr.SerNr);
  OUTFORMFIELD("F_TRANSDATE",SMr.TransDate);
  OUTFORMFIELD("F_TRANSDATEHIJRI",ConvertDate(kCalendarGregorian,SMr.TransDate,kCalendarHijri));
  OUTFORMFIELD("F_REGDATUM",SMr.RegDate);
  OUTFORMFIELD("F_REGDATUMHIJRI",ConvertDate(kCalendarGregorian,SMr.RegDate,kCalendarHijri));
  OUTFORMFIELD("F_COMMENT",SMr.Comment);
  OUTFORMFIELD("F_SIGNATURE",SMr.Sign);
  PrintValue("F_DEBVAL",SMr.DSum,M4Val,LangNrr,SFb,false);
  PrintValue("F_CREDVAL",SMr.CSum,M4NegVal,LangNrr,SFb,false);
  if (FIELDINFORM("F_DEBVALINTEXTBASECUR1")) then begin
    PrintValToTextBaseCur(SMr.DSum,M4Val,"",1,tstr);
    OUTFORMFIELD("F_DEBVALINTEXTBASECUR1",tstr);  
  end;
/*
  if (FIELDINFORM("F_DEBVALINTEXTBASECUR2")) then begin
    PrintValToTextBaseCur(SMr.DSum2,M4Val,"",2,tstr);
    OUTFORMFIELD("F_DEBVALINTEXTBASECUR2",tstr);  
  end;
*/
  if (FIELDINFORM("F_CREDVALINTEXTBASECUR1")) then begin
    PrintValToTextBaseCur(SMr.CSum,M4NegVal,"",1,tstr);
    OUTFORMFIELD("F_CREDVALINTEXTBASECUR1",tstr);  
  end;
/*
  if (FIELDINFORM("F_CREDVALINTEXTBASECUR2")) then begin
    PrintValToTextBaseCur(SMr.CSum2,M4NegVal,"",2,tstr);
    OUTFORMFIELD("F_CREDVALINTEXTBASECUR2",tstr);  
  end;
*/
  PrintValue("F_DIFF",SMr.DiffVal,M4Val,LangNrr,SFb,false);
//  PrintValue("F_DEBVAL2",SMr.DSum2,M4Val,LangNrr,SFb,false);
//  PrintValue("F_CREDVAL2",SMr.CSum2,M4NegVal,LangNrr,SFb,false);
//  PrintValue("F_DIFF2",SMr.Diff2Val,M4Val,LangNrr,SFb,false);
  OUTFORMFIELD("F_REFERENSNUMMER",SMr.RefStr);
//  OUTFORMFIELD("F_STARTDATE",SMr.LastChangeDate);
//  OUTFORMFIELD("F_STARTDATEHIJRI",ConvertDate(kCalendarGregorian,SMr.LastChangeDate,kCalendarHijri));
//  OUTFORMFIELD("F_SEQUENCE",SMr.SeqNr);

  stp = 1;
  rwcnt = MatRowCnt(SMr);  
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    switch (stp) begin
      case 1:
        OUTFORMFIELD("F_TRACCOUNT",SMrw.AccNumber);
        OUTFORMFIELD("F_ROWOBJECT",SMrw.Objects);
        PrintValue("F_DEBVALROW",SMrw.DebVal,M4Val,LangNrr,SFb,false);
        PrintValue("F_DEBVAL2ROW",SMrw.DebVal2,M4Val,LangNrr,SFb,false);
        PrintValue("F_DEBVALCURROW",SMrw.CurDebVal,M4Val,LangNrr,SFb,false);
        PrintValue("F_CREDVALROW",SMrw.CredVal,M4Val,LangNrr,SFb,false);
        PrintValue("F_CREDVAL2ROW",SMrw.CredVal2,M4Val,LangNrr,SFb,false);
        PrintValue("F_CREDVALCURROW",SMrw.CurCredVal,M4Val,LangNrr,SFb,false);
        OUTFORMFIELD("F_KOMMENTAR",SMrw.Comment);
        OUTFORMFIELD("F_OTHERROW",SMrw.ExtraComment);
        PrintCurrencyCode("F_VALUTA",SMrw.CurncyCode);
//        OUTFORMFIELD("F_CONTACT",SMrw.CompCode);
//        CUr.Code = SMrw.CompCode;
//        if (ReadFirstMain(CUr,1,true)) then begin end;
//        OUTFORMFIELD("F_NAMN",CUr.Name);
//        OUTFORMFIELD("F_UPDATEMARKDATE",SMrw.UpdDate);
        GetFullCurncyRateText(true,tstr,SMrw.FrRate,SMrw.ToRateB1,SMrw.ToRateB2,SMrw.BaseRate1,SMrw.BaseRate2);         
        OUTFORMFIELD("F_RATE",tstr);
        GetFullCurncyRateText(false,tstr,SMrw.FrRate,SMrw.ToRateB1,SMrw.ToRateB2,SMrw.BaseRate1,SMrw.BaseRate2);         
        OUTFORMFIELD("F_BASERATE",tstr);
//        PrintValue("F_ANTAL",SMrw.Qty,M4Val,LangNrr,SFb,false);
//        OUTFORMFIELD("F_MOMS",SMrw.VATCode);
//        OUTFORMFIELD("F_ACCSHORTCODE",SMrw.ACShort);
//        OUTFORMFIELD("F_TAXACC",SMrw.TAccNumber);
//        if (SMrw.SerNr>0) then begin
//          OUTFORMFIELD("F_ROWDOCNR",SMrw.SerNr);
//        end;
    end;
    EndFormRow;
  end;
  return;
end;

global
procedure DoSMForm(record RcVc RepSpec,record SMVc SMr)
begin
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Boolean printf;
  Integer intdocnr;
  string 30 formcode;
  Integer i,rwcnt;
    
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoSMForm;
  end;
  rwcnt = MatRowCnt(FDr);
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,SMr.SerNr,FDrw.PrintGroupCode,
                      "",intdocnr,"SMVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin
        PrintSM(RepSpec,SMr,formcode);
        CloseForm;
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoSMForm:;  
  return;
end;

