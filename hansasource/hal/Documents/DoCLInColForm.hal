external procedure PrintCurrencyName(string,string);
external procedure PrintCurrencyCode(string,string);
external procedure OutAddress(string,string,string,string,string,string,string);
external function Boolean FindFormcode(Integer,Integer);
external function val MulRateToBase2(var string,val,val,val,val,val,val,roundmode);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean Getformcode(Integer,Integer,string,string,string,LongInt,LongInt,string,string,Integer,string,var string);
external procedure GetLangNr(string,var record LangNrVc);
external procedure GetVATCodeAccNumbers(string,var string,var string);
external procedure CommonDocumentFields(record RcVc);
external procedure GetCorspAccNumber(string,var string);
external procedure ValToText(val,Integer,string,string,var string);
external procedure GetUserName(string,var string);
external procedure GetMonthText(string,Date,var string);
external function Boolean GetPMTAX(string,var val);

procedure PrintCollectionRow(LongInt sernr,string custcode,string custname,Date transdate,
                             string salesaccs,string curncycode,val sum4,val basesum4,
                             record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  string 255 tstr;
  
  OUTFORMFIELD("F_FAKTNR",sernr);
  OUTFORMFIELD("F_SUBCUSTCODE",custcode);
  OUTFORMFIELD("F_SUBCUSTNAME",custname);
  OUTFORMFIELD("F_TRANSDATUM",transdate);
  OUTFORMFIELD("F_SALESACC",salesaccs);
  tstr = ValToString(basesum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);    
  OUTFORMFIELD("F_BASE1ROWTOT",tstr);
  tstr = ValToString(sum4,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);    
  OUTFORMFIELD("F_ROWTOT",basesum4);
  PrintCurrencyCode("F_SUBVALUTA",curncycode);
  if (FIELDINFORM("F_SUBVALUTANAMN")) then begin
    PrintCurrencyName("F_SUBVALUTANAMN",tstr);
  end;  
  RETURN;
END;

procedure MakeSalesAccString(record IVVc IVr,var string salesaccs)
BEGIN
  row IVVc IVrw;
  Integer i,rwcnt;
  string 10 svatacc,pvatacc;

  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    if (SetInSet(IVrw.SalesAcc,salesaccs)==false) then begin
      if (nonblank(salesaccs)) then begin
        salesaccs = salesaccs & ",";
      end;  
      salesaccs = salesaccs & IVrw.SalesAcc;
    end; 
    GetVATCodeAccNumbers(IVrw.VATCode,svatacc,pvatacc);
    if (SetInSet(svatacc,salesaccs)==false) then begin
      if (nonblank(salesaccs)) then begin
        salesaccs = salesaccs & ",";
      end;  
      salesaccs = salesaccs & svatacc;
    end; 
  end;   
  RETURN;
END;

procedure PrintCollectionInvoices(LongInt clinsernr,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record CLInIVVc CLInIVr;
  record IVVc IVr;
  Boolean TrHs,testf;
  string 255 salesaccs;

  TrHs = true;
  CLInIVr.CLInNr = clinsernr;
  while (LoopMain(CLInIVr,1,TrHs)) begin
    if (CLInIVr.CLInNr!=clinsernr) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      if (CLInIVr.FileName=="IVVc") then begin
        salesaccs = "";
        IVr.SerNr = CLInIVr.SerNr;
        if (ReadFirstMain(IVr,1,true)) then begin
          if (FIELDINFORM("F_SALESACC")) then begin
            MakeSalesAccString(IVr,salesaccs);
          end;
          PrintCollectionRow(IVr.SerNr,IVr.CustCode,IVr.Addr0,IVr.TransDate,salesaccs,IVr.CurncyCode,IVr.Sum4,IVr.BaseSum4,SysFormatRec,LangNrr);
          EndFormRow;          
        end;
      end;  
    end;
  end;
  RETURN;
END;

procedure PrintCLInColInvoice(LongInt clinsernr,LongInt ivsernr,string filename,record SysFormatBlock SysFormatRec,record LangNrVc LangNrr)
BEGIN
  record IVVc IVr;
  string 255 salesaccs;
  record CLInIVVc CLInIVr;
  Boolean TrHs;
  
  if (filename=="IVVc") then begin
    IVr.SerNr = ivsernr;
    if (ReadFirstMain(IVr,1,true)) then begin
      salesaccs = "";
      if (FIELDINFORM("F_SALESACC")) then begin
        MakeSalesAccString(IVr,salesaccs);
      end;
      PrintCollectionRow(IVr.SerNr,IVr.CustCode,IVr.Addr0,IVr.TransDate,salesaccs,IVr.CurncyCode,IVr.Sum4,IVr.BaseSum4,SysFormatRec,LangNrr);
//      if (CLInIVRecordExists(clinsernr,IVr.SerNr,"IVVc")==false) then begin
//        UpdateCLInIV(clinsernr,IVr.SerNr,"IVVc");
//      end;
    end;  
  end;
  if (filename=="IPVc") then begin
    TrHs = true;
    CLInIVr.CLInNr = clinsernr;
    while (LoopMain(CLInIVr,1,TrHs)) begin
      if (CLInIVr.CLInNr!=clinsernr) then begin
        TrHs = false;
      end;
      if (TrHs) then begin
        if (CLInIVr.FileName=="IVVc") then begin
          IVr.SerNr = CLInIVr.SerNr;
          if (ReadFirstMain(IVr,1,true)) then begin
            if (FIELDINFORM("F_SALESACC")) then begin
              MakeSalesAccString(IVr,salesaccs);
            end;
            PrintCollectionRow(IVr.SerNr,IVr.CustCode,IVr.Addr0,IVr.TransDate,salesaccs,IVr.CurncyCode,IVr.Sum4,IVr.BaseSum4,SysFormatRec,LangNrr);
            EndFormRow;          
          end;
        end;
      end;
    end;
  end;
  RETURN;
END;

procedure CashCollectionInvoices(LongInt clinsernr,LongInt fsernr,string ffilename,record LangNrVc LangNrr)
BEGIN
  Integer mode;
  record SysFormatBlock SysFormatRec;
  
  BlockLoad(SysFormatRec);
  mode = 0;
  if ((fsernr!=-1) and (nonblank(ffilename))) then begin
    mode = 1;
  end;
  
  switch (mode) begin
    case 0: 
      PrintCollectionInvoices(clinsernr,SysFormatRec,LangNrr);
    case 1:
      PrintCLInColInvoice(clinsernr,fsernr,ffilename,SysFormatRec,LangNrr);
  end;
  RETURN;  
END;     

global
procedure DoCLInColForm(record RcVc RepSpec,record CLInVc CLInr)
BEGIN
  string 255 tstr;
  val t;
  record UserVc Userr;
  record FormDefVc FDr;
  row FormDefVc FDrw;
  Integer i,rwcnt;
  record LangNrVc LangNrr;  
  Boolean printf,langf;
  Integer intdocnr;
  string 30 formcode,langcode;
  record SysFormatBlock SysFormatRec;
  
  BlockLoad(SysFormatRec);  
  GetLangNr(CLInr.LangCode,LangNrr);  
  if (CLInr.OKFlag==0) then begin
//    goto LDoCLInColForm;//?
  end;
  FDr.repname = RepSpec.repname;
  FDr.shortname = RepSpec.shortname;
  if (ReadFirstMain(FDr,1,true)==false) then begin
    MessageBox(1624, " " & USetStr(1623));
    goto LDoCLInColForm;
  end;
  rwcnt = MatRowCnt(FDr);
  langcode = CLInr.LangCode;
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(FDr,i,FDrw);
    if (FDrw.LangCode==langcode) then begin
      i = -1;
      langf = true;
    end;
  end;
  if (langf==false) then begin langcode = ""; end;
  intdocnr = 1;
  printf = true;
  while (printf) begin  
    formcode = "";
    for (i=rwcnt-1;i>=0;i=i-1) begin
      MatRowGet(FDr,i,FDrw);
      if (Getformcode(i,FDrw.intdocnr,FDrw.FPCode,FDrw.UserGroup,FDrw.LangCode,FDrw.SerNr,CLInr.SerNr,FDrw.PrintGroupCode,
                      langcode,intdocnr,"CLInVc",formcode)) then
      begin
        goto LBREAK;
      end;
    end;
LBREAK:;
    if (nonblank(formcode)) then begin
      if (OpenForm(formcode)) then begin  
        CommonDocumentFields(RepSpec);
        if (CLInr.FSerNr==-1) then begin
          tstr = USetStr(2046);
        end else begin
          tstr = USetStr(2001);
        end;
        if (FIELDINFORM("F_BASE1BETALA")) then begin
          t = MulRateToBase1(CLInr.CurncyCode,CLInr.Total,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
          tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_BASE1BETALA",tstr);
        end;
        if (FIELDINFORM("F_BASE2BETALA")) then begin
          t = MulRateToBase2(CLInr.CurncyCode,CLInr.Total,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
          tstr = ValToString(t,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
          OUTFORMFIELD("F_BASE2BETALA",tstr);
        end;
        PrintCurrencyCode("F_VALUTA",CLInr.CurncyCode);
        if (FIELDINFORM("F_VALUTANAMN")) then begin
          PrintCurrencyName("F_VALUTANAMN",CLInr.CurncyCode);
        end;  
        if (FIELDINFORM("F_SECACC")) then begin
          GetCorspAccNumber(CLInr.CorspCode,tstr);
          OUTFORMFIELD("F_SECACC",tstr);
        end;  
        OUTFORMFIELD("F_OFFICIALSERNO",CLInr.OfficialSerNr);
        OUTFORMFIELD("F_TRANSDATE",CLInr.TransDate);
        OUTFORMFIELD("F_SERNR",CLInr.SerNr);
        tstr = ValToString(CLInr.NetVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_SUMMA",tstr);
        tstr = ValToString(CLInr.VATVal,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_MOMS",tstr);
        tstr = ValToString(CLInr.Total,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_ATTBETALA",tstr);
        if (FIELDINFORM("F_ATTBETALATEXT")) then begin
          ValToText(CLInr.Total,M4Val,CLInr.CurncyCode,"",tstr);
          OUTFORMFIELD("F_ATTBETALATEXT",tstr);        
        end;          
        OUTFORMFIELD("F_COMMENT",CLInr.Comment);
        OUTFORMFIELD("F_PERSON",CLInr.Person);
        if (FIELDINFORM("F_SALJARNAMN")) then begin
          GetUserName(CLInr.Person,tstr);
          OUTFORMFIELD("F_SALJARNAMN",tstr);
        end;  
        OutAddress("F_ADRESS",CLInr.CUName,CLInr.Addr0,CLInr.Addr1,CLInr.Addr2,CLInr.Addr3,CLInr.Addr4);
        OUTFORMFIELD("F_KUNDNR",CLInr.CUCode);
        OUTFORMFIELD("F_KUNDNAMN",CLInr.CUName);
        OUTFORMFIELD("F_ADDR1",CLInr.Addr0);
        OUTFORMFIELD("F_ADDR2",CLInr.Addr1);
        OUTFORMFIELD("F_ADDR3",CLInr.Addr2);
        OUTFORMFIELD("F_INVADDR3",CLInr.Addr3);
        OUTFORMFIELD("F_INVADDR4",CLInr.Addr4);
        if (FIELDINFORM("F_SIGNATURE")) then begin
          GetUserName(CurrentUser,tstr);
          OUTFORMFIELD("F_SIGNATURE",tstr);
        end;  
        Userr.Code = CLInr.Person;
        if (ReadFirstMain(Userr,1,true)) then begin end;
        OUTFORMFIELD("F_OURREF",Userr.CurOurContact);
        OUTFORMFIELD("F_PERSONACCOUNT",Userr.PersAcc);
        OUTFORMFIELD("F_PERSONID",Userr.IDCode);
        OUTFORMFIELD("F_PERSONCOMMENT",Userr.Comment);
        OUTFORMFIELD("F_PERSONSPEC",Userr.Spec);
        OUTFORMFIELD("F_DATEDAY",GetDay(CLInr.TransDate));
        OUTFORMFIELD("F_DATEMONTH",GetMonth(CLInr.TransDate));
        OUTFORMFIELD("F_DATEYEAR",GetYear(CLInr.TransDate));
        GetMonthText(CLInr.LangCode,CLInr.TransDate,tstr);
        OUTFORMFIELD("F_DATEMONTHTEXT",tstr);
        if (FIELDINFORM("F_PAYMODETAXPERC")) then begin
          if (GetPMTAX(CLInr.PayMode,t)) then begin end;
          OUTFORMFIELD("F_PAYMODETAXPERC",t);
        end;  
        tstr = ValToString(CLInr.TAX1Sum,M4Val,SysFormatRec.thousSep,SysFormatRec.decimalPt,LangNrr.CutDecimals);
        OUTFORMFIELD("F_PAYMODETAXTOTAL",tstr);
//        OUTFORMFIELD("F_PAYMODETAXVAL",CLInr.Total);
        OUTFORMFIELD("F_REFERENSNUMMER",CLInr.RefStr);
        CashCollectionInvoices(CLInr.SerNr,CLInr.FSerNr,CLInr.FileName,LangNrr);
        CloseForm;          
      end else begin
        printf = false;
        MessageBox(1546,formcode);
      end;
    end else begin
      printf = false;
      if (intdocnr==1) then begin
        MessageBox(1624, " " & USetStr(1623));
      end;
    end;
    intdocnr = intdocnr + 1;
  end;
LDoCLInColForm:;
  RETURN;  
END;     
