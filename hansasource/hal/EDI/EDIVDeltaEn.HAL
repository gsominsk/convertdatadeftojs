external procedure ExportTOT(val, val,LongInt);external procedure ExportIRF(LongInt,Date);external procedure ValToHALString(val,string,var string);external procedure DateToString2(Date,var string,string,string,string);external updating procedure UpdateFileNr();external procedure CalculateVAT(val,string,Integer,var val,var val, var string);external procedure NewSTLInfo(var record SMVc,string,val,val,Integer,val);external procedure ExportSTLs(record SMVc,var LongInt,LongInt);external procedure ExportVRSs(record SMVc);external function LongInt DeltaExportBegin(string,var string); procedure ExportTLR(var LongInt stlcnt,val tsum,val vatv) BEGIN  string 255 tstr;  val t;  NewLine;  ExportPadString("TLR",4," ",false);      tstr = stlcnt;  ExportPadString(tstr,4," ",true);  ExportPadString(" ",1," ",true);            ValToHALString(tsum,"1",tstr);  ExportPadString(tstr,10," ",true);            ExportPadString(" ",1," ",true);              ExportPadString("0",10," ",true);           ExportPadString(" ",1," ",true);               ExportPadString("0",10," ",true);           ExportPadString(" ",1," ",true);               ExportPadString(" ",10," ",true);           ExportPadString(" ",1," ",true);               ExportPadString("0",10," ",true);           ExportPadString(" ",1," ",true);               ExportPadString(tstr,10," ",true);          ExportPadString(" ",1," ",true);               ExportPadString("0",10," ",true);           ExportPadString(" ",1," ",true);               ExportPadString(tstr,10," ",true);          ExportPadString(" ",1," ",true);                ExportPadString("0",10," ",true);            ExportPadString(" ",1," ",true);              ExportPadString(tstr,10," ",true);            NewLine;  ExportPadString("TLRA",4," ",false);      t = vatv + tsum;    ValToHALString(t,"1",tstr);    ExportPadString(tstr,10," ",true);            RETURN;END;procedure ExportILD(var LongInt ildcnt,Integer rownr,string artcode,val rowsum,val discount,val vatprc,string vatname,val qty,val price)BEGIN  string 255 tstr;  record INVc INr;     INr.Code = artcode;  if (ReadFirstMain(INr,1,true)) then begin  end;  NewLine;  ExportPadString("ILD ",4," ",false);    tstr = ildcnt;  ExportPadString(tstr,4,"0",true);  ExportPadString(" ",1," ",false);    tstr = rownr;  ExportPadString(tstr,4,"0",true);  ExportPadString(" ",1," ",false);    ExportPadString(INr.BarCode,13," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(INr.Code,30," ",false);  ExportPadString(" ",14," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(" ",13," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(" ",15," ",true);    NewLine;  ExportPadString("ILDA",4," ",false);      ExportPadString(INr.AlternativeCode,30," ",false);  ExportPadString(" ",1," ",false);    ExportPadString(INr.Unittext,4," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(" ",8," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(" ",6," ",true);  ExportPadString(" ",1," ",false);    ValToHALString(qty,"1",tstr);      ExportPadString(tstr,6," ",true);     ExportPadString(" ",1," ",false);         ExportPadString(" ",13," ",false);   ExportPadString(" ",1," ",false);       ExportPadString(" ",6," ",false);  ExportPadString(" ",1," ",false);         ValToHALString(price,"0",tstr);  ExportPadString(tstr,9," ",true);// cost price - vat  ExportPadString(" ",1," ",false);    ExportPadString(" ",6," ",false);  ExportPadString(" ",1," ",false);    ValToHALString(rowsum,"0",tstr);  ExportPadString(tstr,11," ",true);// extra cost - vat   ExportPadString(" ",1," ",false);    ExportPadString(vatname,1," ",true);//should be from list 12        ExportPadString(" ",1," ",false);    ValToHALString(vatprc,"2",tstr);  ExportPadString(tstr,6," ",true);//vat rate  NewLine;  ExportPadString("ILDB",4," ",false);             ExportPadString(" ",4," ",false);  ExportPadString(" ",1," ",false);      ExportPadString(INr.Name,40," ",false);  ExportPadString(" ",1," ",false);      ExportPadString(" ",22," ",false);      ExportPadString(" ",1," ",false);  ExportPadString(" ",18," ",false);      ExportPadString(" ",1," ",false);      ExportPadString(" ",8," ",true);  ExportPadString(" ",1," ",false);      ExportPadString(" ",8," ",true);            ExportPadString(" ",1," ",false);      ExportPadString(" ",14," ",true);  ExportPadString(" ",1," ",false);      ExportPadString(" ",9," ",true);  NewLine;  ExportPadString("ILDC",4," ",false);      ValToHALString(price,"0",tstr);  ExportPadString(tstr,11," ",true);  ExportPadString(" ",1," ",false);      ExportPadString("0",9," ",true);          ExportPadString(" ",1," ",false);      ExportPadString("0",6," ",true);  ExportPadString(" ",1," ",false);      ExportPadString("0",10," ",true);          ExportPadString(" ",1," ",false);      ExportPadString(" ",4," ",false);  ExportPadString(" ",1," ",false);      ExportPadString(" ",4," ",false);          ExportPadString(" ",1," ",false);  ExportPadString(" ",1," ",false);     ExportPadString(" ",1," ",false);     ExportPadString(" ",1," ",false);     ildcnt = ildcnt + 1;  RETURN;END;procedure ExportODD(var LongInt oddcnt,LongInt ordnr)BEGIN  string 255 tstr;  record ORVc ORr;  record SHVc SHr;  record CUVc CUr;      NewLine;  ExportPadString("ODD ",4," ",false);    tstr = oddcnt;  ExportPadString(tstr,4,"0",true);    ExportPadString(" ",1,"0",true);    if (ordnr<>-1) then begin    ORr.SerNr = ordnr;    if (ReadFirstMain(ORr,1,true)) then begin    end;    SHr.OrderNr = ordnr;    if (ReadFirstKey("OrderKey",SHr,1,true)) then begin    end;  end;     ExportPadString(ORr.CustOrdNr,17," ",false);  ExportPadString(" ",1," ",false);    ExportPadString(" ",10," ",false);  ExportPadString(" ",1," ",false);    ExportPadString(" ",6," ",true);  ExportPadString(" ",1," ",false);    DateToString2(ORr.OrdDate,tstr,"Y","M","D");    ExportPadString(tstr,6," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(" ",6," ",false);  ExportPadString(" ",1," ",false);      tstr = ordnr;  ExportPadString(tstr,10,"0",true);          ExportPadString(" ",1," ",false);   ExportPadString(" ",6," ",false);    ExportPadString(" ",1," ",false);   DateToString2(SHr.ShipDate,tstr,"Y","M","D");    ExportPadString(tstr,6," ",true);    ExportPadString(" ",1," ",false);    ValToHALString(SHr.TotQty,"1",tstr);  ExportPadString(tstr,10," ",true);  ExportPadString(" ",1," ",false);    ExportPadString(" ",10," ",true);  NewLine;  ExportPadString("ODDA",4," ",false);    tstr = SHr.SerNr;    ExportPadString(tstr,10,"0",true);  ExportPadString(" ",1," ",false);      ExportPadString(" ",6," ",true);  ExportPadString(" ",1," ",false);      ExportPadString(" ",6," ",true);  ExportPadString(" ",1," ",false);      ExportPadString(" ",40," ",false);   ExportPadString(" ",1," ",false);             CUr.Code = SHr.CustCode;  if (ReadFirstMain(CUr,1,true)) then begin    tstr = CUr.ANACode;  end;  ExportPadString(tstr,13," ",true);    ExportPadString(" ",1," ",false);            ExportPadString(SHr.CustCode,17," ",true);  ExportPadString(" ",1," ",false);      ExportPadString("0",13," ",true);  NewLine;  ExportPadString("ODDB",4," ",false);    ExportPadString(" ",17," ",false);  ExportPadString("0",10," ",true);  NewLine;  ExportPadString("ODDC",4," ",false);    ExportPadString(" ",17," ",false);  ExportPadString(" ",10," ",false);  oddcnt = oddcnt + 1;    RETURN;END;procedure ExportPYT(string paydeal,Date paydate)BEGIN  string 255 tstr,paytext;  record PDVc PDr;    PDr.Code = paydeal;  if (ReadFirstMain(PDr,1,true)) then begin    paytext = PDr.pdComment;  end;  ExportPadString("PYT ",4," ",true);  ExportPadString(" ",1," ",false);  ExportPadString(paytext,40," ",false);  ExportPadString(" ",1," ",false);  DateToString2(paydate,tstr,"Y","M","D");  ExportPadString(tstr,6," ",true);  NewLine;  RETURN;END;procedure ExportCLO(string cuanacode,string custcode,string custname,string shipaddr0,string shipaddr1,string shipaddr2,string shipaddr3,string orgcustomer)BEGIN  record CUVc CUr;   string 100 cucode,cuname,cuaddr0,cuaddr1,cuaddr2,cuaddr3,anacode;  Boolean orgcustf;    orgcustf = false;  if (nonblank(orgcustomer)) then begin    CUr.Code = orgcustomer;    if (ReadFirstMain(CUr,1,true)) then begin      cucode = CUr.Code;      cuname = CUr.Name;      cuaddr0 = CUr.InvAddr0;      cuaddr1 = CUr.InvAddr1;      cuaddr2 = CUr.InvAddr2;           cuaddr3 = CUr.DelAddr0;      anacode = CUr.ANACode;             orgcustf = true;    end;  end;        if (orgcustf==false) then begin    cucode = custcode;    cuname = custname;    cuaddr0 = shipaddr0;    cuaddr1 = shipaddr1;    cuaddr2 = shipaddr2;      cuaddr3 = shipaddr3;      anacode = cuanacode;  end;  NewLine;  ExportPadString("CLO ",4," ",false);  ExportPadString(anacode,13," ",false);  ExportPadString(" ",1," ",false);  ExportPadString(cucode,17," ",false);  ExportPadString(" ",1," ",false);  ExportPadString(" ",17," ",false);  ExportPadString(" ",1," ",false);  ExportPadString(cuname,40," ",false);  NewLine;    ExportPadString("CLOA",4," ",false);    ExportPadString(cuaddr0,35," ",false);  ExportPadString(" ",1," ",false);  ExportPadString(cuaddr1,35," ",false);  ExportPadString(" ",1," ",false);  ExportPadString(cuaddr2,35," ",false);  NewLine;  ExportPadString("CLOB",4," ",false);      ExportPadString(cuaddr3,35," ",false);  ExportPadString(" ",8," ",false);      RETURN;END;  global updating procedure EDIVDeltaEn(record RcVc RepSpec)BEGIN  record EDIIVVc IVr;  row EDIIVVc IVrw;  LongInt cnt,oddcnt,ildcnt,stlcnt,invcnt;  LongInt afr,ato;  LongInt batchnr;  Integer i,rwcnt;  string 255 tstr,vatname,cuanacode;  Boolean testf,found,headexpf;  val vatv,vatprc;  val TotSum,TotVatSum;  record SMVc SMr;  record SMVc SMTotr;  string 255 keystr;/*  record EDIFileBlock EDIsett;  BlockLoad(EDIsett);*/  if ((blank(RepSpec.f2)) and (RepSpec.FirstVer<1)) then begin goto L99; end;      stlcnt = 1; oddcnt = 1;  invcnt = 0;  headexpf = false;  afr = FirstInRange(RepSpec.f1,20);  ato = LastInRange(RepSpec.f1,20);  if (RepSpec.flags[1]==0) then begin     keystr = "CustCode";     IVr.OrgCust = RepSpec.f2;  end;  if (RepSpec.flags[1]==1) then begin     keystr = "OrgCust";     IVr.CustCode = RepSpec.f2;  end;  IVr.SerNr = afr;  found = true;    while (LoopKey(keystr,IVr,2,found)) begin    RecordNew(SMr);    testf = true;    if (ato<>-1) then begin      if (IVr.SerNr>ato) then begin        testf = false;      end;    end;    if (RepSpec.flags[1]==0) then begin      if (nonblank(IVr.CustCode)) then begin /* you can now select a batch number, they have the same customer */        if (IVr.CustCode<>RepSpec.f2) then begin          found = false;                end;      end;    end;    if (RepSpec.flags[1]==1) then begin      if (nonblank(IVr.OrgCust)) then begin /* you can now select a batch number, they have the same customer */        if (IVr.OrgCust<>RepSpec.f2) then begin          found = false;                end;      end;    end;/* They are not even created....    if (EDIsett.SkipCreditInv==1) then begin      if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin        testf = false;      end;    end;*/    If (IVr.Invalid == 1) then begin      testf = false;    end;    if (IVr.Prntdf<>0 and RepSpec.flags[0]==0) then begin      testf = false;       end;    if (DateInRange(IVr.TransDate,RepSpec.sStartDate,Repspec.sEndDate)==false) then begin      testf = false;    end;    if (RepSpec.FirstVer<>-1) then begin      if (RepSpec.FirstVer<>IVr.BatchNr) then begin        testf = false;      end;    end;    if (found==false) then begin testf = false; end;    if (testf) then begin      if (headexpf==false) then begin        batchnr = DeltaExportBegin(RepSpec.f2,cuanacode);        if (batchnr==-1) then begin goto L99; end;            headexpf = true;       end;      invcnt = invcnt + 1;      ildcnt = 0;           ExportCLO(cuanacode,IVr.CustCode,IVr.Addr0,IVr.ShipAddr0,IVr.ShipAddr1,IVr.ShipAddr2,IVr.ShipAddr3,IVr.OrgCust);      ExportIRF(IVr.SerNr,IVr.InvDate);      ExportPYT(IVr.PayDeal,IVr.PayDate);      ExportODD(oddcnt,IVr.OrderNr);            rwcnt = MatRowCnt(IVr);      for (i=0;i<rwcnt;i=i+1) begin        MatRowGet(IVr,i,IVrw);        CalculateVAT(IVrw.Sum,IVrw.VATCode,IVr.InclVAT,vatv,vatprc,vatname);                ExportILD(ildcnt,i,IVrw.ArtCode,IVrw.Sum,IVrw.vRebate,vatprc,vatname,IVrw.Quant,IVrw.Price);        NewSTLInfo(SMr,IVrw.VATCode,IVrw.Price,IVrw.Quant,IVr.InclVAT,vatprc);        NewSTLInfo(SMTotr,IVrw.VATCode,IVrw.Price,IVrw.Quant,IVr.InclVAT,vatprc);      end;        vatname = " ";      vatprc = 0;      ExportSTLs(SMr,stlcnt,ildcnt);      ExportTLR(stlcnt,IVr.Sum1,IVr.Sum3);      TotSum = TotSum + IVr.Sum1;      TotVatSum = TotVatSum + IVr.Sum3;      if ((IVr.Prntdf==0) or (IVr.BatchNr!=batchnr)) then begin        IVr.Prntdf = 1;        IVr.BatchNr = batchnr;        testf = RecordStore(IVr,true);         end;    end;    end;  if (headexpf) then begin    ExportVRSs(SMTotr);      ExportTOT(TotSum,TotVatSum,invcnt);    UpdateFileNr;  end;  L99:;  RETURN;END;  