#ifdef HAL//external procedure ValToHALString(val,string,var string);external procedure GetVATproc(string,Integer,var val);functionBoolean CheckDigitMatch(string tstr,Integer i)BEGIN  Boolean res;    res = false;  if (CharacterMatch(tstr,"9",i) or CharacterMatch(tstr,"8",i) or CharacterMatch(tstr,"7",i) or CharacterMatch(tstr,"6",i) or      CharacterMatch(tstr,"5",i) or CharacterMatch(tstr,"4",i) or CharacterMatch(tstr,"3",i) or CharacterMatch(tstr,"2",i) or      CharacterMatch(tstr,"1",i) or CharacterMatch(tstr,"0",i)) then   begin    res = true;  end;      CheckDigitMatch = res;  RETURN;END; procedure SplitAddress(string addr,var string pnr,var string town)BEGIN    string 255 t2,tstr;    Integer i,cp;    pnr = "";    tstr = addr;    cp = 1;    for (i=1;i<=len(tstr);i=i+1) begin      if (CheckDigitMatch(tstr,i)==false) then begin        cp = i-1;        goto L22;      end;    end;L22:;    if (cp>0) then begin      t2 = Left(tstr,cp);    end else begin      t2 = " ";    end;      pnr = t2;    tstr = addr;    t2 = Right (tstr,len(tstr)-(cp+1));    town = t2;    RETURN;END;globalprocedure IntradeNewLine(var Integer rowcnt)begin  rowcnt = rowcnt + 1;  NewLine;  return;end;globalprocedure IntradeExportUNH(LongInt cnt,var Integer rowcnt)BEGIN  ExportPadString("UNH",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString(" ",3," ",false);//it was 7    ExportPadString(cnt,11," ",false);  ExportPadString("INVOIC",6," ",false);  ExportPadString("1  ",3," ",false);  ExportPadString("911",3," ",false);  ExportPadString("UN",2," ",false);  ExportPadString("FI0030",6," ",false);  ExportPadString("",35," ",false);  ExportPadString("00",2," ",false);  ExportPadString("",1," ",false);  IntradeNewLine(rowcnt);  return;end;globalprocedure IntradeExportBGM(record EDIIVVc IVr,var Integer rowcnt)BEGIN  record CUVc CUr;  Boolean cufoundf;    CUr.Code = IVr.OrgCust;  cufoundf = ReadFirstMain(CUr,1,true);  ExportPadString("BGM",3," ",false);    ExportPadString("01",2," ",false);    if (blank(IVr.OrgCust)) then begin    if (IVr.InvType!=kInvoiceTypeCredit and IVr.InvType!=kInvoiceTypeCreditSpecialSales) then begin      ExportPadString("380",3," ",false);    end else begin      ExportPadString("381",3," ",false);    end;  end else begin  if (IVr.InvType!=kInvoiceTypeCredit and IVr.InvType!=kInvoiceTypeCreditSpecialSales) then begin    ExportPadString("ZKA",3," ",false);  end else begin    ExportPadString("ZKH",3," ",false);  end;  end;    ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",35," ",false);  ExportPadString("" & IVr.SerNr,31," ",false);  ExportPadString("",4," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportDTM(Date orgdat,LongInt addon,Integer ver,var Integer rowcnt)BEGIN  string 255 tstr;  Date dat;  ExportPadString("DTM",3," ",false);    if (ver==1) then begin // Invoice Date    ExportPadString("01",2," ",false);      ExportPadString("3",3," ",false);    tstr = DateToString(orgdat,"YYYYMMDD");    ExportPadString(tstr,35," ",false);    ExportPadString("102",3," ",false);  end;  if (ver==2) then begin // Trans Date    ExportPadString("01",2," ",false);      ExportPadString("7",3," ",false);    tstr = DateToString(orgdat,"YYYYMMDD");    ExportPadString(tstr,35," ",false);    ExportPadString("102",3," ",false);  end;  if (ver==3) then begin// Due Date    ExportPadString("01",2," ",false);      ExportPadString("13",3," ",false);    tstr = DateToString(orgdat,"YYYYMMDD");    ExportPadString(tstr,35," ",false);    ExportPadString("102",3," ",false);  end;  if (ver==4) then begin // Cash Discount Date    ExportPadString("01",2," ",false);      ExportPadString("12",3," ",false);    dat = AddDay(orgdat,addon);    tstr = DateToString(dat,"YYYYMMDD");    ExportPadString(tstr,35," ",false);    ExportPadString("102",3," ",false);  end;  if (ver==5) then begin // Delivery Date    ExportPadString("01",2," ",false);      ExportPadString("171",3," ",false);    tstr = DateToString(orgdat,"YYYYMMDD");    ExportPadString(tstr,35," ",false);    ExportPadString("102",3," ",false);  end;  IntradeNewLine(rowcnt);  RETURN;END;procedure IntradeExportRFFDel(LongInt sernr,var Integer rowcnt)BEGIN  ExportPadString("RFF",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("PK",3," ",false);  ExportPadString("" & sernr,35," ",false);  ExportPadString("",6," ",false);  IntradeNewLine(rowcnt);  return;end;globalprocedure IntradeExportRFF(record EDIIVVc IVr,Integer ver,var Integer rowcnt)BEGIN  string 255 tstr;  record SHVc SHr;  Boolean foundf;  if (ver==1) then begin // Customer Order Number    ExportPadString("RFF",3," ",false);      ExportPadString("01",2," ",false);      ExportPadString("CO",3," ",false);    ExportPadString(IVr.CustOrdNr,35," ",false);    ExportPadString("",6," ",false);    IntradeNewLine(rowcnt);  end;  if (ver==2) then begin // Bank Reference    ExportPadString("RFF",3," ",false);      ExportPadString("01",2," ",false);      ExportPadString("PQ",3," ",false);    tstr = StripNonDigits(IVr.CalcFinRef);              ExportPadString(tstr,35," ",false);    IntradeNewLine(rowcnt);  end;  if (ver==3) then begin // Delivery Journal No.    foundf = true;    SHr.OrderNr = IVr.OrderNr;    while (LoopKey("OrderKey",SHr,1,foundf)) begin      if (SHr.OrderNr<>IVr.OrderNr) then begin        foundf = false;      end;      if (foundf) then begin        IntradeExportRFFDel(SHr.SerNr,rowcnt);        IntradeExportDTM(SHr.ShipDate,0,5,rowcnt); // Discount Date       end;    end;  end;  RETURN;END;globalprocedure IntradeExportNAD(record EDIIVVc IVr,Integer ver,var Integer rowcnt)BEGIN  record CUVc CUr;  string 255 tstr,t1,t2;  String 20 cust;  Date dat;  Boolean cufoundf;  record EDIFileBlock EDIRec;  record CYBlock CYRec;  ExportPadString("NAD",3," ",false);    if (ver==1) then begin // Salesman and supplier info    BlockLoad(CYRec);      BlockLoad(EDIRec);    CUr.Code = IVr.CustCode;    cufoundf = ReadFirstMain(CUr,1,true);        ExportPadString("01",2," ",false);      ExportPadString("SE",3," ",false);//    tstr = StripNonDigits(EDIRec.LiveCode);    tstr = CUr.TheirCode;    ExportPadString(tstr,17," ",false);//"7001492"    ExportPadString("",3," ",false);    ExportPadString("92",3," ",false);    ExportPadString("",35," ",false);        ExportPadString("",35," ",false);    ExportPadString("",35," ",false);        ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString(CYRec.CompName,35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString(CYRec.Addr0,35," ",false);        ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    SplitAddress(CYRec.Addr1,t1,t2);    ExportPadString(t2,35," ",false);            ExportPadString("",9," ",false);    ExportPadString(t1,9," ",false);    ExportPadString("FIN",3," ",false);  end;  if (ver==2) then begin // Invoiceable/Intrade info    BlockLoad(EDIRec);    ExportPadString("01",2," ",false);      ExportPadString("IV",3," ",false);    CUr.Code = IVr.CustCode;    cufoundf = ReadFirstMain(CUr,1,true);    tstr = StripNonDigits(CUr.ANACode);                  ExportPadString(tstr,17," ",false);    ExportPadString("100",3," ",false);//JJ/*    if (EDIRec.Live==1) then begin      ExportPadString(EDIRec.LiveCode,3," ",false);    end else begin      ExportPadString(EDIRec.TestCode,3," ",false);    end;*/        ExportPadString("",3," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);//    ExportPadString("",1," ",false);// to get right pos    SplitAddress(CUr.InvAddr1,t1,t2);    ExportPadString(t2,35," ",false);            ExportPadString("",9," ",false);    ExportPadString(t1,9," ",false);    ExportPadString("FIN",3," ",false);  end;  if (ver==3) then begin// Shop Info    ExportPadString("01",2," ",false);      ExportPadString("PL",3," ",false);    if (nonblank(IVr.OrgCust)) then begin      cust = IVr.OrgCust;    end else begin      cust = IVr.CustCode;    end;    CUr.Code = cust;    cufoundf = ReadFirstMain(CUr,1,true);//    tstr = CUr.TheirCode;    tstr = CUr.Code;//    tstr = StripNonDigits(CUr.ANACode);    ExportPadString(tstr,17," ",false);    ExportPadString("",3," ",false);    ExportPadString("92",3," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    ExportPadString("",35," ",false);    if (cufoundf) then begin      ExportPadString(CUr.Name,35," ",false);            ExportPadString("",35," ",false);            ExportPadString("",35," ",false);      if (nonblank(CUr.DelAddr0)) then begin        ExportPadString(CUr.DelAddr0,35," ",false);      end else begin        ExportPadString(CUr.InvAddr0,35," ",false);      end;                ExportPadString("",35," ",false);      ExportPadString("",35," ",false);//      ExportPadString("",1," ",false);// to get right pos      if (nonblank(CUr.DelAddr1)) then begin              SplitAddress(CUr.DelAddr1,t1,t2);      end else begin        SplitAddress(CUr.InvAddr1,t1,t2);      end;        ExportPadString(t2,35," ",false);              ExportPadString("",9," ",false);      ExportPadString(t1,9," ",false);      ExportPadString("FIN",3," ",false);    end else begin      ExportPadString("",35," ",false);      ExportPadString("",35," ",false);      ExportPadString("",35," ",false);      ExportPadString("",35," ",false);      ExportPadString("",35," ",false);      ExportPadString("",35," ",false);      ExportPadString("",35," ",false);      ExportPadString("",9," ",false);      ExportPadString("",9," ",false);      ExportPadString("",3," ",false);    end;  end;  IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportCUX(record EDIIVVc IVr,var Integer rowcnt)BEGIN  ExportPadString("CUX",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("1",3," ",false);  ExportPadString(IVr.CurncyCode,3," ",false);  ExportPadString("4",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",4,"0",true); // Rate ### ????  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",4,"0",true); // Rate ### ????  ExportPadString("",12,"0",true); // Rate ### ????  ExportPadString("",3," ",false);  IntradeNewLine(rowcnt);  return;end;globalprocedure IntradeExportPAT(record EDIIVVc IVr,Integer ver,var Integer rowcnt)BEGIN  ExportPadString("PAT",3," ",false);    if (ver==1) then begin    ExportPadString("01",2," ",false);      ExportPadString("1",3," ",false);  end;  if (ver==2) then begin    ExportPadString("01",2," ",false);  //changed from 11    ExportPadString("8",3," ",false);  end;  IntradeNewLine(rowcnt);  return;end;globalprocedure IntradeExportPCD(record EDIIVVc IVr,var Integer rowcnt)BEGIN  string 255 tstr;  ExportPadString("PCD",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("12",3," ",false);  tstr = ValToString(IVr.pdvrebt,M4Val,"","",0) & "00";//  ValToHALString(IVr.pdvrebt,"0",tstr);  ExportPadString(tstr,8,"0",true);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  IntradeNewLine(rowcnt);  return;end;globalprocedure IntradeExportLIN(record INVc INr,Integer i,var Integer rowcnt)BEGIN  ExportPadString("LIN",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("" & i,6,"0",true);    ExportPadString("",3," ",false);    ExportPadString(INr.BarCode,35," ",false);//EUCodex changed to BarCode  ExportPadString("EN",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",2," ",false);    ExportPadString("",3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportPIA(record INVc INr,var Integer rowcnt)BEGIN  ExportPadString("PIA",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("1",3," ",false);    ExportPadString(INr.AlternativeCode,35," ",false);    ExportPadString("ZCG",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",28," ",false);    ExportPadString("",7," ",false);        ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",35," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",20," ",false);   ExportPadString("",15," ",false);      ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",35," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportIMD(record INVc INr,var Integer rowcnt)BEGIN  ExportPadString("IMD",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("F",3," ",false);    ExportPadString("8",3," ",false);    ExportPadString("-",7," ",false);    ExportPadString("",3," ",false);    ExportPadString("91",3," ",false);    ExportPadString(INr.Name,35," ",false);  ExportPadString("",11," ",false);    ExportPadString("",24," ",false);    ExportPadString("",3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportQTY(record INVc INr,Integer invtype,val qty,var Integer rowcnt)BEGIN  string 255 tstr;  val tmp;    ExportPadString("QTY",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("47",3," ",false);/*  if (invtype!=kInvoiceTypeCredit and invtype!=kInvoiceTypeCreditSpecialSales) then begin // Credit no needs for that    tmp = qty;  end else begin    tmp = 0-qty;  end;*/    tmp = qty;    tstr = ValToString(tmp,M4Qty,"","",0) & "0";//  ValToHALString(tmp,"3",tstr);  ExportPadString(tstr,15,"0",true);    ExportPadString(INr.Unittext,3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportMOA(val sum,string curncy,Integer ver,var Integer rowcnt)BEGIN  string 255 tstr;  val tmp;    ExportPadString("MOA",3," ",false);  if (ver==1) then begin    ExportPadString("01",2," ",false);      ExportPadString("79",3," ",false);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";//    ValToHALString(sum,"1",tstr);    ExportPadString(tstr,18,"0",true);  end;  if (ver==2) then begin    ExportPadString("01",2," ",false);      ExportPadString("39",3," ",false);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";//    ValToHALString(sum,"1",tstr);    ExportPadString(tstr,18,"0",true);    end;  if (ver==3) then begin      ExportPadString("01",2," ",false);      ExportPadString("21",3," ",false);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";//    ValToHALString(sum,"1",tstr);    ExportPadString(tstr,18,"0",true);    end;  if (ver==4) then begin      ExportPadString("01",2," ",false);      ExportPadString("125",3," ",false);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";    //    ValToHALString(sum,"1",tstr);    ExportPadString(tstr,18,"0",true);    end;  if (ver==5) then begin      ExportPadString("01",2," ",false);      ExportPadString("150",3," ",false);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";    //    ValToHALString(sum,"1",tstr);    ExportPadString(tstr,18,"0",true);    end;  ExportPadString(curncy,3," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportPRI(val price,var Integer rowcnt)BEGIN  string 255 tstr;  val tmp;    ExportPadString("PRI",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("CUP",3," ",false);  tstr = ValToString(price,M4Val,"","",0) & "00";//  ValToHALString(price,"1",tstr);  ExportPadString(tstr,15,"0",true);    ExportPadString("PE",3," ",false);    ExportPadString("GRP",3," ",false);    ExportPadString("",9,"0",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportTAX(Integer inclvat,string vatcode,var Integer rowcnt)BEGIN  string 255 tstr;  val tmp;      GetVATProc(vatcode,inclvat,tmp);  ExportPadString("TAX",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("7",3," ",false);  ExportPadString("VAT",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",35," ",false);  ExportPadString("",6," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",15," ",false);  ExportPadString("",7," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  tstr = ValToString(tmp,M4Val,"","",0);    tstr = tstr & "00";  ExportPadString(tstr,17," ",true);    ExportPadString("",12," ",false);    ExportPadString("",3," ",false);    ExportPadString("",3," ",false);   if (tmp==0) then begin    ExportPadString("Z",3," ",false);  end else begin    ExportPadString("S",3," ",false);    end;  ExportPadString("",20," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportUNS(var Integer rowcnt)BEGIN  ExportPadString("UNS",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString("S",1," ",false);    IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportUNT(LongInt cnt,var Integer rowcnt)BEGIN  string 255 tstr;  ExportPadString("UNT",3," ",false);    ExportPadString("01",2," ",false);    tstr = rowcnt;  ExportPadString(tstr,6," ",false);  tstr = cnt;  ExportPadString(tstr,14," ",false);  IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportUNZ(LongInt cnt,string messident,var Integer rowcnt)BEGIN  ExportPadString("UNZ",3," ",false);    ExportPadString("01",2," ",false);    ExportPadString(messident,6,"0",true);  ExportPadString(" ",14," ",false);  IntradeNewLine(rowcnt);  RETURN;END;globalprocedure IntradeExportFTX(record EDIIVVc IVr,var Integer rowcnt)BEGIN  ExportPadString("FTX",3," ",false);    ExportPadString("AAI",3," ",false);    ExportPadString("",3," ",false);  ExportPadString("1",3," ",false);  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString(IVr.CredInv,70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString("",3," ",false);    IntradeNewLine(rowcnt);  RETURN;END;/*globalprocedure IntradeExportUNB(record EDIIVVc IVr,var Integer rowcnt)BEGIN  record CUVc CUr;  Boolean cufoundf;  record EDIFileBlock EDIRec;  string 255 tstr;    CUr.Code = IVr.CustCode;  cufoundf = ReadFirstMain(CUr,1,true);  BlockLoad(EDIRec);  ExportPadString("UNB",3," ",false);    ExportPadString("UNOC",4," ",false);    ExportPadString("1",1," ",false);    tstr = StripNonDigits(EDIRec.LiveCode);  ExportPadString(tstr,35," ",false);  ExportPadString("",4," ",false);  tstr = StripNonDigits(CUr.ANACode);  ExportPadString(tstr,14," ",false);  ExportPadString("",35," ",false);  tstr = DateToString(CurrentDate,"MMDD");  ExportPadString(tstr,4," ",false);    tstr = StripNonDigits("" & CurrentTime);  ExportPadString(tstr,14," ",false);  ExportPadString("",6," ",false);  ExportPadString("",4," ",false);  ExportPadString("",14," ",false);  ExportPadString("",14," ",false);  ExportPadString("",14," ",false);  ExportPadString("",1," ",false);  ExportPadString("",1," ",false);  ExportPadString("",35," ",false);  ExportPadString("",1," ",false);  rowcnt = rowcnt + 1;  ExportPadString(rowcnt,6," ",false);  NewLine;  RETURN;END;*/globalprocedure IntradeExportUNB(record EDIIVVc IVr,string messident,var Integer rowcnt)BEGIN  record CUVc CUr;  Boolean cufoundf;  record EDIFileBlock EDIRec;  string 255 tstr;    CUr.Code = IVr.CustCode;  cufoundf = ReadFirstMain(CUr,1,true);  BlockLoad(EDIRec);  ExportPadString("UNB",3," ",false);    ExportPadString("01",2," ",false);    tstr = StripNonDigits(EDIRec.LiveCode);  ExportPadString(tstr,35," ",false);  tstr = StripNonDigits(CUr.ANACode);  ExportPadString(tstr,35," ",false);  ExportPadString(messident,14," ",false);  rowcnt = rowcnt + 1;  ExportPadString(rowcnt,6," ",false);  NewLine;  RETURN;END;#endif