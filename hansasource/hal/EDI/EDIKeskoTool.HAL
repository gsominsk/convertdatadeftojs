#ifdef HAL//external procedure ValToHALString(val,string,var string);external procedure M4PadString(string,Integer,string,Boolean,var string);external procedure GetVATproc(string,Integer,var val);functionBoolean CheckDigitMatch(string tstr,Integer i)BEGIN  Boolean res;    res = false;  if (CharacterMatch(tstr,"9",i) or CharacterMatch(tstr,"8",i) or CharacterMatch(tstr,"7",i) or CharacterMatch(tstr,"6",i) or      CharacterMatch(tstr,"5",i) or CharacterMatch(tstr,"4",i) or CharacterMatch(tstr,"3",i) or CharacterMatch(tstr,"2",i) or      CharacterMatch(tstr,"1",i) or CharacterMatch(tstr,"0",i)) then   begin    res = true;  end;      CheckDigitMatch = res;  RETURN;END; procedure SplitAddress(string addr,var string pnr,var string town)BEGIN    string 255 t2,tstr;    Integer i,cp;    pnr = "";    tstr = addr;    cp = 1;    for (i=1;i<=len(tstr);i=i+1) begin      if (CheckDigitMatch(tstr,i)==false) then begin        cp = i-1;        goto L22;      end;    end;L22:;    if (cp>0) then begin      t2 = Left(tstr,cp);    end else begin      t2 = " ";    end;      pnr = t2;    tstr = addr;    t2 = Right (tstr,len(tstr)-(cp+1));    town = t2;    RETURN;END;procedure KeskoExportexpstr(string adds,var string expstr)BEGIN  Integer i,l,j;    l = len(expstr)/80;  for (i=1;i<=l;i=i+1) begin    j = (i-1)*80 + 1;    ExportPadString(Mid(expstr,j,80),80," ",false);    NewLine;  end;  /*  l = l*80;  for (i=1;i<=l;i=i+1) begin    ExportPadString(Mid(expstr,i,1),1," ",false);    if (Mod(i,80)==0) then begin NewLine; end;  end;  */  l = l*80;  expstr = Mid(expstr,l+1,len(expstr)-l);  expstr = expstr & adds;  RETURN;END;globalprocedure KeskoNewLine(var string expstr,var Integer rowcnt)begin//  ExportPadString(expstr,len(expstr)," ",false);//  expstr = "";  rowcnt = rowcnt + 1;  NewLine;  return;end;globalprocedure KeskoAddStringToexpstr(string adds,var string expstr)BEGIN/*  if ((len(expstr)+len(adds))>255) then begin     KeskoExportexpstr(adds,expstr);  end else begin    expstr = expstr & adds;      end;  */  expstr = adds;      ExportPadString(expstr,len(expstr)," ",false);  expstr = "";  RETURN;END;globalprocedure KeskoExportUNH(LongInt cnt,var string expstr,var Integer rowcnt)begin  string 255 tstr,t2;    KeskoAddStringToexpstr("UNH",expstr);  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("   ",expstr);//7  tstr = cnt;  M4PadString(tstr,11," ",false,t2);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr("INVOIC",expstr);  KeskoAddStringToexpstr("1  ",expstr);  KeskoAddStringToexpstr("911",expstr);  KeskoAddStringToexpstr("UN",expstr);  KeskoAddStringToexpstr("FI0021",expstr);  M4PadString(" ",35," ",false,t2);      KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr("00",expstr);  KeskoAddStringToexpstr(" ",expstr);      KeskoNewLine(expstr,rowcnt);  return;end;globalprocedure KeskoExportBGM(record EDIIVVc IVr,var string expstr,var Integer rowcnt)BEGIN  record CUVc CUr;  Boolean cufoundf;  string 255 tstr,t2;    CUr.Code = IVr.OrgCust;  cufoundf = ReadFirstMain(CUr,1,true);  KeskoAddStringToexpstr("BGM",expstr);  KeskoAddStringToexpstr("01",expstr);  if (blank(IVr.OrgCust)) then begin    if (IVr.InvType!=kInvoiceTypeCredit and IVr.InvType!=kInvoiceTypeCreditSpecialSales) then begin      KeskoAddStringToexpstr("380",expstr);    end else begin      KeskoAddStringToexpstr("381",expstr);    end;  end else begin  if (IVr.InvType!=kInvoiceTypeCredit and IVr.InvType!=kInvoiceTypeCreditSpecialSales) then begin    KeskoAddStringToexpstr("ZKA",expstr);  end else begin    KeskoAddStringToexpstr("ZKH",expstr);  end;  end;    M4PadString(" ",3," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);  tstr = IVr.SerNr;  M4PadString(tstr,35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);  M4PadString("9",3," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportDTM(Date orgdat,LongInt addon,Integer ver,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  Date dat;  KeskoAddStringToexpstr("DTM",expstr);  if (ver==1) then begin // Invoice Date    KeskoAddStringToexpstr("01",expstr);    M4PadString("3",3," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);        tstr = DateToString(orgdat,"YYYYMMDD");    M4PadString(tstr,35," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);          end;  if (ver==2) then begin // Trans Date    KeskoAddStringToexpstr("01",expstr);    M4PadString("7",3," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);        tstr = DateToString(orgdat,"YYYYMMDD");    M4PadString(tstr,35," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);      end;  if (ver==3) then begin// Due Date    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("13 ",expstr);        tstr = DateToString(orgdat,"YYYYMMDD");    M4PadString(tstr,35," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);      end;  if (ver==4) then begin // Cash Discount Date    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("12 ",expstr);        dat = AddDay(orgdat,addon);    tstr = DateToString(dat,"YYYYMMDD");    M4PadString(tstr,35," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);      end;  if (ver==5) then begin // Delivery Date    KeskoAddStringToexpstr("01",expstr);            KeskoAddStringToexpstr("171",expstr);            tstr = DateToString(orgdat,"YYYYMMDD");    M4PadString(tstr,35," ",false,t2);          KeskoAddStringToexpstr(t2,expstr);          end;  KeskoAddStringToexpstr("102",expstr);          KeskoNewLine(expstr,rowcnt);  RETURN;END;procedure KeskoExportRFFDel(LongInt sernr,var string expstr,var Integer rowcnt)begin  string 255 tstr,t2;  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("PK ",expstr);  tstr = sernr;  M4PadString(tstr,35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",6," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  return;end;globalprocedure KeskoExportRFF(record EDIIVVc IVr,Integer ver,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  record SHVc SHr;  Boolean foundf;  if (ver==1) then begin // Customer Order Number    KeskoAddStringToexpstr("RFF",expstr);    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("CO ",expstr);    tstr = IVr.CustOrdNr;    M4PadString(tstr,35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    M4PadString(" ",6," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoNewLine(expstr,rowcnt);  end;  if (ver==2) then begin // Bank Reference    KeskoAddStringToexpstr("RFF",expstr);    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("PQ ",expstr);    tstr = StripNonDigits(IVr.CalcFinRef);              M4PadString(tstr,35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoNewLine(expstr,rowcnt);  end;  if (ver==3) then begin // Delivery Journal No.    foundf = true;    SHr.OrderNr = IVr.OrderNr;    while (LoopKey("OrderKey",SHr,1,foundf)) begin      if (SHr.OrderNr<>IVr.OrderNr) then begin        foundf = false;      end;      if (foundf) then begin        KeskoAddStringToexpstr("RFF",expstr);        KeskoExportRFFDel(SHr.SerNr,expstr,rowcnt);        KeskoExportDTM(SHr.ShipDate,0,5,expstr,rowcnt); // Discount Date       end;    end;  end;  RETURN;END;globalprocedure KeskoExportNAD(record EDIIVVc IVr,Integer ver,var string expstr,var Integer rowcnt)BEGIN  record CUVc CUr;  string 255 tstr,t1,t2;  String 20 cust;  Date dat;  Boolean cufoundf;  record EDIFileBlock EDIRec;  record CYBlock CYRec;  KeskoAddStringToexpstr("NAD",expstr);  if (ver==1) then begin // Salesman and supplier info    BlockLoad(CYRec);      KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("SE ",expstr);    tstr = StripNonDigits(CYRec.ANACode);    M4PadString(tstr,17," ",false,t2);    KeskoAddStringToexpstr(t2,expstr);    M4PadString("100",3," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr("   ",expstr);//    KeskoAddStringToexpstr("92 ",expstr);    M4PadString(" ",35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    M4PadString(CYRec.CompName,35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    M4PadString(" ",35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    M4PadString(CYRec.Addr0,35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    M4PadString(" ",35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);//    M4PadString(" ",1," ",false,t2);// to get right pos//    KeskoAddStringToexpstr(t2,expstr);// to get right pos    SplitAddress(CYRec.Addr1,t1,t2);    M4PadString(t2,35," ",false,tstr);    KeskoAddStringToexpstr(tstr,expstr);            M4PadString(" ",9," ",false,tstr);                  KeskoAddStringToexpstr(tstr,expstr);    M4PadString(t1,9," ",false,tstr);       KeskoAddStringToexpstr(tstr,expstr);    KeskoAddStringToexpstr("   ",expstr);//FIN  end;  if (ver==2) then begin // Invoiceable/Kesko info    BlockLoad(EDIRec);    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("IV ",expstr);    CUr.Code = IVr.CustCode;    cufoundf = ReadFirstMain(CUr,1,true);    tstr = StripNonDigits(CUr.ANACode);      M4PadString(tstr,17," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr("100",expstr);    M4PadString(" ",3," ",false,t2);                  KeskoAddStringToexpstr(t2,expstr);    M4PadString(" ",35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    M4PadString(CUr.Name,35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);        M4PadString(" ",35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    M4PadString(CUr.InvAddr0,35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);        M4PadString(" ",35," ",false,t2);         KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);//    M4PadString(" ",1," ",false,t2);// to get right pos//    KeskoAddStringToexpstr(t2,expstr);// to get right pos    SplitAddress(CUr.InvAddr1,t1,t2);    M4PadString(t2,35," ",false,tstr);              KeskoAddStringToexpstr(tstr,expstr);            M4PadString(" ",9," ",false,tstr);                  KeskoAddStringToexpstr(tstr,expstr);    M4PadString(t1,9," ",false,tstr);       KeskoAddStringToexpstr(tstr,expstr);    KeskoAddStringToexpstr("   ",expstr);//FIN  end;  if (ver==3) then begin// Shop Info, invoicing info    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("PL ",expstr);      if (IVr.OrgCust<>"") then begin      cust = IVr.OrgCust;    end else begin      cust = IVr.CustCode;    end;    CUr.Code = cust;    cufoundf = ReadFirstMain(CUr,1,true);    M4PadString(cust,17," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr("92 ",expstr);      M4PadString(" ",3," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    M4PadString(" ",35," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);    KeskoAddStringToexpstr(t2,expstr);        if (cufoundf) then begin      M4PadString(CUr.Name,35," ",false,t2);                KeskoAddStringToexpstr(t2,expstr);          M4PadString(" ",35," ",false,t2);                KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      /*      if (nonblank(CUr.DelAddr0)) then begin        M4PadString(CUr.DelAddr0,35," ",false,t2);                end else begin        M4PadString(CUr.InvAddr0,35," ",false,t2);                end;        */      M4PadString(CUr.InvAddr0,35," ",false,t2);                KeskoAddStringToexpstr(t2,expstr);          M4PadString(" ",35," ",false,t2);                KeskoAddStringToexpstr(t2,expstr);          KeskoAddStringToexpstr(t2,expstr);      /*      if (nonblank(CUr.DelAddr1)) then begin              SplitAddress(CUr.DelAddr1,t1,t2)      end else begin        SplitAddress(CUr.InvAddr1,t1,t2)      end;        *///      M4PadString(" ",1," ",false,t2);// to get right pos//      KeskoAddStringToexpstr(t2,expstr);// to get right pos      SplitAddress(CUr.InvAddr1,t1,t2);      M4PadString(t2,35," ",false,tstr);                KeskoAddStringToexpstr(tstr,expstr);              M4PadString(" ",9," ",false,tstr);                    KeskoAddStringToexpstr(tstr,expstr);      M4PadString(t1,9," ",false,tstr);         KeskoAddStringToexpstr(tstr,expstr);      KeskoAddStringToexpstr("   ",expstr);//FIN    end else begin      M4PadString(" ",35," ",false,t2);                KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      M4PadString(" ",9," ",false,t2);                KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr("   ",expstr);//FIN    end;  end;  if (ver==4) then begin// Shop Info, receiver of the goods    if (IVr.OrgCust<>"") then begin      cust = IVr.OrgCust;    end else begin      cust = IVr.CustCode;    end;    CUr.Code = cust;    cufoundf = ReadFirstMain(CUr,1,true);//    if ((CUr.InvAddr1!=CUr.DelAddr1) or (CUr.InvAddr0!=CUr.DelAddr0)) then begin      KeskoAddStringToexpstr("01",expstr);      KeskoAddStringToexpstr("DP ",expstr);        M4PadString("",17," ",false,t2);//M4PadString(cust,17," ",false,t2);      KeskoAddStringToexpstr(t2,expstr);      M4PadString(" ",3," ",false,t2);      KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);      M4PadString(" ",35," ",false,t2);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      KeskoAddStringToexpstr(t2,expstr);      if (cufoundf) then begin        M4PadString(CUr.Name,35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);        M4PadString(" ",35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        if (nonblank(CUr.DelAddr0)) then begin          M4PadString(CUr.DelAddr0,35," ",false,t2);        end else begin          M4PadString(CUr.InvAddr0,35," ",false,t2);        end;          KeskoAddStringToexpstr(t2,expstr);        M4PadString("",35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);        M4PadString(" ",35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);//        M4PadString(" ",1," ",false,t2);// to get right pos//        KeskoAddStringToexpstr(t2,expstr);// to get right pos        if (nonblank(CUr.DelAddr1)) then begin          SplitAddress(CUr.DelAddr1,t1,t2);        end else begin          SplitAddress(CUr.InvAddr1,t1,t2);        end;          M4PadString(t2,35," ",false,tstr);        KeskoAddStringToexpstr(tstr,expstr);          M4PadString(" ",9," ",false,tstr);        KeskoAddStringToexpstr(tstr,expstr);        M4PadString(t1,9," ",false,tstr);           KeskoAddStringToexpstr(tstr,expstr);        KeskoAddStringToexpstr("   ",expstr);//FIN      end else begin        M4PadString(" ",35," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        M4PadString(" ",9," ",false,t2);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr(t2,expstr);        KeskoAddStringToexpstr("   ",expstr);//FIN      end;//    end;    end;    KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportCUX(record EDIIVVc IVr,var string expstr,var Integer rowcnt)begin  string 255 t2;  KeskoAddStringToexpstr("CUX",expstr);  KeskoAddStringToexpstr("01",expstr);  M4PadString("5",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  if (blank(IVr.CurncyCode)) then begin    t2 = "FIM";  end else begin    M4PadString(IVr.CurncyCode,3," ",false,t2);  end;  KeskoAddStringToexpstr(t2,expstr);  M4PadString("4",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",4,"0",true,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",4,"0",true,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",12,"0",true,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  return;end;globalprocedure KeskoExportPAT(record EDIIVVc IVr,Integer ver,var string expstr,var Integer rowcnt)begin  KeskoAddStringToexpstr("PAT",expstr);  KeskoAddStringToexpstr("01",expstr);  if (ver==1) then begin    KeskoAddStringToexpstr("1  ",expstr);  end;  if (ver==2) then begin    KeskoAddStringToexpstr("8  ",expstr);  end;  KeskoNewLine(expstr,rowcnt);  return;end;globalprocedure KeskoExportPCD(val prcv,var string expstr,var Integer rowcnt)begin  string 255 tstr,t2;  KeskoAddStringToexpstr("PCD",expstr);  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("12 ",expstr);  tstr = ValToString(prcv,M4Val,"","",0) & "00";  M4PadString(tstr,8," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  return;end;globalprocedure KeskoExportALC(record EDIIVVc IVr,var string expstr,var Integer rowcnt,Integer type)begin  string 255 tstr,t2;  KeskoAddStringToexpstr("ALC01A",expstr);  M4PadString(" ",35," ",true,t2);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",11," ",true,t2);  KeskoAddStringToexpstr(t2,expstr);  if (type==1) then begin    KeskoAddStringToexpstr("CAC",expstr);  end;    if (type==2) then begin    KeskoAddStringToexpstr("ZLP",expstr);  end;    KeskoAddStringToexpstr("   ",expstr);  KeskoAddStringToexpstr("   ",expstr);  KeskoNewLine(expstr,rowcnt);  return;end;globalprocedure KeskoExportMOA(val sum,string curncy,Integer ver,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  val tmp;    KeskoAddStringToexpstr("MOA",expstr);  if (ver==1) then begin    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("79 ",expstr);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";//    ValToHALString(sum,"3",tstr);    M4PadString(tstr,18,"0",true,t2);              KeskoAddStringToexpstr(t2,expstr);  end;  if (ver==2) then begin    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("39 ",expstr);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";//    ValToHALString(sum,"3",tstr);    M4PadString(tstr,18,"0",true,t2);              KeskoAddStringToexpstr(t2,expstr);  end;  if (ver==3) then begin    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("52 ",expstr);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";//    ValToHALString(sum,"3",tstr);    M4PadString(tstr,18,"0",true,t2);              KeskoAddStringToexpstr(t2,expstr);  end;  if (ver==4) then begin    t2 = "";    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("125",expstr);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";    M4PadString(tstr,18,"0",true,t2);              KeskoAddStringToexpstr(t2,expstr);  end;    if (ver==5) then begin    t2 = "";    KeskoAddStringToexpstr("01",expstr);    KeskoAddStringToexpstr("150",expstr);    tstr = ValToString(sum,M4Val,"","",0);    tstr = tstr & "0";    M4PadString(tstr,18,"0",true,t2);              KeskoAddStringToexpstr(t2,expstr);  end;    M4PadString(curncy,3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString("",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportLIN(record INVc INr,Integer i,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  KeskoAddStringToexpstr("LIN",expstr);  KeskoAddStringToexpstr("01",expstr);  tstr = i;  M4PadString(tstr,6,"0",true,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(INr.BarCode,35," ",false,t2);    KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr("EN ",expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",2," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportPIA(record INVc INr,var string expstr,var Integer rowcnt)BEGIN  string 255 t2;  KeskoAddStringToexpstr("PIA",expstr);  KeskoAddStringToexpstr("01",expstr);  M4PadString("1",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(INr.AlternativeCode,35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr("ZCG",expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportIMD(record INVc INr,var string expstr,var Integer rowcnt)BEGIN  string 255 t2;  KeskoAddStringToexpstr("IMD",expstr);  KeskoAddStringToexpstr("01",expstr);  M4PadString("F",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString("8",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString("-",7," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString("91",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(INr.Name,35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString("",35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString("",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportQTY(record INVc INr,Integer invtype,val qty,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  val tmp;    KeskoAddStringToexpstr("QTY",expstr);  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("47 ",expstr);/*    if (invtype!=kInvoiceTypeCredit and invtype!=kInvoiceTypeCreditSpecialSales) then begin // Credit no needs    tmp = qty;  end else begin    tmp = 0-qty;  end;*/    tmp = qty;  tstr = ValToString(tmp,M4Qty,"","",0) & "0";//  ValToHALString(tmp,"3",tstr);  M4PadString(tstr,15,"0",true,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(INr.Unittext,3," ",false,t2);  KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportPRI(val price,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  val tmp;    KeskoAddStringToexpstr("PRI",expstr);  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("CUP",expstr);  tstr = ValToString(price,M4Val,"","",0) & "00";//  ValToHALString(price,"0",tstr);  M4PadString(tstr,15,"0",true,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr("PE ",expstr);  KeskoAddStringToexpstr("GRP",expstr);  M4PadString("",9,"0",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportTAX(Integer inclvat,string vatcode,var string expstr,var Integer rowcnt)BEGIN  string 255 tstr,t2;  val tmp;      GetVATproc(vatcode,inclvat,tmp);  KeskoAddStringToexpstr("TAX",expstr);  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("7  ",expstr);  KeskoAddStringToexpstr("VAT",expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",35," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",6," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",15," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",7," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);  tstr = ValToString(tmp,M4Val,"","",0);  tstr = tstr & "00";  M4PadString(tstr,17," ",true,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",12," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  M4PadString(" ",3," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoAddStringToexpstr(t2,expstr);    if (tmp==0) then begin    M4PadString("Z",3," ",false,t2);              KeskoAddStringToexpstr(t2,expstr);  end else begin    M4PadString("S",3," ",false,t2);    KeskoAddStringToexpstr(t2,expstr);  end;    M4PadString(" ",20," ",false,t2);            KeskoAddStringToexpstr(t2,expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportUNS(var string expstr,var Integer rowcnt)BEGIN  KeskoAddStringToexpstr("UNS",expstr);  KeskoAddStringToexpstr("01",expstr);  KeskoAddStringToexpstr("S",expstr);  KeskoNewLine(expstr,rowcnt);  RETURN;END;globalprocedure KeskoExportFTX(record EDIIVVc IVr,Integer ver,var Integer rowcnt)BEGIN  ExportPadString("FTX",3," ",false);    ExportPadString("01",2," ",false);  ExportPadString("AAI",3," ",false);    ExportPadString("",3," ",false);  ExportPadString("1",1," ",false);//3  ExportPadString("",3," ",false);  ExportPadString("",3," ",false);  ExportPadString(IVr.CredInv,70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString(" ",70," ",false);  ExportPadString("",3," ",false);    rowcnt = rowcnt + 1;  NewLine;  RETURN;END;globalprocedure KeskoExportUNZ(LongInt cnt,string messident)BEGIN  string 255 tstr;    ExportPadString("UNZ",3," ",false);    ExportPadString("11",2," ",false);    tstr = cnt;  ExportPadString(tstr,6,"0",true);  ExportPadString(messident,14," ",false);  NewLine;  RETURN;END;#endif