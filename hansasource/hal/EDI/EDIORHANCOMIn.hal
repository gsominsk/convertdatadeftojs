external function roundmode DefaultRoundMode();
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetCurncyRoundoff(string,string,string,var roundmode,var roundmode,var roundmode);
external procedure MulM4ProcVal(val,val,var val);
external procedure StripEndingSpaces(var string);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure GetDateString2(var string);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure CalcVATBaseVAT(record SMVc,Integer,Integer,Integer,var val,var val);
external procedure SetupVATBase(var record SMVc,var Integer);
external function Boolean GetFullCurncyRateDate(var string,Date,var val,var val,var val,var val,var val,var Date);
external procedure CalcRowGP(record EDIORVc,string,string,val,val,val,val,val,var val);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);

procedure GetEDIPrice(record INVc INr,var string plcode,Date deldate,Date orddate,var val price)
begin
  record PLDefVc PLDr;  
  record PLVc PLr;
  record PlanDeliveryBlock PDbl;
  Boolean pricef,pldeffound;
  
  BlockLoad(PDbl);
  pricef = false;
  pldeffound = false;
  PLDr.PLReplCode = plcode;
  if (PDbl.PLBasedOn==1) then begin
    PLDr.StartDate = deldate;  
  end else begin
    PLDr.StartDate = orddate;  
  end;  
  if (ReadLastKey("PLReplCode",PLDr,2,false)) then begin 
    if (PLDr.PLReplCode == plcode) then begin
      if (DateInRange(deldate,PLDr.StartDate,PLDr.EndDate)) then begin
        plcode = PLDr.Code;
        pldeffound = true;
      end;
    end;
  end;
  if (pldeffound==false) then begin
    PLDr.Code = plcode;
    if (ReadFirstMain(PLDr,1,true)) then begin       
    end;    
  end;  
  PLr.ArtCode = INr.Code;
  PLr.PLCode = plcode;        
  if (ReadFirstMain(PLr,2,true)) then begin   
    price = PLr.ExVatPrice; 
    pricef = true;
  end;     
  if (pricef==false) then begin    
    price = INr.UPrice1; 
  end;
  return;
end;

procedure PasteEDICust(record CUVc CUr,var record EDIORVc ORr)
begin
  ORr.CustCode = CUr.Code;
  ORr.ShipDeal = CUr.ShipDeal;
  ORr.ShipMode = CUr.ShipMode;
  ORr.Addr0 = CUr.Name;
  if (ORr.Addr1=="") then begin
    ORr.Addr1 = CUr.InvAddr0;
    ORr.Addr2 = CUr.InvAddr1;
    ORr.Addr3 = CUr.InvAddr2;         
  end;
  ORr.ShipAddr0 = CUr.Name;         
  ORr.ShipAddr1 = CUr.DelAddr0;        
  ORr.ShipAddr2 = CUr.DelAddr1;
  ORr.ShipAddr3 = CUr.DelAddr2;
  return;
end;

procedure EDICutTill(var string mstr,string til)
begin
  integer i,l;
  string 5 st;
  string 255 inst;
  
  l = len(mstr);
  inst = mstr;
  mstr = "";
  for (i=0;i<l;i=i+1) begin
    st = MID(inst,i,1);
    if (st==til) then begin
      i = l;
    end else begin  
      mstr = mstr & st;
    end;
  end;
  return;
end;

global
updating  procedure RunEDIORHANCOMIn()
BEGIN
  record EDIORVc ORr;
  record EDIORVc OR2r;
  record CUVc CUr;  
  record INVc INr;
  record INVc IN2r;
  record SMVc SMr;  
  row EDIORVc ORrw;
  record BaseCurBlock bascur;
  string 255 tstr,mstr,pstr,mstr1,tax2code;
  string 60 barcode;
  string 20 plcode,lstr;
  Integer i;
  Boolean testf,dupordf;
  Boolean itemexistf;
  Integer rwcnt,vatcnt;
  roundmode rndline,rndtotal,rndvat;
  Date deldate,orddate,tempdat;
  val t,s,vats,ms2,temp;
  Boolean tesf;
  Integer startpos,startrowpos;
  val fr,to1,to2,br1,br2;
  Integer pos;
  Integer nrofrows;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode;
  string 60 customercontact;
  val price,reb,cost,qty,instock,t1,tax2prc;
  Boolean calcprice;
  record GeneralOptionBlock GenOptRec;
  string 100 phone,fax;
  Boolean dummyf;
  string 255 taxtemplatecode;
  Time blankt;

  BlockLoad(GenOptRec);
  startrowpos = 10;
  RecordNew(ORr);
  BlockLoad(bascur);
  testf = true;
  dupordf = false;  
  nrofrows = 0;
  ORrw.stp = 1;
  ORrw.Quant = BlankVal;
  ORrw.Price = BlankVal;
  ORrw.Sum = BlankVal;
  ORrw.vRebate = BlankVal;
  ORrw.Shipd1 = BlankVal;
  ORrw.Shipd2 = BlankVal;
  ORrw.Invd = BlankVal;
  ORrw.BasePrice = BlankVal;
  ORrw.rowGP = BlankVal;
  ORrw.PriceFactor = BlankVal;
  ORrw.UnitFactQuant = BlankVal;
  ORrw.UnitFactPrice = BlankVal;
  while (testf) begin
    startpos = 8;
    tstr = ImportField();
    if (len(tstr)==0) then begin
      testf = false;
    end;
    lstr = Left(tstr,3);
    pstr = MID(tstr,4,3);

    pos = 5;
    
    StripEndingSpaces(pstr);

/* WORKS NK*/
    if (lstr=="BGM") then begin
      mstr = MID(tstr,startpos,35);
      StripEndingSpaces(mstr);
      EDICutTill(mstr,"+");
      OR2r.CustOrdNr = mstr; 
      ORr.CustOrdNr = mstr;      
      if (ReadFirstKey("CustOrdNr",OR2r,1,true)) then begin
        dupordf = true;
      end;
    end;

/* WORKS NK*/
    if (lstr=="DTM") then begin
      if (pstr=="137") then begin
        mstr = MID(tstr,startpos,8);
        StripEndingSpaces(mstr);
        GetDateString2(mstr);
        orddate = StringToDate(mstr);
        ORr.OrdDate = orddate;
        ORr.CurncyCode = bascur.BaseCur1;
        mstr = ORr.CurncyCode;
        tesf = GetFullCurncyRateDate(mstr,ORr.OrdDate,fr,to1,to2,br1,br2,tempdat);
        ORr.FrRate = fr;
        ORr.ToRateB1 = to1;
        ORr.ToRateB2 = to2;
        ORr.BaseRate1 = br1;
        ORr.BaseRate2 = br2;
      end else begin
        pstr = MID(tstr,4,1);
      end;  
      if (pstr=="2") then begin
          mstr = MID(tstr,6,8);
          StripEndingSpaces(mstr);
          GetDateString2(mstr);
          orddate = StringToDate(mstr);
          ORr.PlanShip = orddate;
          ORr.PlanShipDate = deldate;
      end;
    end;
    
    if (lstr=="CTA") then begin
        pstr = MID(tstr,4,2);
        if (pstr == "OC") then begin
        mstr = MID(tstr,startpos-1,35);
        EDICutTill(mstr,"'");
        //ORr.CustContact = mstr;
        customercontact = mstr;
      end;  
    end;
    
    if (lstr=="COM") then begin
        pstr = Right(tstr,3);
        if (pstr == "TE'") then begin
        mstr = MID(tstr,4,35);
        EDICutTill(mstr,":");
        phone = mstr;
      end;
       if (pstr == "FX'") then begin
        mstr = MID(tstr,4,35);
        EDICutTill(mstr,":");
        fax = mstr;
      end;  

    end;

/* WORKS NK*/
    if (lstr=="NAD") then begin
/* This is how you can get more that 255 characters to play with */
/* AddToText puts the first 255 characters into the Textfield, ImportIntoText puts the rest */
/* Now you can use tstr = StringFromText(Letr,30,10); to get strings out of the Textfield */
/*
      RecordNew(Letr);
      AddToText(tstr,Letr);
      if (ImportIntoText(Letr)) then begin
        tstr = StringFromText(Letr,30,10);
      end;
*/
      pstr = MID(tstr,4,2);

      if (pstr == "SU") then begin
        plcode = "";
        mstr = MID(tstr,7,20);
        StripEndingSpaces(mstr);
        EDICutTill(mstr,":");
        CUr.ANACode = mstr;
        if (nonblank(CUr.ANACode)) then begin
          if (ReadFirstKey("ANACode",CUr,1,true)) then begin
            PasteEDICust(CUr,ORr);
            plcode = CUr.PLCode;
//            ORr.InvoiceToCode = CUr.Code;
            ORr.Addr0 = CUr.Name;
            ORr.ANACode = CUr.ANACode;
            ORr.PayDeal = CUr.PayDeal;
          end;
        end;
 
      end;
      if (pstr == "BY") then begin
        plcode = "";
        mstr = MID(tstr,7,20);
        StripEndingSpaces(mstr);
        EDICutTill(mstr,":");
        CUr.ANACode = mstr;
        if (nonblank(CUr.ANACode)) then begin
          if (ReadFirstKey("ANACode",CUr,1,true)) then begin
            plcode = CUr.PLCode;
            ORr.InvoiceToCode = CUr.Code;
/*
this must be wrong, diffrent customer and diffrent name            
            ORr.Addr0 = CUr.Name;
            ORr.ANACode = CUr.ANACode;
            ORr.PayDeal = CUr.PayDeal;
*/            
          end;
        end;  

      end;
      /*
      // PRI CON
      if (pstr == "PRI") then begin
        mstr = MID(tstr,9,17);        
        StripEndingSpaces(mstr);
        CUr.Code = mstr;
        if (ReadFirstMain(CUr,1,true)) then begin
          mstr = MID(tstr,31,35);
          StripEndingSpaces(mstr);
          ORr.Addr0 = mstr;
          mstr = MID(tstr,66,35);
          StripEndingSpaces(mstr);
          ORr.Addr1 = mstr;
          mstr = MID(tstr,136,35);
          StripEndingSpaces(mstr);
          ORr.Addr2 = mstr;
          PasteEDICust(CUr,ORr);
        end;

      end;
      */
      if (pstr == "PL") then begin
        mstr = MID(tstr,startpos,17);        
        StripEndingSpaces(mstr);
        CUr.Code = mstr;
        if (ReadFirstMain(CUr,1,true)) then begin
          mstr = MID(tstr,31,35);
          StripEndingSpaces(mstr);
          ORr.Addr0 = mstr;
          mstr = MID(tstr,66,35);
          StripEndingSpaces(mstr);
          ORr.Addr1 = mstr;
          mstr = MID(tstr,136,35);
          StripEndingSpaces(mstr);
          ORr.Addr2 = mstr;
          PasteEDICust(CUr,ORr);
        end;

      end;
     
      //nkif (pstr == "CN") then begin   
      if (pstr == "DP") then begin  
        mstr = MID(tstr,31,35);

        StripEndingSpaces(mstr);
        if (nonblank(mstr)) then begin        
          ORr.ShipAddr0 = mstr;
        end;  
        mstr = MID(tstr,136,35);
        StripEndingSpaces(mstr);
        if (nonblank(mstr)) then begin        
        ORr.ShipAddr1 = mstr;
        end;  
// We can't handle more than 255 character long strings
// So I will skip the last line and use that line from the Customer
//        mstr = MID(tstr,276,35);
//        StripEndingSpaces(mstr);
//        ORr.ShipAddr2 = mstr;
//        mstr =  MID(tstr,241,9);
//        StripEndingSpaces(mstr);
//        ORr.ShipAddr2 = ORr.ShipAddr2 & " " & mstr;
      end;
    end;

/* WORKS NK*/
    if ((lstr=="UNS") or (lstr=="2.U")) then begin
       pstr = MID(tstr,4,1);
      if (pstr=="S"/* or pstr==""*/) then begin
        ORr.VersionNr = 1;       
        RecordNew(SMr);
        SetupVATBase(SMr,vatcnt);
        ORr.TotGP = 0;
        s = 0;
        vats = 0;
        rwcnt = MatRowCnt(ORr);
        for (i=0; i<rwcnt; i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          if (nonblank(ORrw.ArtCode)) then begin
            ORr.TotGP = ORr.TotGP + ORrw.rowGP;
            s = s + ORrw.Sum;
            AddVATBase(SMr,ORrw.VATCode,ORrw.Sum,blankval,vatcnt,ORr.InclVAT,ORr.NoTAXonVAT);
          end;
        end;
        temp = ORr.TotGP / s;
        ORr.GPProc = temp/100;
        CalcVATBaseVAT(SMr,ORr.InclVAT,ORr.NoTAXonVAT,vatcnt,vats,t1);
        GetCurncyRoundoff(ORr.CurncyCode,ORr.PayDeal,"ORVc",rndtotal,rndline,rndvat);
        vats = Round(vats,rndvat);
        if (ORr.ExportFlag<>0) then begin
          if (ORr.InclVAT<>0) then begin
            ms2 = s - vats;
          end else begin
            ms2 = s;
          end;  
          vats = 0;
        end else begin
          if (ORr.InclVAT<>0) then begin
            ms2 = s;
          end else begin
            ms2 = s + vats;
          end;
        end;
        ms2 = Round(ms2,rndtotal);
        if (ORr.DiscPerc<>0) then begin
          MulM4ProcVal(ORr.DiscPerc,s,t);
          ORr.DiscSum = t;
        end; 
        ORr.DiscSum = Round(ORr.DiscSum,DefaultRoundMode);
        ORr.Sum1 = s;
        ORr.Sum3 = vats;
        ORr.Sum4 = ms2;
        if (nonblank(ORr.CurncyCode)) then begin
          ORr.BaseSum4 = MulRateToBase1(ORr.CurncyCode,ORr.Sum4,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
        end;  
        if (ORr.CustCode=="") then begin
          ORr.CustCode = ORr.InvoiceToCode;
          ORr.InvoiceToCode = "";
          CUr.Code = ORr.CustCode;
          if (ReadFirstMain(CUr,1,true)) then begin
            PasteEDICust(CUr,ORr);
          end;
        end;
        ORr.CreateDate = CurrentDate;
        ORr.CreateTime = CurrentTime;
        ORr.PriceList = plcode;
        ORr.CustContact = customercontact;
        ORr.Phone = phone;
        ORr.Fax = fax;
        customercontact = "";
        if ( dupordf == false) then begin
          ORr.SerNr = NextSerNr("EDIORVc",ORr.OrdDate,-1,false,"");
          tesf = RecordInsert(ORr,true);
        end;    
        RecordNew(ORr);
        nrofrows = 0;
        itemexistf = false;
      end;
    end;

/* WORKS NK*/
    if (lstr=="LIN") then begin
      nrofrows = nrofrows + 1;
      mstr  = MID(tstr,7,35);
      EDICutTill(mstr,":");
      StripEndingSpaces(mstr); 
      barcode = mstr;
      INr.Code = ""; 
      ORrw.ShipNote = "";
      INr.AlternativeCode = mstr;
      itemexistf = ReadFirstKey("AlternativeCode",INr,1,true);
      if (itemexistf==false) then begin
        INr.Code = "";               
        INr.BarCode = barcode;
        itemexistf = ReadFirstKey("BarCode",INr,1,true);
      end;
      if (itemexistf==false) then begin
        INr.Code = "";               
        INr.EUCodex = barcode;
        itemexistf = ReadFirstKey("EUCodex",INr,1,true);
      end;
      if (itemexistf) then begin 
        IN2r.Code = INr.Code;
        ORrw.ArtCode = INr.Code;
        ORrw.PriceFactor = INr.PriceFactor;
        if (GetItemPriceDiscount3(IN2r.Code,1,IN2r,CUr.CurncyCode,0,0,0,0,0,
              CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
              price,curitemname,reb,vatcode,cost,salesacc,
              CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)) then begin
          if (price==0) then begin price = BlankVal; end;
          if (reb==0) then begin reb = BlankVal; end;
          if (cost==0) then begin cost = BlankVal; end;
          ORrw.Price = price;
          ORrw.vRebate = reb;
          ORrw.BasePrice = cost;
          ORrw.Spec = curitemname;
          ORrw.VATCode = vatcode;
          ORrw.SalesAcc = salesacc;
        end; 
      end;

      if (itemexistf==false) then begin
        ORrw.ArtCode = ""; //"NOT_FOUND";
        ORrw.Price = BlankVal;
        ORrw.BasePrice = BlankVal;
        ORrw.vRebate = BlankVal;
        ORrw.SalesAcc = "";
        ORrw.Objects = "";
      end;
    end;


/* WORKS NK*/
    if (lstr=="QTY") then begin
     //if (pstr == "21") then begin
        mstr  = MID(tstr,7,35);
        EDICutTill(mstr,"'");
        StripEndingSpaces(mstr); 
        ORrw.Quant = StringToVal(mstr,M4UVal);
        if (itemexistf) then begin                       
          IN2r.Code = INr.Code;
          ORrw.ArtCode = INr.Code;
          ORrw.PriceFactor = INr.PriceFactor;
          if (GetItemPriceDiscount3(IN2r.Code,1,IN2r,CUr.CurncyCode,0,0,0,0,0,
                CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)) then begin     
            if (price==0) then begin price = BlankVal; end;
            if (reb==0) then begin reb = BlankVal; end;
            if (cost==0) then begin cost = BlankVal; end;
            ORrw.Price = price;
            ORrw.vRebate = reb;
            ORrw.BasePrice = cost;
            ORrw.Spec = curitemname;
            ORrw.VATCode = vatcode;
            ORrw.SalesAcc = salesacc;
          end;
        end;
     // end;
    end;

/* WORKS NK */
    if (lstr=="UNH") then begin
      nrofrows = 0;
      ORrw.ArtCode = "";
      ORrw.SalesAcc = "";
      ORrw.Objects = "";
      ORrw.Spec = "";
      ORrw.VATCode = "";
      ORrw.Recepy = "";
      ORrw.SerialNr = "";
      ORrw.VARList = "";
      ORrw.Location = "";
      ORrw.Source = "";
      ORrw.PickingTime = "";
      ORrw.InloadingTime = "";
      ORrw.DespatchRowTime = "";
      ORrw.ShipNote = "";
      ORrw.UnitCode = "";
      ORrw.Quant = BlankVal;
      ORrw.Price = BlankVal;
      ORrw.Sum = BlankVal;
      ORrw.vRebate = BlankVal;
      ORrw.Shipd1 = BlankVal;
      ORrw.Shipd2 = BlankVal;
      ORrw.Invd = BlankVal;
      ORrw.BasePrice = BlankVal;
      ORrw.rowGP = BlankVal;
      ORrw.PriceFactor = BlankVal;
      ORrw.UnitFactQuant = BlankVal;
      ORrw.UnitFactPrice = BlankVal;
    end;

/* WORKS */
    if (nrofrows>0) then begin
      CalcSum(ORrw.Quant,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,t,GenOptRec.UseDiscount);  
      ORrw.Sum = t;
      CalcRowGP(ORr,ORrw.VATCode,ORrw.ArtCode,ORrw.Quant,ORrw.BasePrice,ORrw.PriceFactor,ORrw.Sum,ORrw.Price,t);  
      ORrw.rowGP = t;          
      MatRowPut(ORr,nrofrows-1,ORrw);
    end;

    if (testf) then begin
      testf = NextImportLine(false);
    end;
  end; 
  rwcnt = rwcnt + 1;
  RETURN;
END;

global
updating procedure EDIORHANCOMIn()
BEGIN
  record EDIFileBlock EDIFileRec;
  
  BlockLoad(EDIFileRec);
  if ((nonblank(EDIFileRec.ImportFileFolder)) and (nonblank(EDIFileRec.MoveFileFolder))) then begin
//    RunAutoImport("RunEDIORHANCOMIn",EDIFileRec.ImportFileFolder,EDIFileRec.MoveFileFolder);
    RunEDIORHANCOMIn;
  end else begin
    RunEDIORHANCOMIn;
  end;
  RETURN;
END;
