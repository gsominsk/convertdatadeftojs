external function roundmode DefaultRoundMode();
external function string 255 FindINObjects(string,string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure MulM4ProcVal(val,val,var val);
external procedure StripEndingSpaces(var string);
external procedure GetCurncyRoundoff(string,string,string,var roundmode,var roundmode,var roundmode);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure GetDateString(var string);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure CalcVATBaseVAT(record SMVc,Integer,Integer,Integer,var val,var val);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure CalcRowGP(record EDIORVc,string,string,val,val,val,val,val,var val);

procedure GetDateStringGW(var string res)
BEGIN
  string 255 tstr,t2;
  
  tstr = res;
  res = "";
  res = MID(tstr,6,2);
  t2  = MID(tstr,4,2);
  res = res & t2;
  t2  = MID(tstr,0,4);
  res = res & t2;  
  RETURN;
END;

global
updating procedure EDIORGWIn()
BEGIN
  record EDIORVc ORr;
  record EDIORVc OR2r;
  record CUVc CUr;  
  record PLDefVc PLDr;  
  record INVc INr;
  record PLVc PLr;
  record SMVc SMr;  
  row EDIORVc ORrw;
  record PlanDeliveryBlock PDbl;
  string 255 tstr,lstr,rstr,mstr,pstr,plcode,cuvatcode,barcode,invoicetocode;
  string 20 CustCode;
  string 60 CustName;
  string 20 ANACode;
  string 2 PayDeal;
  string 10 ShipDeal,ShipMode;  
  Integer orcnt,i;
  Boolean testf,rowf,pricef,pldeffound,dupordf;
  Boolean itemexistf,recordf;
  Integer rwcnt,vatcnt;
  roundmode rndline,rndtotal,rndvat;
  Date deldate,orddate;
  val t,s,vats,ms2,temp,t1;
  Boolean tesf,custf,custtof;
  record GeneralOptionBlock GenOptRec;

  BlockLoad(GenOptRec);
  RecordNew(ORr);
  BlockLoad(PDbl);
  testf = true;
  dupordf = false;  
  while (testf) begin
    tstr = ImportField();
    testf = NextImportLine(false);
    if (len(tstr)==0) then begin
      testf = false;
    end;
    rowf = false;
    lstr = Left(tstr,4);
    pstr = MID(tstr,4,4);
    StripEndingSpaces(pstr);
    if (lstr=="UNS ") then begin
      ORr.VersionNr = 1;       
      //begin orsumup
      RecordNew(SMr);
      SetupVATBase(SMr,vatcnt);
      ORr.TotGP = 0;
      rwcnt = MatRowCnt(ORr);
      for (i=0; i<rwcnt; i=i+1) begin
        MatRowGet(ORr,i,ORrw);
        if (nonblank(ORrw.ArtCode)) then begin
          ORr.TotGP = ORr.TotGP + ORrw.rowGP;
          s = s + ORrw.Sum;
          AddVATBase(SMr,ORrw.VATCode,ORrw.Sum,blankval,vatcnt,ORr.InclVAT,ORr.NoTAXonVAT);
        end;
      end;
      temp = ORr.TotGP / s;
      ORr.GPProc = temp/100;
      CalcVATBaseVAT(SMr,ORr.InclVAT,ORr.NoTAXonVAT,vatcnt,vats,t1);
      GetCurncyRoundoff(ORr.CurncyCode,ORr.PayDeal,"ORVc",rndtotal,rndline,rndvat);
      vats = Round(vats,rndvat);
      if ((ORr.ExportFlag==1) or (ORr.ExportFlag==2)) then begin
        if (ORr.InclVAT<>0) then begin
          ms2 = s - vats;
        end else begin
          ms2 = s;
        end;  
        vats = 0;
      end else begin
        if (ORr.InclVAT<>0) then begin
          ms2 = s;
        end else begin
          ms2 = s + vats;
        end;
      end;
      ms2 = Round(ms2,rndtotal);
      if (ORr.DiscPerc<>0) then begin
        MulM4ProcVal(ORr.DiscPerc,s,t);
        ORr.DiscSum = t;
      end; 
      ORr.DiscSum = Round(ORr.DiscSum,DefaultRoundMode);
      ORr.Sum1 = s;
      ORr.Sum3 = vats;
      ORr.Sum4 = ms2;
      if (nonblank(ORr.CurncyCode)) then begin
        ORr.BaseSum4 = MulRateToBase1(ORr.CurncyCode,ORr.Sum4,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      end;  
      //orsumup end       
      ORr.CreateDate = CurrentDate;
      ORr.CreateTime = CurrentTime;
      ORr.CustCode = CustCode;
      ORr.Addr0 = CustName;
      ORr.PayDeal = PayDeal;
      ORr.ShipDeal = ShipDeal;
      ORr.ShipMode = ShipMode;  
      ORr.ANACode = ANACode;
      ORr.PriceList = plcode;
      ORr.InvoiceToCode = invoicetocode;
      orcnt = 0;
      if ( dupordf == false) then begin
        if (ORr.SerNr==-1) then begin
          ORr.SerNr = NextSerNr("EDIORVc",ORr.OrdDate,-1,false,"");            
        end;
        if (ORr.SerNr!=-1) then begin
          tesf = RecordInsert(ORr,true);
        end;  
      end;    
      goto L77;
    end;
    if (lstr=="YGOL") then begin
        mstr = MID(tstr,43,6);
        StripEndingSpaces(mstr);
        GetDateString(mstr);
        orddate = StringToDate(mstr);
        ORr.OrdDate = orddate;
    end;
    if (lstr=="NAD ") then begin
      if (pstr == "BT") then begin
        cuvatcode = "";
        plcode = "";
        mstr = MID(tstr,8,12);
        StripEndingSpaces(mstr);
        custtof = false;
        CUr.ANACode = mstr;
        if (ReadFirstKey("ANACode",CUr,1,true)) then begin
          custtof = true;
        end;
        if (custtof==false) then begin
          CUr.Code = mstr;
          if (ReadFirstMain(CUr,1,true)) then begin
            custtof = true;
          end;
        end;
        if (custtof) then begin
          plcode = CUr.PLCode;
          cuvatcode = CUr.VATCode;
          invoicetocode = CUr.Code;
          CustName = CUr.Name;
        end;
      end;
      if (pstr == "ST") then begin
        mstr = MID(tstr,8,12);        
        StripEndingSpaces(mstr);
        custf = false;
        CUr.ANACode = mstr;
        if (ReadFirstKey("ANACode",CUr,1,true)) then begin
          custf = true;
        end;
        if (custf==false) then begin
          CUr.Code = mstr;
          if (ReadFirstMain(CUr,1,true)) then begin
            custf = true;
          end;
        end;
        if (custf) then begin
          CustCode = CUr.Code;
          PayDeal = CUr.PayDeal;
          ShipDeal = CUr.ShipDeal;
          ShipMode = CUr.ShipMode;
          ANACode = CUr.ANACode;
          ORr.Addr0 = CUr.Name;
          ORr.Addr1 = CUr.InvAddr0;
          ORr.Addr2 = CUr.InvAddr1;
          ORr.Addr3 = CUr.InvAddr2;                 
          ORr.ShipAddr0 = CUr.DelAddr0;                 
          ORr.ShipAddr1 = CUr.DelAddr1;                 
          ORr.ShipAddr2 = CUr.DelAddr2;
        end;
        if (pstr == "VN") then begin     
        end;
        if (pstr == "SU") then begin     
        end;
      end;
    end;  
    if (lstr=="DTM ") then begin
      if (pstr == "002") then begin
        mstr  = MID(tstr,8,8);
        GetDateStringGW(mstr);
        deldate = StringToDate(mstr);
        ORr.PlanShip = deldate;
        ORr.PlanShipDate = deldate;
      end;
    end;
    /*Only use CUX if needed by client*/
    /*  
    if (lstr=="CUX ") then begin
      if (pstr == "2") then begin
        mstr  = MID(tstr,8,4);
        StripEndingSpaces(mstr);
        ORr.CurncyCode = mstr;
      end;
    end;
    */                  
    if (lstr=="BGM ") then begin
      mstr = MID(tstr,52,13);
      StripEndingSpaces(mstr);
      OR2r.CustOrdNr = mstr; 
      ORr.CustOrdNr = mstr;      
      if (ReadFirstKey("CustOrdNr",OR2r,1,true)) then begin
        dupordf = true;
      end;
    end;      
    if (lstr=="LIN ") then begin
      mstr  = MID(tstr,15,15);
      StripEndingSpaces(mstr); 
      barcode = mstr;
      itemexistf = false;
      INr.Code = ""; 
      INr.AlternativeCode = mstr;
      itemexistf = ReadFirstKey("AlternativeCode",INr,1,true);
      if (itemexistf==false) then begin
        INr.Code = "";               
        INr.BarCode = barcode;
        itemexistf = ReadFirstKey("BarCode",INr,1,true);
      end;
      if (itemexistf) then begin                       
        ORrw.ArtCode = INr.Code;
        ORrw.Spec = INr.Name;
        pricef = false;
        pldeffound = false;
        PLDr.PLReplCode = plcode;
        if (PDbl.PLBasedOn==1) then begin
          PLDr.StartDate = deldate;        
        end else begin
          PLDr.StartDate = orddate;        
        end;  
        if (ReadLastKey("PLReplCode",PLDr,2,false)) then begin 
          if (DateInRange(deldate,PLDr.StartDate,PLDr.EndDate)) then begin
            plcode = PLDr.Code;
            pldeffound = true;
          end;
        end;
        if (pldeffound==false) then begin
          PLDr.Code = plcode;
          if (ReadFirstMain(PLDr,1,true)) then begin             
          end;          
        end;        
        PLr.ArtCode = ORrw.ArtCode;
        PLr.PLCode = plcode;                    
        if (ReadFirstMain(PLr,2,true)) then begin          
          ORrw.Price = PLr.ExVatPrice; 
          pricef = true;
        end;                            
        if (pricef==false) then begin                
          ORrw.Price = INr.UPrice1; 
        end;
        ORrw.BasePrice = INr.InPrice;
        ORrw.PriceFactor = INr.PriceFactor;
        ORrw.SalesAcc = INr.SalesAcc;
        ORrw.Objects = FindINObjects(INr.Objects,INr.Group);
        if (nonblank(cuvatcode)) then begin
          ORrw.VATCode = cuvatcode;
        end else begin
          ORrw.VATCode = INr.VATCode;
        end; 
      end;
    end;
    if (lstr=="IMD ") then begin
      mstr = MID(tstr,28,34);
      StripEndingSpaces(mstr);
      if (Len(mstr) >0) then begin
        ORrw.Spec = mstr;
      end;
    end;
    if (lstr=="QTY ") then begin
      if (pstr=="21") then begin
        mstr  = MID(tstr,8,15);
        ORrw.Quant = StringToVal(mstr,M4Qty);
      end;
      rowf = true;
    end;
    if (rowf) then begin
      ORrw.stp = 1;
      CalcSum(ORrw.Quant,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,t,GenOptRec.UseDiscount);  
      ORrw.Sum = t;
      CalcRowGP(ORr,ORrw.VATCode,ORrw.ArtCode,ORrw.Quant,ORrw.BasePrice,ORrw.PriceFactor,ORrw.Sum,ORrw.Price,t);  
      ORrw.rowGP = t;          
      MatRowPut(ORr,orcnt,ORrw);
      orcnt = orcnt + 1;
    end;
    L77:; 
  end; 
  RETURN;
END;
