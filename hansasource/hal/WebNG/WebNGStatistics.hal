external function string 10 ToolWebNGGetCountry();
external function string 10 CurrentWebLang();

function string 255 CalcSortKey(string host,string custcode,string country,string pathrequested)
begin
  string 255 res;
  
  res = right(host,10);
  res = res & left(custcode,5) & right(custcode,5);
  res = res & left(country,10);
  res = res & mid(pathrequested,5,10) & right(pathrequested,5);

  CalcSortKey = res;
  return;
end;

global
updating procedure LogOneWebNGAccess(date dt,string host,integer type,string code,string langrequested,string langsent,string custcode,string country,longint enabregno,string reqpath,string usercode,string program,string version)
begin
  record WebNGStatVc WSr;
  record CUCOEnabActVc CUCOEnabActr;
  string 255 sortkey;
  boolean res,foundf,updatef;
  integer cnt;
  string 255 lcustcode;
  longint lenabregno;
  
  lcustcode = custcode;
  lenabregno = StringToLongInt(enabregno);
  if (blank(lcustcode) and lenabregno>0) then begin
    CUCOEnabActr.SerNr = lenabregno;
    if (ReadFirstMain(CUCOEnabActr,1,true)) then begin
      lcustcode = CUCOEnabActr.CustCode;
    end;
  end;

  updatef = false;
  sortkey = CalcSortKey(host,lcustcode,country,reqpath);

  cnt = 0;
  foundf = true;
  WSr.AccessDate = dt;
  WSr.Type = type;
  WSr.Code = code;
  WSr.LangRequested = langrequested;
  WSr.LangSent = langsent;
  WSr.SortKey = sortkey;
  while (LoopKey("LongKey",WSr,6,foundf)) begin
    if (WSr.SortKey!=sortkey) then begin
      foundf = false;
    end;
    if (foundf) then begin
      cnt = cnt + 1;
      if ((WSr.Host==host or WSr.CustCode==lcustcode) and WSr.Country==country and WSr.PathRequested==reqpath and WSr.UserCode==usercode and WSr.Program==program and WSr.Version==version) then begin
        updatef = true;
        foundf = false;
        WSr.Counter = WSr.Counter + 1;
        if (lenabregno>0) then begin
          WSr.EnabRegNo = lenabregno;
        end;
      end;
    end;
  end;

  if (cnt>10) then begin
    LogText(0,"Warning: Too many pokes to find existing web statistics record: cnt=" & cnt);
  end;
  
  if (updatef==false) then begin
    RecordNew(WSr);
    WSr.SerNr = NextSerNr("WebNGStatVc",CurrentDate,-1,false,"");
    WSr.Type = type;
    WSr.Code = code;
    WSr.LangRequested = langrequested;
    WSr.LangSent = langsent;
    WSr.CustCode = lcustcode;
    WSr.Host = host;
    WSr.AccessDate = dt;
    WSr.Country = country;
    WSr.PathRequested = reqpath;
    WSr.SortKey = sortkey;
    
    WSr.EnabRegNo = lenabregno;
    WSr.Counter = 1;
    WSr.UserCode = usercode;
    WSr.Program = program;
    WSr.Version = version;
  end;

  if (RecordStore(WSr,true)) then begin end;
  return;
end;

global
updating procedure LogOneWebNGAccess2(date dt,string host,integer type,string code,string langrequested,string langsent,string custcode,string country,longint enabregno,string reqpath,string usercode,string program,string version,UUID sessionID,time t)
begin
  record WebNGStatVc WSr;
  record CUCOEnabActVc CUCOEnabActr;
  string 255 sortkey;
  boolean res,foundf,updatef;
  integer cnt;
  string 255 lcustcode;
  longint lenabregno;
  area reply,req;
  
  lcustcode = custcode;
  lenabregno = StringToLongInt(enabregno);
  if (blank(lcustcode) and lenabregno>0) then begin
    CUCOEnabActr.SerNr = lenabregno;
    if (ReadFirstMain(CUCOEnabActr,1,true)) then begin
      lcustcode = CUCOEnabActr.CustCode;
    end;
  end;

  updatef = false;
  sortkey = CalcSortKey(host,lcustcode,country,reqpath);
  cnt = 0;
  foundf = true;
  WSr.AccessDate = dt;
  WSr.Type = type;
  WSr.Code = code;
  WSr.LangRequested = langrequested;
  WSr.LangSent = langsent;
  WSr.SortKey = sortkey;
  WSr.SessionID = sessionID;
  while (LoopKey("LongKey",WSr,7,foundf)) begin
    if (WSr.SessionID!=sessionID) then begin
      foundf = false;
    end;
    if (foundf) then begin
      cnt = cnt + 1;
      if ((WSr.Host==host or WSr.CustCode==lcustcode) and WSr.Country==country and WSr.PathRequested==reqpath and WSr.UserCode==usercode and WSr.Program==program and WSr.Version==version and WSr.IP==WebRemoteIpAddress and WSr.SessionID==sessionID) then begin
        updatef = true;
        foundf = false;
        WSr.Counter = WSr.Counter + 1;
        WSr.EndTime = t;
        if (lenabregno>0) then begin
          WSr.EnabRegNo = lenabregno;
        end;
      end;
    end;
  end;

  if (cnt>10) then begin
    LogText(0,"Warning: Too many pokes to find existing web statistics record: cnt=" & cnt);
  end;
  
  if (updatef==false) then begin
    RecordNew(WSr);
    WSr.SerNr = NextSerNr("WebNGStatVc",CurrentDate,-1,false,"");
    WSr.Type = type;
    WSr.Code = code;
    WSr.LangRequested = langrequested;
    WSr.LangSent = langsent;
    WSr.CustCode = lcustcode;
    WSr.Host = host;
    WSr.AccessDate = dt;
    WSr.Country = country;
    WSr.PathRequested = reqpath;
    WSr.SortKey = sortkey;
    WSr.IP = WebRemoteIpAddress;
    WSr.SessionID = sessionID;
    WSr.StartTime = t;
    WSr.EndTime = t;
    
    WSr.EnabRegNo = lenabregno;
    WSr.Counter = 1;
    WSr.UserCode = usercode;
    WSr.Program = program;
    WSr.Version = version;
  end;

  if (RecordStore(WSr,true)) then begin end;
  return;
end;

global
procedure LogWebNGStructAccess(longint SerNr)
begin
  string 255 custcode,sessionID;
  time starttime;
  
  custcode = CurrentCust;
  if (blank(custcode)) then begin
    custcode = WebGetArg("custcode");
  end;
  queued.LogOneWebNGAccess2(CurrentDate,WebHost,kWebAccessStructure,SerNr,CurrentWebLang,"",custcode,ToolWebNGGetCountry,WebGetArg("enabregno"),WebGetArg("path"),WebGetArg("usercode"),WebGetArg("program"),WebGetArg("version"),GetWebSessionUUID,CurrentTime);
  return;
end;

global
procedure LogWebNGElementAccess(string code,string langsent)
begin
  string 255 custcode;
  
  custcode = CurrentCust;
  if (blank(custcode)) then begin
    custcode = WebGetArg("custcode");
  end;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessElement,code,CurrentWebLang,langsent,custcode,ToolWebNGGetCountry,StringToLongint(WebGetArg("enabregno")),WebGetArg("path"),WebGetArg("usercode"),WebGetArg("program"),WebGetArg("version"));
  return;
end;

global
procedure LogWebNGMasterGlobeClick()
begin
  if (WebGetArg("btntype")!="market") then begin
    queued.LogOneWebNGAccess2(CurrentDate,WebHost,kWebAccessMasterGlobe,"",WebGetArg("prog_lang"),"",WebGetArg("custcode"),WebGetArg("company"),StringToLongint(WebGetArg("enabregno")),WebGetArg("path"),WebGetArg("usercode"),WebGetArg("program"),WebGetArg("version"),GetWebSessionUUID,CurrentTime);
  end;
  return;
end;

global
procedure LogWebNGMasterPayClick()
begin
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMasterPay,"",WebGetArg("prog_lang"),"",WebGetArg("custcode"),WebGetArg("company"),StringToLongint(WebGetArg("enabregno")),WebGetArg("path"),WebGetArg("usercode"),WebGetArg("program"),WebGetArg("version"));
  return;
end;

global
procedure LogWebNGMasterHelpClick()
begin
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMasterHelp,"",WebGetArg("prog_lang"),"",WebGetArg("customercode"),"",StringToLongint(WebGetArg("enablerreg")),WebGetArg("path"),WebGetArg("usercode"),WebGetArg("program"),WebGetArg("version"));
  return;
end;

global
procedure LogWebNGHansaManualsPageAccess(LongInt originalmailno,string thecode,string theconf,string langrequested,string langsent)
begin
  string 255 reqparam;
  reqparam = "theconf=" & theconf & "&thecode=" & thecode & "&mailnumber=" & originalmailno;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessHansaManualsPage,reqparam,langrequested,langsent,"","",-1,reqparam,"","","");
  return;
end;

// moved to ahansamail/
// global
// procedure LogWebNGMasterBannerClick()
// begin
//   queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMasterBannner,"",WebGetArg("prog_lang"),"",WebGetArg("custcode"),
//                             WebGetArg("country"),StringToLongint(WebGetArg("enabregno")),WebGetArg("wcnr"),WebGetArg("usercode"),WebGetArg("program"),WebGetArg("version"));
//   return;
// end;

global
procedure LogWebNGMarketplaceClick()
begin
  string 255 program,country;
  
  program = WebGetArg("program");
  if (blank(program)) then begin
    program = WebGetArg("prog_productcode");
  end;
  country = WebGetArg("country");
  if (blank(country)) then begin
    country = WebGetArg("prog_country");
  end;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMarketplace,"",WebGetArg("prog_lang"),"",WebGetArg("custcode"),
                           country,StringToLongint(WebGetArg("enabregno")),WebGetArg("wcnr"),WebGetArg("usercode"),program,WebGetArg("version"));
  return;
end;

global
procedure LogWebNGMarketplaceRegisterCreditCardClick()
begin
  string 255 program,country;
  
  program = WebGetArg("program");
  if (blank(program)) then begin
    program = WebGetArg("prog_productcode");
  end;
  country = WebGetArg("country");
  if (blank(country)) then begin
    country = WebGetArg("prog_country");
  end;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMarketplaceRegisterCC,"",WebGetArg("prog_lang"),"",WebGetArg("custcode"),
                           country,StringToLongint(WebGetArg("enabregno")),WebGetArg("wcnr"),WebGetArg("usercode"),program,WebGetArg("version"));
  return;
end;

global
procedure LogWebNGMarketplaceRedeemIntStdActivCodeClick()
begin
  string 255 program,country;
  
  program = WebGetArg("program");
  if (blank(program)) then begin
    program = WebGetArg("prog_productcode");
  end;
  country = WebGetArg("country");
  if (blank(country)) then begin
    country = WebGetArg("prog_country");
  end;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMarketplaceRedeemActivationCode,"",WebGetArg("prog_lang"),"",WebGetArg("custcode"),
                           country,StringToLongint(WebGetArg("enabregno")),WebGetArg("wcnr"),WebGetArg("usercode"),program,WebGetArg("version"));
  return;
end;

global
procedure LogWebNGMarketplaceRedeemIntStdActivCodeResult(string errmsg)
begin
  string 255 program,country;
  
  program = WebGetArg("program");
  if (blank(program)) then begin
    program = WebGetArg("prog_productcode");
  end;
  country = WebGetArg("country");
  if (blank(country)) then begin
    country = WebGetArg("prog_country");
  end;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMarketplaceRedeemActivationCodeResult,errmsg,WebGetArg("prog_lang"),"",WebGetArg("custcode"),
                           country,StringToLongint(WebGetArg("enabregno")),WebGetArg("wcnr"),WebGetArg("usercode"),program,WebGetArg("version"));
  return;
end;

global
procedure LogWebNGMarketplaceRegisterCreditCardResult(string errmsg)
begin
  string 255 program,country;
  
  program = WebGetArg("program");
  if (blank(program)) then begin
    program = WebGetArg("prog_productcode");
  end;
  country = WebGetArg("country");
  if (blank(country)) then begin
    country = WebGetArg("prog_country");
  end;
  queued.LogOneWebNGAccess(CurrentDate,WebHost,kWebAccessMarketplaceRegisterCCResult,errmsg,WebGetArg("prog_lang"),"",WebGetArg("custcode"),
                           country,StringToLongint(WebGetArg("enabregno")),WebGetArg("wcnr"),WebGetArg("usercode"),program,WebGetArg("version"));
  return;
end;

global
procedure HTSHMLogWebNGStatStandard(area data)
begin
  string 255 host,program,version,prog_lang,custcode,country,reqpath,usercode;
  Integer kWebAccess;
  LongInt enabregno;
  
  host = GetTabTextFromArea(0,0,data);
  kWebAccess = StringToInt(GetTabTextFromArea(0,1,data));
  program = GetTabTextFromArea(0,2,data);
  version = GetTabTextFromArea(0,3,data);
  prog_lang = GetTabTextFromArea(0,4,data);
  custcode = GetTabTextFromArea(0,5,data);
  country = GetTabTextFromArea(0,6,data);
  reqpath = GetTabTextFromArea(0,7,data);
  usercode = GetTabTextFromArea(0,8,data);
  enabregno = -1;

  queued.LogOneWebNGAccess(CurrentDate,host,kWebAccess,"",prog_lang,"",custcode,country,enabregno,reqpath,usercode,program,version);
  return;
end;
