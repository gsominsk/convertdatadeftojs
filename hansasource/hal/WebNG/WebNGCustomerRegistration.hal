external function Boolean CustomerWithEmailExists(string,string);
//tools
external function string 10 CurrentWebLang();
external function string 255 FormatLink(string,string,boolean,boolean);
external function string 255 FormatSimpleLink(string,boolean);
external procedure GetListOfCompaniesForCountry(string,var array integer,var array string);
external function string 10 ToolWebNGGetCountry();
external procedure RollbackOneRequestURL();
external function boolean LoginState();
external procedure UpdateWebCountry(string);
external function string 255 GetTranslatedNameCountry(record WebNGCountryVc);
//shop
external function boolean ShopPerCountry();
//translation
external function string 255 ToolWebNGTranslateText(integer);
external function string 255 ToolWebNGTranslateTextLang(integer,string);
//webng
external procedure RedirectToStartPage();
external procedure RedirectToRequestedPage();
external procedure RedirectToURL(string);
//old code:
external procedure ToolWebGetTheTextWithLangCode(Integer,var string,string);
external procedure AddTextLineToLetter(string,record LetVc);
external function string 255 GeneratePassword2(Integer);
external procedure GetCustEmail(record CUVc,var string);
external procedure OldCodeContactTextBox(string,string,record NotepadVc);
external procedure OldCodeWebHBSDivContactLine(string,string,string,Boolean);
external function Boolean GetNextCustNr(var string);
external procedure ToolWebSetCustInfo(var record CUVc);

global
updating procedure UpdateCustomerRegistration(boolean newcust,string companyname,string custname,string addr1,string addr2,string addr3,string addr4,string addr5,
                                              string orgno,string telephone,string email,string fax,string password,string confirmpassword,string comment)
begin
  return;
end;

global
procedure CountryWithCompanyDropDown(string thetext,string thename,string thevalue,boolean showall)
begin
  record WebNGCountryVc WCr;
  record WebNGCompCountryVc WCCr;
  string 255 lastcountry;
  
  WebOutTagOpen("<tr valign=""top"">");
  WebOutTagOpen("<td width=""28%"" class=""feedback-txt"">");
  WebOutStringFormat(thetext);
  WebOutTagClose("</td>");
  WebOutTagOpen("<td width=""72%"">");
  WebOutTagOpen("<select name=""" & thename & """ size=""1"">");
  WebOutTagOpen("<option value="""">");
  WebOutStringFormat(ToolWebNGTranslateText(20055));
  WebOutTagClose("</option>");
  
  WCCr.Country = "";
  while (LoopKey("Country",WCCr,1,true)) begin
    if (WCCr.Country!=lastcountry) then begin
      lastcountry = WCCr.Country;
      WCr.Code = WCCr.Country;
      if (ReadFirstMain(WCR,1,true)) then begin
        if (WCr.ShowOnWeb or showall) then begin
          if (WCr.Code==thevalue) then begin
            WebOutTagOpen("<option selected value=""" & WCr.Code & """>");
          end else begin
            WebOutTagOpen("<option value=""" & WCr.Code & """>");
          end;
          WebOutStringFormat(GetTranslatedNameCountry(WCr));
          WebOutTagClose("</option>");
        end;
      end;
    end;
  end;

  WebOutTagClose("</select>");
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  
  return;
end;

procedure ClearRegisterCUSessionVariables()
begin
  integer i,cnt;
  PutSessionString("regcu_complete","");

  PutSessionString("regcu_companyname","");
  PutSessionString("regcu_personname","");
  PutSessionString("regcu_address1","");
  PutSessionString("regcu_address2","");
  PutSessionString("regcu_address3","");
  PutSessionString("regcu_address4","");
  PutSessionString("regcu_address5","");
  PutSessionString("regcu_email","");
  PutSessionString("regcu_orgnr","");
  PutSessionString("regcu_phone","");
  PutSessionString("regcu_fax","");
  PutSessionString("regcu_passwd","");
  PutSessionString("regcu_comment","");
  PutSessionString("regcu_errorflags","");
  PutSessionString("regcu_errormsg","");
  PutSessionString("regcu_custcode","");
  PutSessionString("regcu_hmcompany","");
  PutSessionString("regcu_country","");

  return;
end;

procedure ClearForgotPwdSessionVariables()
begin
  PutSessionString("forgotpwd_complete","");
  
  PutSessionString("forgotpwd_custcode","");
  PutSessionString("forgotpwd_hmcompany","");
  PutSessionString("forgotpwd_errorflags","");
  PutSessionString("forgotpwd_method","");
  
  return;
end;

global
procedure ShowRegisterCUElement(record WebNGElementVc WEr)
begin
  Boolean res;
  string 255 tstr;
  LongInt interestf;
  string 255 llink;
  integer i;
  string 255 companyname;
  string 255 personname;
  string 255 address1;
  string 255 address2;
  string 255 address3;
  string 255 address4;
  string 255 address5;
  string 255 email;
  string 255 orgnr;
  string 255 phone;
  string 255 fax;
  string 255 passwd;
  string 255 comment;
  string 255 country;
  integer hmcompany;
  record NotepadVc Noter;
  integer errorflags,errormsg;
  array integer numberlist;
  array string 244 namelist;
  boolean firstline;
  
  RollbackOneRequestURL;
  if (GetSessionString("regcu_complete")=="1") then begin

    WebOutTagOpen("<p class=""heading3"">");
    WebOutStringFormat(ToolWebNGTranslateText(25407)); //Thank you!
    WebOutTagClose("</p>");
    WebOutTagOpen("<p>");
    WebOutStringFormat(ToolWebNGTranslateText(20088) & " " & GetSessionString("regcu_custcode"));
    WebOutTagClose("</p>");
    WebOutTagOpen("<p>");
    WebOutStringFormat(ToolWebNGTranslateText(25900)); //You can use this Customer Code to login to the shop in the future. Please use the VAT Registration Number you supplied (listed below) when registering any product you buy on this shop
    WebOutTagClose("</p>");
    WebOutTagOpen("<p class=""bluefont"">");
    WebOutStringFormat(GetSessionString("regcu_orgnr"));
    WebOutTagClose("</p>");

    if (true) then begin //TODO: make this a setting
      WebOutTagOpen("<form method=""POST"" action=""" & FormatLink("/dologin","",true,true) & """>");
      if (nonblank(GetCookie("HSESSION")) or nonblank(GetCookie("langcode")) or nonblank(GetCookie("country"))) then begin
        WebOutStringFormatNL("<input type=""hidden"" id=""cooksess"" name=""cooksess"" value=""true"">");
      end;
      WebOutStringFormatNL("<input type=""hidden"" id=""failed"" name=""failed"" value=""" & FormatLink("WebAction.hal","action=afterlogin&failed=1",true,true) & """>");
      WebOutStringFormatNL("<input type=""hidden"" id=""custpage"" name=""custpage"" value=""" & FormatLink("WebAction.hal","action=afterlogin",true,true) & """>");
      WebOutStringFormatNL("<input type=""hidden"" id=""company"" name=""company"" value=""" & GetSessionString("regcu_hmcompany") & """>");
      WebOutStringFormatNL("<input type=""hidden"" id=""login"" name=""login"" value=""" & GetSessionString("regcu_custcode") & """>");
      WebOutStringFormatNL("<input type=""hidden"" id=""passwd"" name=""passwd"" value=""" & GetSessionString("regcu_passwd") & """>");
      WebOutStringFormatNL("<input type=""submit"" " & /*class=""loginbutton"" */" id=""s1"" name=""s1"" value=""" & ToolWebNGTranslateText(25518) & """>"); //Login //Complete and Login
      WebOutTagClose("</form>");
    end;
    
    ClearRegisterCUSessionVariables;
  end else begin
    companyname = GetSessionString("regcu_companyname");
    personname  = GetSessionString("regcu_personname");
    address1    = GetSessionString("regcu_address1");
    address2    = GetSessionString("regcu_address2");
    address3    = GetSessionString("regcu_address3");
    address4    = GetSessionString("regcu_address4");
    address5    = GetSessionString("regcu_address5");
    email       = GetSessionString("regcu_email");
    orgnr       = GetSessionString("regcu_orgnr");
    phone       = GetSessionString("regcu_phone");
    fax         = GetSessionString("regcu_fax");
    passwd      = GetSessionString("regcu_passwd");
    comment     = GetSessionString("regcu_comment");
    hmcompany   = StringToInt(GetSessionString("regcu_hmcompany"));
    country     = GetSessionString("regcu_country");
    if (blank(country)) then begin
      country = ToolWebNGGetCountry;
    end;

    errorflags  = StringToInt(GetSessionString("regcu_errorflags"));
    errormsg    = StringToInt(GetSessionString("regcu_errormsg"));
    
    ClearRegisterCUSessionVariables;
        
    WebOutTagOpen("<form method=""post"" action=""" & FormatLink("/WebUpdatingAction.hal","?action=save_newcust",true,true) & """>");
    WebOutTagOpen("<table width=""100%"" border=""0"" cellpadding=""1"" cellspacing=""0"">");
    WebOutStringFormatNL("<input type=""hidden"" id=""path"" name=""path"" value=""" & WebGetArg("path") & """>");

    if (errormsg!=0) then begin
      WebOutTagOpen("<tr>");
      WebOutTagOpen("<td colspan=""2"" class=""error"">");
      WebOutStringFormat(ToolWebNGTranslateText(errormsg));
      WebOutTagClose("</td>");
      WebOutTagOpen("<td colspan=""2"">");
      WebOutStringFormat("&nbsp;");
      WebOutTagClose("</td>");
      WebOutTagClose("</tr>");
    end;

    if (errorflags!=0) then begin
      WebOutTagOpen("<tr>");
      WebOutTagOpen("<td colspan=""2"" class=""error"">");
      WebOutStringFormat(ToolWebNGTranslateText(25002)); //The following required fields are missing:
      WebOutTagOpen("<ul>");
      if (BitAnd(errorflags,1)==1) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20059) & "</li>");
      end;
      if (BitAnd(errorflags,2)==2) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20058) & "</li>");
      end;
      if (BitAnd(errorflags,4)==4) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20082) & "</li>");
      end;
      if (BitAnd(errorflags,8)==8) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20062) & "</li>");
      end;
      if (BitAnd(errorflags,64)!=0) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20060) & "</li>");
      end;
      if (BitAnd(errorflags,16)==16) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20083) & "</li>");
      end;      
      if (BitAnd(errorflags,32)==32) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20065) & "</li>");
      end;      
      WebOutTagClose("<ul>");
      WebOutTagClose("</td>");
      WebOutTagClose("</tr>");
    end;

//----------

    numberlist[0] = 0;
    GetListOfCompaniesForCountry(ToolWebNGGetCountry,numberlist,namelist);
    if (numberlist[0]>1) then begin
      firstline = true;
      for (i=1;i<=numberlist[0];i=i+1) begin
        if (firstline) then begin
          WebOutTagOpen("<tr>");
          WebOutTagOpen("<td colspan=""2"">");
          WebOutStringFormat(ToolWebNGTranslateText(25901) & "<br>"); //Select which company you want to register as a customer in:
          WebOutTagOpen("<select name=""hmcompany"" id=""hmcompany"">");
          firstline = false;
        end;
        if (numberlist[i] == hmcompany) then begin
          WebOutTagOpen("<option selected value=""" & numberlist[i] & """>");
        end else begin
          WebOutTagOpen("<option value=""" & numberlist[i] & """>");
        end;
        WebOutStringFormat(namelist[i]);
        WebOutTagClose("</option>");
      end;
      if (firstline==false) then begin
        WebOutTagClose("</select>");
        WebOutTagClose("</td>");
        WebOutTagClose("</tr>");
      end;
    end else begin
      if (numberlist[0]==1) then begin
        WebOutStringFormatNL("<input type=""hidden"" id=""hmcompany"" name=""hmcompany"" value=""" & numberlist[1] & """>");
      end;
    end;

//--------
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20059) & " (*)","companyname",companyname,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20058) & " (*)","personname",personname,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20069),"address1",address1,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20070),"address2",address2,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20071),"address3",address3,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20072),"address4",address4,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20073),"address5",address5,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20082) & " (*)","orgnr",orgnr,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20062) & " (*)","phone",phone,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20060) & " (*)","email",email,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20063),"fax",fax,false);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20083) & " (*)","passwd",passwd,true);
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20084),"comment",comment,false);
    if (ShopPerCountry) then begin
      CountryWithCompanyDropDown(ToolWebNGTranslateText(20065) & "  (*)","country",country,true);
      WebOutStringFormatNL("<input type=""hidden"" id=""countryshown"" name=""countryshown"" value=""1"">");
    end;
    OldCodeWebHBSDivContactLine(ToolWebNGTranslateText(20066),"","",false);
    WebOutTagOpen("<tr valign=""top"">");
    WebOutTagOpen("<td width=""28%"">");
    WebOutStringFormat("&nbsp;");
    WebOutTagClose("</td>");
    WebOutTagOpen("<td width=""72%"">");
    WebOutStringFormatNL("<input type=""submit"" name=""Submit"" value=""" & ToolWebNGTranslateText(20067) & """>");
    WebOutStringFormatNL("<input type=""reset"" name=""Reset"" value=""" & ToolWebNGTranslateText(20068) & """>");
    WebOutTagClose("</td>");
    WebOutTagClose("</tr>");
    WebOutTagClose("</table>");
    WebOutTagClose("</form>");
  end;

  return;
end;

procedure ValidateCustDetails(string companyname,string personname,string address1,string address2,string address3,string address4,string address5,string email,
                              string orgnr,string phone,string fax,string passwd,string comment,var integer errormsg)
begin
  record CUVc CUr;
  boolean storef;
  
  storef = true;
  CUr.Name = companyname;
  if (nonblank(CUr.Name)) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      errormsg = 20085;
      storef = false;
    end;
  end;
  
  CUr.VATNr = orgnr;
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      errormsg = 20085;
      storef = false;
    end;
  end;
  return;
end;

updating procedure StoreNewCustomer(string companyname,string personname,string address1,string address2,string address3,string address4,string address5,
                                      string email,string orgnr,string phone,string fax,string passwd,string comment,
                                      var integer errormsg,var string custcode,var integer newcomp,string country)
begin
  record CUVc CUr;
  record CUVc tempCUr;
  Boolean storef;
  string 255 passw;
  Integer oldcomp;
  Boolean res;
  integer mcomp;
  boolean foundf;
  record WebNGCompCountryVc WCCr;
  
  errormsg = 0;
  
  mcomp = newcomp;
  if (nonblank(country)) then begin
    foundf = false;
    WCCr.CompanyNr = mcomp;
    if (ReadFirstMain(WCCr,1,true)) then begin
      if (WCCr.Country==country) then begin
        foundf = true;
      end;
    end;
    
    if (foundf==false) then begin
      mcomp = -1;
      foundf = true;
      ResetLoop(WCCr);
      WCCr.Country = country;
      if (LoopKey("Country",WCCr,1,foundf)) then begin
        if (WCCr.Country!=country) then begin
          foundf = false;
        end;
        if (foundf) then begin
          if (mcomp==-1) then begin
            mcomp = WCCr.CompanyNr;
          end;
          if (WCCr.CountryDefault==1) then begin
            mcomp = WCCr.CompanyNr;
            foundf = false;
          end;
        end;
      end;
      if (mcomp==-1) then begin
        errormsg = 20086;
        goto LStoreNewCustomer;
      end;
    end;
  end;
  
  if (mcomp!=newcomp) then begin
    newcomp = mcomp;
    UpdateWebCountry(country);
  end;
  
  oldcomp = CurrentCompany;
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res = SetCompany(newcomp,false);
  end;
  
  storef = true;

  RecordNew(CUr);
  //VALIDATE
  CUr.Name = companyname;
  if (nonblank(CUr.Name)) then begin
    if (ReadFirstKey("Name",CUr,1,true)) then begin
      errormsg = 20085;
      storef = false;
    end;
  end;
  CUr.VATNr = orgnr;
  if ((storef) and (nonblank(CUr.VATNr))) then begin
    if (ReadFirstKey("VATNr",CUr,1,true)) then begin
      errormsg = 20085;
      storef = false;
    end;
  end;
  if (storef) then begin
    if (CustomerWithEmailExists("",email)) then begin
      errormsg = 20766;
    end;
  end;
  if (errormsg!=0) then begin
    storef = false;
  end;
  if (storef) then begin
    CUr.CUType = 1;
    CUr.Name = companyname;
    CUr.Person = personname;
    CUr.InvAddr0 = address1;
    CUr.InvAddr1 = address2;
    CUr.InvAddr2 = address3;
    CUr.InvAddr3 = address4;
    CUr.InvAddr4 = address5;
    CUr.VATNr = orgnr;
    CUr.eMail = email;
    CUr.Phone = phone;
    CUr.Fax = fax;
    CUr.AllowLogin = 1;
    CUr.CustCat = "WWW";
    CUr.Comment = comment;
    if (GetNextCustNr(passw)) then begin end;
    CUr.Code = passw;
    RecordCopy(tempCUr,CUr);
    if (ReadFirstMain(tempCUr,1,true)) then begin
      storef = false;
    end;
    passw = passwd;
    if (blank(CUr.Code)) then begin
      errormsg = 20086;
      storef = false;
    end;
    if ((blank(CUr.Name)) or
        (blank(CUr.Person)) or
        (blank(CUr.VATNr)) or
        (blank(CUr.Phone)) or
        (blank(passw))) then begin
      errormsg = 20087;
      storef = false;
    end;
  end;
  if (storef) then begin
    ToolWebSetCustInfo(CUr);
    storef = WebStoreCust(CUr,passw);
    if (storef==false) then begin
      errormsg = 20086; //internal error
    end else begin
      //errormsg = 20088; //your cust code is
      custcode = CUr.Code;
    end;
  end;
  if (storef) then begin
    //WebOutString("<p class=""bluefont"">" & CUr.VATNr & "</p>");
  end;

  if (res) then begin
    ResetCompany(oldcomp);
  end;
LStoreNewCustomer:;
  return;
end;

global
updating procedure StoreRegisterCUForm()
begin
  integer i,cnt,pos,errorflags;
  string 255 companyname;
  string 255 personname;
  string 255 address1;
  string 255 address2;
  string 255 address3;
  string 255 address4;
  string 255 address5;
  string 255 email;
  string 255 orgnr;
  string 255 phone;
  string 255 fax;
  string 255 passwd;
  string 255 comment;
  string 255 country,countryshown;
  string 255 tstr;
  integer hmcompany;
  integer errormsg;
  string 255 custcode;
  
  //read from webargs
  companyname = WebGetArg("companyname");
  personname  = WebGetArg("personname");
  address1    = WebGetArg("address1");
  address2    = WebGetArg("address2");
  address3    = WebGetArg("address3");
  address4    = WebGetArg("address4");
  address5    = WebGetArg("address5");
  email       = WebGetArg("email");
  orgnr       = WebGetArg("orgnr");
  phone       = WebGetArg("phone");
  fax         = WebGetArg("fax");
  passwd      = WebGetArg("passwd");
  comment     = WebGetArg("comment");
  country     = WebGetArg("country");
  countryshown= WebGetArg("countryshown");
  hmcompany   = StringToInt(WebGetArg("hmcompany"));
  
  //validate
  errorflags = 0;
  if (blank(companyname)) then begin
    errorflags = errorflags + 1;
  end;
  if (blank(personname)) then begin
    errorflags = errorflags + 2;
  end;
  if (blank(orgnr)) then begin
    errorflags = errorflags + 4;
  end;
  if (blank(phone)) then begin
    errorflags = errorflags + 8;
  end;
  if (blank(passwd)) then begin
    errorflags = errorflags + 16;
  end;
  if (countryshown=="1" and blank(country)) then begin
    errorflags = errorflags + 32;
  end;
  if (blank(email)) then begin
    errorflags = errorflags + 64;
  end;
  
  if (errorflags==0) then begin
    StoreNewCustomer(companyname,personname,address1,address2,address3,address4,address5,email,orgnr,phone,fax,passwd,comment,errormsg,custcode,hmcompany,country);
  end;

  if (errorflags==0 and errormsg==0) then begin
    PutSessionString("regcu_custcode",custcode);
    PutSessionString("regcu_passwd",passwd);
    PutSessionString("regcu_complete","1");
    PutSessionString("regcu_hmcompany",hmcompany);
  end else begin
    PutSessionString("regcu_errorflags",errorflags);
    PutSessionString("regcu_errormsg",errormsg);
    PutSessionString("regcu_companyname",companyname);
    PutSessionString("regcu_personname",personname);
    PutSessionString("regcu_address1",address1);
    PutSessionString("regcu_address2",address2);
    PutSessionString("regcu_address3",address3);
    PutSessionString("regcu_address4",address4);
    PutSessionString("regcu_address5",address5);
    PutSessionString("regcu_email",email);
    PutSessionString("regcu_orgnr",orgnr);
    PutSessionString("regcu_phone",phone);
    PutSessionString("regcu_fax",fax);
    PutSessionString("regcu_comment",comment);
    PutSessionString("regcu_hmcompany",hmcompany);
    PutSessionString("regcu_country",country);
  end;
  
  tstr = WebGetArg("path");
  if (nonblank(tstr)) then begin
    RedirectToURL(FormatSimpleLink(tstr,true));
  end else begin
    RedirectToStartPage;
  end;
  return;
end;

updating function boolean QueueNewPasswordEmail(record LetVc Letr,string langcode)
begin
  record EMailQueVc EMQr;
  row EMailQueVc EMQrw;
  Boolean res;
  record EmailBlock EMBr;
  LongInt i,rwcnt;
  string 255 tstr;

  res = true;
  BlockLoad(EMBr);
  RecordNew(EMQr);
  EMQr.QueDate = CurrentDate;
  EMQr.TransDate = CurrentDate;
  EMQr.OrgSerNr = -1;
  EMQr.FileName = "";
  EMQr.QueTime = CurrentTime;
  EMQr.TransTime = CurrentTime;
  EMQr.EMailSent = 0;
  EMQr.Header = Letr.Header;
  EMQrw.RowTyp = 1;
  EMQrw.AddrCode = EMBr.UserIP;
  if (blank(EMQrw.AddrCode)) then begin
    ToolWebGetTheTextWithLangCode(20013,tstr,langcode);
    EMQrw.AddrCode = tstr;
  end;
  MatRowPut(EMQr,0,EMQrw);
  EMQrw.RowTyp = 0;
  EMQrw.AddrCode = Letr.emailAddr;
  if (blank(EMQrw.AddrCode)) then begin
    res = false;
  end else begin
    MatRowPut(EMQr,1,EMQrw);
    rwcnt = LineTextCnt(Letr);
    for (i=0;i<rwcnt;i=i+1) begin
      tstr = LineTextGet(Letr,i);
      LineTextPut(EMQr,i,tstr);
    end;
    ToolWebGetTheTextWithLangCode(20023,tstr,langcode);
    LineTextPut(EMQr,i,tstr & Letr.Greet);
    EMQr.SerNr = NextSerNr("EMailQueVc",EMQr.QueDate,-1,false,"");
    if (RecordStore(EMQr,true)==false) then begin 
      res = false;
    end;
  end;
  QueueNewPasswordEmail = res;
  return;
end;

global
updating function Boolean StoreNewPasswordLetterAsAct(record LetVc Letr,var record ActVc Actr,string langcode)
begin
  record NotepadVc Noter;
  Integer i,rwcnt;
  string 255 tstr;
  Boolean res;
  
  RecordNew(Actr);
  Actr.TransDate = CurrentDate;
  Actr.SerNr = NextSerNr("ActVc",Actr.TransDate,-1,false,"");
  Actr.MainPersons = "WEB";
  Actr.OKFlag = 1;
  Actr.CUCode = Letr.CustCode;
  Actr.CUName = Letr.Name;
  Actr.Comment = Letr.Header;
  Actr.LangCode = Letr.LangCode;
  if (RecordStore(Actr,false)) then begin 
    Noter.SerNr = NextSerNr("NotepadVc",Actr.TransDate,-1,false,"");
    if (nonblank(Letr.Greet)) then begin
      ToolWebGetTheTextWithLangCode(20079,tstr,langcode);
      LineTextPut(Noter,0,tstr & ": " & Letr.Greet);
    end else begin
      rwcnt = LineTextCnt(Letr);
      for (i=0;i<rwcnt;i=i+1) begin
        tstr = LineTextGet(Letr,i);
        LineTextPut(Noter,i,tstr);
      end;  
    end;  
    if (RecordStore(Noter,false)) then begin
      CreateRecordLink(Actr,CurrentCompany,Noter,CurrentCompany);
    end;
    res = true;
  end;
  StoreNewPasswordLetterAsAct = res;
  return;
end;

updating function boolean RegisterAndSendNewPasswordEmail(record CUVc CUr,string passwd,integer hmcompany,string langcode,boolean sendemail,boolean sendfax)
begin
  record ActVc Actr;
  record LetVc Letr;
  Boolean res,tmpf;
  string 60 emailaddr;
  string 200 tstr;

  res = true;
  RecordNew(Letr);
  Letr.CustCode = CUr.Code;
  Letr.Name = CUr.Name;
  ToolWebGetTheTextWithLangCode(20024,tstr,langcode);
  Letr.Header = tstr;
  Letr.DocName = "";
  Letr.Greet = passwd;
  Letr.OKFlag = 1;
  Letr.AllCont = kAllContCustomerEmail;
  Letr.Printdf = 0;
  Letr.Addr0 = CUr.InvAddr0;
  Letr.Addr1 = CUr.InvAddr1;
  Letr.Addr2 = CUr.InvAddr2;
  Letr.Addr3 = CUr.InvAddr3;
  Letr.Addr4 = CUr.InvAddr4;
  Letr.LangCode = "PWDFX";
  Letr.Fax = CUr.Fax;
  GetCustEmail(CUr,emailaddr);
  Letr.emailAddr = emailaddr;
  Letr.TransDate = CurrentDate;
  Letr.SerNr = NextSerNr("LetVc",Letr.TransDate,-1,false,"");
  AddTextLineToLetter(" ",Letr);
  if (StoreNewPasswordLetterAsAct(Letr,Actr,langcode)) then begin 
    if (sendfax) then begin
      res = PrintDocument(Actr,"ActDocForm",false);
    end;
    if (sendemail) then begin
      res = QueueNewPasswordEmail(Letr,langcode);
    end;
  end else begin
    res = false;
  end;
  RegisterAndSendNewPasswordEmail = res;
  return;
end;

updating procedure SendNewPasswordSMS(record CUVc CUr,string langcode,string password)
begin
  record SMSVc SMSr;
  record BARulesBlock BARb;
  
  if (nonblank(CUr.Mobile) and CUr.NoLetterPosting==0 and CUr.NoMailPosting==0) then begin
    RecordNew(SMSr);
    
    SMSr.PhoneNo = CUr.Mobile;
    SMSr.CustCode = CUr.Code;
    
    AddToText(ToolWebNGTranslateTextLang(25423,langcode) & " " & password,SMSr);
    
    BlockLoad(BARb);
    SMSr.FromPhoneNo = BARb.SystemMobile;
    if (blank(SMSr.FromPhoneNo)) then begin
      SMSr.FromPhoneNo = SMSr.PhoneNo;
    end;
    
    SMSr.SendFlag = 1;
    SMSr.SerNr = NextSerNr("SMSVc",SMSr.TransDate,-1,false,"");

    if (RecordInsert(SMSr,true)==false) then begin end;
  end;
  
  return;
end;

global
updating procedure EmailNewPassword(string custcode,integer hmcompany,integer method,string langcode)
begin
  record CUVc CUr;
  Boolean storef;
  string 255 passwd;
  Integer oldcomp;
  Boolean res,foundf;
    
  oldcomp = CurrentCompany;
  if ((hmcompany>0) and (oldcomp!=hmcompany)) then begin
    res = SetCompany(hmcompany,false);
  end;
  
  CUr.Code = custcode;
  foundf = ReadFirstMain(CUr,1,true);
  if (!foundf) then begin
    CUr.eMail = custcode;
    foundf = ReadFirstKey("eMail",CUr,1,true);
  end;
  if (foundf) then begin
    passwd = GeneratePassword2(6);
    if (RegisterAndSendNewPasswordEmail(CUr,passwd,hmcompany,langcode,method==1,method==2)) then begin
      SendNewPasswordSMS(CUr,langcode,passwd);
      CUr.AllowLogin = 1;
      if (WebStoreCust(CUr,passwd)) then begin end;
    end;
  end;

  if (res) then begin
    ResetCompany(oldcomp);
  end;
  
  return;
end;

function boolean SendPasswordBySMS()
begin
  boolean res;
  record WebNGShopBlock WSb;
  
  BlockLoad(WSb);
  if (WSb.SendPasswordBySMS==1) then begin
    res = true;
  end else begin
    res = false;
  end;
  
  SendPasswordBySMS = res;
  return;
end;

global
procedure QueueForgotPasswordRequest()
begin
  record CUVc CUr;
  integer i,cnt,pos,errorflags;
  string 255 custcode;
  string 255 tstr;
  integer hmcompany,oldcomp;
  integer method;
  string 255 emailaddr;
  boolean res,foundf;
  
  custcode  = WebGetArg("custcode");
  hmcompany = StringToInt(WebGetArg("hmcompany"));

  errorflags = 0;
  if (blank(custcode) or hmcompany<=0) then begin
    errorflags = errorflags + 1;
  end;

  method = -1;
  if (errorflags==0) then begin
    res = false;
    oldcomp = CurrentCompany;
    if (hmcompany!=oldcomp) then begin
      res = SetCompany(hmcompany,false);
    end;
    
    CUr.Code = custcode;
    foundf = ReadFirstMain(CUr,1,true);
    if (foundf==false) then begin
      CUr.eMail = custcode;
      foundf = ReadFirstKey("eMail",CUr,1,true);
    end;
    if (foundf) then begin
      if (CUr.blockedFlag==1 or CUr.AllowLogin==0) then begin
        foundf = false;
      end;
    end;
    if (foundf) then begin
      method = 0;
      if (SendPasswordBySMS and nonblank(CUr.Mobile)) then begin
        method = 3;
      end else begin
        GetCustEmail(CUr,emailaddr);
        if (nonblank(emailaddr)) then begin
          method = 1;
        end else begin
          if (nonblank(CUr.Fax)) then begin
            method = 2;
          end;
        end;
      end;
    end;
    
    if (res) then begin
      ResetCompany(oldcomp);
    end;
  end;
  
  if (errorflags==0) then begin
    if (method!=0) then begin
      queued.EmailNewPassword(custcode,hmcompany,method,CurrentWebLang);
    end;
    PutSessionString("forgotpwd_complete","1");
    PutSessionString("forgotpwd_method",method);
  end else begin
    PutSessionString("forgotpwd_errorflags",errorflags);
    PutSessionString("forgotpwd_custcode",custcode);
    PutSessionString("forgotpwd_hmcompany",hmcompany);
  end;
  
  tstr = WebGetArg("path");
  if (nonblank(tstr)) then begin
    RedirectToURL(FormatSimpleLink(tstr,true));
  end else begin
    RedirectToStartPage;
  end;

  return;
end;

global
procedure ShowForgotPasswordElement(record WebNGElementVc WEr)
begin
  Boolean res;
  string 200 tstr;
  LongInt interestf;
  string 255 llink;
  integer i;
  string 255 custcode;
  integer hmcompany;
  record NotepadVc Noter;
  integer errorflags;
  array integer numberlist;
  array string 244 namelist;
  boolean firstline;
  
  RollbackOneRequestURL;
  if (GetSessionString("forgotpwd_complete")=="1") then begin

    WebOutTagOpen("<p class=""heading3"">");
    WebOutStringFormat(ToolWebNGTranslateText(25407)); //Thank you!
    WebOutTagClose("</p>");
    WebOutTagOpen("<p class=""resetheading1"">");
    switch (GetSessionString("forgotpwd_method")) begin
      case "1": WebOutStringFormat(ToolWebNGTranslateText(25401)); //Your new password will be emailed to you. Please use this new password to log in to the site.
      case "2": WebOutStringFormat(ToolWebNGTranslateText(25400)); //Your new password will be faxed to you. Please use this new password to log in to the site.
      case "3": WebOutStringFormat(ToolWebNGTranslateText(25424)); //Your new password will be SMSed to you. Please use this new password to log in to the site.
      otherwise
        WebOutStringFormat(ToolWebNGTranslateText(25043)); //The account is either invalid, or we do not have any contact details of you. Please contact your nearest HansaWorld office.
    end;
    WebOutTagClose("</p>");
    ClearForgotPwdSessionVariables;
  end else begin
    custcode    = GetSessionString("forgotpwd_custcode");
    hmcompany   = StringToInt(GetSessionString("forgotpwd_hmcompany"));

    errorflags  = StringToInt(GetSessionString("forgotpwd_errorflags"));
    
    ClearForgotPwdSessionVariables;
        
    WebOutTagOpen("<form method=""post"" action=""" & FormatLink("/WebAction.hal","?action=request_newpasswd",true,true) & """>");
    WebOutStringFormatNL("<input type=""hidden"" id=""path"" name=""path"" value=""" & WebGetArg("path") & """>");

    if (errorflags!=0) then begin
      WebOutTagOpen("<span class='reset_error_label'>");
      WebOutStringFormat(ToolWebNGTranslateText(25002)); //The following required fields are missing:
      WebOutTagClose("</span>");
      WebOutTagOpen("<ul id='reset_passw_error' class='form_errors'>");
      if (BitAnd(errorflags,1)==1) then begin
        WebOutStringFormatNL("<li>" & ToolWebNGTranslateText(20154) & "</li>"); //Customer code
      end;
      WebOutTagClose("</ul>");
    end;

//----------

  WebOutTagOpen("<ul id='reset_passw'>");
  numberlist[0] = 0;
  GetListOfCompaniesForCountry(ToolWebNGGetCountry,numberlist,namelist);
  if (numberlist[0]>1) then begin
    firstline = true;
    for (i=1;i<=numberlist[0];i=i+1) begin
      if (firstline) then begin
        WebOutTagOpen("<li class='comp_select'>");
        WebOutTagOpen("<span class='resetlabel'>");
        WebOutStringFormat(ToolWebNGTranslateText(25902)); //Select which company you are a customer of:
        WebOutTagClose("</span>");
        WebOutTagOpen("<select name=""hmcompany"" id=""hmcompany"">");
        firstline = false;
      end;
      if (numberlist[i] == hmcompany) then begin
        WebOutTagOpen("<option selected value=""" & numberlist[i] & """>");
      end else begin
        WebOutTagOpen("<option value=""" & numberlist[i] & """>");
      end;
      WebOutStringFormat(namelist[i]);
      WebOutTagClose("</option>");
    end;
    if (firstline==false) then begin
      WebOutTagClose("</select>");
      WebOutTagClose("</li>");
    end;
  end else begin
    if (numberlist[0]==0) then begin
      i = 1;
    end else begin
      i = numberlist[1];
    end;
    WebOutStringFormatNL("<input type=""hidden"" id=""hmcompany"" name=""hmcompany"" value=""" & i & """>");
  end;

//--------
    WebOutTagOpen("<li class='custcode_label'>");
    WebOutStringFormat(ToolWebNGTranslateText(20154) & " (*)"); //Customer code
    WebOutTagClose("</li>");
    WebOutTagOpen("<li class='custcode_input'>");
    WebOutStringFormatNL("<input value=""" & left(custcode,60) & """ type=""text"" maxlength=60 name=""custcode"" size=""31"" class=""feedback"">");
    WebOutTagClose("</li>");

    WebOutTagOpen("<li class='resetsubmit'>");
    WebOutStringFormatNL("<input type=""submit"" name=""Submit"" value=""" & ToolWebNGTranslateText(20067) & """>");
//    WebOutStringFormatNL("<input type=""reset"" name=""Reset"" value=""" & ToolWebNGTranslateText(20068) & """>");
    WebOutTagClose("</li>");
    WebOutTagClose("</ul>");
    WebOutTagClose("</form>");
  end;

  return;
end;