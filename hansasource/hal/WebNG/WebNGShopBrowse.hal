//tools
external function string 255 removenextnode(var string);
external function string 255 FormatSimpleLink(string,boolean);
external procedure ToolWebOutContentTextFormat(record WebNGContentVc,Boolean);
external function string 10 CurrentWebLang();
external function string 255 GetLinkToStruct(LongInt,boolean);
external function string 255 FormatSimpleLink(string,boolean);
external function string 255 FormatLink(string,string,boolean,boolean);
external function boolean LoginState();
external function string 255 GetLoginPageStructLink();
external function string 255 GetLinkToItemOrder(boolean);
//webng
external procedure RedirectToStartPage();
external procedure RedirectToLoginPage();
external procedure RedirectToRequestedPage();
external procedure RedirectToURL(string);
//pages
external procedure ShowWebAppPageStart(record WebNGPageVc,string);
external procedure ShowWebAppPageEnd(record WebNGPageVc);
//elements
external procedure ShowWebElementTemplate(string,integer);
//translate
external function string 255 ToolWebNGTranslateText(integer);
//references to old webshop code
external procedure OldCodeWebHBSDivItemViewNew(string,string,longint);
external function Boolean ToolWebItemHasPict(var record WebHTMLVc,string,string);
external function Boolean ToolWebGetCustAndSettings(var record CUVc,var Boolean,var Boolean);
external function val QtyInBasket(String,Integer);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external function val GetStockQty(string,string,Date,Boolean);
external function string 255 GetUnitText(string,string);
external procedure GetBaseCurncy(Integer,var string);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure ToolWebOutWebHTMLText(record WebHTMLVc,Integer,string);

procedure OldCodeWebDisplayHTMLExtra(record WebHTMLVc WHr,string pwidth,string pheight)
begin
  string 255 tstr;
  
   if (nonblank(WHr.Code)) then begin
    if (nonblank(WHr.PicName)) then begin
      tstr = "<img src=""" & WHr.PicName & """";
      if (nonblank(pwidth)) then begin
        tstr = tstr & " width=""" & pwidth & """";
      end;
      if (nonblank(pheight)) then begin
        tstr = tstr & " height=""" & pheight & """";
      end;
      tstr = tstr & ">";
      WebOutStringFormat(tstr);
    end else begin
      WebOutStringFormatNL("");
      ToolWebOutWebHTMLText(WHr,0,"");
    end;
  end;
  return;
end;

procedure OldCodeToolWebHBSDivItemListMenu(string webname,string weblink,string webtarget,var Integer rwt,boolean group)
begin
  string 255 llink;

  WebOutTagOpen("<tr>");
  WebOutTagOpen("<td width=""100%"" align=""left"">");
  if (nonblank(weblink)) then begin
    if (group) then begin
      WebOutStringFormat("<a class=""headerlistMenuLink"" href=""");
    end else begin
      WebOutStringFormat("<a class=""listMenuLink"" href=""");
    end;
  /*  llink = ToolWebBuildLink(weblink,webarg);
    if (ToolWebHBSUseLink) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end; */
    WebOutStringFormat(FormatSimpleLink(weblink,true));
    WebOutStringFormat(""">");
  end;
  WebOutStringFormat(webname);
  if (nonblank(weblink)) then begin
    WebOutStringFormatNL("</a>");  
  end;
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");  
  return;
end;

procedure OldCodeWebHBSDivTableDataName(string webname,string weblink,string langcode,Integer rwt)
begin
  string 255 llink,tstr,thetarget;

  if (nonblank(weblink)) then begin
//    llink = ToolWebBuildLink(weblink,linkargs & "&langcode=" & langcode); //TODO
    WebOutStringFormat("<a class=""shopprodMenuLink"" href=""");
    WebOutStringFormat(FormatSimpleLink(weblink,true));
    WebOutStringFormat(""">");
//    WebOutString("<a href=""Javascript:void(0)""");
//    WebOutString(" onClick=""MM_openBrWindow('./" & llink & "','Item view','scrollbars=no,rezisable=yes,width=550,height=510')"">");
  end;
  if (nonblank(webname)) then begin
    WebOutStringFormat(webname);
  end else begin
    WebOutStringFormat("&nbsp;");
  end;
  if (nonblank(weblink)) then begin
    WebOutStringFormatNL("</a>");
  end;
  return;
end;

procedure OldCodeWebDisplayPict(string pict,string weblink,string itemgroup,string pwidth,string pheight,string langcode)
begin
  string 255 tstr,ltstr,pstr;
  string 255 llink,thetarget;
  record ITVc ITr;
  row ITVc ITrw;
  Integer i,rwcnt;
  
  if (pict!="") then begin
    if (nonblank(weblink)) then begin
//      llink = ToolWebBuildLink(weblink,linkargs & "&langcode=" & langcode); //TODO
      WebOutStringFormat("<a class=""shopprodMenuLink"" href=""");
      WebOutStringFormat(FormatSimpleLink(weblink,true));
      WebOutStringFormat(""">");
    end;
    tstr = "<img src=""" & pict & """";
    if (nonblank(pwidth)) then begin
      tstr = tstr & " width=""" & pwidth & """";
    end;
    if (nonblank(pheight)) then begin
      tstr = tstr & " height=""" & pheight & """";
    end;
    tstr = tstr & " border=""0"" alt="""" />";
    WebOutStringFormat(tstr);
    if (nonblank(weblink)) then begin
      WebOutStringFormatNL("</a>");
    end;
  end else begin
    ITr.Code = itemgroup;
    if (ReadFirstMain(ITr,1,true)) then begin
      rwcnt = MatRowCnt(ITr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(ITr,i,ITrw);
        if (ITrw.LangCode=="PICT") then begin
          pstr = ITrw.Text;
          goto ext2;
        end;
      end;
    end;
    ext2:;
    if (nonblank(pstr)) then begin
      if (nonblank(weblink)) then begin
//        llink = ToolWebBuildLink(weblink,linkargs & "&langcode=" & langcode); //TODO
        WebOutStringFormat("<a href=""");
        WebOutStringFormat(FormatSimpleLink(weblink,true));
        WebOutStringFormat(""">");
//        WebOutString("<a href=""Javascript:void(0)""");
//        WebOutString(""" onClick=""MM_openBrWindow('./" & llink & "','Item view','scrollbars=no,rezisable=yes,width=550,height=50')"">");
      end;
      tstr = "<img src=""" & pstr & """";
      if (nonblank(pwidth)) then begin
        tstr = tstr & " width=""" & pwidth & """";
      end;
      if (nonblank(pheight)) then begin
        tstr = tstr & " height=""" & pheight & """";
      end;
      tstr = tstr & " border=""0"" alt="""" />";
      WebOutStringFormat(tstr);     
      if (nonblank(weblink)) then begin
        WebOutStringFormatNL("</a>");
      end;
    end;
  end;
  return;
end;

procedure OldCodeWebHBSDivDisplayItemLinePict(string weblink,string itemgroup, string spec,string pstr,string langcode,integer rwt)
begin
  string 60 tstr;
  
  if (rwt==1) then begin
    WebOutTagOpen("<tr valign=""top"">");
  end;
  WebOutTagOpen("<td width=""240"">");
  WebOutTagOpen("<table width =""100%"" border=""0"" cellbadding=""0"" cellspacing=""0"">");
  WebOutTagOpen("<tr align=""center"" valign=""bottom"">");
  WebOutTagOpen("<td height=""135px"">");
  OldCodeWebDisplayPict(pstr,weblink,itemgroup,"","",langcode);
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagOpen("<tr align=""center"" valign=""top"">");
  WebOutTagOpen("<td>");
  WebOutTagOpen("<table width=""200"" align=""center"" border=""0"">");
  WebOutTagOpen("<tr align=""center"" valign=""top"">");
  WebOutTagOpen("<td>");
  OldCodeWebHBSDivTableDataName(spec,weblink,langcode,rwt);
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagClose("</table>");
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagClose("</table>");
  WebOutTagClose("</td>");  
  if (rwt==2) then begin
      WebOutTagClose("</tr>");
  end;
  return;
end;

procedure OldCodeWebHBSGetDispGroup(string curcustno,var string dgroup)
begin
  record CUVc CUr;
  record CCatVc CCatr;
  record WebControlBlock WCr;
  
  CUr.Code = curcustno;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (nonblank(CUr.MainDispGroup)) then begin
      dgroup = CUr.MainDispGroup;
    end else begin
      CCatr.Code = CUr.CustCat;
      if (ReadFirstMain(CCatr,1,true)) then begin
        dgroup = CCatr.MainDispGroup;
      end;
    end;
  end;
  if (blank(dgroup)) then begin
    BlockLoad(WCr);
    dgroup = WCr.DispGroup;
  end;
  if (blank(dgroup)) then begin
    dgroup = "WSHOP";
  end;
  return;
end;

procedure OldCodeWebHBSDivDispGroups(string itcode,LongInt msernr,Integer maxlines,string langcode,longint structsernr)
begin
  row INVc INrw;
  Integer rwcnt,i;
  Boolean testf;
  String 60 pstr;
  record DIVc DIr;
  record CUVc CUr;
  record INVc INr;
  record INVc IN2r;
  string 60 ckey;
  string 100 spec,tempstr;
  LongInt loopcnt;
  LongInt looppos;
  Boolean found;
  Integer rwt;
  string 255 linkargs;
  string 10 dgroup;
  Integer pos,dicnt;
  string 5 nsep;
  Boolean tmpf;
  Boolean overmax;
  Boolean headerf;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Boolean hasextralines;
  string 255 newurl;
  Time blankt;

  loopcnt = 1;
  rwt = 1;
  overmax = false;
  headerf = false;
  pos = 0;
  dicnt = 0;
  CUr.Code = CurrentCust;
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  ckey = "DICode:" & itcode;
  found = true;
  DIr.Code = "";
  ResetLoop(DIr);
  while (LoopKey(ckey,DIr,1,found)) begin
    if (DIr.Code==itcode) then begin found = false; end;
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        spec = DIr.Name;
//        linkargs = "function=WebHBSDivCustProd" & "&company=" & WebGetArg("company") & "&langcode=" & langcode & "&itcode=" & DIr.Code; //WNS
        newurl = GetLinkToStruct(structsernr,true);
        if (nonblank(newurl)) then begin
          newurl = newurl & "groups/" & DIr.Code & "/";
        end;
        OldCodeToolWebHBSDivItemListMenu(spec,newurl,"",rwt,true); //WNS
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
  if (msernr>dicnt) then begin
    looppos = msernr-dicnt;
  end;
  pos = 0;
  found = true;
  ckey = "DICode:" & itcode;
  INr.Code = "";

  while (LoopKey(ckey,INr,1,found)) begin
    if (found) then begin
      dicnt = dicnt + 1;
      if (dicnt>msernr) then begin
        curitemno = INr.Code;
        qty = QtyInBasket(curitemno,0);
        if (GetItemPriceDiscount3(curitemno,qty,IN2r,CUr.CurncyCode,0,0,0,0,0,
                langcode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                price,curitemname,reb,vatcode,cost,salesacc,
                CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
          IN2r.Name = "";
        end;
        if (showprices==false) then begin
          price = BlankVal;
        end;
        spec = curitemname;
//        linkargs = "&function=WebHBSDivItemView" & "&company=" & WebGetArg("company") & "&langcode=" & langcode & "&itcode=" & itcode & "&itemcode=" & curitemno;
        newurl = GetLinkToItemOrder(true);
        if (nonblank(newurl)) then begin
          if (nonblank(DIr.Code)) then begin
            newurl = newurl & "groups/" & DIr.Code & "/";
          end;
          if (nonblank(curitemno)) then begin
            newurl = newurl & "items/" & curitemno & "/";
          end;
        end;

        if (false) then begin
          rwcnt = MatRowCnt(INr);
          testf = false;
          pstr="";
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(IN2r,i,INrw);
            if (INrw.LangCode=="PICT") then begin
              testf = true;
              pstr = INrw.Text;
              i = rwcnt;
            end;
          end;
          OldCodeWebHBSDivDisplayItemLinePict(newurl,IN2r.Group,spec,pstr,langcode,rwt); //TODO
        end else begin
          OldCodeToolWebHBSDivItemListMenu(spec,newurl,"",rwt,false); //TODO
          hasextralines = true;
          rwcnt = MatRowCnt(INr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(IN2r,i,INrw);
            if (blank(INrw.LangCode)) then begin
              WebOutTagOpen("<tr>");
              WebOutTagOpen("<td width=""100%"" align=""left"" class=""deftxt"">");
              WebOutStringFormat("&nbsp;&nbsp;" & INrw.Text);
              WebOutTagClose("</td>");
              WebOutTagClose("</tr>");
              hasextralines = true;
            end;
          end;
          if (hasextralines) then begin
            WebOutTagOpen("<tr>");
            WebOutTagOpen("<td width=""100%"" align=""left"" class=""deftxt"">");
            WebOutStringFormat("&nbsp;");
            WebOutTagClose("</td>");
            WebOutTagClose("</tr>");
          end;
          loopcnt = loopcnt + 1;
        end;
        rwt = rwt + 1;
        if (rwt>2) then begin rwt = 1; end;
        loopcnt = loopcnt + 1;
        if (loopcnt>maxlines) then begin
          found = false;
          overmax = true;
        end;
      end;
    end;
  end;
//  WebOutString("</table>");  
L1234:;
  return;
end;

global
procedure OldCodeWebHBSDivCustProdNew(string itcode,LongInt sernr,longint structsernr)
begin
  string 60 mailboxcode;
  string 60 mailboxname;
  record CYBlock CYr;
  record WebHTMLVc WHr;
  record WebControlBlock WCr;
  record DIVc DIr;
  string 20 mitcode;
  string 60 ckey;
  LongInt prevval,nextval,maxval;
  Boolean prevf,nextf,mainf;
  LongInt msernr,pages;
  Integer showmax;
  Integer oldcomp,newcomp;
  Boolean res,res1;
  record WebNGShopBlock WSb;

/*  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res1 = SetCompany(newcomp,false);
  end;*/
  BlockLoad(CYr);
  BlockLoad(WCr);
  
  BlockLoad(WSb);
  if (nonblank(WSb.ItemBrowseTemplate)) then begin
    ShowWebElementTemplate(WSb.ItemBrowseTemplate,0); //before
  end;
  
  msernr = sernr;//WebGetArg("sernr");
  if (msernr==-1) then begin msernr = 0; end;
  mitcode = itcode;//WebGetArg("itcode");
  if (blank(mitcode)) then begin
    mainf = true;
    OldCodeWebHBSGetDispGroup(CurrentCust,mitcode);
  end;
  showmax = 50;
  WebOutTagOpen("<table border=""0"" width=""100%"">");
  WebOutTagOpen("<tr>");
  WebOutTagOpen("<td width=100% valign=top>");
  WebOutTagOpen("<table border=""0"" cellspacing=""0"" cellpadding=""1"">");

  OldCodeWebHBSGetDispGroup("",mitcode);

  OldCodeWebHBSDivDispGroups(mitcode,msernr,showmax,CurrentWebLang,structsernr);
  WebOutTagClose("</table>");
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagOpen("<tr>");
  WebOutTagOpen("<td width=100% valign=top>");
  if (ToolWebItemHasPict(WHr,mitcode,"BDG")==true) then begin
    OldCodeWebDisplayHTMLExtra(WHr,"","");
  end else begin
    OldCodeWebDisplayHTMLExtra(WHr,"","");
  end;
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagClose("</table>");

  if (nonblank(WSb.ItemBrowseTemplate)) then begin
    ShowWebElementTemplate(WSb.ItemBrowseTemplate,2); //after
  end;
/*  if (res1) then begin
    ResetCompany(oldcomp);
  end;*/
  return;  
end;

global
procedure ShopBrowserApp(record WebNGStructVc WSr,string path)
begin
  record WebNGContentVc WCr;
  record WebNGPageVc WPr;
  string 255 node,mpath;
  string 255 itcode,sernr,itemcode;

  
  WPr.Code = WSr.WebPage;
  if (nonblank(WPr.Code)) then begin
    if (ReadFirstMain(WPr,1,true)) then begin end;
  end;
  
  ShowWebAppPageStart(WPr,"");

  mpath = path;
  node = removenextnode(mpath);
  //the mechanism allows:
  //  /groups/AUDIO/items/1234/
  //  /items/1234/
  //  /items/1234/groups/AUDIO/
  if (node=="groups") then begin
    itcode = removenextnode(mpath);
    node = removenextnode(mpath);
  end;
  if (node=="items") then begin
    itemcode = removenextnode(mpath);
    node = removenextnode(mpath);
  end;
  if (node=="groups") then begin
    itcode = removenextnode(mpath);
    node = removenextnode(mpath);
  end;
  
  if (blank(node) and blank(itcode) and blank(itemcode)) then begin
    PutSessionString("requesturl",WebGetArg("path"));
    OldCodeWebHBSDivCustProdNew("","",WSr.SerNr);
  end else begin
    if (nonblank(itcode) and blank(itemcode)) then begin
      PutSessionString("requesturl",WebGetArg("path"));
      OldCodeWebHBSDivCustProdNew(itcode,sernr,WSr.SerNr);
    end else begin
      OldCodeWebHBSDivItemViewNew(itcode,itemcode,WSr.SerNr);
    end;
  end;
  
  ShowWebAppPageEnd(WPr);
  return;
end;