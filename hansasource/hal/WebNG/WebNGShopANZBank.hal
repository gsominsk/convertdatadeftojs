//tools
external procedure ShowRedirectHtmlFromArea(area,boolean);
external function string 255 FormatLink(string,string,boolean,boolean);
external function boolean LoginState();
//translation
external function string 255 ToolWebNGTranslateText(integer);
//shop
external updating procedure ShopHandleCreditCardPayment(string);
external updating procedure ShopHandlePaymentFailed(string,Integer);
external procedure RedirectToPaymentCompletedPage(record WebNGPaySessionVc);
external function boolean GetShoppingBasket(var record WebNGShopBasketVc,integer);
external procedure RedirectToShoppingBasket();
//std
external function string 255 UrlEncodeCS(string);
//webng
external procedure RedirectToShopPageWithArg(string,string);
//
external procedure FindCCAccountID(string,string,Integer,var record CCAccountIDVc,Integer);
external function Boolean BuildWebNGOrderFromBasket(var record ORVc,record WebNGShopBasketVc,string,boolean,string,string);

function boolean GetPaySession(string id,var record WebNGPaySessionVc WPSr)
begin
  boolean res;
  res = false;
  if (LoginState) then begin
    WPSr.UUID = id;
    res = ReadFirstMain(WPSr,1,true);
  end;
  GetPaySession = res;
  return;
end;

global
procedure RedirectToeGate(string paysessionid)
begin
  record WebControlBlock WCb;
  record CCAccountIDVc CCAccountIDr;
  record WebNGPaySessionVc WPSr;
  string 255 tourl,amount,authcode,tstr,link;
  string 10 version,command;
  string 255 merchtxnref;
  string 255 accesscode;
  string 255 merchant;
  string 255 orderinfo;
  string 255 locale;
  string 255 returnurl;
  string 255 custom;
  string 255 extra;
  area areq,checkarea;
  record ORVc ORr;
  record WebNGShopBasketVc WSBr;

  if (GetPaySession(paysessionid,WPSr)==false) then begin
    goto LRedirectToeGate;
  end;

  BlockLoad(WCb);

  tourl = "https://migs.mastercard.com.au/vpcpay";

  AddTextToArea(tourl,areq);

  FindCCAccountID(WPSr.Currency,"",1,CCAccountIDr,kCardHolderNotPresent);
  GetShoppingBasket(WSBr,0);
  BuildWebNGOrderFromBasket(ORr,WSBr,"",false,"","");

  version = "1";
  command = "pay";
  tstr = GetHour(CurrentTime) & GetMinute(CurrentTime);
  tstr = WPSr.RecordNr & tstr;
  merchtxnref = tstr;
  accesscode = CCAccountIDr.SerialNr;
  merchant = CCAccountIDr.MerchantID;
  orderinfo = WPSr.RecordNr;
  amount = ValToString(ORr.Sum4,M4Val,"","",0);//ValToString(WPSr.InclAmount,M4Val,"","",0);
  locale = "en";
  returnurl = "https://" & Webhost;
  link = FormatLink("/WebUpdatingAction.hal","action=payinvpc",true,true);
  custom = paysessionid;

  AddTextToArea("?vpc_Version=" & UrlEncodeCS(version),areq);
  AddTextToArea("&vpc_Command=" & UrlEncodeCS(command),areq);
  AddTextToArea("&vpc_MerchTxnRef=" & UrlEncodeCS(merchtxnref),areq);
  AddTextToArea("&vpc_AccessCode=" & UrlEncodeCS(accesscode),areq);
  AddTextToArea("&vpc_Merchant=" & UrlEncodeCS(merchant),areq);
  AddTextToArea("&vpc_OrderInfo=" & UrlEncodeCS(orderinfo),areq);
  AddTextToArea("&vpc_Amount=" & UrlEncodeCS(amount),areq);
  AddTextToArea("&vpc_Locale=" & UrlEncodeCS(locale),areq);
  AddTextToArea("&vpc_ReturnURL=",areq);
  AddTextToArea(UrlEncodeCS(returnurl),areq);
  AddTextToArea(UrlEncodeCS(link),areq);
  AddTextToArea("&custom=" & custom,areq);
  AddTextToArea("&extra=" & extra,areq);

  AddTextToArea(CCAccountIDr.KEY,checkarea);

  AddTextToArea(custom,checkarea);
  AddTextToArea(extra,checkarea);
  AddTextToArea(accesscode,checkarea);
  AddTextToArea(amount,checkarea);
  AddTextToArea(command,checkarea);
  AddTextToArea(locale,checkarea);
  AddTextToArea(merchtxnref,checkarea);
  AddTextToArea(merchant,checkarea);
  AddTextToArea(orderinfo,checkarea);
  AddTextToArea(returnurl,checkarea);
  AddTextToArea(link,checkarea);
  AddTextToArea(version,checkarea);

  authcode = md5area(checkarea);

  AddTextToArea("&vpc_SecureHash=" & authcode,areq);
    
  ShowRedirectHtmlFromArea(areq,true);
LRedirectToeGate:;
  return;
end;

global
updating procedure ShopPaymentAftereGate()
begin
  record CCAccountIDVc CCAccountIDr;
  record WebNGPaySessionVc oldWPSr,WPSr;
  record WebNGShopBasketVc WSBr;
  string 255 paysessionid;
  integer err;
  string 255 errmsg,message,ctype,trnr;
  Integer responseCode;
  val amount;
  area a;

  err = 0;
  paysessionid = WebGetArg("custom");
  if (GetPaySession(paysessionid,WPSr)==false) then begin
    err = err + 1;
  end;

  FindCCAccountID(WPSr.Currency,"",1,CCAccountIDr,kCardHolderNotPresent);
  if (WebGetArg("vpc_Merchant")!=CCAccountIDr.MerchantID) then begin
    err = err + 2;
  end;
  
  if (WPSr.AppID==1) then begin
    if (GetShoppingBasket(WSBr,0)==false) then begin
      err = err + 4;
    end;
  end;

  oldWPSr.ExternalSession = WebGetArg("vpc_MerchTxnRef");
  if (ReadFirstKey("ExternalSession",oldWPSr,1,true)) then begin
    err = err + 16;
  end;

  responseCode = StringToInt(WebGetArg("vpc_TxnResponseCode"));
  if (responseCode <> 0) then begin
    message = ToolWebNGTranslateText(25009); //Your transaction could not be validated.
    err = err + 32;
  end else begin
    message = ToolWebNGTranslateText(25429); //Transaction approved
  end;
  LogText(0,WebGetArg("vpc_Message"));
  if (err==0) then begin//check if canceled
    trnr = StringToInt(WebGetArg("vpc_TransactionNo"));
    if (StringToInt(trnr) == 0) then begin
      ShopHandlePaymentFailed(WPSr.UUID,666);
      RedirectToShoppingBasket;
      goto LShopPaymentAftereGate;
    end;
  end;
  if (err==0) then begin//success
    ctype = WebGetArg("vpc_CardType");

    PutSessionString("CCType",ctype);    

    RecordCopy(oldWPSr,WPSr);
    WPSr.Status = 10+kCCStatusPaymentOK;
    WPSr.ExternalSession = WebGetArg("vpc_MerchTxnRef");
    RecordUpdate(oldWPSr,WPSr,false);
  
    if (ReadFirstMain(WPSr,1,true)) then begin end;

    ShopHandleCreditCardPayment(WPSr.UUID);
    RedirectToPaymentCompletedPage(WPSr);
    
  end else begin
    LogText(0,"ANZ Bank Payment error " & err & " (paysession=" & WebGetArg("custom") & ")");

    if (BitAnd(err,1)!=0) then begin
      errmsg = ToolWebNGTranslateText(25040); //Invalid payment session.
    end;
    if (BitAnd(err,2)!=0) then begin
      errmsg = ToolWebNGTranslateText(25009); //Your transaction could not be validated.
    end;
    if (BitAnd(err,4)!=0) then begin
      errmsg = ToolWebNGTranslateText(25040); //Invalid payment session.
    end;
    if (BitAnd(err,16)!=0) then begin
      errmsg = ToolWebNGTranslateText(25040); //Invalid payment session.
    end;
    if (BitAnd(err,32)!=0) then begin
      errmsg = message;
    end;
    if (blank(WPSr.UUID)) then begin
      WPSr.UUID = WebGetArg("custom");
    end;

    ShopHandlePaymentFailed(WPSr.UUID,responseCode);

    RedirectToShopPageWithArg("payment/error","errmsg=" & errmsg);
  end;

LShopPaymentAftereGate:;
  return;
end;
