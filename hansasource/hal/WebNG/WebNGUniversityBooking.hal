//tools
external function string 255 removenextnode(var string);
external function string 255 GetLinkToStruct(LongInt,boolean);
external function string 255 FormatSimpleLink(string,boolean);
external function boolean LoginState();
external function string 10 CurrentWebLang();
//elements
external procedure ShowWebElementTemplate(string,integer);
//translation
external function string 255 ToolWebNGTranslateText(integer);
//pages
external procedure ShowWebAppPageStart(record WebNGPageVc,string);
external procedure ShowWebAppPageEnd(record WebNGPageVc);
//webng
external procedure RedirectToLoginPage();
//university
external procedure RedirectToUniversityFunction(string,string);
//std
external procedure GetCourseStr(record CourseVc,var string,var string,var string, string, var boolean);
external function Boolean InterNetAddrTest(string);
external updating function Boolean SendMailFromSystem(string,string,string,string,LongInt,Integer,string);
external function val GetCourseEventRowPrice(var record CourseEventVc, integer, boolean);
external procedure CourseEventVc_UpdatePrice(var record CourseEventVc);
external function Integer InString2(string,string);
external procedure ReverseString(string,var string);
external function Boolean GetNextCustNr(var string);
external procedure ToolWebHBSDivContactLine(string,string,string,Boolean);
external function Boolean CheckAttachedFilesSizeToLetter(record LetVc);
external function Boolean FindStringInString(string,string);
external function Boolean ValidEmailAddress(string);

function string 255 GetLinkToUniversityTermsPage(boolean callfromweb)
begin
  record WebNGUniversityBlock WUb;
  string 255 res;
  
  res = "";
  BlockLoad(WUb);
  if (WUb.TermsNode>0) then begin
    res = GetLinkToStruct(WUb.TermsNode,callfromweb);
  end;
  
  GetLinkToUniversityTermsPage = res;
  return;
end;

procedure SplitPostcodeCity(string instr, var string postcode,var string city)
begin
  Integer where;
  
  ReverseString(instr,postcode);
  where = InString2(postcode," ");
  where = len(instr) - where;
  postcode = Left(instr,where);  
  city = Right(instr,Len(instr)-where);
  return;
end;

updating procedure SendMailToCourseEventResponsible(LongInt SerNr,string responsible,string ContactName)
begin
  Integer oldcomp;
  boolean res;

  oldcomp = CurrentCompany;  
  res = SetCompany(1,false);
  if (SendMailFromSystem("",responsible,"Course Evenr: " & SerNr & ", New Participant: " & ContactName ,"",-1,-1,"")) then begin
  end;
  ResetCompany(oldcomp);
  return;
end;

updating procedure StoreCustomerMessage(record LetVc Letp,record RCVc RepSpec,string mailbox)
begin
  record EmailBlock emailblock;
  record EMailQueVc emqrp;
  row EMailQueVc emarw;
  record UserVc Userr;
  Boolean signf,signerfound;
  string 255 tstr;
  LongInt pos,l;
  Integer i,emcnt,cscnt;
  area a;
  record LetVc Let2p;
  string 255 tuuid;
  record CUVc CUr;
  string 255 fname;

  if (nonblank(Letp.ReplyToAddr)) then begin
    emarw.RowTyp = 1;
    emarw.AddrCode = Letp.ReplyToAddr;
    MatRowPut(emqrp,MatRowCnt(emqrp),emarw);
  end;

  emarw.RowTyp = 0;
  emarw.AddrCode = mailbox;
  MatRowPut(emqrp,MatRowCnt(emqrp),emarw);
  emqrp.Header = Letp.Header;
  if (Letp.HtmlFlag==0) then begin
    ParseTextField(a,Letp,RepSpec,"LetVcReplaceToken");
    l = GetAreaLength(a);
    pos = 0;
    while (pos<l) begin
      tstr = GetStringFromArea(a,pos,255);
      AddToText(tstr,Let2p); 
      pos = pos+255;
    end;
    cscnt = LineTextCnt(Let2p);
    if (cscnt>0) then begin
      for (i=0;i<cscnt;i=i+1) begin
        tstr = LineTextGet(Let2p,i);
        LineTextPut(emqrp,LineTextCnt(emqrp),tstr);
      end;  
    end;
    LineTextPut(emqrp,LineTextCnt(emqrp),Letp.Greet);
    LineTextPut(emqrp,LineTextCnt(emqrp),Letp.Signature);
  end;
  emqrp.SerNr = NextSerNr("EMailQueVc",Letp.TransDate,-1,false,"");
  emqrp.OrgSerNr = Letp.SerNr;
  emqrp.FileName = "LetVc";
  emqrp.TransDate = Letp.TransDate;
  emqrp.TransTime = CurrentTime;
  emqrp.HasFileAtt = 0;
  emqrp.HasRecAtt = 0;
  emqrp.Priority = 1;
  emqrp.EMailSent = 0;
  emqrp.Lifespan = 0;
  emqrp.QueDate = CurrentDate;
  emqrp.QueTime = CurrentTime;
  emqrp.HtmlFlag = Letp.HtmlFlag;
  
  if (CheckAttachedFilesSizeToLetter(Letp)) then begin
    if (RecordStore(emqrp,false)) then begin end;
    CopyRecordLinks(Letp,emqrp);
    if (Letp.HtmlFlag==1) then begin
      LineTextPutToHtmlRecord(emqrp,Letp.Greet,true,true);
      LineTextPutToHtmlRecord(emqrp,Letp.Signature,true,true);
      ParseHtmlField(emqrp,RepSpec,"EMailQueVcReplaceToken");
    end;
  end;
  
  return;
end;

//This is a general function for sending out simple mails with customer letter
global
updating procedure SendCustomerLetterWithDetails(record RCVc RepSpec,string tag,string langcode,string mail)
begin
  Boolean foundf,foundletf,testf;
  record LetVc Letr,tLetr;

  if (blank(mail)) then begin
    goto LSendCustomerLetterWithDetails;
  end;
  if (ValidEmailAddress(mail)==false) then begin
    goto LSendCustomerLetterWithDetails;
  end;
  foundf = true;
  foundletf = false;
  Letr.Name = tag;
  while (LoopKey("Name",Letr,1,foundf)) begin
    if (Left(Letr.Name,len(tag))!=tag) then begin
      foundf = false;
    end else begin
      testf = true;
      if (Letr.LangCode!=langcode and nonblank(Letr.LangCode)) then begin
        testf = false;
      end;
      if (testf) then begin 
        if (FindStringInString(lowercase(Letr.Name),tag)==false) then begin testf = false; end;
        if (testf) then begin 
          if (foundletf==false or nonblank(Letr.LangCode)) then begin
            foundletf = true;
            RecordCopy(tLetr,Letr);
          end;
          foundf = false;
        end;
      end;
    end; 
  end;

  if (foundletf) then begin
    StoreCustomerMessage(tLetr,RepSpec,mail);
  end;
    
LSendCustomerLetterWithDetails:;
  return;
end;


updating procedure SendUniversityMailToContact(record CUVc CUr,record CourseEventVc CourseEventr)
begin
  record RCVc RepSpec;

  if (nonblank(CUr.eMail)) then begin
    RepSpec.f1 = CUr.Code;
    RepSpec.long2 = CourseEventr.SerNr;
    RepSpec.f11 = CurrentWebLang;
    SendCustomerLetterWithDetails(RepSpec,"course-reg-mail","",CUr.eMail);
  end;
  
  return;
end;

procedure StoreApplicationFormValues(longint courseno,string personname1,string personname2,string personname3,string personname4,string personname5,
                              string personmail1,string personmail2,string personmail3,string personmail4,string personmail5,
                              string companyname,string department,string title,string addr1,string postalcode,string city,string country,
                              string phone,string email,string orderperson,integer accept)
begin
  PutSessionString("hwu_appl_courseno",   courseno);
  PutSessionString("hwu_appl_personname1",personname1);
  PutSessionString("hwu_appl_personname2",personname2);
  PutSessionString("hwu_appl_personname3",personname3);
  PutSessionString("hwu_appl_personname4",personname4);
  PutSessionString("hwu_appl_personname5",personname5);
  PutSessionString("hwu_appl_personmail1",personmail1);
  PutSessionString("hwu_appl_personmail2",personmail2);
  PutSessionString("hwu_appl_personmail3",personmail3);
  PutSessionString("hwu_appl_personmail4",personmail4);
  PutSessionString("hwu_appl_personmail5",personmail5);
  PutSessionString("hwu_appl_companyname",companyname);
  PutSessionString("hwu_appl_department", department);
  PutSessionString("hwu_appl_title",      title);
  PutSessionString("hwu_appl_addr1",      addr1);
  PutSessionString("hwu_appl_postalcode", postalcode);
  PutSessionString("hwu_appl_city",       city);
  PutSessionString("hwu_appl_country",    country);
  PutSessionString("hwu_appl_phone",      phone);
  PutSessionString("hwu_appl_email",      email);
  PutSessionString("hwu_appl_orderperson",orderperson);
  PutSessionString("hwu_appl_accept",     accept);
  return;
end;

procedure ClearApplicationFormValues()
begin
  PutSessionString("hwu_appl_courseno",   "");
  PutSessionString("hwu_appl_personname1","");
  PutSessionString("hwu_appl_personname2","");
  PutSessionString("hwu_appl_personname3","");
  PutSessionString("hwu_appl_personname4","");
  PutSessionString("hwu_appl_personname5","");
  PutSessionString("hwu_appl_personmail1","");
  PutSessionString("hwu_appl_personmail2","");
  PutSessionString("hwu_appl_personmail3","");
  PutSessionString("hwu_appl_personmail4","");
  PutSessionString("hwu_appl_personmail5","");
  PutSessionString("hwu_appl_companyname","");
  PutSessionString("hwu_appl_department", "");
  PutSessionString("hwu_appl_title",      "");
  PutSessionString("hwu_appl_addr1",      "");
  PutSessionString("hwu_appl_postalcode", "");
  PutSessionString("hwu_appl_city",       "");
  PutSessionString("hwu_appl_country",    "");
  PutSessionString("hwu_appl_phone",      "");
  PutSessionString("hwu_appl_email",      "");
  PutSessionString("hwu_appl_orderperson","");
  PutSessionString("hwu_appl_accept",     "");
  return;
end;

global
procedure GetApplicationFormValues2(longint courseno,var string personname1,var string personname2,var string personname3,var string personname4,var string personname5,
                              var string personmail1,var string personmail2,var string personmail3,var string personmail4,var string personmail5,
                              var string companyname,var string department,var string title,var string addr1,var string postalcode,var string city,var string country,
                              var string phone,var string email,var string orderperson,var string custcode,var integer accept)
begin
  if (StringToLongInt(GetSessionString("hwu_appl_courseno"))==courseno) then begin
    personname1 = GetSessionString("hwu_appl_personname1");
    personname2 = GetSessionString("hwu_appl_personname2");
    personname3 = GetSessionString("hwu_appl_personname3");
    personname4 = GetSessionString("hwu_appl_personname4");
    personname5 = GetSessionString("hwu_appl_personname5");
    personmail1 = GetSessionString("hwu_appl_personmail1");
    personmail2 = GetSessionString("hwu_appl_personmail2");
    personmail3 = GetSessionString("hwu_appl_personmail3");
    personmail4 = GetSessionString("hwu_appl_personmail4");
    personmail5 = GetSessionString("hwu_appl_personmail5");
    companyname = GetSessionString("hwu_appl_companyname");
    department  = GetSessionString("hwu_appl_department");
    title       = GetSessionString("hwu_appl_title");
    addr1       = GetSessionString("hwu_appl_addr1");
    postalcode  = GetSessionString("hwu_appl_postalcode");
    city        = GetSessionString("hwu_appl_city");
    country     = GetSessionString("hwu_appl_country");
    phone       = GetSessionString("hwu_appl_phone");
    email       = GetSessionString("hwu_appl_email");
    orderperson = GetSessionString("hwu_appl_orderperson");
    accept      = StringToInt(GetSessionString("hwu_appl_accept"));
  end else begin
    ClearApplicationFormValues;
    personname1 = "";
    personname2 = "";
    personname3 = "";
    personname4 = "";
    personname5 = "";
    personmail1 = "";
    personmail2 = "";
    personmail3 = "";
    personmail4 = "";
    personmail5 = "";
    companyname = "";
    department  = "";
    title       = "";
    addr1       = "";
    postalcode  = "";
    city        = "";
    country     = "";
    phone       = "";
    email       = "";
    orderperson = "";
    accept      = 0;
  end;

  return;
end;

global
procedure GetApplicationFormValues(longint courseno,var string personname1,var string personname2,var string personname3,var string personname4,var string personname5,
                              var string companyname,var string department,var string title,var string addr1,var string postalcode,var string city,var string country,
                              var string phone,var string email,var string orderperson,var string custcode,var integer accept)
begin
  string 255 personmail1,personmail2,personmail3,personmail4,personmail5;
  GetApplicationFormValues2(courseno,personname1,personname2,personname3,personname4,personname5,personmail1,personmail2,personmail3,personmail4,personmail5,companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,custcode,accept);

  return;
end;

function boolean ValidateUniversityForm(longint courseno,string personname1,string personname2,string personname3,string personname4,string personname5,
                              string personmail1,string personmail2,string personmail3,string personmail4,string personmail5,
                              string companyname,string department,string title,string addr1,string postalcode,string city,string country,
                              string phone,string email,string orderperson,integer accept,var integer error,var string errormsg)
begin
  boolean res;
  
  error = 0;
  
  if (blank(personname1)) then begin
    error = error + 1;
  end;

  if (blank(companyname)) then begin
    error = error + 2;
  end;

  if (blank(addr1)) then begin
    error = error + 4;
  end;

  if (blank(postalcode)) then begin
    error = error + 8;
  end;

  if (blank(city)) then begin
    error = error + 16;
  end;

  if (blank(phone)) then begin
    error = error + 32;
  end;

  if (InterNetAddrTest(email)==false) then begin
    error = error + 64;
  end;
  
  if (error!=0) then begin
    errormsg = ToolWebNGTranslateText(30005);
  end else begin
    if (accept==0) then begin
      error = -1;
      errormsg = ToolWebNGTranslateText(30049);
    end;
  end;

  if (error==0) then begin
    res = true;
  end else begin
    res = false;
  end;

  ValidateUniversityForm = res;
  return;
end;

global
procedure UniversityActionApplyCourse()
begin
  longint courseno;
  string 255 personname1,personname2,personname3,personname4,personname5;
  string 255 personmail1,personmail2,personmail3,personmail4,personmail5;
  string 255 companyname,department,title;
  string 255 addr1,postalcode,city,country,phone,email,orderperson;
  integer accept;
  integer error;
  string 255 errormsg;
  
  switch (WebGetArg("step")) begin
    case "1" :
      courseno    = StringToLongInt(WebGetArg("course"));
      personname1 = WebGetArg("personname1");
      personname2 = WebGetArg("personname2");
      personname3 = WebGetArg("personname3");
      personname4 = WebGetArg("personname4");
      personname5 = WebGetArg("personname5");
      personmail1 = WebGetArg("personmail1");
      personmail2 = WebGetArg("personmail2");
      personmail3 = WebGetArg("personmail3");
      personmail4 = WebGetArg("personmail4");
      personmail5 = WebGetArg("personmail5");
      companyname = WebGetArg("companyname");
      department  = WebGetArg("department");
      title       = WebGetArg("title");
      addr1       = WebGetArg("addr1");
      postalcode  = WebGetArg("postalcode");
      city        = WebGetArg("city");
      country     = WebGetArg("country");
      phone       = WebGetArg("phone");
      email       = WebGetArg("email");
      orderperson = WebGetArg("orderperson");
      if (nonblank(WebGetArg("accept"))) then begin accept = 1; end else begin accept = 0; end;

      StoreApplicationFormValues(courseno,personname1,personname2,personname3,personname4,personname5,personmail1,personmail2,personmail3,personmail4,personmail5,companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,accept);
                                  
      if (ValidateUniversityForm(courseno,personname1,personname2,personname3,personname4,personname5,personmail1,personmail2,personmail3,personmail4,personmail5,companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,accept,error,errormsg)==false) then begin
        PutSessionString("hwu_appl_error",error);
        PutSessionString("hwu_appl_errormsg",errormsg);
        
        //show step 1 again
        RedirectToUniversityFunction("apply",courseno & "/step1/");
      end else begin
        //redirect to step 2
        RedirectToUniversityFunction("apply",courseno & "/step2/");
      end;
  end;
  
  return;
end;

global
procedure UniversityApplicationForm(longint courseno)
begin
  record CourseEventVc CourseEventr;
  record CourseVc Courser;
  Boolean translated;
  string 255 llink;
  string 255 name,description,length;
  string 255 bgcolor;
  record ResVc Resr;
  record CUVc CUr;
  string 255 personname1,personname2,personname3,personname4,personname5;
  string 255 personmail1,personmail2,personmail3,personmail4,personmail5;
  string 255 companyname,department,title;
  string 255 addr1,postalcode,city,country,phone,email,orderperson,custcode;
  integer accept;
  integer error;
  string 255 errormsg;
  string 255 ccnumber,plch1,plch2;
    
  bgcolor="";
  
  CourseEventr.SerNr = courseno;
  if(ReadFirstMain(CourseEventr,1,true)) then begin end;
  Courser.Code = CourseEventr.CourseCode;
  if(ReadFirstMain(Courser,1,true)) then begin end;
  GetCourseStr(Courser,name,description,length,CurrentWebLang,translated);
  Resr.Code = CourseEventr.ConferenceLocation;
  if(ReadFirstMain(Resr,1,true)) then begin end;
  CUr.Code = CurrentCust;
  if (ReadFirstMain(CUr,1,true)==false) then begin end;
  
  if (blank(GetSessionString("hwu_appl_inprogress"))) then begin
    ClearApplicationFormValues;
    PutSessionString("hwu_appl_inprogress","1");
  end;
  
  GetApplicationFormValues2(courseno,personname1,personname2,personname3,personname4,personname5,personmail1,personmail2,personmail3,personmail4,personmail5,companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,custcode,accept);
  
  WebOutTagOpen("<form method=""post"" action=""/WebAction.hal?action=university_applycourse&course=" & courseno & "&step=1"">");

  WebOutTagOpen("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class="""">");
  WebOutTagOpen("<tr valign=""top"">");
  WebOutTagOpen("<td class=""heading2"">");
  WebOutString("&nbsp;");
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagClose("</table>");
  
  WebOutString("<h2>" & ToolWebNGTranslateText(30013) & "</h2>");

  WebOutTagOpen("<table align=""center"" bgcolor=""#FFFFFF"" width=""90%"" cellspacing=""3"" cellpadding=""3"" border=""0"" class="""">");
  WebOutTagOpen("<tr>");
  WebOutTagOpen("<td class=""feedback-txt"">");
  WebOutString(ToolWebNGTranslateText(30012) & ":");
  WebOutTagClose("</td>");
  WebOutTagOpen("<td width=""72%"">");
  WebOutString(name);
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");

  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30015) & ":</td><td width=""72%"">" & CourseEventr.TransDate & "</td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30023) & ":</td><td width=""72%"">" & length & "</td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30033) & ":</td><td width=""72%"">" & CourseEventr.Price & " " & CourseEventr.CurncyCode & "</td></tr>");  
  WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"">&nbsp;</td></tr>");    
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30003) & ":</td><td width=""72%"">" & Resr.Addr1 & "</td></tr>");    
  WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"">" & Resr.Addr2 & "</td></tr>");      
  WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"">" & Resr.Addr3 & "</td></tr>");        
  WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"">&nbsp;</td></tr>");
  WebOutStringFormatNL("</table>");  

  WebOutStringFormatNL("<h2>" & ToolWebNGTranslateText(30027) & "</h2>");
  WebOutString("<table align=""center"" bgcolor=""#FFFFFF"" width=""90%"" cellspacing=""3"" cellpadding=""3"" border=""0"" class="""">");  
  
  error = StringToInt(GetSessionString("hwu_appl_error"));
  if (error!=0) then begin
    errormsg = GetSessionString("hwu_appl_errormsg");
    PutSessionString("hwu_appl_error","");
    PutSessionString("hwu_appl_errormsg","");
  
    WebOutString("<tr><td colspan=""2"" class=""redfont"">" & errormsg & "</td></tr>");
    if (error>0) then begin
      WebOutTagOpen("<tr>");
      WebOutTagOpen("<td colspan=""2"" class=""redfont"">");
      WebOutTagOpen("<ul>");

      if (BitAnd(error,1)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30026));
        WebOutTagClose("</li>");
      end;
      
      if (BitAnd(error,1)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30026));
        WebOutTagClose("</li>");
      end;

      if (BitAnd(error,2)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30010));
        WebOutTagClose("</li>");
      end;

      if (BitAnd(error,4)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30044));
        WebOutTagClose("</li>");
      end;

      if (BitAnd(error,8)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30032));
        WebOutTagClose("</li>");
      end;

      if (BitAnd(error,16)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30009));
        WebOutTagClose("</li>");
      end;
        
      if (BitAnd(error,32)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30029));
        WebOutTagClose("</li>");
      end;

      if (BitAnd(error,64)) then begin
        WebOutTagOpen("<li>");
        WebOutStringFormat(ToolWebNGTranslateText(30017));
        WebOutTagClose("</li>");
      end;

      WebOutTagOpen("</ul>");
      WebOutTagClose("</td>");
      WebOutTagClose("</tr>");
    end;
  end;
  
  ToolWebHBSDivContactLine(ToolWebNGTranslateText(30004),"","",false);

  plch1 =  "placeholder='" & ToolWebNGTranslateText(30075) & "'";  
  plch2 =  "placeholder='" & ToolWebNGTranslateText(30076) & "'";
    
  WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30026) & " 1</td><td class='nameinput'><input value=""" & personname1 & """ type=""text"" name=""personname1"" size=""31"" class=""feedback"" " & plch1 & ">*</td><td class='mailinput'><input value=""" & personmail1 & """ type=""text"" name=""personmail1"" size=""31"" class=""feedback""  " & plch2 & "></td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30026) & " 2</td><td><input value=""" & personname2 & """ type=""text"" name=""personname2"" size=""31"" class=""feedback"" " & plch1 & "></td><td class='mailinput'><input value=""" & personmail2 & """ type=""text"" name=""personmail2"" size=""31"" class=""feedback"" " & plch2 & "></td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30026) & " 3</td><td><input value=""" & personname3 & """ type=""text"" name=""personname3"" size=""31"" class=""feedback"" " & plch1 & "></td><td class='mailinput'><input value=""" & personmail3 & """ type=""text"" name=""personmail3"" size=""31"" class=""feedback"" " & plch2 & "></td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30026) & " 4</td><td><input value=""" & personname4 & """ type=""text"" name=""personname4"" size=""31"" class=""feedback"" " & plch1 & "></td><td class='mailinput'><input value=""" & personmail4 & """ type=""text"" name=""personmail4"" size=""31"" class=""feedback"" " & plch2 & "></td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30026) & " 5</td><td><input value=""" & personname5 & """ type=""text"" name=""personname5"" size=""31"" class=""feedback"" " & plch1 & "></td><td class='mailinput'><input value=""" & personmail5 & """ type=""text"" name=""personmail5"" size=""31"" class=""feedback"" " & plch2 & "></td></tr>");
  if (blank(CUr.Name)) then begin
    WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30010) & "</td><td><input value=""" & companyname & """ type=""text"" name=""companyname"" size=""31"" class=""feedback"">*</td></tr>");
  end else begin
    WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30010) & ":</td><td class=""feedback-txt""><input value=""" & CUr.Name & """ type=""hidden"" name=""companyname"">" & CUr.Name & "</td></tr>");
  end;

  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30016) & "</td><td><input value=""" & department & """ type=""text"" name=""department"" size=""31"" class=""feedback""></td></tr>");
  WebOutString("<tr><td  class=""feedback-txt"">" & ToolWebNGTranslateText(30048) & "</td><td><input value=""" & title & """ type=""text"" name=""title"" size=""31"" class=""feedback""></td></tr>");
  ToolWebHBSDivContactLine("<br>" & ToolWebNGTranslateText(30021),"","",false);    
  if (blank(addr1)) then begin
    addr1 = CUr.InvAddr0;
  end;
  WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30044) & "</td><td><input value=""" & addr1 & """ type=""text"" name=""addr1"" size=""31"" class=""feedback"">*</td></tr>");
  
  if (blank(postalcode) and blank(city)) then begin
    SplitPostcodeCity(CUr.InvAddr1,postalcode,city);
  end;

  WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30032) & "</td><td><input value=""" & postalcode & """ type=""text"" name=""postalcode"" size=""31"" class=""feedback"">*</td></tr>");
  WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30009) & "</td><td><input value=""" & city & """ type=""text"" name=""city"" size=""31"" class=""feedback"">*</td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30011) & "</td><td><input value=""" & country & """ type=""text"" name=""country"" size=""31"" class=""feedback""></td></tr>");
  
  if (blank(phone)) then begin
    phone = CUr.Phone;
  end;
  WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30029) & "</td><td><input value=""" & phone & """ type=""text"" name=""phone"" size=""31"" class=""feedback"">*</td></tr>");
  if (blank(email)) then begin
    email = CUr.eMail;
  end;
  WebOutString("<tr><td bgcolor=""" & bgcolor & """ class=""feedback-txt"">" & ToolWebNGTranslateText(30017) & "</td><td><input value=""" & email & """ type=""email"" name=""email"" size=""31"" class=""feedback"">*</td></tr>");
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30014) & "</td><td><input value=""" & custcode & """ type=""text"" name=""custcode"" size=""31"" class=""feedback""></td></tr>");
  ToolWebHBSDivContactLine("<br>" & ToolWebNGTranslateText(30028),"","",false);
  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30025) & "</td><td><input value=""" & orderperson & """ type=""text"" name=""orderperson"" size=""31"" class=""feedback""></td></tr>");  
//  WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30017) & "</td><td><input value=""" & WebGetArg("order_email") & """ type=""text"" name=""order_email"" size=""31"" class=""feedback""></td></tr>");
  WebOutString("<tr><td colspan=""2"" class=""feedback-txt""><br><input type=""checkbox"" name=""accept"">" & ToolWebNGTranslateText(30019) & "<br><br></td></tr>");  
  llink = FormatSimpleLink(GetLinkToUniversityTermsPage(true),true);
  WebOutString("<tr>");
  WebOutString("  <td colspan=""2"" class=""feedback-txt"">");
  WebOutString("      <a href=""" & llink & """ target=""_blank"" onclick=""return jsUnivReadMore(this.href);"">");
  WebOutString("      <img src=""/gfx/dot04.gif"" width=""15"" height=""9"" border=""0"">" & ToolWebNGTranslateText(30038) & "</a><br></span><br>");
  WebOutString("  </td>");
  WebOutString("</tr>");
  WebOutString("<tr><td colspan=""2"" class=""readmoreMenuLink""><img src=""/gfx/dot04.gif"" width=""15"" height=""9"" border=""0""><a href=""javascript:;"" onclick=""window.print(); return false;"">" & ToolWebNGTranslateText(30036) & "</a><br><br></td></tr>");
  
  WebOutString("<tr valign=""top""><td class=""feedback-txt"">");
  WebOutString("</td>");
  WebOutString("<td class=""feedback"">");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("<tr valign=""top"">");
  WebOutString("<td>&nbsp;</td>");
  WebOutString("<td align=""right"">");
  WebOutString("<input type=""reset"" name=""Reset"" value=""" & ToolWebNGTranslateText(30040) & """>");  
  WebOutString("&nbsp;&nbsp;&nbsp;<input type=""submit"" name=""Submit"" value=""" & ToolWebNGTranslateText(30041) & """>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
  WebOutString("</td>");
  WebOutString("</tr>");
  WebOutString("</table>");
  WebOutString("</form>");

  return;
end;

procedure UniversityChoosePayment(longint courseno)
begin
  string 255 personname1,personname2,personname3,personname4,personname5;
  string 255 personmail1,personmail2,personmail3,personmail4,personmail5;
  string 255 companyname,department,title;
  string 255 addr1,postalcode,city,country,phone,email,orderperson,custcode;
  integer accept;
  string 255 ccnumber;
  record WebNGUniversityBlock WUb;

  GetApplicationFormValues2(courseno,personname1,personname2,personname3,personname4,personname5,personmail1,personmail2,personmail3,personmail4,personmail5,companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,custcode,accept);
  
  if (accept==1) then begin
    BlockLoad(WUb);
    
    WebOutTagOpen("<form method=""post"" action=""/WebUpdatingAction.hal?action=university_pay&course=" & courseno & """>");

    WebOutStringFormatNL("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class="""">");
    WebOutStringFormatNL("<tr valign=""top"">");
    WebOutStringFormatNL("<td class=""heading2"">&nbsp;</td>");
    WebOutStringFormatNL("</tr>");
    WebOutStringFormatNL("</table>");
    
    WebOutStringFormatNL("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class=""deftbl"">");
    WebOutStringFormatNL("  <tr><th>" & ToolWebNGTranslateText(30058) & "</th></tr>");
    WebOutStringFormatNL("</table>");
    WebOutString("<table align=""center"" bgcolor=""#FFFFFF"" width=""90%"" cellspacing=""3"" cellpadding=""3"" border=""0"" class="""">");
    WebOutString("<tr><td colspan=""2"" width=""100%"" class=""feedback-txt"">");
    WebOutString(ToolWebNGTranslateText(30059));
    WebOutString("</td></tr>");

    WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"">&nbsp;</td></tr>");
    WebOutString("<tr valign=""top"">");
    WebOutString("<td>&nbsp;</td>");
    WebOutString("<td align=""right"" width=""72%"">");
    if (WUb.PayWithCC!=0) then begin
      WebOutString("<input type=""submit"" name=""SubmitCC"" value=""" & ToolWebNGTranslateText(30060) & """>");   //TODO: connect
      WebOutString("&nbsp;&nbsp;&nbsp;");
    end;
    if (WUb.PayWithIV!=0) then begin
      WebOutString("<input type=""submit"" name=""SubmitIV"" value=""" & ToolWebNGTranslateText(30061) & """>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
    end;
    WebOutString("</td></tr>");
    WebOutString("</tr>");

    WebOutStringFormatNL("</table>");  
    
    WebOutTagClose("</form>");  
  end else begin
    //show step 1 again
    RedirectToUniversityFunction("apply",courseno & "/step1/");
  end;

  return;
end;

global
updating procedure UniversityStoreBooking2(longint invno,longint orderno,longint courseno,string personname1,string personname2,string personname3,string personname4,string personname5,
                              string personmail1,string personmail2,string personmail3,string personmail4,string personmail5,
                              string companyname,string department,string title,string addr1,string postalcode,string city,string country,
                              string phone,string email,string orderperson,string custcode)
begin
  record CourseEventVc CourseEventr;
  row CourseEventVc CourseEventrw;
  record CourseVc Courser;
  record CUVc CUr;
  record ResVc Resr;
  record ContactRelVc ContactRelr;
  record CUVc ContactCUr;
  string 255 tstr;
  integer i,rwcnt;
  string 255 name,description,length;
  boolean found_cust,translated;
  string 255 person,personmail;

  CourseEventr.SerNr = courseno;
  if (ReadFirstMain(CourseEventr,1,true)) then begin
    Courser.Code = CourseEventr.CourseCode;
    if (ReadFirstMain(Courser,1,true)) then begin end;
    GetCourseStr(Courser,name,description,length,CurrentWebLang,translated);
    Resr.Code = CourseEventr.ConferenceLocation;
    if (ReadFirstMain(Resr,1,true)) then begin end;          
    
    found_cust = false;
    if (nonblank(custcode)) then begin
      CUr.Code = custcode;
      if(ReadFirstMain(CUr,1,true)) then begin
        found_cust = true;
      end;
    end;
    if (found_cust==false) then begin
      CUr.Name = companyname; 
      if (ReadFirstKey("Name",CUr,1,true)==false) then begin
        RecordNew(CUr);
        CUr.Name = companyname;
        CUr.InvAddr0 = addr1;
        CUr.InvAddr1 = postalcode & " " & city;
        CUr.InvAddr2 = country;
        CUr.Phone = phone;
        CUr.eMail = email;
        if(GetNextCustNr(tstr)) then begin end;
        CUr.Code = tstr;
        if (RecordStore(CUr,true)) then begin end;
      end;
    end;
    
    for (i=1;i<=5;i=i+1) begin
      switch (i) begin
        case 1: person = personname1; personmail = personmail1;
        case 2: person = personname2; personmail = personmail2;
        case 3: person = personname3; personmail = personmail3;
        case 4: person = personname4; personmail = personmail4;
        case 5: person = personname5; personmail = personmail5;
        otherwise
          person = "";
      end;
      if (nonblank(person)) then begin
        ContactRelr.ContactName = person;
        ContactRelr.CustCode = CUr.Code;
        if (ReadFirstKey("Contact",ContactRelr,2,true)==false) then begin
          RecordNew(ContactCUr);
          ContactCUr.Name = person;
          ContactCUr.InvAddr0 = CUr.InvAddr0;
          ContactCUr.InvAddr1 = CUr.InvAddr1;
          ContactCUr.InvAddr2 = CUr.InvAddr2;
          ContactCUr.InvAddr3 = CUr.InvAddr3;
          ContactCUr.InvAddr4 = CUr.InvAddr4;
          ContactCUr.NoLetterPosting = CUr.NoLetterPosting;
          ContactCUr.NoMailPosting = CUr.NoMailPosting;
          ContactCUr.Phone = CUr.Phone;
          ContactCUr.Fax = CUr.Fax;
          ContactCUr.eMail = personmail;
          ContactCUr.Department = department;
          ContactCUr.CUType = 0;
          if(GetNextCustNr(tstr)) then begin end;
          ContactCUr.Code = tstr;
          if (RecordStore(ContactCUr,true)) then begin 
            RecordNew(ContactRelr);
            ContactRelr.CustCode = CUr.Code;
            ContactRelr.CustName = CUr.Name;
            ContactRelr.ContactCode = ContactCUr.Code;
            ContactRelr.ContactName = ContactCUr.Name;
            ContactRelr.ContactPhone = ContactCUr.Phone;
            ContactRelr.ContactMobile = ContactCUr.Mobile;
            ContactRelr.ContacteMail = ContactCUr.eMail;
            ContactRelr.ContactTitle = ContactCUr.Title;
            ContactRelr.ContactAltPhone = ContactCUr.AltPhone;
            if (RecordStore(ContactRelr,true)) then begin
            end;
          end;      
        end else begin
          ContactCUr.Code = ContactRelr.ContactCode;
          if (ReadFirstMain(ContactCUr,1,true)) then begin
          end;
        end;
        
        rwcnt = MatRowCnt(CourseEventr);
        CourseEventrw.CustCode = CUr.Code;
        CourseEventrw.ContactName = person;
        CourseEventrw.ContactCode = ContactCUr.Code;
        CourseEventrw.PriceListRow = CUr.PLCode;
        CourseEventrw.Source = "WEB";    
        CourseEventrw.BookingDate = CurrentDate;        
        CourseEventrw.Reference = orderperson;
        CourseEventrw.ItemCode = Courser.ItemCode;
        MatRowPut(CourseEventr,rwcnt,CourseEventrw);
        CourseEventrw.Price = GetCourseEventRowPrice(CourseEventr,rwcnt,true);

        if (blank(CourseEventrw.Price)) then begin
          CourseEventrw.Price = CourseEventr.Price;
        end;
        CourseEventrw.InvoiceNo = invno;
        MatRowPut(CourseEventr,rwcnt,CourseEventrw);

        CourseEventVc_UpdatePrice(CourseEventr);
        if (RecordStore(CourseEventr,true)) then begin
          SendUniversityMailToContact(ContactCUr,CourseEventr);
          if (nonblank(CourseEventr.Responsible)) then begin
            SendMailToCourseEventResponsible(CourseEventr.SerNr,CourseEventr.Responsible,CourseEventrw.ContactName);
          end else begin
            if (nonblank(Courser.Responsible)) then begin
              SendMailToCourseEventResponsible(CourseEventr.SerNr,Courser.Responsible,CourseEventrw.ContactName);
            end;
          end;
        end;
      end; //if nonblank
    end; // for personname&i
  end;
  
  PutSessionString("hwu_pay_invno",invno);
  PutSessionString("hwu_pay_orderno",orderno);
  PutSessionString("hwu_pay_ccnumber","");

  RedirectToUniversityFunction("apply",courseno & "/step3/");
  return;
end;

global
updating procedure UniversityStoreBooking(longint invno,longint orderno,longint courseno,string personname1,string personname2,string personname3,string personname4,string personname5,
                              string companyname,string department,string title,string addr1,string postalcode,string city,string country,
                              string phone,string email,string orderperson,string custcode)
begin
  string 255 personmail1,personmail2,personmail3,personmail4,personmail5;
  
  UniversityStoreBooking2(invno,orderno,courseno,personname1,personname2,personname3,personname4,personname5,
                         personmail1,personmail2,personmail3,personmail4,personmail5,
                         companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,custcode);

  return;
end;

procedure UniversityBookingComplete(longint courseno)
begin
  record CourseEventVc CourseEventr;
  record CourseVc Courser;
  record ResVc Resr;
  string 255 name,description,length;
  boolean found_cust,translated;
  integer i,cnt;
  string 255 person;
  string 255 personname1,personname2,personname3,personname4,personname5;
  string 255 personmail1,personmail2,personmail3,personmail4,personmail5;
  string 255 companyname,department,title;
  string 255 addr1,postalcode,city,country,phone,email,orderperson,custcode;
  integer accept;
  string 255 ccnumber;
  longint invno,orderno;

  GetApplicationFormValues2(courseno,personname1,personname2,personname3,personname4,personname5,personmail1,personmail2,personmail3,personmail4,personmail5,companyname,department,title,addr1,postalcode,city,country,phone,email,orderperson,custcode,accept);

  invno = StringToLongint(GetSessionString("hwu_pay_invno"));
  orderno = StringToLongint(GetSessionString("hwu_pay_orderno"));
  ccnumber = GetSessionString("hwu_pay_ccnumber");
  
  PutSessionString("hwu_appl_inprogress","");
  
  if (accept==1 and invno>0) then begin
    CourseEventr.SerNr = courseno;
    if (ReadFirstMain(CourseEventr,1,true)) then begin
      
      Courser.Code = CourseEventr.CourseCode;
      if (ReadFirstMain(Courser,1,true)) then begin end;
      GetCourseStr(Courser,name,description,length,CurrentWebLang,translated);
      Resr.Code = CourseEventr.ConferenceLocation;
      if (ReadFirstMain(Resr,1,true)) then begin end;

      WebOutStringFormatNL("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class="""">");
      WebOutStringFormatNL("<tr valign=""top"">");
      WebOutStringFormatNL("<td class=""heading2"">&nbsp;<br><br></td>");
      WebOutStringFormatNL("</tr>");
      WebOutStringFormatNL("</table>");
      
      WebOutStringFormatNL("<table align=""center"" width=""90%"" cellspacing=""1"" cellpadding=""3"" border=""0"" class=""deftbl"">");
      WebOutStringFormatNL("  <tr><th>" & ToolWebNGTranslateText(30008) & "</th></tr>");
      WebOutStringFormatNL("</table>");
      
      WebOutString("<table align=""center"" bgcolor=""#FFFFFF"" width=""90%"" cellspacing=""3"" cellpadding=""3"" border=""0"" class="""">");
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt""><b>" & ToolWebNGTranslateText(30046) & "</b><br>" & ToolWebNGTranslateText(30002) & "</td></tr>");
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt"">&nbsp;</td></tr>");
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt""><b>" & ToolWebNGTranslateText(30018) & ":</b></td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30042) & ":</td><td width=""72%"" class=""feedback-txt"">" & email & "</td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30012) & ":</td><td width=""72%"" class=""feedback-txt"">" & name & "</td></tr>");      
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30015) & ":</td><td width=""72%"" class=""feedback-txt"">" & CourseEventr.TransDate & "</td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30047) & ":</td><td width=""72%"" class=""feedback-txt"">" & left(CourseEventr.StartTime,5) & "-" & left(CourseEventr.EndTime,5) &  "</td></tr>");  
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30030) & ":</td><td width=""72%"" class=""feedback-txt"">" &  Resr.Addr1 & "</td></tr>");          
      WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"" class=""feedback-txt"">" &  Resr.Addr2 & "</td></tr>");            
      WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"" class=""feedback-txt"">" &  Resr.Addr3 & "</td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30023) & ":</td><td width=""72%"" class=""feedback-txt"">" &  Courser.Length & "</td></tr>");
      cnt = 0;
      if (nonblank(personname1)) then begin cnt = cnt + 1; end;
      if (nonblank(personname2)) then begin cnt = cnt + 1; end;
      if (nonblank(personname3)) then begin cnt = cnt + 1; end;
      if (nonblank(personname4)) then begin cnt = cnt + 1; end;
      if (nonblank(personname5)) then begin cnt = cnt + 1; end;
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30034) & ":</td><td width=""72%"" class=""feedback-txt"">" &  CourseEventr.Price * cnt & " " &  CourseEventr.CurncyCode & "</td></tr>");
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt"">&nbsp;</td></tr>");
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt""><b>" & ToolWebNGTranslateText(30027) & ":</b></td></tr>");
      cnt = 0;
      for (i=1;i<=5;i=i+1) begin
        switch (i) begin
          case 1: person = personname1;
          case 2: person = personname2;
          case 3: person = personname3;
          case 4: person = personname4;
          case 5: person = personname5;
          otherwise
            person = "";
        end;
        if (nonblank(person)) then begin
          cnt = cnt+1;
          WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30024) & " " & cnt & ":</td><td width=""72%"" class=""feedback-txt"">" & person & "</td></tr>");
        end;
      end;
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30010) & ":</td><td width=""72%"" class=""feedback-txt"">" &  companyname & "</td></tr>");    
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30016) & ":</td><td width=""72%"" class=""feedback-txt"">" & department & "</td></tr>");      
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30048) & ":</td><td width=""72%"" class=""feedback-txt"">" & title & "</td></tr>");        
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30003) & ":</td><td width=""72%"" class=""feedback-txt"">" & addr1 & "</td></tr>");          
      WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"" class=""feedback-txt"">" & postalcode & " " & city & "</td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">&nbsp;</td><td width=""72%"" class=""feedback-txt"">" & country & "</td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30029) & ":</td><td width=""72%"" class=""feedback-txt"">" & phone & "</td></tr>");
      WebOutString("<tr><td class=""feedback-txt"">" & ToolWebNGTranslateText(30017) & ":</td><td width=""72%"" class=""feedback-txt"">" & email & "</td></tr>");  
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt"">&nbsp;</td></tr>");

      // also include link to invoice (make sure it shows even if something failed: no invno = -1)
      WebOutString("<tr><td align=""left"" colspan=""2"" class=""readmoreMenuLink""><img src=""/gfx/dot04.gif"" width=""15"" height=""9"" border=""0""><a href=""");
      WebOutString("javascript:;"" onclick=""h2 = window.open('/WebCCPaymentInvoice.hal?langcode=" & CurrentWebLang & "&invno=" & invno & "&ordno=" & orderno & "&ccnumber=" & right(ccnumber,4) & "&company=" & CurrentCompany & "','ItemView','scrollbars=yes,rezisable=yes,width=780,height=790')");
      WebOutString(""">" & ToolWebNGTranslateText(20197) & "</a></td></tr>");
      WebOutString("<tr><td colspan=""2"" class=""feedback-txt"">&nbsp;</td></tr>");
      
      WebOutString("<tr><td align=""left"" colspan=""2"" class=""readmoreMenuLink""><img src=""/gfx/dot04.gif"" width=""15"" height=""9"" border=""0""><a href=""javascript:;"" onclick=""window.print(); return false;"">" & ToolWebNGTranslateText(30035) & "</a></td></tr>");
      WebOutString("</table>");
    end;
  end else begin
    RedirectToUniversityFunction("apply",courseno & "/step1/");
  end;
  return;
end;

global
procedure UniversityApplyForCourse(record WebNGStructVc WSr,string path)
begin
  record WebNGUniversityBlock WUb;
  record WebNGPageVc WPr;
  record WebNGCountryVc WCr;
  string 255 mpath,node;
  string 255 country,group,courseevent;
  array string 255 grouplist;
  array string 255 namelist;
  integer i,cnt;
  integer oldcomp;
  boolean res;
  boolean failf;
  
  if (blank(path)) then begin
    RedirectToUniversityFunction("courses","");
    goto LUniversityApplyForCourse;
  end;
  
  if (LoginState==false) then begin
    RedirectToLoginPage;
  end;
  
  WPr.Code = WSr.WebPage;
  if (nonblank(WPr.Code)) then begin
    if (ReadFirstMain(WPr,1,true)) then begin end;
  end;

  mpath = path;
  
  node = removenextnode(mpath);
  courseevent = node;

  node = removenextnode(mpath);
  failf = true;
  if (nonblank(node)) then begin
    if (left(node,4)=="step") then begin
      BlockLoad(WUb);
      switch (node) begin
        case "step1": //details
          ShowWebAppPageStart(WPr,"");
          ShowWebElementTemplate(WUb.ApplyPageElement,0); //before

          UniversityApplicationForm(StringToLongInt(courseevent));

          ShowWebElementTemplate(WUb.ApplyPageElement,2); //after
          ShowWebAppPageEnd(WPr);
          failf = false;
        case "step2": //payment method
          ShowWebAppPageStart(WPr,"");
          ShowWebElementTemplate(WUb.ApplyPageElement,0); //before

          UniversityChoosePayment(StringToLongInt(courseevent));

          ShowWebElementTemplate(WUb.ApplyPageElement,2); //after
          ShowWebAppPageEnd(WPr);
          failf = false;
        case "step3": //done
          ShowWebAppPageStart(WPr,"");
          ShowWebElementTemplate(WUb.ApplyPageElement,0); //before

          UniversityBookingComplete(StringToLongint(courseevent));

          ShowWebElementTemplate(WUb.ApplyPageElement,2); //after
          ShowWebAppPageEnd(WPr);
          failf = false;
      end;
    end;
  end;
  
  if (failf) then begin
    RedirectToUniversityFunction("apply",courseevent & "/step1/");
  end;
  
LUniversityApplyForCourse:;
  return;
end;