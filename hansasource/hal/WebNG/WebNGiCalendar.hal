// Needs some sort of authentication. Currently opens up that anyones calendar is accessable.

//tools
external function string 50 TimeToString(time,string,boolean); 
external function string 10 ToolWebNGGetCountry();
//shop
external function boolean ShopSetCompany(string);

function string 255 DTstring(Date dt,Time tt)
begin
  String 255 res;
  
  res = DateToString(dt,"YYYYMMDD");
  res = res & "T" & TimeToString(tt,"HHMMSS",false);

  DTstring = res;
  return;
end;

function string 255 ActRowsAsDesription(record ActVc Actp)
begin
  row ActVc Actrw;
  integer i,rwcnt;
  string 255 res;
  
  rwcnt = MatRowCnt(Actp);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(Actp,i,Actrw);
    if (nonblank(Actrw.Text)) then begin
      if (nonblank(res)) then begin 
        res = res & "\\n";
      end;
      res = res & Actrw.Text;
    end;
  end;  
  ActRowsAsDesription = res;
  return;
end;

global
procedure WebGetIcalendar()
begin
  record ActVc Actr;
  string 255 user;
  string 255 CatStr,ckey,compnostr;
  integer oldcompany,lenclass,compno;
  boolean res,TrHs,testf;
  Date BeginDate,EndDate,blankd;
  Time blankTimev;
  
  oldcompany = CurrentCompany;
  compnostr = WebGetArg("compno");
  compno = StringToInt(compnostr);
  
  res = ShopSetCompany(ToolWebNGGetCountry);
  if (res==false and nonblank(compnostr)) then begin 
    if (SetCompanyCode(compno,false)==false) then begin
      goto LLWebGetIcalendar01;
    end;    
  end;
  blankTimev.hour = 0;
  blankTimev.minute = 0;
  blankTimev.second = 0;
  
  user = WebGetArg("CustCode");
  if (blank(user)) then begin 
    goto LLWebGetIcalendar01;
  end;  
  BeginDate = AddMonth(CurrentDate,-1);
  EndDate = AddYear(CurrentDate,1);

  WebOutStringFormatNL("BEGIN:VCALENDAR");
  WebOutStringFormatNL("VERSION:2.0");
  WebOutStringFormatNL("METHOD:PUBLISH");

  ResetLoop(Actr);
  ckey = "CalUserMain:";
  ckey = ckey & user;
  Actr.TodoFlag = kTodoFlagCalendar;
  Actr.TransDate = BeginDate;
  switch (lenclass) begin
    case 4: Actr.TransDate = blankd;
    case 3: Actr.TransDate = AddDay(Actr.TransDate,-366);
    case 2: Actr.TransDate = AddDay(Actr.TransDate,-31);
    case 1: Actr.TransDate = AddDay(Actr.TransDate,-7);
    case 0: ;
  end;
  Actr.LengthClass = lenclass;
  TrHs = true;
  testf = true;
  while (LoopKey(ckey,Actr,3,TrHs)) begin
    if (Actr.TodoFlag!=0) then begin TrHs = false; end;
    if (Actr.LengthClass!=lenclass) then begin TrHs = false; end;
    if (Actr.TransDate>EndDate) then begin TrHs = false; end;
    if (DateInRange(Actr.TransDate,BeginDate,EndDate)==false) then begin TrHs = false; end;
    if (TrHs and testf) then begin 
      WebOutStringFormatNL("BEGIN:VEVENT");
      switch (Actr.SymbNr) begin
        case kActivitySymbolOther: CatStr = "Other";
        case kActivitySymbolCall: CatStr = "Call";
        case kActivitySymbolMeeting: CatStr = "Meeting";
        case kActivitySymbolDeskwork: CatStr = "Desk work";
        otherwise
            CatStr ="";
      end;      
      WebOutStringFormatNL("CATEGORIES:" & CatStr);
      WebOutStringFormatNL("CREATED:" & DTstring(Actr.CreationDate,blankTimev) & "Z");
      WebOutStringFormatNL("DTEND:" & DTstring(Actr.EndDate,Actr.EndTime));
      WebOutStringFormatNL("SUMMARY:" & Actr.Comment);
      WebOutStringFormatNL("DTSTART:" & DTstring(Actr.TransDate,Actr.StartTime));
      WebOutStringFormatNL("DTSTAMP:" & DTstring(Actr.CreationDate,blankTimev) & "Z");
      WebOutStringFormatNL("SEQUENCE:1");
      WebOutStringFormatNL("DESCRIPTION:" & ActRowsAsDesription(Actr));
      WebOutStringFormatNL("STATUS:" & Actr.ActResult);   
      WebOutStringFormatNL("END:VEVENT");
    end;  
  end;  
  WebOutStringFormatNL("END:VCALENDAR");
  WebOutStringFormatNL("");
LLWebGetIcalendar01:;
  if (res) then begin
    ResetCompany(oldcompany);
  end;
  return;
end;
