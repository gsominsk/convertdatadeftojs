//tools
external function string 10 CurrentWebLang;
external procedure ToolWebOutElementTextFormat(record WebNGElementVc);
external function string 255 GetLinkToStruct(LongInt,boolean);
external function string 255 FormatLink(string,string,boolean,boolean);
external function boolean LoginState();
//translation
external function string 255 GetTranslatedNameMenu(record WebNGMenuVc);
//special elements
external procedure ShowWorldMapControl(record WebNGElementVc);
external procedure ShowCountryDropDownElement(record WebNGElementVc);
external procedure ShowLoggedInCustomer();
//std
external function string 255 UrlEncodeCS(string);
//forward declaration
external procedure ShowWebMenu(string);

procedure ToolWebOutLoggedString(string tstr)
begin
  WebOutString(tstr);
  //LogText(0,tstr);
  return;
end;

procedure LiveChatConcealUser(var string user)
begin
  LongInt usercnt,i;
  string 255 tstr;
  
  if (true) then begin //TODO: make setting
    usercnt = StringToLongInt(GetSessionString("chat_users"));
    for (i=1;i<=usercnt;i=i+1) begin
      if (GetSessionString("chat_user_" & i)==user) then begin
        user = "";
        if (i>1) then begin
          user = " " & i;
        end;
        user = "Agent" & user;
        goto out;
      end;
    end;
  end;  
out:;
  return;
end;

procedure LiveChatCreate()
begin
  record ExtChatUsersVc ECUr;
  string 255 res,user;
  LongInt chatid;
  boolean foundf;
  
  foundf = true;
  ECUr.Status = 1;
  while (LoopKey("Status",ECUr,1,foundf)) begin
    if (ECUr.Status!=1) then begin
      foundf = false;
    end;
    if (foundf) then begin
      //Logtext(0,"User = " & ECUr.UserMailboxName);
      if (UserOnline(ECUr.UserMailboxName)) then begin
        chatid = ChatCreate(ECUr.UserMailboxName);
        PutSessionString("chat_id",chatid);
        PutSessionString("chat_users","1");
        PutSessionString("chat_user_1",ECUr.UserMailboxName);
        res = "success";
        user = ECUr.UserMailboxName;
        LiveChatConcealUser(user);
        goto out;
      end;
    end;
  end;
  res = "none-available";
  user = "";
out:;
  ToolWebOutLoggedString("{");
  ToolWebOutLoggedString(  "objtype:'new-chat',");
  ToolWebOutLoggedString(  "result:'" & res & "',");
  ToolWebOutLoggedString(  "user:'" & user & "'");
  ToolWebOutLoggedString("}");
  return;
end;

procedure LiveChatClose()
begin
  LongInt chatid;
  LongInt l;
  
  chatid = StringToLongint(GetSessionString("chat_id"));
  if (false or chatid>0) then begin
    //TODO: Remove member here
    ToolWebOutLoggedString("{");
    ToolWebOutLoggedString(  "'objtype':'close-chat',");
    ToolWebOutLoggedString(  "'result':'success'");
    ToolWebOutLoggedString("}");
  end else begin
    ToolWebOutLoggedString("{");
    ToolWebOutLoggedString(  "'objtype':'postmsg',");
    ToolWebOutLoggedString(  "'result':'no-chat-found'");
    ToolWebOutLoggedString("}");
  end;

  return;
end;

procedure LiveChatPostMessage(string msg)
begin
  LongInt chatid;
  LongInt l;
  
  chatid = StringToLongint(GetSessionString("chat_id"));
  if (chatid>0) then begin
    ChatAddText(chatid,msg);
    l = ChatTextRowCnt(chatid);
    ToolWebOutLoggedString("{");
    ToolWebOutLoggedString(  "'objtype':'postmsg',");
    ToolWebOutLoggedString(  "'result':'success',");
    ToolWebOutLoggedString(  "'linenr':'" & l & "'");
    ToolWebOutLoggedString("}");
  end else begin
    ToolWebOutLoggedString("{");
    ToolWebOutLoggedString(  "'objtype':'postmsg',");
    ToolWebOutLoggedString(  "'result':'no-chat-found'");
    ToolWebOutLoggedString("}");
  end;

  return;
end;

function string 255 EscapeText(string tstr)
begin
  string 255 res,ch;
  integer i,l;
  
  l = len(tstr);
  for (i=0;i<l;i=i+1) begin
    ch = mid(tstr,i,1);
    if (ch=="'" or ch=="\\") then begin
      res = res & "\\" & ch;
    end else begin
      res = res & ch;
    end;
  end;
  EscapeText = res;
  return;
end;

procedure LiveChatGetMessages(Longint lastline)
begin
  LongInt chatid;
  LongInt l,i,cnt,m_lastline;
  string 255 user,txt,tstr;
  
  chatid = StringToLongint(GetSessionString("chat_id"));
  if (chatid>0) then begin
    //LogText(0,"fromline=" & lastline);
    l = ChatTextRowCnt(chatid);
/*    
      LogText(0,"--------");
    for (i=0;i<l;i=i+1) begin
      LogText(0,ChatGetTheText(chatid,i));
    end;
      LogText(0,"--------"); 
*/
    m_lastline = lastline;
    if (m_lastline<1) then begin //dont ever send line 0 and 1
      m_lastline = 1;
    end;
    if (l-1>m_lastline) then begin
      ToolWebOutLoggedString("{");
      ToolWebOutLoggedString(  "'objtype':'getmsgs',");
      ToolWebOutLoggedString(  "'result':'success',");
      ToolWebOutLoggedString(  "'lines': [");
      cnt = 0;
      for (i=(l-2-m_lastline);i>=0;i=i-1) begin
        cnt = cnt + 1;
        user = ChatGetUsrText(chatid,i);
        txt = ChatGetTheText(chatid,i);
        if (i>0) then begin
          tstr = ",";
        end else begin
          tstr = "";
        end;
        if (blank(user)) then begin
          user = "You"; //TODO: let user enter this on start screen
        end;
        if ((l-i-1)==1) then begin
          user = "";
        end;
        if (true or nonblank(user)) then begin
          LiveChatConcealUser(user);
          ToolWebOutLoggedString(  "{'user':'" & user & "',");
          ToolWebOutLoggedString(  "'text':'" & EscapeText(txt) & "'}" & tstr);
        end;
      end;
      ToolWebOutLoggedString(  "],");
      ToolWebOutLoggedString(  "'linecnt':'" & cnt & "',");
      ToolWebOutLoggedString(  "'lastlinenr':'" & l-1 & "'");
      ToolWebOutLoggedString("}");
    end else begin
      ToolWebOutLoggedString("{");
      ToolWebOutLoggedString(  "'objtype':'getmsgs',");
      ToolWebOutLoggedString(  "'result':'no-new-messages'");
      ToolWebOutLoggedString("}");
    end;
  end else begin
    ToolWebOutLoggedString("{");
    ToolWebOutLoggedString(  "'objtype':'getmsgs',");
    ToolWebOutLoggedString(  "'result':'no-chat-found'");
    ToolWebOutLoggedString("}");
  end;

  return;
end;

global
procedure LiveChatAction(string actiontype,string args)
begin
  string 255 margs,tstr;
  //format
  //  webAction.hal?action=chataction&type=invite&args=user,asd,df
  //  webAction.hal?action=chataction&type=postmessage&args=user,asd,df
  
  margs = args;
  
//  LogText(0,actiontype);
  switch (actiontype) begin
    case "createchat":
      LiveChatCreate;
    case "closechat":
      LiveChatClose;
    case "postmsg":
      LiveChatPostMessage(args);
    case "getmsgs":
      LiveChatGetMessages(StringToLongInt(args));
  end;
  return;
end;

global
procedure ShowLiveChatElement(record WebNGElementVc WEr)
begin
  WebOutTagOpen("<div id=""hwlivechat"">");
  WebOutStringFormatNL("<script type=""text/javascript"" src=""/livechat/WebNGLiveChat.js""></script>");
  WebOutTagClose("</div>");

  return;
end;