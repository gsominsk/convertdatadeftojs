//tools
external function string 255 removenextnode(var string);
external function string 255 FormatSimpleLink(string,boolean);
external procedure ToolWebOutContentTextFormat(record WebNGContentVc,Boolean);
external function string 10 CurrentWebLang();
external function string 255 GetLinkToStruct(LongInt,boolean);
external function string 255 FormatSimpleLink(string,boolean);
external function string 255 FormatLink(string,string,boolean,boolean);
external function boolean LoginState();
external function string 255 GetLoginPageStructLink();
//webng
external procedure RedirectToStartPage();
external procedure RedirectToLoginPage();
external procedure RedirectToRequestedPage();
external procedure RedirectToURL(string);
//pages
external procedure ShowWebAppPageStart(record WebNGPageVc,string);
external procedure ShowWebAppPageEnd(record WebNGPageVc);
//elements
external procedure ShowWebElementTemplate(string,integer);
//translate
external function string 255 ToolWebNGTranslateText(integer);
//references to old webshop code
external procedure OldCodeWebHBSDivCustProdNew(string,LongInt,longint);
external function Boolean ToolWebItemHasPict(var record WebHTMLVc,string,string);
external function Boolean ToolWebGetCustAndSettings(var record CUVc,var Boolean,var Boolean);
external function val QtyInBasket(String,Integer);
external function Boolean GetItemPriceDiscount3(string,val,var record INVc,string,val,val,val,val,val,string,string,string,string,
                                                var val,var string,var val,var string,var val,var string,Integer,var Boolean,Date,Time,
                                                string,Boolean,var Boolean,string,var string,var val,string,string,var string);
external function val GetStockQty(string,string,Date,Boolean);
external function string 255 GetUnitText(string,string);
external procedure GetBaseCurncy(Integer,var string);
external function Boolean GetPurchaseItem(string,string,var record PIVc);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure ToolWebOutWebHTMLText(record WebHTMLVc,Integer,string);
//std
external function string 255 ConvertXml(string);
external function LongInt CUServicePerLength(record CUServiceVc,record COCUServiceVc);

procedure OldCodeWebDisplayHTMLExtra(record WebHTMLVc WHr,string pwidth,string pheight)
begin
  string 255 tstr;
  
   if (nonblank(WHr.Code)) then begin
    if (nonblank(WHr.PicName)) then begin
      tstr = "<img src=""" & WHr.PicName & """";
      if (nonblank(pwidth)) then begin
        tstr = tstr & " width=""" & pwidth & """";
      end;
      if (nonblank(pheight)) then begin
        tstr = tstr & " height=""" & pheight & """";
      end;
      tstr = tstr & ">";
      WebOutStringFormat(tstr);
    end else begin
      WebOutStringFormatNL("");
      ToolWebOutWebHTMLText(WHr,0,"");
    end;
  end;
  return;
end;

procedure OldCodeWebHiddenField(string mname,string mvalue)
begin
  WebOutStringFormatNL("<input  type=""hidden"" name=""" & mname & """ value=""" & mvalue & """>");
  return;
end;

procedure OldCodeWebPushButton(string webtext,string webtype,string webname)
begin
  WebOutStringFormatNL("<input type=""" & webtype & """ name=""" & webname & """ value=""" & webtext & """ style=""font-family: Verdana; font-size: 8pt"">");
  return;
end;

procedure OldCodeWebHBSDivEditFieldBrowse(string webname,string webtype,string wvalue,string wwidth,Integer wsize,Integer wlen,Integer rwt)
begin
  string 20 bgcolr;
  string 20 mqty;

  mqty = wvalue;
  if (mqty=="") then begin
    mqty = "1";
  end;
  if (rwt==1) then begin
    bgcolr = "#CCCCFF";
  end;
  if (rwt!=1) then begin
    bgcolr = "#FFFFFF";
  end;
  WebOutTagOpen("<td bgcolor=""" & bgcolr & """ width=""" & wwidth & """ valign=""center"" align=""left"">");
  WebOutStringFormatNL("<input class=""s10"" type=""" & webtype & """ name=""" & webname & """  size=""" & wsize & """ MAXLENGTH=""" & wlen & """ value=""" & mqty & """>");
  WebOutTagClose("</td>");
  return;
end;

procedure OldCodeWebHBSDivTableHdr(string webname,string thealign,string webwidth)
begin
  string 20 localign;

  localign = thealign;
  if (blank(localign)) then begin
    localign = "left";
  end;
  WebOutTagOpen("<td width=""" & webwidth & """ align=""" & thealign & """ class=""heading3"">");
  WebOutStringFormat(webname);
  WebOutTagClose("</td>");
  return;
end;

procedure OldCodeWebHBSDivListTable(Integer wcols,Integer wwidth,string bsize)
begin
  string 20 locwidth;
  string 5 thebsize;
  string 255 tstr;
  
  thebsize = bsize;
  if (blank(thebsize)) then begin
    thebsize = "1";
  end;
  locwidth = "100%";
  if (wwidth>0) then begin
    locwidth = wwidth;
  end;
  tstr = "<table BORDER=""" & thebsize & """ cellpadding=""0"" cellspacing=""0"" bordercolorlight=black ";
  tstr = tstr & "bordercolordark=black bordercolor=black COLS=""" & wcols & """ WIDTH=""" & locwidth & """ align=left>";
  WebOutTagOpen(tstr);
  return;
end;

function string 200 OldCodeGetTabString()
begin
  string 200 tabstr;
  
  tabstr = "&nbsp;&nbsp;&nbsp;";
  OldCodeGetTabString = tabstr;
  return;
end;

updating procedure OldCodeWebStoreTheItem2(LongInt baskno,Boolean salesord,string itemcode,string ordqty)
begin
  record ShopBaskVc ShopBaskr;
  record ShopBaskVc oldShopBaskr;
  record CUServiceVc CUServicer;
  record COCUServiceVc COCUServicer;
  record CUServiceHistVc CUServiceHistr;
  record INVc INr;
  record PIVc PIr;
  record CUVc CUr;
  Boolean found,delf;
  Integer error;
  string 30 theitem;
  string 20 curitemno;
  string 100 curitemname,vecode;
  string 20 salesacc,vatcode,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,tax2prc;
  Boolean calcprice,dummyf;
  string 10 basecur1;
  Time blankt;
  
  theitem = itemcode;//WebGetArg("itemcode");
  vecode = "";
  if (salesord) then begin
    CUr.Code = CurrentCust;
    if (ReadFirstMain(CUr,1,true)==false) then begin
      CUr.Name = "";
    end;
    ShopBaskr.CUCode = CUr.Code;
    ShopBaskr.ItemCode = theitem;
    ShopBaskr.PFormCode = "";//WebGetArg("group");
    ShopBaskr.BaskNo = baskno;
    ShopBaskr.DestinationNr = -1;
    if (ReadFirstKey("CUItmBask",ShopBaskr,5,true)) then begin
      found = true;
      RecordCopy(oldShopBaskr,ShopBaskr);
    end else begin
      found = false;
      RecordNew(ShopBaskr);
    end;  
    curitemno = theitem;
    qty = StringToVal(ordqty,M4Qty);//WebGetArg("ord_qty"),M4Qty);
    if (qty<=0) then begin
      qty = 0;
    end;
    if (GetItemPriceDiscount3(curitemno,qty,INr,CUr.CurncyCode,0,0,0,0,0,
            CUr.LangCode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
            price,curitemname,reb,vatcode,cost,salesacc,
            CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
      INr.Name = "";
    end;
    ShopBaskr.CUCode = CUr.Code;
  end else begin
    GetBaseCurncy(1,basecur1);
    reb = BlankVal;
    price = INr.InPrice;
    ShopBaskr.CUCode = CurrentUser;
    ShopBaskr.ItemCode = theitem;
    ShopBaskr.PFormCode = "";//WebGetArg("group");
    ShopBaskr.BaskNo = baskno;
    ShopBaskr.DestinationNr = -1;
    if (ReadFirstKey("CUItmBask",ShopBaskr,5,true)) then begin
      found = true;
      RecordCopy(oldShopBaskr,ShopBaskr);
    end else begin
      found = false;
      RecordNew(ShopBaskr);
    end;  
    curitemno = theitem;
    qty = StringToVal(ordqty,M4Qty);//WebGetArg("ord_qty"),M4Qty);
    if (qty<=0) then begin
      qty = 0;
    end;
    vecode = ShopBaskr.VECode;
    if (GetPurchaseItem(theitem,"",PIr)) then begin
      if (blank(vecode)) then begin
        vecode = PIr.VECode; // Should have it's own field in ShopBaskVc
      end;
      price = PIr.PurPrice;
      if (nonblank(PIr.CurncyCode)) then begin
        if (PIr.CurncyCode!=basecur1) then begin
          price = MulWithRateToBase1(PIr.CurncyCode,CurrentDate,price,DefaultCurRoundOff);
        end;
      end;
    end;
    ShopBaskr.CUCode = CurrentUser;
  end;
  ShopBaskr.ItemCode = theitem;
  ShopBaskr.Qty = qty;
  ShopBaskr.TransDate = CurrentDate;
  ShopBaskr.TransTime = CurrentTime;
  ShopBaskr.PFormCode = "";
  ShopBaskr.Destination = kShopBaskDestinationOrder;
  ShopBaskr.Discount = reb;
  ShopBaskr.Owner = kShopBaskOwnerCustomer;
  ShopBaskr.Price = price;
  ShopBaskr.BaskNo = baskno;
  ShopBaskr.VECode = vecode;
  if (ShopBaskr.CUServiceHistNr>0) then begin
    CUServiceHistr.SerNr = ShopBaskr.CUServiceHistNr;
    if (ReadFirstMain(CUServiceHistr,1,true)) then begin
      CUServicer.SerNr = CUServiceHistr.CUServiceNr;
      if (ReadFirstMain(CUServicer,1,true)) then begin
        COCUServicer.SerNr = CUServicer.COCUServiceNr;
        ReadFirstMain(COCUServicer,1,true);
        
// Not neccesary with this if I think... but..
        if (nonblankdate(ShopBaskr.PeriodStartDate)) then begin
          ShopBaskr.CUServiceValidUntil = AddMonth(ShopBaskr.PeriodStartDate,(ShopBaskr.Qty-1)*CUServicePerLength(CUServicer,COCUServicer));
          ShopBaskr.ExtraCom = OldCodeGetTabString & ToolWebNGTranslateText(20150) & " " & ShopBaskr.CUServiceValidUntil;
        end else begin
          if (nonblankdate(CUServiceHistr.UntilDate)) then begin
            ShopBaskr.CUServiceValidUntil = AddMonth(CUServiceHistr.UntilDate,(ShopBaskr.Qty-1)*CUServicePerLength(CUServicer,COCUServicer));
            ShopBaskr.ExtraCom = OldCodeGetTabString & ToolWebNGTranslateText(20150) & " " & ShopBaskr.CUServiceValidUntil; // I think...
          end;
        end;
      end;
    end;
  end;
  delf = false;
  if (ShopBaskr.Qty==0) then begin delf = true; end;
  if (found) then begin
    if (delf==false) then begin
      error = RecordUpdate(oldShopBaskr,ShopBaskr,true);
    end else begin
      RecordDelete(oldShopBaskr);
    end;
  end else begin
    if (delf==false) then begin
      found = RecordInsert(ShopBaskr,false);
    end;
  end;
  return;
end;

updating procedure OldCodeWebStoreTheItem(string itemcode,string ordqty)
begin
  OldCodeWebStoreTheItem2(-1,true,itemcode,ordqty);
  return;
end;

global
updating procedure OldCodeWebHBSDivStoreItem(string itemcode,string ordqty,string backpage)
begin
  record WebNGShopBlock WSb;
  string 255 newurl;
  boolean handled;

  handled = false;
  if (LoginState) then begin
    OldCodeWebStoreTheItem(itemcode,ordqty);
    if (nonblank(backpage)) then begin
      RedirectToURL(FormatSimpleLink(backpage,true));
      handled = true;
    end;
  end;

  if (handled==false) then begin
    BlockLoad(WSb);
    newurl = GetLinkToStruct(WSb.NodeToShopBasket,true);
    if (nonblank(newurl)) then begin
      RedirectToURL(FormatSimpleLink(newurl,true));
    end else begin
      RedirectToStartPage;
    end;
  end;
  return;
end;

procedure OldCodeWebHBSDivTableData(string webname,string weblink,string thealign,string thesize,string target,Integer rwt)
begin
  string 255 llink,tstr;
  string 20 localign;

  localign = thealign;
  if (blank(localign)) then begin
    localign = "left";
  end;

  tstr = "<td size=""2"" align=""" & localign & """ class=""listsMenuLink"" ";
  if (nonblank(thesize)) then begin
    tstr = tstr & "width=""" & thesize & """";
  end;
  tstr = tstr & ">";
  WebOutTagOpen(tstr);
  if (nonblank(weblink)) then begin
    tstr = "<a";
    tstr = tstr & " href=""";
    WebOutStringFormat(tstr);
/*    llink = ToolWebBuildLink(weblink,webarg);
    if (ToolWebHBSUseLink) then begin
      WebOutLink(llink);
    end else begin
      WebOutString(llink);
    end;*/
    WebOutStringFormat(FormatSimpleLink(weblink,true));
    WebOutStringFormat(""">");
  end;
  
  if (webname=="READ") then begin
    WebOutStringFormat("<img src=""read.jpg"" border=""0"" alt="""" />");
    goto L55;
  end;
  if (webname=="UNREAD") then begin
    WebOutStringFormat("<img src=""unread.jpg"" border=""0"" alt="""" />");
    goto L55;
  end;
  
  if (nonblank(webname)) then begin
    WebOutStringFormat(webname);
  end else begin
    WebOutStringFormat("&nbsp;");
  end;

L55:;
  if (nonblank(weblink)) then begin
    WebOutStringFormatNL("</a>");
  end;
  WebOutTagClose("</td>");
  return;
end;

global
procedure OldCodeWebHBSDivItemViewNew(string itcode,string itemcode,longint structsernr)
begin
  record INVc INr;
  record CUVc CUr;
  record WebHTMLVc WHr;
  string 20 curitemno;
  string 100 curitemname;
  string 20 salesacc,vatcode,qtystr,tax2code,taxtemplatecode;
  val price,reb,cost,qty,instock,ordqty,tax2prc;
  Boolean calcprice;
  Boolean showstocklevel;
  Boolean showprices,dummyf;
  Integer rwt;
  Integer oldcomp,newcomp;
  Boolean res;
  string 255 langcode;
  string 255 newurl,tstr;
  record WebNGShopBlock WSb;
  Time blankt;
  
  langcode = CurrentWebLang;  
  newurl = GetLinkToStruct(structsernr,true);
/*  oldcomp = CurrentCompany;
  newcomp = StringToInt(WebGetArg("company"));
  if ((newcomp>0) and (oldcomp!=newcomp)) then begin
    res = SetCompany(newcomp,false);
  end; */
  rwt = 0;
  showstocklevel = false;
  showprices = true;
  curitemno = itemcode;//WebGetArg("itemcode");
  if (ToolWebGetCustAndSettings(CUr,showstocklevel,showprices)) then begin end;
  qty = 1;
  if (GetItemPriceDiscount3(curitemno,qty,INr,CUr.CurncyCode,0,0,0,0,0,
                  langcode,CUr.CustCat,CUr.PLCode,CUr.RebCode,
                  price,curitemname,reb,vatcode,cost,salesacc,
                  CUr.ExportFlag,calcprice,CurrentDate,blankt,CUr.Code,true,dummyf,CUr.PayDeal,tax2code,tax2prc,"","",taxtemplatecode)==false) then begin     
      INr.Name = "";
  end;
  
  BlockLoad(WSb);
  if (nonblank(WSb.ItemOrderTemplate)) then begin
    ShowWebElementTemplate(WSb.ItemOrderTemplate,0); //before
  end;

  if (showprices==false) then begin
    price = BlankVal;
  end;
  instock = GetStockQty(INr.Code,"",CurrentDate,false);
  qty = QtyInBasket(curitemno,0);
  qtystr = ValToString(qty,M4UVal," ",".",0);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  WebOutTagOpen("<table width=""100%"">");
  WebOutTagOpen("<tr>");
  WebOutTagOpen("<td>");
  if (ToolWebItemHasPict(WHr,curitemno,"BP")==true) then begin
    OldCodeWebDisplayHTMLExtra(WHr,"","");
  end else begin
    OldCodeWebDisplayHTMLExtra(WHr,"","");
  end;
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagOpen("<tr>")
  WebOutTagOpen("<td>");
  if (WebLoginStatus==3) then begin
    tstr = "<form name=""HansaForm"" method=""POST"" action=""";
    tstr = tstr & FormatLink("/WebUpdatingAction.hal","action=storeitem&itcode=" & ConvertXml(itcode) & "&itemcode=" & ConvertXml(curitemno),true,true);
    tstr = tstr & """>";
    WebOutTagOpen(tstr);
  end;
  if (showstocklevel) then begin
    OldCodeWebHBSDivListTable(7,0,"0");
    WebOutTagOpen("<tr>");
    OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20096),"left","12%");
    OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20097),"center","10%");
    OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20098),"left","33%");
  end else begin
    OldCodeWebHBSDivListTable(6,0,"0");
    WebOutTagOpen("<tr>");
    OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20096),"left","15%");
    OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20098),"left","38%");
  end;
  OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20099),"right","15%");
  OldCodeWebHBSDivTableHdr("","right","2%");
  OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20100),"left","13%");
  OldCodeWebHBSDivTableHdr(ToolWebNGTranslateText(20091),"left","17%");
  WebOutTagClose("</tr>");

  WebOutTagOpen("<tr height=32>");
  tstr = GetSessionString("requesturl2");
  if (blank(tstr)) then begin
    tstr = GetSessionString("requesturl");
  end else begin
    PutSessionString("requesturl2","");
  end;
  OldCodeWebHiddenField("backpage",tstr);//WebGetArg("backpage")); //TODO
  if (showstocklevel) then begin
    OldCodeWebHBSDivTableData(curitemno,"","left","12%","",rwt);
    OldCodeWebHBSDivTableData(instock,"","center","10%","",rwt);
    OldCodeWebHBSDivTableData(curitemname,"","left","33%","",rwt);
  end else begin
    OldCodeWebHBSDivTableData(curitemno,"","left","15%","",rwt);
    OldCodeWebHBSDivTableData(curitemname,"","left","38%","",rwt);
  end;
  OldCodeWebHBSDivTableData(price,"","right","15%","",rwt);
  OldCodeWebHBSDivTableData("","","right","2%","",rwt);
  OldCodeWebHBSDivEditFieldBrowse("ord_qty","text",qtystr,"7%",5,7,rwt);
  OldCodeWebHBSDivTableData(GetUnitText(INr.Unittext, langcode),"","left","8%","",rwt); //WNS
  qtystr = ValToString(qty,M4UVal,"","",rwt);
  if (qtystr=="0") then begin
    qtystr = "";
  end;
  WebOutTagOpen("<td bordercolor=white width=""15%"" align=""left"" bgcolor=""white"">");

  if (WebLoginStatus==3) then begin
    if (nonblank(CurrentCust)) then begin
      if (qtystr=="") then begin
        OldCodeWebPushButton("Add to basket","submit","b1");
      end else begin
        OldCodeWebPushButton("Update Qty","submit","b1");
      end;
    end else begin
      OldCodeWebHBSDivTableData(ToolWebNGTranslateText(20049),newurl,"left","8%","",rwt); //TODO
    end;
  end else begin
    PutSessionString("requesturl2",GetSessionString("requesturl"));
    PutSessionString("requesturl",WebGetArg("path"));
    OldCodeWebHBSDivTableData(ToolWebNGTranslateText(20049),GetLoginPageStructLink,"left","8%","",rwt); //TODO
  end;

  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  if (WebLoginStatus==3) then begin
    WebOutTagClose("</form>");
  end;
  WebOutTagClose("</table>");
  WebOutTagClose("</td>");
  WebOutTagClose("</tr>");
  WebOutTagClose("</table>");

  if (nonblank(WSb.ItemOrderTemplate)) then begin
    ShowWebElementTemplate(WSb.ItemOrderTemplate,2); //after
  end;
/*  if (res) then begin
    ResetCompany(oldcomp);
  end;*/
  return;
end;

global
procedure ShopItemOrderApp(record WebNGStructVc WSr,string path)
begin
  record WebNGContentVc WCr;
  record WebNGPageVc WPr;
  string 255 node,mpath;
  string 255 itcode,sernr,itemcode;

  
  WPr.Code = WSr.WebPage;
  if (nonblank(WPr.Code)) then begin
    if (ReadFirstMain(WPr,1,true)) then begin end;
  end;
  
  ShowWebAppPageStart(WPr,"");

  mpath = path;
  node = removenextnode(mpath);
  //the mechanism allows:
  //  /groups/AUDIO/items/1234/
  //  /items/1234/
  //  /items/1234/groups/AUDIO/
  if (node=="groups") then begin
    itcode = removenextnode(mpath);
    node = removenextnode(mpath);
  end;
  if (node=="items") then begin
    itemcode = removenextnode(mpath);
    node = removenextnode(mpath);
  end;
  if (node=="groups") then begin
    itcode = removenextnode(mpath);
    node = removenextnode(mpath);
  end;
  
  if (blank(node) and blank(itcode) and blank(itemcode)) then begin
    LogText(0,"Warning: Using order node like browse node");
    PutSessionString("requesturl",WebGetArg("path"));
    OldCodeWebHBSDivCustProdNew("","",WSr.SerNr);
  end else begin
    if (nonblank(itcode) and blank(itemcode)) then begin
      LogText(0,"Warning: Using order node like browse node");
      PutSessionString("requesturl",WebGetArg("path"));
      OldCodeWebHBSDivCustProdNew(itcode,sernr,WSr.SerNr);
    end else begin
      OldCodeWebHBSDivItemViewNew(itcode,itemcode,WSr.SerNr);
    end;
  end;
  
  ShowWebAppPageEnd(WPr);
  return;
end;