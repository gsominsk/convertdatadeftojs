
function boolean CustomerInEIncData(string CustCode)
begin
  record EInvCUVc EInvCUVr;
  boolean res;
  
  res = false;
  
  EInvCUVr.CustCode = CustCode;
  if (ReadFirstMain(EInvCUVr,1,true)) then begin
    res = true;
  end;
  
  CustomerInEIncData = res;
  return;
end;

updating procedure CreateEInvCustData(record CUVc CUp,record RcVc RepSpec)
begin
  record EInvCUVc EInvCUVr;
  integer SendEinvoice,SendEmail,SendPaper;
  
  SendEinvoice = 0;
  SendEmail = 1;
  SendPaper = 2;
  
  RecordNew(EInvCUVr);
  EInvCUVr.CustCode = CUp.Code;
  EInvCUVr.Name = CUp.Name;
  EInvCUVr.Postage = 0;
  
  switch (RepSpec.flags[1]) begin
    case 0:  //SendEinvoice
      EInvCUVr.RcvInvoicePref = kEInvoiceRcvPreferenceElectronic;
    case 1:  //SendEmail
      EInvCUVr.RcvInvoicePref = kEInvoiceRcvPreferenceElectronic;
      EInvCUVr.AttachPDFtoElectronicInvoice = 1;
      EInvCUVr.eMail = CUp.eMail;
    case 2:   //SendPaper
      EInvCUVr.RcvInvoicePref = kEInvoiceRcvPreferencePaper;
      EInvCUVr.AttachPDFtoElectronicInvoice = 1;
    case 3:   //email
      EInvCUVr.RcvInvoicePref = kEInvoiceRcvPreferenceEMail;
      EInvCUVr.AttachPDFtoElectronicInvoice = 1;
  end;
  
  if (HasLocalization("FIN,NOR,SWE")) then begin
    EInvCUVr.EInvoiceAccount = CUp.ANACode;
    if (HasLocalization("FIN")) then begin
      if (blank(EInvCUVr.EInvoiceAccount) and nonblank(CUp.VATNr)) then begin
        EInvCUVr.EInvoiceAccount = "0037" & StripNonDigits(CUp.VATNr);
      end;
    end;
  end;
  
  if (RecordStore(EInvCUVr,true)) then begin 
  end;
  return;
end;

//not used, data stored in CUVc
global
updating procedure CreateEInvCustDataMn(record RcVc RepSpec)
BEGIN
  record CUVc CUr;
  Boolean TrHs,testf;
  string 255 frcc,tocc;

  frcc = FirstInRange(RepSpec.f1,20);
  tocc = LastInRange(RepSpec.f1,20);  

  CUr.Code = frcc;
  CUr.CUType = 1;
  TrHs = true;
  while (LoopKey("ActCode",CUr,2,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(tocc)) then begin
        if (CUr.Code>tocc) then begin
          TrHs = false;
        end;
        if (CUr.CUType!=1) then begin 
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f2)) then begin
        if (SetInSet(RepSpec.f2,CUr.Classification)==false) then begin testf = false; end;
      end;        
      if (testf) then begin 
        if (nonblank(RepSpec.f3) and (RepSpec.f3!=CUr.CustCat)) then begin testf = false; end;
      end;
      if (testf) then begin 
        if (CUr.ExportFlag!=0) then begin testf = false; end;
      end; 
      if (testf) then begin 
        if (CUr.blockedFlag!=0) then begin testf = false; end;
      end;           
      if (testf) then begin 
        if (CustomerInEIncData(CUr.Code)==false) then begin 
          CreateEInvCustData(CUr,RepSpec);
        end;
      end;
    end;
  end;
LCreateEInvCustDataMn:;
  RETURN;
END;
