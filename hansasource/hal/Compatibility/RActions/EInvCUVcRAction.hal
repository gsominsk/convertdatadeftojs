global
function LongInt EInvCUVcRecordCheck(var record EInvCUVc EInvCUr,record EInvCUVc EInvCU2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record CompaniesBlock Cb;
  row CompaniesBlock Cbrw;
  integer i,rwcnt;

  res = 0;
  if (EInvCUr.RcvInvoicePref==kEInvoiceRcvPreferenceInternal) then begin
    if (blank(EInvCUr.RcvToCompanyCode)) then begin
      RecordCheckError(1058,"",-1,"RcvToCompanyCode");
      res = -1;
      goto LEInvCUVcRecordCheck;
    end;

    res = -1;
    BlockLoad(Cb);
    rwcnt = MatRowCnt(Cb);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(Cb,i,Cbrw);
      if (nonblank(Cbrw.TCPIP)) then begin
        RecordCheckError(1008,"",-1,"RcvToCompanyCode");
        res = -1;
        goto LEInvCUVcRecordCheck;
      end;
      if (Cbrw.CompCode==EInvCUr.RcvToCompanyCode) then begin
        res = 0;
        i = rwcnt;
      end;
    end;
    if (res!=0) then begin
      RecordCheckError(1120,EInvCUr.RcvToCompanyCode,-1,"RcvToCompanyCode");
      res = -1;
      goto LEInvCUVcRecordCheck;
    end;
  end;
  
LEInvCUVcRecordCheck:
  EInvCUVcRecordCheck = res;
  return;
end;

global
function LongInt EInvCUVcRecordSave(var record EInvCUVc EInvCUr,record EInvCUVc EInvCU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  if (EInvCUr.RcvInvoicePref!=kEInvoiceRcvPreferenceInternal) then begin
    EInvCUr.RcvToCompanyCode = "";
  end;
  
  EInvCUVcRecordSave = res;
  return;
end;

global
function LongInt EInvCUVcRecordUpdate(var record EInvCUVc EInvCUr,record EInvCUVc EInvCU2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  if (EInvCUr.RcvInvoicePref!=kEInvoiceRcvPreferenceInternal) then begin
    EInvCUr.RcvToCompanyCode = "";
  end;
  
  EInvCUVcRecordUpdate = res;
  return;
end;
