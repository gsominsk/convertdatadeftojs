external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);

procedure PrintAgreementInfo(record AgreementVc Agreementr,var Boolean firstf)
begin
  if (firstf) then begin
    StartFormat(15);
    OutString(0,"DblAgreementVc",Agreementr.SerNr,false);
    OutDate(110,0,Agreementr.startDate,false);
    OutDate(180,0,Agreementr.endDate,false);
    OutString(4,0,Agreementr.AgreeType,false);
    OutString(1,0,Agreementr.CurncyCode,true);
    EndFormat;
    StartFormat(15);
    OutString(30,0,Agreementr.CustCode,false);
    OutString(140,0,Agreementr.Addr0,false);
    OutString(320,0,Agreementr.ClientContact,false);
    EndFormat;
    Gray_Divider(0,1);
    firstf = false;
  end;
  return;
end;

procedure PrintReservationHeader(Integer donef)
begin
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  if (donef==0) then begin
    OutString(0,0,USetStr(11378),false);
  end else begin
    OutString(0,0,USetStr(11379),false);
  end;
  EndFormat;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(11387),false);
  OutString(6,0,USetStr(11390),true);
  OutString(7,0,USetStr(11388),false);
  OutString(8,0,USetStr(11389),false);
  OutString(350,0,USetStr(11384),true);
  OutString(360,0,USetStr(11382),false);
  OutString(430,0,USetStr(11383),false);
//  OutString(1,0,USetStr(11391),true);
  EndFormat;
  Gray_Divider(0,1);
  return;
end;

procedure PrintReservations(LongInt sernr,Integer donef,string site,record AgreementVc Agreementr,LongInt therentres,var Boolean firstf)
begin
  record RentResVc RentResr;
  Boolean foundf2,testf2;
  string 200 ckey;
  Boolean resfirstf;

  resfirstf = true;
  ResetLoop(RentResr);
  foundf2 = true;
  ckey = "AgreementStart:" & sernr;
  RentResr.AgreementNr = sernr;
  RentResr.Done = donef;
  while(LoopKey(ckey,RentResr,2,foundf2)) begin
    testf2 = true;
    if (RentResr.AgreementNr<>sernr) then begin
      foundf2 = false;
    end;
    if (foundf2==false) then begin
      testf2 = false;
    end;
    if (RentResr.Done!=donef) then begin
      testf2 = false;
    end;
    if (nonblank(site)) then begin
      if (site!=RentResr.Site) then begin
        testf2 = false;
      end;
    end;
    if (therentres>0) then begin
      if (RentResr.SerNr!=therentres) then begin
        testf2 = false;
      end;
    end;
    if (testf2) then begin
      PrintAgreementInfo(Agreementr,firstf);
      if (resfirstf) then begin
        PrintReservationHeader(donef);
        resfirstf = false;
      end;
      StartFormat(15);
      OutStringID(0,"DblRentResVc",RentResr.Code,false,RentResr.SerNr);
      if (donef==0) then begin
        if (RentResr.RentResDel>0) then begin
          OutVal(6,0,RentResr.RentResDel-RentResr.RentResRet,M4UVal,true);
        end else begin
          OutVal(6,0,RentResr.RentQuant,M4UVal,true);
        end;
      end else begin
        OutVal(6,0,RentResr.RentQuant,M4UVal,true);
      end;
      OutString(7,0,RentResr.SerialNr,false);
      OutString(8,0,RentResr.Name,false);
      OutString(350,0,RentResr.AgreeType,true);
      OutString(360,0,RentResr.TransDate,false);
      OutString(430,0,RentResr.EndDate,false);
//      OutString(1,0,RentResr.Sum,true);
      EndFormat;
    end;
  end;
  if (resfirstf==false) then begin
    Black_Divider(0,1);
  end;
  return;
end;

procedure PrintCharges(LongInt sernr,Boolean invoiced,string site,record AgreementVc Agreementr,LongInt therentres,var Boolean firstf)
begin
  record RentChrgVc RentChrgr;
  Boolean foundf2,testf2,printedf;
  record SysFormatBlock SysFormatRec;
  val totsum;

  BlockLoad(SysFormatRec);
  printedf = false;
  foundf2 = true;
  totsum = 0;
  RentChrgr.AgreementNr = sernr;
  if (invoiced==false) then begin
    RentChrgr.InvNr = -1;
  end else begin
    RentChrgr.InvNr = 0;
  end;
  while(LoopKey("AgrInv",RentChrgr,2,foundf2)) begin
    testf2 = true;
    if (RentChrgr.AgreementNr<>sernr) then begin
      foundf2 = false;
    end;
    if (invoiced==false) then begin
      if (RentChrgr.InvNr>-1) then begin
        foundf2 = false;
      end;
    end else begin
      if (RentChrgr.InvNr<0) then begin
        foundf2 = false;
      end;
    end;
    if (foundf2==false) then begin
      testf2 = false;
    end;
    if (nonblank(site)) then begin
      if (site!=RentChrgr.Site) then begin
        testf2 = false;
      end;
    end;
    if (therentres>0) then begin
      if (RentChrgr.FileName>-1) then begin
        testf2 = false;
      end;
      if (RentChrgr.TransNr!=therentres) then begin
        testf2 = false;
      end;
    end;
    if (testf2) then begin
      PrintAgreementInfo(Agreementr,firstf);
      if (printedf==false) then begin
        StartFormat(15);
        EndFormat;
        StartFormat(15);
        if (invoiced==false) then begin
          OutString(0,0,USetStr(11393),false);
        end else begin
          OutString(0,0,USetStr(11392),false);
        end;
        EndFormat;
        Gray_Divider(0,1);
        StartFormat(15);
        OutString(0,0,USetStr(11387),false);
        OutString(7,0,USetStr(11390),true);
        OutString(9,0,USetStr(11389),false);
        OutString(5,0,USetStr(11398),false);
        OutString(2,0,USetStr(11395),true);
        OutString(3,0,USetStr(11396),true);
        OutString(1,0,USetStr(11397),true);
        EndFormat;
        Gray_Divider(0,1);
        printedf = true;
      end;
      StartFormat(15);
      OutStringID(0,"DblRentChrgVc",RentChrgr.Item,false,RentChrgr.SerNr);
      if (RentChrgr.ItemQuant>1) then begin
        OutString(7,0,ValToString(RentChrgr.Quant,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,0) & " * " & ValToString(RentChrgr.ItemQuant,M4UVal,SysFormatRec.thousSep,SysFormatRec.decimalPt,0),true);
      end else begin
        OutVal(7,0,RentChrgr.Quant,M4UVal,true);
      end;
      if (nonblank(RentChrgr.Item)) then begin
        OutString(9,0,Left(RentChrgr.Spec,30),false);
      end else begin
        if (nonblank(RentChrgr.Spec)) then begin
          OutStringID(9,"DblRentChrgVc",Left(RentChrgr.Spec,30),false,RentChrgr.SerNr);
        end else begin
          OutStringID(9,"DblRentChrgVc","(" & USetStr(9978) & ")",false,RentChrgr.SerNr);
        end;
      end;
      if (invoiced==false) then begin
        if (RentChrgr.InvTime==0) then begin
          OutString(5,0,USetStr(11399),false);
        end else begin
          OutString(5,0,USetStr(11400),false);
        end;
      end else begin
        OutStringID(5,"DblIVVc",RentChrgr.InvNr,false,RentChrgr.InvNr);
      end;
      OutVal(2,0,RentChrgr.Price,M4Val,true);
      OutVal(3,0,RentChrgr.vRebate,M41Val,true);
      OutVal(1,0,RentChrgr.Sum,M4Val,true);
      EndFormat;
      totsum = totsum + RentChrgr.Sum;
      if (RentChrgr.PONumber>0) then begin
        StartFormat(15);
        OutString(9,0,USetStr(6782),false);
        OutLongInt(250,"DblPOVc",RentChrgr.PONumber,true);
        OutLongInt(260,"DblPU",RentChrgr.GRNumber,false);
        EndFormat;
        Gray_Divider(9,1);
      end;
    end;
  end;
  if (printedf) then begin
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(3,0,USetStr(11595),true);
    OutVal(1,0,totsum,M4Val,true);
    EndFormat;
    Black_Divider(0,1);
  end;
  return;
end;

global
procedure PrintAgreeInvRn(record RcVc RepSpec)
begin
  record AgreementVc Agreementr;
  record OffHireVc OffHirer;
  record DispatchVc Dispatchr;
  row OffHireVc OffHirerw;
  row DispatchVc Dispatchrw;
  LongInt frag,toag;
  Integer rw,rwcnt,i;
  string 255 tstr;
  Boolean foundf,testf;
  Boolean foundf2,testf2;
  Boolean printedf,firstf;
  string 20 frcu,tocu;
  LongInt therentres;
  string 20 status;

  rw = 1;
  frag = FirstInRange(RepSpec.f1,20);
  toag = LastInRange(RepSpec.f1,20);
  frcu = FirstInRange(RepSpec.f2,20);
  tocu = LastInRange(RepSpec.f2,20);
  therentres = -1;
  if (nonblank(RepSpec.f6)) then begin
    therentres = RepSpec.f6;
  end;
  SetRepCol(2,380);
  SetRepCol(3,410);
  SetRepCol(4,270);
  SetRepCol(5,280);
  SetRepCol(6,90);
  SetRepCol(7,120);
  SetRepCol(8,170);
  SetRepCol(9,130);
  StartFormat(15);
  OutString(0,0,USetStr(11401),false);
  EndFormat;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(11381),false);
  OutString(30,0,USetStr(11385),false);
  OutString(110,0,USetStr(11382),false);
  OutString(180,0,USetStr(11383),false);
  OutString(4,0,USetStr(11384),false);
  EndFormat;
  Gray_Divider(0,1);
  foundf = true;
  Agreementr.SerNr = frag;
  while (LoopMain(Agreementr,1,foundf)) begin
    testf = true;
    if (RepSpec.f1<>"") then begin
      if (Agreementr.SerNr>toag) then begin
       foundf = false;
      end;
    end;
    if (foundf==false) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f2)) then begin
      if ((Agreementr.CustCode<frcu) or (Agreementr.CustCode>tocu)) then begin
        testf = false;
      end;
    end;
    if (testf) then begin 
      testf = ContactInGroupClass(Agreementr.CustCode,RepSpec.f5,RepSpec.f4,"CUST","","");
    end;
    if (nonblank(RepSpec.ObjStr)) then begin
      if (SetInSet(RepSpec.ObjStr,Agreementr.Objects)==false) then begin
        testf = false;
      end;
    end;
    if (nonblank(RepSpec.AccStr)) then begin
      if (Agreementr.SalesMan!=RepSpec.AccStr) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      firstf = true;
      if (RepSpec.flags[5]<>0) then begin
        PrintReservations(Agreementr.SerNr,0,RepSpec.LastAcc,Agreementr,therentres,firstf);
      end;
      if (RepSpec.flags[2]<>0) then begin
        PrintCharges(Agreementr.SerNr,false,RepSpec.LastAcc,Agreementr,therentres,firstf);
      end;
      if (RepSpec.flags[1]<>0) then begin
        PrintCharges(Agreementr.SerNr,true,RepSpec.LastAcc,Agreementr,therentres,firstf);
      end;
      if (RepSpec.flags[4]<>0) then begin
        printedf = false;
        foundf2 = true;
        Dispatchr.AgreementNr = Agreementr.SerNr;
        while(LoopKey("AgreementNr",Dispatchr,1,foundf2)) begin
          testf2 = true;
          if (Dispatchr.AgreementNr<>Agreementr.SerNr) then begin
            foundf2 = false;
          end;
          if (foundf2==false) then begin
            testf2 = false;
          end;
          if (Dispatchr.OKFlag==0) then begin
//            testf2 = false;
          end;
          if (nonblank(RepSpec.LastAcc)) then begin
            if (RepSpec.LastAcc!=Dispatchr.Site) then begin
              testf2 = false;
            end;
          end;
          if (therentres>0) then begin
            if (testf2) then begin
              testf2 = false;
              rwcnt = MatRowCnt(Dispatchr);
              for (i=0;i<rwcnt;i=i+1) begin
                MatRowGet(Dispatchr,i,Dispatchrw);
                if (Dispatchrw.RentResSerNo==therentres) then begin
                  testf2 = true;
                  i = rwcnt;
                end;
              end;
            end;
          end;
          if (testf2) then begin
            PrintAgreementInfo(Agreementr,firstf);
            if (printedf==false) then begin
              StartFormat(15);
              EndFormat;
              StartFormat(15);
              EndFormat;
              StartFormat(15);
              OutString(0,0,USetStr(11403),false);
              OutString(70,0,USetStr(11405),false);
              OutString(140,0,USetStr(11406),false);
//              OutString(2,0,USetStr(11407),false);
              OutString(2,0,USetStr(11331),false);
              EndFormat;
              Gray_Divider(0,1);
              printedf = true;
            end;
            StartFormat(15);
            OutString(0,"DblDispatchVc",Dispatchr.SerNr,false);
            OutString(70,0,Dispatchr.TransDate,false);
            OutString(140,0,Dispatchr.Addr0,false);
//            OutString(2,0,Dispatchr.ClientContact,false);
            if (Dispatchr.OKFlag==0) then begin
              Status = USetStr(11374);
            end;
            if (Dispatchr.OKFlag==2) then begin
              Status = USetStr(11376);
            end;
            if (Dispatchr.OKFlag==1) then begin
              Status = USetStr(11375);
            end;
            OutString(2,0,Status,false);
            EndFormat;
          end;
        end;
        if (printedf) then begin
          Black_Divider(0,1);
        end;
        printedf = false;
        foundf2 = true;
        OffHirer.AgreementNr = Agreementr.SerNr;
        while(LoopKey("AgreementNr",OffHirer,1,foundf2)) begin
          testf2 = true;
          if (OffHirer.AgreementNr<>Agreementr.SerNr) then begin
            foundf2 = false;
          end;
          if (foundf2==false) then begin
            testf2 = false;
          end;
          if (OffHirer.OKFlag==0) then begin
//            testf2 = false;
          end;
          if (nonblank(RepSpec.LastAcc)) then begin
            if (RepSpec.LastAcc!=OffHirer.Site) then begin
              testf2 = false;
            end;
          end;
          if (therentres>0) then begin
            if (testf2) then begin
              testf2 = false;
              rwcnt = MatRowCnt(OffHirer);
              for (i=0;i<rwcnt;i=i+1) begin
                MatRowGet(OffHirer,i,OffHirerw);
                if (OffHirerw.RentResSerNo==therentres) then begin
                  testf2 = true;
                  i = rwcnt;
                end;
              end;
            end;
          end;
          if (testf2) then begin
            PrintAgreementInfo(Agreementr,firstf);
            if (printedf==false) then begin
              StartFormat(15);
              EndFormat;
              StartFormat(15);
              OutString(0,0,USetStr(11404),false);
              OutString(70,0,USetStr(11405),false);
              OutString(140,0,USetStr(11406),false);
//              OutString(2,0,USetStr(11407),false);
              OutString(2,0,USetStr(11331),false);
              EndFormat;
              Gray_Divider(0,1);
              printedf = true;
            end;
            StartFormat(15);
            OutString(0,"DblOffHireVc",OffHirer.SerNr,false);
            OutString(70,0,OffHirer.TransDate,false);
            OutString(140,0,OffHirer.Addr0,false);
//            OutString(2,0,OffHirer.ClientContact,false);
            if (OffHirer.OKFlag==0) then begin
              Status = USetStr(28480);
            end;
            if (OffHirer.OKFlag==2) then begin
              Status = USetStr(28482);
            end;
            if (OffHirer.OKFlag==1) then begin
              Status = USetStr(28481);
            end;
            OutString(2,0,Status,false);
            EndFormat;
          end;
        end;
        if (printedf) then begin
          Black_Divider(0,1);
        end;
      end;
      if (RepSpec.flags[5]<>0) then begin
        PrintReservations(Agreementr.SerNr,1,RepSpec.LastAcc,Agreementr,therentres,firstf);
      end;
    end;
  end;
  return;
end;

global
procedure AgreeInvRn(record RcVc RepSpec)
begin
  string 255 tstr;
  Integer rw;

  StartReportJob(USetStr(11380));
  rw = 1;
  HTCustCat(RepSpec.f5,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTCustClass(RepSpec.f4,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  PrintAgreeInvRn(RepSpec);
  EndJob;
  return;
end;

global
procedure RentResInfoRn(record RcVc RepSpec)
begin
  StartReportJob(USetStr(11377));
  EndHeader;
  PrintAgreeInvRn(RepSpec);
  EndJob;
  return;
end;

