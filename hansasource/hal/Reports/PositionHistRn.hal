external procedure HTPositions(string, string, var string);
external procedure PrintItemsAtPosition(string,string,string,string,var val, Boolean,Integer,string);

procedure HistoryForPosition(record RcVc RepSpec,string poscode)
BEGIN
  record PUVc PUr;
  row PUVc PUrw;
  record StockMovVc StockMovr;
  row StockMovVc StockMovrw;
  Boolean TrHs,testf,firstf;
  string 40 ckey;
  Integer i,rwcnt;
  
  if (RepSpec.flags[0]!=0) then begin
    firstf = true;
    TrHs = true;
    ckey = "ToPosCodeSerNr:" & poscode;
    while (LoopKey(ckey,PUr,1,TrHs)) begin
      if (TrHs) then begin
        rwcnt = MatRowCnt(PUr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(PUr,i,PUrw);
          testf = true;
          if (PUrw.ToPosCode!=poscode) then begin testf = false; end;
          if (testf) then begin
            if (firstf) then begin
              StartFormat(15);
               OutString(0,0,USetStr(14142),false);
               EndFormat;
              StartFormat(15);
               OutString(15,0,USetStr(14144),false);
               OutString(105,0,USetStr(14145),false);
               OutString(200,0,USetStr(14146),false);
               OutString(320,0,USetStr(14147),true);
              EndFormat;
              Gray_Divider(0,1);
              firstf = false;
            end;
            StartFormat(15);
             OutString(15,0,poscode,false);
             OutString(105,"DblPU",PUr.SerNr,false);
             OutString(200,0,PUrw.ArtCode,false);
             OutVal(320,0,PUrw.Quant,M4Qty,true);
            EndFormat;
            i = rwcnt;
          end;
        end;
      end;
    end;
  end;

  if (RepSpec.flags[1]!=0) then begin
    firstf = true;
    TrHs = true;
    ckey = "FrPosCodeSerNr:" & poscode;
    while (LoopKey(ckey,StockMovr,1,TrHs)) begin
      if (TrHs) then begin
        rwcnt = MatRowCnt(StockMovr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(StockMovr,i,StockMovrw);
          testf = true;
          if (StockMovrw.FrPosCode!=poscode) then begin testf = false; end;
          if (testf) then begin
            if (firstf) then begin
              StartFormat(15);
               OutString(0,0,USetStr(14143),false);
              EndFormat;
              StartFormat(15);
               OutString(15,0,USetStr(14144),false);
               OutString(105,0,USetStr(14145),false);
               OutString(200,0,USetStr(14146),false);
               OutString(320,0,USetStr(14147),true);
              EndFormat;
              Gray_Divider(0,1);
              firstf = false;
            end;
            StartFormat(15);
             OutString(15,0,poscode,false);
             OutString(105,"DblStockMov",StockMovr.SerNr,false);
             OutString(200,0,StockMovrw.ArtCode,false);
             OutVal(320,0,StockMovrw.Quant,M4Qty,true);
            EndFormat;
            i = rwcnt;
          end;
        end;
      end;
    end;
  end;
  RETURN;
END;

procedure PrintStatus(record RcVc RepSpec, record PosVc Posr)
begin
  val qty;
  RepSpec.flags[0] = 4;
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(13551),false);
  OutString(50,0,USetStr(13553),false);
  OutString(140,0,USetStr(13554),false);
  OutString(420,0,USetStr(13556),true);
  OutString(480,0,USetStr(13555),true);
  EndFormat;
  Gray_Divider(0,1);
  PrintItemsAtPosition("",Posr.Code,"",Posr.Location,qty,true,RepSpec.flags[0],"");
 
  return;
end;

global
procedure PositionHistRn(record RcVc RepSpec)
BEGIN
  Boolean TrHs,testf;
  record PosVc Posr;
  string 20 frpos,topos;
  Integer rw;
  string 255 tstr;
  
  frpos = FirstInRange(RepSpec.f1,20);
  topos = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(14140));  
    HTPositions(frpos,topos,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  EndHeader;  
  if (blank(RepSpec.f1)) then begin 
    StartFormat(15);
     OutString(15,0,USetStr(14141),false);
    EndFormat;
    goto LPositionHistRn;
  end;
  Posr.Code = frpos;
  TrHs = true;
  while (LoopMain(Posr,1,TrHs)) begin
    if (Posr.Code>topos) then begin TrHs = false; end;
    if (TrHs) then begin
      testf = true;
      if (testf) then begin
        HistoryForPosition(RepSpec,Posr.Code);
        PrintStatus(RepSpec,Posr); // Why was this commented out?
      end;
    end;
  end;
LPositionHistRn:;  
  EndJob;
  RETURN;
END;
