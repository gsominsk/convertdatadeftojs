external function Boolean HasContactClassification();external function Boolean HasCategories();external procedure HTLevCat(string,var string);external procedure HTCustClass(string,var string);external function Boolean ContactInGroupClass(string,string,string,string,string,string);external Procedure GetCustName(String,var String);external Procedure GetAInvNr(LongInt,Var String,Var Boolean);external Procedure GetVatRegPL(String,var String,var String,var String,var String,var String);globalprocedure InstListSLRn(record RcVc RepSpec)begin   Integer i;   record ARInstallVc Inst;   Boolean TsHr,Skip,Dummy;   Val tt;   Integer p1,p2,p3,p4,p5,p6,p7,p8,p9,pA,pB;   String 50 tstr,custname,ArgInvNr;   Integer keys;   String 20 mykey;   String 100 HdrStr;   Integer HdrLn;      // Positions   p1= 0;   p2= 55;   p3= 200;   p4= 290;   p9= 330;   p5= 400;   p6= 440;   p7= 480;      // Get parameters & Init   tt = 0;   TsHr = true;   StartReportJob(USetStr(7800));   EndHeader;  StartFormat(15);  OutString(p1,0,USetStr(7801),false);  OutString(p2,0,USetStr(7815),false);//JNW (Customer, not Supplier)  OutString(p3,0,USetStr(7803),false);  if (RepSpec.flags[4] == 1) then begin     OutString(p6,0,USetStr(7804),false);  end;  OutString(p7,0,USetStr(7805),true);  EndFormat;    Gray_Divider(0,1);   keys =2;   if (RepSpec.flags[1]==0) then begin      mykey = "InvoiceNr";   end;   if (RepSpec.flags[1]==1) then begin      mykey = "DueDate";   end;   if (RepSpec.flags[1]==2) then begin      mykey =  "CustCode";           end;   if (RepSpec.flags[1]==3) then begin      mykey =  "CustDue";       keys = 3;          end;   while (LoopKey(mykey,Inst,keys,TsHr)) begin        Skip = false;      If ((Inst.DueDate>RepSpec.sEndDate) or (Inst.DueDate<RepSpec.sStartDate)) then begin          Skip = true;      end;      if ((RepSpec.f1 <> Inst.CustCode) and (not Blank(RepSpec.f1))) then begin        Skip = true;      end;      if ((RepSpec.f2 <> Inst.ARCurncyCode) and (not Blank(RepSpec.f2))) then begin        Skip = true;      end;      If (not Skip) then begin         StartFormat(15);         OutDate(p1,0,Inst.DueDate,false);         GetCustName(Inst.CustCode,custname);         OutString(p2,0,Left(custname,25),false);         OutString(p3,"DblIVVc",Inst.InvoiceNr,false);         if (RepSpec.flags[4] == 1) then begin           OutString(p6,0,Inst.ARCurncyCode,false);          end;         OutVal(p7,0,Inst.RVal,M4Val,true);         EndFormat;         tt = tt + Inst.RVal;      End;   end;  // Footer  Gray_Divider(0,1);  StartFormat(15);  OutString(p1,0,USetStr(8513),false);  OutVal(p7,0,tt,M4Val,true);  EndFormat;  EndJob;  return;end;globalprocedure InstListPLRn(record RcVc RepSpec)begin   Integer i,rw;   record APInstallVc APIr;   Boolean TsHr,Skip,Dummy;   Val tt;   Integer p1,p2,p3,p4,p5,p6,p7,p8,p9,pA,pB;   String 50 tstr,InvoiceNro;   Integer keys;   String 20 mykey;   String 60 vatnr,vatPos,Supname,dom1,dom2;   String 100 HdrStr;   Integer HdrLn;   // Positions   p1= 0;   p2= 90;   p3= 300;   p4= 290;   p9= 330;   p5= 400;   p6= 440;   p7= 480;     // Get parameters & Init   tt = 0;   TsHr = true;     StartReportJob(USetStr(7800));  rw = 1;  if (HasCategories) then begin    HTLevCat(RepSpec.f3,tstr);    if (nonblank(tstr)) then begin      Header(rw,tstr,1);      rw = rw + 1;    end;  end;  if (HasContactClassification) then begin    HTCustClass(RepSpec.Stext,tstr);    if (nonblank(tstr)) then begin      Header(rw,tstr,1);      rw = rw + 1;    end;  end;  EndHeader;  StartFormat(15);  OutString(p1,0,USetStr(7801),false);  OutString(p2,0,USetStr(7802),false);  OutString(p3,0,USetStr(7803),false);  if (RepSpec.flags[4] == 1) then begin     OutString(p6,0,USetStr(7804),false);  end;  OutString(p7,0,USetStr(7805),true);    EndFormat;  Gray_Divider(0,1);   keys =2;   if (RepSpec.flags[1]==0) then begin     mykey = "VISerNr";   end;   if (RepSpec.flags[1]==1) then begin     mykey = "DueDate";   end;   if (RepSpec.flags[1]==2) then begin     mykey =  "VECode";           end;   if (RepSpec.flags[1]==3) then begin     mykey =  "VEDue";      keys = 3;          end;     TsHr = true;   while (LoopKey(mykey,APIr,keys,TsHr)) begin     Skip = false;      If ((APIr.DueDate>RepSpec.sEndDate) or (APIr.DueDate<RepSpec.sStartDate)) then begin          Skip = true;      end;      if ((RepSpec.f1 <> APIr.VECode) and (not Blank(RepSpec.f1))) then begin        Skip = true;      end;      if (Skip==false) then begin         Skip = (ContactInGroupClass(APIr.VECode,RepSpec.f3,RepSpec.Stext,"SUPP","","")==false);      end;            if ((RepSpec.f2 <> APIr.CurncyCode) and (not Blank(RepSpec.f2))) then begin        Skip = true;      end;      if (not Skip) then begin        StartFormat(15);        OutDate(p1,0,APIr.DueDate,false);        GetVatRegPL(APIr.VECode,vatnr,vatPos,Supname,dom1,dom2);        OutString(p2,0,Left(Supname,25),false);        if (true) then begin          InvoiceNro = APIr.VISerNr;          OutString(p3,0,InvoiceNro,false);        end else begin            OutString(p3,0,APIr.VISerNr,false);        end;        if (RepSpec.flags[4]!=0) then begin          OutString(p6,0,APIr.CurncyCode,false);           OutVal(p7,0,APIr.RVal,M4Val,true);          tt = tt + APIr.RVal;        end else begin          OutVal(p7,0,APIr.BookRVal,M4Val,true);          tt = tt + APIr.BookRVal;        end;        EndFormat;      end;   end;  // Footer  Gray_Divider(0,1);  StartFormat(15);  OutString(p1,0,USetStr(8513),false);  OutVal(p7,0,tt,M4Val,true);  EndFormat;  EndJob;  return;end;