external procedure FillToDo(var record RcVc,var Area);
external function LongInt DateDiff(Date,Date);
external procedure HT2Per(Date, Date , var string);
external procedure ExtractObj(string,var Integer,var string);

procedure ActTodoList2(record RcVc RepSpec,Integer donef)
BEGIN
  record ActVc Actr;
  row ActVc Actrw;
  string 255 ckey;
  string 255 tstr;
  LongInt actcnt;
  Boolean TrHs,testf,firstf;
  Integer i,rwcnt;

  ckey = "UserMain:";
  ckey = ckey & RepSpec.f1;
  actcnt = 0;
  firstf = true;
  Actr.TodoFlag = 1;
  Gray_Divider(0,1);
  TrHs = true;
  while (LoopKey(ckey,Actr,1,TrHs)) begin
    testf = false;
    if (TrHs) then begin
      testf = true;
      if (donef==0) then begin
        if (Actr.OKFlag==1) then begin testf = false; end;
      end;
      if (donef==1) then begin
      if (DateInRange(Actr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
        if (Actr.OKFlag==0) then begin testf = false; end;
      end;
      if (Actr.Invalid!=0) then begin testf = false; end;
      if (StringToLongInt(RepSpec.LastAcc)>=0) then begin
        if (Actr.PrioLevel!=StringToLongInt(RepSpec.LastAcc)) then begin testf = false; end;
      end;
      if (Actr.PrivateFlag!=0) then begin
        tstr = CurrentUser;
        if (SetInSet(tstr,Actr.MainPersons)==false) then begin testf = false; end;
      end;  
      if (RepSpec.flags[1]==0) then begin
        if (Actr.OKFlag!=0) then begin testf = false; end;
      end;
      if (RepSpec.flags[2]==0) then begin
        if (Actr.OKFlag==0) then begin testf = false; end;
      end;
      if (testf) then begin
        if (RepSpec.ArtMode==1) then begin
          if (firstf==false) then begin
            Gray_Divider(0,1);
          end;
        end;
        StartFormat(15);
        OutLongInt(0,0,Actr.PrioLevel,false);
        if (nonblank(Actr.Comment)) then begin
          OutStringID(20,"DblActRec",Actr.Comment,false,Actr.SerNr);
        end else begin
          OutStringID(20,"DblActRec","-",false,Actr.SerNr);
        end;
        if (nonblank(Actr.Contact)) then begin
          OutStringID(280,"DblContactAct",Actr.Contact,false,Actr.SerNr);
        end else begin
          OutStringID(280,"DblContactAct",Actr.CUName,false,Actr.SerNr);
        end;
        OutString(460,0,Actr.Phone,true);
        if (Actr.OKFlag!=0) then begin
          OutString(480,0,USetStr(6691),true);
        end;  
        EndFormat;
        if (RepSpec.ArtMode==1) then begin
          rwcnt = MatRowCnt(Actr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(Actr,i,Actrw);
            StartFormat(15);
            OutString(100,0,Actrw.TextCode,false);
            OutString(150,0,Actrw.Text,false);
            EndFormat;
          end;
        end;
        firstf = false;
        actcnt = actcnt + 1;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(6690),false);
  OutLongInt(120,0,actcnt,false);
  EndFormat;
  RETURN;
END;

global
procedure ActTodoRn(record RcVc RepSpec)
BEGIN
  Integer rw;
  string 255 tstr;
  Integer id;

  StartReportJob(USetStr(6689));
   rw = 1;
   if (RepSpec.flags[1]!=0) then begin
     HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   end else begin
     HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   end;
   Header(rw,tstr,1);
   rw = rw + 1;
   if (nonblank(RepSpec.f1)) then begin
     Header(rw,RepSpec.f1,0);
   end;
   if (RepSpec.ArtMode==1) then begin
     tstr = USetStr(6667);
   end else begin
     tstr = USetStr(6671);
   end;
   Header(rw,tstr,1);
   rw = rw + 1;
   if (RepSpec.flags[1]==1) then begin
     tstr = USetStr(6669);
   end else begin
     tstr = USetStr(6670);
   end;
   Header(rw,tstr,1);
   rw = rw + 1;
  EndHeader;
  StartFormat(20);
  id = 6667;
  if (RepSpec.ArtMode==1) then begin id = 6671; end;
  OutString(200,"DblActDetailed",USetStr(id),false);
  id = 6669;
  if (RepSpec.flags[1]==1) then begin id = 6670; end;
  OutString(300,"DblActOKed",USetStr(id),false);
  EndFormat;
  Black_Divider(0,1);
  StartFormat(5);
  EndFormat;
  StartFormat(20);
  OutString(0,0,USetStr(6668),false);
  OutString(20,0,USetStr(6685),false);
  OutString(280,0,USetStr(6688),false);
  OutString(460,0,USetStr(6693),true);
  EndFormat;
  ActTodoList2(RepSpec,0);
  if (RepSpec.flags[1]!=0) then begin
    StartFormat(15);
    EndFormat;
    ActTodoList2(RepSpec,1);
  end;
  EndJob;
  RETURN;
END;

procedure PrintTasks(record RcVc RepSpec,Integer sorting,Area a_thp)
begin
  LongInt off1,i,textcnt,l,j;  
  Integer sz;
  LongInt sernr,prio,okflag;
  string 255 tstr,comment,cuname,supervisor,prcode,phone,typ;
  string 255 lasttyp;
  Integer lasttypcnt;
  Date td;
  record ActTypeVc ActTyper;
  
  off1 = 0;
  textcnt = GetLongFromArea(a_thp,off1); off1 = off1 + 4;
  for (i=0;i<textcnt;i=i+1) begin
    l = GetLongFromArea(a_thp,off1); off1 = off1 + 4;
    sernr = GetLongFromArea(a_thp,off1); off1 = off1 + 4;
    prio = GetLongFromArea(a_thp,off1); off1 = off1 + 4;
    l = GetLongFromArea(a_thp,off1); off1 = off1 + 4;
    okflag = GetLongFromArea(a_thp,off1); off1 = off1 + 4;
    l = GetLongFromArea(a_thp,off1); off1 = off1 + 4;      
    tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
    sz = asc(tstr); 
    comment = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
    tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
    sz = asc(tstr); 
    cuname = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
    tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
    sz = asc(tstr); 
    phone = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
    td.day = GetIntFromArea(a_thp,off1); off1 = off1 + 2;
    td.month = GetIntFromArea(a_thp,off1); off1 = off1 + 2;
    td.year = GetIntFromArea(a_thp,off1); off1 = off1 + 2;
    off1 = off1 + 2;
    tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
    sz = asc(tstr); 
    supervisor = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
    tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
    sz = asc(tstr); 
    prcode = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
    l = GetLongFromArea(a_thp,off1); off1 = off1 + 4;      
    tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
    sz = asc(tstr); 
    typ = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;

    l = GetIntFromArea(a_thp,off1); off1 = off1 + 2;//time
    l = GetIntFromArea(a_thp,off1); off1 = off1 + 2;//time
    l = GetLongFromArea(a_thp,off1); off1 = off1 + 4;  

    l = GetLongFromArea(a_thp,off1); off1 = off1 + 4;      
    for (j=0;j<l;j=j+1) begin
      tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
      tstr = GetStringFromArea(a_thp,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_thp,off1,sz); off1 = off1 + sz;
    end;

    switch (sorting) begin
      case 4:
        if (lasttypcnt!=0) then begin
          if (lasttyp!=typ) then begin
            ActTyper.Code = lasttyp;
            if (ReadFirstMain(ActTyper,1,true)) then begin end;
            Gray_Divider(0,1);
            StartFormat(15);
             OutString(300,0,lasttyp,false);
             OutString(350,0,ActTyper.Comment,false);
             OutString(1,0,lasttypcnt,true);
            EndFormat;
            lasttypcnt = 0;
          end;
        end;
    end;
    switch (RepSpec.ArtMode) begin
      case 1:
        StartFormat(15);
         OutStringID(0,"DblActVc",comment,false,sernr);
        EndFormat;
      otherwise
        StartFormat(15);
         if (prio==-1) then begin
           OutString(0,0,"",false);
         end else begin
           OutString(0,0,prio,false);
         end;
         if (RepSpec.flags[1]!=0) then begin
           if (okflag!=0) then begin
             OutString(3,0,USetStr(10333),false);
           end;
         end;
         if (RepSpec.flags[1]!=0) then begin
           comment = Left(comment,28);
         end else begin
           comment = Left(comment,39);
         end;
         OutStringID(4,"DblActVc",comment,false,sernr);
         OutString(7,0,typ,false);
         OutString(8,0,td,false);
         OutString(5,0,cuname,false);
         if (RepSpec.Notation>0) then begin
           OutStringID(6,"DblTodoDone",USetStr(28157),false,sernr);
         end else begin
           OutString(6,0,phone,false);
         end;
        EndFormat;
    end;
    lasttyp = typ;
    lasttypcnt = lasttypcnt + 1;
  end;
  switch (sorting) begin
    case 4:
      if (lasttypcnt!=0) then begin
        ActTyper.Code = lasttyp;
        if (ReadFirstMain(ActTyper,1,true)) then begin end;
        Gray_Divider(0,1);
        StartFormat(15);
         OutString(300,0,lasttyp,false);
         OutString(350,0,ActTyper.Comment,false);
         OutString(1,0,lasttypcnt,true);
        EndFormat;
        lasttypcnt = 0;
      end;
  end;
  return;
end;

procedure SortToDo(Integer sorting,Area a_thp)
begin
  LongInt i,j,a,textcnt,off1,off2;
  LongInt startoff1,startoff2,begl;
  Boolean changef;
  LongInt l;
  string 255 tstr;
  Integer sz;
  LongInt sernr1,prio1;
  string 255 com1;
  string 255 typ1;
  Date td1;
  LongInt sernr2,prio2;
  string 255 com2;
  string 255 typ2;
  Date td2;
  Area a_curent;
  Area a_tmpbeg;
  Area a_tmp1;
  Area a_tmp2;
  Area a_tmpend;
    
  l = GetAreaFromArea(a_thp,0,GetAreaLength(a_thp),a_curent);  
  changef = true;
  while (changef) begin
    changef = false;
    off1 = 0;
    textcnt = GetLongFromArea(a_curent,off1); off1 = off1 + 4;
    for (i=0;i<(textcnt-1);i=i+1) begin
      startoff1 = off1;
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;
      sernr1 = GetLongFromArea(a_curent,off1); off1 = off1 + 4;
      prio1 = GetLongFromArea(a_curent,off1); off1 = off1 + 4;
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;      

      tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      com1 = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;
      tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;      
      tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;      
      td1.day = GetIntFromArea(a_curent,off1); off1 = off1 + 2;
      td1.month = GetIntFromArea(a_curent,off1); off1 = off1 + 2;
      td1.year = GetIntFromArea(a_curent,off1); off1 = off1 + 2;
      off1 = off1 + 2;
      
      tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;
      tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;  
          
      tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
      sz = asc(tstr); 
      typ1 = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;
      
      l = GetIntFromArea(a_curent,off1); off1 = off1 + 2;//time
      l = GetIntFromArea(a_curent,off1); off1 = off1 + 2;//time
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;  
      
      l = GetLongFromArea(a_curent,off1); off1 = off1 + 4;      
      for (j=0;j<l;j=j+1) begin
        tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
        sz = asc(tstr); 
        tstr = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;
        tstr = GetStringFromArea(a_curent,off1,1); off1 = off1 + 1;
        sz = asc(tstr); 
        tstr = GetStringFromArea(a_curent,off1,sz); off1 = off1 + sz;
      end;


      off2 = off1;
      startoff2 = off2;
      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;
      sernr2 = GetLongFromArea(a_curent,off2); off2 = off2 + 4;
      prio2 = GetLongFromArea(a_curent,off2); off2 = off2 + 4;
      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;
      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;
      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;      
      tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
      sz = asc(tstr); 
      com2 = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
      tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
      tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
      td2.day = GetIntFromArea(a_curent,off2); off2 = off2 + 2;
      td2.month = GetIntFromArea(a_curent,off2); off2 = off2 + 2;
      td2.year = GetIntFromArea(a_curent,off2); off2 = off2 + 2;
      off2 = off2 + 2;
      tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
      tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;      
      tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
      sz = asc(tstr); 
      typ2 = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;

      l = GetIntFromArea(a_curent,off2); off2 = off2 + 2;//time
      l = GetIntFromArea(a_curent,off2); off2 = off2 + 2;//time
      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;  

      l = GetLongFromArea(a_curent,off2); off2 = off2 + 4;      
      for (j=0;j<l;j=j+1) begin
        tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
        sz = asc(tstr); 
        tstr = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
        tstr = GetStringFromArea(a_curent,off2,1); off2 = off2 + 1;
        sz = asc(tstr); 
        tstr = GetStringFromArea(a_curent,off2,sz); off2 = off2 + sz;
      end;
      switch (sorting) begin
        case 1:
          if (com1>com2) or
             ((com1==com2) and (sernr1>sernr2)) then begin 
                changef = true; 
          end;
        case 2:
          if (prio1>prio2) or
             ((prio1==prio2) and (sernr1>sernr2)) then begin 
               changef = true; 
          end;
        case 3:
          if (td1>td2) or 
             ((td1==td2) and (sernr1>sernr2)) then begin 
             changef = true; 
          end;
        case 4:
          if (typ1>typ2) or
             ((typ1==typ2) and (sernr1>sernr2)) then begin 
               changef = true; 
          end;
        otherwise
          if (sernr1>sernr2) then begin changef = true; end;
      end;
      if (changef) then begin
        SetAreaZeroSize(a_tmpbeg);
        SetAreaZeroSize(a_tmp1);
        SetAreaZeroSize(a_tmp2);
        SetAreaZeroSize(a_tmpend);
        begl = GetAreaFromArea(a_curent,0,startoff1,a_tmpbeg);              
        l = GetAreaFromArea(a_curent,startoff1,off1-startoff1,a_tmp1);      
        l = GetAreaFromArea(a_curent,startoff2,off2-startoff2,a_tmp2);      
        l = GetAreaFromArea(a_curent,off2,GetAreaLength(a_curent)-off2,a_tmpend);      
        off1 = (off2 - off1)+begl;

        SetAreaZeroSize(a_curent);
        InsertAreaBeforeArea(a_tmpend,a_curent);
        InsertAreaBeforeArea(a_tmp1,a_curent);
        InsertAreaBeforeArea(a_tmp2,a_curent);
        InsertAreaBeforeArea(a_tmpbeg,a_curent);
      end;
    end;
  end;
  SetAreaZeroSize(a_thp);
  l = GetAreaFromArea(a_curent,0,GetAreaLength(a_curent),a_thp);  
  return;
end;

global
procedure ActTodo2Rn(record RcVc RepSpec)
BEGIN
  Date dd,blankd,today;
  Integer rw;
  string 255 tstr;
  Area thp;
  
  StartReportJob(USetStr(10330));
   rw = 1;
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
  if (RepSpec.flags[29]==0) then begin   
   if (nonblank(RepSpec.f1)) then begin
     tstr = USetStr(10337) & ": " & RepSpec.f1;
     Header(rw,tstr,0);
   end;
   tstr = USetStr(10340) & ": " & USetStr(10341+RepSpec.flags[5]);
   Header(rw,tstr,1);
   rw = rw + 1;
   tstr = USetStr(10345) & ": " & USetStr(10346+RepSpec.flags[3]);
   Header(rw,tstr,0);
   tstr = USetStr(10350) & ": " & USetStr(10351+RepSpec.flags[4]);
   Header(rw,tstr,1);
   rw = rw + 1;
   tstr = USetStr(10355) & ": " & USetStr(10356+RepSpec.flags[1]);
   Header(rw,tstr,0);
   tstr = USetStr(10360) & ": " & USetStr(10361+RepSpec.flags[2]);
   Header(rw,tstr,1);
   rw = rw + 1;
   if (nonblank(RepSpec.f3)) then begin
     tstr = USetStr(10338) & ": " & RepSpec.f3;
     Header(rw,tstr,0);
   end;
   if (nonblank(RepSpec.f4)) then begin
     tstr = USetStr(10339) & ": " & RepSpec.f4;
     Header(rw,tstr,0);
   end;   
  end;
  EndHeader;
  StartFormat(20);
  if (RepSpec.Notation>0) then begin
    OutString(0,"DblActPrev",USetStr(28150),false);
    OutString(80,"DblActNext",USetStr(28151),false);
    OutString(160,"DblTodoNew",USetStr(28155),false);
    OutString(240,"DblTodoRefresh",USetStr(28156),false);
    OutString(320,"DblTodoDayPlanner",USetStr(28158),false);
  end;
  EndFormat;
  SetRepCol(2,40);
  if (RepSpec.flags[1]!=0) then begin
    SetRepCol(3,65);
    SetRepCol(4,100);
  end else begin
    SetRepCol(4,35);
  end;
  SetRepCol(7,270);
  SetRepCol(8,305);
  SetRepCol(5,350);
  SetRepCol(6,430);

  switch (RepSpec.ArtMode) begin
    case 1:
      StartFormat(15);
      OutString(0,0,USetStr(10334),false);
      EndFormat;
    otherwise
      StartFormat(20);
      OutString(0,0,USetStr(10332),false);
      if (RepSpec.flags[1]!=0) then begin
        OutString(3,0,USetStr(10333),false);
      end;
      OutString(4,0,USetStr(10334),false);
      OutString(7,0,USetStr(10338),false);
      OutString(8,0,USetStr(10366),false);
      OutString(5,0,USetStr(10335),false);
      if (RepSpec.Notation>0) then begin
        OutString(6,0,USetStr(28157),false);
      end else begin
        OutString(6,0,USetStr(10336),false);
      end;
      EndFormat;
  end;
  Gray_Divider(0,1);
  Gray_Divider(0,1);

  SetAreaZeroSize(thp);
  FillToDo(RepSpec,thp);
  SortToDo(RepSpec.AccSpec,thp);//crashes
  PrintTasks(RepSpec,RepSpec.AccSpec,thp);

  Gray_Divider(0,1);
  StartFormat(15);
  OutString(300,0,USetStr(10331),false);
  OutLongInt(1,0,RepSpec.long1,true);
  EndFormat;
  EndJob;
  RETURN;
END;

