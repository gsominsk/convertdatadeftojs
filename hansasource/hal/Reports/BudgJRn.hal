external function Boolean HasNLBudgetClass();
external function Boolean HasObjects();
external procedure HT2Per(Date, Date , var string);
external procedure AutomatedSalesOrderly(string);

global
procedure BudgJRn(record RcVc RepSpec)
begin
  Record Bud1Vc Budr;
  row Bud1Vc Budrw;
  boolean TrHs,testf;
  string 60 keyname;
  date sdate,edate;
  integer i,ar,rw;
  string 255 tstr;
  string 10 fac,lac;
  val SumTotal;
  
  sdate=RepSpec.sStartDate;
  edate=RepSpec.sEndDate;
  fac=FirstInRange(RepSpec.f1,20);
  lac=LastInRange(RepSpec.f1,20);
    
  StartReportJob(USetStr(10960));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(1,tstr,1);
  rw = 2;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(10961) & ": " & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(10963) & ": " & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;  
  if (RepSpec.flags[0]==1) then begin
    if (RepSpec.flags[1]==0) then begin
      tstr = USetStr(1138);
      Header(rw,tstr,1);
    end else begin
      tstr = USetStr(1139);
      Header(rw,tstr,1);
    end;
  end else begin
    if (RepSpec.flags[1]==1) then begin
      tstr = USetStr(1137);
      Header(rw,tstr,1);
    end else begin
      tstr = USetStr(1136);
      Header(rw,tstr,1);
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;      

  EndHeader;
  
  keyname = "AccObjKey";
  Budr.AccNumber = fac;
  if (nonblank(RepSpec.f2) and blank(RepSpec.f1)) then begin
    keyname = "ObjAccKey";
    Budr.Objects=RepSpec.f2;
  end;
  
  SetRepCol(2,40);
  SetRepCol(3,220);
  SetRepCol(4,305);
  SetRepCol(5,345);
  SetRepCol(6,390);
  
  StartFormat(15);
  OutString(0,0,USetStr(10961),false);
  OutString(2,0,USetStr(10962),false);
  if (HasObjects) then begin
    OutString(3,0,USetStr(10963),false);
  end;
  if (HasNLBudgetClass) then begin
    OutString(4,0,USetStr(10967),false);
  end;
  OutString(5,0,USetStr(10964),false);
  OutString(6,0,USetStr(10965),false);
  OutString(1,0,USetStr(10966),true);
  EndFormat;
  
  Black_Divider(0,1);

  SumTotal = 0;
  TrHs=true;
  while (LoopKey(keyname,Budr,1,TrHs)) begin
    testf = true;  
    if (keyname=="AccObjKey") then begin
      if (nonblank(lac) and (Budr.AccNumber>lac)) then begin
        TrHs = false; testf = false;
      end;
      if (nonblank(RepSpec.f2)) and (RepSpec.f2<>Budr.Objects) then begin
        testf = false;
      end;  
    end;
    if (keyname=="ObjAccKey") then begin
      if (RepSpec.f2<>Budr.Objects) then begin
        TrHs = false; testf = false;
      end;
    end; 
    if (testf and TrHs) then begin
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (RepSpec.FirstAcc!=Budr.Class) then begin
          testf = false;
        end;
      end;
      if (sdate>Budr.EndDate) or (edate<Budr.StartDate) then begin
        testf = false;
      end;
      if (Budr.OKFlag==0) then begin
        if (RepSpec.flags[1]==0) then begin
          testf = false;
        end;
      end else begin
         if (RepSpec.flags[0]==0) then begin
          testf = false;
        end;
      end;
    end;  
    if (testf and TrHs) then begin
      StartFormat(15);
      OutString(0,0,Budr.AccNumber,false);
      OutString(2,0,Budr.Comment,false);
      if (HasObjects) then begin
        OutString(3,0,Budr.Objects,false);
      end;
      if (HasNLBudgetClass) then begin
        OutString(4,0,Budr.Class,false);
      end;
      OutDate(5,0,Budr.StartDate,false);
      OutDate(6,0,Budr.EndDate,false);  
      OutVal(1,0,Budr.BudSum,M4Val,true);   
      SumTotal = SumTotal + Budr.BudSum;
      EndFormat;
      if (RepSpec.ArtMode==1) then begin
        ar=MatRowCnt(Budr);
        Gray_Divider(3,1);
        for (i=0;i<ar;i=i+1) begin
          MatRowGet(Budr,i,Budrw);
          StartFormat(15);
          OutDate(4,0,Budrw.BudDate,true);
          OutVal(1,0,Budrw.sval,M4Val,true);    
          EndFormat;
        end;
        Gray_Divider(0,1);
        StartFormat(15);EndFormat;
      end;
    end;    
  end;     
  if (SumTotal > 0) then begin 
    StartFormat(15);
    EndFormat;
    Black_Divider(220,480);
    StartFormat(15);
    if (RepSpec.Media==mtExcel or RepSpec.Media==mtFile) then begin 
      OutString(0,0,"",false);
      OutString(2,0,"",false);
      if (HasObjects) then begin
        OutString(3,0,"",false);
      end;
      if (HasNLBudgetClass) then begin
        OutString(4,0,"",true);
      end;
    end;    
    OutString(5,0,USetStr(16921),true);
    OutVal(1,0,SumTotal,M4Val,true);
    EndFormat;
  end;  
  EndJob;
  AutomatedSalesOrderly("HasIntegratedNL+Run_BudgJRn");
  return;
end;

global
procedure RevBudgJRn(record RcVc RepSpec)
begin
  Record Bud2Vc Budr;
  row Bud2Vc Budrw;
  boolean TrHs,testf;
  string 60 keyname;
  date sdate,edate;
  integer i,ar,rw;
  string 255 tstr;
  string 10 fac,lac;
  val SumTotal;
  
  sdate = RepSpec.sStartDate;
  edate = RepSpec.sEndDate;
  fac = FirstInRange(RepSpec.f1,20);
  lac = LastInRange(RepSpec.f1,20);
    
  StartReportJob(USetStr(10970));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(1,tstr,1);
  rw = 2;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(10971) & ": " & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(10973) & ": " & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;    
  end;
  if (RepSpec.flags[0]==1) then begin
    if (RepSpec.flags[1]==0) then begin
      tstr = USetStr(1138);
      Header(rw,tstr,1);
    end else begin
      tstr = USetStr(1139);
      Header(rw,tstr,1);
    end;
  end else begin
    if (RepSpec.flags[1]==1) then begin
      tstr = USetStr(1137);
      Header(rw,tstr,1);
    end else begin
      tstr = USetStr(1136);
      Header(rw,tstr,1);
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;      

  EndHeader;
  
  keyname = "AccObjKey";
  Budr.AccNumber = fac;
  if (nonblank(RepSpec.f2) and blank(RepSpec.f1)) then begin
    keyname = "ObjAccKey";
    Budr.Objects = RepSpec.f2;
  end;
  
  SetRepCol(2,40);
  SetRepCol(3,220);
  SetRepCol(4,305);
  SetRepCol(5,345);
  SetRepCol(6,390);
  
  StartFormat(15);
  OutString(0,0,USetStr(10971),false);
  OutString(2,0,USetStr(10972),false);
  if (HasObjects) then begin
    OutString(3,0,USetStr(10973),false);
  end;
  if (HasNLBudgetClass) then begin
    OutString(4,0,USetStr(10977),false);
  end;
  OutString(5,0,USetStr(10974),false);
  OutString(6,0,USetStr(10975),false);
  OutString(1,0,USetStr(10976),true);
  EndFormat;
  
  Black_Divider(0,1);
  SumTotal = 0;
  
  TrHs=true;
  while (LoopKey(keyname,Budr,1,TrHs)) begin
    testf = true;  
    if (keyname=="AccObjKey") then begin
      if (nonblank(lac) and (Budr.AccNumber>lac)) then begin
        TrHs = false; testf = false;
      end;
      if (nonblank(RepSpec.f2)) and (RepSpec.f2<>Budr.Objects) then begin
        testf = false;
      end;  
    end;
    if (keyname=="ObjAccKey") then begin
      if (RepSpec.f2<>Budr.Objects) then begin
        TrHs = false; testf = false;
      end;
    end; 
    if (testf and TrHs) then begin
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (RepSpec.FirstAcc!=Budr.Class) then begin
          testf = false;
        end;
      end;
      if (sdate>Budr.EndDate) or (edate<Budr.StartDate) then begin
        testf = false;
      end;
      if (Budr.OKFlag==0) then begin
        if (RepSpec.flags[1]==0) then begin
          testf = false;
        end;
      end else begin
         if (RepSpec.flags[0]==0) then begin
          testf = false;
        end;
      end;
    end;
    
    if (testf and TrHs) then begin
      StartFormat(15);
      OutString(0,0,Budr.AccNumber,false);
      OutString(2,0,Budr.Comment,false);
      if (HasObjects) then begin
        OutString(3,0,Budr.Objects,false);
      end;
      if (HasNLBudgetClass) then begin
        OutString(4,0,Budr.Class,false);
      end;
      OutDate(5,0,Budr.StartDate,false);
      OutDate(6,0,Budr.EndDate,false);  
      OutVal(1,0,Budr.BudSum,M4Val,true);    
      SumTotal = SumTotal + Budr.BudSum;
      EndFormat;
      if (RepSpec.ArtMode==1) then begin
        ar=MatRowCnt(Budr);
        Gray_Divider(3,1);
        for (i=0;i<ar;i=i+1) begin
          MatRowGet(Budr,i,Budrw);
          StartFormat(15);
          OutDate(4,0,Budrw.BudDate,true);
          OutVal(1,0,Budrw.sval,M4Val,true);    
          EndFormat;
        end;
        Gray_Divider(0,1);
        StartFormat(15);
        EndFormat;
      end;
    end;    
  end;     
  if (SumTotal > 0) then begin 
    StartFormat(15);
    EndFormat;
    Black_Divider(220,480);
    StartFormat(15);
    if (RepSpec.Media==mtExcel or RepSpec.Media==mtFile) then begin 
      OutString(0,0,"",false);
      OutString(2,0,"",false);
      if (HasObjects) then begin
        OutString(3,0,"",false);
      end;
      if (HasNLBudgetClass) then begin
        OutString(4,0,"",true);
      end;
    end;
    OutString(5,0,USetStr(16921),true);
    OutVal(1,0,SumTotal,M4Val,true);
    EndFormat;
  end;
  EndJob;
  AutomatedSalesOrderly("HasIntegratedNL+Run_RevBudgJRn");
  return;
end;

