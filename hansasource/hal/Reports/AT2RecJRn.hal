external procedure HT2Per(Date,Date,var string);
 
global
procedure AT2RecJRn(record RcVc RepSpec)
begin
  record AT2PUVc AT2Rec;
  Boolean TrHs;
  Boolean testf;
  LongInt frrec,torec;
  row AT2PUVc AT2Recrw;
  string 255 tstr;
  Integer rwcnt; 
  Integer i;
  Integer rw;
  Val totpurch;
  
  totpurch = 0;
  frrec = FirstInRange(RepSpec.f1,20);
  torec =  LastInRange(RepSpec.f1,20);
  
  StartReportJob(USetStr(8820));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw +1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(8823);
    tstr = tstr & " ";
    tstr = tstr & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end; 
   if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(8825);
    tstr = tstr & " ";
    tstr = tstr & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;  
   if (nonblank(RepSpec.f3)) then begin
    tstr = USetStr(8831);
    tstr = tstr & " ";
    tstr = tstr & RepSpec.f3;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;  
  if (RepSpec.ArtMode==1) then begin
     tstr = USetStr(6667);
     Header(rw,tstr,1);
     rw = rw + 1;
  end;
  if (RepSpec.ArtMode==0) then begin
     tstr = USetStr(6671);
     Header(rw,tstr,1);
     rw = rw + 1;
  end;

  EndHeader;
 
  StartFormat(15);
   OutString(0,0,USetStr(8823),false);
   OutString(70,0,USetStr(8828),false);
   OutString(140,0,USetStr(8821),false);
   OutString(200,0,USetStr(8825),false);
   OutString(250,0,USetStr(8829),false);
   if (RepSpec.ArtMode == 1) then begin  
     OutString(1,0,USetStr(8827),true);
   end;
  EndFormat;  
  Black_Divider(0,1);   
  TrHs = true;
  AT2Rec.SerNr = frrec;
  while (LoopKey("SerNr",AT2Rec,1,TrHs)) begin

    testf=true;
   if (frrec<>-1) then begin
      if (AT2Rec.SerNr>torec) then begin
        TrHs = false;
      end;
    end; 
    if (TrHs) then begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (RepSpec.sStartDate>AT2Rec.TransDate) then begin
          testf = false;
        end;
        if (RepSpec.sEndDate<AT2Rec.TransDate) then begin
         testf = false;
        end;
     end;
      if (nonblank(RepSpec.f1)) then begin
       if (AT2Rec.SerNr>torec) then begin
         testf = false;
       end;
     end;         
     if (nonblank(RepSpec.f2)) then begin
       if (AT2Rec.VECode<>RepSpec.f2) then begin
         testf = false;
       end;
     end;
     if (nonblank(RepSpec.f3)) then begin
       if (AT2Rec.DepCode<>RepSpec.f3) then begin
         testf = false;
       end;
     end;
  
     if (testf) then begin
      StartFormat(15);
        OutString(0,0,AT2Rec.SerNr,false);
        OutDate(70,0,AT2Rec.TransDate,false);
        OutString(140,0,AT2Rec.DepCode,false);
        OutString(200,0,AT2Rec.VECode,false);
        OutString(250,0,AT2Rec.Comment,false);
      EndFormat;
      if (RepSpec.ArtMode==1) then begin
        StartFormat(5);
        EndFormat;
        rwcnt = MatRowCnt(AT2Rec);
        if (rwcnt<1) then begin
          Black_Divider(0,1);
        end; 
        if (rwcnt>0) then begin 
          Gray_Divider(20,1)
          StartFormat(20);
            OutString(20,0,USetStr(8807),false);
            OutString(130,0,USetStr(8826),false);
            OutString(200,0,USetStr(8809),false);
          EndFormat;
          for (i = 0; i < rwcnt; i = i + 1) begin
            MatRowGet(AT2Rec,i,AT2Recrw);
            StartFormat(15);
              OutString(20,0,AT2Recrw.AT2Code,false);
              OutString(130,0,AT2Recrw.InventoryNr,false);
              OutString(200,0,AT2Recrw.Description,false);
              OutVal(1,0,AT2Recrw.PurchVal,M4Val,true);
            EndFormat;
            totpurch = totpurch + AT2Recrw.PurchVal;  
          end;   
          Black_Divider(0,1); 
         end; 
        end;  
     
     end; 
   end;  
 end;   
 if (RepSpec.ArtMode==1) then begin
   StartFormat(15);
    OutString(250,0,USetStr(8830),false);
    OutVal(1,0,totpurch,M4Val,true);
   EndFormat;
 end;
 EndJob;
  return;
end;
