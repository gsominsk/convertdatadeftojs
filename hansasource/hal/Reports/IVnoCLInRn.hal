external function Integer PMCheckType(string,var string,var string);
external function Boolean CLInforIPExists(LongInt,string,var LongInt);
external function Boolean CLInforIVExists(LongInt,string,var LongInt);

procedure PrintHeader(Boolean invf)
BEGIN
  string 255 tstr;

  SetRepCol(3,65);
  SetRepCol(4,120);
  SetRepCol(5,200);
  SetRepCol(7,430);
  SetRepCol(8,470);
  if (invf) then begin
    StartFormat(15);
    OutString(0,0,USetStr(1330),false);
    EndFormat;
  end else begin
    StartFormat(15);
    OutString(0,0,USetStr(10481),false);
    EndFormat;
  end;
  StartFormat(15);
  OutString(0,0,USetStr(10482),false);
  OutString(3,0,USetStr(10483),false);
  OutString(4,0,USetStr(10486),false);
  if (invf) then begin
    OutString(5,0,USetStr(10484),false);
  end else begin
    OutString(5,0,USetStr(10485),false);
  end;      
  OutString(7,0,USetStr(10496),true);
  OutString(8,0,USetStr(1532),false);
  EndFormat;
  Gray_Divider(0,1);
  RETURN;
END;

procedure PrintReceipts(record RcVc RepSpec)
BEGIN
  record IPVc IPr;
  row IPVc IPrw;
  Integer i,rwcnt;
  Boolean TrHs,firstf,testf;
  string 255 tstr;
  LongInt clin;
  
  firstf = true;
  TrHs = true;
  IPr.TransDate = RepSpec.sStartDate;
  while (LoopKey("TransDate",IPr,1,TrHs)) begin
    if (IPr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      testf = true;
      if (PMCheckType(IPr.PayMode,tstr,tstr)!=5) then begin
        testf = false;
      end;      
      if (CLInforIPExists(IPr.SerNr,"IPVc",clin)) then begin
        testf = false;
      end;
      if (testf) then begin
        if (firstf) then begin
          PrintHeader(false);
          firstf = false;
        end;
        StartFormat(15);
         OutString(0,"DblCuPerIP",IPr.SerNr,false);
         OutDate(3,0,IPr.TransDate,false);
         OutString(5,0,IPr.Comment,false);
         if (IPr.OKFlag!=0) then begin
           OutString(8,0,USetStr(10487),false);           
         end;
        EndFormat;
      end;
    end;
  end;
  RETURN;
END;

global
procedure IVnoCLInRn(record RcVc RepSpec)
BEGIN
  record IVVc IVr;
  Boolean TrHs,firstf,testf;
  LongInt frinv,toinv;
  LongInt clin;
  val totsum4;
  
  frinv = FirstInRange(RepSpec.f1,10);
  toinv = LastInRange(RepSpec.f1,10);
  StartReportJob(USetStr(10480));
  EndHeader;
  firstf = true;
  TrHs = true;
  IVr.InvType = kInvoiceTypeCash;
  IVr.SerNr = frinv;
  while (LoopKey("InvType",IVr,2,TrHs)) begin
    if (IVr.InvType!=kInvoiceTypeCash) then begin
      TrHs = false;
    end;
    if (nonblank(RepSpec.f1)) then begin
      if (IVr.SerNr>toinv) then begin
        TrHs = false;
      end;      
    end;
    if (TrHs) then begin
      testf = true;
      if (CLInforIVExists(IVr.SerNr,"IVVc",clin)) then begin
        testf = false;
      end;
      if (DateInRange(IVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;
      if (testf) then begin
        if (firstf) then begin
          PrintHeader(true);
          firstf = false;
        end;
        StartFormat(15);
         OutString(0,"DblCustPS2",IVr.SerNr,false);
         OutDate(3,0,IVr.TransDate,false);
         OutString(4,0,IVr.CustCode,false);
         OutString(5,0,IVr.Addr0,false);
         OutVal(7,0,IVr.Sum4,M4Val,true);
         if (IVr.OKFlag!=0) then begin
           OutString(8,0,USetStr(10487),false);           
         end;
        EndFormat;
        totsum4 = totsum4 + IVr.Sum4;
      end;  
    end;
  end;
  Gray_Divider(350,1);
  StartFormat(15);
   OutVal(7,0,totsum4,M4Val,true);
  EndFormat;
  if (RepSpec.flags[0]!=0) then begin
    PrintReceipts(RepSpec);
  end;
  EndJob;
  RETURN;
END;