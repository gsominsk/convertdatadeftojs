external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);
external procedure HT2Per(Date,Date,var string);

global
procedure CrStckRn(record RcVc RepSpec)
begin
  record IVVc IVr;
  Boolean TrHs,testf;
  Integer rw;
  string 200 tstr;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;

  StartReportJob(USetStr(8101));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,120);
  SetRepCol(4,200);
  SetRepCol(5,455);
  SetRepCol(6,460);
  StartFormat(15);
  OutString(0,0,USetStr(8102),false);
  OutString(2,0,USetStr(8103),false);
  OutString(3,0,USetStr(8104),false);
  OutString(4,0,USetStr(8105),false);
  OutString(5,0,USetStr(8106),true);
  OutString(6,0,USetStr(8107),false);
  EndFormat;
  BeginCurncyTotals(curcnt);
  IVr.TransDate = RepSpec.sStartDate;
  Gray_Divider(0,1);
  TrHs = true;
  while (LoopKey("TransDate",IVr,1,TrHs)) begin
    TrHs = true;
    if (DateInRange(IVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      TrHs = false;
    end;
    testf = true;
    if (IVr.InvType!=kInvoiceTypeCredit and IVr.InvType!=kInvoiceTypeCreditSpecialSales) then begin
      testf = false;
    end;
    if (IVr.OKFlag==0) then begin
      testf = false;
    end;
    if (IVr.UpdStockFlag==0) then begin
      if (RepSpec.ArtMode==0) then begin
        testf = false;
      end;
    end;
    if (IVr.Invalid<>0) then begin testf = false; end;
    if (testf==true) then begin
      StartFormat(15);
      OutLongInt(0,0,IVr.SerNr,false);
      OutDate(2,0,IVr.InvDate,false);
      OutString(3,0,IVr.CustCode,false);
      OutString(4,0,IVr.Addr0,false);
      OutVal(5,0,IVr.Sum4,M4Val,true);
      OutString(6,0,IVr.CurncyCode,false);
      EndFormat;
      AddCurncyTotals(acur,av1,curcnt,IVr.CurncyCode,IVr.Sum4);
    end;
  end;
  Gray_Divider(0,1);
  PrintCurncyTotals(acur,av1,av2,av3,curcnt,460,-1,-1,300,true,RepSpec.PocketPC);
  EndJob;
  return;
end;
