external function Boolean ReadAcceptanceRules(Integer,string,var record AcceptanceRulesVc);
external procedure PrintApprovalAcivity(record AcceptanceRulesVc,record ActVc,var Boolean);
external procedure GetStockValue(string,string,var record ItemStatusVc);
external function val GetIntORRowReserv(LongInt,string,string,var val,var string,var string,var string,Boolean);
external procedure HTNr(Integer,Integer,LongInt,LongInt,var string);

global
procedure IntORPrintApprovalActivities(record IntORVc IntORr)
begin
  record ActVc Actr;
  record AcceptanceRulesVc Acptr;
  Integer actnr;
  record RLinkVc RLr;
  Boolean firstf;

  ReadAcceptanceRules(kAcceptanceIntOR,"",Acptr);
  actnr = 1;
  while (ReadRecordLink(IntORr,actnr,Actr,RLr)) begin
    PrintApprovalAcivity(Acptr,Actr,firstf);      
    actnr = actnr + 1;
  end;
  return;
end;

global
procedure IntORStatRn(record RcVc RepSpec)
begin
  Boolean foundf, foundf2, foundf3, foundf4;
  Boolean testf;
  Integer i,rwcnt;
  Integer rw;
  record IntORVc IntORr;
  record POVc POr;
  record SDVc SDr;
  record StockMovVc StockMovr;
  record UserVc Userr;
  row IntORVc IntORrw;
  row POVc POrw;
  row SDVc SDrw;
  row StockMovVc StockMovrw;
  string 60 tstr,t2;
  val resrv,v;
  record ItemStatusVc ISr;
  LongInt afr,ato;
  
  StartReportJob(USetStr(14550));
  rw = 1;
  afr = FirstInRange(RepSpec.f2,30);
  ato = LastInRange(RepSpec.f2,30);
  IntORr.SerNr = afr;
  HTNr(14552,14551,afr,ato,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(repspec.f1)) then begin
    IntORr.OurUser = RepSpec.f1;
    Userr.Code = RepSpec.f1;
    if (ReadFirstMain(Userr,1,true)) then begin  
      tstr = Userr.Name;
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end else begin
    tstr = USetStr(14575);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;

  foundf = true;
  while(LoopMain(IntORr,1,foundf)) begin
    if (ato>0) then begin
      if (IntORr.SerNr>ato) then begin
        foundf = false;
      end;
    end;
    testf = foundf;
    if (nonblank(RepSpec.f1)) then begin 
      if (RepSpec.f1!=IntORr.OurUser) then begin
        testf = false;
      end;
    end;  
    if (testf) then begin
      StartFormat(20);
      OutString(0,0,USetStr(14553),false);
      EndFormat;  
      StartFormat(15)
      OutString(0,0,USetStr(14554),false);
      OutString(80,0,USetStr(14555),false);
      OutString(170,0,USetStr(14556),false);
      OutString(300,0,USetStr(14557),false);
      EndFormat;
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(0,"DblIntORVc",IntORr.SerNr,false);
      OutDate(80,0,IntORr.TransDate,false); 
      OutString(170,0,IntORr.Name,false); 
      OutString(300,0,IntORr.PlanShip,false);
      EndFormat;
      
      StartFormat(15)
      OutString(230,0,USetStr(14558),true);
      OutStringID(280,"DblIntORReservStatus",USetStr(5510),true,IntORr.SerNr);
      OutString(330,0,USetStr(14559),true);
      OutString(380,0,USetStr(14573),true);
      OutString(430,0,USetStr(14574),true);
      OutString(1,0,USetStr(14560),true);
      EndFormat;

      rwcnt = MatRowCnt(IntORr);    
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(IntORr,i,IntORrw);
        resrv = blankval;
        if (blank(IntORrw.ArtCode)) then begin
          RecordNew(ISr);
        end else begin
          GetStockValue(IntORrw.ArtCode,IntORr.Location,ISr);
        end;
        if (ISr.StockRsrvQty!=0) then begin
          resrv = GetIntORRowReserv(IntORr.SerNr,IntORrw.ArtCode,IntORrw.SerialNr,v,tstr,t2,t2,false);
        end;
        StartFormat(15);
        OutString(30,0,IntORrw.ArtCode,false); 
        OutString(100,0,IntORrw.Spec,false); 
        OutVal(230,0,IntORrw.Quant,M4Qty,true);
        OutVal(280,0,resrv,M4UVal,true);
        OutVal(330,0,IntORrw.Shipd1,M4Qty,true);
        OutVal(380,0,IntORrw.Sent,M4Qty,true);
        OutVal(430,0,IntORrw.POOrd,M4Qty,true);
        OutVal(1,0,IntORrw.Shipd2,M4Qty,true);
        EndFormat;
      end;
      
      StartFormat(15);
      EndFormat;
      StartFormat(15);
      OutString(0,0,USetStr(14561),false);
      EndFormat;
      StartFormat(15)
      OutString(0,0,USetStr(14562),false);
      OutString(80,0,USetStr(14563),false);
      OutString(170,0,USetStr(14564),false);
      EndFormat;
      Gray_Divider(0,1);    
      ResetLoop(StockMovr);
      foundf2 = true;
      StockMovr.IntORNo = IntORr.SerNr;
      while (LoopKey("IntORNo",StockMovr,1,foundf2)) begin
        if (StockMovr.IntORNo!=IntORr.SerNr) then begin
          foundf2 = false;
        end;      
        if (foundf2) then begin     
          StartFormat(15);
          OutString(0,"DblStockMov",StockMovr.SerNr,false); 
          OutString(80,0,StockMovr.FrLocation,false); 
          OutString(170,0,StockMovr.ToLocation,false);      
          EndFormat;
          rwcnt = MatRowCnt(StockMovr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(StockMovr,i,StockMovrw);
            StartFormat(15);
            OutString(30,0,StockMovrw.ArtCode,false);      
            OutString(100,0,StockMovrw.Quant,false);      
            OutString(300,0,StockMovrw.Spec,false);
            EndFormat;
          end;
        end;
      end;     
      
      StartFormat(15);
      EndFormat;
      StartFormat(15);
      OutString(0,0,USetStr(14565),false);
      EndFormat;
      StartFormat(15)
      OutString(0,0,USetStr(14566),false);
      OutString(80,0,USetStr(14567),false);
      OutString(170,0,USetStr(14568),false);
      EndFormat;
      Gray_Divider(0,1);    
      resetloop(SDr);
      foundf3= true;
      SDr.IntORNo = IntORr.SerNr;
      while (loopkey("IntORNo",SDr,1,foundf3)) begin
        if (SDr.IntORNo != IntORr.SerNr) then begin
          foundf3 = false;
        end;      
        if (foundf3) then begin     
          StartFormat(15);
          OutString(0,"DblSD",SDr.SerNr,false); 
          OutString(80,0,SDr.Location,false); 
          OutString(170,0,SDr.CostAcc,false);      
          EndFormat;
          StartFormat(15);
          EndFormat;   
          rwcnt = MatRowCnt(SDr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(SDr,i,SDrw);
            StartFormat(15);
            OutString(30,0,SDrw.ArtCode,false);      
            OutString(100,0,SDrw.Spec,false);
            OutString(300,0,SDrw.Qty,false);      
            EndFormat;
          end;
        end;
      end;
      
      StartFormat(15);
      EndFormat;
      StartFormat(15);
      OutString(0,0,USetStr(14569),false);
      EndFormat;
      StartFormat(15)
      OutString(0,0,USetStr(14570),false);
      OutString(80,0,USetStr(14571),false);
      OutString(170,0,USetStr(14572),false);
      EndFormat;
      Gray_Divider(0,1);    
      ResetLoop(POr);
      foundf4 = true;
      POr.IntORNo = IntORr.SerNr;
      while (LoopKey("IntORNo",POr,1,foundf4)) begin
        if (POr.IntORNo!=IntORr.SerNr) then begin
          foundf4 = false;
        end;      
        if (foundf4) then begin     
          StartFormat(15);
          OutString(0,"DblPOVc",POr.SerNr,false); 
          OutString(80,0,POr.VECode,false); 
          OutString(170,0,POr.TransDate,false);      
          EndFormat;
          StartFormat(15);
          EndFormat;   
          rwcnt = MatRowCnt(POr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(POr,i,POrw);
            StartFormat(15);
            OutString(30,0,POrw.ArtCode,false);      
            OutString(100,0,POrw.Quant,false);      
            OutString(300,0,POrw.Spec,false);
            EndFormat;
          end;
        end;
      end;
      Black_Divider(0,1);    
      IntORPrintApprovalActivities(IntORr);
    end;
  end;
  EndJob;
  return;
end;
