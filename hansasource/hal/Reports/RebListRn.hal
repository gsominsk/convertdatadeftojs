
external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);

global
procedure RebListRn(record RcVc RepSpec)
BEGIN
  record CUVc CUr;
  record CCatVc CCatr;
  record RebVc Rebr;
  row RebVc Rebrw;
  Integer i,rw,rwcnt;
  string 255 tstr,t2;
  string 20 frcu,tocu;
  Boolean TrHs,testf;
  
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(8115));
   rw = 1;
   if (nonblank(RepSpec.f1)) then begin
     tstr = USetStr(1105);
     tstr = tstr & frcu;
     tstr = tstr & ":";
     tstr = tstr & tocu;
   end else begin
     tstr = USetStr(1104);
   end;
   Header(rw,tstr,1);
   rw = rw + 1;  
   if (HasCategories) then begin
     HTCustCat(RepSpec.f2,tstr);
     if (nonblank(tstr)) then begin
       Header(rw,tstr,1);
       rw = rw + 1;
     end;
   end;
   if (HasContactClassification) then begin
     HTCustClass(RepSpec.f3,tstr);
     if (nonblank(tstr)) then begin
       Header(rw,tstr,1);
       rw = rw + 1;
     end;
   end;
   if (nonblank(RepSpec.AccStr)) then begin
     tstr = USetStr(8116);
     tstr = tstr & RepSpec.AccStr;
     Header(rw,tstr,1);     
     rw = rw + 1;  
   end;
  EndHeader;
  if (RepSpec.flags[0]==0) then begin
    SetRepCol(2,70);
    SetRepCol(3,330);
    SetRepCol(4,400);
     StartFormat(15);
      OutString(0,0,USetStr(8117),false);
      OutString(2,0,USetStr(8118),false);
      OutString(3,0,USetStr(8119),false);
      OutString(4,0,USetStr(8120),false);
     EndFormat;            
  end;  
  if (RepSpec.flags[0]==1) then begin
    SetRepCol(2,70);
    SetRepCol(3,330);
    SetRepCol(4,400);
     StartFormat(15);
      OutString(0,0,USetStr(8117),false);
      OutString(2,0,USetStr(8118),false);
      OutString(3,0,USetStr(8119),false);
      OutString(4,0,USetStr(8120),false);
     EndFormat; 
     StartFormat(15);
      OutString(2,0,USetStr(8121),false);
     EndFormat; 
   end;  
  Gray_Divider(0,1);
  CUr.Code = frcu;
  TrHs = true;
  while (LoopMain(CUr,1,TrHs)) begin
    if (nonblank(tocu)) then begin
      if (CUr.Code>tocu) then begin TrHs = false; end;
    end;
    testf = true; 
    if (TrHs==false) then begin testf = false; end;
    if (CUr.CUType==0) then begin testf = false; end;
    if (testf) then begin
      testf = ContactInGroupClass("",RepSpec.f2,RepSpec.f3,"CUST",CUr.CustCat,CUr.Classification);
    end;
    if (testf) then begin
      RecordNew(Rebr);
      if (nonblank(CUr.RebCode)) then begin
        Rebr.Code = CUr.RebCode;
      end;
      if (blank(CUr.RebCode)) then begin
        CCatr.Code = CUr.CustCat;
        if (ReadFirstMain(CCatr,1,true)) then begin
          if (nonblank(CCatr.RebCode)) then begin
            Rebr.Code = CCatr.RebCode;
          end;
        end;
      end;
      if (ReadFirstMain(Rebr,1,true)) then begin
        if (nonblank(RepSpec.AccStr)) then begin
          if (Rebr.Code<>RepSpec.AccStr) then begin
            testf = false;
          end;
        end;  
        if (testf) then begin
          if (RepSpec.flags[0]==0) then begin
            StartFormat(15);
             OutString(0,"DblCUVc",CUr.Code,false);
             OutString(2,0,CUr.Name,false);
             OutString(3,"DblRebVc",Rebr.Code,false);
             OutString(4,"DblStaffVc",Rebr.StaffCode,false);
            EndFormat;            
          end;  
          if (RepSpec.flags[0]==1) then begin
            Gray_Divider(0,1);
            StartFormat(15);
             OutString(0,"DblCUVc",CUr.Code,false);
             OutString(2,0,CUr.Name,false);
             OutString(3,"DblRebVc",Rebr.Code,false);
             OutString(4,"DblStaffVc",Rebr.StaffCode,false);
            EndFormat; 
            StartFormat(15);
             OutString(2,0,Rebr.Comment,false);
//             OutString(3,0,Rebr.DiscAcc,false);
//             OutString(4,0,Rebr.DiscPerc,true);
            EndFormat; 
            StartFormat(15);
             OutString(0,0,USetStr(8122),false);
             OutString(110,0,Rebr.StaffCode,false);
             OutString(192,0,Rebr.vra0,true);
             OutString(224,0,Rebr.vra1,true);
             OutString(256,0,Rebr.vra2,true);
             OutString(288,0,Rebr.vra3,true);
             OutString(320,0,Rebr.vra4,true);
             OutString(352,0,Rebr.vra5,true);
             OutString(384,0,Rebr.vra6,true);
             OutString(416,0,Rebr.vra7,true);
             OutString(448,0,Rebr.vra8,true);
             OutString(480,0,Rebr.vra9,true);
            EndFormat; 

            rwcnt = MatRowCnt(Rebr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(Rebr,i,Rebrw);
              StartFormat(15);
               OutString(0,0,STRINGFROMSET(14,Rebrw.CodeType),false);
               OutString(65,0,Rebrw.ITCode,false);
               OutString(110,0,Rebrw.StaffCode,false);
               OutString(192,0,Rebrw.vra0,true);
               OutString(224,0,Rebrw.vra1,true);
               OutString(256,0,Rebrw.vra2,true);
               OutString(288,0,Rebrw.vra3,true);
               OutString(320,0,Rebrw.vra4,true);
               OutString(352,0,Rebrw.vra5,true);
               OutString(384,0,Rebrw.vra6,true);
               OutString(416,0,Rebrw.vra7,true);
               OutString(448,0,Rebrw.vra8,true);
               OutString(480,0,Rebrw.vra9,true);
              EndFormat; 
            end;
          end;
        end;
      end;      
    end;//tstf
  end;
  EndJob;
  RETURN;
END;
