external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure HTNr(Integer, Integer, LongInt, LongInt, var string);
//external procedure OrdSettings(Integer,Integer,Integer,var string);
external procedure HT2Per(Date, Date , var string);
external procedure GetFullCurncyRateText(Boolean,var string,val,val,val,val,val);

procedure OrdSettings(Integer notord,Integer ord,Integer recon,var string res)
BEGIN
  string 255 tstr;
  
  res = "";
  if (notord==1) then begin
    res = USetStr(1326);
  end;  
  if (notord==1 and ord==1 and recon==0) then begin
    tstr = USetStr(1319);
    res = res & tstr;
  end else begin
    if (notord==1 and ord==1 and recon==1) then begin
      tstr = USetStr(1327);
      res = res & tstr;
    end;
  end;
  if (ord==1) then begin
    tstr = USetStr(1328);
    res = res & tstr;
  end;
  if ((notord==1 or ord==1) and recon==1) then begin
    tstr = USetStr(1319);
    res = res & tstr;
  end;
  if (recon==1) then begin
    tstr = USetStr(1329);
    res = res & tstr;
  end;
  RETURN;
END;

global
procedure PPRn(record RcVc RepSpec)
BEGIN
  Integer ovst;
  Boolean TrHs;
  Integer i,rwcnt,pmi,pmrows;
  record PPVc PPr;
  row PPVc PPrw;
  val opsum,totopsum,totrebsum,totapsum;
  Integer PMn;
  Boolean testf,test2f,prntdf;
  record PMBlock PMRec;
  row PMBlock pmrw;
  LongInt afr,ato;
  string 255 tstr;
  record SMVc SMr;
  row SMVc SMrw;
  Integer rw;
  string 2 paymode;

  BlockLoad(PMRec);
  pmrows = MatRowCnt(PMRec);
  RecordNew(SMr);
  for (i=0;i<pmrows;i=i+1) begin
    MatRowGet(PMRec,i,pmrw);
    SMrw.VATCode = pmrw.Code;
    SMrw.Comment = pmrw.Comment;
    SMrw.DebVal = 0;
    MatRowPut(SMr,i,SMrw);
  end;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  PPr.SerNr = afr;
  StartReportJob(USetStr(5161));
   rw = 1;    
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTNr(5172,5173,afr,ato,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   if (nonblank(RepSpec.f3)) then begin
     tstr = USetStr(1140);
     tstr = tstr & RepSpec.f3;
     Header(rw,tstr,1);
     rw = rw + 1;
   end;
   OrdSettings(RepSpec.flags[0],RepSpec.flags[1],RepSpec.flags[2],tstr);
   if (nonblank(tstr)) then begin
     Header(rw,tstr,1);
   end;  
  EndHeader;
  StartFormat(15);
   OutString(0,0,USetStr(5167),false);
   OutString(60,0,USetStr(5168),false);
   OutString(120,0,USetStr(5169),false);  //BS
   OutString(180,0,USetStr(5170),false);
   OutString(220,0,USetStr(5171),false);
  EndFormat;
  StartFormat(20);
   OutString(20,0,USetStr(5162),false);
   OutString(60,0,USetStr(5163),false);
   OutString(180,0,USetStr(5164),false);
   OutString(1,0,USetStr(5166),true);
  EndFormat;
  TrHs = true;
  while (LoopMain(PPr,1,TrHs)) begin
    if (ato<>-1) then begin
      if (PPr.SerNr>ato) then begin
        TrHs = false;
      end;
    end;        
    if (TrHs) then begin
      testf = true;
/*
      if (blank(RepSpec.f3) or (RepSpec.f3==PPr.PayMode)) then begin
        testf = false;
      end;
*/      
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (PPr.TransDate<RepSpec.sStartDate) then begin testf = false; end;
      end;  
      if (nonblankdate(RepSpec.sEndDate)) then begin
        if (PPr.TransDate>RepSpec.sEndDate) then begin testf = false; end;
      end;  
      if (PPr.OrderedFlag==0) then begin
        if (RepSpec.flags[0]==0) then begin
          testf = false;
        end;
      end;    
      if ((PPr.OrderedFlag==1) and (PPr.DoneFlag==0)) then begin
        if (RepSpec.flags[1]==0) then begin
          testf = false;
        end;  
      end;    
      if (PPr.DoneFlag!=0) then begin
        if (RepSpec.flags[2]==0) then begin
          testf = false;
        end;
      end;    
      if (PPr.Invalid!=0) then begin testf = false; end;      
      if (testf) then begin
        prntdf = false;
        /*
        PMn = 0;
        if (len(PPr.PayMode)>0) then begin
          for (i = 0; i<pmrows; i=i+1) begin
            MatRowGet(SMr,i,SMrw);
            if (SMrw.VATCode==PPr.PayMode) then begin
              PMn = i;
              SMrw.DebVal = SMrw.DebVal + PPr.BasePayVal;
              MatRowPut(SMr,i,SMrw);
              i = pmrows;
            end;
          end;
        end;
        */
        opsum = 0;
        rwcnt = MatRowCnt(PPr);
        for (i=0 ; i<rwcnt; i=i+1) begin
          MatRowGet(PPr,i,PPrw);
          ovst = PPrw.ovst;
          test2f = false;          
          paymode = PPr.PayMode;
          if (nonblank(PPrw.PayMode)) then begin
            paymode = PPrw.PayMode;
          end;
          if (blank(RepSpec.f3) or (RepSpec.f3==paymode)) then begin
            test2f = true;
          end;
          if (test2f) then begin
            for (pmi=0;pmi<pmrows;pmi=pmi+1) begin
              MatRowGet(SMr,pmi,SMrw);
              if (SMrw.VATCode==paymode) then begin
                PMn = pmi;
                SMrw.DebVal = SMrw.DebVal + MulRateToBase1(PPr.CurncyCode,PPrw.PayVal,PPr.FrRate,PPr.ToRateB1,PPr.ToRateB2,PPr.BaseRate1,PPr.BaseRate2,DefaultCurRoundOff);
                MatRowPut(SMr,pmi,SMrw);
                pmi = pmrows;
              end;
            end;
          
            if (prntdf==false) then begin
              Gray_Divider(0,1);
              StartFormat(15);
              OutLongInt(0,0,PPr.SerNr,false);
              OutDate(60,0,PPr.RegDate,false);
              OutDate(120,0,PPr.TransDate,false);
              OutString(180,0,PPr.Sign,false);
              OutString(220,0,PPr.BankAcc,false);
              EndFormat;
              prntdf = true;
            end;          
            totopsum = totopsum + MulRateToBase1(PPr.CurncyCode,PPrw.PayVal,PPr.FrRate,PPr.ToRateB1,PPr.ToRateB2,PPr.BaseRate1,PPr.BaseRate2,DefaultCurRoundOff);
            if (ovst==0) then begin
              opsum = opsum + PPrw.PayVal;
            end;
           StartFormat(15);
            OutStringOvst(20,0,PPrw.Person,false,PPrw.ovst);
            OutStringOvst(60,0,PPrw.BankAcc,false,PPrw.ovst);
            OutStringOvst(180,0,PPrw.Comment,false,PPrw.ovst);
            OutValOvst(1,0,PPrw.PayVal,M4Val,true,PPrw.ovst);
            EndFormat;
            if (opsum<>0) then begin
              Black_Divider(350,1);
              StartFormat(15);
              OutString(280,0,PPr.CurncyCode,true);
              GetFullCurncyRateText(true,tstr,PPr.FrRate,PPr.ToRateB1,PPr.ToRateB2,PPr.BaseRate1,PPr.BaseRate2);
              OutString(380,0,tstr,true);
              OutVal(1,0,opsum,M4Val,true);
              EndFormat;
              if (PPr.ExtraCost<>0) then begin
                StartFormat(15);
                OutVal(1,0,PPr.ExtraCost,M4Val,true);
                EndFormat;
              end;
              if (PPr.BasePayVal<>PPr.PayVal) then begin
                StartFormat(15);
                OutVal(1,0,PPr.BasePayVal,M4Val,true);
                EndFormat;
              end;
            end;
          end;
        end;  
      end;
    end;
  end;
  if (totopsum!=0) then begin
    Gray_Divider(0,1);
    StartFormat(10);
    EndFormat;
    for (i=0; i<pmrows; i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      if (SMrw.DebVal<>0) then begin
        StartFormat(15);
        OutString(300,0,SMrw.VATCode,false);
        OutString(350,0,SMrw.Comment,false);
        OutVal(1,0,SMrw.DebVal,M4Val,true);
        EndFormat;
      end;
    end;
    Black_Divider(0,1);
    StartFormat(15);
    OutString(350,0,USetStr(2429),false); 
    OutVal(1,0,totopsum,M4Val,true);
    EndFormat;
  end;
  EndJob;   
  RETURN;
END;
