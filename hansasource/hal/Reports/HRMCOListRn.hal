external procedure HTEmployees(string,string,var string);
external procedure HTHRMCOs(LongInt,LongInt,var string);
external procedure HTOKF(Integer,Integer, var string);
external procedure HTDepartments(string,string,var string);
external procedure HTJobTitles(string,string,var string);
external procedure HTDetailLevel(Integer, var string);
external procedure HT2Per2(Integer,Date, Date , var string);

function Boolean TestSelection(record HRMCOVc HRMCOr,record RcVc RepSpec)
begin
  Boolean testf;
  string 255 fremp,toemp;
  string 255 frskill,toskill;
  LongInt frhrmco,tohrmco;
  Date sd,ed;
  record HRMCOChangeVc HRMCOCr;
  
  frhrmco = FirstInRange(RepSpec.f1,10);
  tohrmco = LastInRange(RepSpec.f1,10);
  fremp = FirstInRange(RepSpec.f2,20);
  toemp = LastInRange(RepSpec.f2,20);
  testf = true;
  if (nonblank(RepSpec.f1)) then begin
    if (HRMCOr.SerNr<frhrmco) then begin testf = false; end;
    if (HRMCOr.SerNr>tohrmco) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.f2)) then begin
    if (HRMCOr.Employee<fremp) then begin testf = false; end;
    if (HRMCOr.Employee>toemp) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.FirstAcc)) then begin
    if (HRMCOr.DepCode!=RepSpec.FirstAcc) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.LastAcc)) then begin
    if (HRMCOr.Class!=RepSpec.LastAcc) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.f3)) then begin
    if (HRMCOr.JobTitle!=RepSpec.f3) then begin testf = false; end;
  end;

  if (nonblank(RepSpec.Period2Str)) then begin
    if (DateInRange(HRMCOr.StartDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.Stext)) then begin
    sd = StringToDate(FirstInRange(RepSpec.Stext,10));
    ed = StringToDate(LastInRange(RepSpec.Stext,10));  
    if (DateInRange(HRMCOr.EndDate,sd,ed)==false) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.f11)) then begin
    sd = StringToDate(FirstInRange(RepSpec.f11,10));
    ed = StringToDate(LastInRange(RepSpec.f11,10));  
    if (DateInRange(HRMCOr.TrialEndDate,sd,ed)==false) then begin testf = false; end;
  end;
  if (nonblank(RepSpec.f12)) then begin
    sd = StringToDate(FirstInRange(RepSpec.f12,10));
    ed = StringToDate(LastInRange(RepSpec.f12,10));  
    HRMCOCr.HRMCOSerNr = HRMCOr.SerNr;
    HRMCOCr.TransDate = sd;
    LoopKey("HRMCONrDate",HRMCOCr,2,true);
    if (DateInRange(HRMCOCr.TransDate,sd,ed)==false) then begin testf = false; end;
  end;
  if (RepSpec.flags[3]==0 and HRMCOr.TerminatedFlag!=0) then begin
    testf = false;
  end;

  TestSelection = testf;
  return;
end;

procedure PrintHeader(record RcVc RepSpec)
begin
  Integer rw;
  string 255 tstr;
  string 255 fremp,toemp;
  string 255 frskill,toskill;
  LongInt frhrmco,tohrmco;
  Date sd,ed;
  
  frhrmco = FirstInRange(RepSpec.f1,10);
  tohrmco = LastInRange(RepSpec.f1,10);
  fremp = FirstInRange(RepSpec.f2,20);
  toemp = LastInRange(RepSpec.f2,20);
  rw = 1;
  HTEmployees(fremp,toemp,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  tstr = USetStr(19161);
  switch (RepSpec.flags[1]) begin
    case 0: tstr = tstr & USetStr(19162);
    case 1: tstr = tstr & USetStr(19163);
  end;
  Header(rw,tstr,0);
  HTHRMCOs(frhrmco,tohrmco,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTOKF(RepSpec.flags[1],RepSpec.flags[2],tstr);
  Header(rw,tstr,0);

  HTDepartments(RepSpec.FirstAcc,RepSpec.FirstAcc,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTJobTitles(RepSpec.f3,RepSpec.f3,tstr);
  Header(rw,tstr,0);
  HTDetailLevel(RepSpec.ArtMode,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HT2Per2(19186,RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.Stext)) then begin
    sd = StringToDate(FirstInRange(RepSpec.Stext,10));
    ed = StringToDate(LastInRange(RepSpec.Stext,10));  
    HT2Per2(19187,sd,ed,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f11)) then begin
    sd = StringToDate(FirstInRange(RepSpec.f11,10));
    ed = StringToDate(LastInRange(RepSpec.f11,10));  
    HT2Per2(19188,sd,ed,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f12)) then begin
    sd = StringToDate(FirstInRange(RepSpec.f12,10));
    ed = StringToDate(LastInRange(RepSpec.f12,10));  
    HT2Per2(19189,sd,ed,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.LastAcc)) then begin
    tstr = USetStr(19185) & ": " & RepSpec.LastAcc;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  return;
end;

procedure HRMCOList(record RcVc RepSpec)
begin
  record HRMCOVc HRMCOr;
  Boolean found,testf;
  string 255 ckey;
  string 255 fremp,toemp;
  LongInt frhrmco,tohrmco;
  Integer cnt;
  record HRMCOChangeVc HRMCOCr;
  Boolean foundcoc,firstcoc;
  
  frhrmco = FirstInRange(RepSpec.f1,10);
  tohrmco = LastInRange(RepSpec.f1,10);
  fremp = FirstInRange(RepSpec.f2,20);
  toemp = LastInRange(RepSpec.f2,20);
  switch (RepSpec.flags[0]) begin
    case 0:
     ckey = "Employee";
     HRMCOr.Employee = fremp;
    case 1: 
      ckey = "Name";
    case 2: 
      ckey = "DepCode";
      HRMCOr.DepCode = RepSpec.FirstAcc;
    case 3: 
      ckey = "SerNr";
      HRMCOr.SerNr = frhrmco;
  end;
  found = true;
  while (LoopKey(ckey,HRMCOr,1,found)) begin
    switch (RepSpec.flags[0]) begin
      case 0: 
        if (nonblank(RepSpec.f2)) then begin
          if (HRMCOr.Employee>toemp) then begin found = false; end;
        end;
      case 1: 
      case 2: 
        if (nonblank(RepSpec.FirstAcc)) then begin
          if (HRMCOr.Employee!=RepSpec.FirstAcc) then begin found = false; end;
        end;
      case 3: 
        if (nonblank(RepSpec.f1)) then begin
          if (HRMCOr.SerNr>tohrmco) then begin found = false; end;
        end;
    end;
    if (found) then begin
      testf = TestSelection(HRMCOr,RepSpec);
      
      if (testf) then begin
        StartFormat(15);
         OutString(0,"DblHRMCOVc",HRMCOr.SerNr,false);
         OutDate(2,0,HRMCOr.StartDate,false);
         OutString(3,0,HRMCOr.Employee,false);
         OutString(4,0,HRMCOr.Name,false);
         OutString(5,0,HRMCOr.JobTitle,false);
         OutString(6,0,HRMCOr.DepCode,false);
        EndFormat;
        if (RepSpec.ArtMode==1) then begin
          Gray_Divider(0,1);
          StartFormat(15);
           OutString(15,0,USetStr(19195),false);
           OutString(100,0,USetStr(19196),false);
           OutString(180,0,USetStr(19197),false);
           OutString(270,0,USetStr(19198),false);
          EndFormat;          
          Gray_Divider(0,320);
          StartFormat(15);
           OutDate(15,0,HRMCOr.TrialEndDate,false);
           OutDate(100,0,HRMCOr.EndDate,false);
           OutString(180,0,StringFromSet(470,HRMCOr.Reason),false);
           OutString(270,0,HRMCOr.ReasonDetails,false);
          EndFormat;          
          StartFormat(15);
           OutString(15,0,USetStr(19200),false);
           OutString(100,0,USetStr(19201),false);
           OutString(180,0,USetStr(19202),false);
          EndFormat;          
          Gray_Divider(0,220);
          StartFormat(15);
           OutString(15,0,StringFromSet(463,HRMCOr.SalaryType),false);
           OutVal(100,0,HRMCOr.GrossSalary,M4Val,false);
           OutString(180,0,HRMCOr.CurncyCode,false);
          EndFormat;          
          if (nonblank(HRMCOr.Comment)) then begin
            StartFormat(15);
             OutString(15,0,USetStr(19199) & ": " & HRMCOr.Comment,false);
            EndFormat;          
          end;
          ResetLoop(HRMCOCr);
          firstcoc = true;
          foundcoc = true;
          HRMCOCr.HRMCOSerNr = HRMCOr.SerNr;
          while (LoopKey("HRMCONrDate",HRMCOCr,1,foundcoc)) begin
            if (HRMCOCr.HRMCOSerNr!=HRMCOr.SerNr) then begin foundcoc = false; end;
            if (foundcoc) then begin
              if (firstcoc) then begin
                Gray_Divider(0,1);
                StartFormat(15);
                 OutString(15,0,USetStr(19203),false);
                 OutString(130,0,USetStr(19204),false);
                 OutString(210,0,USetStr(19205),false);
                EndFormat;          
                firstcoc = false;
                Gray_Divider(0,220);
              end;
              StartFormat(15);
               OutString(15,"DblHRMCOChangeVc",HRMCOCr.SerNr,false);
               if (HRMCOCr.OKFlag!=0) then begin
                 OutString(85,0,uchr(10004),false);
               end;
               OutString(130,0,HRMCOCr.TransDate,false);
               OutString(210,0,HRMCOCr.Comment,false);
              EndFormat;          
            end;
          end;
          Black_Divider(0,1);
        end;
        cnt = cnt + 1;
      end;
    end;
  end;
  StartFormat(15);
   OutString(0,0,USetStr(19194) & ": " & cnt,false);
  EndFormat;
  return;
end;

global
procedure HRMCOListRn(record RcVc RepSpec)
begin
//  RepSpec.Stext = RepSpec.sStartDate2 & ":" & RepSpec.sEndDate2;
//only when reportnigperiods on
  StartReportJob(USetStr(19180));
   PrintHeader(RepSpec);
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,130);
  SetRepCol(4,190);
  SetRepCol(5,300);
  SetRepCol(6,430);
  switch (RepSpec.ArtMode) begin
    case 0:
      StartFormat(15);
       OutString(0,0,USetStr(19190),false);
       OutString(2,0,USetStr(19191),false);
       OutString(3,0,USetStr(19182),false);
       OutString(4,0,USetStr(19183),false);
       OutString(5,0,USetStr(19192),false);
       OutString(6,0,USetStr(19184),false);
      EndFormat;
      Gray_Divider(0,1);
      HRMCOList(RepSpec);
    case 1:
      StartFormat(15);
       OutString(0,0,USetStr(19190),false);
       OutString(2,0,USetStr(19191),false);
       OutString(3,0,USetStr(19182),false);
       OutString(4,0,USetStr(19183),false);
       OutString(5,0,USetStr(19192),false);
       OutString(6,0,USetStr(19184),false);
      EndFormat;
      Gray_Divider(0,1);
      HRMCOList(RepSpec);
  end;
  EndJob;
  return;
end;