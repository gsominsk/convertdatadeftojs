
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);
external procedure HT2Per(Date,Date,var string);

global
procedure ExpRn(record RcVc RepSpec)
begin
  record  ExpVc Expr;
  Boolean TrHs;
  String 255 tstr,crncy;
  Boolean testf,curncyperrowf,manycurncyf;
  Integer rw;
  val iv,TotSumB1;
  Integer rwcnt,i;
  LongInt afr,ato;
  val rs;
  val vatval,vatvalb1;
  row ExpVc Exprw;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;
  record BaseCurBlock BCb;

  BlockLoad(BCb);
  TotSumB1 = 0;
  BeginCurncyTotals(curcnt);
  rw = 1;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(5140));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.ArtMode==0) then begin
   tstr = USetStr(1159);
  end else begin
   tstr = USetStr(1160);
  end;
  Header(rw,tstr,0);
  if ((RepSpec.flags[1]==0) and (RepSpec.flags[2]==0)) then begin
   tstr = USetStr(1139);
  end;
  if RepSpec.flags[1]==0 then begin
  tstr = USetStr(1138);
  end;
  if RepSpec.flags[2]==0 then begin
    tstr = USetStr(1137);
  end;
  if ((RepSpec.flags[1]==0) or (RepSpec.flags[2]==0)) then begin
   Header(rw,tstr,1);
   rw = rw + 1;
  end;

  if ((afr==-1) and (ato==-1)) then begin
   tstr = USetStr(5151);
  end else begin
   tstr = USetStr(5152);
   tstr = tstr & afr;
   if (afr<>ato) then begin
    tstr = tstr & " : ";
    tstr = tstr & ato;
   end;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  if nonblank(RepSpec.f2) then begin
    tstr = USetStr(4830);
    tstr = tstr & " : " & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  if (RepSpec.ArtMode==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(5142),false);
    OutString(60,0,USetStr(5143),false);
    OutString(140,0,USetStr(5147),false);
    OutString(220,0,USetStr(5144),false);
    OutString(440,0,USetStr(5145),true);
    EndFormat;
    Gray_Divider(0,1);
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(5142),false);
    OutString(60,0,USetStr(5143),false);
    OutString(140,0,USetStr(5147),false);
    OutString(220,0,USetStr(5144),false);
    OutString(360,0,USetStr(5150),true);
    OutString(440,0,USetStr(5145),true);
    EndFormat;
/*
    StartFormat(15);
    EndFormat;
*/
  end;
  Expr.SerNr = afr;
  Gray_Divider(0,1);
  TrHs = true;

  while (LoopMain(Expr,1,TrHs)) begin
    TrHs = true;
    if ((ato<>-1) and (Expr.SerNr>ato)) then  begin
      TrHs = false;
    end;
    if (TrHs) then begin
        testf = false;
    end;
    if (blank(RepSpec.f2) or (RepSpec.f2==Expr.Person)) then begin
      if ((RepSpec.flags[1]<>0) and (Expr.OKFlag==0)) then begin
        testf = true;
      end;
      if ((RepSpec.flags[2]<>0) and (Expr.OKFlag<>0)) then begin
        testf = true;
      end;
    end;
    if (nonblankdate(RepSpec.sStartDate)) then begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if ((Expr.TransDate<RepSpec.sStartDate) or (Expr.TransDate>RepSpec.sEndDate)) then begin
          testf = false;
        end;
      end;
    end;
    if (TrHs==false) then begin
      testf = false;
    end;
    if (Expr.Invalid!=0)then begin testf = false; end;
    if (testf) then begin
      manycurncyf = false;
      curncyperrowf = false;
      rs = blankval;
      vatvalb1 = blankval;
      iv = Expr.PayVal;
      vatval = Expr.CalcVATVal;
      
      rwcnt = MatRowCnt(Expr);
      for (i=0; i<rwcnt; i=i+1) begin
        MatRowGet(Expr,i,Exprw);
        if (Exprw.stp<>0) then begin
          if (Exprw.stp==1) then begin
            if (nonblank(Exprw.BankCurncy)) then begin
              curncyperrowf = true;
            end;
            if (nonblank(Exprw.BankCurncy)) and (Exprw.BankCurncy!=Expr.CurncyCode) then begin
              manycurncyf = true;
            end;
            crncy = Exprw.BankCurncy;
            if (blank(crncy)) then begin
              crncy = Expr.CurncyCode;
            end;
            AddCurncyTotals(acur,av1,curcnt,crncy,Exprw.VATSum);
            AddCurncyTotals(acur,av2,curcnt,crncy,Exprw.Sum);
            if (Exprw.BaseSum>0) then begin
              AddCurncyTotals(acur,av3,curcnt,crncy,Exprw.BaseSum);
            end else begin
              AddCurncyTotals(acur,av3,curcnt,crncy,MulRateToBase1(Expr.CurncyCode,Exprw.Sum,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff));
            end;
          end;
        end;
      end;
      if (curncyperrowf) then begin
        for (i=0; i<rwcnt; i=i+1) begin
          MatRowGet(Expr,i,Exprw);
          if (Exprw.stp<>0) then begin
            if (Exprw.stp==1) then begin
              if (Exprw.BaseSum>0) then begin
                rs = rs + Exprw.BaseSum;
              end else begin
                if (blank(Exprw.BankCurncy)) then begin
                  rs = rs + MulRateToBase1(Expr.CurncyCode,Exprw.Sum,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
                end else begin
                  rs = rs + MulRateToBase1(Exprw.BankCurncy,Exprw.Sum,Exprw.FrRateBankVal,Exprw.ToRateB1BankVal,Exprw.ToRateB2BankVal,Exprw.BaseRate1BankVal,Exprw.BaseRate2BankVal,DefaultCurRoundOff);
                end;
              end;
              if (manycurncyf) then begin
                vatvalb1 = vatvalb1 + Exprw.BaseVATSum;
              end else begin
                if (blank(Exprw.BankCurncy)) then begin
                  vatvalb1 = vatvalb1 + MulRateToBase1(Expr.CurncyCode,Exprw.VATSum,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
                end else begin
                  vatvalb1 = vatvalb1 + MulRateToBase1(Exprw.BankCurncy,Exprw.VATSum,Exprw.FrRateBankVal,Exprw.ToRateB1BankVal,Exprw.ToRateB2BankVal,Exprw.BaseRate1BankVal,Exprw.BaseRate2BankVal,DefaultCurRoundOff);
                end;
              end;
            end;
          end;
        end;
        if (manycurncyf) then begin
          iv = blankval;
          vatval = blankval;
        end;
      end else begin
        rs = MulRateToBase1(Expr.CurncyCode,Expr.PayVal,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
        vatvalb1 = MulRateToBase1(Expr.CurncyCode,Expr.CalcVATVal,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
        vatval = Expr.CalcVATVal;
      end;
      TotSumB1 = TotSumB1 + rs;
      if (RepSpec.ArtMode==0) then begin
        StartFormat(15);
        OutLongInt(0,"DblExpVc",Expr.SerNr,false);
        OutDate(60,0,Expr.TransDate,false);
        OutString(140,0,Expr.Person,false);
        OutString(220,0,Expr.Name,false);
        if (rs!=iv and manycurncyf==false) then begin
          tstr = "(";
          tstr = tstr & rs;
          tstr = tstr & ")";
          tstr = tstr & iv;
        end else begin
          if (manycurncyf) then begin
            tstr = rs;
          end else begin
            tstr = iv;
          end;
        end;  
        OutString(440,0,tstr,true);
        if (manycurncyf) then begin
          OutString(445,0,BCb.BaseCur1,false);
        end else begin
          OutString(445,0,Expr.CurncyCode,false);
        end;
        EndFormat;
       end;
       if (RepSpec.ArtMode==1) then begin
         Gray_Divider(0,1);
         StartFormat(15);
         OutLongInt(0,"DblExpVc",Expr.SerNr,false);
         OutDate(60,0,Expr.TransDate,false);
         OutString(140,0,Expr.Person,false);
         OutString(220,0,Expr.Name,false);
         EndFormat;
         rwcnt = MatRowCnt(Expr);
         for (i=0; i<rwcnt; i=i+1) begin
           MatRowGet(Expr,i,Exprw);
           if (Exprw.stp<>0) then begin
             if (Exprw.stp==1) then begin
               StartFormat(15);
               OutString(20,0,Exprw.AccNumber,false);
               OutString(80,0,Exprw.Objects,false);
               OutString(150,0,Exprw.Comment,false);
               OutVal(360,0,Exprw.VATSum,M4Val,true);
               OutVal(440,0,Exprw.Sum,M4Val,true);
               crncy = Exprw.BankCurncy;
               if (blank(crncy)) then begin
                 crncy = Expr.CurncyCode;
               end;
               OutString(445,0,crncy,false);
               EndFormat;
             end;
           end;
         end;
        Gray_Divider(220,480);
        StartFormat(15);
        OutString(220,0,USetStr(5146),false);
        if (vatval!=vatvalb1 and manycurncyf==false) then begin
          tstr = "(";
          tstr = tstr & vatvalb1;
          tstr = tstr & ")";
          tstr = tstr & vatval;
        end else begin
          if (manycurncyf) then begin
            tstr = vatvalb1;
          end else begin
            tstr = vatvalb1;
          end;
        end;   
        OutString(360,0,tstr,true);
        if (rs!=iv and manycurncyf==false) then begin
          tstr = "(";
          tstr = tstr & rs;
          tstr = tstr & ")";
          tstr = tstr & iv;
        end else begin
          if (manycurncyf) then begin
            tstr = rs;
          end else begin
            tstr = iv;
          end;
        end;   
        OutString(440,0,tstr,true);
        if (manycurncyf) then begin
          OutString(445,0,BCb.BaseCur1,false);
        end else begin
          OutString(445,0,Expr.CurncyCode,false);
        end;
        EndFormat;
       end;
     end;
  end;
  StartFormat(15);
  EndFormat;
  Gray_Divider(0,1);
  PrintCurncyTotals(acur,av1,av2,av3,curcnt,360,440,480,220,true,RepSpec.PocketPC);
  Gray_Divider(220,1);
  StartFormat(15);
   OutString(220,0,USetStr(5146),false);
   OutVal(480,0,TotSumB1,M4Val,true);
  EndFormat;
  EndJob;
 return;
end;
