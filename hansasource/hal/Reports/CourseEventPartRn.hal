global
procedure CourseEventPartRn(record RcVc RepSpec)
begin
  record CourseEventVc CourseEventr;
  row CourseEventVc CourseEventrw;
  integer i,rwcnt;
  record ResVc Resr; 
  boolean TrHs,testf;
  integer rw,qty;
  string 255 tstr;
  record CUVc ContactCUr;
  record CUVc CUr;

  StartReportJob(USetStr(16800));
  CourseEventr.SerNr = RepSpec.long1;
  if (ReadFirstMain(CourseEventr,1,true)) then begin  
    rw = 1;
    tstr = USetStr(16801) & ": "& CourseEventr.SerNr;
    Header(rw,tstr,1);
    rw = rw + 1;
    tstr = USetStr(16802) & ": " & CourseEventr.CourseCode;
    tstr = tstr & ", " & CourseEventr.CourseName;
    Header(rw,tstr,1);
    rw = rw + 1;
    Header(rw,USetStr(16803) & ": " & CourseEventr.TransDate & ":" & CourseEventr.EndDate,1);
  end;
  
  EndHeader;

  if (RepSpec.ArtMode == 0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(16804),false);
    OutString(100,0,USetStr(16809),false);
    OutString(160,0,USetStr(16810),false);          
    OutString(265,0,USetStr(16805),false);          
    OutString(360,0,USetStr(16806),false);      
    OutString(1,0,USetStr(16807),true);        
    EndFormat;  
  end else begin
    StartFormat(15);
    OutString(0,0,USetStr(16804),false);
    OutString(120,0,USetStr(16809),false);
    OutString(280,0,USetStr(16805),false);      
    OutString(1,0,USetStr(16808),true);        
    EndFormat;
  end;
  Gray_Divider(0,1);

  rwcnt = MatRowCnt(CourseEventr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CourseEventr,i,CourseEventrw);
    testf = true;
    if (nonblankdate(CourseEventrw.CancelDate)) then begin
      testf = false;
    end;
    if (testf) then begin
      ContactCUr.Code = CourseEventrw.ContactCode;
      if (ReadFIrstMain(ContactCUr,1,true)) then begin end;

      switch (RepSpec.ArtMode) begin
        case 1:
          StartFormat(15);
          OutStringID(0,"DblCUVc",CourseEventrw.ContactName,false,CourseEventrw.ContactCode);
          OutString(120,"DblCUVc",CourseEventrw.CustCode,false);
          OutString(1,0,ContactCUr.Phone,true);            
          EndFormat;

          StartFormat(15);
          OutString(0,0,"",false);
          CUr.Code = CourseEventrw.CustCode;
          if ReadFirstMain(CUr,1,true) then begin 
            OutString(120,0,CUr.Name,false);
          end;      
          OutString(280,0,ContactCUr.InvAddr0,false);      
          OutString(1,0,ContactCUr.eMail,true);                            
          EndFormat;

          if (nonblank(ContactCUr.InvAddr1)) then begin          
            StartFormat(15);
            OutString(0,0,"",false);
            OutString(280,0,ContactCUr.InvAddr1,false);      
            EndFormat;          
          end;
          if (nonblank(ContactCUr.InvAddr2)) then begin
            StartFormat(15);
            OutString(0,0,"",false);
            OutString(280,0,ContactCUr.InvAddr2,false);            
            EndFormat;      
          end;
         
          StartFormat(15);
          Gray_Divider(0,1);   
        case 0:
          StartFormat(15);
          OutStringID(0,"DblCUVc",CourseEventrw.ContactName,false,CourseEventrw.ContactCode);
          OutString(100,"DblCUVc",CourseEventrw.CustCode,false);
          CUr.Code = CourseEventrw.CustCode;
          if ReadFirstMain(CUr,1,true) then begin 
            OutString(160,0,CUr.Name,false);
          end;  
          OutString(260,0,ContactCUr.InvAddr0,false);      
          OutString(360,0,ContactCUr.Phone,false);            
          OutString(1,0,ContactCUr.eMail,true);    
          EndFormat;
      end;
      qty = qty + 1;        
    end;
  end;

  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(16811) & ": " & ValToString(qty,M40Val,"","",0),false);
  EndFormat;

  
  EndJob
  return;
end;
