external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external procedure FindFiscalYear(Date,var Date,var Date);
external function LongInt DateDiff(Date,Date);

procedure LastInvoice(string CustCode,var val days)
begin
  record IVVc IVr;
  date LastDate;
  boolean TrHs,first;
  
  TrHs = true;
  first = true;
  
  IVr.CustCode = CustCode;
  while (LoopKey("CustCode",IVr,1,TrHs)) begin
    if (TrHs) then begin
      if (IVr.CustCode > CustCode) then begin
        TrHs = false;
      end;  
    end;
    if (TrHs) then begin
      if (first) then begin
        LastDate = IVr.TransDate;
        first = false;     
      end;   
      if (IVr.TransDate > LastDate) then begin
        LastDate = IVr.TransDate;
      end;
    end;
  end;
  days = DateDiff(CurrentDate,LastDate);
return;
end;

procedure FindAgreement(string CustCode,var boolean foundf)
begin
  record AgreementVc Agreementr;
  boolean TrHs, testf;
  
  TrHs = true;
  foundf = false;
  Agreementr.CustCode = CustCode;
  if (ReadFirstKey("CustCode",Agreementr,1,true)) then begin
    foundf = true;
  end;
return;
end;

global 
procedure MissedrentOppRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  boolean TrHs, testf,foundf;
  date FStartDate, FEndDate;
  val bal,days;
  string 255 tstr;
  integer rw;
  
  if (RepSpec.vals0 == 0) then begin
    RepSpec.vals0 = 90;
  end;
  
  StartReportJob(USetStr(12830));
  rw = 1;
  HTCustCat(RepSpec.f2,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTCustClass(RepSpec.f3,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(12831),false);
  OutString(60,0,USetStr(12832),false);
  OutString(200,0,USetStr(12833),false);
  OutString(290,0,USetStr(12834),false);
  OutString(450,0,USetStr(12835),true);
  OutString(1,0,USetStr(12836),true);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  CUr.Code = RepSpec.f1;
  while (LoopMain(CUr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f1)) then begin
        if (CUr.Code > RepSpec.f1) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (CUr.CUType == 0) then begin
        testf = false;
      end;
      if (CUr.blockedFlag <> 0) then begin
        testf = false;
      end;
      if (testf) then begin
        testf = ContactInGroupClass(CUr.Code,RepSpec.f2,RepSpec.f3,"CUST","","");
      end;
      if (testf) then begin
        FindAgreement(CUr.Code,foundf);
        if (foundf) then begin
          days = 0;
          LastInvoice(CUr.Code,days);
          if (days > RepSpec.vals0) then begin
            FindFiscalYear(CurrentDate,FStartDate,FEndDate);  
            bal = GetTurnover(CUr,"salesexclvat",FStartDate,FEndDate);
            StartFormat(15);
            OutString(0,"DblCUVc",CUr.Code,false);
            OutString(60,0,left(CUr.Name,25),false);
            OutString(200,0,CUr.Phone,false);
            OutString(290,0,CUr.Person,false);
            OutVal(450,0,bal,M4Val,true);
            OutVal(1,0,days,M40Val,true);
            EndFormat;
          end;
        end;
      end;
    end;
  end;
  EndJob; 
  return;
end;