external function Boolean GetPMRow(string,var row PMBlock);
external procedure HTDetailLevel(Integer, var string);
external procedure HTOKF(Integer,Integer, var string);
external procedure HT2Per(Date, Date , var string);

global
procedure ChqDepositJRn(record RcVc RepSpec)
begin
  record ChqDepVc ChqDepr;
  row ChqDepVc ChqDeprw;
  Integer i,rwcnt;
  Boolean found,testf;
  Integer rw;
  val tsum,tcash,totchkamount;
  string 100 tstr,mKey;
  record CheckVc Checkr;
  Boolean firstchqf;
  row PMBlock PMrw;

  StartReportJob(USetStr(19360));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if nonblank(RepSpec.f1) then begin
    tstr = USetStr(19367) & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if nonblank(RepSpec.FirstAcc) then begin
    tstr = USetStr(19368) & RepSpec.FirstAcc;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if nonblank(RepSpec.LastAcc) then begin
    tstr = USetStr(19365)  & RepSpec.LastAcc;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTOKF(RepSpec.flags[1],RepSpec.flags[2],tstr);
  Header(rw,tstr,0);
  HTDetailLevel(RepSpec.ArtMode,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;

  switch (RepSpec.ArtMode) begin
    case 0:
      SetRepCol(2,0);
      SetRepCol(3,50);  
      SetRepCol(4,120); 
      SetRepCol(5,160); 
      SetRepCol(6,280);
      SetRepCol(7,290); 
      SetRepCol(8,350); 

      StartFormat(15);
      OutString(2,0,USetStr(19361),false);
      OutString(3,0,USetStr(19362),false);
      OutString(4,0,USetStr(19368),false);
      OutString(5,0,USetStr(19367),false);
      OutString(6,0,USetStr(19364),true);
      OutString(7,0,USetStr(19374),false);
      OutString(8,0,USetStr(19370),false);
      OutString(1,0,USetStr(19371),true);
      EndFormat;
    case 1:
      SetRepCol(2,0);
      SetRepCol(3,50);  
      SetRepCol(4,110); 
      SetRepCol(5,200); 
      SetRepCol(6,260);
      SetRepCol(7,320); 
      SetRepCol(8,330); 

      StartFormat(15);
      OutString(2,0,USetStr(19361),false);
      OutString(3,0,USetStr(19362),false);
      OutString(4,0,USetStr(19368),false);
      OutString(5,0,USetStr(19372),true);
      OutString(6,0,USetStr(19373),true);
      OutString(7,0,USetStr(19364),false);
      OutString(8,0,USetStr(19374),false);
      EndFormat;

      StartFormat(15);
      OutString(3,0,USetStr(19361),false);
      OutString(4,0,USetStr(19370),false);
      OutString(5,0,USetStr(19375),false);
      OutString(6,0,USetStr(19376),false);
      OutString(400,0,USetStr(19377),false);
      OutString(1,0,USetStr(19371),true);
      EndFormat;
  end;
  Gray_Divider(0,1);
   
  if (RepSpec.flags[0]==1) then begin
    mKey = "TransDate";
  end else begin
    mKey = "SerNr";
  end;
  tsum = 0;
  found   = true;
  ResetLoop(ChqDepr);
  while (LoopKey(mKey,ChqDepr,1,found)) begin
    if (RepSpec.flags[0]==1) then begin
      if (DateInRange(ChqDepr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin found = false; end;
    end;
    if (found) then begin
       testf = true;
       if (DateInRange(ChqDepr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
       if ((RepSpec.f1<>ChqDepr.Objects) and nonblank(RepSpec.f1)) then begin
         testf = false;
       end;
       if ((RepSpec.FirstAcc<>ChqDepr.PayMode) and (not Blank(RepSpec.FirstAcc))) then begin
         testf = false;
       end;
       if ((RepSpec.LastAcc<>ChqDepr.CurncyCode) and (not Blank(RepSpec.LastAcc))) then begin
         testf = false;
       end;
       if ((RepSpec.flags[1]==0) and (ChqDepr.OKFlag!=0)) then begin
         testf = false;
       end;
       if ((RepSpec.flags[2]==0) and (ChqDepr.OKFlag==0)) then begin
         testf = false;
       end;
       if (testf) then begin
         firstchqf = true;
         switch (RepSpec.ArtMode) begin
           case 0:
             GetPMRow(ChqDepr.PayMode,PMrw);
             StartFormat(15);
             OutStringID(2,"DblChqDepVc",ChqDepr.SerNr,false,ChqDepr.SerNr);
             OutString(3,0,ChqDepr.TransDate,false);
             OutString(4,0,ChqDepr.PayMode,false);
             OutString(5,0,ChqDepr.Objects,false);
             OutString(6,0,ChqDepr.Sum,true);
             OutString(7,0,PMrw.AccNr,false);
             rwcnt = MatRowCnt(ChqDepr);
             for (i=0;i<rwcnt;i=i+1) begin
               MatRowGet(ChqDepr,i,ChqDeprw);
               if (firstchqf==false) then begin
                 StartFormat(15);
               end;
               OutString(8,"DblCheck2Vc",ChqDeprw.ChqNr,false);
               Checkr.SerNr = ChqDeprw.ChqNr;
               ReadFirstMain(Checkr,1,true);
               OutVal(1,0,Checkr.Amount,M4Val,true);
               EndFormat;
               firstchqf = true;
               totchkamount  = totchkamount  +  Checkr.Amount;
             end;
           case 1:
             StartFormat(15);
             OutStringID(2,"DblChqDepVc",ChqDepr.SerNr,false,ChqDepr.SerNr);
             OutString(3,0,ChqDepr.TransDate,false);
             OutString(4,0,ChqDepr.PayMode,false);
             OutVal(5,0,ChqDepr.Cash,M4Val,true);
             OutVal(6,0,ChqDepr.Sum-ChqDepr.Cash,M4Val,true);
             OutVal(7,0,ChqDepr.Sum,M4Val,true);
             EndFormat;
             rwcnt = MatRowCnt(ChqDepr);
             for (i=0;i<rwcnt;i=i+1) begin
               MatRowGet(ChqDepr,i,ChqDeprw);
               Checkr.SerNr = ChqDeprw.ChqNr;
               ReadFirstMain(Checkr,1,true);
               StartFormat(15);
               OutString(3,"DblCheck2Vc",ChqDeprw.ChqNr,false);
               OutString(4,0,Checkr.CheckNr,false);
               OutString(5,"DblCUVc",Checkr.CUCode,false);
               OutString(6,0,Checkr.CUName,false);
               OutString(400,0,Checkr.BankCode,false);
               OutVal(1,0,Checkr.Amount,M4Val,true);
               EndFormat;
             end;
         end;
         Gray_Divider(0,1);
         tsum  = tsum + ChqDepr.Sum;
         tcash = tcash + ChqDepr.Cash;
       end;
     end;
  end;

  switch (RepSpec.ArtMode) begin
    case 0:
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(2,0,USetStr(19369),false);
      OutVal(6,0,tsum,M4Val,true);
      OutVal(1,0,totchkamount,M4Val,true);
      EndFormat;
    case 1:
      StartFormat(15);
      OutString(2,0,USetStr(19369),false);
      OutVal(5,0,tcash,M4Val,true);
      OutVal(7,0,tsum,M4Val,true);
      EndFormat;
  end;
  EndJob;
  Return;
end;

