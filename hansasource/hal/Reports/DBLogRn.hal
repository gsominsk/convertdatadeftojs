procedure GetSize(LongInt sz,var string newszstr,var string sztype)
begin
  val newsz;
  val oldsz;
  
  oldsz = sz;
  if (oldsz>1024) then begin
    newsz = oldsz / 1024;
    sztype = USetStr(1481);
    if (newsz>1024) then begin
      newsz = newsz / 1024;
      sztype = USetStr(1482);
    end;
  end else begin
    newsz = oldsz;
    sztype = USetStr(1479);
  end;
  newszstr = newsz;
  return;
end;

global
procedure DBLogRn(record RcVc RepSpec)
begin
  record DBLogVc DBLogr;
  string 200 tstr;
  string 200 tstr2;
  string 200 tstr3;
  LongInt lastEvent;
  string 100 sz;
  Boolean found;

  StartReportJob(USetStr(11090));
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(11091),false);
  OutString(60,0,USetStr(11092),false);
  OutString(120,0,USetStr(11093),false);
  OutString(300,0,USetStr(11094),true);
  OutString(370,0,USetStr(11095),true);
  OutString(380,0,"",false);
  EndFormat;
  Gray_Divider(0,1);
  lastEvent = -1;
  found = true;
  DBLogr.EventDate = RepSpec.sStartDate;
  while (LoopKey("EventDate",DBLogr,1,found)) begin
    if (DBLogr.EventDate>RepSpec.sEndDate) then begin
      found = false;
    end;
    if (found) then begin
      if (lastEvent>-1) then begin
        if (DBLogr.EventType==eventProgStart) then begin
          if (lastEvent<>eventProgClose) then begin
            StartFormat(15);
            OutString(120,0,USetStr(11107),false);
            EndFormat;
          end;
        end;
        if (lastEvent==eventTBStart) then begin
          if (DBLogr.EventType<>eventTBEnd) then begin
            StartFormat(15);
            OutString(120,0,USetStr(11106),false);
            EndFormat;
          end;
        end;
      end;
      StartFormat(15);
      OutDate(0,0,DBLogr.EventDate,false);
      OutString(60,0,DBLogr.EventTime,false);
      tstr2 = "";
      switch (DBLogr.EventType) begin
        case eventProgStart:
          tstr = USetStr(11097);
        case eventProgClose:
          tstr = USetStr(11098);
        case eventDBOpen:
          tstr = USetStr(11099);
        case eventDBOpenDirty:
          tstr = USetStr(11100);
        case eventDBClose:
          tstr = USetStr(11101);
        case eventIMPStart:
          tstr = USetStr(11104);
        case eventIMPEnd:
          tstr = USetStr(11105);
        case eventTBStart:
          tstr = USetStr(11102);
        case eventTBEnd:
          tstr = USetStr(11103);
          tstr2 = USetStr(11096);
      end;
      OutString(120,0,tstr,false);
      GetSize(DBLogr.FreeDiskSpace,sz,tstr3);
      OutString(300,0,"" & sz & " " & tstr3,true);
      GetSize(DBLogr.DBSize,sz,tstr3);
      OutString(370,0,"" & sz & " " & tstr3,true);
      if (DBLogr.ExtraSize>-1) then begin
        OutString(380,0,tstr2 & ":",false);
        GetSize(DBLogr.ExtraSize,sz,tstr3);
        OutString(480,0,"" & sz & " " & tstr3,true);
      end else begin
        if (nonblank(DBLogr.ExtraInfo)) then begin
          OutString(380,0,DBLogr.ExtraInfo,false);
        end;
      end;
      EndFormat;
    end;
    lastEvent = DBLogr.EventType;
  end;
  EndJob;
  return;
end;
