external procedure HT2Per(date,date,var string);

function boolean GetLastProdPlan(var record ProdPlanIDVc PPr)
begin
  boolean res,TrHs;

  res = false;
  TrHs = true;
  PPr.SerNr = 9999999;
  if (LoopBackKey("SerNr",PPr,1,true)) then begin
    res = true;
  end;
  GetLastProdPlan = res;
  return;
end;

global
procedure ProdOperPlanRn(record RcVc RepSpec)
begin
  date sd;
  date ed;
  time st;
  time et;
  string 20 machine;
  boolean hidef;
  record ProdOperationVc ProdOpr;
  record ProdPlanIDVc PPr;
  record ProdPlanRecVc PPRr;
  record RoutingVc Router;
  boolean TrHs,TrHs2,testf;
  integer rw,rwc;
  record AT2UnitVc ATr;
  record ProdVc Prodr;
  row ProdVc Prodrw;
  record INVc INr;
  longint prevop;
  string 255 tstr;
  boolean foundf;

  StartReportJob(USetStr(32740));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  rw = 1;
  Header(rw,tstr,1);
  rw = rw + 1;
  if RepSpec.f1<>"" then begin
    tstr = USetStr(32741) & RepSpec.f1;
    header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  //PrintRepHeaders;
  sd = RepSpec.sStartDate;
  ed = RepSpec.sEndDate;
  st = "00:00:00";
  et = "23:59:59";
  machine = RepSpec.f1;
  if (GetLastProdPlan(PPr)) then begin
    PPRr.PlanID = PPr.SerNr;
//    PPRr.StartDate = sd;
//    PPRr.StartTime = st;
    TrHs = true;
    ResetLoop(PPRr);
    StartFormat(15);
    OutString(0,0,USetStr(32742) & PPr.SerNr,false);
    EndFormat;
    SetRepCol(2,30);
    SetRepCol(7,60);
    SetRepCol(3,140);
    SetRepCol(4,220);
    SetRepCol(8,330);
    SetRepCol(9,340);
    SetRepCol(5,410);
    SetRepCol(6,480);
    StartFormat(15);
    OutString(0,0,USetStr(32743),false);
    OutString(2,0,USetStr(32744),false);
    OutString(7,0,USetStr(32745),false);
    OutString(3,0,USetStr(32746),false);
    if (RepSpec.flags[1]==0) then begin
      OutString(4,0,USetStr(32747),false);
    end;
    OutString(8,0,USetStr(32748),true);
    OutString(9,0,USetStr(32749),false);
    OutString(5,0,USetStr(32750),false);
    OutString(6,0,USetStr(32751),true);
    EndFormat;
    Black_divider(0,1);
    while loopkey("StartDate",PPRr,3,TrHs) begin
      if ((PPRr.PlanID!= PPr.SerNr) or (PPRr.StartDate > ed) or (PPRr.StartDate == ed and PPRr.StartTime > et)) then begin
        TrHs = false;
      end else begin
        testf = true;
        if (RepSpec.long1>0 and RepSpec.long1 <> PPrr.ProdNr) then begin
          testf = false;
        end;
        if testf then begin
          ProdOPr.SerNr = PPRr.ProdOpNr;
          if (ReadFirstMain(ProdOPr,1,true)) then begin
            if (nonblank(RepSpec.f1) and RepSpec.f1 <> ProdOPr.Machine) then begin
              testf = false;
            end;
            if (nonblank(RepSpec.f4) and ProdOpr.Location <> RepSpec.f4) then begin
              testf = false;
            end;
            if (nonblank(RepSpec.f5) and ProdOpr.MachineGroup <> RepSpec.f5) then begin
              testf = false;
            end;
            if (nonblank(RepSpec.f6) and ProdOpr.DisplayGroup <> RepSpec.f6) then begin
              testf = false;
            end;
          end else begin
            testf = false;
          end;
        end;  
        if (testf) then begin
          Prodr.SerNr = PPRr.ProdNr;
          if (ReadFirstMain(Prodr,1,true)) then begin
            if (nonblank(RepSpec.f3) and Prodr.Recepy<>RepSpec.f3) then begin
              testf = false;
            end;
            if (nonblank(RepSpec.f2)) then begin
              rwc = MatRowCnt(Prodr);
              foundf = false;
              for (rw = 0; rw < rwc; rw = rw + 1) begin
                MatRowGet(Prodr,rw,Prodrw);
                if (Prodrw.OutQty>0) then begin
                  foundf = true;
                  Inr.Code = Prodrw.Item;
                  if (ReadFirstMain(INr,1,true)) then begin
                    if (INr.Group<>RepSpec.f2) then begin
                      testf = false;
                      rw = rwc;
                    end;
                  end;
                end;
              end;
              if (!foundf) then begin
                testf = false;
              end;
            end;
          end else begin
            testf = false;
          end;
        end;
        if (testf) then begin
          StartFormat(15);
          //if prevop <> PPrr.ProdOpNr then begin
          OutString(0,0,ProdOPr.Sequence,false);
          if PPRr.MachineID<>ProdOPr.Machine then begin
            OutString(2,0,PPRr.MachineID & "*",false);
          end else begin
            OutString(2,0,PPRr.MachineID,false);
          end;
          OutString(7,0,ProdOPr.Comment,false);
          if (RepSpec.flags[1]==1) then begin
            OutString(3,0,PPRr.StartDate,false);
          end else begin
            OutString(3,0,PPRr.StartDate & "-" & PPRr.StartTime,false);
            OutString(4,0,PPRr.EndDate & "-" & PPRr.EndTime,false);
          end;
          //end;
          
          OUtString(8,0,ProdOPr.Qty,true);
          OutString(9,0,Prodr.RecName,false);
          OutString(5,"DblProdOperationVc",PPRr.ProdOpNr,false);
          OutString(6,"DblProdvcID",PPRr.ProdNr,true);
          EndFormat;
          if (RepSpec.flags[3]==1) then begin
            rwc = LineTextCnt(ProdOPr);
            for (rw=0;rw<rwc;rw=rw+1) begin
              tstr = LineTextGet(ProdOPr,rw);
              StartFormat(15);
              OutString(30,0,tstr,false);
              EndFormat;
            end;            
          end;
          if RepSpec.flags[2]==1 then begin
            StartFormat(10);
            EndFormat;
            StartFormat(15);
            OutString(0,0,USetStr(32752),false);
            OutString(120,0,USetStr(32753),false);
            OutString(190,0,USetStr(32754),false);
            OutString(280,0,USetStr(32755),false);
            OutString(360,0,USetStr(32756),false);
            EndFormat;
            Black_divider(398,1);
            StartFormat(40);
            EndFormat;
            Gray_divider(0,1);
            StartFormat(10);
            EndFormat;
          end;
          prevop = PPrr.ProdOpNr;
        end;
      end;
    end;
  end;
  EndJob;
  return;
end;