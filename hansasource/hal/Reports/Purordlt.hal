external function Boolean ContactInGroupClass2(string,string,string,string,string,string,string);
external procedure HTSuppGroup(string,var string);
external procedure HTVendClass(string,var string);
external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);
external procedure HTDetailLevel(Integer, var string);
external procedure HTSupplier(string, var string);
external procedure HTNr(Integer,Integer,LongInt,LongInt,var string);
external procedure HTCustClass(string,var string);
external procedure HTCustClassType(string,var string);
external function Boolean SetInSet2(string,string);
external procedure ClassTypef(string,string,var Boolean);



procedure RepPO(record POVc POp)
begin
  Integer i,rwcnt;
  row POVc POrw;

  StartFormat(15);
  OutLongInt(0,"DblPOVc",POp.SerNr,false);
  OutDate(130,0,POp.TransDate,false);
  OutString(220,0,POp.PayDeal,false);
  EndFormat;
  StartFormat(15);
  OutString(50,0,POp.VECode,false);
  OutString(200,0,POp.Addr0,false);
  EndFormat;
  StartFormat(15);
  OutString(200,0,POp.Addr1,false);
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(50,0,POp.OurContact,false);     
  OutString(200,0,POp.Addr2,false);
  EndFormat;
  if nonblank(POp.Addr3) then begin
    StartFormat(15);
    OutString(200,0,POp.Addr3,false);
    EndFormat;
  end;
  if nonblank(POp.VEContact) then begin
    StartFormat(15);
    OutString(200,0,POp.VEContact,false);     
    EndFormat;
  end;
  if nonblank(POp.CurncyCode) then begin
    StartFormat(15);
    OutString(460,0,POp.CurncyCode,false);
    EndFormat;
  end;
  rwcnt = MatRowCnt(POp);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(POp,i,POrw);
    if (POrw.stp==1) then  begin
      StartFormat(15);
      OutString(20,0,POrw.ArtCode,false);
      OutVal(124,0,POrw.Quant,M4UVal,true);
      OutString(130,0,POrw.Spec,false);
      OutVal(340,0,POrw.Price,M423Val,true);
      OutVal(370,0,POrw.vRebate,M41Val,true);
      OutVal(460,0,POrw.Sum,M4Val,true);
      OutString(480,0,POrw.VATCode,true);
      EndFormat;

    end;
  end;
  Black_Divider(380,460);
  StartFormat(15);
  if (POp.ExportFlag!=0) then begin
    OutString(20,0,USetStr(4948),false);
  end;
  OutVal(260,0,POp.Sum1,M4Val,true);
  OutVal(360,0,POp.Sum3,M4Val,true);
  OutVal(460,0,POp.Sum4,M4Val,true);
  EndFormat;
return;
end;


global
procedure PurOrdJRn(record RcVc RepSpec)
begin
  record POVc POr;
  record CUVc VEr;
  Boolean TrHs;
  val iv;
  val TotSum;
  Boolean testf;
  LongInt afr,ato;
  string 255 tstr;
  Integer rw;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;

  rw = 1;
  afr = FirstInRange(RepSpec.f1,30);
  ato = LastInRange(RepSpec.f1,30);

  TotSum = 0;
  BeginCurncyTotals(curcnt);
  StartReportJob(USetStr(4941));
  if nonblank(RepSpec.f1) then begin
    HTNr(1823,1822,afr,ato,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (RepSpec.ArtMode==2) then begin
    tstr = USetStr(5127);
  end else begin
    HTDetailLevel(RepSpec.ArtMode,tstr);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  HTSupplier(RepSpec.f2,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,0);
  end;
  if (nonblank(RepSpec.f3)) then begin
    tstr = USetStr(2768);
    tstr = tstr & ": " & RepSpec.f3;
    Header(rw,tstr,1);
    rw = rw + 1;
  end; 
  HTSuppGroup(RepSpec.f9,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTVendClass(RepSpec.f4,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,0);
  end; 
  HTCustClassType(RepSpec.f5,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end; 
  switch (RepSpec.flags[3]) begin
    case 0: tstr = USetStr(18350);
    case 2: tstr = USetStr(18351);
  end;  
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
  end;
  EndHeader;
  SetRepColBiDi(2,440,475);
  if ((RepSpec.ArtMode==2) or (RepSpec.ArtMode==0)) then  begin
    StartFormat(15);
    OutString(0,0,USetStr(4942),false);
    OutString(60,0,USetStr(4943),false);
    OutString(140,0,USetStr(4944),false);
    OutString(2,0,USetStr(4947),true);
    EndFormat;
  end;
  if (RepSpec.ArtMode==1)  then  begin
    StartFormat(15);
    OutString(0,0,USetStr(4942),false);
    OutString(130,0,USetStr(4943),false);
    EndFormat;
  end;
  POr.SerNr = afr;
  if ((RepSpec.ArtMode==2) or (RepSpec.ArtMode==0)) then  begin
    Gray_Divider(0,1);
  end;
  TrHs = true;
  while LoopMain(POr,1,TrHs) begin
    if (ato<>-1) then begin
      if (POr.SerNr>ato) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f2) and (RepSpec.f2<>POr.VECode)) then begin
         testf = false;
      end;
      if (nonblank(RepSpec.FirstAcc) and (RepSpec.FirstAcc<>POr.POClass)) then begin
         testf = false;
      end;
      if ((nonblank(RepSpec.f3)) and (RepSpec.f3<>POr.Location)) then begin 
        testf = false; 
      end;
      if (POr.OKFlag!=0 and RepSpec.flags[1]==0) then begin
        testf = false;
      end;
      if (POr.OKFlag==0 and RepSpec.flags[2]==0) then begin
        testf = false;
      end;
      if (DateInRange(POr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
      if (testf) then begin
        testf = ContactInGroupClass2(POr.VECode,RepSpec.f9,RepSpec.f4,RepSpec.f5,"SUPP","","");
      end; 
      switch (RepSpec.flags[3]) begin
        case 0:
          if (POr.Closed!=0) then begin testf = false; end;
        case 2:
          if (POr.Closed==0) then begin testf = false; end;
      end;
      if (testf) then begin
        if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==1)) then begin
          iv = POr.Sum4;
        end;
        if (RepSpec.ArtMode==2) then begin
          iv = POr.Sum1;
        end;
        TotSum = TotSum + iv;
        AddCurncyTotals(acur,av1,curcnt,POr.CurncyCode,iv);
        if  (RepSpec.ArtMode==1) then begin
          Gray_Divider(0,1);
          RepPO(POr);
        end;
        if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==2)) then begin
          StartFormat(15);
          OutLongInt(0,"DblPOVc",POr.SerNr,false);
          OutDate(60,0,POr.TransDate,false);
          OutString(140,0,POr.Addr0,false);
          OutVal(2,0,iv,M4Val,true);
          OutString(445,0,POr.CurncyCode,false);
          EndFormat;
         end;
      end;
    end;
  end;
  Gray_Divider(0,1);
  if (RepSpec.ArtMode==1) then begin
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,460,-1,-1,140,true,RepSpec.PocketPC);
  end else begin
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,2,-1,-1,140,true,RepSpec.PocketPC);
  end; 
  EndJob;
  return;
end;
