external procedure JobCust2Array(record JobVc,var Array string,var Array string);
external procedure ExtractObj(string,var Integer,var string);

procedure PrintCheckedInRsrvs(record RcVc RepSpec)
begin  
  record JobVc Jobr;
  Boolean found;
  record HotelBlock Hotelb;

  if (UserCanAction("AllowMovingFoliotoRsrv",false)) then begin
    if (RepSpec.flags[29]==0) then begin
      StartFormat(45);
      EndFormat;
      StartFormat(15);
       OutString(0,"DblMoveFoliotoRsrvs",USetStr(12528),false);
      EndFormat;
    end;
    if (RepSpec.flags[29]==1) then begin

      StartFormat(45);
      EndFormat;
      StartFormat(15);
       OutString(0,0,USetStr(12532),false);
      EndFormat;
      Gray_Divider(0,1);
      found = true;
      Blockload(Hotelb); 
      Jobr.ResStatus = Hotelb.ChInSt;
      while LoopKey("ResStatus",Jobr,1,found) begin
        if (Jobr.ResStatus!=Hotelb.ChInSt) then begin found = false; end;
        if (found) then begin
          StartFormat(15);
           OutLongInt(0,"DblJobSelVc",Jobr.SerNr,false);
          EndFormat;
        end;
      end;
    end;
  end;
  return;
end;

global
updating procedure ChangeJobCustMn(Record RcVc RepSpec)
begin
  boolean foundf;
  Record ShopBaskVc ShopBaskr;

  foundf = true;
  ShopBaskr.OwnerSerNr = RepSpec.long1;
  while LoopKey("OwnerSerNr",ShopBaskr,1,foundf) begin
    if (ShopBaskr.OwnerSerNr <> RepSpec.long1) then begin
      foundf = false;
    end else begin
      if (ShopBaskr.CUCode==RepSpec.f1) then begin
        ShopBaskr.CUCode = RepSpec.f2;
        if recordstore(ShopBaskr,true) then begin end;
      end;
    end;
  end;
  return;
end;

procedure SplitFolioList(string astr,var array LongInt afolios,var Integer folcnt)
begin
  Integer pos;
  string 200 tstr;
  LongInt lastnr;
  
  folcnt = 1;
  afolios[folcnt-1] = -1;
  if (nonblank(astr)) then begin
    pos = 0;
    ExtractObj(astr,pos,tstr);
    while (nonblank(tstr)) begin
      lastnr = StringToLongInt(tstr);
      if (lastnr>0) then begin
        folcnt = folcnt + 1;
        afolios[folcnt-1] = lastnr;
      end;
      ExtractObj(astr,pos,tstr);
    end;
  end;
  return;
end;

global
procedure BuildFolioLists(record JobVc Jobr,var record RcVc RepSpec)
begin
  record ShopBaskVc ShopBaskr;
  Boolean found;
  string 255 ckey;
  LongInt max1,max2,max3,max4,i;
  Array string 20 Aclist;
  Array string 60 Aclistname;

  max1 = 0;
  max2 = 0;
  max3 = 0;
  max4 = 0;
  JobCust2Array(Jobr,Aclist,Aclistname);
  ckey = "OwnerSerNr";
  found = true;
  ShopBaskr.OwnerSerNr = Jobr.SerNr;
  while (LoopKey(ckey,ShopBaskr,1,found)) begin
    if (ShopBaskr.OwnerSerNr!=Jobr.SerNr) then begin 
      found = false; 
    end else begin
      if (ShopBaskr.DestinationNr==-1) then begin
        if (ShopBaskr.BaskNo>0) then begin
          if (ShopBaskr.CUCode==Aclist[0]) then begin
            if (ShopBaskr.BaskNo>max1) then begin
              max1 = ShopBaskr.BaskNo;
            end;
          end;
          if (ShopBaskr.CUCode==Aclist[1]) then begin
            if (ShopBaskr.BaskNo>max2) then begin
              max2 = ShopBaskr.BaskNo;
            end;
          end;
          if (ShopBaskr.CUCode==Aclist[2]) then begin
            if (ShopBaskr.BaskNo>max2) then begin
              max2 = ShopBaskr.BaskNo;
            end;
          end;
          if (ShopBaskr.CUCode==Aclist[3]) then begin
            if (ShopBaskr.BaskNo>max3) then begin
              max3 = ShopBaskr.BaskNo;
            end;
          end;
        end;
      end;
    end;
  end;
  for (i=0;i<max1;i=i+1) begin
    if (nonblank(RepSpec.f3)) then begin
      RepSpec.f3 = RepSpec.f3 & ",";
    end;
    RepSpec.f3 = RepSpec.f3 & i + 1;
  end;
  for (i=0;i<max2;i=i+1) begin
    if (nonblank(RepSpec.f4)) then begin
      RepSpec.f4 = RepSpec.f4 & ",";
    end;
    RepSpec.f4 = RepSpec.f4 & i + 1;
  end;
  for (i=0;i<max3;i=i+1) begin
    if (nonblank(RepSpec.f5)) then begin
      RepSpec.f5 = RepSpec.f5 & ",";
    end;
    RepSpec.f5 = RepSpec.f5 & i + 1;
  end;
  for (i=0;i<max4;i=i+1) begin
    if (nonblank(RepSpec.f6)) then begin
      RepSpec.f6 = RepSpec.f6 & ",";
    end;
    RepSpec.f6 = RepSpec.f6 & i + 1;
  end;
  return;
end;

procedure NewFoliosDetails(record RcVc RepSpec,record JobVc Jobr,LongInt rsrvnr)
begin
  record JobVc Job2r;
  record CUVc CUr;
  Integer j,i,folcnt;
  Array string 20 Aclist;
  Array string 60 Aclistname;
  Boolean res,testf;
  Integer rwcnt;
  Array LongInt afolios;

  if (RepSpec.flags[29]==0) then begin
    JobCust2Array(Jobr,Aclist,Aclistname);
  
    j = 0;
    while nonblank(aclist[j]) begin
      CUr.Code = aclist[j];
      if (ReadFirstMain(CUr,1,true)) then begin
      end;
      switch (j) begin
        case 0: SplitFolioList(RepSpec.f3,afolios,folcnt);
        case 1: SplitFolioList(RepSpec.f4,afolios,folcnt);
        case 2: SplitFolioList(RepSpec.f5,afolios,folcnt);
        case 3: SplitFolioList(RepSpec.f6,afolios,folcnt);
        otherwise SplitFolioList("",afolios,folcnt);
      end;
      for (i=0;i<folcnt;i=i+1) begin
        StartFormat(15);
        if (afolios[i]>0) then begin
          OutString(0,"DblJobCustSelVc",CUr.Code & "." & afolios[i],false);
        end else begin
          OutString(0,"DblJobCustSelVc",CUr.Code,false);
        end;
        OutString(100,0,CUr.Name,false);
        if (i==0) then begin
          OutStringID(240,"DblNewJobFolioVc",USetStr(12526),false,j);
        end;
        EndFormat;
      end;
      j = j + 1;
    end;  
  end;
  if (RepSpec.flags[29]==2) then begin
    Job2r.SerNr = RepSpec.long2;
    if (ReadFirstMain(Job2r,1,true)) then begin
      JobCust2Array(Job2r,Aclist,Aclistname);
    
      j = 0;
      while nonblank(aclist[j]) begin
        CUr.Code = aclist[j];
        if (ReadFirstMain(CUr,1,true)) then begin
        end;
        switch (j) begin
          case 0: SplitFolioList(RepSpec.f3,afolios,folcnt);
          case 1: SplitFolioList(RepSpec.f4,afolios,folcnt);
          case 2: SplitFolioList(RepSpec.f5,afolios,folcnt);
          case 3: SplitFolioList(RepSpec.f6,afolios,folcnt);
          otherwise SplitFolioList("",afolios,folcnt);
        end;
        for (i=0;i<folcnt;i=i+1) begin
          StartFormat(15);
          if (afolios[i]>0) then begin
            OutString(0,"DblJobCustSelVc",CUr.Code & "." & afolios[i],false);
          end else begin
            OutString(0,"DblJobCustSelVc",CUr.Code,false);
          end;
          OutString(100,0,CUr.Name,false);
/*            
          if (i==0) then begin
            OutStringID(240,"DblNewJobFolioVc",USetStr(12526),false,j);
          end;
*/            
          EndFormat;
        end;
        j = j + 1;
      end;  
    end;
  end;

  return;
end;

procedure NewFolios(record RcVc RepSpec,record JobVc Jobr)
begin
  record JobVc doughterJobr;
  Boolean found;

  switch (Jobr.ReservationType) begin      
    case kReservationTypeNormal:
      NewFoliosDetails(RepSpec,Jobr,-1);
    case kReservationTypeGroup:
      found = true;
      doughterJobr.Mother = Jobr.SerNr;
      while (LoopKey("MotherKey",doughterJobr,1,found)) begin
        if (doughterJobr.Mother!=Jobr.SerNr) then begin found = false; end;
        if (found) then begin
          switch (doughterJobr.ReservationType) begin      
            case kReservationTypeGroup:
              NewFolios(RepSpec,doughterJobr);
            case kReservationTypeNormal:
              NewFoliosDetails(RepSpec,doughterJobr,doughterJobr.SerNr);
          end;
        end;
      end;
  end;
  return;
end;

procedure CurrentFolioEntriesDetailes(record RcVc RepSpec,record JobVc Jobr,LongInt rsrvnr)
begin
  record ShopBaskVc ShopBaskr;
  val TSum;
  string 255 ckey,desc;
  Boolean res,found,testf;
  record INVc INr;
  record CUVc CUr;

  StartFormat(15);
  EndFormat;    
  StartFormat(15);
  if (rsrvnr>0) then begin
    OutString(0,0,rsrvnr & " " & USetStr(12524),false);
  end else begin
    OutString(0,0,USetStr(12524),false);
  end;
  EndFormat;    
  Black_Divider(0,1);

  ckey = "OwnerSerNr";
  ShopBaskr.OwnerSerNr = Jobr.SerNr;
  found = true;
  while (LoopKey(ckey,ShopBaskr,1,found)) begin
    if (ShopBaskr.OwnerSerNr!=Jobr.SerNr) then begin 
      found = false; 
    end else begin
      if (ShopBaskr.DestinationNr==-1) then begin
        CUr.Code = ShopBaskr.CUCode;
        ReadFirstMain(CUr,1,true);
        StartFormat(15);
        if (ShopBaskr.BaskNo>0) then begin
          OutString(0,0,ShopBaskr.CUCode & "." & ShopBaskr.BaskNo,false);
        end else begin
          OutString(0,0,Left(CUr.Name,25),false);
        end;
        OutStringID(90,"DblAssignJobCustVc",ShopBaskr.ItemCode,false,ShopBaskr.SerNr);
        OutString(140,0,ShopBaskr.TransDate,false);
        desc = ShopBaskr.Comment;
        if blank(desc) then begin 
          INr.Code = ShopBaskr.ItemCode;
          if readfirstmain(INr,1,true) then begin
            desc = INr.Name;
          end;
        end;
        OutStringID(180,"DblShopJobBask",desc,false,ShopBaskr.SerNr);
        if (ShopBaskr.PriceInCur!=0) then begin
          TSum = ShopBaskr.PriceInCur * ShopBaskr.Qty;
        end else begin  
          TSum = ShopBaskr.Price * ShopBaskr.Qty;
        end;
        OutVal(380,0,ShopBaskr.Qty,M4UVal,true);
        if (ShopBaskr.PriceInCur!=0) then begin
          OutVal(430,0,ShopBaskr.PriceInCur,M4Val,true);
        end else begin
          OutVal(430,0,ShopBaskr.Price,M4Val,true);
        end;
        OutVal(480,0,TSum,M4Val,true);
        EndFormat;
      end;
    end;
  end;
  return;
end;

procedure CurrentFolioEntries(record RcVc RepSpec,record JobVc Jobr)
begin
  record JobVc doughterJobr;
  Boolean found;

  switch (Jobr.ReservationType) begin      
    case kReservationTypeNormal:
      CurrentFolioEntriesDetailes(RepSpec,Jobr,-1);
    case kReservationTypeGroup:
      found = true;
      doughterJobr.Mother = Jobr.SerNr;
      while (LoopKey("MotherKey",doughterJobr,1,found)) begin
        if (doughterJobr.Mother!=Jobr.SerNr) then begin found = false; end;
        if (found) then begin
          switch (doughterJobr.ReservationType) begin      
            case kReservationTypeGroup:
              CurrentFolioEntries(RepSpec,doughterJobr);
            case kReservationTypeNormal:
              CurrentFolioEntriesDetailes(RepSpec,doughterJobr,doughterJobr.SerNr);
          end;
        end;
      end;
  end;
  return;
end;

global
procedure ChangeCustJobRn(record RcVc RepSpec)
BEGIN
  record JobVc Jobr;
  record JobVc Job2r;
  record CUVc CUr;
  record INVc INr;
  Integer j,i,folcnt;
  Array string 20 Aclist;
  Array string 60 Aclistname;
  record ShopBaskVc ShopBaskr;
  Boolean res,found,testf;
  string 255 ckey,desc;
  Integer rwcnt;
  val TSum;
  Array LongInt afolios;

  StartReportJob(USetStr(12520));
  EndHeader;

  if (RepSpec.flags[29]==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(12521),false);
    EndFormat;
    EndFormat;
    StartFormat(15);
    OutString(0,0,USetStr(12522),false);
    OutString(100,0,USetStr(12523),false);
    EndFormat;
    Gray_Divider(0,300);
  end;
    
  Jobr.SerNr = RepSpec.long1;
  if (ReadFirstMain(Jobr,1,true)) then begin
    NewFolios(RepSpec,Jobr);
    CurrentFolioEntries(RepSpec,Jobr);
    PrintCheckedInRsrvs(RepSpec);
  end;
  EndJob;
  return;
end;