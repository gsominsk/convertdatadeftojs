external procedure HTOKF(Integer,Integer, var string);
external procedure HT2Per(Date,Date,var string);
external procedure AddToPlanArray(LongInt,string,Date,Date,LongInt,val,var array LongInt,var array string,var array Date,var array Date,var array LongInt,var array val,var Integer);

global
procedure POPlanOrdRn(record RcVc RepSpec)
begin
  record AutoProdVc AutoProdr;
  record POPlanVc POPlanr;
  record INVc INr;
  row POPlanVc POPlanrw;
  Integer i,rwcnt;
  Integer acnt;
  array Date aorddat;
  array Date aneeddat;
  array LongInt adays;
  array LongInt aprodplan;
  array string 20 aitem;
  array val aqty;
  Boolean foundf,testf;
  val qty;
  string 20 previtem;
  string 20 theitem;
  string 255 tstr,ckey;
  Integer rw;
  Date loopdate;
  vector Boolean prntdv;
/*
  Boolean afoundf,treatedf,atestf;
*/
  
  acnt = 0;
  StartReportJob(USetStr(16393));    
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTOKF(RepSpec.flags[1],RepSpec.flags[2],tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  Header(rw,USetStr(18202+RepSpec.flags[7]),1);
  EndHeader;
  SetRepCol(2,80);
  SetRepCol(3,220);
  SetRepCol(4,310);
  SetRepCol(5,380);
  SetRepCol(6,150);
  StartFormat(15);
  OutString(0,0,USetStr(16381),false);
  OutString(2,0,USetStr(16383),false);
  OutString(3,0,USetStr(16385),false);
  OutString(4,0,USetStr(16388),false);
  OutString(5,0,USetStr(16387),false);
  OutString(1,0,USetStr(16384),true);
  EndFormat;

  loopdate = RepSpec.sStartDate;
  while (loopdate<=RepSpec.sEndDate) begin
    ResetLoop(POPlanr);
    foundf = true;
    ckey = "POOrdDate:" & DateToString(loopdate,"YYYY-MM-DD");
    POPlanr.Closed = 0;
    while (LoopKey(ckey,POPlanr,1,foundf)) begin
      if (POPlanr.Closed!=0) then begin foundf = false; end;
      if (foundf) then begin
        testf = true;
        if (testf) then begin
          testf = false;
          if (RepSpec.flags[1]==1) then begin
            if (POPlanr.OKFlag!=0) then begin
              testf = true;
            end;
          end;
          if (RepSpec.flags[2]==1) then begin
            if (POPlanr.OKFlag==0) then begin
              testf = true;
            end;
          end;
        end;
        if (prntdv[POPlanr.SerNr]) then begin
          testf = false;
        end;
        if (testf) then begin
          prntdv[POPlanr.SerNr] = true;
          rwcnt = MatRowCnt(POPlanr);
          for (i=0;i<rwcnt;i=i+1) begin
            testf = true;
            MatRowGet(POPlanr,i,POPlanrw);
            if (nonblankdate(POPlanrw.POOrdDate)) then begin
              if (DateInRange(POPlanrw.POOrdDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
                testf = false;
              end;
            end;
            if (POPlanrw.PONr>0) then begin
              testf = false;
            end;
            if (testf) then begin
              if (nonblank(POPlanrw.Qty)) then begin
                qty = POPlanrw.Qty;
              end else begin
                qty = POPlanrw.SugQty;
              end;
              theitem = POPlanrw.ItemCode;
              if (RepSpec.flags[7]==1) then begin
                if (nonblank(POPlanrw.FromItemCode)) then begin
                  theitem = POPlanrw.FromItemCode;
                end;
              end;
              AutoProdr.ToItemCode = POPlanrw.ItemCode;
              AutoProdr.FromItemCode = theitem;
              if (ReadFirstKey("ToItemCode",AutoProdr,2,true)) then begin
                qty = qty * AutoProdr.UnitCoefficient;
              end;
              AddToPlanArray(POPlanr.SerNr,theitem,POPlanrw.POOrdDate,POPlanrw.NeededDate,POPlanrw.DaysToGet,qty,aprodplan,aitem,aorddat,aneeddat,adays,aqty,acnt);
    /*
              if (RepSpec.flags[7]==0) then begin
                AddToPlanArray(POPlanr.SerNr,POPlanrw.ItemCode,POPlanrw.POOrdDate,POPlanrw.NeededDate,POPlanrw.DaysToGet,qty,aprodplan,aitem,aorddat,aneeddat,adays,aqty,acnt);
              end;
              if (RepSpec.flags[7]==1) then begin
                treatedf = false;
                afoundf = true;
                ResetLoop(AutoProdr);
                AutoProdr.FromItemCode = POPlanrw.ItemCode;
                while (LoopMain(AutoProdr,1,afoundf)) begin
                  if (AutoProdr.FromItemCode!=POPlanrw.ItemCode) then begin
                    afoundf = false;
                  end;
                  if (afoundf) then begin
                    AddToPlanArray(POPlanr.SerNr,AutoProdr.ToItemCode,POPlanrw.POOrdDate,POPlanrw.NeededDate,POPlanrw.DaysToGet,qty / AutoProdr.UnitCoefficient,aprodplan,aitem,aorddat,aneeddat,adays,aqty,acnt);
                    treatedf = true;
                  end;
                end;
                if (treatedf==false) then begin
                  AddToPlanArray(POPlanr.SerNr,POPlanrw.ItemCode,POPlanrw.POOrdDate,POPlanrw.NeededDate,POPlanrw.DaysToGet,qty,aprodplan,aitem,aorddat,aneeddat,adays,aqty,acnt);
                end;
              end;
              if (RepSpec.flags[7]==2) then begin
                treatedf = false;
                afoundf = true;
                ResetLoop(AutoProdr);
                AutoProdr.ToItemCode = POPlanrw.ItemCode;
                while (LoopKey("ToItemCode",AutoProdr,1,afoundf)) begin
                  if (AutoProdr.ToItemCode!=POPlanrw.ItemCode) then begin
                    afoundf = false;
                  end;
                  atestf = afoundf;
                  if (AutoProdr.Default==0) then begin
                    atestf = false;
                  end;
                  if (atestf) then begin
                    AddToPlanArray(POPlanr.SerNr,AutoProdr.FromItemCode,POPlanrw.POOrdDate,POPlanrw.NeededDate,POPlanrw.DaysToGet,qty * AutoProdr.UnitCoefficient,aprodplan,aitem,aorddat,aneeddat,adays,aqty,acnt);
                    treatedf = true;
                  end;
                end;
                if (treatedf==false) then begin
                  AddToPlanArray(POPlanr.SerNr,POPlanrw.ItemCode,POPlanrw.POOrdDate,POPlanrw.NeededDate,POPlanrw.DaysToGet,qty,aprodplan,aitem,aorddat,aneeddat,adays,aqty,acnt);
                end;
              end;
    */
            end;
          end;
        end;
      end;
    end;
    loopdate = AddDay(loopdate,1);
  end;
  previtem = "";
  for (i=0;i<acnt;i=i+1) begin
    if (previtem!=aitem[i]) then begin
      INr.Code = aitem[i];
      if (ReadFirstMain(INr,1,true)==false) then begin
        RecordNew(INr);
        INr.Code = aitem[i];
      end;
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(0,0,INr.Code,false);
      OutString(2,0,INr.Name,false);
      EndFormat;
      previtem = INr.Code;
    end;
    StartFormat(15);
    OutString(6,"DblPOPlan",aprodplan[i],false);
    OutDate(3,0,aorddat[i],false);
    OutLongInt(4,0,adays[i],false);
    OutDate(5,0,aneeddat[i],false);
    OutVal(1,0,aqty[i],M4UVal,true);
    EndFormat;
  end;
  EndJob;  
  return;
end;  