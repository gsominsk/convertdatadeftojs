external function Boolean CheckDblRentRes(record RentResVc);

procedure FindOnHire(record RentINVc RentINr,var boolean onhire,var string custcode,var string reservation)
begin
  record RentResVc RentResr;
  record AgreementVc Agreementr;
  boolean TrHs,testf;
  
  RentResr.SerialNr = RentINr.SerialNr;
  RentResr.Code = RentINr.Code;
  TrHs = true;
  onhire = false;
  while LoopKey("SerialNr",RentResr,2,TrHs) begin
    if (TrHs) then begin
      if (RentResr.SerialNr!=RentINr.SerialNr) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (RentResr.Done!=0) then begin
        testf = false;
      end;
      if (nonblank(RentResr.EndDate)) then begin
        if (RentResr.EndDate<CurrentDate) then begin
          testf = false;
        end;
      end;
      if (RentResr.TransDate>CurrentDate) then begin
        testf = false;
      end;
      if (testf) then begin
        onhire = true;
        Agreementr.SerNr = RentResr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          custcode = Agreementr.CustCode;
          custcode = custcode & ", " & left(Agreementr.Addr0,15);
        end;
        reservation = RentResr.SerNr;
      end;
    end;
  end;
  return;
end;

procedure FindInspection(record RentINVc RentINr,var boolean inspection)
begin
  record QualConVc QualConVr;
  boolean TrHs,testf;
  
  inspection = false;
  TrHs = true;
  QualConVr.SerialNr = RentINr.SerialNr;
  QualConVr.ArtCode = RentINr.Code;
  while (LoopKey("SerialNr",QualConVr,2,TrHs)) begin
    if (TrHs) then begin
      if (QualConVr.SerialNr!=RentINr.SerialNr) then begin
        TrHs = false;    
      end;   
    end;
    if (TrHs) then begin
      testf = true;
      if (QualConVr.OKFlag!=0) then begin
        testf = false;
      end;
      if (testf) then begin
        inspection = true;
      end;
    end;
  end;
return;
end;

procedure FindInTransit(record RentINVc RentINr, var boolean intransit)
begin
  record InternMovVc Internr;
  row InternMovVc Internrw;
  val rwcnt, i;
  boolean TrHs;
  
  intransit = false;
  TrHs = true;
  Internr.OKFlag = 0;
  while (LoopKey("OKFlag",Internr,1,TrHs)) begin
    if (TrHs) then begin
      if (Internr.OKFlag>0) then begin
        TrHs = false;
      end;  
    end;
    if (TrHs) then begin
      rwcnt = MatRowCnt(Internr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Internr,i,Internrw);
        if (Internrw.ArtCode==RentINr.Code and Internrw.SerialNr==RentINr.SerialNr) then begin
           intransit = true;
           goto L99;
        end;
      end;
    end;
  end;
  L99:;
return;
end;

global
procedure SerialItemRentalStatusRn(record RcVc RepSpec)
begin
  record RentINVc RentINr;
  boolean TrHs,testf;
  string 255 tstr,custcode,reservation;
  val rw;
  boolean onhire,inspection,intransit;
   
  StartReportJob(USetStr(13020));
  rw = 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(13022) & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(13021) & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(13023) & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,USetStr(13032),false);
  OutString(90,0,USetStr(13033),false);
  OutString(220,0,USetStr(13024),false);
  OutString(300,0,USetStr(13025),false);
  OutString(340,0,USetStr(13026),false);
  OutString(440,0,USetStr(13027),false);
  EndFormat;
  Gray_Divider(0,1);  
  TrHs = true;
  RentINr.Code = RepSpec.f2;
  while LoopMain(RentINr,1,TrHs) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f2)) then begin
        if (RentINr.Code!=RepSpec.f2) then begin
          TrHs = false;  
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;     
      if (nonblank(RepSpec.f3)) then begin
        if (RentINr.Group!=RepSpec.f3) then begin
          testf = false;
        end;
      end;
      if (blank(RentINr.SerialNr)) then begin
        testf = false;
      end;
      if (RentINr.Terminated!=0) then begin
        testf = false;
      end;
      if (RentINr.RentINStatus==2) then begin
        testf = false;
      end;
      if (testf) then begin
        StartFormat(15);
        OutString(0,0,RentINr.Code,false);
        OutString(90,0,left(RentINr.Name,20),false);
        OutString(220,0,RentINr.SerialNr,false);  
        if (RentINr.RentINStatus==0) then begin
          FindOnHire(RentINr,onhire,custcode,reservation);
          if (onhire) then begin
            OutString(300,0,USetStr(13027),false);
            OutString(340,0,left(custcode,15),false);
            OutStringID(440,"DblRentResVc",reservation,false,reservation);
          end;
          if (onhire==false) then begin
            FindInspection(RentINr,inspection);
            if (inspection) then begin
              OutString(300,0,USetStr(13031),false);
            end;
            if (inspection==false) then begin
              FindInTransit(RentINr,intransit);
              if (intransit) then begin
                OutString(300,0,USetStr(13028),false);
              end else begin
                OutString(300,0,USetStr(13029),false);
              end;
            end;
          end;
        end;
        if (RentINr.RentINStatus==1) then begin
          OutString(300,0,USetStr(13030),false);      
        end;
        EndFormat;
      end;    
    end;
  end;
  EndJob;
return;
end;



