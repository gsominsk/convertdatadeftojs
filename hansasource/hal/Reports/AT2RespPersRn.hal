external function Boolean GetInventoryNrWrofQuant(string,var val);
external procedure HTAssets(string,string,var string);
external procedure HTCategories(string,string,var string);
external procedure GetWrofDate(record AT2UnitVc,var Date,var Boolean);
external procedure FindAssetRespPerson(record AT2UnitVc,var string);
external procedure GetUserName(string,var string);

global
procedure AT2RespPersRn(record RcVc RepSpec)
BEGIN
  record AT2UnitVc AT2Unitr;
  Boolean TrHs,testf,wrof;
  string 20 frat,toat;
  string 20 frcat,tocat;
  string 30 keystr;
  string 255 resppers,tstr;
  Date wrofd;
  Integer rw;
  val wq;
  
  frat = FirstInRange(RepSpec.f1,20);
  toat = LastInRange(RepSpec.f1,20);
  frcat = FirstInRange(RepSpec.f2,20);
  tocat = LastInRange(RepSpec.f2,20);
  StartReportJob(USetStr(14170));
  rw = 1;
  HTAssets(frat,toat,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;   
  HTCategories(frcat,tocat,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;     
  EndHeader;
  
  StartFormat(15);
   OutString(0,0,USetStr(14171),false);
   OutString(150,0,USetStr(14172),false);
  EndFormat;
  Gray_Divider(0,1);
  switch (RepSpec.flags[0]) begin
    case 0: 
      keystr = "InventoryNr";
      AT2Unitr.InventoryNr = frat;
    case 1: 
      keystr = "AT2Code";
      AT2Unitr.AT2Code = frcat;
  end;
  TrHs = true;
  while (LoopKey(keystr,AT2Unitr,1,TrHs)) begin
    switch (RepSpec.flags[0]) begin
      case 0: 
        if (nonblank(RepSpec.f1)) then begin
          if (AT2Unitr.InventoryNr>toat) then begin TrHs = false; end;
        end;
      case 1: 
        if (nonblank(RepSpec.f2)) then begin
          if (AT2Unitr.AT2Code>tocat) then begin TrHs = false; end;
        end;
    end;
    if (TrHs) then begin
      testf = true;
      switch (RepSpec.flags[0]) begin
        case 0: 
          if (nonblank(RepSpec.f2)) then begin
            if (AT2Unitr.AT2Code<frcat) or (AT2Unitr.AT2Code>tocat) then begin testf = false; end;
          end;
        case 1: 
          if (nonblank(RepSpec.f1)) then begin
            if (AT2Unitr.InventoryNr>toat) then begin testf = false; end;
          end;
      end;
      if (RepSpec.flags[1]==0) then begin
        if (AT2Unitr.Activef!=0) then begin testf = false; end;
      end;
      if (testf) then begin
        if (GetInventoryNrWrofQuant(AT2Unitr.InventoryNr,wq)) then begin
        end;
      end;
      if (RepSpec.flags[2]==0) then begin
        if (wq>=AT2Unitr.Quantity) then begin testf = false; end;
      end;
      FindAssetRespPerson(AT2Unitr,resppers); 
      if (blank(resppers)) then begin testf = false; end;
      if (testf) then begin
        StartFormat(15);
         OutString(0,"DblAT2UnitVc",AT2Unitr.InventoryNr,false);
         OutString(150,0,resppers,false);
         if (AT2Unitr.Activef!=0) then begin 
           OutString(300,0,USetStr(14174),false);
         end;
        EndFormat;
      end;
    end;
  end;
  StartFormat(15);
   OutString(0,0,USetStr(14173),false);
  EndFormat;  
  RecordNew(AT2Unitr);
  ResetLoop(AT2Unitr);
  TrHs = true;
  AT2Unitr.RespPerson = "";
  while (LoopKey("RespPerson",AT2Unitr,1,TrHs)) begin
    if (nonblank(AT2Unitr.RespPerson)) then begin TrHs = false; end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f2)) then begin
        if (AT2Unitr.AT2Code<frcat) or (AT2Unitr.AT2Code>tocat) then begin testf = false; end;
      end;
      if (RepSpec.flags[1]==0) then begin
        if (AT2Unitr.Activef!=0) then begin testf = false; end;
      end;
      if (testf) then begin
        if (GetInventoryNrWrofQuant(AT2Unitr.InventoryNr,wq)) then begin
        end;
      end;
      if (RepSpec.flags[2]==0) then begin
        if (wq>=AT2Unitr.Quantity) then begin testf = false; end;
      end;
      if testf then begin 
        StartFormat(15);
        OutString(0,"DblAT2UnitVc",AT2Unitr.InventoryNr,false);
        EndFormat;
      end;   
    end;
  end;
  EndJob;
  RETURN;
END;