external function string 60 AddObjectToObjectList(string,string);
external function Boolean IsEnterprise();
external function Boolean IsPrepaymentOpen(Date,LongInt,var val);
external function Boolean CheckIfIVOpen(Date,record IVVc,string,var val,Boolean,Boolean);
external procedure InitCurncyTotals(var array string,var array val,Integer);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);
external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);
external function string 255 GetCustomerOnAccountAC(string);
external procedure CurValToOtherCur(Date,string,val,string,var val,roundmode);
external procedure IVVc_GetPrePaidAmount(record IVVc,var val);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure GetARAcc(string,var string);
external procedure BeginCurncyTotals(var Integer);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);

global
procedure CustListTransCLIn(record RcVc RepSpec,record IPrsVc IPrsr,record CUVc CUp,var val balp,var val SumCredit,var val totloss,var val totgain,Integer pos1,Integer pos2,Integer fwdbalinvoices,
                            var string statmentcurrency,var string remainingcurrencies,vector Boolean vreportedcurncy)
begin
  record CLInVc CLInr;
  row CLInVc CLInrw;
  Integer tcnt,trwcnt;
  val tmp,cuscurval,tinivcurrate,lossv;
  val v,v2,opensum;
  string 255 tstr,aracc;
  record IVVc IVr;
  
  v = blankval;
  v2 = blankval;
  CLInr.SerNr = IPrsr.TransNr;
  if (ReadFirstMain(CLInr,1,true)) then begin
    if (CLInr.Invalid!=0) then begin goto LCustListTransCLIn; end;
    if (nonblank(RepSpec.CurncyCode)) then begin
      if (CLInr.CurncyCode!=RepSpec.CurncyCode) then begin goto LCustListTransCLIn; end;
    end;
    trwcnt = MatRowCnt(CLInr);
    for (tcnt=0;tcnt<trwcnt;tcnt=tcnt+1) begin
      MatRowGet(CLInr,tcnt,CLInrw);
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,CLInr.Objects)==false) then begin goto L11; end;
      end;        
      if ((CLInrw.Type==1) and (CLInrw.TransNr!=-1)) then begin
        IVr.SerNr = CLInrw.TransNr;
        ReadFirstMain(IVr,1,true);
        if (nonblank(RepSpec.FirstAcc)) then begin
          if (IVr.ARAcc!=RepSpec.FirstAcc) then begin
            goto L11;
          end;
        end;
        if (RepSpec.flags[2]!=0) then begin
          if (nonblank(RepSpec.CurncyCode)) then begin
            if (IVr.CurncyCode!=RepSpec.CurncyCode) then begin goto L11; end;
          end;
/*    
CURRENCIES-TODO  
          if (nonblank(statmentcurrency)) then begin
            if (IVr.CurncyCode!=statmentcurrency) then begin 
              if (vreportedcurncy[IVr.CurncyCode]==false) then begin
                remainingcurrencies = AddObjectToObjectList(remainingcurrencies,IVr.CurncyCode);        
              end;
              goto L11; 
            end;
          end else begin
            statmentcurrency = IVr.CurncyCode;
          end;    
*/          
        end;
/*    
CURRENCIES-TODO          
        vreportedcurncy[statmentcurrency] = true;
*/        

        if (fwdbalinvoices==1) then begin
          if (CheckIfIVOpen(RepSpec.sEndDate,IVr,"",opensum,true,false)==false) then begin 
            goto L11;
          end;
        end;
        v = blankval;
        if (CLInrw.Sum!=0)then begin              
          if (CLInrw.TransNr==IPrsr.IVNr) then begin
            if (CLInr.TransDate==IPrsr.TransDate) then begin
              if (CLInr.CUCode==CUp.Code) then begin
                v = CLInrw.Sum;
                tinivcurrate = MulRateToBase1(CLInr.CurncyCode,v,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
                cuscurval = MulRateToBase1(CLInr.CurncyCode,v,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
                lossv = tinivcurrate - cuscurval;

                if (RepSpec.flags[2]==0) then begin
                  v = cuscurval;
                end else begin
                  if (CLInr.CurncyCode==CUp.CurncyCode) then begin
                    cuscurval = v;
                    lossv = blankval;
                  end;
                end;
                if (lossv<0) then begin
                  totloss = totloss - lossv;
                end else begin
                  totgain = totgain + lossv;
                end;
                balp = balp - lossv;
                balp = balp - cuscurval;
                SumCredit = SumCredit + cuscurval;
                SumCredit = SumCredit + lossv;                    
              end;
            end;
          end;
          if (v!=0) then begin
            if (RepSpec.ArtMode==1) then begin
              tstr = USetStr(1193);         
              StartFormat(15);
              OutDate(0,0,IPrsr.TransDate,false);
              OutString(pos1,0,tstr,false);
              tstr = CLInr.SerNr;
              tstr = tstr & " (";
              tstr = tstr & IPrsr.IVNr;
              tstr = tstr & " )";
              OutString(pos2,"DblCLInVc",tstr,false);
              OutVal(4,0,v,M4Val,true);
              if (RepSpec.flags[2]==1) then begin
                OutString(8,0,CLInr.CurncyCode,false);
              end;  
              OutVal(430,0,lossv,M4Val,true);
              OutVal(1,0,balp,M4Val,true);
              EndFormat;
            end;
          end;
        end;
      end;
      if ((CLInrw.Type==4) and (CLInrw.TransNr!=-1)) then begin
        v = blankval;
        if (CLInrw.Sum!=0) then begin              
          if (IPrsr.IVNr==-1) then begin
            if (CLInr.TransDate==IPrsr.TransDate) then begin
              if (CLInrw.Company==CUp.Code) then begin
                if (nonblank(RepSpec.FirstAcc)) then begin
                  if (GetCustomerOnAccountAC(CLInrw.Company)!=RepSpec.FirstAcc) then begin
                    goto L11;
                  end;
                end;        
                if (fwdbalinvoices==1) then begin
                  if (IsPrepaymentOpen(RepSpec.sEndDate,CLInrw.TransNr,opensum)==false) then begin
                    goto L11;
                  end;
                end;
                v = CLInrw.Sum;
                cuscurval = MulRateToBase1(CLInr.CurncyCode,v,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
                if (RepSpec.flags[2]==0) then begin
                  v = cuscurval;
                end else begin
                  if (CLInr.CurncyCode==CUp.CurncyCode) then begin
                    cuscurval = v;
                  end;
                end;
                balp = balp - cuscurval;
                SumCredit = SumCredit + cuscurval;
              end;
            end;
          end;
          if (v!=0) then begin
            if (RepSpec.ArtMode==1) then begin
              tstr = USetStr(2497);         
              StartFormat(15);
              OutDate(0,0,IPrsr.TransDate,false);
              OutString(pos1,0,tstr,false);
              tstr = CLInr.SerNr;
//              tstr = tstr & " (";
//              tstr = tstr & IPrsr.IVNr; prepaynr
//              tstr = tstr & " )";
              OutString(pos2,"DblCLInVc",tstr,false);
              if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
                OutString(3,0,"",true);
                OutString(3,0,"",true);
              end;
              OutVal(4,0,v,M4Val,true);
              if (RepSpec.flags[2]==1) then begin
                OutString(8,0,CLInr.CurncyCode,false);
              end;  
              OutVal(1,0,balp,M4Val,true);
              EndFormat;
            end;
          end;          
        end;
      end;      
L11:;               
    end;   
  end;
LCustListTransCLIn:;
  RETURN;
END;      

global
procedure CustListTransCLOut(record RcVc RepSpec,record IPrsVc IPrsr,record CUVc CUp,var val balp,var val SumDebet,Integer pos1,Integer pos2,
                             var string statmentcurrency,var string remainingcurrencies,vector Boolean vreportedcurncy)
begin
  record CLOutVc CLOutr;
  row CLOutVc CLOutrw;
  Integer tcnt,trwcnt;
  val tmp,cuscurval;
  val v,v2;
  string 255 tstr;
  
  v = blankval;
  v2 = blankval;
  CLOutr.SerNr = IPrsr.TransNr;
  if (ReadFirstMain(CLOutr,1,true)) then begin
    if (CLOutr.Invalid!=0) then begin goto L44; end;
    if (nonblank(RepSpec.CurncyCode)) then begin
      if (CLOutr.CurncyCode!=RepSpec.CurncyCode) then begin goto L44; end;
    end;
    trwcnt = MatRowCnt(CLOutr);
    for (tcnt=0;tcnt<trwcnt;tcnt=tcnt+1) begin
      MatRowGet(CLOutr,tcnt,CLOutrw);
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,CLOutr.Objects)==false) then begin goto L12; end;
      end;        
      if ((CLOutrw.Type==1) and (CLOutrw.TransNr!=-1)) then begin
        v = blankval;
        if (CLOutrw.Sum!=0)then begin              
            if (CLOutrw.TransNr==IPrsr.IVNr) then begin
              if (CLOutr.TransDate==IPrsr.TransDate) then begin
                if (CLOutr.CUCode==CUp.Code) then begin
                  v = CLOutrw.Sum;
                  cuscurval = MulRateToBase1(CLOutr.CurncyCode,v,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
                  if (RepSpec.flags[2]==0) then begin
                    v = cuscurval;
                  end else begin
                    if (CLOutr.CurncyCode==CUp.CurncyCode) then begin
                      cuscurval = v;
                    end;
                  end;
                  balp = balp + cuscurval;
                  SumDebet = SumDebet + cuscurval;
                end;
              end;
            end;
          if (v!=0) then begin
            if (RepSpec.ArtMode==1) then begin
              tstr = USetStr(1194);         
              StartFormat(15);
              OutDate(0,0,IPrsr.TransDate,false);
              OutString(pos1,0,tstr,false);
              tstr = CLOutr.SerNr;
              tstr = tstr & " (";
              tstr = tstr & IPrsr.IVNr;
              tstr = tstr & " )";
              OutString(pos2,"DblCLOutVc",tstr,false);
              OutVal(3,0,v,M4Val,true);
              if (RepSpec.flags[2]==1) then begin
                OutString(7,0,CLOutr.CurncyCode,false);
              end;  
              OutVal(1,0,balp,M4Val,true);
              EndFormat;
            end;
          end;
        end;
      end;      
      if ((CLOutrw.Type==5) and (CLOutrw.TransNr!=-1)) then begin
        v = blankval;
        if (CLOutrw.Sum!=0) then begin              
          if (IPrsr.IVNr!=-1) then begin
            if (CLOutr.TransDate==IPrsr.TransDate) then begin
              if (CLOutrw.Company==CUp.Code) then begin
                v = CLOutrw.Sum;
                cuscurval = MulRateToBase1(CLOutr.CurncyCode,v,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
                if (RepSpec.flags[2]==0) then begin
                  v = cuscurval;
                end else begin
                  if (CLOutr.CurncyCode==CUp.CurncyCode) then begin
                    cuscurval = v;
                  end;
                end;
                balp = balp + cuscurval;
                SumDebet = SumDebet + cuscurval;
              end;
            end;
          end;
          if (v!=0) then begin
            if (RepSpec.ArtMode==1) then begin
              tstr = USetStr(2497);         
              StartFormat(15);
              OutDate(0,0,IPrsr.TransDate,false);
              OutString(pos1,0,tstr,false);
              tstr = CLOutr.SerNr;
//              tstr = tstr & " (";
//              tstr = tstr & IPrsr.IVNr; prepaynr
//              tstr = tstr & " )";
              OutString(pos2,"DblCLOutVc",tstr,false);
              OutVal(3,0,v,M4Val,true);
              if (RepSpec.flags[2]==1) then begin
                OutString(5,0,CLOutr.CurncyCode,false);
              end;  
              OutVal(1,0,balp,M4Val,true);
              EndFormat;
            end;
          end;          
        end;
      end;      
L12:;               
    end;   
  end;
L44:;
  RETURN;
END;      

global
procedure CustListTransCredMan(record RcVc RepSpec,record IPrsVc IPrsr,record CUVc CUp,var val balp,var val SumDebet,Integer pos1,Integer pos2)
begin
  record CredManVc CredManr;
  val tmp,cuscurval;
  val v,v2;
  string 255 tstr;
  
  v = blankval;
  v2 = blankval;
  CredManr.SerNr = IPrsr.TransNr;
  if (ReadFirstMain(CredManr,1,true)) then begin
    if (CredManr.Invalid!=0) then begin goto L44; end;
    if (nonblank(RepSpec.ObjStr)) then begin
      if (SetInSet(RepSpec.ObjStr,CredManr.Objects)==false) then begin goto L44; end;
    end;
    v = blankval;
    if (CredManr.InvSum4!=0) then begin
      v = CredManr.InvSum4;
      cuscurval = MulRateToBase1(CredManr.CurncyCode,v,CredManr.FrRate,CredManr.ToRateB1,CredManr.ToRateB2,CredManr.BaseRate1,CredManr.BaseRate2,DefaultCurRoundOff);
      if (RepSpec.flags[2]==0) then begin
        v = cuscurval;
      end else begin
        if (CredManr.CurncyCode==CUp.CurncyCode) then begin
          cuscurval = v;
        end;
      end;
      balp = balp - cuscurval;
      SumDebet = SumDebet + cuscurval;
      if (v!=0) then begin
        if (RepSpec.ArtMode==1) then begin
          tstr = USetStr(1635);
          StartFormat(15);
          OutDate(0,0,IPrsr.TransDate,false);
          OutString(pos1,0,tstr,false);
          tstr = CredManr.SerNr;
          tstr = tstr & " (";
          tstr = tstr & IPrsr.IVNr;
          tstr = tstr & " )";
          OutString(pos2,"DblCredManVc",tstr,false);
          OutVal(4,0,v,M4Val,true);
          if (RepSpec.flags[2]==1) then begin
            OutString(8,0,CredManr.CurncyCode,false);
          end;  
          OutVal(1,0,balp,M4Val,true);
          EndFormat;
        end;
      end;
    end;
  end;
L44:;
  RETURN;
END;      
procedure AddToIPArray(Array LongInt aipnr,var Integer acnt,LongInt ipnr)
begin
  Integer i;
  
  for (i=0;i<acnt;i=i+1) begin
    if (aipnr[i]==ipnr) then begin goto LAddToIPArray; end;
  end;
  aipnr[acnt] = ipnr;
  acnt = acnt + 1;
LAddToIPArray:;  
  RETURN;
END;

global
procedure FindAllPrepayLosses(string invcurncy,Date transdate,val invval,LongInt cupnr,val cuscurval,var val losses,record IVVc IVr,LongInt invnr,LongInt ipnr,Boolean specificreceiptf,record BaseCurBlock bascur,val B1BankVal,string bankcurncy)
begin
  record IPVc IPr;
  record IVVc IV2r;
  record ARPayHistVc ARPayHistr;
  Boolean foundf,testf;
  val prepv,b1loss;
  val curval,v;
  val frrate,torate1,torate2,baserate1,baserate2;
  Date ltransdate;

  ltransdate = transdate;
  losses = BlankVal;
  curval = invval;
  if (cupnr!=-1) then begin
    if (invnr!=-1) then begin
      ARPayHistr.CUPNr = cupnr;
      ARPayHistr.FileName = "IVVc";
      foundf = true;
      while (LoopMain(ARPayHistr,2,foundf)) begin
        if ((ARPayHistr.CUPNr==cupnr) and (ARPayHistr.FileName=="IVVc")) then begin
          IV2r.SerNr = ARPayHistr.SerNr;
          if (ReadFirstMain(IV2r,1,true)) then begin
            IVVc_GetPrePaidAmount(IV2r,prepv);
            curval = curval - prepv;
            b1loss = MulRateToBase1(IV2r.CurncyCode,prepv,IV2r.FrRate,IV2r.ToRateB1,IV2r.ToRateB2,IV2r.BaseRate1,IV2r.BaseRate2,DefaultCurRoundOff);
            losses = losses + b1loss;
          end;     
        end else begin
          foundf = false;
        end;
      end;
    end else begin
      ARPayHistr.CUPNr = cupnr;
      ARPayHistr.FileName = "IPVc";
      foundf = true;
      while (LoopMain(ARPayHistr,2,foundf)) begin
        if (ARPayHistr.CUPNr!=cupnr) then begin foundf = false; end;
        if (ARPayHistr.FileName!="IPVc") then begin foundf = false; end;
        if (foundf) then begin
          testf = true;
          if (ARPayHistr.TransDate>transdate) then begin testf = false; end;
          if (ipnr>0) then begin
            if (specificreceiptf) then begin
              if (ARPayHistr.Val<0) then begin
                if (ARPayHistr.SerNr!=ipnr) then begin testf = false; end;
              end;
            end else begin
              if (ARPayHistr.SerNr==ipnr) then begin testf = false; end;
            end;                  
          end;
          if (testf) then begin
            ltransdate = ARPayHistr.TransDate;
//            b1loss = ARPayHistr.BookVal;
            b1loss = blankval;
            if (invval<0) then begin
              if (ARPayHistr.Val>0) then begin
                CurValToOtherCur(ARPayHistr.TransDate,invcurncy,invval,ARPayHistr.CurncyCode,v,DefaultCurRoundOff);
                if (ARPayHistr.Val>v) then begin
                  b1loss = -(ARPayHistr.BookVal*v)/ARPayHistr.Val;
                  if (b1loss>ARPayHistr.BookVal) then begin  b1loss = ARPayHistr.BookVal; end;
                end;
              end;
              if (ARPayHistr.Val<0) then begin
                CurValToOtherCur(ARPayHistr.TransDate,invcurncy,invval,ARPayHistr.CurncyCode,v,DefaultCurRoundOff);
                if (ARPayHistr.Val<v) then begin
                  b1loss = (ARPayHistr.BookVal*v)/ARPayHistr.Val;
                end;
              end;
              losses = losses + b1loss;
            end;
          end;     
        end else begin
          foundf = false;
        end;
      end;
    end;
  end;
  if (ipnr==-1) or (losses!=0) then begin
    if (invnr<>-1) then begin
      b1loss = MulRateToBase1(IVr.CurncyCode,curval,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
    end else begin
      if (B1BankVal==0) then begin
        if ((bascur.BaseCur1==bankcurncy) and (bankcurncy<>invcurncy)) then begin
  //        b1loss = bankval;//must be same as one on prepayment account
          b1loss = MulWithRateToBase1(invcurncy,ltransdate,curval,DefaultCurRoundOff);
        end else begin
          b1loss = MulWithRateToBase1(invcurncy,ltransdate,curval,DefaultCurRoundOff);
        end;
      end else begin
        b1loss = B1BankVal;
      end;    
    end;
    losses = losses + b1loss;
    if (losses==0) then begin
      losses = BlankVal;
    end;  
  end;
  return;
end;

procedure CUPerIPLine(record RcVc RepSpec,Integer pos1,Integer pos2,string curncy,Date d,record IPVc IPr,string InvoiceOfficialSerNr,record IPrsVc IPrsr,
                      LongInt prepayno,val v,var val lossv,val balp,Boolean onaccf)
begin
  string 255 tstr,t2;
  record IVVc IVr;

  if (RepSpec.flags[8]!=0) then begin
    if (onaccf) then begin
      tstr = USetStr(2497);
    end else begin
      tstr = USetStr(2486);
    end;
  end else begin
    if (IPrsr.IVNr==-1) then begin
      tstr = USetStr(2497);
    end else begin
      tstr = USetStr(2486);
    end;
  end;
  StartFormat(15);
  OutDate(0,0,d,false);
  OutString(pos1,0,tstr,false);
  tstr = IPr.SerNr;

  if (RepSpec.flags[8]==0) then begin
    if (prepayno!=-1) or (IPrsr.IVNr!=-1) then begin
      tstr = tstr & " (";
      if (IPrsr.IVNr==-1) then begin
        t2 = prepayno;
      end else begin
        if (HasLocalization("POL") and (IsStandardProduct)) then begin
          if (nonblank(InvoiceOfficialSerNr)) then begin
            t2 = InvoiceOfficialSerNr;
          end else begin
            IVr.SerNr = IPrsr.IVNr;
            ReadFirstMain(IVr,1,true);
            if (nonblank(IVr.OfficialSerNr)) then begin
              t2 = IVr.OfficialSerNr;
            end;
          end;
        end else begin        
          t2 = IPrsr.IVNr;
        end;
      end;  
      if (prepayno==-1) and (IPrsr.IVNr==-1) then begin t2 = ""; end;
      tstr = tstr & t2;
      tstr = tstr & ")";
    end;
  end;
  OutString(pos2,"DblCuPerIP",tstr,false);
  if (v>=0) then begin
    OutString(3,0,"",true);
    OutString(5,0,"",false);
    OutVal(4,0,v,M4Val,true);
  end else begin
    OutVal(3,0,-v,M4Val,true);
  end;
  if (RepSpec.flags[2]==1) then begin
    if (v>=0) then begin
      OutString(8,0,curncy,false);
    end else begin
      OutString(5,0,curncy,false);
      OutString(4,0,"",true);
      OutString(8,0,"",false);
    end;
  end else begin
    if (lossv==0) then begin lossv = blankval; end;
    OutVal(420,0,lossv,M4Val,true);
  end;
  OutVal(1,0,balp,M4Val,true);
  EndFormat;
  if (RepSpec.flags[15]!=0) then begin
    StartFormat(15);
    OutString(pos1,0,IPr.OfficialSerNr,false);
    EndFormat;
  end;
  return;
end;

global
procedure CUPer_PrintReceipt(record RcVc RepSpec,record IPVc IPr,record CUVc CUp,record BaseCurBlock bascur,
                             record IPrsVc IPrsr,Array LongInt aipnr,var Integer acnt,
                             var val balp,var val SumDebet,var val SumCredit,var val totloss,var val totgain,
                             Integer pos1,Integer pos2,Integer fwdbalinvoices,
                             var string statmentcurrency,var string remainingcurrencies,vector Boolean vreportedcurncy)
begin
  val v,v2,woff,fee,cdisc,lossv,t,cuscurval,basecurval,basecurval2;
  Integer ipcurcnt;
  Integer i,rwcnt;
  Integer ai; 
  row IPVc IPrw;
  LongInt prepayno;
  string 20 curncy,aracc;
  record IVVc IVr;
  Boolean testf;
  string 255 tstr,t2;
  array val ipav1,ipav2;
  array string 20 ipacur;
  Integer curi;
  Integer loop;
  val opensum,bv;
    
  rwcnt = MatRowCnt(IPr);
  if (RepSpec.flags[8]!=0) then begin
    for (ai=0;ai<acnt;ai=ai+1) begin
      if (aipnr[ai]==IPr.SerNr) then begin 
        rwcnt = 0; 
        ai = acnt;
      end;
    end;
  end;
LCUPer_PrintReceiptLoop:;  
  v = blankval;
  woff = blankval;
  fee = blankval;
  cdisc = blankval;
  prepayno = -1;
  InitCurncyTotals(ipacur,ipav1,ipcurcnt);
  InitCurncyTotals(ipacur,ipav2,ipcurcnt);
  BeginCurncyTotals(ipcurcnt);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(IPr,i,IPrw);
    testf = false;
    if (blankdate(IPrw.PayDate) or (IPrw.PayDate==IPrsr.CustDate)) then begin
      testf = true;
    end;
    if (RepSpec.flags[2]!=0) then begin
      if (nonblank(RepSpec.CurncyCode)) then begin
        if (IPrw.InvCurncy!=RepSpec.CurncyCode) then begin testf = false; end;
      end;
/*    
CURRENCIES-TODO        
      if (nonblank(statmentcurrency)) then begin
        if (IPrw.InvCurncy!=statmentcurrency) then begin 
          if (vreportedcurncy[IPrw.InvCurncy]==false) then begin
            remainingcurrencies = AddObjectToObjectList(remainingcurrencies,IPrw.InvCurncy);        
          end;
          testf = false;
        end;
      end else begin
        statmentcurrency = IPrw.InvCurncy;
      end;    
*/      
    end;
/*    
CURRENCIES-TODO  
    vreportedcurncy[statmentcurrency] = true;
*/    

    if (testf) then begin
//      lossv = 0; //loss is calculated below, and if more than 1 line on receipt it cannot be set to zero
      if (RepSpec.flags[3]==0) then begin
        if (RepSpec.flags[8]==0) then begin
          if (IPrw.InvoiceNr!=IPrsr.IVNr) then begin testf = false; end;
        end else begin
          switch (loop) begin
            case 0: if (IPrw.InvoiceNr<0) then begin testf = false; end;
            case 1: if (IPrw.InvoiceNr>0) then begin testf = false; end;
          end;
//          if (IPrw.InvoiceNr!=IPrsr.IVNr) then begin testf = false; end;//what if many invoics on same rec ? 
        end;
        if (testf) then begin
          if (IPr.TransDate==IPrsr.TransDate) then begin
            if (IPrw.CustCode==CUp.Code) then begin
              aracc = IPrw.ARAcc;
              if (blank(aracc)) then begin
                aracc = GetCustomerOnAccountAC(IPrw.CustCode);
              end;              
              if (nonblank(RepSpec.FirstAcc)) then begin
                if (aracc!=RepSpec.FirstAcc) then begin
                  goto L11IP;
                end;
              end;
              if (RepSpec.flags[8]!=0) then begin
                AddToIPArray(aipnr,acnt,IPr.SerNr);
              end;
              curncy = IPrw.InvCurncy;
              if (curncy!=CUp.CurncyCode) and (nonblank(CUp.CurncyCode)) then begin
                curncy = bascur.BaseCur1;
              end;
              t = IPrw.InvVal;
              cuscurval = IPrw.InvVal;
              if (IPrw.InvoiceNr>0) then begin
                IVr.SerNr = IPrw.InvoiceNr;
                if (ReadFirstMain(IVr,1,true)) then begin
                  if (fwdbalinvoices==1) then begin
                    if (CheckIfIVOpen(RepSpec.sEndDate,IVr,"",opensum,true,false)==false) then begin
                      goto L11IP;
                    end;
                  end;
                  basecurval = IPrw.B1BankVal;
                  if (basecurval==0) then begin
                    basecurval = MulWithRateToBase1(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,DefaultCurRoundOff);
                    if ((bascur.BaseCur1==IPrw.BankCurncy) and (IPrw.BankCurncy<>IPrw.InvCurncy)) then begin
                      basecurval = IPrw.BankVal;
                    end;
                  end;
                end;
              end else begin
                if (IPrw.CUPNr>0) then begin
                  if (fwdbalinvoices==1) then begin
                    if (IsPrepaymentOpen(RepSpec.sEndDate,IPrw.CUPNr,opensum)==false) then begin
                      goto L11IP;
                    end;
                  end;
                  basecurval = MulWithRateToBase1(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,DefaultCurRoundOff);
                  if ((bascur.BaseCur1==IPrw.BankCurncy) and (IPrw.BankCurncy<>IPrw.InvCurncy)) then begin
                    if (RepSpec.flags[2]==0) then begin
                      basecurval = IPrw.BankVal; //must show same as on prepayment account
                    end;
                  end;
                  if (blank(IPrw.B1BankVal)==false) then begin
                    basecurval = IPrw.B1BankVal;
                  end;
                end else begin
                  if ((bascur.BaseCur1==IPrw.BankCurncy) or blank(IPrw.BankCurncy)) then begin
//                    if (RepSpec.flags[2]==0) then begin
                      basecurval = IPrw.BankVal; //must show same as on prepayment account, and BankVal does not have amount posted to On Acc Acc 
//                    end;
                  end else begin
                    basecurval = MulWithRateToBase1(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,DefaultCurRoundOff);
                  end;
                  if (blank(IPrw.B1BankVal)==false) then begin
                    basecurval = IPrw.B1BankVal;
                  end;
                end;
              end;
              if (RepSpec.flags[2]==0) then begin
                cuscurval = basecurval;
                t = cuscurval;
                if (IPrw.InvoiceNr!=-1) then begin                                             
                  if (IPrw.stp!=7) then begin                 
                    FindAllPrepayLosses(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,IPrw.CUPNr,cuscurval,lossv,IVr,IPrw.InvoiceNr,-1,false,bascur,IPrw.B1BankVal,IPrw.BankCurncy);
                    lossv = cuscurval - lossv;
                    if (lossv>0) then begin
                      totloss = totloss - lossv;
                    end else begin
                      totgain = totgain + lossv;
                    end;
                    cuscurval = t;
                  end;
                end else begin
//                  if (IPrw.InvCurncy==CUp.CurncyCode) or (IPrw.InvCurncy==bascur.BaseCur1) then begin
                  if (IPrw.InvCurncy==bascur.BaseCur1) then begin
                    cuscurval = t;
                  end else begin
                    if (IPrw.CUPNr!=-1) then begin    
/*                                   
                      bv = IPrw.B1BankVal;
                      if (blank(bv)) then begin
                        if (IPrw.BankCurncy==bascur.BaseCur1) then begin
                          bv = IPrw.BankVal;
                        end;
                      end;
                      FindAllPrepayLosses(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,IPrw.CUPNr,cuscurval,lossv,IVr,IPrw.InvoiceNr,IPr.SerNr,true,bascur,IPrw.B1BankVal,IPrw.BankCurncy);
*/                      
                      FindAllPrepayLosses(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,IPrw.CUPNr,cuscurval,lossv,IVr,IPrw.InvoiceNr,IPr.SerNr,true,bascur,basecurval,IPrw.BankCurncy);
                      if (cuscurval==lossv) then begin
                        lossv = 0;
                      end else begin
                        lossv = -lossv;
                      end;
//same must be in SL report            
                      if (lossv<0) then begin//(lossv>0)
                        totgain = totgain - lossv;
                      end else begin
                        totloss = totloss + lossv;
                      end;                
                    end else begin
                      lossv = 0;
                      if ((bascur.BaseCur1==IPrw.BankCurncy or blank(IPrw.BankCurncy)) and blank(IPrw.B1BankVal)) then begin
//                        lossv = basecurval - MulWithRateToBase1(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,DefaultCurRoundOff);
                        if (blank(IPrw.B1BankVal)==false) then begin
                          lossv = basecurval - IPrw.B1BankVal;
                        end else begin
                          lossv = basecurval - IPrw.BankVal;
                        end;
                      end;
                    end;
                  end;
                end;
              end else begin
                if (IPrw.InvCurncy==CUp.CurncyCode) or (IPrw.InvCurncy==bascur.BaseCur1) then begin
                  cuscurval = t;
                end else begin
                  t = cuscurval;
//if is was here, payments in base curncy didnt work,  FindAllPrepayLosses
                  if (IPrw.InvoiceNr!=-1) then begin  
                    if (IPrw.stp!=7) then begin                 
                      FindAllPrepayLosses(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,IPrw.CUPNr,cuscurval,lossv,IVr,IPrw.InvoiceNr,-1,false,bascur,IPrw.B1BankVal,IPrw.BankCurncy);
                      v2 = cuscurval;
                      lossv = basecurval - lossv;
                      if (lossv>0) then begin
                        totloss = totloss + lossv;
                      end else begin
                        totgain = totgain - lossv;
                      end;
                      cuscurval = v2;
                    end;
                  end else begin
                    FindAllPrepayLosses(IPrw.InvCurncy,IPr.TransDate,IPrw.InvVal,IPrw.CUPNr,cuscurval,lossv,IVr,IPrw.InvoiceNr,IPr.SerNr,true,bascur,IPrw.B1BankVal,IPrw.BankCurncy);//basecurval instaed of IPrw.B1BankVal ? 
                    lossv = basecurval - lossv;
                    if (IPrw.CUPNr!=-1) then begin                   
                      lossv = basecurval - lossv;
                      if (lossv<0) then begin//(lossv>0)
                        totloss = totloss + lossv;
                      end else begin
                        totgain = totgain - lossv;
                      end;                
                    end else begin
                      lossv = 0;
                    end;
                    
//                    AddCurncyTotals(ipacur,ipav2,ipcurcnt,IPrw.InvCurncy,balp);
//                    AddCurncyTotals(ipacur,ipav3,ipcurcnt,IPrw.InvCurncy,t);
                  end;
                end;
                if (IPrw.stp==1) then begin//other row types are in another place
                  if (IPrw.CUPNr<=0) then begin  
                    AddCurncyTotals(ipacur,ipav1,ipcurcnt,IPrw.InvCurncy,IPrw.InvVal);
                    AddCurncyTotals(ipacur,ipav2,ipcurcnt,IPrw.InvCurncy,basecurval);
                  end;
                end;
//                AddCurncyTotals(ipacur,ipav2,ipcurcnt,IPrw.InvCurncy,IPrw.InvVal);

              end;
              prepayno = IPrw.CUPNr;
              if (IPrw.stp!=7) then begin
                if (nonblank(CUp.CurncyCode)) then begin
//                    balp = balp - cuscurval;//balance cannot be calculated here since displayed below base on ipcurcnt array
                  if (cuscurval>0) then begin
                    SumCredit = SumCredit + cuscurval;
                    if (IPrw.CUPNr!=-1) then begin                   
                      SumCredit = SumCredit + lossv;                    
                    end else begin
                      SumCredit = SumCredit - lossv;                    
                    end;
                  end else begin
                    SumDebet = SumDebet - cuscurval;
                    if (IPrw.CUPNr!=-1) then begin                   
                      SumDebet = SumDebet - lossv;
                    end else begin
                      SumDebet = SumDebet + lossv;
                    end;
                  end;
                end else begin
//                    balp = balp - basecurval;//balance cannot be calculated here since displayed below base on ipcurcnt array
                  if (basecurval>0) then begin
                    SumCredit = SumCredit + basecurval;
                    SumCredit = SumCredit - lossv;
                  end else begin
                    SumDebet = SumDebet - basecurval;
//                    SumDebet = SumDebet + lossv;
                    SumDebet = SumDebet - lossv;//JJ
                  end;
                end;
                if (IPrw.InvoiceNr>0) then begin
                  balp = balp + lossv;
                end else begin
                  balp = balp - lossv;
                end;
              end;
              prepayno = IPrw.CUPNr;
              if (IPrw.stp==1) then begin
                if (IPrw.CUPNr>0) then begin
                  if (RepSpec.ArtMode==1) then begin                
                    tstr = USetStr(2486);
                    if (IPrsr.IVNr==-1) then begin
                      t2 = USetStr(2497);
                      if (nonblank(t2)) then begin
                        tstr = t2;
                      end;
                    end;
                    if (nonblank(CUp.CurncyCode)) then begin
                      balp = balp - t;
                    end else begin
                      balp = balp - basecurval;
                    end;
                    lossv = -lossv;
                    if (RepSpec.flags[2]!=0) then begin
                      CUPerIPLine(RepSpec,pos1,pos2,curncy,IPrsr.CustDate,IPr,IPrw.InvoiceOfficialSerNr,IPrsr,prepayno,t,lossv,balp,loop!=0);
                    end else begin
                      CUPerIPLine(RepSpec,pos1,pos2,curncy,IPrsr.CustDate,IPr,IPrw.InvoiceOfficialSerNr,IPrsr,prepayno,t,lossv,balp,loop!=0);
                    end;
                  end else begin
                    v = v + t;
                  end;
                end else begin                
//                  balp = balp - t;
                  v = v + t;
                end;
              end;
              if (IPrw.stp==5) then begin
                cdisc = cdisc + t;
              end;
              if (IPrw.stp==6) then begin
                woff = woff + t;
              end;
              if (IPrw.stp==7) then begin
                fee = fee + t;
              end;
L11IP:;              
            end;
          end;
        end;        
      end;
      if (RepSpec.flags[3]==1) then begin // Is this Used at all ??? I haven't updated this 
        if (IPrw.InvoiceNr==IPrsr.IVNr) then begin
          if (IPr.TransDate==IPrsr.TransDate) then begin
            if (IPrw.CustCode==CUp.Code) then begin
              curncy = IPrw.InvCurncy;
              t = IPrw.InvVal;
              cuscurval = IPrw.InvVal;
              IVr.SerNr = IPrw.InvoiceNr;
              if (ReadFirstMain(IVr,1,true)) then begin
                cuscurval = MulRateToBase1(IVr.CurncyCode,IPrw.InvVal,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff);
              end;
              if (RepSpec.flags[2]==0) then begin
                if ((bascur.BaseCur1==IPrw.BankCurncy) and (IPrw.BankCurncy<>IPrw.InvCurncy)) then begin
                  cuscurval = IPrw.BankVal;
                end;
                t = cuscurval;
              end else begin
                if (IPrw.InvCurncy==CUp.CurncyCode) then begin
                  cuscurval = t;
                end;  
              end;
              if (IPrw.stp!=7) then begin
                balp = balp - cuscurval;
                SumCredit = SumCredit + cuscurval;
              end;
              prepayno = IPrw.CUPNr;
              if (IPrw.stp==1) then begin
                v = v + t;
              end;  
              if (IPrw.stp==5) then begin
                cdisc = cdisc + t;
              end;  
              if (IPrw.stp==6) then begin
                woff = woff + t;
              end;  
              if (IPrw.stp==7) then begin
                fee = fee + t;
              end;  
            end;
          end;
        end;
      end;
    end;       
  end;
  if (v!=0) then begin
    if (RepSpec.ArtMode==1) then begin                
      tstr = USetStr(2486);
      if (IPrsr.IVNr==-1) then begin
        t2 = USetStr(2497);
        if (nonblank(t2)) then begin
          tstr = t2;
        end;
      end;
      if (RepSpec.flags[2]!=0) then begin
        for (curi=0;curi<ipcurcnt;curi=curi+1) begin
          if (nonblank(CUp.CurncyCode)) and (CUp.CurncyCode!=bascur.BaseCur1) then begin
            balp = balp - ipav1[curi];
          end else begin
            balp = balp - ipav2[curi];
          end;
          CUPerIPLine(RepSpec,pos1,pos2,ipacur[curi],IPrsr.CustDate,IPr,"",IPrsr,-1,v,lossv,balp,loop!=0);
//          CUPerIPLine(RepSpec,pos1,pos2,ipacur[curi],IPrsr.TransDate,IPr,IPrsr,prepayno,ipav1[curi],lossv,balp);          
        end;
      end else begin
        balp = balp - v;
        CUPerIPLine(RepSpec,pos1,pos2,curncy,IPrsr.CustDate,IPr,IPrw.InvoiceOfficialSerNr,IPrsr,prepayno,v,lossv,balp,loop!=0);
      end;
    end;
  end;
  if (woff!=0) then begin
    if (RepSpec.ArtMode==1) then begin
      StartFormat(15);
      OutString(pos1,0,USetStr(2451),false);
      OutString(3,0,"",true);
      balp = balp - woff;
      if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
        OutString(3,0,"",true);
        OutString(3,0,"",true);
        OutString(3,0,"",true);
      end;
      OutVal(4,0,woff,M4Val,true);
      if (RepSpec.flags[2]==1) then begin
        OutString(8,0,curncy,false);
      end; 
      OutVal(1,0,balp,M4Val,true);
      EndFormat;
    end;
  end;
  if (cdisc!=0) then begin
    if (RepSpec.ArtMode==1) then begin
      StartFormat(15);
      OutString(pos1,0,USetStr(2449),false);
      OutString(3,0,"",true);
      balp = balp - cdisc;
      if (RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel) or (RepSpec.Media==mtClipboard) then begin
        OutString(3,0,"",true);
        OutString(3,0,"",true);
        OutString(3,0,"",true);
      end;
      OutVal(4,0,cdisc,M4Val,true);
      if (RepSpec.flags[2]==1) then begin
        OutString(8,0,curncy,false);
      end;  
      OutVal(1,0,balp,M4Val,true);
      EndFormat;
    end;
  end;
  if (RepSpec.flags[8]!=0) then begin
    switch (loop) begin
      case 0:
        loop = 1;
        goto LCUPer_PrintReceiptLoop;
    end;
  end;
  RETURN;
END;
