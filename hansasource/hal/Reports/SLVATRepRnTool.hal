external function string 255 CreateInvoiceNumber(LongInt,string);
external procedure GetVATText(string,var string);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure GetVATdouble(string,var val,var val,Integer);

function Boolean IsInvoiceCredited(record VATIVVc VATIVr)
BEGIN
  Boolean res;
  record IVVc IVr;
  
  if (VATIVr.InvType==kInvoiceTypeCredit or VATIVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
    res = true;
  end else begin
    IVr.SerNr = VATIVr.IVNr;
    if (ReadFirstMain(IVr,1,true)) then begin
      if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin
        res = true;
      end;
    end;
  end;
  IsInvoiceCredited = res;
  RETURN;
END;

function Date FindFirstIPDate(LongInt invnr)
BEGIN
  Date res;
  record IPrsVc IPrsr;
  record IPVc IPr;
  
  IPrsr.IVNr = invnr;
  IPrsr.TransType = kIPrsTransTypeReceipt;
  if (ReadFirstKey("IVKey",IPrsr,2,true)) begin
    IPr.SerNr = IPrsr.TransNr;
    if (ReadFirstMain(IPr,1,true)) then begin
      res = IPr.TransDate;
    end;
  end;  
  FindFirstIPDate = res;
  RETURN;
END;

global
function Boolean PrintVATIVDataSLVATRep(record RcVc RepSpec,var LongInt lpnr,var Integer inclvat,Integer nr,record VATIVVc VATIVr)
BEGIN
  record CUVc CUr;
  Boolean res;
  Date firstipdate;
  Integer i,rwcnt;
  row VATIVVc VATIVrw;
  string 255 tstr;
  val vatv,vatprc,tax1;
  record IVVc IVr;
  
    switch (nr) begin
      case 0:
        if (VATIVr.TransDate<RepSpec.sStartDate) then begin
          goto LPrintVATIVData;
        end;
/*      
        if (VATIVr.TransDate==VATIVr.IVTransDate) then begin
          goto LPrintVATIVData;
        end;
*/              
      case 1:
        if (DateInRange(VATIVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin
          if (VATIVr.TransDate!=VATIVr.IVTransDate) then begin
            goto LPrintVATIVData;
          end;
        end;
/*            
        if (VATIVr.TransDate!=VATIVr.IVTransDate) then begin
          goto LPrintVATIVData;
        end;
*/        
      case 2:
        if (IsInvoiceCredited(VATIVr)) then begin
          if (DateInRange(VATIVr.IVTransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
//             goto LPrintVATIVData; 
//why is it for credit invoices only?, weird, I leave it just in case, 
//make credit invoice and Move VAT, and VAT Next Period doesnt work
          end;
        end;
    end;
    IVr.SerNr = VATIVr.IVNr;
    ReadFirstMain(IVr,1,true);
    res = true;
    inclvat = 0;
    CUr.Code = VATIVr.CustCode;
    if (ReadFirstMain(CUr,1,true)) then begin
    end;
    if (RepSpec.flags[13]!=0) and (RepSpec.Media==mtFile) then begin
      StartFormat(15);
      OutLongInt(0,0,lpnr,false);
      OutStringID(40,"DblVATIVVc",VATIVr.IVNr,false,VATIVr.SerNr);
      OutDate(120,0,VATIVr.IVInvDate,false);
      OutDate(80,0,VATIVr.TransDate,false);
      OutDate(80,0,VATIVr.TransDate,false);
      OutString(160,0,"",false);
      OutString(200,0,VATIVr.Sorting,false);
      OutLongInt(240,0,VATIVr.ExportFlag,false);
      OutVal(280,0,VATIVr.Sum4,M4Val,true);
      OutString(320,0,VATIVr.CustCode,false);
      OutString(360,0,VATIVr.Addr0,false);
      OutString(400,0,VATIVr.VATNr,false);      
      OutString(440,0,VATIVr.Addr1,false);
      OutString(440,0,VATIVr.Addr2,false);
      OutString(440,0,VATIVr.Addr3,false);
      OutString(440,0,VATIVr.InvAddr3,false);
      OutString(480,0,CUr.CountryCode,false);      
      EndFormat;      
      rwcnt = MatRowCnt(VATIVr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(VATIVr,i,VATIVrw);
        StartFormat(15);
         OutString(0,0,VATIVrw.VATCode,false);
         GetVATText(VATIVrw.VATCode,tstr);
         OutString(40,0,tstr,false);
         MulVATIV(VATIVrw.VATCode,VATIVrw.Sum,vatv,tax1,VATIVr.InclVAT,VATIVr.NoTAXonVAT);
         OutVal(80,0,VATIVrw.Sum-vatv,M4Val,true);
         GetVATdouble(VATIVrw.VATCode,vatprc,tax1,VATIVr.InclVAT);
         OutVal(120,0,vatprc,M4Val,true);
         OutVal(160,0,vatv,M4Val,true);
         OutVal(200,0,VATIVrw.Sum,M4Val,true);
        EndFormat;
      end;
      lpnr = lpnr + 1;
    end else begin
      if (RepSpec.ArtMode==1) then begin
        firstipdate = FindFirstIPDate(VATIVr.IVNr);
        StartFormat(15);
        OutLongInt(0,0,lpnr,false);
        OutLongInt(3,"DblCustPS2",VATIVr.IVNr,false);
        OutDateID(4,"DblVATIVVcID",VATIVr.TransDate,false,VATIVr.SerNr);
        OutString(5,0,VATIVr.CustCode,false);
        OutString(6,0,VATIVr.Addr0,false);
        EndFormat;
        StartFormat(15);
         if (blank(VATIVr.InvoiceNr)) then begin
           OutString(2,0,IVr.OfficialSerNr,false);
         end else begin
           OutString(2,0,VATIVr.InvoiceNr,false);
         end;
         OutDate(4,0,VATIVr.IVInvDate,false);
         OutString(5,0,VATIVr.VATNr,false);
         OutString(6,0,VATIVr.Addr1,false);
        EndFormat;
        if (nonblank(VATIVr.Addr2)) then begin
          StartFormat(15);
           OutDate(4,0,firstipdate,false);
           OutString(6,0,VATIVr.Addr2,false);
          EndFormat;
        end;
        if (nonblank(VATIVr.Addr3)) then begin
          StartFormat(15);
           OutString(6,0,VATIVr.Addr3,false);
          EndFormat;
        end;
        if (nonblank(VATIVr.InvAddr3)) then begin
          StartFormat(15);
           OutString(6,0,VATIVr.InvAddr3,false);
          EndFormat;
        end;
        if (nonblank(VATIVr.InvAddr4)) then begin
          StartFormat(15);
           OutString(6,0,VATIVr.InvAddr4,false);
          EndFormat;
        end;
        lpnr = lpnr + 1;
        StartFormat(10);
        EndFormat;
        if (RepSpec.flags[12]!=0) then begin
          Gray_Divider(40,1);
        end else begin
          Gray_Divider(4,1);
        end;
      end;
    end;
LPrintVATIVData:;
  PrintVATIVDataSLVATRep = res;
  return;
end;

global
procedure PrintIVDataSLVATRep(record RcVc RepSpec,record IVVc IVr,record TRVc VATIVTRr,var LongInt lpnr,var Integer inclvat,var Boolean firstivf,Integer flags12)
begin
  record CUVc CUr;
  Date td,firstipdate;
  val vatv,vatprc,tax1;
  row IVVc IVrw;
  string 255 tstr;
  Integer i,rwcnt;
  
  CUr.Code = IVr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;
  if (RepSpec.flags[13]!=0) and (RepSpec.Media==mtFile) then begin  
    StartFormat(15);
    OutLongInt(0,0,lpnr,false);
    OutString(40,0,CreateInvoiceNumber(IVr.SerNr,IVr.OfficialSerNr),false);
    if (RepSpec.flags[14]!=0) then begin
      OutDate(80,0,IVr.ServiceDelDate,false);
    end else begin
      OutDate(120,0,IVr.InvDate,false);
    end;
    OutDate(80,0,IVr.TransDate,false);
    if (RepSpec.flags[14]==0) then begin
      OutDate(80,0,IVr.ServiceDelDate,false);
    end;
    OutString(160,0,IVr.InvType,false);
    OutString(200,0,IVr.Sorting,false);
    OutLongInt(240,0,IVr.ExportFlag,false);
    OutVal(280,0,IVr.Sum4,M4Val,true);
    OutString(320,0,IVr.CustCode,false);
    OutString(360,0,IVr.Addr0,false);
    OutString(400,0,IVr.VATNr,false);    
    OutString(440,0,IVr.Addr1,false);
    OutString(440,0,IVr.Addr2,false);
    OutString(440,0,IVr.Addr3,false);
    OutString(440,0,IVr.InvAddr3,false);
    OutString(480,0,CUr.CountryCode,false);    
    EndFormat;    
    rwcnt = MatRowCnt(IVr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVr,i,IVrw);
      StartFormat(15);
       OutString(0,0,IVrw.VATCode,false);
       GetVATText(IVrw.VATCode,tstr);
       OutString(40,0,tstr,false);
       MulVATIV(IVrw.VATCode,IVrw.Sum,vatv,tax1,IVr.InclVAT,IVr.NoTAXonVAT);
       if (IVr.InclVAT>0) then begin
         OutVal(80,0,IVrw.Sum-vatv,M4Val,true);
       end else begin
         OutVal(80,0,IVrw.Sum,M4Val,true);
       end;
       GetVATdouble(IVrw.VATCode,vatprc,tax1,IVr.InclVAT);
       OutVal(120,0,vatprc,M4Val,true);
       OutVal(160,0,vatv,M4Val,true);
       OutVal(200,0,IVrw.Sum,M4Val,true);
      EndFormat;
    end;
    lpnr = lpnr + 1;
  end else begin
    if (firstivf) then begin
      StartFormat(15);
      OutString(0,0,USetStr(10672),false);
      EndFormat;
      Gray_Divider(0,1);
      firstivf = false;
    end;
    inclvat = 0;
    firstipdate = FindFirstIPDate(IVr.SerNr);
    StartFormat(15);
    OutLongIntOvst(0,0,lpnr,false,IVr.Invalid);
    OutStringOvst(3,"DblCustPS2",CreateInvoiceNumber(IVr.SerNr,IVr.OfficialSerNr),false,IVr.Invalid);
    if (RepSpec.flags[14]!=0) then begin
      td = IVr.ServiceDelDate;
    end else begin
      td = IVr.TransDate;
    end;
    if (VATIVTRr.Number>0) then begin
      td = VATIVTRr.TransDate;
    end;    
    OutDateOvst(4,0,td,false,IVr.Invalid);
    OutStringOvst(5,0,IVr.CustCode,false,IVr.Invalid);
    OutStringOvst(6,0,IVr.Addr0,false,IVr.Invalid);
    EndFormat;
    StartFormat(15);
     OutString(2,0,IVr.OfficialSerNr,false);
     OutDateOvst(4,0,IVr.InvDate,false,IVr.Invalid);
     OutStringOvst(5,0,IVr.VATNr,false,IVr.Invalid);
     OutStringOvst(6,0,IVr.Addr1,false,IVr.Invalid);
    EndFormat;
    if (nonblank(firstipdate)) then begin
      StartFormat(15);
       OutDate(4,0,firstipdate,false);
      EndFormat;
    end;
//    if (nonblank(IVr.Addr2)) then begin
      StartFormat(15);
       if (RepSpec.flags[14]==0) then begin
         OutDate(4,0,IVr.ServiceDelDate,false);
       end;
       switch (IVr.InvType) begin
         case kInvoiceTypeCash: tstr = USetStr(2363);
         case kInvoiceTypeCashInvoiceReceiptPRT: tstr = USetStr(2363);
         case kInvoiceTypeCredit: tstr = USetStr(2362);
         case kInvoiceTypeCreditSpecialSales: tstr = USetStr(2362);
         case kInvoiceTypeInterest: tstr = USetStr(2364);
         otherwise
           tstr = USetStr(2361);
       end;
       OutString(5,0,tstr,false);       
       OutString(6,0,IVr.Addr2,false);
      EndFormat;
      if (nonblank(IVr.Addr3)) then begin
        StartFormat(15);
         OutString(6,0,IVr.Addr3,false);
        EndFormat;
      end;
      if (nonblank(IVr.InvAddr3)) then begin
        StartFormat(15);
         OutString(6,0,IVr.InvAddr3,false);
        EndFormat;
      end;
      if (nonblank(IVr.InvAddr4)) then begin
        StartFormat(15);
         OutString(6,0,IVr.InvAddr4,false);
        EndFormat;
      end;
//    end;
    lpnr = lpnr + 1;
    StartFormat(10);
    EndFormat;
    if (flags12!=0) then begin
      Gray_Divider(40,1);
    end else begin
      Gray_Divider(4,1);
    end;
  end;
  return;
end;

global
procedure PrintIVCashDataSLVATRep(record RcVc RepSpec,record IVCashVc IVCashr,var LongInt lpnr,var Integer inclvat,var Boolean firstivf,Integer flags12)
BEGIN
  record CUVc CUr;
  Date td,firstipdate;
  val vatv,vatprc,tax1;
  row IVCashVc IVCashrw;
  string 255 tstr;
  Integer i,rwcnt;
  
  CUr.Code = IVCashr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;
  if (RepSpec.flags[13]!=0) and (RepSpec.Media==mtFile) then begin  
    StartFormat(15);
    OutLongInt(0,0,lpnr,false);
    OutLongInt(40,0,IVCashr.SerNr,false);
    OutDate(120,0,IVCashr.InvDate,false);
    OutDate(80,0,IVCashr.TransDate,false);
//    OutDate(80,0,IVCashr.ServiceDelDate,false);
//    OutString(160,0,IVCashr.InvType,false);
//    OutString(200,0,IVCashr.Sorting,false);
    OutLongInt(240,0,CUr.ExportFlag,false);
    OutVal(280,0,IVCashr.Sum4,M4Val,true);
    OutString(320,0,IVCashr.CustCode,false);
    OutString(360,0,IVCashr.Addr0,false);
    OutString(400,0,IVCashr.VATNr,false);    
    OutString(440,0,IVCashr.Addr1,false);
    OutString(440,0,IVCashr.Addr2,false);
    OutString(440,0,IVCashr.Addr3,false);
    OutString(440,0,IVCashr.InvAddr3,false);
    OutString(480,0,CUr.CountryCode,false);    
    EndFormat;    
    rwcnt = MatRowCnt(IVCashr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVCashr,i,IVCashrw);
      StartFormat(15);
       OutString(0,0,IVCashrw.VATCode,false);
       GetVATText(IVCashrw.VATCode,tstr);
       OutString(40,0,tstr,false);
       MulVATIV(IVCashrw.VATCode,IVCashrw.Sum,vatv,tax1,IVCashr.InclVAT,IVCashr.NoTAXonVAT);
       OutVal(80,0,IVCashrw.Sum-vatv,M4Val,true);
       GetVATdouble(IVCashrw.VATCode,vatprc,tax1,IVCashr.InclVAT);
       OutVal(120,0,vatprc,M4Val,true);
       OutVal(160,0,vatv,M4Val,true);
       OutVal(200,0,IVCashrw.Sum,M4Val,true);
      EndFormat;
    end;
    lpnr = lpnr + 1;
  end else begin
    if (firstivf) then begin
      StartFormat(15);
      OutString(0,0,USetStr(19640),false);
      EndFormat;
      Gray_Divider(0,1);
      firstivf = false;
    end;
    inclvat = 0;
    firstipdate = FindFirstIPDate(IVCashr.SerNr);
    StartFormat(15);
    OutLongIntOvst(0,0,lpnr,false,IVCashr.Invalid);
    OutLongIntOvst(3,"DblIVCashVc",IVCashr.SerNr,false,IVCashr.Invalid);
    td = IVCashr.TransDate;
    OutDateOvst(4,0,td,false,IVCashr.Invalid);
    OutStringOvst(5,0,IVCashr.CustCode,false,IVCashr.Invalid);
    OutStringOvst(6,0,IVCashr.Addr0,false,IVCashr.Invalid);
    EndFormat;
    StartFormat(15);
//     OutString(2,0,IVCashr.InvoiceNr,false);
     OutDateOvst(4,0,IVCashr.InvDate,false,IVCashr.Invalid);
     OutStringOvst(5,0,IVCashr.VATNr,false,IVCashr.Invalid);
     OutStringOvst(6,0,IVCashr.Addr0,false,IVCashr.Invalid);
    EndFormat;
    if (nonblank(CUr.InvAddr1)) then begin
      StartFormat(15);
       OutDate(4,0,firstipdate,false);
       OutString(6,0,CUr.InvAddr1,false);
      EndFormat;
    end;
    if (nonblank(CUr.InvAddr2)) then begin
      StartFormat(15);
//       OutDate(4,0,IVCashr.ServiceDelDate,false);
       OutString(6,0,CUr.InvAddr2,false);
      EndFormat;
    end;
    lpnr = lpnr + 1;
    StartFormat(10);
    EndFormat;
    if (flags12!=0) then begin
      Gray_Divider(40,1);
    end else begin
      Gray_Divider(4,1);
    end;
  end;
  RETURN;
END;
