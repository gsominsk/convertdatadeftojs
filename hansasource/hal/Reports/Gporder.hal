external procedure FindSalesExVat(record TaxMatrixVc,string,val,Integer,Integer,var val);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function roundmode SetRoundModeD(Integer);
external procedure HT2Per(Date,Date,var string);
external procedure HTOKF(Integer,Integer, var string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure HTDetailLevel(Integer, var string);
external procedure HTCusts(string, string, var string);
external procedure HTNr(Integer, Integer, LongInt, LongInt, var string);
external procedure HTSaleMan(string, var string);
external procedure ValToHALString(val,string,var string);

procedure MakeMarginString(val t,var string res)
begin
  string 255 tstr;

  ValToHALString(t,"2",tstr);  
  if (t<0) then begin
//    res = "-";
    res = "";
  end else begin
    res = "+";
  end;
  res = res & tstr;
  res = res & "%";
  return;
end;

global
procedure CalcGPProc(var val gp,val total,var string gppstr)
begin
  val gpp;
  
  if (gp==0) then begin gp = 1; end;
  gpp = gp * 100;
  gpp = gpp / total;  
  if (gp==total) then begin gpp = 100; end;
  gpp = Round(gpp,SetRoundModeD(0));
  MakeMarginString(gpp,gppstr);
  return;
end;

procedure HTObj(String a, var string tstr)
begin
 record ObjVc RUr;
 Integer cnt;
 cnt = 0;
 if (cnt==1) then begin
  RUr.Code = a;
  if (ReadFirstMain(RUr,1,true)) then begin
   tstr = USetStr(3015);
   tstr = tstr & RUr.Code;
   tstr = tstr & "  ";
   tstr = tstr & RUr.Comment;
  end else begin
   tstr = USetStr(3015);
   tstr = tstr & a;
  end;
 end else begin
  tstr = USetStr(3015);
  tstr = tstr & a;
 end;
return;
end;

global
procedure ORGPRn(record RcVc RepSpec)
begin
 Record ORVc ORr;
 Boolean TrHs;
 Integer i,rwcnt;
 val iv,gps,t;
 val tottotsales, orsum,rowinbase,TotSum,gpsum;
 val totsales, totgp;
 Boolean testf;
 vector Boolean testfrowf;
 Boolean firstf;
 Row ORVc ORrw;
 LongInt afr,ato;
 string 255 tstr;
 string 255 sm;  //salesman
 Integer rw;
 string 255 ckey,location;
 Integer keys;
 record INVc INr;
 record TaxMatrixVc TMr;
 
 afr = FirstInRange(RepSpec.f1,50);
 ato = LastInRange(RepSpec.f1,50);

 totsales = 0;
 totgp = 0;
 TotSum = 0;
 gpsum = 0;
 rw = 1;
  
  StartReportJob(USetStr(2661));
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTDetailLevel(RepSpec.ArtMode,tstr);
   Header(rw,tstr,0);
   HTNr(1823,1821,afr,ato,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTCusts(RepSpec.f2,"",tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTSaleMan(RepSpec.AccStr,tstr);
   if (nonblank(tstr)) then begin
     Header(rw,tstr,1);
     rw = rw + 1;
   end;
   if (RepSpec.flags[1]==1) then begin
     tstr = UsetStr(2664);
     Header(rw,tstr,1);
     rw = rw +1;
   end;
   if (nonblank(RepSpec.ObjStr)) then begin
     HTObj(RepSpec.ObjStr,tstr);
     Header(rw,tstr,1);
     rw = rw + 1;
   end;
   HTOKF(RepSpec.flags[7],RepSpec.flags[8],tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
  EndHeader;

  if (RepSpec.ArtMode==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2562),false);
    OutString(110,0,USetStr(2563),false);      
    OutString(180,0,USetStr(2564),false);  
    OutString(360,0,USetStr(2662),true);
    OutString(440,0,USetStr(2663),true);
    OutString(480,0,USetStr(2725),true);
    EndFormat; 
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
     OutString(0,0,USetStr(2562),false);
     OutString(130,0,USetStr(2563),false);      
     OutString(360,0,USetStr(2662),true);
     OutString(440,0,USetStr(2663),true);
     OutString(480,0,USetStr(2725),true);
    EndFormat;
  end;    
  ORr.SerNr = afr;
  if (RepSpec.ArtMode==0) then begin
    Gray_Divider(0,1);
  end;
 //Sorting on the report
  if RepSpec.flags[2]==0 then begin
    ckey = "SerNr";
    keys = 1;
  end;
  if RepSpec.flags[2]==1 then begin
    ORr.SalesMan = RepSpec.AccStr;
    ckey = "SalesMan";
    keys = 2;
  end;
  firstf = false;
  TrHs = true;
  while LoopKey(ckey,ORr,keys,TrHs) begin
    iv = 0;
    if (RepSpec.flags[2]==0) then begin
      if (ato<>-1) then begin
        if (ORr.SerNr>ato) then begin
          TrHs = false;
        end;
      end;
    end else begin
      if (nonblank(RepSpec.AccStr)) then begin
        if (RepSpec.AccStr<>ORr.SalesMan) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (ORr.OrdDate<RepSpec.sStartDate) then begin
          testf = false;
        end;
      end;
      if (nonblankdate(RepSpec.sEndDate)) then begin
        if (ORr.OrdDate>RepSpec.sEndDate) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.TransStr)) then begin
        if (RepSpec.TransStr!=ORr.PayDeal) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.Stext)) then begin
        if (RepSpec.Stext!=ORr.BranchID) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f2) and (RepSpec.f2<>ORr.CustCode)) then begin testf = false; end;
      if (nonblank(RepSpec.ObjStr) and (SetInSet(RepSpec.ObjStr,ORr.Objects)==false)) then begin testf = false; end;
      if (nonblank(RepSpec.AccStr)) then begin
        if (RepSpec.AccStr!=ORr.SalesMan) then begin testf = false; end;
      end;
      if (ato<>-1) then begin
        if (ORr.SerNr>ato) then begin testf = false; end;
     end;
     if (RepSpec.flags[1]==0) then begin
       if (ORr.Closed<>0) then begin 
         testf = false; 
       end;
     end;
     if (nonblank(RepSpec.f5)) then begin
       if (ORr.SalesGroup <> RepSpec.f5) then begin
         testf = false;
       end;
     end;
     if (ORr.OKFlag==0) then begin
       if (RepSpec.flags[7]==0) then begin
         testf = false;
       end;
     end;
     if (ORr.OKFlag!=0) then begin
       if (RepSpec.flags[8]==0) then begin
         testf = false;
       end;
    end;      
    if (testf) then begin
      testfrowf["Location"] = false;
      testfrowf["Item"] = false;
      testfrowf["ItemGroup"] = false;
      testfrowf["ItemClass"] = false;
      testfrowf["RowObject"] = false;
      if (nonblank(RepSpec.FirstAcc)) or (nonblank(RepSpec.LastAcc)) or (nonblank(RepSpec.f3)) or (nonblank(RepSpec.f4)) or (nonblank(RepSpec.f6)) then begin
        rwcnt = MatRowCnt(ORr);
        for (i=0; i<rwcnt; i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          if (nonblank(RepSpec.f3)) then begin
            if (SetInSet(RepSpec.f3,ORrw.Objects)) then begin
              testfrowf["RowObject"] = true;
            end;
          end;
          if (nonblank(RepSpec.f4)) then begin
            location = ORrw.Location;
            if (blank(location)) then begin location = ORr.Location; end;
            if (location==RepSpec.f4) then begin
              testfrowf["Location"] = true;
            end;
          end;              
          if (nonblank(RepSpec.FirstAcc)) or (nonblank(RepSpec.LastAcc)) or (nonblank(RepSpec.f6)) then begin
            if (nonblank(ORrw.ArtCode)) then begin
              ReadFirstItem(ORrw.ArtCode,INr,false,true);
              if (nonblank(RepSpec.FirstAcc)) then begin
                if (INr.Code==RepSpec.FirstAcc) then begin
                  testfrowf["Item"] = true;
                end;
              end;
              if (nonblank(RepSpec.LastAcc)) then begin
                if (INr.Group==RepSpec.LastAcc) then begin
                  testfrowf["ItemGroup"] = true;
                end;
              end;
              if (nonblank(RepSpec.f6)) then begin
                if (SetInSet(RepSpec.f6,INr.DispGroups)) then begin
                  testfrowf["ItemClass"] = true;
                end;
              end;
            end;
          end;
        end;
        if (nonblank(RepSpec.FirstAcc)) then begin
          if (testfrowf["Item"]==false) then begin  testf = false; end;
        end;
        if (nonblank(RepSpec.LastAcc)) then begin
          if (testfrowf["ItemGroup"]==false) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.f6)) then begin
          if (testfrowf["ItemClass"]==false) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.f4)) then begin
          if (testfrowf["Location"]==false) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.f3)) then begin
          if (testfrowf["RowObject"]==false) then begin testf = false; end;
        end;
      end;
    end;
    if (testf) then begin
      if (RepSpec.flags[2]==1) then begin
        if (firstf) then begin
          if (ORr.SalesMan <> sm) then begin
            Gray_Divider(320,1);
            StartFormat(15);
             OutString(180,0,USetStr(2664),false);
             OutVal(360,0,totsales,M4Val,true);
             OutVal(440,0,totgp,M4Qty,true);
             CalcGPProc(totgp,totsales,tstr);
             OutString(480,0,tstr,true);
            EndFormat;
            StartFormat(15);
            EndFormat;
            totgp = 0;
            totsales = 0;
          end;
        end;
      end;
      sm = ORr.SalesMan;
      firstf = true;
      gps = 0;
      rwcnt = MatRowCnt(ORr);
      for (i=0; i<rwcnt; i=i+1) begin
        MatRowGet(ORr,i,ORrw);
        testf = true;
        if (nonblank(RepSpec.f3)) then begin
          if (SetInSet(RepSpec.f3,ORrw.Objects)==false) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.f4)) then begin
          location = ORrw.Location;
          if (blank(location)) then begin location = ORr.Location; end;
          if (location!=RepSpec.f4) then begin
            testf = false;
          end;
        end;              
        if (nonblank(RepSpec.FirstAcc)) or (nonblank(RepSpec.LastAcc)) or (nonblank(RepSpec.f6)) then begin
          if (nonblank(ORrw.ArtCode)) then begin
            ReadFirstItem(ORrw.ArtCode,INr,false,true);
            if (nonblank(RepSpec.FirstAcc)) then begin
              if (INr.Code!=RepSpec.FirstAcc) then begin
                testf = false;
              end;
            end;
            if (nonblank(RepSpec.LastAcc)) then begin
              if (INr.Group!=RepSpec.LastAcc) then begin
                testf = false;
              end;
            end;
            if (nonblank(RepSpec.f6)) then begin
              if (SetInSet(RepSpec.f6,INr.DispGroups)==false) then begin
                testf = false;
              end;
            end;
          end;
        end;
        if (ORrw.stp!=kInvoiceRowTypeNormal) then begin testf = false; end;
        if (testf) then begin
          gps = gps + ORrw.rowGP;
          if (ORr.InclVAT>0) then begin
            t = MulRateToBase1(ORr.CurncyCode,ORrw.Sum,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
            FindSalesExVat(TMr,ORrw.VATCode,t,ORr.InclVAT,ORr.NoTAXonVAT,rowinbase);            
            iv = iv + rowinbase;
          end else begin
            iv = iv + MulRateToBase1(ORr.CurncyCode,ORrw.Sum,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
          end;
        end;
      end;
/*      
      if (ORr.InclVAT>0) then begin
        iv = MulRateToBase1(ORr.CurncyCode,ORr.Sum1-ORr.Sum3,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      end else begin
        iv = MulRateToBase1(ORr.CurncyCode,ORr.Sum1,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
      end;
*/      
      totsales = totsales + iv; //Total sales pr. salesperson
      TotSum = TotSum + iv;
      gpsum = gpsum + gps;
      totgp = totgp + gps;  // Total GP sales person
      if (RepSpec.ArtMode==1) then begin
        Gray_Divider(0,1);
        StartFormat(15);
        OutlongInt(0,"DblORVc",ORr.SerNr,false);
        OutString(80,0,ORr.SalesMan,false);
        OutDate(130,0,ORr.OrdDate,false);
        if (ORr.Closed<>0) then begin
          OutString(30,0,"C",false);      
        end;
        OutString(220,0,ORr.PayDeal,false);
        EndFormat;
        StartFormat(15);
         OutString(50,0,ORr.CustCode,false);
         OutString(200,0,ORr.Addr0,false);
        EndFormat;
        gps = 0;
        orsum = 0;
        rwcnt = MatRowCnt(ORr);
        for (i = 0 ; i<rwcnt ;i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          testf = true;
          if (nonblank(RepSpec.f3)) then begin
            if (SetInSet(RepSpec.f3,ORrw.Objects)==false) then begin testf = false; end;
          end;
          if (nonblank(RepSpec.f4)) then begin
            location = ORrw.Location;
            if (blank(location)) then begin location = ORr.Location; end;
            if (location!=RepSpec.f4) then begin
              testf = false;
            end;
          end;              
          if (nonblank(RepSpec.FirstAcc)) or (nonblank(RepSpec.LastAcc)) then begin
            if (nonblank(ORrw.ArtCode)) then begin
              ReadFirstItem(ORrw.ArtCode,INr,false,true);
              if (nonblank(RepSpec.FirstAcc)) then begin
                if (INr.Code!=RepSpec.FirstAcc) then begin
                  testf = false;
                end;
              end;
              if (nonblank(RepSpec.LastAcc)) then begin
                if (INr.Group!=RepSpec.LastAcc) then begin
                  testf = false;
                end;
              end;
            end;
          end;
          if (testf) then begin
            rowinbase = MulRateToBase1(ORr.CurncyCode,ORrw.Sum,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
            UnpackRowFieldMatrix(ORrw,"TaxMatrix",TMr);
            FindSalesExVat(TMr,ORrw.VATCode,rowinbase,ORr.InclVAT,ORr.NoTAXonVAT,rowinbase);    
            orsum = orsum + rowinbase; 
            gps = gps + ORrw.rowGP;
            StartFormat(15);
             OutString(20,0,ORrw.ArtCode,false);
             OutVal(124,0,ORrw.Quant,M4UVal,true);
             OutString(130,0,ORrw.Spec,false);
             OutVal(360,0,rowinbase,M4Val,true);
             OutVal(440,0,ORrw.rowGP,M4Val,true);
             CalcGPProc(ORrw.rowGP,rowinbase,tstr);
             OutString(480,0,tstr,true);        
            EndFormat;
          end;
        end;
        Black_Divider(300,480);
        StartFormat(15);
        OutString(100,0,ORr.Objects,false);
        OutVal(360,0,orsum,M4Val,true);
        OutVal(440,0,gps,M4Val,true);
        CalcGPProc(gps,orsum,tstr);
        OutString(480,0,tstr,true);              
        EndFormat;
      end;
      if (RepSpec.ArtMode==0) then begin
        StartFormat(15);
         OutLongInt(0,"DblORVc",ORr.SerNr,false);
         if (RepSpec.flags[2]==1) then begin
           OutString(70,0,ORr.SalesMan,false);
         end;  
         OutDate(110,0,ORr.OrdDate,false);
         OutString(180,0,ORr.Addr0,false);
         OutVal(360,0,iv,M4Val,true);
         if (ORr.Closed<>0) then begin
           OutString(370,0,"C",true);      
         end;
         OutVal(440,0,gps,M4Val,true);
         CalcGPProc(gps,iv,tstr);
         OutString(480,0,tstr,true);                   
        EndFormat;  
      end;
    end;
  end;
  end;
  Gray_Divider(320,1);
  if (RepSpec.flags[2]==1) then begin
    StartFormat(15);
     OutString(180,0,USetStr(2664),false);
     OutVal(360,0,totsales,M4Val,true);
     OutVal(440,0,totgp,M4Val,true);
     CalcGPProc(totgp,totsales,tstr);
     OutString(480,0,tstr,true);
    EndFormat;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
   OutString(0,0,USetStr(2567),false);
   OutVal(360,0,TotSum,M4Val,true);
   OutVal(440,0,gpsum,M4Val,true);
   CalcGPProc(gpsum,TotSum,tstr);
   OutString(480,0,tstr,true);                     
  EndFormat;
  EndJob;
  return;
end;
