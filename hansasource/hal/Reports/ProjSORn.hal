// ProjSORn.hal

external procedure HT2Per(Date, Date , var string);
/*
not used at all
external function Boolean FindBudgetVal(string, string, var val,Integer,Integer);
external function Boolean FindPurInvVal(string, string, Integer, var val,Integer);
external function Boolean FindInvoicedVal(string, string, Integer,var val,Integer);
external function Boolean PrintBudgetDet(string, var val,Integer,Integer);
external procedure HTSOs(string,var string);
external procedure HTItems(string,var string);
external procedure HTComparion(Integer,var string);
external procedure HTSorting(Integer,var string);
external procedure HTProject(string,var string);
external procedure HTQuantities(Integer,var string);
external procedure FindProjName(string,var string);
external procedure FindItemName(string,var string);

procedure OutCommonStrings(Integer quant,Integer comparison)
begin
  if (quant==1) then begin
     OutString(250,0,USetStr(2620),true);
  end else begin
     OutString(250,0,USetStr(2709),true);
  end;
  if (comparison==0) then begin
    OutString(320,0,USetStr(3152),true);
  end; 
  if (comparison==1) then begin
    OutString(320,0,USetStr(3554),true);
  end; 
  if (comparison==2) then begin
    OutString(320,0,USetStr(3554),true);
  end;      
  OutString(400,0,USetStr(6782),true);
  OutString(480,0,USetStr(4827),true);
return;
end;

procedure PrintSORnHead4()
begin
    StartFormat(15);
    OutString(0,0,USetStr(4822),false);
    OutString(60,0,USetStr(4824),false);
    OutString(130,0,USetStr(2584),false);
    OutString(210,0,USetStr(2620),true);
    OutString(280,0,USetStr(2709),true);
    EndFormat;
return;
end;

procedure PrintSORnHead3(Integer quant,Integer comparison)
begin
  StartFormat(15);
  OutString(0,0,USetStr(2584),false);
  OutString(80,0,USetStr(4883),false);
//  OutString(150,0,USetStr(4884),false);
  OutCommonStrings(quant,comparison);
  EndFormat;     
return;
end;

procedure PrintSORnHead2(Integer quant,Integer comparison)
begin
   StartFormat(15);
   OutString(0,0,USetStr(4884),false);
   OutString(70,0,USetStr(2303),false);
//   OutString(150,0,USetStr(2584),false);
   OutCommonStrings(quant,comparison);
   EndFormat;
   return;     
end;

procedure PrintSORnHead1(Integer quant,Integer comparison)
begin
  record INVc INr;
  Boolean res;
  
  StartFormat(15);
  OutString(0,0,USetStr(4883),false);
  OutString(70,0,USetStr(2303),false);
//  OutString(150,0,USetStr(2584),false);
  OutCommonStrings(quant,comparison);
  EndFormat;
  return;     
end;

procedure PrintLastProjectInfo(record PRSOINVc PRPr,record RcVc RepSpec, string project,string item,val poval,val totpoval,val tpinv,val tbud,val tinv)
begin
 val totbud,totpinv,totinv,t;
 string 255 projname,itemname;
 
    if (RepSpec.flags[0]==0) then begin  
      Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,project,false);  
      FindProjName(project,projname);  
      OutString(70,0,projname,false);
      OutVal(250,0,poval,M4Val,true); 
      if (FindBudgetVal(project,item,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
      OutVal(320,0,t,M4Val,true);
      totbud = tbud + t;
      end;
      if (FindPurInvVal(project,item,2,t,RepSpec.flags[5])) then begin
        OutVal(400,0,t,M4Val,true);
      totpinv = tpinv + t;
      end;
      if (FindInvoicedVal(project,item,2,t,RepSpec.flags[5])) then begin
         OutVal(480,0,t,M4Val,true);
      totinv = tinv + t;
      end;
      EndFormat;
      Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,USetStr(4837),false);
      OutVal(250,0,totpoval,M4Val,true);
      OutVal(320,0,totbud,M4Val,true);
      OutVal(400,0,totpinv,M4Val,true);
      OutVal(480,0,totinv,M4Val,true);  
      EndFormat;
    end;
    if (RepSpec.flags[0]==1) then begin    
    Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,item,false);    
      FindItemName(item,itemname);    
      OutString(70,0,itemname,false);
    OutVal(250,0,PRPr.SOVal,M4Val,true); 
      if (FindBudgetVal(project,item,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
      OutVal(320,0,t,M4Val,true);
      totbud = tbud + t;
      end;
      if (FindPurInvVal(project,item,2,t,RepSpec.flags[5])) then begin
         OutVal(400,0,t,M4Val,true);
      totpinv = tpinv + t;
      end;
      if (FindInvoicedVal(project,item,2,t,RepSpec.flags[5])) then begin
      OutVal(480,0,t,M4Val,true);
      totinv = tinv + t;
      end;
      EndFormat;
      Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,USetStr(4837),false);
//      OutVal(250,0,totval,M4Val,true);
      OutVal(320,0,totbud,M4Val,true);
      OutVal(400,0,totpinv,M4Val,true);
      OutVal(480,0,totinv,M4Val,true);  
      EndFormat;
    end;
  return;
end;

procedure  PrintProjSODetailed(record PRSOINVc PRPr,record RcVc RepSpec,var string project,var string item,var val totbud,var Boolean firstf)
begin
  record PRVc PRr;
  Boolean res;
  val t;
  string 255 projname,itemname;

  PRr.Code = PRPr.Project;
  res = ReadFirstMain(PRr,1,true);
  if (res) then begin
    if (RepSpec.flags[0]==0) then begin 
       if (project<>PRPr.Project) then begin
         StartFormat(15);
         OutString(0,0,PRr.Code,false);  
         FindProjName(PRr.Code,projname);    
         OutString(70,0,projname,false);
         EndFormat;
         project = PRPr.Project;
         item = PRPr.Item;
         if (PrintBudgetDet(project,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
           totbud = totbud + t;
         end;

       end;
    end;
  end;
  return;
end;

procedure PrintProjSOOverView(record PRSOINVc PRPr,record RcVc RepSpec,var string project,var string item,var val poval,var val totpoval,var val totbud,var val totpinv,var val totinv,var Boolean firstf)
begin
  record INVc INr;
  record PRVc PRr;
  Boolean res;
  val t;
  string 255 projname,itemname;
  
  PRr.Code = PRPr.Project;
  res = ReadFirstMain(PRr,1,true);
  INr.Code = PRPr.Item;
  res = ReadFirstMain(INr,1,true);    

  if (RepSpec.flags[0]==0) then begin
     if (project<>PRPr.Project) then begin
      if (firstf) then begin
          Gray_divider(0,1);
          StartFormat(15);
          OutString(0,0,project,false);  
          FindProjName(project,projname);    
          OutString(70,0,projname,false);
          OutVal(250,0,poval,M4Val,true); 
      if (FindBudgetVal(project,item,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
           OutVal(320,0,t,M4Val,true);
           totbud = totbud + t;
          end;
      if (FindPurInvVal(project,item,2,t,RepSpec.flags[5])) then begin
           OutVal(400,0,t,M4Val,true);
           totpinv = totpinv + t;
          end;
          if (FindInvoicedVal(project,item,2,t,RepSpec.flags[5])) then begin
           OutVal(480,0,t,M4Val,true);
             totinv = totinv + t;
          end;
          EndFormat;
       end;
       firstf = true;
       poval = 0;
//     projname = PRr.Name;
       project = PRPr.Project;
       item = PRPr.Item;
     end;           

     if (RepSpec.flags[5]==0) then begin
     poval = PRPr.SOVal + poval;
     totpoval = PRPr.SOVal + totpoval;
     end;
     if (RepSpec.flags[5]==1) then begin
     poval = PRPr.SOQty + poval;
     totpoval = PRPr.SOQty + totpoval;
     end;
  end;
  if (RepSpec.flags[0]==1) then begin
    if (item<>PRPr.Item) then begin
     if (firstf) then begin
        Gray_divider(0,1);
        StartFormat(15);
        OutString(0,0,item,false);
        FindItemName(item,itemname);        
        OutString(70,0,itemname,false);
        OutVal(250,0,poval,M4Val,true); 
        if (FindBudgetVal(project,item,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
        OutVal(320,0,t,M4Val,true);
        totbud = totbud + t;
        end;
        if (FindPurInvVal(project,item,2,t,RepSpec.flags[5])) then begin
        OutVal(400,0,t,M4Val,true);
        totpinv = totpinv + t;
        end;
        if (FindInvoicedVal(project,item,2,t,RepSpec.flags[5])) then begin
        OutVal(480,0,t,M4Val,true);
        totinv = totinv + t;
        end;
        EndFormat;
      end;       
      firstf = true;
//      itemname = INr.Name;
      item = PRPr.Item;
      project = PRPr.Project;
    end;
  end; 
return;
end;

global
procedure ProjSORn(record RcVc RepSpec)
begin
  record PRSOINVc PRPr;
  Boolean TrHs,testf,firstf;
  String 20 frompr,topr,skey,fromit,toit;
  val totval,t;
  Integer keys;
  LongInt  frompo,topo;
  string 255 tstr;
  Integer rw;
  string 20 item,itemname,project,projname;
  val totbud,totpinv,totinv,poval,totpoval;

  record INVc INr;
  record PRVc PRr;
  Boolean res;

  frompr = FirstInRange(RepSpec.f1,20);
  topr = LastInRange(RepSpec.f1,20);
  fromit = FirstInRange(RepSpec.f2,20);
  toit = LastInRange(RepSpec.f2,20);
  frompo = FirstInRange(RepSpec.f3,20);
  topo = LastInRange(RepSpec.f3,20);
  StartReportJob(USetStr(5570));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTQuantities(RepSpec.flags[5],tstr);
  Header(rw,tstr,0);
  HTProject(RepSpec.f1,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTSorting(RepSpec.flags[0],tstr)
  Header(rw,tstr,0);
  HTItems(RepSpec.f2,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTComparion(RepSpec.flags[4],tstr);
  Header(rw,tstr,0);
  EndHeader;
  if (RepSpec.ArtMode==0) then begin
    if (RepSpec.flags[0]==0) then begin
       PrintSORnHead1(RepSpec.flags[5],RepSpec.flags[4]);
    end;
    if (RepSpec.flags[0]==1) then begin
       PrintSORnHead2(RepSpec.flags[5],RepSpec.flags[4]);
    end;
    if (RepSpec.flags[0]==2) then begin
      PrintSORnHead3(RepSpec.flags[5],RepSpec.flags[4]);
    end;
  end else begin
    PrintSORnHead4;
  end;
  if (RepSpec.flags[0]==0) then begin
    skey = "Project";
    PRPr.Project = frompr;
    keys = 3;
  end;
  if (RepSpec.flags[0]==1) then begin
    skey = "Item";
    PRPr.Item = fromit;
    keys = 3;
  end;
  if (RepSpec.flags[0]==2) then begin
    skey = "SOSerNr";
    PRPr.SOSerNr = frompo;
    keys = 1;
  end;
  Gray_divider(0,1);
  TrHs = true;
  while (LoopKey(skey,PRPr,keys,TrHs)) begin
  testf = true;
    if (nonblank(topr)) then begin
      if (PRPr.Project>topr) then begin
        testf = false;
      end;
    end;
    if (nonblank(toit)) then begin
      if (PRPr.Item>toit) then begin
        testf = false;
      end;
    end;
    if (nonblank(RepSpec.f3)) then begin
      if (PRPr.SOSerNr<frompo) then begin
        testf = false;
      end;
      if (PRPr.SOSerNr>topo) then begin
        testf = false;
      end;
    end;    
    if (PRPr.TransDate<RepSpec.sStartDate) then begin
      testf = false;
    end;
    if (PRPr.TransDate>RepSpec.sEndDate) then begin
      testf = false;
    end;
    if (TrHs==false) then begin testf = false; end;
    if (testf) then begin 
       if (RepSpec.ArtMode==0) then begin
         PrintProjSOOverView(PRPr, RepSpec,project,item,poval,totpoval,totbud,totpinv,totinv,firstf);
     end;  
       if (RepSpec.ArtMode==1) then begin
         PrintProjSODetailed(PRPr, RepSpec,project,item,totbud,firstf);
     end;  
    end;
  end;

  if (RepSpec.ArtMode==0) then begin
//    PrintLastProjectInfo(PRPr,RepSpec,project,item,poval,totpoval,totpinv,totbud,totinv);
    if (RepSpec.flags[0]==0) then begin  
    Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,project,false);  
      FindProjName(project,projname);  
      OutString(70,0,projname,false);
    OutVal(250,0,poval,M4Val,true); 
      if (FindBudgetVal(project,item,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
      OutVal(320,0,t,M4Val,true);
      totbud = totbud + t;
      end;
      if (FindPurInvVal(project,item,2,t,RepSpec.flags[5])) then begin
        OutVal(400,0,t,M4Val,true);
      totpinv = totpinv + t;
      end;
      if (FindInvoicedVal(project,item,2,t,RepSpec.flags[5])) then begin
         OutVal(480,0,t,M4Val,true);
      totinv = totinv + t;
      end;
      EndFormat;
      Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,USetStr(4837),false);
      OutVal(250,0,totpoval,M4Val,true);
      OutVal(320,0,totbud,M4Val,true);
      OutVal(400,0,totpinv,M4Val,true);
      OutVal(480,0,totinv,M4Val,true);  
      EndFormat;
    end;
    if (RepSpec.flags[0]==1) then begin    
    Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,item,false);    
      FindItemName(item,itemname);    
      OutString(70,0,itemname,false);
    OutVal(250,0,PRPr.SOVal,M4Val,true); 
      if (FindBudgetVal(project,item,t,RepSpec.flags[5],RepSpec.flags[4])) then begin
      OutVal(320,0,t,M4Val,true);
      totbud = totbud + t;
      end;
      if (FindPurInvVal(project,item,2,t,RepSpec.flags[5])) then begin
         OutVal(400,0,t,M4Val,true);
      totpinv = totpinv + t;
      end;
      if (FindInvoicedVal(project,item,2,t,RepSpec.flags[5])) then begin
      OutVal(480,0,t,M4Val,true);
      totinv = totinv + t;
      end;
      EndFormat;
      Gray_divider(0,1);
      StartFormat(15);
      OutString(0,0,USetStr(4837),false);
//      OutVal(250,0,totval,M4Val,true);
      OutVal(320,0,totbud,M4Val,true);
      OutVal(400,0,totpinv,M4Val,true);
      OutVal(480,0,totinv,M4Val,true);  
      EndFormat;
    end;
  end;
  if (RepSpec.ArtMode==1) then begin
      Gray_divider(0,1);
      StartFormat(15);
        if (RepSpec.flags[5]==1) then begin
          OutVal(210,0,totbud,M4Val,true);
        end else begin
          if (RepSpec.flags[4]==0) then begin
            OutVal(280,0,totbud,M4Val,true);
          end;
        end;
      EndFormat;
  end;
  EndJob;
return;
end;

*/
