external function string 60 AddObjectToObjectList(string,string);
external function val cur2b1(String,Date,Val);
external function val cur2b2(String,Date,Val);
external function roundmode SetRoundModeD(Integer);
external procedure HT2Per(Date, Date , var string);
external procedure HTbasecurncy_comment(Integer,var string);

procedure HTGetWHTaxName(string tax,var string taxname)
begin
  record WHTaxBlock WHTaxr;
  row WHTaxBlock WHTaxrw;
  integer i,ar;

  BlockLoad(WHTaxr);
  taxname = tax;
  ar = MatRowCnt(WHTaxr);
  for (i=0;i<ar;i=i+1) begin
    MatRowGet(WHTaxr,i,WHTaxrw);
    if (WHTaxrw.Code==tax) then begin
      taxname = WHTaxrw.Comment;
      i = ar;
    end;
  end;
  taxname = USetStr(13875) & ": " & taxname;
  return;
end;

procedure GetWHCalcFormName(string formula,var string formulaname)
begin
  record WHCalcFormVc WHCalcFormr;
  integer i,ar;

  formulaname = formula;
  WHCalcFormr.PayCode = formula;
  if (ReadFirstMain(WHCalcFormr,1,true)) then begin
    formulaname = WHCalcFormr.Comment;
  end;
  return;
end;

procedure HTGetWHCalcFormName(string formula,var string formulaname)
begin
  GetWHCalcFormName(formula,formulaname);
  formulaname = USetStr(13876) & formulaname;
  return;
end;

procedure GetPurInvNumbers(record WHCertificateVc WHCertr,var string offinvnr,var LongInt VISerNr,var string vatregno)
begin
  record OPVc OPr;
  row OPVc OPrw;
  Integer rwcnt,i;
  record VIVc VIr;
  row WHCertificateVc WHCertrw;
  
  offinvnr = "";
  VISerNr = -1;
  vatregno = "";  
  OPr.SerNr = WHCertr.OPNr;
  if (ReadFirstMain(OPr,1,true)) then begin
    if (WHCertr.OPRow>=0) then begin
      rwcnt = MAtRowCnt(OPr);
      if (WHCertr.OPRow<rwcnt) then begin
        MatRowGet(OPr,WHCertr.OPRow,OPrw);
        VISerNr = OPrw.VISerNr;
        if (VISerNr>0) then begin
          VIr.SerNr = VISerNr;
          if (ReadFirstMain(VIr,1,true)) then begin
            offinvnr = VIr.InvoiceNr;
            vatregno = VIr.VATNr;
          end;
        end;
      end;
    end else begin
      rwcnt = MAtRowCnt(WHCertr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(WHCertr,i,WHCertrw);
        if (WHCertrw.OPRow<MatRowCnt(OPr)) then begin
          MatRowGet(OPr,WHCertrw.OPRow,OPrw);
          VISerNr = OPrw.VISerNr;
          if (VISerNr>0) then begin
            VIr.SerNr = VISerNr;
            if (ReadFirstMain(VIr,1,true)) then begin
              offinvnr = AddObjectToObjectList(offinvnr,VIr.InvoiceNr);
              vatregno = AddObjectToObjectList(vatregno,VIr.VATNr);
            end;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure SuplWithHold_Detailed(record RcVc RepSpec)
begin
  record WHCertificateVc WHCertificater;
  record OPVc OPr;
  row OPVc OPrw;
  record VIVc VIr;
  row VIVc VIrw;
  boolean TrHs,testf;
  string 255 tstr;
  integer i,ar;
  date sdate,edate;
  String 60 offinvnr,vatregno;
  LongInt VISerNr;
  val sum,ssum;
  array string 2 acalcform;
  array val asum;
  integer maxr,j;
  boolean found;
  
  sdate = RepSpec.sStartDate;
  edate = RepSpec.sEndDate;
  
  if (RepSpec.flags[2]==1 and blank(RepSpec.f2)) then begin
  //  SetRepCol(2,55);
    SetRepCol(3,55);
    SetRepCol(4,125);
    SetRepCol(5,215);
    SetRepCol(6,290);
  end else begin
    SetRepCol(3,55);
    SetRepCol(4,125);
    SetRepCol(5,215);
    SetRepCol(6,290);
  end;
  
  StartFormat(15);
  if (RepSpec.flags[2]==1 and blank(RepSpec.f2)) then begin
    OutString(0,0,USetStr(13877),false);
 //   OutString(2,0,USetStr(13878),false);
    OutString(3,0,USetStr(13879),false);
    OutString(4,0,USetStr(13880),false);
    OutString(5,0,USetStr(13881),false);
    OutString(6,0,USetStr(13882),false);
    OutString(1,0,USetStr(13883),true);
    EndFormat;
    StartFormat(15);
    OutString(3,0,USetStr(13878),false); 
  end else begin
    OutString(0,0,USetStr(13877),false);
    OutString(3,0,USetStr(13879),false);
    OutString(4,0,USetStr(13880),false);
    OutString(5,0,USetStr(13881),false);
    OutString(6,0,USetStr(13882),false);
    OutString(1,0,USetStr(13883),true);
  end;
  EndFormat;
  Gray_Divider(0,1);
  
  TrHs = true;
  ssum = 0;
  maxr = 0;
  WHCertificater.OPTransDate = sdate;
  While (LoopKey("OPTransDate",WHCertificater,1,TrHs)) begin
    testf = true;
    if (WHCertificater.OPTransDate>edate) then begin
      testf = false; TrHs = false;
    end;
    if (nonblank(RepSpec.f1) and RepSpec.f1<>WHCertificater.WHTax) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f2) and RepSpec.f2<>WHCertificater.CalcForm) then begin
      testf = false;
    end;  
    if (testf) then begin  
      GetPurInvNumbers(WHCertificater,offinvnr,VISerNr,vatregno);
      if (RepSpec.flags[3]==0 and blank(vatregno)) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      if (RepSpec.basecurncy==0) then begin
        sum = cur2b1(WHCertificater.BankCurncy,WHCertificater.OPTransDate,WHCertificater.Amount);
      end else begin
        sum = cur2b2(WHCertificater.BankCurncy,WHCertificater.OPTransDate,WHCertificater.Amount);
      end;
      ssum = ssum + sum;
      if (RepSpec.flags[2]==1 and blank(RepSpec.f2)) then begin
        found = false;
        for (j=0;j<maxr;j=j+1) begin
          if (acalcform[j]==WHCertificater.CalcForm) then begin
            found = true;
            asum[j] = asum[j] + sum;
            j = maxr;
          end;
        end;
        if (found==false) then begin
          asum[maxr] = sum;
          acalcform[maxr] = WHCertificater.CalcForm;
          maxr = maxr + 1;
        end;  
      end;
      StartFormat(15);
      if (RepSpec.flags[2]==1 and blank(RepSpec.f2)) then begin
        OutDate(0,0,WHCertificater.OPTransDate,false);
        GetWHCalcFormName(WHCertificater.CalcForm,tstr);
        tstr = WHCertificater.CalcForm & " " & tstr;
        OutStringID(3,"DblWHCertVc",WHCertificater.WHTaxSerNr,false,WHCertificater.SerNr);
        OutStringID(4,"DblIDVIVc",offinvnr,false,VISerNr);
        OutString(5,0,vatregno,false);
        OutString(6,0,Left(WHCertificater.VEName,20),false);
        OutVal(1,0,sum,M4Val,true);
        EndFormat;
        StartFormat(15);
        OutString(3,0,tstr,false);
      end else begin
        OutDate(0,0,WHCertificater.OPTransDate,false);
        OutStringID(3,"DblWHCertVc",WHCertificater.WHTaxSerNr,false,WHCertificater.SerNr);
        OutStringID(4,"DblIDVIVc",offinvnr,false,VISerNr);
        OutString(5,0,vatregno,false);
        OutString(6,0,Left(WHCertificater.VEName,20),false);
        OutVal(1,0,sum,M4Val,true);
      end;
      EndFormat;
    end;  
  end;
  Gray_Divider(0,1);
  StartFormat(35);
  OutString(6,0,USetStr(13884),false);
  OutVal(1,0,ssum,M4Val,true);
  EndFormat;
  
  if (RepSpec.flags[2]==1 and blank(RepSpec.f2)) then begin
    Gray_Divider(0,1);  
    for (j=0;j<maxr;j=j+1) begin
      GetWHCalcFormName(acalcform[j],tstr);
      tstr = acalcform[j] & " " & tstr;
      StartFormat(15);
      OutString(5,0,tstr,false);
      OutVal(1,0,asum[j],M4Val,true);
      EndFormat;
    end;
  end;
  return;
end;

procedure SuplWithHold_Overview(record RcVc RepSpec,Integer headerstr)
begin
  record CUVc CUr;
  record WHCertificateVc WHCertificater;
  boolean TrHs;
  boolean foundf, testf, ATCfoundf;
  array val brutto,netto;
  array string 20 acalcform;
  integer j,maxr;
  val nsum,bsum,totb,totn;
  val pers;
  LongInt num;

  switch (headerstr) begin
    case 1:
      StartFormat(15);
      OutString(0,0,USetStr(27053),false);
      OutString(30,0,USetStr(27054),false);
      OutString(100,0,USetStr(27055),false);
      OutString(300,0,USetStr(27056),true);
      OutString(380,0,USetStr(27057),true);
      OutString(420,0,USetStr(27058),true);
      OutString(1,0,USetStr(27059),true);
      EndFormat;
    otherwise
      StartFormat(15);
      OutString(0,0,USetStr(26593),false);
      OutString(30,0,USetStr(26594),false);
      OutString(100,0,USetStr(26595),false);
      OutString(300,0,USetStr(26596),true);
      OutString(380,0,USetStr(26597),true);
      OutString(420,0,USetStr(26598),true);
      OutString(1,0,USetStr(26599),true);
      EndFormat;
  end;
  Gray_Divider(0,1);
     
  TrHs = true;
  num = 1;
  CUr.VEType = 1;
  while LoopKey("VEActVATNr",CUr,1,TrHs) begin
    if (CUr.VEType!=1) then begin 
      TrHs = false; 
    end;
    if (TrHs and (nonblank(CUr.VATNr) or RepSpec.flags[3]!=0)) then begin 
      WHCertificater.VECode = CUr.Code;
      foundf = true;
      ResetLoop(WHCertificater);
      while (LoopKey("VECode",WHCertificater,1,foundf)) begin
        testf = true;
        if (WHCertificater.VECode!=CUr.Code) then begin 
          foundf = false;
          testf = false;
        end;
        if (DateInRange(WHCertificater.OPTransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
          testf = false;
        end;
        if (nonblank(RepSpec.f1) and RepSpec.f1!=WHCertificater.WHTax) then begin
          testf = false;
        end;
        if (nonblank(RepSpec.f2) and RepSpec.f2!=WHCertificater.CalcForm) then begin
          testf = false;
        end;
        if (testf) then begin 
          if (RepSpec.basecurncy==0) then begin
            nsum = cur2b1(WHCertificater.BankCurncy,WHCertificater.OPTransDate,WHCertificater.Amount);
            bsum = cur2b1(WHCertificater.BankCurncy,WHCertificater.OPTransDate,WHCertificater.CalcBase);
          end else begin
            nsum = cur2b2(WHCertificater.BankCurncy,WHCertificater.OPTransDate,WHCertificater.Amount);
            bsum = cur2b2(WHCertificater.BankCurncy,WHCertificater.OPTransDate,WHCertificater.CalcBase);
          end;
          ATCfoundf = false;
          for (j=0;j<maxr;j=j+1) begin
            if (acalcform[j]==WHCertificater.CalcForm) then begin
              ATCfoundf = true;
              netto[j] = netto[j] + nsum;
              brutto[j] = brutto[j] + bsum;
              pers = WHCertificater.TaxPrc;
              j = maxr;
            end;
          end;  
          if (ATCfoundf==false) then begin
            netto[maxr] = nsum;
            brutto[maxr] = bsum;
            acalcform[maxr] = WHCertificater.CalcForm;
            pers = WHCertificater.TaxPrc;
            maxr = maxr + 1;
          end;
          totb = totb + bsum;
          totn = totn + nsum;
        end;
      end;
      if (maxr!=0) then begin 
        for (j=0;j<maxr;j=j+1) begin
          StartFormat(15);
          OutLongInt(20,0,num,true);
          num = num + 1;
          OutString(30,0,CUr.VATNr,false);
          OutString(100,0,CUr.Name,false);
          OutString(250,0,acalcform[j],false);
          OutVal(380,0,brutto[j],M4Val,true);
//          pers = (netto[j] * 100)/brutto[j];
          //pers = WHCertificater.TaxPrc;
          OutString(420,0,pers & "%",true);
          OutVal(1,0,netto[j],M4Val,true);
          EndFormat;
          acalcform[j] = "";
          brutto[j] = blankval;
          netto[j] = blankval;
        end;
      end;
      maxr = 0;
    end;
  end;
  if (maxr!=0) then begin 
    for (j=0;j<maxr;j=j+1) begin
      StartFormat(15);
      OutLongInt(20,0,num,true);
      num = num + 1;
      OutString(30,0,CUr.VATNr,false);
      OutString(100,0,CUr.Name,false);
      OutString(250,0,acalcform[j],false);
      OutVal(380,0,brutto[j],M4Val,true);
      pers = Round((netto[j] * 100)/brutto[j],SetRoundModeD(0));
      OutString(420,0,pers & "%",true);
      OutVal(1,0,netto[j],M4Val,true);
      EndFormat;
      acalcform[j] = "";
      brutto[j] = blankval;
      netto[j] = blankval;
    end;
  end;
  if (totb!=0) then begin 
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(100,0,USetStr(26600),false);
    OutVal(380,0,totb,M4Val,true);
    OutVal(1,0,totn,M4Val,true);
    EndFormat;
  end;  
  return;
end;

global
procedure SuplWithHoldRn(record RcVc RepSpec)
begin 
  integer rw;
  string 255 tstr;
  record CYBlock CYr;

  if (blank(RepSpec.f3)) then begin
    RepSpec.f3 = USetStr(13870);
  end;
  StartReportJob(RepSpec.f3);

  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  
  BlockLoad(CYr);
  tstr = USetStr(13872) & CYr.VATNr;
  Header(rw,tstr,0);

  HTbasecurncy_comment(RepSpec.basecurncy,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    HTGetWHTaxName(RepSpec.f1,tstr);
    Header(rw,tstr,0);
  end;
  if (nonblank(RepSpec.f2)) then begin 
    HTGetWHCalcFormName(RepSpec.f2,tstr);
    Header(rw,tstr,1);
  end;
  EndHeader;
  
  if (RepSpec.ArtMode==0) then begin 
    SuplWithHold_Overview(RepSpec,0);
  end else begin
    SuplWithHold_Detailed(RepSpec);
  end;
  EndJob;
  return;
end;

global
procedure AlphalistRn(record RcVc RepSpec)
begin 
  integer rw;
  string 255 tstr;
  record CYBlock CYr;

  if (blank(RepSpec.f3)) then begin
    RepSpec.f3 = USetStr(27061);
  end;
  StartReportJob(RepSpec.f3);

  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  
  BlockLoad(CYr);
  tstr = USetStr(27062) & " " & CYr.VATNr;
  Header(rw,tstr,0);

  HTbasecurncy_comment(RepSpec.basecurncy,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    HTGetWHTaxName(RepSpec.f1,tstr);
    Header(rw,tstr,0);
  end;
  if (nonblank(RepSpec.f2)) then begin 
    HTGetWHCalcFormName(RepSpec.f2,tstr);
    Header(rw,tstr,1);
  end;
  EndHeader;
  
  SuplWithHold_Overview(RepSpec,1);
  EndJob;
  return;
end;
