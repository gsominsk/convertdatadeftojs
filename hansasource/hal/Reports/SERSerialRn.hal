external procedure CustomersAddress(record CUVc);
external procedure HT2Per(Date, Date , var string);
external procedure SerialNrHistRn(record RcVc);

procedure SVOSerHead()
begin
  StartFormat(15);
  OutString(0,0,USetStr(11741),false);
  OutString(130,0,USetStr(11742),false);
  OutString(210,0,USetStr(11743),false);
  OutString(400,0,USetStr(11744),true);
  OutString(480,0,USetStr(11745),true);
  EndFormat;
  Gray_Divider(0,1);
  return;
end;

procedure SERSerialHistHead()
begin
  StartFormat(15);
  OutString(0,0,USetStr(11757),false);
  OutString(190,0,USetStr(11756),false);
  OutString(340,0,USetStr(11759),false);
  OutString(410,0,USetStr(11747),false);
  OutString(480,0,USetStr(11748),true);
  EndFormat;
  Gray_Divider(0,1);
  return;
end;

procedure FindItemWSTrans(record RcVc RepSpec)
begin
   record WSIVVc WSIVr;
   boolean TrHs, testf;
   
   StartFormat(15);
   OutString(0,0,USetStr(7649),false);
   OutString(80,0,USetStr(8279),false);
   OutString(160,0,USetStr(8280),false);
   OutString(370,0,USetStr(7626),true);
   OutString(420,0,USetStr(7276),true);
   OutString(1,0,USetStr(7274),true);
   EndFormat;
   Gray_Divider(0,1);
   TrHs = true;
   WSIVr.SerNr = -1;
   while (LoopMain(WSIVr,1,TrHs)) begin 
     if (TrHs) then begin
       testf = true;
       if (WSIVr.MotherNr <> RepSpec.f2) then begin
         testf = false;
       end;
       if (WSIVr.RecType == 1) then begin
         testf = false;
       end;
       if (testf) then begin
         StartFormat(15);
         OutString(0,"DblWSVc",WSIVr.SerNr,false);
         OutString(80,0,WSIVr.ArtCode,false);
         OutString(160,0,WSIVr.Comment,false);
         OutVal(350,0,WSIVr.InvQty,M4Qty,true);
         OutVal(400,0,WSIVr.Sum,M4Val,true);
         OutString(1,0,WSIVr.TransDate,true);
         EndFormat;
       end;
     end;
   end;
   StartFormat(15);
   EndFormat;
 return;
end;

procedure FindSVO(record RcVc RepSpec)
begin
   record SVOVc SVOr;
   row SVOVc SVOrw;
   boolean TrHs, testf;
   Integer i, rwcnt;

   StartFormat(15);
   OutString(0,0,USetStr(11762),false);
   OutString(80,0,USetStr(11763),false);
   OutString(160,0,USetStr(11764),false);
   OutString(270,0,USetStr(11765),false);
   OutString(420,0,USetStr(11766),false);
   OutString(1,0,USetStr(11767),true);
   EndFormat;
   Gray_Divider(0,1);
   TrHs = true;
   SVOr.SerNr = -1;
   while (LoopMain(SVOr,1,TrHs)) begin 
     if (TrHs) then begin
       testf = false;
       rwcnt = MatRowCnt(SVOr);
       for (i=0;i<rwcnt;i=i+1) begin
         MatRowGet(SVOr,i,SVOrw);
         if (SVOrw.SerialNr==RepSpec.f2) then begin 
           testf = true; 
           i = rwcnt;
         end;
       end;
       if (testf) then begin
         StartFormat(15);
         OutString(0,"DblSVOVc",SVOr.SerNr,false);
         OutString(80,0,SVOr.TransDate,false);
         OutString(160,0,SVOr.CustCode,false);
         OutString(270,0,SVOr.Addr0,false);
         OutString(420,0,SVOr.OrderClass,false);
         if (SVOr.DoneMark==1) then begin 
           //nk OutString(1,0,"âˆš",true);
           OutString(1,0,USetStr(11761),true);
         end;
         EndFormat;
       end;
     end;
   end;
   StartFormat(15);
   EndFormat;
 return;
end;

global 
procedure SERSerialRn(record RcVc RepSpec)
begin
  record ActVc Actr;
  record QualConVc QCr;
  record CUVc CUr;
  record INSerCOVc INSerr;
  record COVc COr;
  record SVOVc SVOr;
  record SVOSerVc Serr;
  Integer rw;
  string 255 tstr;
  Boolean foundf,firstf,testf;
  String 20 custname;
  Integer oldokf;
  val v;
  string 255 keystr;

  rw = 1;
  StartReportJob(USetStr(11740));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw +1;
  EndHeader;
  SetRepCol(2,80);
  SetRepCol(3,320);
  Serr.ItemCode = RepSpec.f1;
  Serr.SerialNr = RepSpec.f2;
  if (ReadFirstMain(Serr,2,true)) then begin
    SVOSerHead;
    StartFormat(15);
    OutStringID(0,"DblSVOSerVc",Serr.SerialNr,false,Serr.ItemCode);
    OutString(130,0,Serr.ItemCode,false);
    OutString(210,0,Serr.ItemName,false);
    OutString(400,0,Serr.SoldDate,true);
    OutString(480,0,Serr.WarrantyUntil,true);
    EndFormat;
    StartFormat(15);
    EndFormat;
    CUr.Code = Serr.CustCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      StartFormat(15);
      OutString(0,0,USetStr(11749),false);
      EndFormat;
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(0,"DblCUVc",CUr.Code,false);
      OutString(2,0,CUr.Name,false);
      OutString(3,0,CUr.Person,false);
      EndFormat;
      CustomersAddress(CUr)
      StartFormat(15);
      EndFormat;
    end else begin
      if ((blank(Serr.CustCode)) and (nonblank(Serr.CustName))) then begin
        StartFormat(15);
        OutString(0,0,USetStr(11749),false);
        EndFormat;
        Gray_Divider(0,1);
        StartFormat(15);
        OutString(2,0,CUr.Name,false);
        EndFormat;
        StartFormat(15);
        EndFormat;
      end;
    end;
  end;
  
  StartFormat(15);
  OutString(0,0,USetStr(11750),false);
  OutString(170,0,USetStr(11751),false);
  OutString(260,0,USetStr(11752),false);
  EndFormat;
  Gray_Divider(0,1);
  INSerr.ItemCode = RepSpec.f1;
  INSerr.SerialNr = RepSpec.f2;
  foundf = true;
  while (LoopMain(INSerr,2,foundf)) begin
    if ((INSerr.ItemCode!=RepSpec.f1) or (INSerr.SerialNr!=RepSpec.f2)) then begin
      foundf = false;
    end;
    if (foundf) then begin
      StartFormat(15);
      OutStringID(0,"DblCOVc",INSerr.CONr,false,INSerr.COChildNr);
      OutLongInt(100,0,INSerr.COChildNr,false);
      OutString(170,0,INSerr.StartDate,false);
      if (blankdate(INSerr.EndDate)) then begin
        OutString(260,0,"",false);
      end else begin
        OutString(260,0,INSerr.EndDate,false);
      end;
      EndFormat;
    end;
  end;
  StartFormat(15);
  EndFormat;
/*  

  StartFormat(15);
  OutString(0,0,"SVO",false);
  OutString(100,0,USetStr(11754),false);
  OutString(170,0,USetStr(11755),false);
  OutString(230,0,USetStr(11756),false);
  EndFormat;
  keystr = "SerialNr:" & RepSpec.f2;
  foundf = true;
    StopAlert("keystr " & keystr);
  while (LoopKey(keystr,SVOr,1,foundf)) begin
    StopAlert("SVOr.SerNr " & SVOr.SerNr);
    if (foundf) then begin
    end;
  end;
  StartFormat(15);
  EndFormat;
*/
  
  StartFormat(15);
  OutString(0,0,USetStr(11753),false);
  OutString(100,0,USetStr(11754),false);
  OutString(170,0,USetStr(11755),false);
  OutString(230,0,USetStr(11756),false);
  EndFormat;
  Gray_Divider(0,1);
  QCr.OKFlag = 1;
  QCr.ArtCode = RepSpec.f1;
  QCr.SerialNr = RepSpec.f2;
  foundf = true;
  while (LoopKey("AnalyseDone",QCr,3,foundf)) begin
    if ((QCr.OKFlag==0) or (QCr.ArtCode!=RepSpec.f1) or (QCr.SerialNr!=RepSpec.f2)) then begin
      foundf = false;
    end;
    if (foundf) then begin
      StartFormat(15);
      OutStringID(0,"DblQualConVc",QCr.AnalyseDate,false,QCr.SerNr);
      OutString(100,0,QCr.StatusCode,false);
      OutString(170,0,QCr.TestedBy,false);
      OutString(230,0,QCr.Comment,false);
      EndFormat;
    end;
  end;
  StartFormat(15);
  EndFormat;

  SERSerialHistHead;
  oldokf = 0;
LDONEACT:;  
  Actr.ArtCode = RepSpec.f1;
  Actr.SerialNr = RepSpec.f2;
  Actr.OKFlag = oldokf;
  firstf = true;
  foundf = true;
  ResetLoop(Actr);
  while (LoopBackKey("ArtCode",Actr,3,foundf)) begin
    if (Actr.ArtCode!=RepSpec.f1) then begin
      foundf = false;
    end;
    if (Actr.SerialNr!=RepSpec.f2) then begin
      foundf = false;
    end;
    if (Actr.OKFlag!=oldokf) then begin
      foundf = false;
    end;
    if (foundf) then begin
      testf = true;
      if (Actr.Invalid!=0) then begin
        testf = false;
      end;
      if (testf) then begin
        if (oldokf!=0) then begin
          if (firstf==true) then begin
            StartFormat(15);
            EndFormat;
            StartFormat(15);
            OutString(0,0,USetStr(11758),false);
            OutString(190,0,USetStr(11756),false);
            OutString(340,0,USetStr(11759),false);
            OutString(410,0,USetStr(11747),false);
            OutString(480,0,USetStr(11748),true);
            EndFormat;
            Gray_Divider(0,1);
            firstf = false;
          end;
        end;
        if (nonblank(Actr.Comment)) then begin
          custname = Actr.Comment;
        end else begin
          if (nonblank(Actr.CUCode)) then begin
            custname = Actr.CUCode;
            custname = custname & ", ";
            custname = custname & Actr.CUName;
          end else begin
            custname="";
          end;
        end;
        if (Actr.PrioLevel==-1) then begin
          v = BlankVal;
        end else begin
          v = Actr.PrioLevel;
        end;
        StartFormat(15);
        OutDate(0,0,Actr.TransDate,false);
        OutString(70,0,Actr.StartTime,false);
        OutString(135,0,Actr.EndTime,false);
        OutStringID(190,"DblActRec",custname,false,Actr.SerNr);
        OutLongInt(340,"DblSVOVc",Actr.SVOSerNr,false);
        OutString(410,0,Actr.ActType,false);
        OutLongInt(480,0,Actr.PrioLevel,true);
        EndFormat;
      end;
    end;
  end;
  oldokf = oldokf + 1;
  if (oldokf<=1) then begin
    goto LDONEACT;  
  end;
  StartFormat(15);
  EndFormat;
  FindItemWSTrans(RepSpec);
  FindSVO(RepSpec);
  RepSpec.flags[29] = 0;//only stock affected transactions
  SerialNrHistRn(RepSpec);
  EndJob;
  return;
end;
