external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external procedure HT2Per(Date,Date,var string);
external procedure HTPers(string,var string);

//UserStr1 -> version
//UserStr2 -> build
//UserStr3 -> buildproductcode

procedure CustomerPrint(record RcVc RepSpec)
begin
  Boolean found,testf;
  Integer check,i,j;
  record CUVc CUr;
  string 255 country,tstr,custName;
  
  found = true;
  j = 0;
  
  StartFormat(15);
  OutString(0,0,USetStr(6101),false);
  OutString(50,0,USetStr(6102),false);
  OutString(200,0,"Build",false);
  OutString(300,0,"Product",false);
  OutString(480,0,USetStr(33974),true);
  EndFormat;
  
  while (LoopMain(CUr,1,found)) begin
    testf = true;
    if (nonblank(RepSpec.f1)) then begin
      if (CUr.Code!=RepSpec.f1) then begin
        testf = false;
      end;
    end;
    if (CUr.blockedFlag!=0) then begin
      testf = false;
    end;
    if (InString(CUr.eMail,"hansaworld") or len(CUr.eMail)<7 or blank(CUr.eMail)) then begin
      testf = false;
    end;
    if (InString(CUr.Name,"test")>0 or InString(CUr.eMail,"test")>0) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f2) and testf) then begin
      if (CUr.CountryCode!=RepSpec.f2) then begin
        testf = false;
      end;
    end;
    if (nonblank(RepSpec.f6)) then begin
      if (CUr.UserStr3!=RepSpec.f6) then begin
        testf = false;
      end;
    end;
    if (nonblank(RepSpec.f3)) then begin 
      if (blank(CUr.UserStr1)) then begin 
        testf = false;
      end else begin
        if (InString(CUr.UserStr1,RepSpec.f3)<=0) then begin
          testf = false;
        end; 
      end;
    end;
    if (blank(CUr.UserStr2) and blank(CUr.UserStr1)) then begin testf = false; end;
    if (testf) then begin 
      testf = ContactInGroupClass(CUr.Code,RepSpec.f4,RepSpec.f5,"CUST","","");    
    end; 
    if (testf and found) then begin
      j = j + 1;
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(0,"DblCUVc",CUr.Code,false);
      OutString(50,0,CUr.Name,false);
      OutString(200,0,CUr.UserStr2,false);
      OutString(300,0,CUr.UserStr3,false);
      OutString(480,0,CUr.UserStr1,true);
      EndFormat;
      StartFormat(15);
      EndFormat;
    end;
  end;
  StartFormat(15);
  EndFormat;
  Black_Divider(0,100);
  StartFormat(15);
  OutString(0,0,"Total Results: " & j,false);
  EndFormat;
  Black_Divider(0,100);
  return;
end;

global
procedure CustomerVersionsRn(record RcVc RepSpec)
begin  
  string 255 tstr;
  Integer rw;
  Date Startf,Endf;
  
  StartReportJob(USetStr(33972));
  
  rw = 1;
  if (nonblank(RepSpec.f1)) then begin
    Header(rw,USetStr(33824) & ": " & RepSpec.f1,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f3)) then begin 
    tstr = "Version No: " & RepSpec.f3;  
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTCustCat(RepSpec.f4,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTCustClass(RepSpec.f5,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    Header(rw,USetStr(34004) & ": " & RepSpec.f2,1);
    rw = rw + 1;
  end;
  EndHeader;
  CustomerPrint(RepSpec);
  
  endJob;
  
  return;
end;