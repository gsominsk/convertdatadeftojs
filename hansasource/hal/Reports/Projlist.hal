external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external procedure HTDetailLevel(Integer, var string);
external procedure HTCusts(string, string, var string);
external procedure HTProjSort2(Integer,var string);
external procedure HTPRClass(string, var string);

external procedure FindDautherProjects(string,var array string,var integer);


procedure HTProjects(string arg,var string res)
begin
  string 255 a,b;
  record PRVc PRr;

  a = FirstInRange(arg,20);
  b = LastInRange(arg,20);
  if (blank(a) and blank(b)) then begin
    res = USetStr(4851);
  end else begin
    res = USetStr(4852);
    res = res & a;
    if (a<>b) then begin
      res = res & " : ";
      res = res & b;
    end else begin
      PRr.Code = a;
      if (ReadFirstMain(PRr,1,true)) then begin
        res = res & " ";
        res = res & PRr.Name;
      end;
    end;
  end;
  return;
end;

procedure Blankspace(Integer pix)
begin
  StartFormat(pix);
  EndFormat;
  return;
end;

procedure SumProjectBudget(string project,var val bp,var val tt,var val to,var val tm,var val ts)
begin
  record TBBUVc TBBr;
  Boolean found;

  TBBr.PRCode = project;
  found = true;
  if (ReadFirstMain(TBBr,1,true)) then begin
    tt = tt+TBBr.SumTime;
    to = to+TBBr.SumOther;
    tm = tm+TBBr.SumMaterial;
    ts = ts+TBBr.SumStocked;        
    bp = bp+TBBr.SumTime + TBBr.SumOther +TBBr.SumMaterial + TBBr.SumStocked;
  end;    
  return;
end;

global
procedure PRListRn(record RcVc RepSpec)
begin
  Boolean found;
  Record PRVc PRr;
  Row  PRVc PRrw;
  string 60 frpr,topr;
  string 50 frcu,tocu;
  val totbud;
  val tottime,totother,totmaterial,totstock;
  Boolean testf;
  string 255 ckey;
  Integer keys;
  string 255 tstr;
  Integer rw;
  Integer i,rwcnt,subpram;
  array string 20 subproject;
  string 20 wproj;
  Integer prcnt;

  frpr = FirstInRange(RepSpec.f1,60);
  topr = LastInRange(RepSpec.f1,60);
  frcu = FirstInRange(RepSpec.f3,50);
  tocu = LastInRange(RepSpec.f3,50);
  
  StartReportJob(USetStr(4861));
  rw = 1;
  HTProjects(RepSpec.f1,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.ArtMode==0) then begin keys = 1; end;
  if (RepSpec.ArtMode==1) then begin keys = 0; end;
  if (RepSpec.ArtMode==2) then begin keys = 0; end;
  HTDetailLevel(keys,tstr);
  Header(rw,tstr,0);
//  rw = rw +1;
  HTCusts(frcu,tocu,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (HasCategories) then begin
    HTCustCat(RepSpec.f5,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;  
  HTProjSort2(RepSpec.flags[1],tstr);
  Header(rw,tstr,0);
//  rw = rw +1;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(4849);
  tstr = tstr & " ";
  tstr = tstr & RepSpec.f2;
  Header(rw,tstr,1);
  rw = rw + 1;
  end;
  HTPRClass(RepSpec.FirstAcc,tstr);
  if (nonblank(tstr)) then begin
   Header(rw,tstr,1);
   rw = rw + 1;
  end; 
  if (RepSpec.IncDaughter==1) then begin
    Header(rw,USetStr(4860),1);
    rw = rw + 1;
  end;
  EndHeader;
  
  StartFormat(15);
  OutString(15,0,USetStr(4862),false);
  OutString(240,0,USetStr(4863),false);
  OutString(300,0,USetStr(2354),false); 
  if (RepSpec.ArtMode==2) then begin
    OutString(400,0,USetStr(4023),true);
  end else begin
    OutString(400,0,USetStr(4864),true);
    OutString(460,0,USetStr(4865),true);
  end;
  EndFormat;
  Gray_Divider(0,1);
  if RepSpec.flags[1]==0 then begin
    PRr.Code = frpr;
    ckey = "Code";
    keys = 1;
  end;
  if RepSpec.flags[1]==1 then begin
    PRr.CustCode = frcu;
    PRr.Code = frpr;
    ckey = "CustCode";
    keys = 2;
  end;
  if RepSpec.flags[1]==2 then begin
    PRr.Name = "";
    ckey = "Name";
    keys = 1;
  end;
  if RepSpec.flags[1]==3 then begin
    PRr.CustName ="";
    ckey = "CustName";
    keys = 1;
  end;
  if RepSpec.flags[1]==4 then begin  //Bjorn
    PRr.Leader ="";
    ckey = "PRLeader";
    keys = 1;
  end;
  found = true;
  while LoopKey(ckey,PRr,keys,found) begin
   testf = false;
   if (found) then begin
    if RepSpec.flags[1]==0 then begin
      if (nonblank(topr) and (PRr.Code>topr)) then begin
        found = false;
      end;
    end;
    if RepSpec.flags[1]==1 then begin
      if (nonblank(tocu) and (PRr.CustCode>tocu)) then begin
        found = false;
      end;
    end;
   end;
   if (found) then begin
    testf = true;
    if (nonblank(frcu) and (PRr.CustCode<frcu)) then begin testf = false; end;
    if (testf) then begin
      testf = ContactInGroupClass(PRr.CustCode,RepSpec.f5,RepSpec.f4,"CUST","","");
    end;    
    if (nonblank(tocu) and (PRr.CustCode>tocu)) then begin testf = false; end;
    if (nonblank(frpr) and (PRr.Code<frpr)) then begin testf = false; end;
    if (nonblank(topr) and (PRr.Code>topr)) then begin testf = false; end;

    if (nonblank(RepSpec.f2) and (RepSpec.f2<>PRr.Leader)) then begin testf = false; end;
    if ((RepSpec.flags[19]==0) and (PRr.Terminated<>1)) then begin testf = false; end;
    if ((RepSpec.flags[20]==0) and (PRr.Terminated==1)) then begin testf = false; end;
    if (nonblank(RepSpec.FirstAcc) and (RepSpec.FirstAcc<>PRr.PRClass)) then begin testf = false; end;    
    if (nonblank(RepSpec.LastAcc) and (RepSpec.LastAcc<>PRr.PrSalesMan)) then begin testf = false; end;    
    if ((RepSpec.flags[10]==0) and (PRr.Type==0)) then begin testf = false; end;
    if ((RepSpec.flags[11]==0) and (PRr.Type==1)) then begin testf = false; end;    
    if ((RepSpec.flags[12]==0) and (PRr.Type==2)) then begin testf = false; end;    
   end;
   if (testf) then begin
     prcnt = prcnt + 1;
     subpram = 1;
     subproject[0] = PRr.Code;
     if (RepSpec.IncDaughter==1) then begin
       FindDautherProjects(PRr.Code,subproject,subpram);
     end;   

     StartFormat(15);
     OutString(15,"DblPRCode",PRr.Code,false);
     if (RepSpec.ArtMode!=0)then begin 
       tstr = Left(PRr.Name,30);
       OutString(70,0,tstr,false);
     end else begin 
       OutString(70,0,PRr.Name,false);
       EndFormat;
       StartFormat(15);
     end;  
     OutString(240,0,PRr.Leader,false);
     OutString(300,0,PRr.CustCode,false);
     if (RepSpec.ArtMode==2) then begin
       OutString(380,0,PRr.CustName,false);
     end else begin
       OutDate(420,0,PRr.StartDate,true);
       OutDate(480,0,PRr.EndDate,true);
     end;
     EndFormat;
     
     if (RepSpec.ArtMode==0) then begin
       StartFormat(10);
       EndFormat;
       if (nonblank(PRr.Desc0)) then begin
         StartFormat(15);
         OutString(100,0,USetStr(4866),false);
         OutString(200,0,PRr.Desc0,false);
         EndFormat;
       end;
       if (nonblank(PRr.Desc1)) then begin
         StartFormat(15);
         OutString(200,0,PRr.Desc1,false);
         EndFormat;
       end;
       if (nonblank(PRr.Desc2)) then begin
         StartFormat(15);
         OutString(200,0,PRr.Desc2,false);
         EndFormat;
       end;
       Blankspace(8);
       StartFormat(15);
       OutString(100,0,USetStr(4867),false);
       OutString(200,0,PRr.Contact,false);
       EndFormat;               
       rwcnt = MatRowCnt(PRr);
       if (rwcnt<>0) then begin
         Blankspace(8);
         StartFormat(15);
         OutString(20,0,USetStr(4847),false);
         OutString(20,0,USetStr(3543),false);
         OutString(100,0,USetStr(4843),false);
         OutString(180,0,USetStr(3556),false);
         OutString(280,0,USetStr(4854),false);
         OutString(360,0,USetStr(4886),false);
         Endformat;       
       end;         
       for (i = 0 ; i<rwcnt ;i=i+1) begin
         MatRowGet(PRr,i,PRrw);
         StartFormat(15);
         OutDate(20,0,PRrw.PlanDate,false);
         if (PRrw.InvNr <> -1) then begin
           OutString(100,0,PRrw.InvNr,false);
         end;
         OutString(195,0,PRrw.ValStr,true);
         OutString(280,0,PRrw.Person,false);
         OutString(360,0,PRrw.Comment,false);
         EndFormat;                  
       end; 
       
       totbud=0;tottime=0;totother=0;totmaterial=0;totstock=0;       
       for (i=0;i<subpram;i=i+1) begin       
         wproj = subproject[i];  
         SumProjectBudget(wproj,totbud,tottime,totother,totmaterial,totstock);
       end;
       
       Blankspace(15);
       StartFormat(15);
       if (totbud <> 0) then begin
         if (tottime>0) then begin
           OutString(100,0,USetStr(8893),false);
           OutVal(230,0,tottime,M4Val,true);
         end;  
         if (totmaterial>0) then begin
           OutString(100,0,USetStr(8895),false);
           OutVal(230,0,totmaterial,M4Val,true);
         end;  
         if (totstock>0) then begin
           OutString(100,0,USetStr(8894),false);
           OutVal(230,0,totstock,M4Val,true);
         end;  
         if (totother>0) then begin
           OutString(100,0,USetStr(5335),false);
           OutVal(230,0,totother,M4Val,true);
         end;  
       end;
       OutString(100,0,USetStr(4868),false);
       OutVal(230,0,totbud,M4Val,true);
       EndFormat;
       StartFormat(15);
       EndFormat;
       Gray_Divider(0,1);
     end;
   end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
   OutString(350,0,USetStr(8897) & " " ,false);
   OutString(1,0,prcnt,true);
  EndFormat;
  EndJob;
 return;
end;
#endif

