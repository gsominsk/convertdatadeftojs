external function roundmode SetRoundModeD(Integer);
external function LongInt DateDiff(Date,Date);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure GetPDVRebt(string,var val);

global
procedure PrintLiquidityOwnCheck(var Date ownchkp,var val balp,var val sumd,var val sumc,record RcVc RepSpec)
BEGIN
  record OwnCheckVc OwnCheckr;
  Boolean found,skipf;
  Date dt,orgdate;
  string 255 tstr,t2;
  val rs;
  record SysFormatBlock SysRec;
  string 5 decavg;
  string 5 thoavg;
   
  BlockLoad(SysRec);
  decavg = SysRec.decimalPt;
  thoavg = SysRec.thousSep;
  sumd = 0; 
  sumc = 0;       
  found = true;
  skipf = false;
  orgdate = ownchkp;
  OwnCheckr.EffectDate = ownchkp;
  ResetLoop(OwnCheckr);
  while (LoopKey("DepEffectDate",OwnCheckr,1,found)) begin
//    dtp = OwnCheckr.EffectDate;
    if (found) then begin
      dt = OwnCheckr.EffectDate;
      if (dt<>ownchkp) then begin
        found = false;
        ownchkp = dt;
      end;
    end;
    if (found) then begin
      if (RepSpec.flags[16]==1) then begin
        skipf = false;
        if (OwnCheckr.Openf<>1) then begin skipf = true; end;
        if (skipf==false) then begin
          rs = MULWITHRATETOBASE1(OwnCheckr.CurncyCode,dt,OwnCheckr.Amount,DefaultCurRoundOff);
          balp = balp - rs;
          sumc = sumc + rs;
          if (RepSpec.flags[0]==0) then begin
            StartFormat(15);
            OutDate(0,0,dt,false);
            tstr = USetStr(1429);
            tstr = tstr & ":";
            t2 = OwnCheckr.SerNr;
            tstr = tstr & t2;
            OutString(60,"DblLiquid",tstr,false);
            if (RepSpec.flags[2]==1) then begin
              OutString(3,0,OwnCheckr.Comment,false);
            end else begin
              OutString(3,0,OwnCheckr.VECode,false);
            end;
            tstr = OwnCheckr.VEName;
            if (RepSpec.flags[17]!=0) then begin
              OutString(4,0,Left(tstr,15),false);
            end else begin
              OutString(4,0,tstr,false);
            end;       
            OutVal(360,0,blankval,M4Val,true);
            if (RepSpec.flags[18]!=0) then begin
              tstr = ValToString(rs,M4Val,thoavg,decavg,0);
              tstr = Mid(tstr,0,Len(tstr)-3);
              OutStringAdjustBiDi(420,0,tstr,true,M4Val,465);
              tstr = ValToString(balp,M4Val,thoavg,decavg,0);
              tstr = Mid(tstr,0,Len(tstr)-3);
              OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
            end else begin
              OutValBiDi(420,0,rs,M4Val,true,465);
              OutValBiDi(480,0,balp,M4Val,true,520);
            end;                          
            EndFormat;
          end;
        end;
      end;
    end;
  end;
  if (orgdate==ownchkp) then begin
//    ownchkp->year = 9999;
    ownchkp = AddYear(ownchkp,(9999 - GetYear(ownchkp)));        
  end;
  RETURN;
END;

procedure PrintLiqInfoLine(record RcVc RepSpec,Date olddat,Date newdate,string recstr,string thoavg,string decavg,val rs,val balp,string custcode,string custname,
                           string licomment,LongInt lisernr,Boolean inf)
begin
  string 255 tstr;

  switch (RepSpec.Media) begin
    case mtFile:

      StartFormat(15);          
      OutDate(0,0,olddat,false);
      OutDate(60,0,newdate,false);
      OutLongInt(160,0,DateDiff(newdate,olddat),true);
      OutString(170,0,recstr,false);
      if (RepSpec.flags[2]<>0) then begin
        OutString(200,0,custname,false);
      end else begin
        OutString(200,0,custcode,false);
      end;  
      tstr = custname;
      if (RepSpec.flags[17]!=0) then begin
        OutString(320,0,Left(tstr,25),false);
      end else begin
        OutString(320,0,tstr,false);
      end;
      OutString(340,0,licomment,false);
      if (RepSpec.flags[18]!=0) then begin
        tstr = ValToString(rs,M4Val,thoavg,decavg,0);
        tstr = Mid(tstr,0,Len(tstr)-3);
        if (inf) then begin
          OutString(360,0,tstr,true);
          OutVal(420,0,blankval,M4Val,true);
        end else begin
          OutVal(360,0,blankval,M4Val,true);
          OutString(420,0,tstr,true);
        end;  
        tstr = ValToString(balp,M4Val,thoavg,decavg,0);
        tstr = Mid(tstr,0,Len(tstr)-3);
        OutString(480,0,tstr,true);
      end else begin
        if (inf) then begin
          OutVal(360,0,rs,M4Val,true);
          OutVal(420,0,blankval,M4Val,true);
        end else begin
          OutVal(360,0,blankval,M4Val,true);
          OutVal(420,0,rs,M4Val,true);
        end;
        OutVal(480,0,balp,M4Val,true);
      end;
      EndFormat;
    otherwise
      StartFormat(15);
       OutDate(0,0,olddat,false);
       if (lisernr>0) then begin
         OutDateID(60,"DblLiqInfoVc",newdate,false,lisernr);
       end else begin
         OutDate(60,0,newdate,false);
       end;
       OutLongInt(160,0,DateDiff(newdate,olddat),true);
       OutString(170,"DblLiquid",recstr,false);
       if (RepSpec.flags[18]!=0) then begin
         tstr = ValToString(rs,M4Val,thoavg,decavg,0);
         tstr = Mid(tstr,0,Len(tstr)-3);
         if (inf) then begin
           OutStringAdjustBiDi(320,0,tstr,true,M4Val,360);
           OutVal(400,0,blankval,M4Val,true);
         end else begin
           OutVal(320,0,blankval,M4Val,true);
           OutStringAdjustBiDi(400,0,tstr,true,M4Val,440);
         end;           
         tstr = ValToString(balp,M4Val,thoavg,decavg,0);
         tstr = Mid(tstr,0,Len(tstr)-3);
         OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
       end else begin
        if (inf) then begin
          OutValBiDi(320,0,rs,M4Val,true,360);
          OutVal(400,0,blankval,M4Val,true);
        end else begin
          OutVal(320,0,blankval,M4Val,true);
          OutValBiDi(400,0,rs,M4Val,true,440);
        end;
         OutValBiDi(480,0,balp,M4Val,true,520);
       end;
                  
       EndFormat;
       StartFormat(15);
       if (RepSpec.flags[2]<>0) then begin
         OutString(0,0,custname,false);
       end else begin
         OutString(0,0,custcode,false);
       end;  
       tstr = custname;
       if (RepSpec.flags[17]!=0) then begin
         OutString(70,0,Left(tstr,25),false);
       end else begin
         OutString(70,0,tstr,false);
       end;
       OutString(300,0,licomment,false);
       EndFormat;
  end;
  return;
end;

global
procedure PrintLiquiditySM(var Date smp,var val balp,var val sumd,var val sumc,record RcVc RepSpec)
BEGIN
  record SMVc SMr;
  row SMVc SMrw;
  Boolean found,pmf,inf;
  Date orgdate;
  val rs;
  string 255 tstr,t2,t3;
  Integer pmj,pmrwcnt;
  Integer i,rwcnt;
  record PMBlock PMr;
  row PMBlock PMrw;  
  record SysFormatBlock SysRec;
  string 5 decavg;
  string 5 thoavg;
  Date bd;
   
  BlockLoad(SysRec);
  decavg = SysRec.decimalPt;
  thoavg = SysRec.thousSep;  
  sumd = 0; 
  sumc = 0;  
  BlockLoad(PMr);
  pmrwcnt = MatRowCnt(PMr);
  orgdate = smp;
  SMr.TransDate = smp;  
  found = true;
  ResetLoop(SMr);  
  while (LoopKey("TransDate",SMr,1,found)) begin
//    dtp = SMr.TransDate;  
    if (SMr.TransDate<>smp) then begin
      smp = SMr.TransDate;
      found = false;
    end;
    if (found) then begin
      if (RepSpec.flags[12]==1) then begin      
        rwcnt = MatRowCnt(SMr);
        for (i=0;i<rwcnt;i=i+1) begin        
          MatRowGet(SMr,i,SMrw);
          if (SMrw.RowSimStat==0) then begin 
            pmf = false;
            for (pmj=0;pmj<pmrwcnt;pmj= pmj+1) begin          
              if (pmf==false) then begin            
                MatRowGet(PMr,pmj,PMrw);
                if ((PMrw.CheckType==kPayModeTypeFree) or (PMrw.CheckType==kPayModeTypeCreditCard) or (PMrw.CheckType==kPayModeTypeDebitCard) or (PMrw.CheckType==kPayModeTypeCash) or (PMrw.CheckType==kPayModeTypeOnAccount) or (PMrw.CheckType==kPayModeTypeBankTransfer) or (PMrw.CheckType==kPayModeTypeCheque) or (PMrw.CheckType==kPayModeTypeOwnCheque)) then begin
                if (PMrw.AccNr==SMrw.AccNumber) then begin              
                  rs = SMrw.DebVal - SMrw.CredVal;
                  balp = balp + rs;
                  if (rs<0) then begin
                    sumc = sumc - rs;
                  end else begin
                    sumd  = sumd + rs;
                  end;  
                  if (RepSpec.flags[0]==0) then begin
                    StartFormat(15);
                    OutDate(0,0,SMr.TransDate,false);
                    tstr = USetStr(1154);
                    tstr = tstr & ":";
                    t2 = SMr.SerNr;
                    tstr = tstr & t2;
                    OutString(60,"DblLiquid",tstr,false);
                    if (RepSpec.flags[2]==1) then begin
                      OutString(3,0,SMr.Comment,false);
                    end else begin
                      OutString(3,0,SMrw.AccNumber,false);
                    end; 
                    tstr = SMr.Comment;
                    if (RepSpec.flags[17]!=0) then begin
                      OutString(4,0,Left(tstr,15),false);
                    end else begin
                      OutString(4,0,tstr,false);
                    end;              
                    if (RepSpec.flags[18]!=0) then begin
                      if (rs<0) then begin
                        tstr = ValToString(-rs,M4Val,thoavg,decavg,0);
                        tstr = Mid(tstr,0,Len(tstr)-3);
                        OutVal(360,0,blankval,M4Val,true);
                        OutStringAdjustBiDi(420,0,tstr,true,M4Val,465);
                      end else begin
                        tstr = ValToString(rs,M4Val,thoavg,decavg,0);
                        tstr = Mid(tstr,0,Len(tstr)-3);
                        OutStringAdjustBiDi(360,0,tstr,true,M4Val,410);
                        OutVal(420,0,blankval,M4Val,true);
                      end;  
                      tstr = ValToString(balp,M4Val,thoavg,decavg,0);
                      tstr = Mid(tstr,0,Len(tstr)-3);
                      OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
                    end else begin
                      if (rs<0) then begin
                        rs = -rs;
                        OutValBiDi(360,0,blankval,M4Val,true,410);
                        OutValBiDi(420,0,rs,M4Val,true,465);
                      end else begin
                        OutValBiDi(360,0,rs,M4Val,true,410);
                        OutValBiDi(420,0,blankval,M4Val,true,465);
                      end;
                      OutValBiDi(480,0,balp,M4Val,true,520);
                    end;
                    EndFormat;
                    pmf = true;
  //                pmj = rwcnt + 10;??
                  end;
                  if (RepSpec.flags[0]==3) then begin
                    tstr = USetStr(1154);
                    tstr = tstr & ":";
                    tstr = tstr & SMr.SerNr;

                    if (RepSpec.flags[2]==1) then begin
                      t2 = SMr.Comment;
                    end else begin
                      t2 = SMrw.AccNumber;
                    end; 
                    t3 = SMr.Comment;
                    if (RepSpec.flags[17]!=0) then begin
                      t3 = Left(t3,15);
                    end;              
                    inf = rs>0;
                    if (rs<0) then begin rs = -rs; end;
                    PrintLiqInfoLine(RepSpec,SMr.TransDate,bd,tstr,thoavg,decavg,rs,balp,t2,t3,"",-1,inf);
                    EndFormat;
                    pmf = true;
                  end;
                end;
                end;                
              end;
            end;               
          end;          
        end;        
      end;     
    end;    
  end;
  if (orgdate==smp) then begin
//    smp->year = 9999;
    smp = AddYear(smp,(9999 - GetYear(smp)));    
  end;
  return;
end;

procedure PrintDataInclLiqInfoAR(record RcVc RepSpec,record ARVc ARr,Date ardat,string thoavg,string decavg,val rs,var val sumd,var val balp)
begin
  string 255 tstr;
  record LiqInfoVc LIr;
  Boolean found,lifound;
  Date bd;
  
/*  
  LIr.IntYc = 0;
  LIr.TransNr = ARr.InvoiceNr;
  found = true;
  while (LoopKey("ActIntYc",LIr,2,found)) begin
    if (LIr.IntYc!=0) then begin found = false; end;
    if (LIr.TransNr!=ARr.InvoiceNr) then begin found = false; end;   
    if (found) then begin
      lifound = true;
      balp = balp + LIr.Sum;
      sumd = sumd + LIr.Sum;
      tstr = USetStr(1150);
      tstr = tstr & ":";
      tstr = tstr & ARr.InvoiceNr;
      PrintLiqInfoLine(RepSpec,ardat,LIr.NewPayDate,tstr,thoavg,decavg,LIr.BaseSum,balp,ARr.CustCode,ARr.CustName,LIr.Comment,LIr.SerNr,true);
    end;
  end;  
*/  
  if (lifound==false) then begin
    balp = balp + rs;
    sumd = sumd + rs;
    tstr = USetStr(1150);
    tstr = tstr & ":";
    tstr = tstr & ARr.InvoiceNr;
    PrintLiqInfoLine(RepSpec,ardat,bd,tstr,thoavg,decavg,rs,balp,ARr.CustCode,ARr.CustName,"",-1,true);
  end;
  return;
end;

procedure PrintDataInclLiqInfoARI(record RcVc RepSpec,record ARInstallVc ARIr,string custname,Date ardat,string thoavg,string decavg,val rs,var val sumd,var val balp)
begin
  string 255 tstr;
  record LiqInfoVc LIr;
  Boolean found,lifound;
  Date bd;

/*  
  LIr.IntYc = 0;
  LIr.TransNr = ARr.InvoiceNr;
  found = true;
  while (LoopKey("ActIntYc",LIr,2,found)) begin
    if (LIr.IntYc!=0) then begin found = false; end;
    if (LIr.TransNr!=ARr.InvoiceNr) then begin found = false; end;   
    if (found) then begin
      lifound = true;
      balp = balp + LIr.Sum;
      sumd = sumd + LIr.Sum;
      tstr = USetStr(1150);
      tstr = tstr & ":";
      tstr = tstr & ARr.InvoiceNr;
      PrintLiqInfoLine(RepSpec,ardat,LIr.NewPayDate,tstr,thoavg,decavg,LIr.Sum,balp,ARr.CustCode,ARr.CustName,LIr.Comment,LIr.SerNr,true);
    end;
  end; 
*/   
  if (lifound==false) then begin
    balp = balp + rs;
    sumd = sumd + rs;
    tstr = USetStr(1150);
    tstr = tstr & ":";
    tstr = tstr & ARIr.InvoiceNr;
    PrintLiqInfoLine(RepSpec,ardat,bd,tstr,thoavg,decavg,rs,balp,ARIr.CustCode,custname,"",-1,true);
  end;
  RETURN;
END;

global
procedure PrintLiquidityAR(var Date arp,var val balp,var val sumd,var val sumc,record RcVc RepSpec)
BEGIN
  record ARVc ARr;
  record IVVc IVr;
  record ARInstallVc ARIr;
  Boolean found,testf,ivfound;
  Boolean instfound,arfound,liqinfofound;
  string 255 tstr,t2;
  Date dtp,orgdate;
  Date ardat,instdat,liqinfodat;
  string 255 ckey;
  val tv,rs; 
  record SysFormatBlock SysRec;
  string 5 decavg;
  string 5 thoavg;
  record LiqInfoVc LIr;
   
  BlockLoad(SysRec);
  decavg = SysRec.decimalPt;
  thoavg = SysRec.thousSep;
  sumd = 0; 
  sumc = 0;  
  orgdate = arp;

//StopAlert(" arp " & arp & " orgdate " & orgdate & " RepSpec.ArtMode " & RepSpec.ArtMode & " orgdate " & orgdate);  

  if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==2)) then begin
    ckey = "DueDate";
  end;
  if (RepSpec.ArtMode==1) then begin
    ckey = "RebDate";
  end;
  dtp = arp;
  if (RepSpec.ArtMode==2) then begin
    dtp = AddDay(dtp,-RepSpec.long1);
  end;  
  instdat = dtp;
  ardat = dtp;
  liqinfodat = dtp;
  instfound = false;
  ARIr.DueDate = instdat;
  found = true;
  ResetLoop(ARIr);
  while (LoopKey("DueDate",ARIr,1,found)) begin
    instdat = ARIr.DueDate;
    if (found) then begin
      if (RepSpec.flags[13]==2) then begin
        instdat = AddDay(ARIr.DueDate,RepSpec.long2);
      end;  
      if (instdat<>arp) then begin
        found = false;
      end;
    end;    
    instfound = true;
    if (found) then begin
      testf = true;
      IVr.SerNr = ARIr.InvoiceNr;
      ivfound = ReadFirstMain(IVr,1,true);
      if (ivfound) then begin
        if (RepSpec.flags[19]!=0) then begin
          if (IVr.DisputedFlag!=0) then begin testf = false; end;
        end;
      end;   
      if (testf) then begin 
        switch (RepSpec.flags[0]) begin
          case 0:
            balp = balp + ARIr.BookRVal;
            sumd = sumd + ARIr.BookRVal;
            StartFormat(15);
            OutDate(0,0,instdat,false);
            tstr = USetStr(1150);
            tstr = tstr & ":";
            t2 = ARIr.InvoiceNr;
            tstr = tstr & t2;
            OutString(60,"DblLiquid",tstr,false);
            if (RepSpec.flags[2]==1) then begin
              OutString(3,0,IVr.Addr0,false);
            end else begin
              OutString(3,0,ARIr.CustCode,false);
            end;  
            tstr = IVr.Addr0;
            if (RepSpec.flags[17]!=0) then begin
              OutString(4,0,Left(tstr,15),false);
            end else begin
              OutString(4,0,tstr,false);
            end;   
            if (RepSpec.flags[18]!=0) then begin
              tstr = ValToString(ARIr.BookRVal,M4Val,thoavg,decavg,0);
              tstr = Mid(tstr,0,Len(tstr)-3);
              OutStringAdjustBiDi(360,0,tstr,true,M4Val,410);
              tstr = ValToString(balp,M4Val,thoavg,decavg,0);
              tstr = Mid(tstr,0,Len(tstr)-3);
              OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
            end else begin
              OutValBiDi(360,0,ARIr.BookRVal,M4Val,true,410);
              OutValBiDi(480,0,balp,M4Val,true,520);
            end;                   
            EndFormat;
          case 1:
            balp = balp + ARIr.BookRVal;
            sumd = sumd + ARIr.BookRVal;
          case 2:
            balp = balp + ARIr.BookRVal;
            sumd = sumd + ARIr.BookRVal;
          case 3:
            LIr.IntYc = IVYc;
            LIr.TransNr = ARIr.InvoiceNr;            
            if (ReadFirstKey("ActIntYc",LIr,2,true)==false) then begin
              PrintDataInclLiqInfoARI(RepSpec,ARIr,IVr.Addr0,ardat,thoavg,decavg,rs,sumd,balp);
            end;
        end;
      end;
    end;
  end;

  if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==2)) then begin
      ckey = "DueDate";
  end;
  if (RepSpec.ArtMode==1) then begin
      ckey = "RebDate";
  end;
  ARr.DueDate = arp;
  if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==2)) then begin
    ARr.DueDate = ardat;
  end;
  if (RepSpec.ArtMode==1) then begin
    ARr.ARRebDate = ardat;
  end;
  arfound = false;
  found = true;
  ResetLoop(ARr);        
  while (LoopKey(ckey,ARr,1,found)) begin
    if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==2)) then begin
      ardat = ARr.DueDate;
    end;
    if (RepSpec.ArtMode==1) then begin
      ardat = ARr.ARRebDate;
    end;
    testf = true;
    if (found) then begin
      if (RepSpec.ArtMode==2) then begin
        ardat = AddDay(ARr.DueDate,RepSpec.long1);
      end;  
      if (ardat<>arp) then begin
        found = false;
//StopAlert("x. ardat "  & ardat)    
      end;
    end;
    arfound = true;
    if (found==false) then begin testf = false; end;
    if (testf) then begin
      if (RepSpec.flags[10]==1) then begin
        IVr.SerNr = ARr.InvoiceNr;
        ivfound = ReadFirstMain(IVr,1,true);
        if (ivfound) then begin
          if (RepSpec.flags[19]!=0) then begin
            if (IVr.DisputedFlag!=0) then begin testf = false; end;
          end;
        end;
        if (testf) then begin        
          if ((ivfound==false) or (IVr.InstallmentInv==0)) then begin
          rs = MULWITHRATETOBASE1(ARr.ARCurncyCode,ARr.DueDate,ARr.RVal,DefaultCurRoundOff);
          if (RepSpec.ArtMode==1) then begin
            if (ivfound) then begin
              if (IVr.pdvrebt<>0) then begin
                tv = rs * IVr.pdvrebt;
                tv = tv/100;
                tv = Round(tv,SetRoundModeD(0));
                rs = rs - tv;
              end;
//pdvrebt2              
            end;
          end;
//Trace("11. " & " ardat " & ardat," IVr.SerNr " & IVr.SerNr);  
          switch (RepSpec.flags[0]) begin
            case 0:
              balp = balp + rs;
              sumd = sumd + rs;
              StartFormat(15);
              OutDate(0,0,ardat,false);
              tstr = USetStr(1150);
              tstr = tstr & ":";
              t2 = ARr.InvoiceNr;
              tstr = tstr & t2;
              OutString(60,"DblLiquid",tstr,false);
              if (RepSpec.flags[2]==1) then begin
                OutString(3,0,ARr.CustName,false);
              end else begin
                OutString(3,0,ARr.CustCode,false);
              end;  
              tstr = ARr.CustName;
              if (RepSpec.flags[17]!=0) then begin
                OutString(4,0,Left(tstr,15),false);
              end else begin
                OutString(4,0,tstr,false);
              end;              
              if (RepSpec.flags[18]!=0) then begin
                tstr = ValToString(rs,M4Val,thoavg,decavg,0);
                tstr = Mid(tstr,0,Len(tstr)-3);
                OutStringAdjustBiDi(360,0,tstr,true,M4Val,410);
                OutVal(420,0,blankval,M4Val,true);
                tstr = ValToString(balp,M4Val,thoavg,decavg,0);
                tstr = Mid(tstr,0,Len(tstr)-3);
                OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
              end else begin
                OutValBiDi(360,0,rs,M4Val,true,410);
                OutValBiDi(420,0,blankval,M4Val,true,465);
                OutValBiDi(480,0,balp,M4Val,true,520);
              end;                   
              EndFormat;
            case 1:
              balp = balp + rs;
              sumd = sumd + rs;
            case 2:
              balp = balp + rs;
              sumd = sumd + rs;
            case 3:
              LIr.IntYc = IVYc;
              LIr.TransNr = ARr.InvoiceNr;            
              if (ReadFirstKey("ActIntYc",LIr,2,true)==false) then begin
                PrintDataInclLiqInfoAR(RepSpec,ARr,ardat,thoavg,decavg,rs,sumd,balp);
              end;
          end;
        end;
        end;
      end;
    end;
  end;

  switch (RepSpec.flags[0]) begin
    case 3:
      liqinfofound = false;

      LIr.IntYc = IVYc;
      LIr.NewPayDate = arp;
      LIr.Closed = 0;
      found = true;
      while (LoopKey("ActNewPayDate",LIr,2,found)) begin
        if (LIr.IntYc!=IVYc) then begin found = false; end;  
        liqinfodat = LIr.NewPayDate;
        liqinfofound = true;
        if (liqinfodat!=arp) then begin
          found = false;
        end;
        if (found) then begin
          testf = true;
          if (LIr.Closed!=0) then begin testf = false; end;   
          if (testf) then begin
          if (RepSpec.flags[10]==1) then begin
            balp = balp + LIr.Sum;
            sumd = sumd + LIr.Sum;
            tstr = USetStr(1150);
            tstr = tstr & ":";
            tstr = tstr & LIr.TransNr;
            IVr.SerNr = LIr.TransNr;
            ivfound = ReadFirstMain(IVr,1,true);
//Trace("12. " & " IVr.PayDate " & IVr.PayDate & " LIr.NewPayDate " & LIr.NewPayDate," IVr.SerNr " & IVr.SerNr);  
            PrintLiqInfoLine(RepSpec,IVr.PayDate,LIr.NewPayDate,tstr,thoavg,decavg,LIr.BaseSum,balp,LIr.CUCode,LIr.CUName,LIr.Comment,LIr.SerNr,true);
          end;
          end;
        end;
      end;  
/*      

      LIr.IntYc = IVYc;
      found = true;
      while (LoopKey("ActIntYc",LIr,1,found)) begin
        if (LIr.IntYc!=IVYc) then begin found = false; end;   
        if (found) then begin
          testf = true;
          if (LIr.Closed!=0) then begin testf = false; end;   
          if (liqinfodat>LIr.NewPayDate) then begin
            testf = false;
          end;
          if (testf) then begin
            liqinfodat = LIr.NewPayDate;
            liqinfofound = true;
            if (liqinfodat<>arp) then begin
              testf = false;
            end;   
            if (testf) then begin         
            if (RepSpec.flags[10]==1) then begin
              balp = balp + LIr.Sum;
              sumd = sumd + LIr.Sum;
              tstr = USetStr(1150);
              tstr = tstr & ":";
              tstr = tstr & LIr.TransNr;
              PrintLiqInfoLine(RepSpec,LIr.NewPayDate,LIr.NewPayDate,tstr,thoavg,decavg,LIr.BaseSum,balp,LIr.CUCode,LIr.CUName,LIr.Comment,LIr.SerNr,true);
            end;
            end;
          end;
        end;
      end; 
*/      

  end;
//Trace("arfound " & arfound," instfound " & instfound & " liqinfofound " & liqinfofound);  
  if ((arfound==true) and (instfound==true) and (liqinfofound==true)) then begin
    if (ardat<instdat) then begin
      if (ardat<liqinfodat) then begin
        if (arp!=ardat) then begin
          arp = ardat;
        end else begin
          arp = liqinfodat;
        end;
      end else begin
//        if (arp!=liqinfodat) then begin
        if (arp<liqinfodat) then begin
          arp = liqinfodat;
        end else begin
          arp = ardat;
        end;
      end;
    end else begin
      if (instdat<liqinfodat) then begin
        if (arp!=instdat) then begin
          arp = instdat;
        end else begin
          arp = liqinfodat;
        end;
      end else begin
//        if (arp!=liqinfodat) then begin
        if (arp<liqinfodat) then begin
          arp = liqinfodat;
        end else begin
          arp = instdat;
        end;
      end;
    end;
    goto LPrintLiquidityAR;    
  end;  
  
  if ((arfound==true) and (instfound==true)) then begin
    if (ardat<instdat) then begin
      if (arp!=ardat) then begin
        arp = ardat;
      end else begin
        arp = instdat;
      end;
    end else begin
//      if (arp!=instdat) then begin
      if (arp<instdat) then begin
        arp = instdat;
      end else begin
        arp = ardat;
      end;
    end;
    goto LPrintLiquidityAR;    
  end;

  if ((arfound==true) and (liqinfofound==true)) then begin
//Trace("ardat " & ardat," liqinfodat " & liqinfodat & " arp " & arp);    
    if (ardat<liqinfodat) then begin
      if (arp!=ardat) then begin
        arp = ardat;
      end else begin
        arp = liqinfodat;
      end;
    end else begin
//      if (arp!=liqinfodat) then begin
      if (arp<liqinfodat) then begin
        arp = liqinfodat;
      end else begin
        arp = ardat;
      end;
    end;
    goto LPrintLiquidityAR;    
  end;


  if ((instfound==true) and (liqinfofound==true)) then begin
    if (instdat<liqinfodat) then begin
      if (arp!=instdat) then begin
        arp = instdat;
      end else begin
        arp = liqinfodat;
      end;
    end else begin
//      if (arp!=liqinfodat) then begin
      if (arp<liqinfodat) then begin
        arp = liqinfodat;
      end else begin
        arp = instdat;
      end;
    end;
    goto LPrintLiquidityAR;    
  end;

  if (arfound==true) then begin
    if (arp<ardat) then begin
      arp = ardat;
    end;
    goto LPrintLiquidityAR;    
  end;
  if (instfound==true) then begin
    if (arp<instdat) then begin
      arp = instdat;
    end;
    goto LPrintLiquidityAR;    
  end;
  if (liqinfofound==true) then begin
    if (arp<liqinfodat) then begin
      arp = liqinfodat;
    end;
    goto LPrintLiquidityAR;    
  end;

LPrintLiquidityAR:;
//StopAlert("1.5. " & " ardat " & ardat & " liqinfodat " & liqinfodat & " instdat " & instdat);  

//Trace("2. " & " arfound " & arfound & " ardat " & ardat & " orgdate " & orgdate & " liqinfodat " & liqinfodat & " instdat " & instdat & " arp " & arp,"");  

  if ((orgdate==arp) or ((arfound==false) and (instfound==false) and (liqinfofound==false))) then begin
//    arp->year = 9999;
    arp = AddYear(arp,(9999 - GetYear(arp)));    
  end;
  
  RETURN;
END;

procedure PrintDataInclLiqInfoAPI(record RcVc RepSpec,record APInstallVc APIr,string vename,string vicomment,Date ardat,string thoavg,string decavg,val rs,var val sumc,var val balp,string refstr)
begin
  string 255 tstr,lvename;
  record LiqInfoVc LIr;
  Boolean found,lifound;
  Date bd;

/*  
  LIr.IntYc = 1;
  LIr.TransNr = ARr.InvoiceNr;
  found = true;
  while (LoopKey("ActIntYc",LIr,2,found)) begin
    if (LIr.IntYc!=1) then begin found = false; end;
    if (LIr.TransNr!=ARr.InvoiceNr) then begin found = false; end;   
    if (found) then begin
      lifound = true;
      balp = balp - LIr.Sum;
      sumd = sumd + LIr.Sum;
      tstr = USetStr(1150);
      tstr = tstr & ":";
      tstr = tstr & ARr.InvoiceNr;
      PrintLiqInfoLine(RepSpec,ardat,LIr.NewPayDate,tstr,thoavg,decavg,LIr.Sum,balp,ARr.CustCode,ARr.CustName,LIr.Comment,LIr.SerNr,false);
    end;
  end; 
*/   
  if (lifound==false) then begin
    //balp = balp - rs;
    //sumc = sumc + rs;
    tstr = USetStr(1152);
    tstr = tstr & ":";
    tstr = tstr & APIr.VISerNr;
    if (nonblank(vicomment)) then begin
      lvename = vicomment;
    end else begin
      lvename = vename;
    end;      
    PrintLiqInfoLine(RepSpec,ardat,bd,tstr,thoavg,decavg,rs,balp,APIr.VECode,lvename,refstr,-1,false);
  end;
  RETURN;
END;

procedure PrintDataInclLiqInfoAP(record RcVc RepSpec,record APVc APr,Date apdat,string thoavg,string decavg,val rs,var val sumc,var val balp,string refstr)
begin
  string 255 tstr;
  record LiqInfoVc LIr;
  Boolean found,lifound;
  Date bd;
 
/*  
  LIr.IntYc = 1;
  LIr.TransNr = APr.SerNr;
  found = true;
  while (LoopKey("ActIntYc",LIr,2,found)) begin
    if (LIr.IntYc!=1) then begin found = false; end;
    if (LIr.TransNr!=APr.SerNr) then begin found = false; end;   
    if (found) then begin
      lifound = true;
      balp = balp - LIr.Sum;
      sumc = sumc + LIr.Sum;
      tstr = USetStr(1152);
      tstr = tstr & ":";
      tstr = tstr & APr.SerNr;
      PrintLiqInfoLine(RepSpec,apdat,LIr.NewPayDate,tstr,thoavg,decavg,LIr.BaseSum,balp,APr.VECode,APr.VEName,LIr.Comment,LIr.SerNr,false);
    end;
  end;  
*/  
  if (lifound==false) then begin
    //balp = balp - rs;
    //sumc = sumc + rs;
    tstr = USetStr(1152);
    tstr = tstr & ":";
    tstr = tstr & APr.SerNr;
    PrintLiqInfoLine(RepSpec,apdat,bd,tstr,thoavg,decavg,rs,balp,APr.VECode,APr.VEName,refstr,-1,false);
  end;
  return;
end;

global
procedure PrintLiquidityAP(var Date app,var val balp,var val sumd,var val sumc,record RcVc RepSpec)
begin
  record APVc APr;
  record VIVc VIr;
  record APInstallVc APIr;
  val rs;
  val APVal,pdvrebt,tv;
  Date dtp,orgdate;
  Date apdat,instdat,liqinfodat;
  string 255 ckey;
  string 255 tstr,t2;
  Boolean vifound,found;
  Boolean instfound,apfound,liqinfofound;
  Boolean skip,testf;
  record SysFormatBlock SysRec;
  string 5 decavg;
  string 5 thoavg;
  record LiqInfoVc LIr;
   
  BlockLoad(SysRec);
  decavg = SysRec.decimalPt;
  thoavg = SysRec.thousSep;
  sumd = 0; 
  sumc = 0;         
  orgdate = app;          
  vifound = false;
  skip = false;
  if ((RepSpec.flags[13]==0) or (RepSpec.flags[13]==2)) then begin
      ckey = "DueDate";
  end;
  if (RepSpec.flags[13]==1) then begin
      ckey = "RebDate";
  end;
  dtp = app; 
  if (RepSpec.flags[13]==2) then begin
    dtp = AddDay(dtp,-RepSpec.long2);
  end;    
  instdat = dtp;
  apdat = dtp;
  liqinfodat = dtp;

  instfound = false;
  APIr.DueDate = instdat;
  found = true;
  ResetLoop(APIr);   
  while (LoopKey("DueDate",APIr,1,found)) begin
    instdat = APIr.DueDate;
    if (found) then begin
      if (RepSpec.flags[13]==2) then begin
        instdat = AddDay(APIr.DueDate,RepSpec.long2);
      end;  
      if (instdat<>app) then begin
        found = false;
      end;
    end;    
    instfound = true;
    if (found) then begin
      if (RepSpec.flags[11]==1) then begin
      VIr.SerNr = APIr.VISerNr;
      vifound = ReadFirstMain(VIr,1,true);
      switch (RepSpec.flags[0]) begin
        case 0:
          StartFormat(15);
          OutDate(0,0,APIr.DueDate,false);
          tstr = USetStr(1152);
          tstr = tstr & ":";
          t2 = VIr.SerNr;
          tstr = tstr & t2;
          OutString(60,"DblLiquid",tstr,false);
          if (RepSpec.flags[2]==1) then begin
            if (nonblank(VIr.Comment)) then begin
              OutString(3,0,VIr.Comment,false);
            end else begin
              OutString(3,0,VIr.VEName,false);
            end;  
          end else begin
            OutString(3,0,VIr.VECode,false);
          end;
          tstr = VIr.VEName;
          if (RepSpec.flags[17]!=0) then begin
            OutString(4,0,Left(tstr,15),false);
          end else begin
            OutString(4,0,tstr,false);
          end;   
          if (RepSpec.flags[18]!=0) then begin
            tstr = ValToString(APIr.BookRVal,M4Val,thoavg,decavg,0);
            tstr = Mid(tstr,0,Len(tstr)-3);
            OutStringAdjustBiDi(420,0,tstr,true,M4Val,465);
            tstr = ValToString(balp,M4Val,thoavg,decavg,0);
            tstr = Mid(tstr,0,Len(tstr)-3);
            OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
          end else begin
            OutValBiDi(420,0,APIr.BookRVal,M4Val,true,465);
            OutValBiDi(480,0,balp,M4Val,true,520);
          end;                   
          EndFormat;
        case 1:
          balp = balp - APIr.BookRVal;
          sumc = sumc + APIr.BookRVal;
        case 2:
          balp = balp - APIr.BookRVal;
          sumc = sumc + APIr.BookRVal;
        case 3:
          LIr.IntYc = VIYc;
          LIr.TransNr = APIr.VISerNr;            
          if (ReadFirstKey("ActIntYc",LIr,2,true)==false) then begin
            PrintDataInclLiqInfoAPI(RepSpec,APIr,VIr.VEName,VIr.Comment,APIr.DueDate,thoavg,decavg,APIr.BookRVal,sumc,balp,VIr.RefStr);
          end;
      end;
      end;
    end;
  end;

  if ((RepSpec.flags[13]==0) or (RepSpec.flags[13]==2)) then begin
      APr.DueDate = apdat;
  end;
  if (RepSpec.flags[13]==1) then begin
      APr.RebDate = apdat;
  end;
  apfound = false;
  found = true;
  ResetLoop(APr);   
  while (LoopKey(ckey,APr,1,found)) begin          
    if ((RepSpec.flags[13]==0) or (RepSpec.flags[13]==2)) begin
      apdat = APr.DueDate;
    end; 
    if (RepSpec.flags[13]==1) begin
      apdat = APr.RebDate;
    end;      
    if (found) then begin
      if (RepSpec.flags[13]==2) then begin
        apdat = AddDay(APr.DueDate,RepSpec.long2);
      end;  
      if (apdat<>app) then begin
        found = false;
      end;
    end;    
    apfound = true;
    if (found) then begin    
      VIr.SerNr = APr.SerNr;
      vifound = ReadFirstMain(VIr,1,true);
      if (RepSpec.flags[11]==1) then begin     
        if (RepSpec.flags[1]==1) then begin
          if (vifound) then begin
            if (VIr.Closed==1) then begin skip = true; end;
            if (VIr.Invalid<>0) then begin skip = true; end;
          end;
        end;         
        if (skip==false) then begin
          if ((vifound==false) or (VIr.InstallmentInv==0)) then begin
          if (RepSpec.flags[13]==1) then begin
            APVal = APr.RVal;
            if (vifound) then begin
              GetPDVRebt(VIr.PayDeal,pdvrebt);
              if (pdvrebt<>0) then begin
                tv = APVal * pdvrebt;
                tv = tv/100;
                tv = Round(tv,SetRoundModeD(0));
                APVal = APVal + tv;
              end;
//pdvrebt2              
            end;
          end else begin
            APVal = APr.RVal;
          end;       
          rs = MULWITHRATETOBASE1(APr.CurncyCode,apdat,APVal,DefaultCurRoundOff);
          balp = balp - rs;
          sumc = sumc + rs;
          switch (RepSpec.flags[0]) begin
            case 0:
              StartFormat(15);
              OutDate(0,0,apdat,false);
              tstr = USetStr(1152);
              tstr = tstr & ":";
              t2 = APr.SerNr;
              tstr = tstr & t2;
              OutString(60,"DblLiquid",tstr,false);
              if (RepSpec.flags[2]==1) then begin
                if (vifound) then begin
                  if (nonblank(VIr.Comment)) then begin
                    OutString(3,0,VIr.Comment,false);
                  end else begin
                    OutString(3,0,APr.VEName,false);
                  end;  
                end else begin
                  OutString(3,0,APr.VEName,false);
                end;
              end else begin
                OutString(3,0,APr.VECode,false);
              end;
              tstr = APr.VEName;
              if (RepSpec.flags[17]!=0) then begin
                OutString(4,0,Left(tstr,15),false);
              end else begin
                OutString(4,0,tstr,false);
              end;              
              OutVal(360,0,blankval,M4Val,true);
              if (RepSpec.flags[18]!=0) then begin
                tstr = ValToString(rs,M4Val,thoavg,decavg,0);
                tstr = Mid(tstr,0,Len(tstr)-3);
                OutStringAdjustBiDi(420,0,tstr,true,M4Val,465);
                tstr = ValToString(balp,M4Val,thoavg,decavg,0);
                tstr = Mid(tstr,0,Len(tstr)-3);
                OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
              end else begin
                OutValBiDi(420,0,rs,M4Val,true,465);
                OutValBiDi(480,0,balp,M4Val,true,520);
              end;                   
              EndFormat;
            case 3:
              LIr.IntYc = VIYc;
              LIr.TransNr = APr.SerNr;            
              if (ReadFirstKey("ActIntYc",LIr,2,true)==false) then begin   
                PrintDataInclLiqInfoAP(RepSpec,APr,apdat,thoavg,decavg,rs,sumc,balp,VIr.RefStr);
              end;
          end;
                    
          end;
        end;        
      end;      
    end;
  end;
  switch (RepSpec.flags[0]) begin
    case 3:
      liqinfofound = false;
      
      LIr.IntYc = VIYc;
      LIr.NewPayDate = app;
      LIr.Closed = 0;
      found = true;
      while (LoopKey("ActNewPayDate",LIr,2,found)) begin
        if (LIr.IntYc!=VIYc) then begin found = false; end;  
        liqinfodat = LIr.NewPayDate;
        liqinfofound = true;
        if (liqinfodat<>app) then begin
          found = false;
        end;
        if (found) then begin
          testf = true;
          if (LIr.Closed!=0) then begin testf = false; end;   
          if (testf) then begin
          if (RepSpec.flags[11]==1) then begin
            balp = balp - LIr.Sum;
            sumc = sumc + LIr.Sum;
            tstr = USetStr(1152);
            tstr = tstr & ":";
            tstr = tstr & LIr.TransNr;
            VIr.SerNr = LIr.TransNr;
            vifound = ReadFirstMain(VIr,1,true);
            PrintLiqInfoLine(RepSpec,VIr.DueDate,LIr.NewPayDate,tstr,thoavg,decavg,LIr.BaseSum,balp,LIr.CUCode,LIr.CUName,LIr.Comment,LIr.SerNr,false);
           end;
          end;
        end;
      end;  
      
/*
      LIr.IntYc = VIYc;
      found = true;
      while (LoopKey("ActIntYc",LIr,1,found)) begin
        if (LIr.IntYc!=VIYc) then begin found = false; end;   
        if (found) then begin
          testf = true;
          if (LIr.Closed!=0) then begin testf = false; end;   
          if (liqinfodat>LIr.NewPayDate) then begin
            testf = false;
          end;
          if (testf) then begin
            liqinfodat = LIr.NewPayDate;
            liqinfofound = true;
            if (liqinfodat<>app) then begin
              testf = false;
            end;   
            if (testf) then begin         
            if (RepSpec.flags[11]==1) then begin
              balp = balp + LIr.Sum;
              sumd = sumd + LIr.Sum;
              tstr = USetStr(1152);
              tstr = tstr & ":";
              tstr = tstr & LIr.TransNr;
              VIr.SerNr = LIr.TransNr;
              vifound = ReadFirstMain(VIr,1,true);
              PrintLiqInfoLine(RepSpec,VIr.DueDate,LIr.NewPayDate,tstr,thoavg,decavg,LIr.BaseSum,balp,LIr.CUCode,LIr.CUName,LIr.Comment,LIr.SerNr,false);
            end;
            end;
          end;
        end;
      end; 
*/      
  end;


  if ((apfound==true) and (instfound==true) and (liqinfofound==true)) then begin
    if (apdat<instdat) then begin
      if (apdat<liqinfodat) then begin
        if (app!=apdat) then begin
          app = apdat;
        end else begin
          app = liqinfodat;
        end;
      end else begin
        if (app!=liqinfodat) then begin
          app = liqinfodat;
        end else begin
          app = apdat;
        end;
      end;
    end else begin
      if (instdat<liqinfodat) then begin
        if (app!=instdat) then begin
          app = instdat;
        end else begin
          app = liqinfodat;
        end;
      end else begin
        if (app!=liqinfodat) then begin
          app = liqinfodat;
        end else begin
          app = instdat;
        end;
      end;
    end;
    goto LPrintLiquidityAP;    
  end;  
  
  if ((apfound==true) and (instfound==true)) then begin
    if (apdat<instdat) then begin
      if (app!=apdat) then begin
        app = apdat;
      end else begin
        app = instdat;
      end;
    end else begin
      if (app!=instdat) then begin
        app = instdat;
      end else begin
        app = apdat;
      end;
    end;
    goto LPrintLiquidityAP;    
  end;

  if ((apfound==true) and (liqinfofound==true)) then begin
    if (apdat<liqinfodat) then begin
      if (app!=apdat) then begin
        app = apdat;
      end else begin
        app = liqinfodat;
      end;
    end else begin
      if (app!=liqinfodat) then begin
        app = liqinfodat;
      end else begin
        app = apdat;
      end;
    end;
    goto LPrintLiquidityAP;    
  end;


  if ((instfound==true) and (liqinfofound==true)) then begin
    if (instdat<liqinfodat) then begin
      if (app!=instdat) then begin
        app = instdat;
      end else begin
        app = liqinfodat;
      end;
    end else begin
      if (app!=liqinfodat) then begin
        app = liqinfodat;
      end else begin
        app = instdat;
      end;
    end;
    goto LPrintLiquidityAP;    
  end;
  if (apfound==true) then begin
    app = apdat;
    goto LPrintLiquidityAP;    
  end;
  if (instfound==true) then begin
    app = instdat;
    goto LPrintLiquidityAP;    
  end;
  if (liqinfofound==true) then begin
    app = liqinfodat;
    goto LPrintLiquidityAP;    
  end;

LPrintLiquidityAP:;
  
  if ((orgdate==app) or ((apfound==false) and (instfound==false) and (liqinfofound==false))) then begin
//    app->year = 9999;
     app = AddYear(app,(9999 - GetYear(app)));
  end;  
  return;
end;

global
procedure PrintLiquidityCheck(var Date chkp,var val balp,var val sumd,var val sumc,record RcVc RepSpec)
BEGIN
  record CheckVc Checkr;
  Boolean found;
  Boolean skipf;
  Date orgdate,dt;
  string 255 tstr,t2;
  val rs;
  record SysFormatBlock SysRec;
  string 5 decavg;
  string 5 thoavg;
   
  BlockLoad(SysRec);
  decavg = SysRec.decimalPt;
  thoavg = SysRec.thousSep;          
  sumd = 0; 
  sumc = 0;
  skipf = false;
  orgdate = chkp;
  Checkr.ECDate = chkp;
  found = true;
  ResetLoop(Checkr);
  while (LoopKey("OpenDepECDate",Checkr,1,found)) begin 
//    dtp = Checkr.ECDate; 
    if (found) then begin
      dt = Checkr.ECDate;
      if (dt<>chkp) then begin
        found = false;
        chkp = dt;
      end;
    end;
    if (found) then begin
      if (RepSpec.flags[15]==1) then begin
      
        skipf = false;
        if ((Checkr.Openf<>1) and (Checkr.Openf<>2)) then begin skipf = true; end;
        if (skipf==false) then begin                
          rs = MULWITHRATETOBASE1(Checkr.CurncyCode,dt,Checkr.Amount,DefaultCurRoundOff);
          balp = balp + rs;
          sumd = sumd + rs;          
          if (RepSpec.flags[0]==0) then begin
          
            StartFormat(15);
            OutDate(0,0,dt,false);
            tstr = USetStr(1423);
            tstr = tstr & ":";
            t2 = Checkr.SerNr;
            tstr = tstr & t2;
            OutString(60,"DblLiquid",tstr,false);
            if (RepSpec.flags[2]==1) then begin
              OutString(3,0,Checkr.Comment,false);
            end else begin
              OutString(3,0,Checkr.CUCode,false);
            end;
            tstr = Checkr.CUName;
            if (RepSpec.flags[17]!=0) then begin
              OutString(4,0,Left(tstr,15),false);
            end else begin
              OutString(4,0,tstr,false);
            end;              
            if (RepSpec.flags[18]!=0) then begin
              tstr = ValToString(rs,M4Val,thoavg,decavg,0);
              tstr = Mid(tstr,0,Len(tstr)-3);
              OutStringAdjustBiDi(360,0,tstr,true,M4Val,410);
              OutVal(420,0,blankval,M4Val,true);
              tstr = ValToString(balp,M4Val,thoavg,decavg,0);
              tstr = Mid(tstr,0,Len(tstr)-3);
              OutStringAdjustBiDi(480,0,tstr,true,M4Val,520);
            end else begin
              OutValBiDi(360,0,rs,M4Val,true,410);
              OutValBiDi(420,0,blankval,M4Val,true,465);
              OutValBiDi(480,0,balp,M4Val,true,520);
            end;                   
            EndFormat;             
          end;         
        end;         
      end;
    end;  
  end;
  if (orgdate==chkp) then begin
//    chkp->year = 9999;
    chkp = AddYear(chkp,(9999 - GetYear(chkp)));        
  end;
  RETURN;
END;
