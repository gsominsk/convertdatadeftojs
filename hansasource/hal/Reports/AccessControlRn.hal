procedure PrintAccessGroupsDetails(string accessgroups)begin  record AccessVc Acessr;  row AccessVc Acessrw;  Integer i,rwcnt,setnr;  LongInt pos;  string 255 tstr,lastaccgr;    Gray_Divider(45,400);  pos = 0;  while (GetNextSubstring(accessgroups,pos,",",tstr)) begin    Acessr.Code = tstr;    ReadFirstMain(Acessr,1,true);    rwcnt = MatRowCnt(Acessr);    for (i=0;i<rwcnt;i=i+1) begin      MatRowGet(Acessr,i,Acessrw);      StartFormat(15);       if (lastaccgr!=Acessr.Code) then begin         OutString(45,0,Acessr.Code,false);       end;       OutString(100,0,StringFromSet(2,Acessrw.AccType),false);       switch (Acessrw.AccType) begin         case 1: setnr = kSetModules;         case 2: setnr = kSetUserRegisters;         case 3: setnr = 5; /* Setting */         case 4: setnr = 6; /* Report */         case 5: setnr = 7; /* Document */         case 6: setnr = 8; /* Export */         case 7: setnr = 9; /* Import */         case 8: setnr = 10; /* Maintenance */         case 9: setnr = 3; /* Special */       end;       OutString(150,0,StringFromStringSet(setnr,Acessrw.AccName),false);       OutString(380,0,StringFromSet(1,Acessrw.AccLevel),false);      EndFormat;      lastaccgr = Acessr.Code;    end;  end;  Gray_Divider(45,400);  return;end;function string 225 CompanyName(string compnr,record CompaniesBlock Compb)begin  string 255 res;  Integer i,rwcnt;  row CompaniesBlock Compbrw;    rwcnt = MatRowCnt(Compb);  for (i=0;i<rwcnt;i=i+1) begin    MatRowGet(Compb,i,Compbrw);    if (compnr==Compbrw.CompCode) then begin      res = Compbrw.CompName;      goto LCompanyName;    end;  end;LCompanyName:;    CompanyName = res;  return;end;procedure PrintUserVcData(record RcVc RepSpec,record CompaniesBlock Compb,vector Boolean vdonef)begin  record UserVc Userr;  Boolean found,testf;  record AccessVc Acessr;  record GlobalUserVc GUserr;  record CUVc CUr;  found = true;  Userr.Code = RepSpec.f1;  while (LoopMain(Userr,1,found)) begin    if (nonblank(RepSpec.f1)) then begin      if (Userr.Code!=RepSpec.f1) then begin found = false; end;    end;    if (found) then begin      testf = true;      switch (RepSpec.flags[0]) begin        case 1: if (Userr.Closed!=0) then begin testf = false; end;        case 2: if (Userr.Closed==0) then begin testf = false; end;      end;      if (testf) then begin        GUserr.Code = Userr.Code;//        testf = ReadFirstMain(GUserr,1,true)==false;        ReadFirstMain(GUserr,1,true);      end;      if (vdonef[Userr.Code]) then begin testf = false; end;      if (testf) then begin        StartFormat(15);        EndFormat;        CUr.Code = Userr.CustCode;            if (ReadFIrstMain(CUr,1,true)) then begin end;        StartFormat(15);         OutString(0,0,Userr.Code,false);         OutString(40,0,Userr.Name,false);         OutString(180,0,CUr.JobDesc,false);         OutString(300,0,CompanyName(CurrentCompany,Compb),false);         OutString(400,0,Userr.DateCreated,false);         switch (Userr.Closed) begin           case 0: OutString(455,0,USetStr(31207),false);           case 1: OutString(455,0,USetStr(31208),false);         end;               EndFormat;        StartFormat(15);         OutString(40,0,USetStr(31209) & ":",false);        EndFormat;        StartFormat(15);         OutString(40,0,USetStr(31210),false);         OutString(100,0,USetStr(31202),false);         OutString(300,0,USetStr(31211),false);         OutString(360,0,USetStr(31213) & ":   " & StringFromSet(375,Userr.StartLevel),false);        EndFormat;        Gray_Divider(40,1);         Acessr.Code = Userr.AccessGroup;        if (ReadFirstMain(Acessr,1,true)) then begin end;        StartFormat(15);         OutString(40,0,CurrentCompany,false);         OutString(100,0,CompanyName(CurrentCompany,Compb),false);         OutStringID(300,"DblAccessVc",Userr.AccessGroup,false,CurrentCompany);         OutString(360,0,Acessr.Comment,false);        EndFormat;        if (RepSpec.ArtMode!=0) then begin          PrintAccessGroupsDetails(Acessr.Code);        end;      end;    end;  end;  return;end;globalprocedure AccessControlRn(record RcVc RepSpec)begin  record AccessVc Acessr;  record CUVc CUr;  record GlobalUserVc GUserr;  row GlobalUserVc GUserrw;  Boolean found,testf;  Integer i,rwcnt,oldcomp;  record CompaniesBlock Compb;  row CompaniesBlock Compbrw;  vector Boolean vdonef;    BlockLoad(Compb);  StartReportJob(USetStr(31200));  EndHeader;  StartFormat(15);   OutString(0,0,USetStr(31201),false);   OutString(40,0,USetStr(31202),false);   OutString(180,0,USetStr(31203),false);   OutString(300,0,USetStr(31204),false);   OutString(400,0,USetStr(31212),false);   OutString(455,0,USetStr(31206),false);  EndFormat;  Gray_Divider(0,1);     found = true;  GUserr.Code = RepSpec.f1;  while (LoopMain(GUserr,1,found)) begin    if (nonblank(RepSpec.f1)) then begin      if (GUserr.Code!=RepSpec.f1) then begin found = false; end;    end;    if (found) then begin      testf = true;      switch (RepSpec.flags[0]) begin        case 1: if (GUserr.Closed!=0) then begin testf = false; end;        case 2: if (GUserr.Closed==0) then begin testf = false; end;      end;      if (testf) then begin        if (nonblank(RepSpec.FirstAcc)) then begin          testf = false;          rwcnt = MatRowCnt(GUserr);          for (i=0;i<rwcnt;i=i+1) begin            MatRowGet(GUserr,i,GUserrw);            if (nonblank(RepSpec.FirstAcc)) then begin              if (GUserrw.CompCode==RepSpec.FirstAcc) then begin                testf = true;                i = rwcnt;              end;            end;          end;          if (testf==false) then begin            if (GUserr.MainCRMCompany==RepSpec.FirstAcc) then begin testf = true; end;                   end;        end;      end;      if (testf) then begin        vdonef[GUserr.Code] = true;        StartFormat(15);        EndFormat;        CUr.Code = GUserr.CustCode;            if (ReadFIrstMain(CUr,1,true)) then begin end;        StartFormat(15);         OutString(0,0,GUserr.Code,false);         OutString(40,0,GUserr.Name,false);         OutString(180,0,CUr.JobDesc,false);         OutString(300,0,CompanyName(GUserr.MainCRMCompany,Compb),false);         OutString(400,0,GUserr.DateCreated,false);         switch (GUserr.Closed) begin           case 0: OutString(455,0,USetStr(31207),false);           case 1: OutString(455,0,USetStr(31208),false);         end;               EndFormat;        StartFormat(15);         OutString(40,0,USetStr(31209) & ":",false);        EndFormat;        StartFormat(15);         OutString(40,0,USetStr(31210),false);         OutString(100,0,USetStr(31202),false);         OutString(300,0,USetStr(31211),false);         OutString(360,0,USetStr(31213) & ":   " & StringFromSet(375,GUserr.StartLevel),false);        EndFormat;        Gray_Divider(40,1);         rwcnt = MatRowCnt(GUserr);        for (i=0;i<rwcnt;i=i+1) begin          MatRowGet(GUserr,i,GUserrw);          testf = true;          if (nonblank(RepSpec.FirstAcc)) then begin            if (GUserrw.CompCode!=RepSpec.FirstAcc) then begin testf = false; end;          end;          if (testf) then begin            Acessr.Code = GUserrw.AccessGroup;            if (ReadFirstMain(Acessr,1,true)) then begin end;            StartFormat(15);             OutString(40,0,GUserrw.CompCode,false);             OutString(100,0,GUserrw.CompName,false);             OutStringID(300,"DblAccessVc",GUserrw.AccessGroup,false,GUserrw.CompCode);             OutString(360,0,Acessr.Comment,false);            EndFormat;            if (RepSpec.ArtMode!=0) then begin              PrintAccessGroupsDetails(GUserrw.AccessGroup);            end;          end;        end;      end;    end;  end;  if (nonblank(RepSpec.FirstAcc)) then begin    oldcomp = CurrentCompany;    if (SetCompanyCode(RepSpec.FirstAcc,false)) then begin      PrintUserVcData(RepSpec,Compb,vdonef);    end;    ResetCompany(oldcomp);  end else begin     oldcomp = CurrentCompany;    rwcnt = MatRowCnt(Compb);    for (i=0;i<rwcnt;i=i+1) begin      MatRowGet(Compb,i,Compbrw);      if (i==0) or (i==CurrentCompany) then begin        if (SetCompany(i+1,false)) then begin          PrintUserVcData(RepSpec,Compb,vdonef);        end;      end;    end;    ResetCompany(oldcomp);  end;    EndJob;  return;end;