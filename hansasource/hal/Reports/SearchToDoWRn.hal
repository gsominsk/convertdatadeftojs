external procedure FillToDo(var record RcVc,var Area);
external procedure GetCurUser(var record UserVc);

procedure PrintActivities(record RcVc RepSpec,Area thp,var Integer cnt)
begin
  LongInt i,j,nritms;
  LongInt l,sernr,okflag,compno;
  LongInt off;
  Integer sz;
  string 255 tstr,comment;
  Date td;
  record ActVc Actr;
  record LetVc Letr;
  Boolean testf;
  Time pt;
  Integer hundreds;

  off = 0;
  nritms = GetLongFromArea(thp,off); off = off + 4;
  for (i=0;i<nritms;i=i+1) begin
    RecordNew(Letr);
    l = GetLongFromArea(thp,off); off = off + 4;
    sernr = GetLongFromArea(thp,off); off = off + 4;
    l = GetLongFromArea(thp,off); off = off + 4;
    l = GetLongFromArea(thp,off); off = off + 4;
    okflag = GetLongFromArea(thp,off); off = off + 4;
    l = GetLongFromArea(thp,off); off = off + 4;      
    tstr = GetStringFromArea(thp,off,1); off = off + 1;
    sz = asc(tstr); 
    comment = GetStringFromArea(thp,off,sz); off = off + sz;
    tstr = GetStringFromArea(thp,off,1); off = off + 1;
    sz = asc(tstr); 
    tstr = GetStringFromArea(thp,off,sz); off = off + sz;
    tstr = GetStringFromArea(thp,off,1); off = off + 1;
    sz = asc(tstr); 
    tstr = GetStringFromArea(thp,off,sz); off = off + sz;
    td.day = GetIntFromArea(thp,off); off = off + 2;
    td.month = GetIntFromArea(thp,off); off = off + 2;
    td.year = GetIntFromArea(thp,off); off = off + 2;
    off = off + 2;
    tstr = GetStringFromArea(thp,off,1); off = off + 1;
    sz = asc(tstr); 
    tstr = GetStringFromArea(thp,off,sz); off = off + sz;
    tstr = GetStringFromArea(thp,off,1); off = off + 1;
    sz = asc(tstr); 
    tstr = GetStringFromArea(thp,off,sz); off = off + sz;
    compno = GetLongFromArea(thp,off); off = off + 4;      
    tstr = GetStringFromArea(thp,off,1); off = off + 1;
    sz = asc(tstr); 
    tstr = GetStringFromArea(thp,off,sz); off = off + sz;

    pt.hour = GetByteFromArea(thp,off); off = off + 1;
    pt.minute = GetByteFromArea(thp,off); off = off + 1;
    pt.second = GetByteFromArea(thp,off); off = off + 1;
    hundreds = GetByteFromArea(thp,off); off = off + 1;
    l = GetLongFromArea(thp,off); off = off + 4;
    l = GetLongFromArea(thp,off); off = off + 4;

    for (j=0;j<l;j=j+1) begin
      tstr = GetStringFromArea(thp,off,1); off = off + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(thp,off,sz); off = off + sz;
      tstr = GetStringFromArea(thp,off,1); off = off + 1;
      sz = asc(tstr); 
      tstr = GetStringFromArea(thp,off,sz); off = off + sz;
      switch (RepSpec.ArtMode) begin
        case 1: AddToText(tstr,Letr);
        case 2: AddToText(tstr,Letr);
      end;
    end;
    testf = false;
    switch (RepSpec.ArtMode) begin
      case 0: AddToText(comment,Letr);
      case 2: AddToText(comment,Letr);
    end;
    if (StringInText(RepSpec.f6,Letr)) then begin
      testf = true;
    end;  
    if (testf) then begin
      StartFormat(15);
      OutStringID(0,"DblActCompVc",comment,false,compno & ":" & sernr);
      EndFormat;
      cnt = cnt + 1;
    end;  
  end;
  return;
end;

global
procedure SearchToDoWRn(record RcVc RepSpec)
begin
  string 255 tstr;
  integer cnt, rw;
  Area thp;
    
  cnt = 0;
  rw = 1;
  StartReportJob(USetStr(17080));
  if (nonblank(RepSpec.f6)) then begin
    switch (RepSpec.ArtMode) begin
      case 0: tstr = USetStr(17083) & RepSpec.f6;
      case 1: tstr = USetStr(17083) & RepSpec.f6;
    end;
    Header(rw,tstr,1);
    rw = rw + 1;  
  end;
  EndHeader;
  if (blank(RepSpec.f6)) then begin
    goto LSearchToDoWRn;
  end;

  SetRepCol(2,120);
  SetRepCol(3,380);
  StartFormat(15);
  OutString(0,0,USetStr(17082),false);
  EndFormat;
  Gray_Divider(0,1);

  SetAreaZeroSize(thp);
  FillToDo(RepSpec,thp);
  PrintActivities(RepSpec,thp,cnt);
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(17081),false);
  OutVal(100,0,cnt,M40Val,true);
  EndFormat;
LSearchToDoWRn:;
  EndJob;
  return;
end;

