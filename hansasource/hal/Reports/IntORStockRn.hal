external procedure HTOrder(LongInt, LongInt, var string);
external procedure HTArtSel(string,string, var string);
external procedure HTDetailLevel(Integer, var string);
external procedure HTIntOrdStatus(Integer,Integer,Integer,Integer, var string);
external function Boolean CheckPlanShip(string,string);

procedure IntORStockOverview(record RcVc RepSpec,record IntORVc IntORr,string frin,string toin,string frit,string toit,var val totsum)
BEGIN
  row IntORVc IntORrw;
  Integer i,rwcnt;
  Boolean testf;
  val ortot;
  record INVc INr;

  rwcnt = MatRowCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntORr,i,IntORrw);
    testf = true;
    if (nonblank(RepSpec.LastAcc)) then begin
      if (IntORrw.ArtCode<frin) then begin testf = false; end;
      if (IntORrw.ArtCode>toin) then begin testf = false; end;
    end;   
    if (nonblank(RepSpec.f3)) then begin
      INr.Code = IntORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
        if (IntORrw.ArtCode<frit) then begin testf = false; end;
        if (IntORrw.ArtCode>toit) then begin testf = false; end;
      end;
    end;   
    if (testf) then begin
      switch (RepSpec.flags[10]) begin
        case 0: ortot = ortot + (IntORrw.Quant - IntORrw.Shipd2)*IntORrw.Price;
        case 1: ortot = ortot + (IntORrw.Quant - IntORrw.Shipd2);
      end;
    end;
  end;
  StartFormat(15);
  OutLongInt(0,"DblIntORVc",IntORr.SerNr,false); 
  OutDate(80,0,IntORr.TransDate,false); 
  OutString(170,0,IntORr.OurUser,false); 
  OutVal(480,0,ortot,M4Val,true); 
  EndFormat;
  totsum = totsum + ortot;
  RETURN;
END;

procedure IntORStockDetailed(record RcVc RepSpec,record IntORVc IntORr,string frin,string toin,string frit,string toit,
                             var val totsum)
BEGIN
  row IntORVc IntORrw;
  Integer i,rwcnt;
  Boolean testf,firstf;
  val ortot,qty;
  record INVc INr;

  firstf = true;
  rwcnt = MatRowCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntORr,i,IntORrw);
    testf = true;
    if (nonblank(RepSpec.LastAcc)) then begin
      if (IntORrw.ArtCode<frin) then begin testf = false; end;
      if (IntORrw.ArtCode>toin) then begin testf = false; end;
    end;   
    if (nonblank(RepSpec.f3)) then begin
      INr.Code = IntORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
        if (INr.Group<frit) then begin testf = false; end;
        if (INr.Group>toit) then begin testf = false; end;
      end;
    end;   
    if (testf) then begin
      qty = (IntORrw.Quant - IntORrw.Shipd2);
      if (firstf) then begin
        StartFormat(15);
        OutLongInt(0,"DblIntORVc",IntORr.SerNr,false); 
        OutDate(80,0,IntORr.TransDate,false); 
        OutString(170,0,IntORr.OurUser,false); 
        EndFormat;
        if (RepSpec.flags[10]!=0) then begin
          StartFormat(15);
          OutString(280,0,USetStr(14611),true); 
          OutString(330,0,USetStr(14612),true); 
          OutString(380,0,USetStr(14613),true); 
          OutString(430,0,USetStr(14614),true); 
          OutString(480,0,USetStr(14615),true); 
          EndFormat;
        end;
        firstf = false;
      end;
      if (RepSpec.flags[10]==0) then begin
        StartFormat(15);
        OutString(15,0,IntORrw.ArtCode,false); 
        OutVal(135,0,qty,M4Qty,true); 
        OutString(140,0,IntORrw.Spec,false); 
        OutVal(420,0,IntORrw.Price,M4Val,true); 
        OutVal(480,0,qty*IntORrw.Price,M4Val,true); 
        EndFormat;
      end else begin
        StartFormat(15);
        OutString(15,0,IntORrw.ArtCode,false); 
        OutString(95,0,IntORrw.Spec,false); 
        OutVal(280,0,IntORrw.Quant,M4Qty,true); 
        OutVal(330,0,IntORrw.Shipd1,M4Qty,true); 
        OutVal(380,0,IntORrw.Sent,M4Qty,true); 
        OutVal(430,0,IntORrw.Shipd2,M4Qty,true); 
        OutVal(480,0,IntORrw.POOrd,M4Qty,true); 
        EndFormat;
      end;
      ortot = ortot + qty*IntORrw.Price;
    end;
  end;
  if (RepSpec.flags[10]==0) then begin
    Gray_Divider(360,1);
    StartFormat(15);
    OutVal(480,0,ortot,M4Val,true); 
    EndFormat;  
  end;
  Gray_Divider(0,1);
  totsum = totsum + ortot;
  RETURN;
END;

procedure IntORStockOrderRows(record RcVc RepSpec,record IntORVc IntORr,string frin,string toin,string frit,string toit,
                             var val totsum,var val totqty,var val totshipd1,var val totsent,var val totshipd2,var val totpoord)
BEGIN
  row IntORVc IntORrw;
  Integer i,rwcnt;
  Boolean testf;
  val ortot,qty;
  record INVc INr;

  rwcnt = MatRowCnt(IntORr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IntORr,i,IntORrw);
    testf = true;
    if (nonblank(frin)) then begin
      if (IntORrw.ArtCode<frin) then begin testf = false; end;
      if (IntORrw.ArtCode>toin) then begin testf = false; end;
    end;   
    if (nonblank(RepSpec.f3)) then begin
      INr.Code = IntORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
        if (INr.Group<frit) then begin testf = false; end;
        if (INr.Group>toit) then begin testf = false; end;
      end;
    end;   
    if (testf) then begin
      qty = IntORrw.Quant - IntORrw.Shipd2;
      if (RepSpec.flags[10]==0) then begin
        StartFormat(15);
        OutLongInt(0,"DblIntORVc",IntORr.SerNr,false); 
        OutDate(80,0,IntORr.TransDate,false); 
        OutString(150,0,IntORr.PlanShip,false); 
        OutString(220,0,IntORrw.ArtCode,false); 
        OutVal(360,0,qty,M4Qty,true); 
        OutVal(420,0,IntORrw.Price,M4Val,true); 
        OutVal(480,0,qty*IntORrw.Price,M4Val,true); 
        EndFormat;
      end else begin
        StartFormat(15);
        OutLongInt(0,"DblIntORVc",IntORr.SerNr,false); 
        OutDate(80,0,IntORr.TransDate,false); 
        OutString(170,0,IntORrw.ArtCode,false); 
        OutVal(280,0,IntORrw.Quant,M4Qty,true); 
        OutVal(330,0,IntORrw.Shipd1,M4Qty,true); 
        OutVal(380,0,IntORrw.Sent,M4Qty,true); 
        OutVal(430,0,IntORrw.Shipd2,M4Qty,true); 
        OutVal(480,0,IntORrw.POOrd,M4Qty,true); 
        EndFormat;
      end;
      ortot = ortot + qty*IntORrw.Price;      
      totqty = totqty + IntORrw.Quant;
      totshipd1 = totshipd1 + IntORrw.Shipd1;
      totsent = totsent + IntORrw.Sent;
      totshipd2 = totshipd2 + IntORrw.Shipd2;
      totpoord = totpoord + IntORrw.POOrd;
    end;
  end;
  totsum = totsum + ortot;
  RETURN;
END;

procedure PrintIntOrders(Integer sort,string curartcode,record RcVc RepSpec,LongInt fror,LongInt toor,string frin,string toin,string frit,string toit,
                         var val totsum,var val totqty,var val totshipd1,var val totsent,var val totshipd2,var val totpoord)
BEGIN
  record IntORVc IntORr;
  row IntORVc IntORrw;
  Integer i,rwcnt,keys;
  Boolean TrHs,testf;
  string 40 ckey;
  record INVc INr;  
  
  TrHs = true;
  IntORr.OSFlag = 1;
  IntORr.SerNr = fror;
  switch (RepSpec.flags[12]) begin
    case 0: 
      if (sort==0) then begin
        ckey = "OSFlag";
        keys = 2;
      end else begin
        ckey = "ArtCodeOSFlag:" & curartcode;
        keys = 3;
      end;    
    otherwise
      if (sort==0) then begin
        ckey = "SerNr";
        keys = 1;
      end else begin
        ckey = "ArtCode:" & curartcode;
        keys = 2;
      end;
  end;
  while (LoopKey(ckey,IntORr,keys,TrHs)) begin
    switch (RepSpec.flags[12]) begin
      case 0: 
        if (IntORr.OSFlag==0) then begin TrHs = false; end;
      otherwise
    end;
    if (nonblank(RepSpec.f1)) then begin
      if (IntORr.SerNr>toor) then begin TrHs = false; end;
    end;
    testf = true;
    switch (RepSpec.flags[12]) begin
      case 0: if (IntORr.Closed!=0) then begin testf = false; end;
      case 2: if (IntORr.Closed==0) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.AccStr)) then begin
      if (IntORr.Location!=RepSpec.AccStr) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.FirstAcc)) then begin
      if (IntORr.IntORClass!=RepSpec.FirstAcc) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.TransStr)) then begin
      if (IntORr.OurUser!=RepSpec.TransStr) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.ObjStr)) then begin
      if (IntORr.SalesGroup!=RepSpec.ObjStr) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.Stext)) then begin
      if (CheckPlanShip(RepSpec.Stext,IntORr.PlanShip)==false) then begin testf = false; end;
    end;
    if (TrHs and testf) then begin
      testf = false;
      rwcnt = MatRowCnt(IntORr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(IntORr,i,IntORrw);
        if (RepSpec.flags[2]!=0) then begin
          if (IntORrw.Shipd1==0) then begin testf = true; end;
        end;
        if (RepSpec.flags[3]!=0) then begin
          if (IntORrw.Shipd1<IntORrw.Quant) and (IntORrw.Shipd1<>0) then begin testf = true; end;
        end;
        if (RepSpec.flags[4]!=0) then begin
          if (IntORrw.Shipd2==0) then begin testf = true; end;
        end;
        if (RepSpec.flags[5]!=0) then begin
          if (IntORrw.Shipd2<IntORrw.Quant) and (IntORrw.Shipd2>0) then begin testf = true; end;
        end;
        if (testf) then begin
          i = rwcnt;
        end;
      end;
      if (testf) then begin
        if (nonblank(RepSpec.LastAcc)) or (nonblank(RepSpec.f3)) then begin
          testf = false;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(IntORr,i,IntORrw);     
            if (nonblank(RepSpec.LastAcc)) then begin
              if (IntORrw.ArtCode>=frin) and (IntORrw.ArtCode<=toin) then begin testf = true; end;
            end;   
            if (nonblank(RepSpec.f3)) then begin
              INr.Code = IntORrw.ArtCode;
              if (ReadFirstMain(INr,1,true)) then begin
                if (INr.Group>=frit) and (INr.Group<=toit) then begin testf = true; end;
              end;
            end;   
            if (testf) then begin
              i = rwcnt;
            end;            
          end;          
        end;
      end;
      if (testf) then begin        
        switch (RepSpec.ArtMode) begin
          case 0: IntORStockOverview(RepSpec,IntORr,frin,toin,frit,toit,totsum);
          case 1: IntORStockDetailed(RepSpec,IntORr,frin,toin,frit,toit,totsum);
          case 2: IntORStockOrderRows(RepSpec,IntORr,frin,toin,frit,toit,totsum,totqty,totshipd1,totsent,totshipd2,totpoord);
        end;
      end;
    end;
  end;
  RETURN;
END;
  
global
procedure IntORStockRn(record RcVc RepSpec)
BEGIN
  LongInt fror,toor;
  Date frplandel,toplandel;
  string 20 frin,toin;
  string 20 frit,toit;
  val totsum,totqty,totshipd1,totsent,totshipd2,totpoord;
  val insum,inqty,inshipd1,insent,inshipd2,inpoord;
  Integer rw;
  string 255 tstr;
  Boolean TrHs;
  record INVc INr;
    
  fror = FirstInRange(RepSpec.f1,10);
  toor = LastInRange(RepSpec.f1,10);
  frplandel = StringToDate(FirstInRange(RepSpec.Stext,10));
  toplandel = StringToDate(LastInRange(RepSpec.Stext,10));
  frin = FirstInRange(RepSpec.LastAcc,10);
  toin = LastInRange(RepSpec.LastAcc,10);
  frit = FirstInRange(RepSpec.f3,10);
  toit = LastInRange(RepSpec.f3,10);
  StartReportJob(USetStr(14605));
    rw = 1; 
    HTIntOrdStatus(RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],RepSpec.flags[5],tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
    if (RepSpec.flags[10]==0) then begin
      tstr = USetStr(1177);
    end else  begin
      if (RepSpec.flags[10]==1) then begin
        tstr = USetStr(1176);
      end;  
    end;    
    Header(rw,tstr,0);
    if (RepSpec.ArtMode==2) then begin
      tstr = USetStr(6658);
    end else begin
      HTDetailLevel(RepSpec.ArtMode,tstr);
    end;  
    Header(rw,tstr,1);
    rw = rw + 1;
    if (nonblank(RepSpec.LastAcc)) then begin
      HTArtSel(RepSpec.LastAcc,RepSpec.f3,tstr);
      Header(rw,tstr,1);
      rw = rw + 1;
    end;    
    if (nonblank(RepSpec.f1)) then begin
      HTOrder(fror,toor,tstr);
      Header(rw,tstr,1);
      rw = rw + 1;
    end;    
    if (nonblank(RepSpec.FirstAcc)) then begin
      tstr = USetStr(1825);
      tstr = tstr & RepSpec.FirstAcc;
      Header(rw,tstr,1);
      rw = rw + 1;
    end;    
    if (nonblank(RepSpec.AccStr)) then begin
      tstr = USetStr(2768);
      tstr = tstr & ": " & RepSpec.AccStr;
      Header(rw,tstr,1);
      rw = rw + 1;
    end;    
  EndHeader;
  switch (RepSpec.ArtMode) begin
    case 0:
      StartFormat(15);
      OutString(0,0,USetStr(14606),false); 
      OutString(80,0,USetStr(14607),false); 
      OutString(170,0,USetStr(14608),false); 
      OutString(480,0,USetStr(14609),true); 
      EndFormat;
    case 1:
      StartFormat(15);
      OutString(0,0,USetStr(14606),false); 
      OutString(80,0,USetStr(14607),false); 
      OutString(170,0,USetStr(14608),false); 
      if (RepSpec.flags[10]==0) then begin
        OutString(480,0,USetStr(14609),true); 
      end;
      EndFormat;
    case 2:
      if (RepSpec.flags[10]==0) then begin
        StartFormat(15);
        OutString(0,0,USetStr(14606),false); 
        OutString(80,0,USetStr(14607),false); 
        OutString(150,0,USetStr(14616),false); 
        OutString(220,0,USetStr(14610),false); 
        OutString(360,0,USetStr(14617),true); 
        OutString(420,0,USetStr(14618),true); 
        OutString(480,0,USetStr(14609),true); 
        EndFormat;
      end else begin
        StartFormat(15);
        OutString(0,0,USetStr(14606),false); 
        OutString(80,0,USetStr(14607),false); 
        OutString(170,0,USetStr(14610),false); 
        OutString(280,0,USetStr(14611),true); 
        OutString(330,0,USetStr(14612),true); 
        OutString(380,0,USetStr(14613),true); 
        OutString(430,0,USetStr(14614),true); 
        OutString(480,0,USetStr(14615),true); 
        EndFormat;
      end;
  end;
  Gray_Divider(0,1);
  if (RepSpec.flags[11]==1) and (RepSpec.ArtMode==2) then begin
    TrHs = true;
    while (LoopMain(INr,1,TrHs)) begin
      insum = blankval;
      inqty = blankval;
      inshipd1 = blankval;
      insent = blankval;
      inshipd2 = blankval;
      inpoord = blankval;
      PrintIntOrders(1,INr.Code,RepSpec,fror,toor,INr.Code,INr.Code,frit,toit,insum,inqty,inshipd1,insent,inshipd2,inpoord);
      if ((insum!=0) or (inqty!=0) or (inshipd1!=0) or (insent!=0) or (inshipd2!=0) or (inpoord!=0)) then begin
        if (insum==0) then begin insum = blankval; end;
        if (inqty==0) then begin inqty = blankval; end;
        if (inshipd1==0) then begin inshipd1 = blankval; end;
        if (insent==0) then begin insent = blankval; end;
        if (inshipd2==0) then begin inshipd2 = blankval; end;
        if (inpoord==0) then begin inpoord = blankval; end;
        Gray_Divider(200,1);
        if (RepSpec.flags[10]==0) then begin
          StartFormat(15);
          OutString(150,0,USetStr(14619),false);
          OutVal(360,0,inqty,M4Qty,true); 
          OutVal(480,0,insum,M4Val,true); 
          EndFormat;
        end else begin
          StartFormat(15);
          OutString(150,0,USetStr(14619),false);
          OutVal(280,0,inqty,M4Qty,true); 
          OutVal(330,0,inshipd1,M4Qty,true); 
          OutVal(380,0,insent,M4Qty,true); 
          OutVal(430,0,inshipd2,M4Qty,true); 
          OutVal(480,0,inpoord,M4Qty,true); 
          EndFormat;
        end;
        Gray_Divider(0,1);
      end;
      totsum = totsum + insum;
      totqty = totqty + inqty;
      totshipd1 = totshipd1 + inshipd1;
      totsent = totsent + insent;
      totshipd2 = totshipd2 + inshipd2;
      totpoord = totpoord + inpoord;
    end;
  end else begin
    PrintIntOrders(0,"",RepSpec,fror,toor,frin,toin,frit,toit,totsum,totqty,totshipd1,totsent,totshipd2,totpoord);
  end;  
  if (totsum==0) then begin totsum = blankval; end;
  if (totqty==0) then begin totqty = blankval; end;
  if (totshipd1==0) then begin totshipd1 = blankval; end;
  if (totsent==0) then begin totsent = blankval; end;
  if (totshipd2==0) then begin totshipd2 = blankval; end;
  if (totpoord==0) then begin totpoord = blankval; end;
  switch (RepSpec.ArtMode) begin
    case 0: 
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(150,0,USetStr(14620),false);
      OutVal(480,0,totsum,M4Val,true); 
      EndFormat;
    case 1: 
      StartFormat(15);
      OutString(150,0,USetStr(14620),false);
      OutVal(480,0,totsum,M4Val,true); 
      EndFormat;
    case 2: 
      if (RepSpec.flags[10]==0) then begin
      end else begin
        Gray_Divider(0,1);
        StartFormat(15);
        OutString(150,0,USetStr(14620),false);
        OutVal(280,0,totqty,M4Qty,true); 
        OutVal(330,0,totshipd1,M4Qty,true); 
        OutVal(380,0,totsent,M4Qty,true); 
        OutVal(430,0,totshipd2,M4Qty,true); 
        OutVal(480,0,totpoord,M4Qty,true); 
        EndFormat;
      end;
      if (RepSpec.flags[11]==1) and (RepSpec.ArtMode==2) then begin
      end else begin
        Gray_Divider(0,1);
      end;
      StartFormat(15);
      OutVal(480,0,totsum,M4Val,true); 
      EndFormat;
  end;
  EndJob;
  RETURN;
END;