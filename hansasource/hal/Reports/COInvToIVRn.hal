external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean SetInSet2(string,string);
external procedure ContractFindReceiptAmount(record IVVc,Date,var val);
external procedure HT2Per(Date, Date , var string);

procedure COInvToIVPrintCustInv(record RcVc RepSpec,string CustCode,string CustName)
BEGIN
  Boolean TrHs,testf,firstf;
  record COIVVc COIVr;
  record IVVc IVr;
  row IVVc IVrw;
  Integer i,rwcnt;
  val t,paid;

  firstf = true;
  IVr.CustCode = CustCode;
  TrHs = true;
  while (LoopKey("CustCode",IVr,1,TrHs)) begin
    if (IVr.CustCode<>CustCode) then begin TrHs = false; end;
    testf = true;
    COIVr.Type = 0;
    COIVr.IVNr = IVr.SerNr;
    if (ReadFirstKey("IVNr",COIVr,2,true)==false) then begin 
      testf = false;
    end;
    if (blank(IVr.OrgCust)) then begin
      testf = false;
    end;       
    if (DateInRange(IVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      testf = false;
    end;
    if (TrHs and testf) then begin
      ContractFindReceiptAmount(IVr,RepSpec.sEndDate,paid);
      if (firstf) then begin
        Gray_Divider(0,1);          
        StartFormat(15);
         OutString(0,"DblCUVc",CustCode,false);
         OutString(80,0,CustName,false);
        EndFormat;
        firstf = false;
      end;  
      
      StartFormat(15);
       OutLongInt(50,"DblCustPS2",IVr.SerNr,false);
       if (IVr.OKFlag==0) then begin
         OutString(200,0,USetStr(2366),false);
       end;  
       if (IVr.Invalid!=0) then begin
         OutString(200,0,USetStr(1282),false);
       end;
       OutVal(360,0,IVr.Sum4,M4Val,true);
       OutVal(420,0,paid,M4Val,true);
       OutVal(480,0,IVr.Sum4-paid,M4Val,true);
      EndFormat;
      if (RepSpec.ArtMode==1) then begin
        rwcnt = MatRowCnt(IVr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(IVr,i,IVrw);
          if (IVrw.stp==kInvoiceRowTypeNormal) or (IVrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
            if (nonblank(IVrw.ArtCode)) then begin 
              StartFormat(15);
               OutString(60,0,IVrw.Spec,false);
               OutVal(300,0,IVrw.Quant,M4Qty,true);
               OutVal(360,0,IVrw.Price,M4Val,true);
               OutVal(420,0,IVrw.vRebate,M4Val,true);
               OutVal(480,0,IVrw.Sum,M4Val,true);
              EndFormat;          
            end;
          end;  
        end;
        Gray_Divider(60,1);
      end;
    end;  
  end;
  RETURN;    
END;


global
procedure COInvToIVRn(record RcVc RepSpec)
BEGIN
  record CUVc CUr;
  Boolean TrHs,printcustf,printivf,testf;
  val paid;
  LongInt frco,toco,lastconr;
  string 20 frcu,tocu,lastinvto;
  Integer rw, keys;
  string 60 keystr;
  string 255 tstr;
  
  rw = 1;
  
  StartReportJob(USetStr(9600));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (HasCategories) then begin
    HTCustCat(RepSpec.FirstAcc,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.Stext,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  EndHeader;
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  if (RepSpec.ArtMode==0) then begin
    StartFormat(15);
     OutString(0,0,USetStr(9601),false);
     OutString(50,0,USetStr(9602),false);
     OutString(360,0,USetStr(9603),true);
     OutString(420,0,USetStr(9604),true);
     OutString(480,0,USetStr(9605),true);
    EndFormat;     
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
     OutString(0,0,USetStr(9606),false);
     OutString(60,0,USetStr(9602),false);
     OutString(90,0,USetStr(9607),false);
     OutString(140,0,USetStr(9608),false);
     OutString(480,0,USetStr(9609),true);
    EndFormat;     
  end;

  TrHs = true;
  keys = 1;
  keystr = "Code";
  if (nonblank(RepSpec.FirstAcc)) then begin
    CUr.CustCat = RepSpec.FirstAcc;
    keys = 2;
    keystr = "Group";
  end;
  CUr.Code = frcu;
  while (LoopKey(keystr,CUr,keys,TrHs)) begin
    testf = true;
    if (nonblank(RepSpec.FirstAcc)) then begin
      if (CUr.CustCat>RepSpec.FirstAcc) then begin TrHs = false; end;
    end; 
    if (nonblank(RepSpec.f1)) then begin
      if (CUr.Code<frcu) then begin testf = false; end;
      if (CUr.Code>tocu) then begin testf = false; end;
    end;
    if (testf) then begin
      if (nonblank(RepSpec.Stext)) then begin
        if (SetInSet2(RepSpec.Stext,CUr.Classification)==false) then begin
          testf = false;
        end;
      end;
    end;
    if (TrHs and testf) then begin 
      COInvToIVPrintCustInv(RepSpec,CUr.Code,CUr.Name);
    end;  
  end;  
  Gray_Divider(0,1);
  EndJob;
  RETURN;
END;
