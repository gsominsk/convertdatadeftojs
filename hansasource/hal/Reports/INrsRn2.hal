external function Boolean HasMultiLocations();
external function roundmode SetRoundModeD(Integer);
external procedure HT2Per(Date, Date , var string);
external procedure HTArtSel(string,string, var string);
external procedure HTDepartments(string,string,var string);
external procedure HTItemHistType(Integer,Integer,Integer,Integer,Integer,Integer,var string);
external procedure HTItemHistType2(Integer,Integer,Integer,Integer,Integer,var string);

procedure PrintDispatchNumber(string FileName,LongInt TransNr,LongInt rownr,Integer pos)
begin
  record PUVc PUr;
  row PUVc PUrw;

  switch (filename) begin
    case "PUVc":
      if (rownr>=0) then begin
        PUr.SerNr = transnr;
        if (ReadFirstMain(PUr,1,true)) then begin
          MatRowGet(PUr,rownr,PUrw);
          OutString(pos,0,PUrw.DispatchNumber,false)
        end;
      end;
  end;
  return;
end;

global
procedure PrintCustName(string filename,string transnr,integer colpos)
BEGIN 
  record IVVc IVr;
  record SHVc SHr;
  record PUVc PUr;
  record RetVc Retr;
  record RetPUVc RetPUr;
  record WSVc WSr;
  record ProdVc Prodr;
  integer l;
  
  l = 11;
  switch (filename) begin
    case "IVVc":
      IVr.SerNr = transnr;
      if (ReadFirstMain(IVr,1,true)) then begin
        OutStringID(colpos,"DblCUVc",Left(IVr.Addr0,l),false,IVr.CustCode);  
      end;
    case "SHVc":
      SHr.SerNr = transnr;
      if (ReadFirstMain(SHr,1,true)) then begin
        OutStringID(colpos,"DblCUVc",Left(SHr.Addr0,l),false,SHr.CustCode);  
      end;
    case "PUVc":
      PUr.SerNr = transnr;
      if (ReadFirstMain(PUr,1,true)) then begin
        OutStringID(colpos,"DblCUVc",Left(PUr.VEName,l),false,PUr.VECode);  
      end;
    case "RetVc":
      Retr.SerNr = transnr;
      if (ReadFirstMain(Retr,1,true)) then begin
        OutStringID(colpos,"DblCUVc",Left(Retr.CustName,l),false,Retr.CustCode);  
      end;
    case "RetPUVc":
      RetPUr.SerNr = transnr;
      if (ReadFirstMain(RetPUr,1,true)) then begin
        OutStringID(colpos,"DblCUVc",Left(RetPUr.VEName,l),false,RetPUr.VECode);  
      end;   
    case "WSVc":
      WSr.SerNr = transnr;
      if (ReadFirstMain(WSr,1,true)) then begin
        OutString(colpos,0,Left(WSr.Addr0,l),false);  
      end;
    case "ProdVc":
      Prodr.SerNr = transnr;
      if (ReadFirstMain(Prodr,1,true)) then begin
        OutString(colpos,0,Left(Prodr.RecName,l),false);  
      end;
    otherwise
      OutString(colpos,0,"",false);
  end;
  RETURN;
END;


global
procedure PrintItemHistHeader(record RcVc RepSpec)
begin
  switch (RepSpec.Media) begin
    case mtFile: goto LLPrintItemHistHeaderExcel;
    case mtExcel:
LLPrintItemHistHeaderExcel:;
      if (RepSpec.flags[9]==1) then begin
        StartFormat(15);
        OutString(0,0,USetStr(5022),false);
        OutString(0,0,USetStr(5023),false);
        OutString(0,0,USetStr(5271),false);
        OutString(0,0,USetStr(5007),false);
        OutString(0,0,USetStr(5006),false);
        OutString(0,0,USetStr(3080),false);
        OutString(0,0,USetStr(9660)&"/"&USetStr(10476),false);
        OutString(0,0,USetStr(5010),false);
        OutString(0,0,USetStr(5009),false);
        OutString(0,0,USetStr(5011),false);
        EndFormat;
      end;
    otherwise
      if (RepSpec.flags[9]==1) then begin
        if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==3)) then begin
          StartFormat(15);
          OutString(0,0,USetStr(5007),false);
          OutString(60,0,USetStr(5006),false);    
          OutString(115,0,USetStr(3080),false);   
          if (RepSpec.flags[22]==1) then begin
            OutString(170,0,USetStr(3084),false);   
          end;
          if (RepSpec.flags[21]==1) then begin
            OutString(210,0,USetStr(9660)&"/"&USetStr(10476),false);
          end;   
          if (RepSpec.ArtMode==3) then begin
            OutString(300,0,USetStr(4997),false);
          end else begin
            if (HasMultiLocations) then begin
              OutString(300,0,USetStr(5010),false);
            end;
          end;
          if (RepSpec.flags[12]==1) then begin OutStringAdjustBiDi(375,0,USetStr(7593),true,M4Val,420); end;    
          if (RepSpec.flags[12]==2) then begin OutStringAdjustBiDi(375,0,USetStr(7594),true,M4Val,420); end;     
          OutStringAdjustBiDi(410,0,USetStr(5009),true,M4Val,450);
          OutStringAdjustBiDi(480,0,USetStr(5011),true,M4Val,520);
          EndFormat;
        end;
        if ((RepSpec.ArtMode==1) or (RepSpec.ArtMode==2)) then begin
          StartFormat(15);
          OutString(0,0,USetStr(5007),false);
          OutString(60,0,USetStr(5006),false);       
          if (RepSpec.flags[22]==1) then begin
            OutString(115,0,USetStr(3080),false); 
            OutString(150,0,USetStr(3084),false);   
          end else begin
            OutString(135,0,USetStr(3080),false); 
          end;
          if (RepSpec.flags[21]==1) then begin   
            OutString(185,0,USetStr(9660)&"/"&USetStr(10476),false);           
          end;
          if (HasMultiLocations) then begin
            OutString(260,0,USetStr(5010),false);      
          end;
          OutStringAdjustBiDi(340,0,USetStr(5009),true,M4Val,350);        
          if (UserCanAction("ViewCostPrice",true)) then begin
            OutStringAdjustBiDi(400,0,USetStr(5013),true,M4Val,420);       
            OutStringAdjustBiDi(480,0,USetStr(5015),true,M4Val,500);
          end;
          EndFormat;
        end;
      end else begin
        StartFormat(15);
        OutString(0,0,USetStr(5052),false);
        OutString(100,0,USetStr(2763),false);
        OutStringAdjust(260,0,USetStr(3244),true,M4Val);
        OutStringAdjustBiDi(320,0,USetStr(5027),true,M4Val,360);
        OutStringAdjustBiDi(400,0,USetStr(5028),true,M4Val,440);
        OutStringAdjustBiDi(480,0,USetStr(5015),true,M4Val,520);
        EndFormat;
      end;
  end;
  return;
end;

global
procedure PrintItemHistHeader_PerLocation(record RcVc RepSpec)
begin
  switch (RepSpec.Media) begin
    case mtFile:
    case mtExcel:
    otherwise
      if (RepSpec.flags[9]==1) then begin
        switch (RepSpec.ArtMode) begin
          case 0:
            StartFormat(15);
            OutString(0,0,USetStr(5007),false);
            OutString(60,0,USetStr(5006),false);          
            OutString(115,0,USetStr(3080),false);          
            OutString(215,0,USetStr(9660)&"/"&USetStr(10476),false);               
            OutString(480,0,USetStr(5009),true);
            EndFormat;
          case 1:
            StartFormat(15);
            OutString(0,0,USetStr(5007),false);
            OutString(60,0,USetStr(5006),false);           
            OutString(140,0,USetStr(3080),false);          
            OutString(200,0,USetStr(9660)&"/"&USetStr(10476),false);              
            OutString(300,0,USetStr(5009),true);
            OutString(380,0,USetStr(5013),true);
            OutString(480,0,USetStr(5015),true);
            EndFormat;
        end;
      end else begin
        switch (RepSpec.ArtMode) begin
          case 0:
            StartFormat(15);
            OutString(0,0,USetStr(5052),false);
            OutString(100,0,USetStr(2763),false);
            OutString(260,0,USetStr(3244),true);
            OutString(320,0,USetStr(5027),true);
            OutString(400,0,USetStr(5028),true);
            OutString(480,0,USetStr(5015),true);
            EndFormat;
          case 1:
            StartFormat(15);
            OutString(0,0,USetStr(5052),false);
            OutString(100,0,USetStr(2763),false);
            OutString(260,0,USetStr(3244),true);
            OutString(320,0,USetStr(5027),true);
            OutString(400,0,USetStr(5028),true);
            OutString(480,0,USetStr(5015),true);
            EndFormat;
        end;
      end;
  end;
  return;
end;

global
procedure ItemHistHeader(record RcVc RepSpec)
BEGIN
  string 255 tstr;
  Integer rw ;
  
  StartReportJob(USetStr(5001));  
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.flags[11]!=0) then begin
    Header(rw,USetStr(11690),0);
  end;
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.AccStr)) then begin
    HTDepartments(RepSpec.AccStr,"",tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTItemHistType(RepSpec.flags[1],RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[8],RepSpec.flags[18],RepSpec.flags[5],tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if ((RepSpec.flags[4]!=0) or (RepSpec.flags[6]!=0) or (RepSpec.flags[7]!=0) or (RepSpec.flags[17]!=0) or (RepSpec.flags[18]!=0) or (RepSpec.flags[19]!=0)) then begin
    HTItemHistType2(RepSpec.flags[6],RepSpec.flags[7],RepSpec.flags[17],RepSpec.flags[4],RepSpec.flags[19],tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (RepSpec.flags[13]!=0) then begin
    Header(rw,USetStr(11691),0);
  end;  
  if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==3)) then begin
    tstr = USetStr(6656);
  end else begin
    tstr = USetStr(6655);
  end;  
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.flags[10]==0) then begin
    Header(rw,USetStr(11688),0);
  end else begin
    Header(rw,USetStr(11689),0);
  end;
  if (nonblank(RepSpec.f6)) then begin
    tstr = USetStr(5010);
    tstr = tstr & ": ";
    tstr = tstr & RepSpec.f6;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (RepSpec.flags[14]!=0) then begin
    Header(rw,USetStr(11692),1);
    rw = rw + 1;
  end;  
  if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==3)) then begin
    if (RepSpec.flags[9]>0) then begin
      Header(rw,USetStr(11693+RepSpec.flags[12]),1);
      rw = rw + 1;
    end;
  end else begin
    Header(rw,USetStr(11693),1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(11696) & ": " & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;  
  if (RepSpec.flags[15]!=0) then begin
    Header(rw,USetStr(11699),1);
    rw = rw + 1;
  end;  
  EndHeader;
  if (RepSpec.flags[15]==0) then begin
    PrintItemHistHeader(RepSpec);
  end else begin
    PrintItemHistHeader_PerLocation(RepSpec);
  end;
  RETURN;
END;

global
procedure ItemHistItemHeader_PerLocation(record RcVc RepSpec,string item,string name,string unittext,val fwdqty,
                         val fwdtotcp,val fwdqty2,var Boolean itemheaderf)
begin
  if (itemheaderf==false) then begin
    switch (RepSpec.Media) begin
      case mtFile:
      case mtExcel:
      otherwise
        if (RepSpec.flags[9]!=0) then begin
          StartFormat(15);
          OutString(15,0,item,false);
          OutString(100,0,name,false);
          OutString(300,0,unittext,false);
          EndFormat;
          Gray_Divider(0,1);
          StartFormat(15);
          switch (RepSpec.ArtMode) begin
            case 0:
              OutString(200,0,USetStr(2492),false);
              OutVal(380,0,fwdqty,M4UVal,true);   
              OutVal(480,0,fwdtotcp,M4UVal,true);
            case 1:
              OutString(200,0,USetStr(2492),false);
              OutVal(300,0,fwdqty,M4UVal,true);
              OutVal(380,0,Round(fwdtotcp/fwdqty,SetRoundModeD(5)),M45Val,true);
              OutVal(480,0,fwdtotcp,M45Val,true);
          end;
          EndFormat;
        end;
    end; 
    itemheaderf = true;
  end;
  return;
end;

global
procedure ItemHistItemHeader(record RcVc RepSpec,string item,string name,string unittext,val fwdqty,
                             val fwdtotcp,val fwdqty2,var val bal,var Boolean itemheaderf)
begin
  if (itemheaderf==false) then begin
    switch (RepSpec.ArtMode) begin
      case 0: bal = bal + fwdqty;
      case 1: bal = fwdtotcp;
      case 3: bal = bal + fwdqty;
    end;
    switch (RepSpec.Media) begin
      case mtFile:
        goto LItemHistItemHeader;
      case mtExcel:
LItemHistItemHeader:;
      if (RepSpec.ArtMode!=0) then begin
        StartFormat(15);
        OutString(0,0,item,false);
        OutString(100,0,name,false);
        OutString(300,0,unittext,false);
        OutString(300,0,"",false);
        OutString(100,0,USetStr(2492),false);
        OutString(300,0,"",false);
        OutString(300,0,"",false);
        switch (RepSpec.ArtMode) begin
          case 0:
            if (RepSpec.flags[12]!=0) then begin
              OutVal(380,0,fwdqty2,M45Val,true);
            end else begin
              OutString(300,0,"",false);               
            end;
            OutVal(410,0,fwdqty,M4UVal,true);
            OutVal(480,0,bal,M45Val,true);
          case 1:
            if (RepSpec.flags[12]!=0) then begin
              OutVal(380,0,fwdqty2,M45Val,true);
            end else begin
              OutString(300,0,"",false);              
            end;
            OutVal(300,0,fwdqty,M4UVal,true);
            OutVal(480,0,bal,M4Val,true);
          case 3:
            if (RepSpec.flags[12]!=0) then begin
              OutVal(380,0,fwdqty2,M45Val,true);
            end else begin
              OutString(300,0,"",false);               
            end;
            OutVal(300,0,fwdqty,M4UVal,true);
            OutVal(480,0,bal,M45Val,true);
        end;
        EndFormat;
      end;
      otherwise
        if (RepSpec.flags[9]!=0) then begin
          StartFormat(15);
          OutString(0,0,item,false);
          OutString(60,0,name,false);         
          OutString(300,0,unittext,false);
          EndFormat;
          Gray_Divider(0,1);
          StartFormat(15);
          switch (RepSpec.ArtMode) begin
            case 0:
              OutString(60,0,USetStr(2492),false);        
              OutString(120,0,RepSpec.TransStr,false);
              OutValBiDi(375,0,fwdqty2,M45Val,true,420);           
              OutValBiDi(410,0,fwdqty,M45Val,true,450);
              OutValBiDi(480,0,bal,M45Val,true,520);
            case 1:
              OutString(60,0,USetStr(2492),false);           
              OutString(260,0,RepSpec.TransStr,false);     
              OutValBiDi(340,0,fwdqty,M45Val,true,340);            
              if (UserCanAction("ViewCostPrice",true)) then begin
                OutValBiDi(400,0,Round(fwdtotcp/fwdqty,SetRoundModeD(5)),M45Val,true,420);   
                OutValBiDi(480,0,fwdtotcp,M45Val,true,500);
              end else begin
                OutString(300,0,"",false);
                OutString(300,0,"",false);   
              end;
            case 3:
              OutString(60,0,USetStr(2492),false);        
              OutString(120,0,RepSpec.TransStr,false);
              OutValBiDi(375,0,fwdqty2,M45Val,true,420);           
              OutValBiDi(410,0,fwdqty,M45Val,true,450);
              OutValBiDi(480,0,bal,M45Val,true,520);
          end;
          EndFormat;
        end;  
    end;
    itemheaderf = true;
  end;
  return;
end;

global
procedure PrintItemHist(record RcVc RepSpec,record INVc INr,record ItemHistVc IHr,record MainStockBlock MSb,Boolean outf,val bal)
begin
  Integer strid;
  string 50 dblstr;
  Boolean printf;
  record ItemHistVc sourceIHr;
  record PUVc PUr;
  row PUVc PUrw;
  record PIVc PIr;
  string 255 transnr;
  record IVVc IVr;

  printf = true;
  transnr = IHr.TransNr;
  switch (IHr.FileName) begin
    case "IVVc":  
      if (outf) then begin
        strid = 5004;
        if (IsStandardProduct and HasLocalization("POL")) then begin
          IVr.SerNr = IHr.TransNr;
          if (ReadFirstMain(IVr,1,true)) then begin end;
          if (nonblank(IVr.OfficialSerNr)) then begin
            transnr = IVr.OfficialSerNr;
          end;
        end;
      end else begin                
        IVr.SerNr = IHr.TransNr;
        if (ReadFirstMain(IVr,1,true)) then begin end;
        if (IVr.Invalid!=0) then begin
          strid = 5004;
        end else begin
          strid = 5005;
        end;
        if (IsStandardProduct and HasLocalization("POL")) then begin
          if (nonblank(IVr.OfficialSerNr)) then begin
            transnr = IVr.OfficialSerNr;
          end;
        end;
      end;
      dblstr = "DblIVVc";
    case "IVCashVc":
      if (outf) then begin
        strid = 11675;
      end else begin
        strid = 11675;
      end;
      dblstr = "DblIVCashVc";
    case "INTransferVc": strid = 5040; dblstr = "DblINTransfer";
    case "ProdVc": strid = 5016; dblstr = "DblProd";
    case "ProdOperationVc": strid = 11674; dblstr = "DblProdOperationVc";
    case "PUVc": strid = 5002; dblstr = "DblPU";
    case "RetPUVc": strid = 5058; dblstr = "DblRetPU";
    case "RetVc": strid = 5029; dblstr = "DblRet";
    case "SDVc": strid = 5020; dblstr = "DblSD";
    case "SRVc": strid = 11676; dblstr = "DblSRVc";
    case "SHVc": strid = 5003; dblstr = "DblSHVc";
    case "StockMovVc": strid = 5012; dblstr = "DblStockMov";
    case "WSVc": strid = 7650; dblstr = "DblWS";
    case "Fut2ProdOrderInVc": begin
      record ProdOrderVc PrOr;

      PrOr.SerNr = IHr.TransNr;
      if (ReadFirstMain(PrOr,1,true)) then begin end;
      if (PrOr.StatusFlag<3) then begin 
        strid = 5057; 
      end else begin
        strid = 5016; 
      end;
      dblstr = "DblProdOrder";
      end;
    case "Fut2ProdOrderOutVc": begin
      record ProdOrderVc PrOr;

      PrOr.SerNr = IHr.TransNr;
      if (ReadFirstMain(PrOr,1,true)) then begin end;
      if (PrOr.StatusFlag<3) then begin 
        strid = 5057; 
      end else begin
        strid = 5016; 
      end;
      dblstr = "DblProdOrder";
      end;
    case "Fut2ProdInVc": begin
      record ProdVc Prodr;

      Prodr.SerNr = IHr.TransNr;
      if (ReadFirstMain(Prodr,1,true)) then begin end;
      if (Prodr.PRStatusFlag<3) then begin 
        strid = 5037; 
      end else begin
        strid = 5016; 
      end;
      dblstr = "DblProd";
      end;
    case "Fut2ProdOutVc": begin
      record ProdVc Prodr;

      Prodr.SerNr = IHr.TransNr;
      if (ReadFirstMain(Prodr,1,true)) then begin end;
      if (Prodr.PRStatusFlag<3) then begin 
        strid = 5037; 
      end else begin
        strid = 5016; 
      end;
      dblstr = "DblProd";
      end;
    case "Fut1POVc": begin
        record POVc POr;

        POr.SerNr = IHr.TransNr;
        if (ReadFirstMain(POr,1,true)) then begin end;
        if (POr.OKFlag==0) then begin
          strid = 5036; 
        end else begin
          strid = 5038; 
        end;
        dblstr = "DblPOVc";
        if (POr.Closed!=0) then begin
          printf = false;
        end;
      end;
    case "Fut3ORVc": begin
        record ORVc ORr;

        ORr.SerNr = IHr.TransNr;
        if (ReadFirstMain(ORr,1,true)) then begin end;
        if (ORr.Closed!=0) then begin
          printf = false;
        end;
        strid = 5035; 
        dblstr = "DblORVc";
      end;
  end;

  if (printf==false) then begin
    goto LPrintItemHist;
  end;
  if (RepSpec.AccSpec!=0) then begin
    if (nonblank(IHr.SerialNr)) then begin
      sourceIHr.ArtCode = IHr.ArtCode;
      sourceIHr.SerialNr = IHr.SerialNr;
      sourceIHr.FileName = "PUVc";
      if (ReadFirstKey("ArtCodeSerialNr",sourceIHr,3,true)) then begin
        PUr.SerNr = sourceIHr.TransNr;
        if (ReadFirstMain(PUr,1,true)) then begin
          MatRowGet(PUr,sourceIHr.Row,PUrw);
        end;
      end;
    end;
  end;
  switch (RepSpec.Media) begin
    case mtFile:
      goto LPrintItemHistExcel;
    case mtExcel:
LPrintItemHistExcel:;
      switch (RepSpec.ArtMode) begin
        case 0:
          StartFormat(15);
          OutString(0,0,INr.Code,false);
          OutString(100,0,INr.Name,false);
          OutString(300,0,INr.Unittext,false);
          OutDate(0,0,IHr.TransDate,false);
          OutString(60,0,USetStr(strid),false);       
          OutString(115,dblstr,transnr,false);    
          if (RepSpec.flags[21]==1) then begin  
            PrintCustName(IHr.FileName,IHr.TransNr,210);   
          end;
          if (HasMultiLocations) then begin
            OutString(300,0,IHr.Location,false);
          end;
          switch (RepSpec.flags[12]) begin
            case 1: OutVal(375,0,IHr.Qty2,M4UVal,true);
            case 2: 
              if (MSb.UnitConvCalc==0) then begin
                OutVal(375,0,IHr.Qty/IHr.Qty2,M45Val,true);
              end else begin
                OutVal(375,0,IHr.Qty2/IHr.Qty,M45Val,true);
              end;
          end;
          OutVal(410,0,IHr.Qty,M4UVal,true);
          OutVal(480,0,bal,M4UVal,true);
          if (RepSpec.AccSpec!=0) then begin
            OutString(1,0,IHr.SerialNr,false);
            OutString(1,0,PUr.VECode,false);
            OutString(1,0,PUr.VEName,false);

            PIr.ItemCode = INr.Code;
            PIr.Location = IHr.Location;
            PIr.VECode = PUr.VECode;
            if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
              PIr.ItemCode = INr.Code;
              PIr.Location = "";
              PIr.VECode = PUr.VECode;
              if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
              end;
            end;
            OutString(1,0,PIr.VEItemCode,false);
          end;
          EndFormat;
        case 1:
          StartFormat(15);
          OutString(0,0,INr.Code,false);
          OutString(100,0,INr.Name,false);
          OutString(300,0,INr.Unittext,false);
          OutDate(0,0,IHr.TransDate,false);
          OutString(60,0,USetStr(strid),false);                        
          OutStringOvst(115,dblstr,transnr,false,IHr.Invalid);    
          if (RepSpec.flags[21]==1) then begin
            PrintCustName(IHr.FileName,IHr.TransNr,185);                   
          end;
          if (HasMultiLocations) then begin
            OutString(260,0,IHr.Location,false);                         
          end;
          OutVal(340,0,IHr.Qty,M4UVal,true);                           
          if (outf) then begin
            OutVal(375,0,Round(bal/IHr.Qty,SetRoundModeD(5)),M45Val,true);
          end else begin
            OutVal(375,0,Round(IHr.TotCostPrice/IHr.Qty,SetRoundModeD(5)),M45Val,true);
          end;
          OutVal(480,0,Round(bal,SetRoundModeD(4)),M45Val,true);//INRS 3
          if (RepSpec.AccSpec!=0) then begin
            OutString(1,0,IHr.SerialNr,false);
            OutString(1,0,PUr.VECode,false);
            OutString(1,0,PUr.VEName,false);
            PIr.ItemCode = INr.Code;
            PIr.Location = IHr.Location;
            PIr.VECode = PUr.VECode;
            if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
              PIr.ItemCode = INr.Code;
              PIr.Location = "";
              PIr.VECode = PUr.VECode;
              if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
              end;
            end;
            OutString(1,0,PIr.VEItemCode,false);
          end;
          EndFormat;
        case 3://INRS
          StartFormat(15);
          OutString(0,0,INr.Code,false);
          OutString(100,0,INr.Name,false);
          OutString(300,0,INr.Unittext,false);
          OutDate(0,0,IHr.TransDate,false);
          OutString(60,0,USetStr(strid),false);                       
          OutString(115,dblstr,transnr,false);                    
          if (RepSpec.flags[21]==1) then begin  
            PrintCustName(IHr.FileName,IHr.TransNr,210);                    
          end;
          OutString(300,0,Right(IHr.Variety,len(IHr.Variety)-1),false);   
          switch (RepSpec.flags[12]) begin
            case 1: OutVal(375,0,IHr.Qty2,M4UVal,true);
            case 2: 
              if (MSb.UnitConvCalc==0) then begin
                OutVal(375,0,IHr.Qty/IHr.Qty2,M4Qty,true);
              end else begin
                OutVal(375,0,IHr.Qty2/IHr.Qty,M4Qty,true);
              end;
          end;
          OutVal(410,0,IHr.Qty,M4UVal,true);
          OutVal(480,0,bal,M4UVal,true);
          if (RepSpec.AccSpec!=0) then begin
            OutString(1,0,IHr.SerialNr,false);
            OutString(1,0,PUr.VECode,false);
            OutString(1,0,PUr.VEName,false);
            PIr.ItemCode = INr.Code;
            PIr.Location = IHr.Location;
            PIr.VECode = PUr.VECode;
            if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
              PIr.ItemCode = INr.Code;
              PIr.Location = "";
              PIr.VECode = PUr.VECode;
              if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
              end;
            end;
            OutString(1,0,PIr.VEItemCode,false);
          end;
          EndFormat;
      end;
    otherwise    
      switch (RepSpec.ArtMode) begin
        case 0:
          StartFormat(15);
          OutDate(0,0,IHr.TransDate,false);
          OutString(60,0,USetStr(strid),false);
          OutString(115,dblstr,transnr,false);
          if (RepSpec.flags[22]!=0) then begin
            PrintDispatchNumber(IHr.FileName,IHr.TransNr,IHr.Row,170);   
          end;
          if (RepSpec.flags[21]==1) then begin
            PrintCustName(IHr.FileName,IHr.TransNr,210);   
          end;
          if (HasMultiLocations) then begin
            OutString(300,0,IHr.Location,false);
          end;
          switch (RepSpec.flags[12]) begin
            case 1: OutValBiDi(375,0,IHr.Qty2,M4UVal,true,420);
            case 2: 
              if (MSb.UnitConvCalc==0) then begin
                OutValBiDi(375,0,IHr.Qty/IHr.Qty2,M45Val,true,420);
              end else begin
                OutValBiDi(375,0,IHr.Qty2/IHr.Qty,M45Val,true,420);
              end;
          end;
          OutValBiDi(410,0,IHr.Qty,M45Val,true,450);
          OutValBiDi(480,0,bal,M45Val,true,520);
          EndFormat;
        case 1:
          StartFormat(15);
          OutDate(0,0,IHr.TransDate,false);
          OutString(60,0,USetStr(strid),false);                        
          if (RepSpec.flags[22]!=0) then begin
            OutStringOvst(115,dblstr,transnr,false,IHr.Invalid);    
            PrintDispatchNumber(IHr.FileName,IHr.TransNr,IHr.Row,150);   
          end else begin
            OutStringOvst(135,dblstr,transnr,false,IHr.Invalid);    
          end;
          if (RepSpec.flags[21]==1) then begin
            PrintCustName(IHr.FileName,IHr.TransNr,185);                   
          end;
          if (HasMultiLocations) then begin
            OutString(260,0,IHr.Location,false);                         
          end;
          OutValBiDi(340,0,IHr.Qty,M45Val,true,340);                 
          if (UserCanAction("ViewCostPrice",true)) then begin
            if (outf) then begin
              OutValBiDi(400,0,Round(bal/IHr.Qty,SetRoundModeD(5)),M45Val,true,420);
            end else begin
              OutValBiDi(400,0,Round(IHr.TotCostPrice/IHr.Qty,SetRoundModeD(5)),M45Val,true,420);
            end;
            OutValBiDi(480,0,Round(bal,SetRoundModeD(4)),M45Val,true,500);//INRS 3
          end;
          EndFormat;
        case 3://INRS
          StartFormat(15);
          OutDate(0,0,IHr.TransDate,false);
          OutString(60,0,USetStr(strid),false);                       
          OutString(115,dblstr,transnr,false);                    
          if (RepSpec.flags[21]==1) then begin
            PrintCustName(IHr.FileName,IHr.TransNr,210);                    
          end;
          OutString(300,0,Right(IHr.Variety,len(IHr.Variety)-1),false);             
          switch (RepSpec.flags[12]) begin
            case 1: OutValBiDi(375,0,IHr.Qty2,M4UVal,true,420);
            case 2: 
              if (MSb.UnitConvCalc==0) then begin
                OutValBiDi(375,0,IHr.Qty/IHr.Qty2,M4Qty,true,420);
              end else begin
                OutValBiDi(375,0,IHr.Qty2/IHr.Qty,M4Qty,true,420);
              end;
          end;
          OutValBiDi(410,0,IHr.Qty,M4UVal,true,450);
          OutValBiDi(480,0,bal,M4UVal,true,520);
          EndFormat;
      end;
      if (RepSpec.AccSpec!=0) then begin
        if (nonblank(IHr.SerialNr)) then begin
          PIr.ItemCode = INr.Code;
          PIr.Location = IHr.Location;
          PIr.VECode = PUr.VECode;
          if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
            PIr.ItemCode = INr.Code;
            PIr.Location = "";
            PIr.VECode = PUr.VECode;
            if (ReadFirstKey("MainKey",PIr,3,true)==false) then begin
            end;
          end;
          switch (RepSpec.ArtMode) begin
            case 0:
              StartFormat(15);
               OutString(100,0,IHr.SerialNr,false);
               OutString(200,0,PUr.VECode,false);
               OutString(300,0,PUr.VEName,false);
               OutString(1,0,PIr.VEItemCode,true);
              EndFormat;
            case 1:
              StartFormat(15);
               OutString(70,0,IHr.SerialNr,false);
               OutString(150,0,PUr.VECode,false);
               OutString(220,0,PUr.VEName,false);
               OutString(1,0,PIr.VEItemCode,true);
              EndFormat;
            case 3:
              StartFormat(15);
               OutString(100,0,IHr.SerialNr,false);
               OutString(200,0,PUr.VECode,false);
               OutString(300,0,PUr.VEName,false);
               OutString(1,0,PIr.VEItemCode,true);
              EndFormat;
          end;
        end;
      end;
  end;
LPrintItemHist:;
  return;
end;
