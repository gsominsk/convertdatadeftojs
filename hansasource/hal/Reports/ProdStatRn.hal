external procedure HT2Per(Date, Date , var string);

procedure FindTransactions(record RcVc RepSpec,string recepy,var val qty, var val weight, time t1, time t2)
begin
  record ProdVc Prodr;
  boolean TrHs, testf;
  Prodr.Recepy = recepy;

  TrHs = true;
  while (LoopKey("Recepy",Prodr,1,TrHs)) begin
    if (TrHs) then begin
      if (Prodr.Recepy <> recepy) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f4)) then begin
        if (Prodr.FixAssCode <> RepSpec.f4) then begin
          testf = false;
        end;
      end;  
       if (DateInRange(Prodr.ProdDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;  
      if (Prodr.PRStatusFlag <> 3) then begin
        testf = false;
      end;
      
     if (testf) then begin
       if (nonblank(RepSpec.f5)) and (nonblank(RepSpec.f6)) then begin
         testf = false;
         if (t1 < t2) then begin
           if (t1 <= Prodr.StartTime) and (t2 >= Prodr.StartTime) then begin
             testf = true;
           end;
         end;
         if (t2 < t1) then begin
           if ((t1 >= Prodr.StartTime) and (t2 >= Prodr.StartTime)) or (t1 <= Prodr.StartTime) then begin
             testf = true;
             if (Prodr.ProdDate == RepSpec.sEndDate) and (Prodr.StartTime > t2) then begin
               testf = false;
             end;
             if (Prodr.ProdDate == RepSpec.sStartDate) and (Prodr.StartTime < t2) then begin
               testf = false;
             end;  
           end;
         end;
       end;
       if (testf) then begin
         qty  = qty + Prodr.Qty;
         weight = weight + Prodr.TotOutWeight;
       end;
      end;
    end;  
  end;
  return;
end; 

global
procedure ProdStatRn(record RcVc RepSpec)
begin
  record RecVc Recr;
  record INVc INr;
  boolean TrHs, testf;
  val qty, weight;
  val tqty, tweight;
  string 255 tstr;
  integer rw;

  Time t1,t2,t3;
  t1 = StringToTime(RepSpec.f5);
  t2 = StringToTime(RepSpec.f6);
  rw =1;
  StartReportJob(USetStr(15150));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f5)) and (nonblank(RepSpec.f6)) then begin
    tstr = USetStr(15151) & t1;
    Header(rw,tstr,1);
    rw = rw +1 ;
    
    tstr = USetStr(15152) & t2;
    Header(rw,tstr,1);
    rw = rw +1 ;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(15153) & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f4)) then begin
    tstr = USetStr(15154) & RepSpec.f4;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(15155),false);
  OutString(80,0,USetStr(15156),false);
  OutString(130,0,USetStr(15157),false);
  OutString(430,0,USetStr(15158),true);
  OutString(1,0,USetStr(15159),true);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  Recr.Code = RepSpec.f2;
  while (LoopMain(Recr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f2)) then begin
        if (RepSpec.f2 <> Recr.Code) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (testf) then begin
        qty = 0;
        weight = 0;
        FindTransactions(RepSpec,Recr.Code,qty,weight,t1,t2);
        if (qty <> 0) then begin
          StartFormat(15);
          OutString(0,0,Recr.Code,false);
          INr.Code = Recr.Code;
          if (ReadFirstMain(INr,1,true)) then begin
            OutString(80,0,INr.Unittext,false);
            OutString(100,0,INr.Unittext2,false);
          end;
          OutString(130,0,Recr.Comment,false);
          OutVal(430,0,qty,M40Val,true);
          OutVal(1,0,weight,M4Val,true);
          EndFormat;
          tqty = tqty + qty;
          tweight = tweight + weight;
        end;
      end;
    end;
   
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(400,0,USetStr(15160),true);
  OutVal(1,0,tqty,M40Val,true);
  EndFormat;
  StartFormat(15);
  OutString(400,0,USetStr(15161),true);
  OutVal(1,0,tweight,M40Val,true);
  EndFormat;
  EndJob;
  Return;
end;