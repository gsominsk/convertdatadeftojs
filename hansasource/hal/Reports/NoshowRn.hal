#ifdef hal

external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external function string 20 FindJobCustomerCode(record JobVc);
external procedure GetCustCredCard(String,var String,var string,var String,var string);
external Function Val GetCustLimit(String);
external Function Val GetDownGuest(Record JobVc);

global
procedure NoShowRn(record RcVc RepSpec)
begin
   Integer i,rw;
   record JobVc Jobr;
   Boolean TsHr,Skip;
   Val tt;
   Integer p1,p2,p3,p4,p5,p6,p7,p8;
   String 50 tstr,InvoiceNro,OnlyStatus;
   Val Account,Limite,Downpay,SaldoGuest;
   String 50 CC,ValidDate,SC,Tipo,custcode;

   // Positions
   p1= 0;
   p2= 60;
   p3= 200;
   p4= 275;
   p5= 350;
   p6= 425;
   p7= 480;  
   p8= 480;  

   // Get parameters & Init
   tt = 0;
   TsHr = true;
  StartReportJob(USetStr(9955));
  rw = 1;
  if (HasCategories) then begin
    HTCustCat(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.f3,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;  
  EndHeader;

  StartFormat(15);
  OutString(p1,0,USetStr(9956),false);
  OutString(p2,0,USetStr(9957),false);
  OutString(p3,0,USetStr(9958),false);
  OutString(p4,0,USetStr(9959),true);
  OutString(p5,0,USetStr(9960),true);
  OutString(p6,0,USetStr(9961),true);
  OutString(p7,0,USetStr(9962),true);
  EndFormat;
  Gray_Divider(0,1);

   if blank(RepSpec.f1) then begin
     goto L99;
   end;
   
   Jobr.ResStatus = RepSpec.f1;
   While (LoopKey("ResStatus",Jobr,1,TsHr)) begin
     Skip = false;
      If ((Jobr.TransDate>RepSpec.sEndDate) or (Jobr.TransDate<RepSpec.sStartDate)) then begin
          Skip = false;
      end;
      if (Jobr.ResStatus <> RepSpec.f1) then begin
        TsHr = false;
        Skip = true;
      end;
      custcode = FindJobCustomerCode(Jobr);
      if (nonblank(RepSpec.f2)) then begin
        if (custcode <> RepSpec.f2) then begin
          Skip = true;
        end;
      end;
      if (Skip==false) then begin 
        Skip = (ContactInGroupClass(custcode,RepSpec.f4,RepSpec.f3,"CUST","","")==false);
      end;
      If (not Skip) then begin
         StartFormat(15);
         GetCustCredCard(FindJobCustomerCode(Jobr),CC,ValidDate,SC,Tipo);
         Limite = GetCustLimit(FindJobCustomerCode(Jobr));
         Downpay = GetDownGuest(Jobr);
         SaldoGuest = Limite - Account + Downpay;
         OutString(p1,"DblJobVc",Jobr.SerNr,false);
         OutString(p2,0,Left(Jobr.CUName,25),false);
         OutString(p3,0,Jobr.Type,false); 
         OutVal(p4,0,Account,M4Val,true);
         OutVal(p5,0,Limite,M4Val,true);
         OutVal(p6,0,Downpay,M4Val,true);
         OutVal(p7,0,SaldoGuest,M4Val,true);
         EndFormat;
         if (RepSpec.flags[3]==1) then begin
           StartFormat(15);
           OutString(p1,0,CC,false);
           OutDate(p2,0,ValidDate,false);
           OutString(p3,0,SC,false); 
           OutString(p4,0,Tipo,false); 
           EndFormat;
         end;  
         tt = tt + Account;
      End;
   end;

  // Footer
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(p1,0,USetStr(9963),false);
  OutVal(p4,0,tt,M4Val,true);
  EndFormat;

L99:;

  EndJob;
  return;
end;


#endif
