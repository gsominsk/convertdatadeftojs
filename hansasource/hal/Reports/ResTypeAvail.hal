external function Boolean IsEnterprise();
external procedure HTResClass(string,var string);
external procedure HTResLoc(string,var string);
external function Boolean IsBankHolliday(Date,Boolean);
external procedure HT2Per(Date, Date , var string);
external function LongInt DateDiff(Date,Date);
external function LongInt Do_ReservationsInDayRa(string,string,string,Date,LongInt,Array LongInt,Array LongInt,Time,Time,var LongInt,var LongInt);

global
procedure ResTypeAvail(string restype,string reslocation,string resclass,Date dp,LongInt maxdays,Time chkin,Time chkout,var LongInt rooms,var LongInt booked,var LongInt readrecs,var LongInt usedrec)
BEGIN
  Array LongInt ra;
  Array LongInt ra2;
  LongInt i,m;
  LongInt minroom,maxbook;
  
  maxbook = 0;
  for (i=0;i<maxdays;i=i+1) begin
    ra[i] = 0;
    ra2[i] = 0;
  end;
  minroom = Do_ReservationsInDayRa(restype,reslocation,resclass,dp,maxdays,ra,ra2,chkin,chkout,readrecs,usedrec);
  for (i=0;i<maxdays;i=i+1) begin
    if (ra2[i]<minroom) then begin
      minroom = ra2[i];
    end;
    if (ra[i]<maxbook) then begin
      maxbook = ra[i];
    end;
  end;  
  rooms = minroom;
  booked = -maxbook;
  RETURN;
END;

function Boolean ListInvoiceItemsPerWeekDay(string restype,Integer dateid)
BEGIN
  Boolean res;
  record ResArtCodeVc ResArtCoder;
  record INVc INr;
  Boolean TrHs;
  Boolean testf;
  string 255 tstr;
  
  TrHs = true;
  ResArtCoder.WeekPart = dateid;
  ResArtCoder.ResType = restype;
  while (LoopKey("WeekPart",ResArtCoder,2,TrHs)) begin
    if (ResArtCoder.WeekPart!=dateid) then begin
      TrHs = false;
    end;
    if (ResArtCoder.ResType!=restype) then begin
      TrHs = false;
    end;
    testf = true;
    if (TrHs==false) then begin
      testf = false;
    end;   
    if (testf) then begin
      tstr = ResArtCoder.ResType & ",";
      tstr = tstr & ResArtCoder.ResUsageCode;
      tstr = tstr & ",";
      tstr = tstr & ResArtCoder.NoOfGuests;
      INr.Code = ResArtCoder.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin end;
      StartFormat(15);
      if (nonblank(ResArtCoder.Comment)) then begin
        OutStringID(20,"ResTypeAvailNewRes",ResArtCoder.Comment,false,tstr);
      end else begin
        OutStringID(20,"ResTypeAvailNewRes",INr.Name,false,tstr);
      end;
      OutVal(350,0,INr.UPrice1,M4Val,true);
      EndFormat;
      res = true;
    end;
  end;
  ListInvoiceItemsPerWeekDay = res;
  RETURN;
END;

procedure ListInvoiceItemsNormalWeekdays(string restype)
BEGIN
  record ResArtCodeVc ResArtCoder;
  record INVc INr;
  Boolean TrHs;
  Boolean testf;
  string 255 tstr;

  TrHs = true;
  ResArtCoder.ResType = restype;
  while (LoopMain(ResArtCoder,1,TrHs)) begin
    if (ResArtCoder.ResType!=restype) then begin
      TrHs = false;
    end;
    testf = true;
    if (TrHs==false) then begin
      testf = false;
    end;   
    if (ResArtCoder.WeekPart!=0) then begin // Just show Normal Weekdays
      testf = false;
    end;    
    if (testf) then begin
      tstr = ResArtCoder.ResType & ",";
      tstr = tstr & ResArtCoder.ResUsageCode;
      tstr = tstr & ",";
      tstr = tstr & ResArtCoder.NoOfGuests;
      INr.Code = ResArtCoder.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin end;
      StartFormat(15);
      if (nonblank(ResArtCoder.Comment)) then begin
        OutStringID(20,"ResTypeAvailNewRes",ResArtCoder.Comment,false,tstr);
      end else begin
        OutStringID(20,"ResTypeAvailNewRes",INr.Name,false,tstr);
      end;
      OutVal(350,0,INr.UPrice1,M4Val,true);
      EndFormat;
    end;
  end;
  RETURN;
END;

procedure ListInvoiceItems(string restype,Date d1,Integer monthoverview)
begin
  Integer dateid;
  Boolean found;
  
  if (monthoverview==0) then begin
    ListInvoiceItemsNormalWeekdays(restype);
  end else begin
    dateid = GetDateID(d1);
    if (IsBankHolliday(d1,false)) then begin
      found = ListInvoiceItemsPerWeekDay(restype,2);
    end;
    if (found==false) then begin
      if ((dateid==5) or (dateid==6)) then begin
        found = ListInvoiceItemsPerWeekDay(restype,1);
      end;
    end;
    if (found==false) then begin
      found = ListInvoiceItemsPerWeekDay(restype,dateid+2);
    end;
    if (found==false) then begin
      ListInvoiceItemsNormalWeekdays(restype);
    end;
  end;
  RETURN;
END;

global
procedure ResTypeAvailRn(record RcVc RepSpec)
BEGIN
  record ResTypeVc ResTyper;
  Boolean TrHs,testf;
  record HotelBlock htr;
  Time endofday,startofday;
  LongInt maxdays;
  LongInt rooms,booked;
  LongInt totrooms,totbooked;
  Date frdat,todat;
  string 200 tstr;
  Integer rw;
  LongInt readrecs,usedrecs;
  
  frdat = RepSpec.sStartDate;
  todat = RepSpec.sEndDate;
  if (NonBlankDate(RepSpec.d2)) then begin
    todat = RepSpec.d2;
  end;
  StartReportJob(USetStr(12500));
  rw = 1;
  HT2Per(frdat,todat,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTResLoc(RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTResClass(RepSpec.f6,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  
  totrooms = 0;
  totbooked = 0;
  readrecs = 0;
  usedrecs = 0;
  maxdays = DateDiff(todat,frdat);
  if (maxdays==0) then begin
    maxdays = 1;
  end;
  BlockLoad(htr);  
  endofday = htr.CheckOut;
//  if (nonblanktime(htr.EndOfDay)) then begin
//    endofday = htr.EndOfDay;
//  end;
  startofday = htr.CheckIn;
//  if (nonblanktime(htr.StartNewDay)) then begin
//    startofday = htr.StartNewDay;
//  end;
  StartFormat(15);
  OutString(0,0,USetStr(12501),false);
  OutString(60,0,USetStr(12502),false);
  OutString(360,0,USetStr(12503),true);
  OutString(420,0,USetStr(12504),true);
  OutString(480,0,USetStr(12505),true);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  ResTyper.Code = RepSpec.f1;
  while (LoopKey("Code",ResTyper,1,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (ResTyper.Code!=RepSpec.f1) then begin TrHs = false;  end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f3)) then begin
        if (nonblank(ResTyper.ResLoc)) then begin
          if (ResTyper.ResLoc!=RepSpec.f3) then begin testf = false;  end;
        end;
      end;
      if (ResTyper.Sort!=0) then begin testf = false; end;
      if (testf) then begin
        ResTypeAvail(ResTyper.Code,RepSpec.f3,RepSpec.f6,frdat,maxdays,startofday,endofday,rooms,booked,readrecs,usedrecs);
        StartFormat(15);
        if (IsEnterprise) then begin
          OutString(0,"DblResTypeVc",ResTyper.Code,false);
        end else begin
          OutString(0,0,ResTyper.Code,false);
        end;
        OutString(60,0,ResTyper.Comment,false);
        OutString(360,0,rooms,true);
        OutString(420,0,booked,true);
        OutString(480,0,rooms - booked,true);
        EndFormat;
        totrooms = totrooms + rooms;
        totbooked = totbooked + booked;     
        if (IsEnterprise) then begin   
          ListInvoiceItems(ResTyper.Code,frdat,RepSpec.flags[29]);
        end;
      end;
    end;
  end;
  if (nonblank(RepSpec.f1)) then begin
    ResetLoop(ResTyper);
    TrHs = true;
    ResTyper.Code = "";
    while (LoopKey("Code",ResTyper,1,TrHs)) begin
      if (TrHs) and (ResTyper.Code!=RepSpec.f1) then begin
        testf = true;
        if (nonblank(RepSpec.f3)) then begin
          if (nonblank(ResTyper.ResLoc)) then begin
            if (ResTyper.ResLoc!=RepSpec.f3) then begin testf = false;  end;
          end;
        end;
        if (testf) then begin
          ResTypeAvail(ResTyper.Code,RepSpec.f3,RepSpec.f6,frdat,maxdays,startofday,endofday,rooms,booked,readrecs,usedrecs);
          StartFormat(15);
          OutString(0,"DblResTypeVc",ResTyper.Code,false);
          OutString(60,0,ResTyper.Comment,false);
          OutString(360,0,rooms,true);
          OutString(420,0,booked,true);
          OutString(480,0,rooms - booked,true);
          EndFormat;
          totrooms = totrooms + rooms;
          totbooked = totbooked + booked;
          ListInvoiceItems(ResTyper.Code,frdat,RepSpec.flags[29]);
        end;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(12506),false);
  OutString(60,0,"",false);
  OutString(360,0,totrooms,true);
  OutString(420,0,totbooked,true);
  OutString(480,0,totrooms - totbooked,true);
  EndFormat;
  EndJob;
  RETURN;
END;

