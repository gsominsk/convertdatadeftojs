external procedure HT2Per(Date, Date , var string);

external procedure GetAccountName(string,var string);
external procedure AddupTotals2(string,string,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,Boolean,integer);
external procedure PrintReportTotals(val,val,val,val,val,val,val,val,val,val);
external procedure FindAcumulatedPeriod(Date,var Date,var Date);
external procedure GetChar(string,var string,Integer);
external procedure CheckObjectAccRow(record FBVc,string,string,val,val,val,val);
external procedure PrintSubaccVals(var record FBVc);
external function Boolean CheckObjType(string,string);
external procedure FindObjQtyFwdBalances(record ObjBalVc,string,string,Date,var val,var val,Boolean);
external procedure PrintObjectValues(record RcVc,record FBVc,record FBVc,string,var string,string,val,val,val,val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val);
external procedure PrintObjectGroupTotal(var record FBVc,record FBVc,record RcVc,string,var string,string,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,Integer);
external procedure ExpToIncomeAddup(val,val,var val);
external function Boolean CheckObjClosed(string);
  /* Too many variables..... I copied it into the main function, looks REALLY ugly but it works..... :-)
procedure PrintObjectHeader(record RcVc RepSpec,var record FBVc totFBr,var record FBVc FB2r,string objcode,var Integer first,var string lastobj,var string lastobjg,
                            var val totincobjv,var val totexpobjv,var val totincobjav,var val totexpobjav,var val totogrq,
                            var val totograq,var val totincgrv,var val totexpgrv,var val totincgrav,var val totexpgrav,var val totobjexpbudv,var val totobjincbudv,
                            var val totobjexprbudv,var val totobjincrbudv,var val totgrincbudv,var val totgrexpbudv,var val totgrincrbudv,var val totgrexprbudv,
                            var Boolean firstobjf,var val totobjq22,var val totobjq31,var val totobjq33,var val totobjaq22,var val totobjaq31,var val totobjaq33)
BEGIN

  string 255 tstr; 
  string 10 subacc;
  string 100 objcode;
  Integer printer;
  val t1,t2,tb1,tb2;
  val blankv;

  printer = 1;
  if ((lastobj<>objcode) or (first<>0)) then begin
     if (first==2) then begin     //(first==0)
       if (RepSpec.flags[0]<>0) then begin
         PrintSubaccVals(FB2r);
       end;       
       
       Gray_Divider(70,480);         
       StartFormat(15);
       OutString(15,0,USetStr(8691),false);
       OutVal(240,0,totincobjv,M4Val,true);
       OutVal(320,0,totincobjav,M4Val,true);
       OutVal(400,0,totobjincrbudv,M4Val,true);
       OutVal(480,0,totobjincbudv,M4Val,true);
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8692),false);
       OutVal(240,0,totexpobjv,M4Val,true);
       OutVal(320,0,totexpobjav,M4Val,true);
       OutVal(400,0,totobjexprbudv,M4Val,true);
       OutVal(480,0,totobjexpbudv,M4Val,true);
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8688),false);
       ExpToIncomeAddup(totincobjv,totexpobjv,t1);
       OutVal(240,0,-t1,M4Val,true);
       ExpToIncomeAddup(totincobjav,totexpobjav,t2);
       OutVal(320,0,-t2,M4Val,true);
       ExpToIncomeAddup(totobjincrbudv,totobjexprbudv,tb2);
       OutVal(400,0,-tb2,M4Val,true);       
       ExpToIncomeAddup(totobjincbudv,totobjexpbudv,tb1);
       OutVal(480,0,-tb1,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8689),false);
       OutVal(240,0,((t1)/totincobjv)*100,M4Val,true);
       OutVal(320,0,((t2)/totincobjav)*100,M4Val,true);
       OutVal(400,0,((tb2)/totobjincrbudv)*100,M4Val,true);
       OutVal(480,0,((tb1)/totobjincbudv)*100,M4Val,true);
       EndFormat;   
       if (RepSpec.flags[20]==1) then begin
       StartFormat(15);
       OutString(15,0,"5031-5032 R¿rlegger",false);
       OutVal(240,0,totobjq31,M4Qty,true);
       OutVal(320,0,totobjaq31,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"5033-5034 Larling",false);
       OutVal(240,0,totobjq33,M4Qty,true);
       OutVal(320,0,totobjaq33,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"4522 Innleid",false);
       OutVal(240,0,totobjq22,M4Qty,true);
       OutVal(320,0,totobjaq22,M4Qty,true);
       EndFormat;     
       end;         
       totincgrv = totincgrv + totincobjv;
       totexpgrv = totexpgrv + totexpobjv;
       totincgrav = totincgrav + totincobjav;
       totexpgrav = totexpgrav + totexpobjav;
       totgrincbudv = totgrincbudv + totobjincbudv;
       totgrexpbudv = totgrexpbudv + totobjexpbudv;
       totgrincrbudv = totgrincrbudv + totobjincrbudv;
       totgrexprbudv = totgrexprbudv + totobjexprbudv;       
       totincobjv = blankv;
       totexpobjv = blankv;
       totincobjav = blankv;
       totexpobjav = blankv;
       totobjincbudv = blankv;
       totobjexpbudv = blankv;
       totobjincrbudv = blankv;
       totobjexprbudv = blankv; 
       PrintObjectGroupTotal(totFBr,FB2r,RepSpec,objcode,lastobjg,lastobj,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,first);
     end;          
     if ((RepSpec.flags[0]<>0) and (first<>2)) then begin
       PrintSubaccVals(FB2r);
     end;       
     if ((first<>2) and (firstobjf==false)) then begin
       Gray_Divider(70,480);         
       StartFormat(15);
       OutString(15,0,USetStr(8691),false);
       OutVal(240,0,totincobjv,M4Val,true);
       OutVal(320,0,totincobjav,M4Val,true);
       OutVal(400,0,totobjincrbudv,M4Val,true);       
       OutVal(480,0,totobjincbudv,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8692),false);
       OutVal(240,0,totexpobjv,M4Val,true);
       OutVal(320,0,totexpobjav,M4Val,true);
       OutVal(400,0,totobjexprbudv,M4Val,true);       
       OutVal(480,0,totobjexpbudv,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8688),false);
       ExpToIncomeAddup(totincobjv,totexpobjv,t1);
       OutVal(240,0,t1,M4Val,true);
       ExpToIncomeAddup(totincobjav,totexpobjav,t2);
       OutVal(320,0,t2,M4Val,true);
       ExpToIncomeAddup(totobjincrbudv,totobjexprbudv,tb2);
       OutVal(400,0,tb2,M4Val,true);
       ExpToIncomeAddup(totobjincbudv,totobjexpbudv,tb1);
       OutVal(480,0,tb1,M4Val,true);
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8689),false);
       OutVal(240,0,((t1)/totincobjv)*100,M4Val,true);
       OutVal(320,0,((t2)/totincobjav)*100,M4Val,true);
       OutVal(400,0,((tb2)/totobjincrbudv)*100,M4Val,true);
       OutVal(480,0,((tb1)/totobjincbudv)*100,M4Val,true);       
       EndFormat;       
       if (RepSpec.flags[20]==1) then begin
       StartFormat(15);
       OutString(15,0,"5031-5032 R¿rlegger",false);
       OutVal(240,0,totobjq31,M4Qty,true);
       OutVal(320,0,totobjaq31,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"5033-5034 Larling",false);
       OutVal(240,0,totobjq33,M4Qty,true);
       OutVal(320,0,totobjaq33,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"4522 Innleid",false);
       OutVal(240,0,totobjq22,M4Qty,true);
       OutVal(320,0,totobjaq22,M4Qty,true);
       EndFormat;    
       end;          
       totincgrv = totincgrv + totincobjv;
       totexpgrv = totexpgrv + totexpobjv;
       totincgrav = totincgrav + totincobjav;
       totexpgrav = totexpgrav + totexpobjav;
       totgrincbudv = totgrincbudv + totobjincbudv;
       totgrexpbudv = totgrexpbudv + totobjexpbudv;
       totgrincrbudv = totgrincrbudv + totobjincrbudv;
       totgrexprbudv = totgrexprbudv + totobjexprbudv;
       totincobjv = blankv;
       totexpobjv = blankv;       
       totincobjav = blankv;
       totexpobjav = blankv;
       totobjincbudv = blankv;
       totobjexpbudv = blankv;
       totobjincrbudv = blankv;
       totobjexprbudv = blankv;
       totobjq22 = blankv;
       totobjq31 = blankv;
       totobjq33 = blankv;
     end;       
     GetChar(objcode,tstr,len(objcode)-1);
     if ((tstr<>":") and first<>2) then begin             
       PrintObjectGroupTotal(totFBr,FB2r,RepSpec,objcode,lastobjg,lastobj,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,first);
       Gray_Divider(0,1); 
       if ((RepSpec.flags[2]==1) and (RepSpec.Media==printer) and (firstobjf==false)) then begin//JJ         
         NewPage(false);
       end else begin
         if (firstobjf==false) then begin
           StartFormat(15);     
           EndFormat;
         end;  
       end;       
       firstobjf = false;
       StartFormat(15);
       OutString(0,0,USetStr(8687),false);
       OutString(100,0,objcode,false);
       EndFormat;     
       Gray_Divider(0,1);    
       StartFormat(15);
       OutString(15,0,USetStr(8684),false);
       OutString(240,0,USetStr(8686),true);
       OutString(320,0,USetStr(8682),true);
       OutString(400,0,USetStr(8690),true);         
       OutString(480,0,USetStr(8685),true);         
       EndFormat;          
       lastobj = objcode;
       first = 0;
     end;  
  end;
  RETURN;          
END;          
  */

global
procedure ObjQtyRn(record RcVc RepSpec)
begin
  record ObjBalVc ObjBalr;
  record FBVc totFBr;
  record FBVc FB2r;
  Boolean ObjBalf,testf,firstobjf;
  string 20 frobj,toobj;
  string 20 fracc,toacc;
  string 20 debcol,credcol;
  string 255 lastobj,lastobjg,tstr,lastsubacc;
  Integer rwcnt,i,first;  
  val q,v,t,av,aq;
  val totobjq,totobjaq,totogrq,totrepv,totrepq,totrepav,totrepaq,totograq;
  val fwdbal,qtyfwd;
  val totincobjv,totexpobjv,totincrepv,totexprepv,totincgrv,totexpgrv;
  val totincobjav,totexpobjav,totincrepav,totexprepav,totincgrav,totexpgrav;
  val totobjexpbudv,totobjincbudv,totobjexprbudv,totobjincrbudv,totgrexpbudv,totgrincbudv,totgrincrbudv,totgrexprbudv;
  val totrepincbudv,totrepexpbudv,totrepincrbudv,totrepexprbudv;
  val totobjq31,totobjq33,totobjaq31,totobjaq33,totfq31,totfq33,totgrq31,totgrq33,totgraq31,totgraq33;
  val totobjq22,totobjaq22,totfq22,totgrq22,totgraq22;
  Date AcumStartDate,AcumEndDate,td;
  Boolean wwf;
  record AccVc Accr;
  Boolean accfoundf;
  record Bud2Vc bud2r;
  string 10 subacc;
  string 100 objcode;
  Integer printer;
  val t1,t2,tb1,tb2;
  val blankv;

  
  wwf = (RepSpec.flags[20]==1); /* Flag for one customer, should have been a seperate report... */
//  wwf = true;
  firstobjf = true;
  FindAcumulatedPeriod(RepSpec.sStartDate, AcumStartDate,AcumEndDate);
  frobj = FirstInRange(RepSpec.ObjStr,20);
  toobj = LastInRange(RepSpec.ObjStr,20);
  fracc = FirstInRange(RepSpec.f1,0);
  toacc = LastInRange(RepSpec.f1,10);
  StartReportJob(USetStr(8680));
  first = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  AcumStartDate = RepSpec.sStartDate;
  AcumEndDate = RepSpec.sEndDate;
  Header(first,tstr,1);
  first = first + 1;
  EndHeader;
  Accr.AccNumber = "";
  RecordNew(totFBr);
  RecordNew(FB2r);
  first = 1;
  ObjBalf = true;
  ObjBalr.Object = frobj;
  while (ObjBalf) begin
     testf = true;
     ObjBalf = LoopKey("ObjAccKey",ObjBalr,2,ObjBalf);
     if (ObjBalf==false) then begin testf = false; end;
     if (blank(lastobj)) then begin
       lastobj = ObjBalr.Object;
       if (RepSpec.FirstVer>0) then begin
         lastobjg = Left(ObjBalr.Object,RepSpec.FirstVer);
       end else begin
         lastobjg = ObjBalr.Object;
       end;  
     end;    

/* This code was added to show entries made in Rev. Budget only */
     if (wwf or true) then begin
       if (LoopMain(Accr,1,true)) then begin
         if ((Accr.AccNumber<ObjBalr.AccNumber) or (lastobj<ObjBalr.Object)) then begin
           bud2r.AccNumber = Accr.AccNumber;
           bud2r.Objects = lastobj;
           if (ReadFirstMain(bud2r,2,true)) then begin
             RecordNew(ObjBalr);
             ObjBalr.AccNumber = bud2r.AccNumber;
             ObjBalr.Object = bud2r.Objects;             
           end else begin
             testf = false;
           end;
           StepBack(ObjBalr);
         end;
       end else begin
         Accr.AccNumber = "";
         ResetLoop(Accr);
       end;
     end;
     if (nonblank(RepSpec.ObjStr)) then begin
       if (ObjBalr.Object>toobj) then begin 
         ObjBalf = false;
         testf = false;
       end;  
     end;          
     if (nonblank(RepSpec.ObjType)) then begin
       if (CheckObjType(ObjBalr.Object,RepSpec.ObjType)==false) then begin 
         testf = false;
       end;  
     end;          
     if (CheckObjClosed(ObjBalr.Object)) then begin 
       testf = false;
     end;  
     Accr.AccNumber = ObjBalr.AccNumber;
     if (ReadFirstMain(Accr,1,true)) then begin
       if (Accr.AccType<3)  then begin
         testf = false; 
       end;
     end;  
     GetChar(ObjBalr.Object,tstr,len(ObjBalr.Object)-1);
     if (tstr==":") then begin testf = false; end;
     if (blank(ObjBalr.Object)) then begin testf = false; end;      
     if (testf) then begin
        if (RepSpec.basecurncy==0) then begin
          debcol = "transdebit";
          credcol = "transcredit";
        end else begin
          debcol = "transdebit2";
          credcol = "transcredit2";
        end;
        v = GetTurnover(ObjBalr,debcol,RepSpec.sStartDate,RepSpec.sEndDate);               
        t = GetTurnover(ObjBalr,credcol,RepSpec.sStartDate,RepSpec.sEndDate);  
        v = v - t;
        if (wwf) then begin
          q = 0;
// What?? Fixed accounts??
          if ((ObjBalr.AccNumber=="5031") or (ObjBalr.AccNumber=="5032") or (ObjBalr.AccNumber=="5033") or (ObjBalr.AccNumber=="5034") or (ObjBalr.AccNumber=="4522")) then begin
            q = GetTurnover(ObjBalr,"debquant",RepSpec.sStartDate,RepSpec.sEndDate);
            t = GetTurnover(ObjBalr,"credquant",RepSpec.sStartDate,RepSpec.sEndDate);   
            q = q - t;
          end;  
          if ((ObjBalr.AccNumber=="5031") or (ObjBalr.AccNumber=="5032")) then begin
            totobjq31 = totobjq31 + q;
          end;
          if ((ObjBalr.AccNumber=="5033") or (ObjBalr.AccNumber=="5034")) then begin
            totobjq33 = totobjq33 + q;
          end;
          if (ObjBalr.AccNumber=="4522") then begin
            totobjq22 = totobjq22 + q;
          end;
        end else begin
          q = GetTurnover(ObjBalr,"debquant",RepSpec.sStartDate,RepSpec.sEndDate);    
          t = GetTurnover(ObjBalr,"credquant",RepSpec.sStartDate,RepSpec.sEndDate);   
          q = q - t;   
        end;  
        FindObjQtyFwdBalances(ObjBalr,debcol,credcol,RepSpec.sStartDate,fwdbal,qtyfwd,wwf);
        if (wwf) then begin
          if (ObjBalr.AccNumber=="4522") then begin
            totobjaq22 = totobjaq22 + qtyfwd;
          end;
          if ((ObjBalr.AccNumber=="5031") or (ObjBalr.AccNumber=="5032")) then begin
            totobjaq31 = totobjaq31 + qtyfwd;
          end;
          if ((ObjBalr.AccNumber=="5033") or (ObjBalr.AccNumber=="5034")) then begin
            totobjaq33 = totobjaq33 + qtyfwd;
          end;
        end;
        if (testf) then begin
          if ((nonblankdate(AcumStartDate)) and (nonblankdate(AcumEndDate))) then begin
            av = GetTurnover(ObjBalr,debcol,RepSpec.sStartDate,AcumEndDate);
            t = GetTurnover(ObjBalr,credcol,RepSpec.sStartDate,AcumEndDate);  
            av = av - t;   
            if (wwf) then begin
              aq = 0;
              if ((ObjBalr.AccNumber=="5031") or (ObjBalr.AccNumber=="5032") or (ObjBalr.AccNumber=="5033") or (ObjBalr.AccNumber=="5034") or (ObjBalr.AccNumber=="4522")) then begin
                aq = GetTurnover(ObjBalr,"debquant",RepSpec.sStartDate,AcumEndDate);      
                t = GetTurnover(ObjBalr,"credquant",RepSpec.sStartDate,AcumEndDate);      
                aq = aq - t;   
              end; 
              if (ObjBalr.AccNumber=="4522") then begin
                totobjaq22 = totobjaq22 + aq;
              end;
              if ((ObjBalr.AccNumber=="5031") or (ObjBalr.AccNumber=="5032")) then begin
                totobjaq31 = totobjaq31 + aq;
              end;
              if ((ObjBalr.AccNumber=="5033") or (ObjBalr.AccNumber=="5034")) then begin
                totobjaq33 = totobjaq33 + aq;
              end;               
            end else begin
              aq = GetTurnover(ObjBalr,"debquant",RepSpec.sStartDate,AcumEndDate);      
              t = GetTurnover(ObjBalr,"credquant",RepSpec.sStartDate,AcumEndDate);      
              aq = aq - t;   
            end;  
            av = av + fwdbal;
            aq = aq + qtyfwd;
          end;
          AddupTotals2(lastobj,ObjBalr.Object,totobjq,totobjaq,totincobjv,totexpobjv,totincobjav,totexpobjav,totobjincbudv,totobjexpbudv,totobjincrbudv,totobjexprbudv,totrepq,totrepaq,totincrepv,totexprepv,totincrepav,totexprepav,totrepincbudv,totrepexpbudv,totrepincrbudv,totrepexprbudv,firstobjf,first);
          if ((lastobj<>ObjBalr.Object) and (firstobjf==false)) then begin
            totgrq22 = totgrq22 + totobjq22;
            totgrq31 = totgrq31 + totobjq31;
            totgrq33 = totgrq33 + totobjq33;
            totgraq22 = totgraq22 + totobjaq22;
            totgraq31 = totgraq31 + totobjaq31;
            totgraq33 = totgraq33 + totobjaq33;
          end;          
          objcode = ObjBalr.Object;
          
          printer = 1;
          if ((lastobj<>objcode) or (first<>0)) then begin
             if (first==2) then begin     //(first==0)
               if (RepSpec.flags[0]<>0) then begin
                 PrintSubaccVals(FB2r);
               end;       
       
               Gray_Divider(70,480);         
               StartFormat(15);
               OutString(15,0,USetStr(8691),false);
               OutVal(240,0,totincobjv,M4Val,true);
               OutVal(320,0,totincobjav,M4Val,true);
               OutVal(400,0,totobjincrbudv,M4Val,true);
               OutVal(480,0,totobjincbudv,M4Val,true);
               EndFormat;       
               StartFormat(15);
               OutString(15,0,USetStr(8692),false);
               OutVal(240,0,totexpobjv,M4Val,true);
               OutVal(320,0,totexpobjav,M4Val,true);
               OutVal(400,0,totobjexprbudv,M4Val,true);
               OutVal(480,0,totobjexpbudv,M4Val,true);
               EndFormat;       
               StartFormat(15);
               OutString(15,0,USetStr(8688),false);
               ExpToIncomeAddup(totincobjv,totexpobjv,t1);
               OutVal(240,0,-t1,M4Val,true);
               ExpToIncomeAddup(totincobjav,totexpobjav,t2);
               OutVal(320,0,-t2,M4Val,true);
               ExpToIncomeAddup(totobjincrbudv,totobjexprbudv,tb2);
               OutVal(400,0,-tb2,M4Val,true);       
               ExpToIncomeAddup(totobjincbudv,totobjexpbudv,tb1);
               OutVal(480,0,-tb1,M4Val,true);       
               EndFormat;
               StartFormat(15);
               OutString(15,0,USetStr(8689),false);
               OutVal(240,0,((t1)/totincobjv)*100,M4Val,true);
               OutVal(320,0,((t2)/totincobjav)*100,M4Val,true);
               OutVal(400,0,((tb2)/totobjincrbudv)*100,M4Val,true);
               OutVal(480,0,((tb1)/totobjincbudv)*100,M4Val,true);
               EndFormat;   
               if (wwf) then begin
               StartFormat(15);
               OutString(15,0,"5031-5032 R¿rlegger",false);
               OutVal(240,0,totobjq31,M4Qty,true);
               OutVal(320,0,totobjaq31,M4Qty,true);
               EndFormat;              
               StartFormat(15);
               OutString(15,0,"5033-5034 Larling",false);
               OutVal(240,0,totobjq33,M4Qty,true);
               OutVal(320,0,totobjaq33,M4Qty,true);
               EndFormat;              
               StartFormat(15);
               OutString(15,0,"4522 Innleid",false);
               OutVal(240,0,totobjq22,M4Qty,true);
               OutVal(320,0,totobjaq22,M4Qty,true);
               EndFormat;     
               end;         
               totincgrv = totincgrv + totincobjv;
               totexpgrv = totexpgrv + totexpobjv;
               totincgrav = totincgrav + totincobjav;
               totexpgrav = totexpgrav + totexpobjav;
               totgrincbudv = totgrincbudv + totobjincbudv;
               totgrexpbudv = totgrexpbudv + totobjexpbudv;
               totgrincrbudv = totgrincrbudv + totobjincrbudv;
               totgrexprbudv = totgrexprbudv + totobjexprbudv;       
               totincobjv = blankv;
               totexpobjv = blankv;
               totincobjav = blankv;
               totexpobjav = blankv;
               totobjincbudv = blankv;
               totobjexpbudv = blankv;
               totobjincrbudv = blankv;
               totobjexprbudv = blankv; 
               totobjq = blankv;
               totobjaq = blankv;
               totobjq22 = blankv;
               totobjq31 = blankv;
               totobjq33 = blankv;
               totobjaq22 = blankv;
               totobjaq31 = blankv;
               totobjaq33 = blankv;
               PrintObjectGroupTotal(totFBr,FB2r,RepSpec,objcode,lastobjg,lastobj,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,first);
             end;          
             if ((RepSpec.flags[0]<>0) and (first<>2)) then begin
               PrintSubaccVals(FB2r);
             end;       
             if ((first<>2) and (firstobjf==false)) then begin
               Gray_Divider(70,480);         
               StartFormat(15);
               OutString(15,0,USetStr(8691),false);
               OutVal(240,0,totincobjv,M4Val,true);
               OutVal(320,0,totincobjav,M4Val,true);
               OutVal(400,0,totobjincrbudv,M4Val,true);       
               OutVal(480,0,totobjincbudv,M4Val,true);       
               EndFormat;       
               StartFormat(15);
               OutString(15,0,USetStr(8692),false);
               OutVal(240,0,totexpobjv,M4Val,true);
               OutVal(320,0,totexpobjav,M4Val,true);
               OutVal(400,0,totobjexprbudv,M4Val,true);       
               OutVal(480,0,totobjexpbudv,M4Val,true);       
               EndFormat;       
               StartFormat(15);
               OutString(15,0,USetStr(8688),false);
               ExpToIncomeAddup(totincobjv,totexpobjv,t1);
               OutVal(240,0,t1,M4Val,true);
               ExpToIncomeAddup(totincobjav,totexpobjav,t2);
               OutVal(320,0,t2,M4Val,true);
               ExpToIncomeAddup(totobjincrbudv,totobjexprbudv,tb2);
               OutVal(400,0,tb2,M4Val,true);
               ExpToIncomeAddup(totobjincbudv,totobjexpbudv,tb1);
               OutVal(480,0,tb1,M4Val,true);
               EndFormat;       
               StartFormat(15);
               OutString(15,0,USetStr(8689),false);
               OutVal(240,0,((t1)/totincobjv)*100,M4Val,true);
               OutVal(320,0,((t2)/totincobjav)*100,M4Val,true);
               OutVal(400,0,((tb2)/totobjincrbudv)*100,M4Val,true);
               OutVal(480,0,((tb1)/totobjincbudv)*100,M4Val,true);       
               EndFormat;       
               if (wwf) then begin
               StartFormat(15);
               OutString(15,0,"5031-5032 R¿rlegger",false);
               OutVal(240,0,totobjq31,M4Qty,true);
               OutVal(320,0,totobjaq31,M4Qty,true);
               EndFormat;              
               StartFormat(15);
               OutString(15,0,"5033-5034 Larling",false);
               OutVal(240,0,totobjq33,M4Qty,true);
               OutVal(320,0,totobjaq33,M4Qty,true);
               EndFormat;              
               StartFormat(15);
               OutString(15,0,"4522 Innleid",false);
               OutVal(240,0,totobjq22,M4Qty,true);
               OutVal(320,0,totobjaq22,M4Qty,true);
               EndFormat;    
               end;          
               totincgrv = totincgrv + totincobjv;
               totexpgrv = totexpgrv + totexpobjv;
               totincgrav = totincgrav + totincobjav;
               totexpgrav = totexpgrav + totexpobjav;
               totgrincbudv = totgrincbudv + totobjincbudv;
               totgrexpbudv = totgrexpbudv + totobjexpbudv;
               totgrincrbudv = totgrincrbudv + totobjincrbudv;
               totgrexprbudv = totgrexprbudv + totobjexprbudv;
               totincobjv = blankv;
               totexpobjv = blankv;       
               totincobjav = blankv;
               totexpobjav = blankv;
               totobjincbudv = blankv;
               totobjexpbudv = blankv;
               totobjincrbudv = blankv;
               totobjexprbudv = blankv;
               totobjq = blankv;
               totobjaq = blankv;
               totobjq22 = blankv;
               totobjq31 = blankv;
               totobjq33 = blankv;
               totobjaq22 = blankv;
               totobjaq31 = blankv;
               totobjaq33 = blankv;
             end;       
             GetChar(objcode,tstr,len(objcode)-1);
             if ((tstr<>":") and first<>2) then begin             
               PrintObjectGroupTotal(totFBr,FB2r,RepSpec,objcode,lastobjg,lastobj,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,first);
               Gray_Divider(0,1); 
               if ((RepSpec.flags[2]==1) and (RepSpec.Media==printer) and (firstobjf==false)) then begin//JJ         
                 NewPage(false);
               end else begin
                 if (firstobjf==false) then begin
                   StartFormat(15);     
                   EndFormat;
                 end;  
               end;       
               firstobjf = false;
               StartFormat(15);
               OutString(0,0,USetStr(8687),false);
               OutString(100,0,objcode,false);
               EndFormat;     
               Gray_Divider(0,1);    
               StartFormat(15);
               OutString(15,0,USetStr(8684),false);
               OutString(240,0,USetStr(8686),true);
               OutString(320,0,USetStr(8682),true);
               OutString(400,0,USetStr(8690),true);         
               OutString(480,0,USetStr(8685),true);         
               EndFormat;          
               lastobj = objcode;
               first = 0;
             end;  
          end;
          t1 = BlankVal;
          t2 = BlankVal;
          tb1 = BlankVal;
          tb2 = BlankVal;

//          PrintObjectHeader(RepSpec,totFBr,FB2r,ObjBalr.Object,first,lastobj,lastobjg,totincobjv,totexpobjv,totincobjav,totexpobjav,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totobjexpbudv,totobjincbudv,totobjexprbudv,totobjincrbudv,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,firstobjf,totobjq22,totobjq31,totobjq33,totobjaq22,totobjaq31,totobjaq33);
          PrintObjectValues(RepSpec,totFBr,FB2r,ObjBalr.AccNumber,lastsubacc,ObjBalr.Object,v,q,av,aq,totobjq,totobjaq,totincobjv,totexpobjv,totincobjav,totexpobjav,totobjexpbudv,totobjincbudv,totobjexprbudv,totobjincrbudv);
        end;  
     end;     
  end;  
  first = 2;
  AddupTotals2(lastobj,ObjBalr.Object,totobjq,totobjaq,totincobjv,totexpobjv,totincobjav,totexpobjav,totobjincbudv,totobjexpbudv,totobjincrbudv,totobjexprbudv,totrepq,totrepaq,totincrepv,totexprepv,totincrepav,totexprepav,totrepincbudv,totrepexpbudv,totrepincrbudv,totrepexprbudv,firstobjf,first); 
  if ((lastobj<>ObjBalr.Object) and (firstobjf==false)) then begin
    totgrq22 = totgrq22 + totobjq22;
    totgrq31 = totgrq31 + totobjq31;
    totgrq33 = totgrq33 + totobjq33;
    totgraq22 = totgraq22 + totobjaq22;
    totgraq31 = totgraq31 + totobjaq31;
    totgraq33 = totgraq33 + totobjaq33;
  end;          

  printer = 1;
  if ((lastobj<>objcode) or (first<>0)) then begin
     if (first==2) then begin     //(first==0)
       if (RepSpec.flags[0]<>0) then begin
         PrintSubaccVals(FB2r);
       end;       
       
       Gray_Divider(70,480);         
       StartFormat(15);
       OutString(15,0,USetStr(8691),false);
       OutVal(240,0,totincobjv,M4Val,true);
       OutVal(320,0,totincobjav,M4Val,true);
       OutVal(400,0,totobjincrbudv,M4Val,true);
       OutVal(480,0,totobjincbudv,M4Val,true);
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8692),false);
       OutVal(240,0,totexpobjv,M4Val,true);
       OutVal(320,0,totexpobjav,M4Val,true);
       OutVal(400,0,totobjexprbudv,M4Val,true);
       OutVal(480,0,totobjexpbudv,M4Val,true);
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8688),false);
       ExpToIncomeAddup(totincobjv,totexpobjv,t1);
       OutVal(240,0,-t1,M4Val,true);
       ExpToIncomeAddup(totincobjav,totexpobjav,t2);
       OutVal(320,0,-t2,M4Val,true);
       ExpToIncomeAddup(totobjincrbudv,totobjexprbudv,tb2);
       OutVal(400,0,-tb2,M4Val,true);       
       ExpToIncomeAddup(totobjincbudv,totobjexpbudv,tb1);
       OutVal(480,0,-tb1,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8689),false);
       OutVal(240,0,((t1)/totincobjv)*100,M4Val,true);
       OutVal(320,0,((t2)/totincobjav)*100,M4Val,true);
       OutVal(400,0,((tb2)/totobjincrbudv)*100,M4Val,true);
       OutVal(480,0,((tb1)/totobjincbudv)*100,M4Val,true);
       EndFormat;   
       if (wwf) then begin
       StartFormat(15);
       OutString(15,0,"5031-5032 R¿rlegger",false);
       OutVal(240,0,totobjq31,M4Qty,true);
       OutVal(320,0,totobjaq31,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"5033-5034 Larling",false);
       OutVal(240,0,totobjq33,M4Qty,true);
       OutVal(320,0,totobjaq33,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"4522 Innleid",false);
       OutVal(240,0,totobjq22,M4Qty,true);
       OutVal(320,0,totobjaq22,M4Qty,true);
       EndFormat;
       StartFormat(15);
       OutString(15,0,USetStr(8683),false);
       OutVal(240,0,totobjq22 + totobjq31 + totobjq33,M4Qty,true);
       OutVal(320,0,totobjaq22 + totobjaq31 + totobjaq33,M4Qty,true);
       EndFormat;
       StartFormat(15);
       OutString(15,0,"DB / Antall",false);
       OutVal(240,0,-t1/(totobjq22 + totobjq31 + totobjq33),M4Qty,true);
       OutVal(320,0,-t2/(totobjaq22 + totobjaq31 + totobjaq33),M4Qty,true);
       EndFormat;
       end;         
       totincgrv = totincgrv + totincobjv;
       totexpgrv = totexpgrv + totexpobjv;
       totincgrav = totincgrav + totincobjav;
       totexpgrav = totexpgrav + totexpobjav;
       totgrincbudv = totgrincbudv + totobjincbudv;
       totgrexpbudv = totgrexpbudv + totobjexpbudv;
       totgrincrbudv = totgrincrbudv + totobjincrbudv;
       totgrexprbudv = totgrexprbudv + totobjexprbudv;       
       totincobjv = blankv;
       totexpobjv = blankv;
       totincobjav = blankv;
       totexpobjav = blankv;
       totobjincbudv = blankv;
       totobjexpbudv = blankv;
       totobjincrbudv = blankv;
       totobjexprbudv = blankv; 
       totobjq = blankv;
       totobjaq = blankv;
       totobjq22 = blankv;
       totobjq31 = blankv;
       totobjq33 = blankv;
       totobjaq22 = blankv;
       totobjaq31 = blankv;
       totobjaq33 = blankv;
       PrintObjectGroupTotal(totFBr,FB2r,RepSpec,objcode,lastobjg,lastobj,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,first);
     end;          
     if ((RepSpec.flags[0]<>0) and (first<>2)) then begin
       PrintSubaccVals(FB2r);
     end;       
     if ((first<>2) and (firstobjf==false)) then begin
       Gray_Divider(70,480);         
       StartFormat(15);
       OutString(15,0,USetStr(8691),false);
       OutVal(240,0,totincobjv,M4Val,true);
       OutVal(320,0,totincobjav,M4Val,true);
       OutVal(400,0,totobjincrbudv,M4Val,true);       
       OutVal(480,0,totobjincbudv,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8692),false);
       OutVal(240,0,totexpobjv,M4Val,true);
       OutVal(320,0,totexpobjav,M4Val,true);
       OutVal(400,0,totobjexprbudv,M4Val,true);       
       OutVal(480,0,totobjexpbudv,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8688),false);
       ExpToIncomeAddup(totincobjv,totexpobjv,t1);
       OutVal(240,0,t1,M4Val,true);
       ExpToIncomeAddup(totincobjav,totexpobjav,t2);
       OutVal(320,0,t2,M4Val,true);
       ExpToIncomeAddup(totobjincrbudv,totobjexprbudv,tb2);
       OutVal(400,0,tb2,M4Val,true);
       ExpToIncomeAddup(totobjincbudv,totobjexpbudv,tb1);
       OutVal(480,0,tb1,M4Val,true);
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8689),false);
       OutVal(240,0,((t1)/totincobjv)*100,M4Val,true);
       OutVal(320,0,((t2)/totincobjav)*100,M4Val,true);
       OutVal(400,0,((tb2)/totobjincrbudv)*100,M4Val,true);
       OutVal(480,0,((tb1)/totobjincbudv)*100,M4Val,true);       
       EndFormat;       
       StartFormat(15);
       OutString(15,0,USetStr(8683),false);
       OutVal(240,0,totobjq22 + totobjq31 + totobjq33,M4Qty,true);
       OutVal(320,0,totobjaq22 + totobjaq31 + totobjaq33,M4Qty,true);
       EndFormat;
       if (wwf) then begin
       StartFormat(15);
       OutString(15,0,"5031-5032 R¿rlegger",false);
       OutVal(240,0,totobjq31,M4Qty,true);
       OutVal(320,0,totobjaq31,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"5033-5034 Larling",false);
       OutVal(240,0,totobjq33,M4Qty,true);
       OutVal(320,0,totobjaq33,M4Qty,true);
       EndFormat;              
       StartFormat(15);
       OutString(15,0,"4522 Innleid",false);
       OutVal(240,0,totobjq22,M4Qty,true);
       OutVal(320,0,totobjaq22,M4Qty,true);
       EndFormat;    
       StartFormat(15);
       OutString(15,0,"DB / Antall",false);
       OutVal(240,0,t1/(totobjq22 + totobjq31 + totobjq33),M4Qty,true);
       OutVal(320,0,t2/(totobjaq22 + totobjaq31 + totobjaq33),M4Qty,true);
       EndFormat;
       end;          
       totincgrv = totincgrv + totincobjv;
       totexpgrv = totexpgrv + totexpobjv;
       totincgrav = totincgrav + totincobjav;
       totexpgrav = totexpgrav + totexpobjav;
       totgrincbudv = totgrincbudv + totobjincbudv;
       totgrexpbudv = totgrexpbudv + totobjexpbudv;
       totgrincrbudv = totgrincrbudv + totobjincrbudv;
       totgrexprbudv = totgrexprbudv + totobjexprbudv;
       totincobjv = blankv;
       totexpobjv = blankv;       
       totincobjav = blankv;
       totexpobjav = blankv;
       totobjincbudv = blankv;
       totobjexpbudv = blankv;
       totobjincrbudv = blankv;
       totobjexprbudv = blankv;
       totobjq = blankv;
       totobjaq = blankv;
       totobjq22 = blankv;
       totobjq31 = blankv;
       totobjq33 = blankv;
       totobjaq22 = blankv;
       totobjaq31 = blankv;
       totobjaq33 = blankv;
     end;       
     GetChar(objcode,tstr,len(objcode)-1);
     if ((tstr<>":") and first<>2) then begin             
       PrintObjectGroupTotal(totFBr,FB2r,RepSpec,objcode,lastobjg,lastobj,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,first);
       Gray_Divider(0,1); 
       if ((RepSpec.flags[2]==1) and (RepSpec.Media==printer) and (firstobjf==false)) then begin//JJ         
         NewPage(false);
       end else begin
         if (firstobjf==false) then begin
           StartFormat(15);     
           EndFormat;
         end;  
       end;       
       firstobjf = false;
       StartFormat(15);
       OutString(0,0,USetStr(8687),false);
       OutString(100,0,objcode,false);
       EndFormat;     
       Gray_Divider(0,1);    
       StartFormat(15);
       OutString(15,0,USetStr(8684),false);
       OutString(240,0,USetStr(8686),true);
       OutString(320,0,USetStr(8682),true);
       OutString(400,0,USetStr(8690),true);         
       OutString(480,0,USetStr(8685),true);         
       EndFormat;          
       lastobj = objcode;
       first = 0;
     end;  
  end;
  t1 = BlankVal;
  t2 = BlankVal;
  tb1 = BlankVal;
  tb2 = BlankVal;
//  PrintObjectHeader(RepSpec,totFBr,FB2r,ObjBalr.Object,first,lastobj,lastobjg,totincobjv,totexpobjv,totincobjav,totexpobjav,totogrq,totograq,totincgrv,totexpgrv,totincgrav,totexpgrav,totobjexpbudv,totobjincbudv,totobjexprbudv,totobjincrbudv,totgrincbudv,totgrexpbudv,totgrincrbudv,totgrexprbudv,firstobjf,totobjq22,totobjq31,totobjq33,totobjaq22,totobjaq31,totobjaq33);
  PrintReportTotals(totrepq,totrepaq,totincrepv,totexprepv,totincrepav,totexprepav,totrepincbudv,totrepexpbudv,totrepincrbudv,totrepexprbudv);
  if (wwf) then begin    
    StartFormat(15);
     OutString(15,0,"5031-5032 R¿rlegger",false);
     OutVal(240,0,totgrq31,M4Qty,true);
     OutVal(320,0,totgraq31,M4Qty,true);
    EndFormat;  
    StartFormat(15);
     OutString(15,0,"5033-5034 Larling",false);
     OutVal(240,0,totgrq33,M4Qty,true);     
     OutVal(320,0,totgraq33,M4Qty,true);
    EndFormat;         
    StartFormat(15);
     OutString(15,0,"4522 Innleid",false);
     OutVal(240,0,totgrq22,M4Qty,true);     
     OutVal(320,0,totgraq22,M4Qty,true);
    EndFormat;         
    ExpToIncomeAddup(totincrepv,totexprepv,t1);       
    ExpToIncomeAddup(totincrepav,totexprepav,t2);       
    StartFormat(15);
    OutString(15,0,"DB / Antall",false);
    OutVal(240,0,-t1/totrepq,M4Qty,true);
    OutVal(320,0,-t2/totrepaq,M4Qty,true);
    EndFormat;
  end;
  EndJob;  
  return;
end;
