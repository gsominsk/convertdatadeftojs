external function string 20 FindJobCustomerCode(record JobVc);
external function string 60 FindJobCustomerName(record JobVc);
external function Boolean SkipResTest(record ReservationStatusVc,Boolean);
external procedure HTRess(string,string,var string);
external procedure HTRooms(string,string,var string);
external function Boolean FindStringInString(string,string);


Function
Boolean GetNextReserved(string rescode,var record JobVc theJobr,LongInt prevjob,var Date dp,var Time tp,Boolean bigfoundf)
begin
  record JobVc Jobr;
  record ReservationStatusVc rsr;
  Boolean testf,res;
  Boolean foundf;
  Date blnkdat;
  
  res = false;
  ResetLoop(Jobr);
  foundf = bigfoundf;
  Jobr.ResCode = rescode;
  Jobr.TransDate = dp;
  while (LoopKey("ResStartTime",Jobr,3,foundf)) begin
//    if (DateInRange(dp,Jobr.TransDate,Jobr.EndDate)==false) then begin foundf = false; end;
    if (Jobr.ResCode<>rescode) then begin foundf = false; end;
    testf = false;
    if (foundf) then begin testf = true; end;
    if (Jobr.SerNr==prevjob) then begin testf = false; end;
    if (testf) then begin
      rsr.Code = Jobr.ResStatus;
      if (ReadFirstMain(rsr,1,true)) then begin
        if (SkipResTest(rsr,true)) then begin
          testf = false;
        end;
      end;
      if (Jobr.TransDate==dp) then begin
        if (BlankTime(Jobr.StartTime)==false) then begin
          if (tp<Jobr.StartTime) then begin
            testf = false;
          end;
        end;
      end;
      if (Jobr.EndDate==dp) then begin
        if (BlankTime(Jobr.EndTime)==false) then begin
          if (tp>Jobr.EndTime) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        RecordCopy(theJobr,Jobr);
        dp = Jobr.EndDate;
        tp = Jobr.EndTime;
        res = true;
        goto L99;
      end;
    end;
  end;
L99:;
  GetNextReserved = res;
  return;
end;

procedure PrintResource(record ResVc Resr)
begin
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,"DblResVc",Resr.Code,false);
  OutString(7,0,Resr.Name,false);
  OutString(8,0,Resr.Number,false);
  OutString(9,0,Resr.Spec,false);
  EndFormat;
  Gray_Divider(0,1);
  return;
end;

procedure ListResJobs(record ResVc Resr,Date fr,Date to,Integer alwaysprint)
begin
  record JobVc Jobr;
  row JobVc Jobrw;
  Boolean foundf;
  Date curdat;
  Time curtim;
  LongInt prevjob;
  Boolean firstf;
  Integer rwcnt,i;
  
  firstf = true;
  foundf = true;
  curdat = fr;
  if (alwaysprint==1) then begin
    PrintResource(Resr);
    firstf = false; 
  end;
  prevjob = -1;
  while (GetNextReserved(Resr.Code,Jobr,prevjob,curdat,curtim,foundf)) begin
    if ((curdat<fr) or (Jobr.TransDate>to)) then begin foundf = false; end;
//    if (curdat>to) then begin foundf = false; end;
    if (foundf) then begin
      if (firstf) then begin
        PrintResource(Resr);
        firstf = false; 
      end;
      StartFormat(15);
      OutLongInt(2,"DblJobVc",Jobr.SerNr,false);
      OutString(3,"DblCUVc",FindJobCustomerCode(Jobr),false);
      OutString(4,0,FindJobCustomerName(Jobr),false);
      OutDate(5,0,Jobr.TransDate,true);
      OutDate(6,0,Jobr.EndDate,true);
      OutVal(1,0,Jobr.Sum4,M4Val,true);
      EndFormat;
      rwcnt = MatRowCnt(Jobr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Jobr,i,Jobrw);
        StartFormat(15);
        OutString(3,"DblProfileVc",Jobrw.GuestCode,false);
        OutString(4,0,Jobrw.CUName,false);
        EndFormat;
      end;
      prevjob = Jobr.SerNr;
    end;
  end;
  if (firstf==false) then begin
    StartFormat(15);
    EndFormat;
  end;
  return;
end;

global
procedure ResHistRnRun(record RcVc RepSpec,Boolean hotelf)
BEGIN
  record ResVc Resr;
  Boolean found,testf;
  LongInt rescnt;
  Integer rw;
  string 255 frres,tores,tstr;

  rescnt = 0;
  rw = 1;
  frres = FirstInRange(RepSpec.f1,5);
  tores = LastInRange(RepSpec.f1,5);
  if (hotelf) then begin
    StartReportJob(USetStr(10169));  
    HTRooms(frres,tores,tstr);
  end else begin
    StartReportJob(USetStr(10170));  
    HTRess(frres,tores,tstr);
  end;
  Header(rw,tstr,1);
  EndHeader;
  SetRepCol(2,20);
  SetRepCol(3,90);
  SetRepCol(4,150);
  SetRepCol(5,320);
  SetRepCol(6,410);
  SetRepCol(7,70);
  SetRepCol(8,250);
  SetRepCol(9,330);
  StartFormat(15);
  OutString(0,0,USetStr(10171),false);
  OutString(70,0,USetStr(10172),false);
  OutString(250,0,USetStr(10173),false);
  OutString(330,0,USetStr(10174),false);
  EndFormat;
  Resr.Code = frres;
  found = true;
  while (LoopMain(Resr,1,found)) begin
    testf = true;
    if (nonblank(tores)) then begin
      if (Resr.Code>tores) then begin found = false; end;
    end;  
    if (nonblank(RepSpec.f2)) then begin
      if (FindStringInString(Resr.Name,RepSpec.f2)==false) then begin testf = false; end;
    end;  
    if (found==false) then begin testf = false; end;
    if (testf) then begin
      ListResJobs(Resr,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.flags[0]);
    end;
  end;    
  EndJob;
  RETURN;
END;

global
procedure ResHistRn(record RcVc RepSpec)
BEGIN
  ResHistRnRun(RepSpec,false);
  RETURN;
END;

global
procedure RoomHistRn(record RcVc RepSpec)
BEGIN
  ResHistRnRun(RepSpec,true);
  RETURN;
END;
