external procedure GetUserName(String,var String);
external procedure BuildRestaurantOrder(record RestAccVc,var array Integer,var Integer,var array Integer,var Integer);

global
procedure KitchenRn(record RcVc RepSpec)
BEGIN
  record RestAccVc RestAccr;
  row RestAccVc RestAccrw;
  array Integer kitcharr;
  array Integer bararr;
  Integer kitchi,bari,i;
  string 200 tstr;
  
  RestAccr.SerNr = RepSpec.long1;
  if (ReadFirstMain(RestAccr,1,true)) then begin
    BuildRestaurantOrder(RestAccr,kitcharr,kitchi,bararr,bari);
    if (kitchi>0) then begin
      StartReportNoHeaderJob("Kitchen Order");
      EndHeader;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"" & USetStr(11058) & " " & RestAccr.SerNr & "  " & USetStr(10075) & " " & RestAccr.CustCode & "  " & /* RestAccr.TransDate & "  " & */ RestAccr.TransTime,false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;
      for (i=0;i<kitchi;i=i+1) begin
        MatRowGet(RestAccr,kitcharr[i],RestAccrw);
        switch (RestAccrw.stp) begin
          case 1:
            StartFormat(15);
            OutVal(0,0,RestAccrw.Quant,M4UVal,false);
            OutString(40,0,RestAccrw.Spec,false);
            EndFormat;
          case 3:
            StartFormat(15);
            OutVal(0,0,-RestAccrw.Quant,M4UVal,false);
            OutString(40,0,RestAccrw.Spec,false);
            EndFormat;
        end;
      end;
      StartFormat(15);
      EndFormat;
      GetUserName(RestAccr.Cashier,tstr);
      StartFormat(15);
      OutString(0,0,USetStr(11192) & ": " & tstr,false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;

/* Debug
      StartFormat(15);
      OutString(0,0,"---------------BAR--------------------",false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"" & USetStr(11058) & " " & RestAccr.SerNr & "  " & USetStr(10075) & " " & RestAccr.CustCode & "  " & RestAccr.TransTime,false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;
      for (i=0;i<bari;i=i+1) begin
        MatRowGet(RestAccr,bararr[i],RestAccrw);
        switch (RestAccrw.stp) begin
          case 1:
            StartFormat(15);
            OutVal(0,0,RestAccrw.Quant,M4UVal,false);
            OutString(40,0,RestAccrw.Spec,false);
            EndFormat;
          case 3:
            StartFormat(15);
            OutVal(0,0,-RestAccrw.Quant,M4UVal,false);
            OutString(40,0,RestAccrw.Spec,false);
            EndFormat;
        end;
      end;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;

      StartFormat(15);
      OutString(0,0,"---------------ALL--------------------",false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"" & USetStr(11058) & " " & RestAccr.SerNr & "  " & USetStr(10075) & " " & RestAccr.CustCode & "  " & RestAccr.TransTime,false);
      EndFormat;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;
      bari = MatRowCnt(RestAccr);
      for (i=0;i<bari;i=i+1) begin
        MatRowGet(RestAccr,i,RestAccrw);
        switch (RestAccrw.stp) begin
          case 1:
            StartFormat(15);
            OutVal(0,0,RestAccrw.Quant,M4UVal,false);
            OutString(40,0,RestAccrw.Spec,false);
            OutString(400,0,RestAccrw.AlreadyPrinted,false);
            EndFormat;
          case 3:
            StartFormat(15);
            OutVal(0,0,-RestAccrw.Quant,M4UVal,false);
            OutString(40,0,RestAccrw.Spec,false);
            OutString(400,0,RestAccrw.AlreadyPrinted,false);
            EndFormat;
        end;
      end;
      StartFormat(15);
      OutString(0,0,"--------------------------------------",false);
      EndFormat;

*/
      EndJob;
    end;
  end;
  RETURN;
END;

