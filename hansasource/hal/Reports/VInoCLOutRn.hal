external function Integer PMCheckType(string,var string,var string);
external function Boolean CLOutforOPExists(LongInt,string,var LongInt);
external function Boolean CLOutforVIExists(LongInt,string,var LongInt);

procedure PrintHeader(Boolean invf)
BEGIN
  string 255 tstr;

  SetRepCol(3,65);
  SetRepCol(4,120);
  SetRepCol(5,200);
  SetRepCol(7,430);
  SetRepCol(8,470);
  if (invf) then begin
    StartFormat(15);
    OutString(0,0,USetStr(1330),false);
    EndFormat;
  end else begin
    StartFormat(15);
    OutString(0,0,USetStr(10471),false);
    EndFormat;
  end;
  StartFormat(15);
  OutString(0,0,USetStr(10472),false);
  OutString(3,0,USetStr(10473),false);
  OutString(4,0,USetStr(10476),false);
  if (invf) then begin
    OutString(5,0,USetStr(10474),false);
  end else begin
    OutString(5,0,USetStr(10475),false);
  end;  
  OutString(7,0,USetStr(10496),true);
  OutString(8,0,USetStr(1532),false);
  EndFormat;
  Gray_Divider(0,1);
  RETURN;
END;

procedure PrintPayments(record RcVc RepSpec)
BEGIN
  record OPVc OPr;
  row OPVc OPrw;
  Integer i,rwcnt;
  Boolean TrHs,firstf,testf;
  string 255 tstr;
  LongInt clout;
  
  firstf = true;
  TrHs = true;
  OPr.TransDate = RepSpec.sStartDate;
  while (LoopKey("TransDate",OPr,1,TrHs)) begin
    if (OPr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      testf = true;
      if (PMCheckType(OPr.PayMode,tstr,tstr)!=5) then begin
        testf = false;
      end;      
      if (CLOutforOPExists(OPr.SerNr,"OPVc",clout)) then begin
        testf = false;
      end;
      if (testf) then begin
        if (firstf) then begin
          PrintHeader(false);
          firstf = false;
        end;
        StartFormat(15);
         OutString(0,"DblVePerOP",OPr.SerNr,false);
         OutDate(3,0,OPr.TransDate,false);
         OutString(5,0,OPr.BankName,false);
         if (OPr.DoneFlag!=0) then begin
           OutString(8,0,USetStr(10487),false);           
         end;
        EndFormat;
      end;
    end;
  end;
  RETURN;
END;

global
procedure VInoCLOutRn(record RcVc RepSpec)
BEGIN
  record VIVc VIr;
  Boolean TrHs,firstf,testf;
  LongInt frinv,toinv;
  LongInt clout;
  val totpayval;
  
  frinv = FirstInRange(RepSpec.f1,10);
  toinv = LastInRange(RepSpec.f1,10);
  StartReportJob(USetStr(10470));
  EndHeader;
  firstf = true;
  TrHs = true;
  VIr.InvType = kInvoiceTypeCash;
  VIr.SerNr = frinv;
  while (LoopKey("InvType",VIr,2,TrHs)) begin
    if (VIr.InvType!=kInvoiceTypeCash) then begin
      TrHs = false;
    end;
    if (nonblank(RepSpec.f1)) then begin
      if (VIr.SerNr>toinv) then begin
        TrHs = false;
      end;      
    end;
    if (TrHs) then begin
      testf = true;
      if (CLOutforVIExists(VIr.SerNr,"VIVc",clout)) then begin
        testf = false;
      end;
      if (DateInRange(VIr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;
      if (testf) then begin
        if (firstf) then begin
          PrintHeader(true);
          firstf = false;
        end;
        StartFormat(15);
         OutString(0,"DblVIVc",VIr.SerNr,false);
         OutDate(3,0,VIr.TransDate,false);
         OutString(4,0,VIr.VECode,false);
         OutString(5,0,VIr.VEName,false);
         OutVal(7,0,VIr.PayVal,M4Val,true);
         if (VIr.OKFlag!=0) then begin
           OutString(8,0,USetStr(10487),false);           
         end;
        EndFormat;
        totpayval = totpayval + VIr.PayVal;
      end;  
    end;
  end;
  Gray_Divider(350,1);
  StartFormat(15);
   OutVal(7,0,totpayval,M4Val,true);
  EndFormat;
  if (RepSpec.flags[0]!=0) then begin
    PrintPayments(RepSpec);
  end;
  EndJob;
  RETURN;
END;