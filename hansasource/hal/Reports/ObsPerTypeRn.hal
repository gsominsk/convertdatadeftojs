external function Boolean ObservationExists(record JobVc,Date,Date,Date,string,string,string);
external procedure PrintGuestObservation(record JobVc,Date,Date,Date,string,string,string);
external function LongInt FindReservation(string,Date,Time);
external procedure HTObsTypes(string,string,var string);
external procedure HT2Per(Date,Date,var string);

global
function Boolean CheckIfPrintObs(Date startdate,Date enddat,record GuestObserVc GuestObserr)
BEGIN
  Boolean res;
    
  res = true;
  if (GuestObserr.Type!=0) then begin
    if (nonblankdate(GuestObserr.TransDate)) then begin
      if (DateInRange(GuestObserr.TransDate,startdate,enddat)==false) then begin
        res = false;
      end;
    end else begin
      if (GuestObserr.StartDate>enddat) then begin res = false; end;
      if (GuestObserr.EndDate<startdate) then begin res = false; end;
    end;
  end;
  CheckIfPrintObs = res;
  RETURN;
END;

procedure PrintObservationTypes(record RcVc RepSpec,Array string aobtypes,Array Integer aobtypcnt,Integer acnt)
BEGIN
  Integer i;
  LongInt tot;
  record OBTypeVc OBTyper;

  tot = 0;
  for (i=0;i<acnt;i=i+1) begin
    OBTyper.Code = aobtypes[i];
    if (ReadFirstMain(OBTyper,1,true)) then begin
    end;
    StartFormat(15);
     OutString(0,0,aobtypes[i],false);
     OutString(2,0,OBTyper.Comment,false);
     OutLongInt(5,0,aobtypcnt[i],false);
    EndFormat;
    tot = tot + aobtypcnt[i];
  end;
  Gray_Divider(0,1);
  StartFormat(15);
   OutLongInt(5,0,tot,false);
  EndFormat;
  RETURN;
END;
  
procedure FindObservationTypes(record RcVc RepSpec,record ResVc Room,string frtyp,string totyp,string guestcode,
                               Array string aobtypes,Array Integer aobtypcnt,var Integer acnt)
BEGIN
  record GuestObserVc GuestObserr;
  Boolean TrHs,found,testf;
  Integer i;

  TrHs = true;
  GuestObserr.Guest = guestcode;
  while LoopKey("Guest",GuestObserr,1,TrHs) begin
    if (GuestObserr.Guest!=guestcode) then begin
      TrHs = false;
    end;
    testf = TrHs;
    if (nonblank(RepSpec.f1)) then begin
      if (GuestObserr.OBType<frtyp) then begin testf = false; end;
      if (GuestObserr.OBType>totyp) then begin testf = false; end;
    end;
    if (CheckIfPrintObs(RepSpec.sStartDate,RepSpec.sEndDate,GuestObserr)==false) then begin
      testf = false;
    end;
    if (TrHs and testf) then begin
      found = false;
      for (i=0;i<acnt;i=i+1) begin
        if (aobtypes[i]==GuestObserr.OBType) then begin
          aobtypcnt[i] = aobtypcnt[i] + 1;
          found = true;
        end;
      end;
      if (found==false) then begin
        aobtypes[acnt] = GuestObserr.OBType;
        aobtypcnt[acnt] = 1;
        acnt = acnt + 1; 
      end;
    end;
  end;
  RETURN;
END;
  
global
procedure ObsPerTypeRn(record RcVc RepSpec)
BEGIN
  string 255 tstr;
  Integer rw;
  Boolean found,testf;
  Boolean printroomf;
  record ResVc Room;
  record JobVc Jobr;
  row JobVc Jobrw;
  Integer i,rwcnt;
  string 10 frtyp,totyp;
  Time btime;
  Array string 10 aobtypes;
  Array Integer aobtypcnt;
  Integer acnt;

  frtyp = FirstInRange(RepSpec.f1,10);
  totyp = LastInRange(RepSpec.f1,10);
  StartReportJob(USetStr(10205));
   rw = 1;
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   HTObsTypes(frtyp,totyp,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
  EndHeader;
  SetRepCol(2,50);
  SetRepCol(3,140);  
  SetRepCol(4,200);  
  SetRepCol(5,270);  
  if (RepSpec.flags[0]==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(12644),false);
    OutString(2,0,USetStr(12641),false);
    OutString(240,0,USetStr(12643),false);
    OutString(1,0,USetStr(12642),true);
    EndFormat;
  end else begin
    StartFormat(15);
    OutString(0,0,USetStr(12645),false);
    OutString(2,0,USetStr(12643),false);
    OutString(5,0,USetStr(12646),false);
    EndFormat;
  end;
  Gray_Divider(0,1);

  found = true;
  while (LoopMain(Room,1,found)) begin
    testf = true;
    if (found and testf) then begin
      Jobr.SerNr = FindReservation(Room.Code,RepSpec.sStartDate,btime);
      if (Jobr.SerNr==-1) then begin
        Jobr.SerNr = FindReservation(Room.Code,RepSpec.sEndDate,btime);
      end;      
      if (ReadFirstMain(Jobr,1,true)) then begin
        if (RepSpec.flags[0]==0) then begin
          if (ObservationExists(Jobr,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.d1,"",frtyp,totyp)) then begin
            PrintGuestObservation(Jobr,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.d1,"",frtyp,totyp);
          end;
        end else begin
          rwcnt = MatrowCnt(Jobr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatrowGet(Jobr,i,Jobrw);
            FindObservationTypes(RepSpec,Room,frtyp,totyp,Jobrw.GuestCode,aobtypes,aobtypcnt,acnt);
          end;
        end;
      end;
    end;
  end;
  if (RepSpec.flags[0]!=0) then begin
    PrintObservationTypes(RepSpec,aobtypes,aobtypcnt,acnt);
  end;
  EndJob;
  RETURN;
END;