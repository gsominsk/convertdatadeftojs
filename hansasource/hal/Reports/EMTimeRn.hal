external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external function Time TimeDiff(Time,Time);
external procedure HTDetailLevel(Integer, var string);
external procedure HT2Per(Date, Date, var string);
external procedure ExtractObj(string,var Integer,var string);
external procedure FindTargetTimeForType(record RcVc,string,string,string,var val);
external procedure FindTargetTimeOverView(record RcVc,string,var val,string,string,string);

procedure SortTotals(var record TRVc TRr)
begin
  integer m,cond;
  row TRVc TRrw;
  row TRVc TR1rw;
  integer Y;
  string 60 comment,objects;
  val cred,deb;
  integer k;
  val btemp,ttemp,itemp,dtemp;
  string 20 itemtemp;

  cond = 1;
  k = MatRowCnt(TRr) -1;
  while (cond==1) begin
    cond = 0;
    for (m=0;m<k;m=m+1) begin
      MatRowGet(TRr,m,TRrw);
      MatRowGet(TRr,m+1,TR1rw);
      if (TRrw.Objects > TR1rw.Objects) then begin
        cond = 1;
        
        objects = TRrw.Objects ;
        comment = TRrw.Comment;
        cred    = TRrw.CredVal;
        deb     = TRrw.DebVal;
        Y       = TRrw.CorrYc;
        
        TRrw.Objects = TR1rw.Objects;
        TRrw.Comment = TR1rw.Comment;
        TRrw.CredVal = TR1rw.CredVal;
        TRrw.DebVal  = TR1rw.DebVal;
        TRrw.CorrYc  = TR1rw.CorrYc;
       
        TR1rw.Objects = objects;
        TR1rw.Comment = comment;
        TR1rw.CredVal = cred;
        TR1rw.DebVal  = deb;
        TR1rw.CorrYc  = Y;
       
        MatRowPut(TRr,m,TRrw);
        MatRowPut(TRr,m+1,TR1rw);
      end;
    end;
  end; 
  return;
end;

global
procedure FillUsersTargtimeList(record RcVc RepSpec,string person,var record TargTimeVc TargTimer)
begin
  record TargTimeVc TargTime2r;
  record TargTimeVc TargTime3r;
  row TargTimeVc TargTime2rw;
  row TargTimeVc TargTimerw;
  Integer rwcnt,i;
  Integer rwcnt2,i2;
  Boolean addedf;
  Boolean TrHs,onebefore;

  TargTime2r.Person = person;
  onebefore = false;
  TrHs = true;
  while (LoopMain(TargTime2r,1,TrHs)) begin
    if (TargTime2r.Person!=person) then begin TrHs = false; end;
    if (TrHs) then begin    
      if (DateInRange(TargTime2r.StartDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin
        rwcnt2 = MatRowCnt(TargTime2r);
        for (i2=0;i2<rwcnt2;i2=i2+1) begin
          addedf = false;
          MatRowGet(TargTime2r,i2,TargTime2rw);
          rwcnt = MatRowCnt(TargTimer);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(TargTimer,i,TargTimerw);
            if (TargTimerw.ActType==TargTime2rw.ActType) then begin
              addedf = true;
            end;
          end;
          if (addedf==false) then begin
            MatRowPut(TargTimer,rwcnt,TargTime2rw);
          end;
        end;
      end else begin
        if (TargTime2r.StartDate<RepSpec.sStartDate) then begin
          RecordCopy(TargTime3r,TargTime2r);
          onebefore = true;
        end;
      end;  
    end;  
  end;
  if (onebefore) then begin
    rwcnt2 = MatRowCnt(TargTime3r);
    for (i2=0;i2<rwcnt2;i2=i2+1) begin
      addedf = false;
      MatRowGet(TargTime3r,i2,TargTime2rw);
      rwcnt = MatRowCnt(TargTimer);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TargTimer,i,TargTimerw);
        if (TargTimerw.ActType==TargTime2rw.ActType) then begin
          addedf = true;
        end;
      end;
      if (addedf==false) then begin
        MatRowPut(TargTimer,rwcnt,TargTime2rw);
      end;
    end;
  end;
  return;
end;

Function
Boolean UserIsInDispGroup(string uscode,string dispgroup)
begin
  Boolean res;
  record CalDispGroupBlock CDr;
  row CalDispGroupBlock CDrw;
  Integer rwcnt,i;
  
  res = false;
  BlockLoad(CDr);
  rwcnt = MatRowCnt(CDr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CDr,i,CDrw);
    if (dispgroup==CDrw.Code) then begin
      if (SetInSet(uscode,CDrw.DefStr)) then begin
        res = true;
      end;
    end;
  end;
  UserIsInDispGroup = res;
  return;
end;

Function
Integer GetATGRSubTot(string ActTypeGr)
begin
  record ActTypeGrVc ATGRr;
  Integer res;

  res = 0;
  ATGRr.Code = ActTypeGr;
  if (ReadFirstMain(ATGRr,1,true)) then begin
    if (ATGRr.PaidTotal==1) then begin 
      if (ATGRr.AbsenceTotal==1) then begin
        res = 3;  //Unpaid absence
      end else begin
        res = 2;  //Unpaid work
      end;
    end else begin
      if (ATGRr.AbsenceTotal==1) then begin 
        res = 1; //Paid absence
      end else begin
//        res = 4; //Paid work should be same as zero
      end;
    end;
  end;
  GetATGRSubTot = res;
  return;
end;

Function Boolean AddUserTargToTrans(record TargTimeVc TargTimer,var record TRVc TRr,Integer artmode,string usercode,string username,string actclass,string acttype)
begin
  record ActTypeVc ATr;
  row TargTimeVc TargTimerw;
  row TRVc TRrw;
  Integer trrwcnt,rwcnt;
  Integer i,j;
  Boolean foundf;
  Boolean res;
  string 20 atclass;
  Integer SubTotal;
  Boolean test;
  string 5 frtyp,totyp;
  frtyp = FirstInRange(acttype,5);
  totyp = LastInRange(acttype,5);
  
  res = false;
  rwcnt = MatRowCnt(TargTimer);
  for (i=0;i<rwcnt;i=i+1) begin
    foundf = false;
    MatRowGet(TargTimer,i,TargTimerw);
    ATr.Code = TargTimerw.ActType;
    if (ReadFirstMain(ATr,1,true)) then begin
      atclass = ATr.ActTypeGr;
      SubTotal = GetATGRSubTot(ATr.ActTypeGr);
    end else begin
      atclass = "";
      SubTotal = 0;
    end;
    test = true;
    if (nonblank(acttype)) then begin
      if ((TargTimerw.ActType<frtyp) or (TargTimerw.ActType>totyp)) then begin
        test = false;
      end;
    end;      
    if (nonblank(actclass)) then begin
//    if (actclass<>atclass) then begin
      if (SetInSet(atclass,actclass)==false) then begin
        test = false;
      end;
    end;
    if (test) then begin  
    trrwcnt = MatRowCnt(TRr);
    for (j=0;j<trrwcnt;j=j+1) begin
      MatRowGet(TRr,j,TRrw);
      switch (artmode) begin
        case 0:
          if (TRrw.AccNumber==usercode) then begin foundf = true; end;
        case 1:
          if (TRrw.Objects==TargTimerw.ActType) then begin foundf = true; end;
        case 2:
          if (TRrw.Objects==TargTimerw.ActType) then begin foundf = true; end;
        case 3:
          if (TRrw.Comment==atclass) then begin foundf = true; end;
        case 4:
          if (TRrw.AccNumber==usercode) then begin foundf = true; end;
      end;
      if ((artmode==0) or (artmode==4)) then begin
        if (TRrw.AccNumber==usercode) then begin
          foundf = true;
        end;
      end else begin
        if (TRrw.Objects==TargTimerw.ActType) then begin
          foundf = true;
        end;
      end;
    end;
    if (foundf==false) then begin
      if ((artmode==0) or (artmode==4)) then begin
        TRrw.AccNumber = usercode;
        TRrw.Comment = username;
      end else begin
        TRrw.AccNumber = "";
        TRrw.Comment = atclass;
      end;
      switch (artmode) begin
        case 0:
          ;
        otherwise
          TRrw.Objects = TargTimerw.ActType;
      end;
      TRrw.DebVal = BlankVal;
      TRrw.CredVal = BlankVal;
      TRrw.CorrYc = SubTotal;
      MatRowPut(TRr,trrwcnt,TRrw);
      res = true;
    end;
    end;
  end;
  AddUserTargToTrans = res;
  return;
end;

procedure PrintTimeTotalRows(record RcVc RepSpec,val dv,val cv)
begin
  if (RepSpec.flags[0]==0) then begin
    if ((cv==BlankVal) or (dv==BlankVal)) then begin
      OutString(1,0,"-   ",true);
    end else begin
      if (RepSpec.flags[7]==0) then begin
        OutVal(1,0,(cv/dv) * 100,M4Prcnt,true);
      end else begin
        OutVal(1,0,((dv/cv)*100)-100,M4Prcnt,true);
      end;
    end;
  end else begin
    if (RepSpec.flags[7]==0) then begin
      OutVal(1,0,cv-dv,M4UVal,true);
    end else begin
      OutVal(1,0,dv-cv,M4UVal,true);
    end;
  end;
  return;
end;

procedure AddRowToTotTR(var record TRVc totTRr,row TRVc TRrw)
begin
  row TRVc TR2rw;
  Integer i,rwcnt;
  Boolean addedf;
  
  addedf = false;
  rwcnt = MatRowCnt(totTRr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(totTRr,i,TR2rw);
    if (TR2rw.Objects==TRrw.Objects) and (TR2rw.Comment==TRrw.Comment) then begin
      TR2rw.DebVal = TR2rw.DebVal + TRrw.DebVal;
      TR2rw.CredVal = TR2rw.CredVal + TRrw.CredVal;
      MatRowPut(totTRr,i,TR2rw);
      addedf = true;
    end;
  end;
  if (addedf==false) then begin
    MatRowPut(totTRr,rwcnt,TRrw);
  end;
  return;
end;

procedure EMTime1CompanyRn(record RcVc RepSpec)
begin
  record CalDispGroupBlock DispGroupRec;
  row CalDispGroupBlock DispGrouprw;
  LongInt totusers;
  string 200 s1,s2,s3,s4,s5,s6,s7;
  record UserVc USr;
  Boolean usfoundf,matchf,ustestf,atfoundf;
  record PRVc PRr;
  record ActVc Actr;
  record ActTypeVc ATr;
  record ActTypeGrVc ATGrr;
  record TRVc TRr; /* the array of records */
  record TRVc totTRr;
  row TRVc TRrw;
  row TRVc TR2rw;
  record TargTimeVc TargTimer;
  Boolean testf,foundf,printheadf;
  string 20 frus,tous;
  string 20 frpr,topr;
  string 20 frcu,tocu;
  string 20 frtyp,totyp;
  string 200 headitem;
  string 5 usercode,actclass;
  val va,vb,vc,tothour,totinv,v,t;
  Integer rwcnt,trrwcnt,i,j;
  Integer rw,pos;

  totusers = 0;  
  BlockLoad(DispGroupRec);
  frus = FirstInRange(RepSpec.f1,5);
  tous = LastInRange(RepSpec.f1,5);
  frpr = FirstInRange(RepSpec.f2,20);
  topr = LastInRange(RepSpec.f2,20);
  frcu = FirstInRange(RepSpec.f6,20);
  tocu = LastInRange(RepSpec.f6,20);
  frtyp = FirstInRange(RepSpec.f3,5);
  totyp = LastInRange(RepSpec.f3,5);

  if (((RepSpec.ArtMode==1) and (RepSpec.flags[7]>0)) or 
      ((RepSpec.ArtMode>1) and (RepSpec.flags[7]==0))) then begin
    StartFormat(15);
    OutString(0,0,USetStr(1565),false);
    EndFormat;
  end;
  if (RepSpec.ArtMode==4) then begin
    s1 = USetStr(8744);
  end else begin
    s1 = USetStr(8721);
  end;
  switch (RepSpec.flags[7]) begin
    case 0:
      s2 = USetStr(8722);
      s3 = USetStr(8724);
      s4 = USetStr(8726);
    case 1:
      s2 = USetStr(8732);
      s3 = USetStr(8724);
      s4 = USetStr(8742);
    case 2:
      s2 = USetStr(8732);
      s3 = USetStr(8738);
      s4 = USetStr(8742);
    case 3:
      s2 = USetStr(8738);
      s3 = USetStr(8724);
      s4 = USetStr(8742);
    case 4:
      s2 = USetStr(8732);
      s3 = USetStr(8724);
      s4 = USetStr(8742);
  end;
  if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==4)) then begin
    StartFormat(15);
    OutString(0,0,s1,false);
    OutString(8,0,s2,true);
    OutString(9,0,s3,true);
    OutString(1,0,s4,true);
    EndFormat;
  end else begin
    StartFormat(15);
    OutString(0,0,s1,false);
    EndFormat;
    StartFormat(15);
    if (RepSpec.ArtMode==3) then begin
      OutString(2,0,USetStr(8728),false);
    end else begin
      OutString(2,0,USetStr(8727),false);
    end;
    OutString(7,0,s2,true);
    OutString(8,0,s3,true);
    OutString(9,0,USetStr(8725),true);
    OutString(1,0,s4,true);
    EndFormat;
  end;
  Black_Divider(0,1);
  USr.Code = frus;
  usfoundf = true;
  while (LoopMain(USr,1,usfoundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (USr.Code>tous) then begin
        usfoundf = false;
        rwcnt = 0; 
      end;
    end;
    ustestf = true;
    if (USr.Code=="") then begin
      ustestf = false;
    end;
    if (USr.TerminatedFlag!=0) then begin
      ustestf = false;
    end;
    if (USr.Closed!=0) then begin
      ustestf = false;
    end;
    if (usfoundf==false) then begin
      ustestf = false;
    end;
    if (nonblank(RepSpec.AccStr)) then begin
      if (UserIsInDispGroup(USr.Code,RepSpec.AccStr)==false) then begin
        ustestf = false;
      end;
    end;
    printheadf = false;
    if (ustestf) then begin
      if ((RepSpec.ArtMode<>0) and (RepSpec.ArtMode<>4)) then begin
        RecordNew(TRr);
        rwcnt = 0;
      end;
      RecordNew(TargTimer);
      FillUsersTargtimeList(RepSpec,USr.Code,TargTimer);
      RecordNew(Actr);
      Actr.TransDate = RepSpec.sStartDate;
      Actr.TodoFlag = 0;
      Actr.OKFlag = 0;
      foundf = true;
      headitem = "UserMain:" & USr.Code;
      ResetLoop(Actr);
      while (LoopKey(headitem,Actr,2,foundf)) begin
        if (foundf) then begin
          if (SetInSet(USr.Code,Actr.MainPersons)==false) then begin
            if (SetInSet(USr.Code,Actr.CCPersons)==false) then begin
              foundf = false;
            end;
          end;
        end;
        testf = true;
        if (foundf==false) then begin
          testf = false;
        end;
        if (testf) then begin
          if (Actr.TransDate<RepSpec.sStartDate) then begin
            testf = false;
          end;
          if (Actr.TransDate>RepSpec.sEndDate) then begin
            testf = false;
          end;
          if (Actr.Invalid!=0) then begin testf = false; end;
          if (Actr.CalTimeFlag==0) then begin testf = false; end;
          if (Actr.TodoFlag!=0) then begin testf = false; end;
          if (Actr.PrivateFlag!=0) then begin testf = false; end;
        end;

        ATr.Code = Actr.ActType;
        atfoundf = ReadFirstMain(ATr,1,true);
        if (atfoundf) then begin
          ATGRr.Code = ATr.ActTypeGr;
          if (ReadFirstMain(ATGRr,1,true)) then begin
            if (ATGRr.ExclFromTimeStat<>0) then begin
              testf = false;
            end;
            switch (RepSpec.flags[8]) begin
              case 0: ;
              case 1: if (ATGRr.PaidTotal!=0) then begin testf = false; end;
              case 2: if (ATGRr.PaidTotal!=1) then begin testf = false; end;
            end;
          end else begin
            switch (RepSpec.flags[8]) begin
              case 0: ;
              case 1: testf = false;
              case 2: testf = false;
            end;
          end;
        end else begin
          switch (RepSpec.flags[8]) begin
            case 0: ;
            case 1: testf = false;
            case 2: testf = false;
          end;
        end;
        if (testf) then begin
          if (nonblank(RepSpec.f2)) then begin
            if ((Actr.PRCode<frpr) or (Actr.PRCode>topr)) then begin testf = false; end;
          end;
          if (nonblank(RepSpec.f6)) then begin
            if ((Actr.CUCode<frcu) or (Actr.CUCode>tocu)) then begin testf = false; end;
          end;
          if (testf) then begin 
            testf = ContactInGroupClass(Actr.CUCode,RepSpec.f4,RepSpec.Stext,"CUST","","");    
          end;                
          if (nonblank(RepSpec.f3)) then begin
            if ((Actr.ActType<frtyp) or (Actr.ActType>totyp)) then begin testf = false; end;
          end;
          if (Actr.OKFlag==1) then begin
            if (RepSpec.flags[1]==0) then begin testf = false; end;
          end else begin
            if (RepSpec.flags[2]==0) then begin testf = false; end;
          end;
          if (nonblank(RepSpec.ObjStr)) then begin
            if (atfoundf) then begin
              if (SetInSet(ATr.ActTypeGr,RepSpec.ObjStr)==false) then begin
 //             if (ATr.ActTypeGr<>RepSpec.ObjStr) then begin 
                testf = false;
              end;
            end else begin
              testf = false;
            end;
          end;
          if ((RepSpec.flags[7]==0) or (RepSpec.flags[7]==1)) then begin
            if (Actr.CalTimeFlag==2) then begin
              testf = false;
            end;
          end;
          if (RepSpec.flags[7]==2) then begin
            if (Actr.CalTimeFlag==1) then begin
              testf = false;
            end;
          end;
        end;
        if (testf) then begin
          vb = BlankVal;
          if (BlankTime(Actr.CostTime)) then begin
            va = TimeToVal(TimeDiff(Actr.StartTime,Actr.EndTime));
          end else begin
            va = TimeToVal(Actr.CostTime);
          end;
          if (RepSpec.flags[7]==3) then begin
            if (Actr.CalTimeFlag==2) then begin
              vb = va;
              va = BlankVal;
            end;
          end;
          printheadf = true;
          if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==4)) then begin
            TRrw.AccNumber = USr.Code;
            TRrw.Comment = USr.Name;
          end else begin
            TRrw.AccNumber = "";
            TRrw.Comment = "";
          end;
          TRrw.Objects = "";
          TRrw.DebVal = va;
          TRrw.CredVal = vb;
          TRrw.CorrYc = 0;
          if (RepSpec.flags[7]==0) then begin
            if (nonblank(Actr.PRCode)) then begin
              PRr.Code = Actr.PRCode;
              if (ReadFirstMain(PRr,1,true)) then begin
                if (PRr.Type==0) then begin
                  TRrw.CredVal = va;
                end;
              end;
            end;
          end;
          TRrw.Objects = Actr.ActType;
          if ((RepSpec.ArtMode==1) or (RepSpec.ArtMode==2) or (RepSpec.ArtMode==3)) then begin
            ATr.Code = TRrw.Objects;
            if (ReadFirstMain(ATr,1,true)) then begin
              TRrw.Comment = ATr.ActTypeGr;
              TRrw.CorrYc = GetATGRSubTot(ATr.ActTypeGr);
            end;
          end;
          matchf = false;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(TRr,i,TR2rw);
            if ((RepSpec.ArtMode==0) or (RepSpec.ArtMode==4)) then begin
              if ((TR2rw.AccNumber==TRrw.AccNumber)) then begin
                TR2rw.DebVal = TR2rw.DebVal + TRrw.DebVal;
                TR2rw.CredVal = TR2rw.CredVal + TRrw.CredVal;
                TR2rw.CorrYc = TRrw.CorrYc;
                MatRowPut(TRr,i,TR2rw);
                matchf = true;
              end;
            end;
            if (RepSpec.ArtMode==2) then begin
              if (TR2rw.Objects==TRrw.Objects) then begin
                TR2rw.DebVal = TR2rw.DebVal + TRrw.DebVal;
                TR2rw.CredVal = TR2rw.CredVal + TRrw.CredVal;
                TR2rw.CorrYc = TRrw.CorrYc;
                MatRowPut(TRr,i,TR2rw);
                matchf = true;
              end;
            end;
            if (RepSpec.ArtMode==3) then begin
              if (TR2rw.Comment==TRrw.Comment) then begin
                TR2rw.DebVal = TR2rw.DebVal + TRrw.DebVal;
                TR2rw.CredVal = TR2rw.CredVal + TRrw.CredVal;
                TR2rw.CorrYc = TRrw.CorrYc;
                MatRowPut(TRr,i,TR2rw);
                matchf = true;
              end;
            end;
          end;
          if (matchf==false) then begin
            MatRowPut(TRr,rwcnt,TRrw);
            rwcnt = rwcnt + 1;
          end;
        end;
      end;
      if ((RepSpec.flags[7]==1) or (RepSpec.flags[7]==2)) then begin
        if (AddUserTargToTrans(TargTimer,TRr,RepSpec.ArtMode,USr.Code,USr.Name,RepSpec.ObjStr,RepSpec.f3)) then begin
          printheadf = true;
          rwcnt = MatRowCnt(TRr);
        end;
      end;
      tothour = 0;
      totinv = 0;
      if ((RepSpec.flags[7]==1) or (RepSpec.flags[7]==2)) then begin
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(TRr,i,TRrw);
          va = BlankVal;
          switch (RepSpec.ArtMode) begin
            case 0:
              pos = 0;
              ExtractObj(RepSpec.ObjStr,pos,actclass);
              if (blank(actclass)) then begin
                FindTargetTimeOverView(RepSpec,TRrw.AccNumber,t,frtyp,totyp,actclass);
                va = va + t;
              end else begin 
                while (nonblank(actclass)) begin
                  FindTargetTimeOverView(RepSpec,TRrw.AccNumber,t,frtyp,totyp,actclass);
                  va = va + t;
                  ExtractObj(RepSpec.ObjStr,pos,actclass);
                end;
              end;
            case 1:
              FindTargetTimeForType(RepSpec,USr.Code,TRrw.Objects,"",va);
            case 2:
              FindTargetTimeForType(RepSpec,USr.Code,TRrw.Objects,"",va);
            case 3:
              FindTargetTimeForType(RepSpec,USr.Code,TRrw.Objects,TRrw.Comment,va);       
            case 4:
              pos = 0;
              ExtractObj(RepSpec.ObjStr,pos,actclass);
              while (nonblank(actclass)) begin
                FindTargetTimeOverView(RepSpec,TRrw.AccNumber,t,frtyp,totyp,actclass);
                va = va + t;
                ExtractObj(RepSpec.ObjStr,pos,actclass);
              end;
          end;  
          TRrw.CredVal = va;
          MatRowPut(TRr,i,TRrw);
        end;
      end;
      if ((RepSpec.ArtMode==1) or (RepSpec.ArtMode==2) or (RepSpec.ArtMode==3)) then begin
        if (printheadf) then begin
          totusers = totusers + 1;
          StartFormat(15);
          OutString(0,0,USr.Code,false);
          OutString(3,0,USr.Name,false);
          EndFormat;
          printheadf = false;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(TRr,i,TRrw);
//            if (TRrw.CorrYc==0) then begin
              tothour = tothour + TRrw.DebVal;
              totinv = totinv + TRrw.CredVal;
//            end;
          end;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(TRr,i,TRrw);
            testf = true;
            if (RepSpec.ArtMode!=3) then begin
//              if (TRrw.CorrYc==0) then begin testf = false; end;
            end;
            if (testf) then begin
              ClearRow(TRr,TR2rw,1);
              TR2rw.CorrYc = 0;
              StartFormat(15);
              if ((RepSpec.ArtMode==1) or (RepSpec.ArtMode==2)) then begin
                TR2rw.Objects = TRrw.Objects;
                OutStringID(2,"DblActPersRn",TRrw.Objects,false,TRrw.Objects & "," & USr.Code);
                ATr.Code = TRrw.Objects;
                if (ReadFirstMain(ATr,1,true)) then begin
                  OutString(4,0,ATr.Comment,false);
                  TR2rw.Comment = ATr.Comment;
                end else begin
                  OutString(4,0,"",false);
                end;
              end else begin
                OutString(2,0,TRrw.Comment,false);
                TR2rw.Objects = TRrw.Comment;
                ATGRr.Code = TRrw.Comment;
                if (ReadFirstMain(ATGRr,1,true)) then begin
                  OutString(4,0,ATGRr.Comment,false);
                  TR2rw.Comment = ATGRr.Comment;
                end else begin
                  OutString(4,0,"",false);
                end;
              end;
              OutVal(7,0,TRrw.CredVal,M4Val,true);
              OutVal(8,0,TRrw.DebVal,M4Val,true);
              OutVal(9,0,(TRrw.DebVal/tothour) * 100,M4Val,true);
              PrintTimeTotalRows(RepSpec,TRrw.DebVal,TRrw.CredVal);
              EndFormat;
              TR2rw.CredVal = TRrw.CredVal;
              TR2rw.DebVal = TRrw.DebVal;
              AddRowToTotTR(totTRr,TR2rw);
            end;
          end;
          Gray_Divider(2,1);
          StartFormat(15);
          OutString(170,0,USetStr(8784),false);
          OutVal(7,0,totinv,M4Val,true);
          OutVal(8,0,tothour,M4Val,true);
          OutVal(9,0,100,M4Val,true);
          if (RepSpec.flags[7]==0) then begin
            OutVal(1,0,(totinv/tothour) * 100,M4Val,true);
          end;
          EndFormat;
/* Print The SubTotals */
          for (i=1;i<4;i=i+1) begin
            tothour = 0;
            totinv = 0;
            for (j=0;j<rwcnt;j=j+1) begin
              MatRowGet(TRr,j,TRrw);
              if (TRrw.CorrYc==i) then begin
                tothour = tothour + TRrw.DebVal;
                totinv = totinv + TRrw.CredVal;
                TRrw.CorrYc = 0;
                MatRowPut(TRr,j,TRrw);
              end;
            end;
            if ((totinv>0) or (tothour>0)) then begin
              ClearRow(TRr,TR2rw,1);
              TR2rw.CorrYc = 1;
              StartFormat(15);
              switch (i) begin
                case 1:
                  OutString(170,0,USetStr(8750),false);
                  TR2rw.Comment = USetStr(8750);
                case 2:
                  OutString(170,0,USetStr(8748),false);
                  TR2rw.Comment = USetStr(8748);
                case 3:
                  OutString(170,0,USetStr(8749),false);
                  TR2rw.Comment = USetStr(8749);
              end;
              OutString(7,0,totinv,true);
              OutString(8,0,tothour,true);
              TR2rw.CredVal = totinv;
              TR2rw.DebVal = tothour;
              EndFormat;
              AddRowToTotTR(totTRr,TR2rw);
            end;
          end;
          StartFormat(15);
          EndFormat;
        end;
      end;
    end;
  end;
  if (RepSpec.ArtMode==0) then begin
    rwcnt = MatRowCnt(TRr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(TRr,i,TRrw);
      testf = true;
      if (nonblank(RepSpec.vals0)) then begin
        v = (TRrw.DebVal-TRrw.CredVal)/TRrw.CredVal;
        v = v*100;
        if (v>0) then begin
          if (RepSpec.vals0>0) then begin
            if (v<RepSpec.vals0) then begin
              testf = false;
            end;
          end else begin
            if (v>RepSpec.vals0) then begin
              testf = false;
            end;
          end;
        end else begin
          if (RepSpec.vals0<0) then begin
            if (v>RepSpec.vals0) then begin
              testf = false;
            end;
          end else begin
            if (v<RepSpec.vals0) then begin
              testf = false;
            end;
          end;
        end;
      end;
//Trace("v " & v," TRrw.DebVal " & TRrw.DebVal & " TRrw.CredVal " & TRrw.CredVal & " RepSpec.vals0 " & RepSpec.vals0);
      if (testf) then begin
        StartFormat(15);
        OutString(0,0,TRrw.AccNumber,false);
        OutString(3,0,TRrw.Comment,false);
        OutVal(8,0,TRrw.CredVal,M4Val,true);
        OutVal(9,0,TRrw.DebVal,M4Val,true);
        PrintTimeTotalRows(RepSpec,TRrw.DebVal,TRrw.CredVal);
        EndFormat;
      end;
      totusers = totusers + 1;
    end;
  end;
  if ((RepSpec.ArtMode==1) or (RepSpec.ArtMode==2) or (RepSpec.ArtMode==3)) then begin
    tothour = 0;
    rwcnt = MatRowCnt(totTRr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(totTRr,i,TRrw);
      if (TRrw.CorrYc==0) then begin
        tothour = tothour + TRrw.DebVal;
      end;
    end;
    Black_Divider(0,1);
    StartFormat(15);
    EndFormat;
    va = blankval;
    vb = blankval;
    SortTotals(totTRr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(totTRr,i,TRrw);
      if (TRrw.CorrYc==0) then begin
        if (RepSpec.ArtMode <> 3) then begin
          StartFormat(15);
          OutString(2,0,TRrw.Objects,false);
          OutString(4,0,TRrw.Comment,false);
          OutVal(7,0,TRrw.CredVal,M4Val,true);
          OutVal(8,0,TRrw.DebVal,M4Val,true);
          OutVal(9,0,(TRrw.DebVal/tothour) * 100,M4Val,true);
          PrintTimeTotalRows(RepSpec,TRrw.DebVal,TRrw.CredVal);
          EndFormat;
        end else begin
          if (TRrw.CredVal <> 0) or (TRrw.DebVal <> 0) then begin
            StartFormat(15);
            OutString(2,0,TRrw.Objects,false);
            ATGRr.Code = TRrw.Objects;
            if (ReadFirstMain(ATGRr,1,true)) then begin
              OutString(4,0,ATGRr.Comment,false);
            end else begin
              OutString(4,0,"",false);
            end;
            OutVal(7,0,TRrw.CredVal,M4Val,true);
            OutVal(8,0,TRrw.DebVal,M4Val,true);
            OutVal(9,0,(TRrw.DebVal/tothour) * 100,M4Val,true);
            PrintTimeTotalRows(RepSpec,TRrw.DebVal,TRrw.CredVal);
            EndFormat;
          end;
        end;            
        va = va + TRrw.CredVal;
        vb = vb + TRrw.DebVal;
      end;
    end;
    if (RepSpec.ArtMode==3) or (RepSpec.ArtMode==2) then begin //nk 2 added
      Gray_Divider(0,1);
      StartFormat(15);
       OutString(0,0,"",false);
       OutString(170,0,USetStr(8784),false);
       OutVal(7,0,va,M4Val,true);
       OutVal(8,0,vb,M4Val,true);
       OutVal(9,0,(vb/tothour) * 100,M4Val,true);
      EndFormat;
    end;
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(totTRr,i,TRrw);
      if (TRrw.CorrYc<>0) then begin
        StartFormat(15);
        OutString(0,0,"",false);
        OutString(170,0,TRrw.Comment,false);
        OutVal(7,0,TRrw.CredVal,M4Val,true);
        OutVal(8,0,TRrw.DebVal,M4Val,true);
        EndFormat;
      end;
    end;
  end;
  if (RepSpec.ArtMode==4) then begin
    rwcnt = MatRowCnt(DispGroupRec);
    trrwcnt = MatRowCnt(TRr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(DispGroupRec,i,DispGrouprw);
      pos = 0;
      va = BlankVal;
      vb = BlankVal;
      ExtractObj(DispGrouprw.DefStr,pos,usercode);
      while (nonblank(usercode)) begin
        for (j=0;j<trrwcnt;j=j+1) begin
          MatRowGet(TRr,j,TRrw);
          if (usercode==TRrw.AccNumber) then begin
            va = va + TRrw.CredVal;
            vb = vb + TRrw.DebVal;
          end;
        end;
        ExtractObj(DispGrouprw.DefStr,pos,usercode);
      end;
      StartFormat(15);
      OutString(0,0,DispGrouprw.Code,false);
      OutString(3,0,"",false);
      OutVal(8,0,va,M4Val,true);
      OutVal(9,0,vb,M4Val,true);
      PrintTimeTotalRows(RepSpec,vb,va);
      EndFormat;
      totusers = totusers + 1;      
    end;
  end;
  StartFormat(15);
  OutString(0,0,USetStr(8752) & ": " & totusers,false);
  EndFormat;
  return;
end;

procedure EMTimeAllCompRn(record RcVc RepSpec)
begin
  record CompaniesBlock Cb;
  row CompaniesBlock Cbrw;
  Integer i,rwcnt;
  Integer compnr,curcomp;
  
  BlockLoad(Cb);
  curcomp = CurrentCompany;  
  
  rwcnt = MatRowCnt(Cb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Cb,i,Cbrw);
    //if (Cbrw.ActiveStatus==0) then begin
      if (SetCompanyCode(Cbrw.CompCode,false)) then begin
        StartFormat(15);
        OutString(0,0,USetStr(7661) & ":",false);
        OutString(80,0,Cbrw.CompCode,false);
        OutString(100,0,Cbrw.CompName,false);
        EndFormat;
        EMTime1CompanyRn(RepSpec);
        StartFormat(15);
        EndFormat;
      end;
    //end;  
  end;
  ResetCompany(curcomp);
  return;
end;

global 
procedure EMTimeRn(record RcVc RepSpec)
BEGIN
  string 200 headitem;
  Integer rw;
  string 20 frus,tous;
  string 20 frpr,topr;
  string 20 frcu,tocu;
  string 20 frtyp,totyp;
  string 255 tstr;

  frus = FirstInRange(RepSpec.f1,5);
  tous = LastInRange(RepSpec.f1,5);
  frpr = FirstInRange(RepSpec.f2,20);
  topr = LastInRange(RepSpec.f2,20);
  frcu = FirstInRange(RepSpec.f6,20);
  tocu = LastInRange(RepSpec.f6,20);
  frtyp = FirstInRange(RepSpec.f3,5);
  totyp = LastInRange(RepSpec.f3,5);
  StartReportJob(USetStr(8720));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,headitem);
  Header(rw,headitem,1);
  rw = rw + 1;
  HTDetailLevel(RepSpec.ArtMode,headitem);
  if (RepSpec.ArtMode==2) then begin
    headitem = USetStr(8729);
  end;
  if (RepSpec.ArtMode==3) then begin
    headitem = USetStr(8730);
  end;
  if (RepSpec.ArtMode==4) then begin
    headitem = USetStr(8743);
  end;
  Header(rw,headitem,0);
  if (nonblank(RepSpec.f1)) then begin
    headitem = USetStr(8721) & " " & RepSpec.f1;
    Header(rw,headitem,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    headitem = USetStr(8731) & " " & RepSpec.f2;
    Header(rw,headitem,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f6)) then begin
    headitem = USetStr(8751) & " " & RepSpec.f6;
    Header(rw,headitem,1);
    rw = rw + 1;
  end;
  if (HasCategories) then begin
    HTCustCat(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.Stext,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;  
  if (nonblank(RepSpec.f3)) then begin
    headitem = USetStr(8727) & " " & RepSpec.f3;
    Header(rw,headitem,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.ObjStr)) then begin
    headitem = USetStr(8728) & " " & RepSpec.ObjStr;
    Header(rw,headitem,1);
    rw = rw + 1;
  end;
  headitem = "";
  switch (RepSpec.flags[7]) begin
    case 0:
      headitem = USetStr(8722) & "/" & USetStr(8724);
    case 1:
      headitem = USetStr(8745);
    case 2:
      headitem = USetStr(8746);
    case 3:
      headitem = USetStr(8747);
  end;
  Header(rw,headitem,1);
  rw = rw + 1;
  EndHeader;
  SetRepCol(2,20);
  SetRepCol(3,50);
  SetRepCol(4,70);
  SetRepCol(7,300);
  SetRepCol(8,360);
  SetRepCol(9,420);
  if (RepSpec.IncDaughter==0) then begin
    EMTime1CompanyRn(RepSpec);
  end else begin
    EMTimeAllCompRn(RepSpec);
  end;
  EndJob;
  RETURN;
END;
