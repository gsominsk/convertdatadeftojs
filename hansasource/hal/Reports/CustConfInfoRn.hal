// Not used...
procedure PrintHeader(record RcVc RepSpec)
begin
  string 255 tstr;
  Integer rw;
  
  rw = 1;
  if (RepSpec.FirstVer>0) then begin
    tstr = USetStr(16181) & ": ";
    tstr = tstr & RepSpec.FirstVer;
  end else begin
    tstr = USetStr(16182);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.LastVer>0) then begin
    tstr = USetStr(16183) & ": ";
    tstr = tstr & RepSpec.LastVer;
  end else begin
    tstr = USetStr(16184);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  return;
end;

global
procedure CustConfInfoRn(record RcVc RepSpec)
BEGIN
  record CustContModuleVc CCMr;
  record CUVc CUr;
  Boolean found,testf;
  
  StartReportJob(USetStr(16180));
   PrintHeader(RepSpec);
  EndHeader;
  SetRepCol(2,100);
  SetRepCol(3,350);
  SetRepCol(4,400);
  StartFormat(15);
   OutString(0,0,USetStr(16185),false);
   OutString(2,0,USetStr(16186),false);
   OutString(3,0,USetStr(16187),false);
   OutString(4,0,USetStr(16188),false);
  EndFormat; 
  Gray_Divider(0,1);
  found = true;
  while (LoopMain(CCMr,1,found)) begin
    if (found) then begin
      testf = true;
      if (RepSpec.FirstVer>0) then begin
        switch (RepSpec.flags[0]) begin
          case 0: if (CCMr.NumberOfUsers<RepSpec.FirstVer) then begin testf = false; end;
          case 1: if (CCMr.NumberOfUsers>=RepSpec.FirstVer) then begin testf = false; end;
        end;
      end;
      if (RepSpec.LastVer>0) then begin
        switch (RepSpec.flags[1]) begin
          case 0: if (CCMr.ConcurrentUserNo<RepSpec.LastVer) then begin testf = false; end;
          case 1: if (CCMr.ConcurrentUserNo>=RepSpec.LastVer) then begin testf = false; end;
        end;
      end;
      if (testf) then begin
        CUr.Code = CCMr.CustCode;
        if (ReadFirstMain(CUr,1,true)) then begin end;
        StartFormat(15);
         OutString(0,0,CCMr.CustCode,false);
         OutString(2,0,CUr.Name,false);
         OutLongInt(3,0,CCMr.NumberOfUsers,false);
         OutLongInt(4,0,CCMr.ConcurrentUserNo,false);
        EndFormat;        
      end;
    end;
  end;
  EndJob;
  RETURN;
END;