external function Boolean IsCancelState(String);

function string 255 GetSituationText(LongInt Priocheckin,LongInt Checkin,LongInt Stayon,LongInt Checkout,LongInt other)
begin
  string 255 tstr;
  
  if (Priocheckin!=0) then begin
    tstr = USetStr(12151);
  end else begin
    if (Checkin!=0) then begin
      tstr = USetStr(12152);
    end else begin
      if (Checkout!=0) then begin
        tstr = USetStr(12143);
      end else begin
        if (Stayon!=0) then begin
          tstr = USetStr(12153);
        end else begin
          if (other!=0) then begin
            tstr = USetStr(12154);
          end;
        end;
      end;
    end;
  end;
  GetSituationText = tstr;
  return;
end;

function Boolean RoomIsDirty(string rescode)
begin
  record ResVc Resr;
  record HotelBlock Hotelb;
  Boolean res;

  BlockLoad(Hotelb);
  Resr.Code = rescode;
  if (ReadFirstMain(Resr,1,true)) then begin
    if (Resr.ResStatus==Hotelb.ToResStatus) then begin
      res = true;
    end else begin
      res = false;
    end;
  end;
  RoomIsDirty = res;
  return;
end;

function Boolean RoomIsClosed(string rescode)
begin
  record ResVc Resr;
  record HotelBlock Hotelb;
  Boolean res;

  BlockLoad(Hotelb);
  Resr.Code = rescode;
  if (ReadFirstMain(Resr,1,true)) then begin
    if (Resr.ResStatus==Hotelb.ClosedResStatus) then begin
      res = true;
    end else begin
      res = false;
    end;
  end;
  RoomIsClosed = res;
  return;
end;

procedure PrintHousekeepingObs(LongInt sernr,Date thedat)
begin
  Record GuestObserVc GuestObser;
  record ResUsageVc ResUsage;
  row ResUsageVc ResUsagerw;
  record JobVc Jobr;
  Row JobVc Jobrw;
  Integer rwcnt,i;
  Boolean TsHr,printedf;
  
  printedf = false;
  Jobr.SerNr = sernr;
  if (ReadFirstMain(Jobr,1,true)) then begin
    ResUsage.Code = Jobr.ResUsage;
    if (ReadFirstMain(ResUsage,1,true)) then begin
      rwcnt = MatRowCnt(ResUsage);
      for (i=0;i<rwcnt;i=i+1) begin 
        MatRowGet(ResUsage,i,ResUsagerw);    
        if ((ResUsagerw.CodeType==0) and (nonblank(ResUsagerw.MessageToHK))) then begin
          StartFormat(15);
          OutString(3,0,ResUsagerw.MessageToHK,false);
          EndFormat;
          printedf = true;
        end;
      end;
    end;
    rwcnt = MatRowCnt(Jobr);
    for(i=0; i<rwcnt; i=i+1) begin
      MatRowGet(Jobr,i,Jobrw);
      Resetloop(GuestObser);
      TsHr = true;
      GuestObser.Guest = Jobrw.GuestCode;
      while (LoopKey("Guest",GuestObser,1,TsHr)) begin
        if (GuestObser.Guest!=Jobrw.GuestCode) then begin
          TsHr = false;
        end;
        if (TsHr) then begin
          switch (GuestObser.Type) begin
            case 4:
              StartFormat(15);
              OutStringID(3,"DblGuestObserVc",GuestObser.Comment,false,GuestObser.SerNr);
              EndFormat;
              printedf = true;
            case 3:
              if (GuestObser.TransDate==thedat) then begin
                StartFormat(15);
                OutString(6,0,"" & GuestObser.TransDate & " " & GuestObser.TransTime,false);
                OutStringID(3,"DblGuestObserVc",GuestObser.Comment,false,GuestObser.SerNr);
                EndFormat;
                printedf = true;
              end;
          end; 
        end;   
      end;     
    end;
  end;
  if (printedf) then begin
    StartFormat(15);
    EndFormat;
  end;
  return;
end;

// Perhaps unneccesarily difficult, but it works...
procedure GetRoomSituation(Date thedat,string rescode,var LongInt Checkin,var LongInt Priocheckin,var LongInt Stayon,var LongInt Checkout, var LongInt other,var Boolean changesheets)
begin
  record JobVc Jobr;
  Date dt;
  Boolean foundf,testf;
  Integer rw,i,rwcnt;
  string 255 tstr;
  Integer lenclass;
  Date blankd;
  record HouseKeepingBlock HKr;

  BlockLoad(HKr);
  Checkin = 0;
  Priocheckin = 0;
  Stayon = 0;
  Checkout = 0;
  other = 0;
  changesheets = false;
  lenclass = 4;
LAddToCleanArray:;
  ResetLoop(Jobr);
  Jobr.ResCode = rescode;
  Jobr.LengthClass = lenclass;
  Jobr.TransDate = thedat;
  switch (lenclass) begin
    case 4: Jobr.TransDate = blankd;
    case 3: Jobr.TransDate = AddDay(Jobr.TransDate,-366);
    case 2: Jobr.TransDate = AddDay(Jobr.TransDate,-31);
    case 1: Jobr.TransDate = AddDay(Jobr.TransDate,-7);
    case 0: ;
  end;
  foundf = true;
  while (LoopKey("CalResStartTime",Jobr,3,foundf)) begin
    if (Jobr.TransDate>thedat) then begin foundf = false; end;
    if (Jobr.ResCode!=rescode) then begin foundf = false; end;
    if (Jobr.LengthClass!=lenclass) then begin foundf = false; end;
    testf = true;
    if (foundf==false) then begin
      testf = false;
    end;
    if (IsCancelState(Jobr.ResStatus)) then begin
      testf = false;
    end;
    if (testf) then begin
      if ((thedat>Jobr.TransDate) and (thedat<Jobr.EndDate)) then begin
        Stayon = Jobr.SerNr;
      end else begin
        if (thedat==Jobr.TransDate) then begin
          Checkin = Jobr.SerNr;
        end else begin
          if (thedat==Jobr.EndDate) then begin
            Checkout = Jobr.SerNr;
          end;
        end;
      end;
    end;
  end;
  lenclass = lenclass - 1;
  if (lenclass>=0) then begin goto LAddToCleanArray;end;
  if ((Checkin!=0) and (Checkout!=0)) then begin
    Priocheckin = Checkin;
    Checkin = 0;
    Checkout = 0;
  end;
  if ((Stayon==0) and (Priocheckin==0) and (Checkin==0) and (Checkout==0)) then begin
    if (RoomIsDirty(rescode)) then begin
      other = 1;
    end;
  end;
  if (Stayon!=0) then begin
    if (HKr.SheetChangeDays>0) then begin
      Jobr.SerNr = Stayon;
      if (ReadFirstMain(Jobr,1,true)) then begin
        dt = Jobr.TransDate;
        while ((dt<Jobr.EndDate) and (dt<thedat)) begin
          dt = AddDay(dt,HKr.SheetChangeDays);
          if (dt==thedat) then begin
            changesheets = true;
          end;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure HousekeepingRn(record RcVc RepSpec)
begin
  record ResVc Resr;
  Boolean foundf,testf;
  string 20 frres,tores;
  LongInt Priocheckin,Checkin,Stayon,Checkout,other;
  Date thedat;
  Boolean changesheets;
  Integer rw;
  Integer totPriocheckin,totCheckin,totStayon,totCheckout,totother,totchangesheets;

  frres = FirstInRange(RepSpec.f1,20);
  tores = FirstInRange(RepSpec.f1,20);
  thedat = RepSpec.d1;
  if (blankdate(thedat)) then begin
    thedat = CurrentDate;
  end;
  totPriocheckin = 0;
  totCheckin = 0;
  totStayon = 0;
  totCheckout = 0;
  totother = 0;
  totchangesheets = 0;
  StartReportJob(USetStr(12150));
  rw = 1;
  Header(rw,USetStr(12129) & ": " & RepSpec.d1,1);
  rw = rw + 1;
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,160);
  SetRepCol(4,380);
  SetRepCol(5,420);
  SetRepCol(6,20);
  SetRepCol(7,280);
  StartFormat(15);
  OutString(0,0,USetStr(12168),false);
  OutString(2,0,USetStr(12169),false);
  OutString(3,0,USetStr(12169),false);
  OutString(4,0,USetStr(12155),false);
  OutString(5,0,USetStr(12156),false);
  EndFormat;
  Gray_Divider(0,1);
  foundf = true;
  Resr.Code = frres;
  while (LoopMain(Resr,1,foundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (Resr.Code>tores) then begin
        foundf = false;
      end;
    end;
    testf = foundf;
    if (nonblank(RepSpec.f2)) then begin
      if (RepSpec.f2!=Resr.Type) then begin
        testf = false;
      end;
    end;
    if (nonblank(RepSpec.f3)) then begin
      if (RepSpec.f3!=Resr.ResLoc) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      GetRoomSituation(thedat,Resr.Code,Checkin,Priocheckin,Stayon,Checkout,other,changesheets);
      if ((Stayon==0) and (Priocheckin==0) and (Checkin==0) and (Checkout==0) and (other==0)) then begin
        testf = false;
      end;
      if (RepSpec.flags[5]!=0) then begin
        if ((Stayon==0) and (Checkin!=0) and (Checkout==0) and (Priocheckin==0) and (other==0)) then begin
          if (RoomIsDirty(Resr.Code)==false) then begin
            testf = false;
          end;
        end;
      end;
      if (RepSpec.flags[1]==0) then begin if (Checkin!=0) then begin testf = false; end; end;
      if (RepSpec.flags[2]==0) then begin if (Stayon!=0) then begin testf = false; end; end;
      if (RepSpec.flags[3]==0) then begin if (Checkout!=0) then begin testf = false; end; end;
      if (RepSpec.flags[4]==0) then begin if (other!=0) then begin testf = false; end; end;
      if (RepSpec.flags[6]==0) then begin if (Priocheckin!=0) then begin testf = false; end; end;
    end;
    if (testf) then begin
      StartFormat(15);
      OutString(0,0,Resr.Code,false);
      OutString(2,0,GetSituationText(Priocheckin,Checkin,Stayon,Checkout,other),false);
      OutString(3,0,Resr.Name,false);
      if (changesheets) then begin
        OutString(7,0,USetStr(12159),false);
      end;
      OutString(4,0,Resr.Type,false);
      OutString(5,0,Resr.ResStatus,false);
      EndFormat;
      Black_Divider(460,1);
      PrintHousekeepingObs(Priocheckin,thedat);
      PrintHousekeepingObs(Checkin,thedat);
      PrintHousekeepingObs(Stayon,thedat);
      if (Checkin!=0) then begin totCheckin = totCheckin + 1; end;
      if (Checkout!=0) then begin totCheckout = totCheckout + 1; end;
      if (Stayon!=0) then begin totStayon = totStayon + 1; end;
      if (other!=0) then begin totother = totother + 1; end;
      if (Priocheckin!=0) then begin totPriocheckin = totPriocheckin + 1; end;
      if ((changesheets) or (Priocheckin!=0) or (Checkout!=0) or (other!=0)) then begin
        totchangesheets = totchangesheets + 1;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(12158) & " " & USetStr(12151),false);
  OutString(3,0,totPriocheckin,false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(12158) & " " & USetStr(12152),false);
  OutString(3,0,totCheckin,false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(12158) & " " & USetStr(12153),false);
  OutString(3,0,totStayon,false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(12158) & " " & USetStr(12143),false);
  OutString(3,0,totCheckout,false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(12158) & " " & USetStr(12154),false);
  OutString(3,0,totother,false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(12158) & " " & USetStr(12159),false);
  OutString(3,0,totchangesheets,false);
  EndFormat;
  EndJob;
  return;
end;

