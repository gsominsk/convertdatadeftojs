external procedure ValToHALString(val,string,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean TestArtCodeMatch(string,string);
external procedure PrintArtSTRnHeader(integer,date,date,string,string,string,string,integer,string,string,integer,boolean,boolean,string,string,string,string);
external procedure GetDateTurnover(string,string,string,string,string,record ICSVc,string,Date,Date,var val,Integer);
external procedure ItemGetDateTurnover(string,string,string,string,string,record INVc,string,Date,Date,var val,Integer);

global
procedure ArtSTVarDbl(string dblstr,LongInt l)
BEGIN
  record RcVc RepSpec;
  
  GetWindowRecord(CurWindow,RepSpec);
  RepSpec.repname = "ArtSTVarRn";
  RepSpec.Media = mtScreen;
  RepSpec.f1 = dblstr;
  RunReport(RepSpec,0);
  RETURN;
END;

procedure MakeMarginString(val t,var string res)
BEGIN
  string 255 tstr;

  ValToHALString(t,"2",tstr);  
  if (t<0) then begin
    res = "-";
    res = "";
  end else begin
    res = "+";
  end;
  res = res & tstr;
  res = res & "%";
  RETURN;
END;

procedure ArtSTItemLine(record INVc INr,string variety,val q,val gps,val s,var val sum1,var val sum2,var val sum3,Boolean withcost)
begin
  record INVc INNamer;
  string 255 tstr;
  
  if ((q<>0) or (gps<>0) or (s<>0)) then begin
    if (ReadFirstItem(INr.Code & variety,INNamer,true,true)==false) then begin 
      INNamer.Name = INr.Name;
    end;
    StartFormat(15);
    OutString(0,0,INr.Code & variety,false);
    OutString(2,0,INNamer.Name,false);
    OutVal(3,0,q,M4Val,true);
    OutString(5,0,INr.Unittext,false);
    if (withcost) then begin
      OutVal(4,0,gps,M4Val,true);
    end;  
    MakeMarginString((gps * 100)/s,tstr);
    OutString(420,0,tstr,true);      
    OutVal(1,0,s,M4Val,true);
    EndFormat;
    sum1 = sum1 + q;
    sum2 = sum2 + gps;
    sum3 = sum3 + s;
  end;
  return;
end;

global
procedure ArtSTVarRn(record RcVc RepSpec)
begin
  record STVc STr;
  record ICSVc ICSp;
  record INVc INr;
  record INVc IN2r;
  val s,q,gps,sum1,sum2,sum3;
  val mains,mainq,maingps;
  Boolean withcost;
  Boolean foundf;
  
  sum1 = BlankVal;
  sum2 = BlankVal;
  sum3 = BlankVal;
  withcost = true;
  if ((ProgramType==typFirstOffice) or 
      (ProgramType==typFirstOfficeSmall) or 
      (ProgramType==typFirstOfficeCurrency) or
      (IsBooks)) then begin withcost = false; end;
  StartReportJob(USetStr(2461)); 
  PrintArtSTRnHeader(RepSpec.ArtMode,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f1,RepSpec.f3,RepSpec.ObjStr,RepSpec.f2,RepSpec.Media,RepSpec.AccStr,
                     RepSpec.f4,RepSpec.basecurncy,RepSpec.UsedOnly==1,RepSpec.wholemonthf==0,RepSpec.FirstAcc,RepSpec.f5,RepSpec.f6,RepSpec.LastAcc);
  EndHeader;
  SetRepCol(2,80);
  SetRepColBiDi(3,288,328);
  SetRepColBiDi(4,380,420);
  SetRepCol(5,293);
  SetRepCol(6,140);
  SetRepCol(9,221);
  StartFormat(15);
  OutString(0,0,USetStr(2462),false);
  OutString(2,0,USetStr(2463),false);
  OutString(3,0,USetStr(2464),true);
  if (withcost) then begin
    OutString(4,0,USetStr(2468),true);
  end;  
  OutString(420,0,USetStr(5129),true);
  OutString(1,0,USetStr(2466),true);
  EndFormat;
  Gray_Divider(0,1);
  INr.Code = RepSpec.f1;
  if (ReadFirstMain(INr,1,true)) then begin
    if (blank(RepSpec.f2)) then begin
      STr.ArtCode = INr.Code;
      foundf = true;
      while (LoopMain(STr,1,foundf)) begin
        if (TestArtCodeMatch(STr.ArtCode,RepSpec.f1)==false) then begin
          foundf = false;
        end;
        if (foundf) then begin
          INr.Code = STr.ArtCode;
          ItemGetDateTurnover(STr.ArtCode,STr.Variety,"","","",INr,"quant",RepSpec.sStartDate,RepSpec.sEndDate,q,RepSpec.basecurncy);
          ItemGetDateTurnover(STr.ArtCode,STr.Variety,"","","",INr,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,s,RepSpec.basecurncy);
          ItemGetDateTurnover(STr.ArtCode,STr.Variety,"","","",INr,"grossprofit",RepSpec.sStartDate,RepSpec.sEndDate,gps,RepSpec.basecurncy);
          if (INr.Code==RepSpec.f1) and (blank(STr.Variety)) then begin
            RecordCopy(IN2r,INr);
            mains = s;
            mainq = q;
            maingps = gps;
          end else begin
            ArtSTItemLine(INr,STr.Variety,q,gps,s,sum1,sum2,sum3,withcost);
          end;
        end;
      end;
    end else begin
      ICSp.ArtCode = INr.Code;
      ICSp.CustCode = RepSpec.f2;
      foundf = true;
      while(LoopMain(ICSp,2,foundf)) begin
        if (ICSp.ArtCode!=RepSpec.f1) then begin
          foundf = false;
        end;
        if (ICSp.CustCode<>RepSpec.f2) then begin
          foundf = false;
        end;
        if (foundf==true) then begin
          INr.Code = ICSp.ArtCode;
          GetDateTurnover(INr.Code,ICSp.Variety,RepSpec.f2,"","",ICSp,"quant",RepSpec.sStartDate,RepSpec.sEndDate,q,RepSpec.basecurncy);
          GetDateTurnover(INr.Code,ICSp.Variety,RepSpec.f2,"","",ICSp,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,s,RepSpec.basecurncy);
          GetDateTurnover(INr.Code,ICSp.Variety,RepSpec.f2,"","",ICSp,"grossprofit",RepSpec.sStartDate,RepSpec.sEndDate,gps,RepSpec.basecurncy);
          if (INr.Code==RepSpec.f1) and (blank(ICSp.Variety)) then begin
            RecordCopy(IN2r,INr);
            mains = s;
            mainq = q;
            maingps = gps;
          end else begin
            ArtSTItemLine(INr,ICSp.Variety,q,gps,s,sum1,sum2,sum3,withcost);
          end;
        end;
      end;
    end;
  end;
  if (nonblank(IN2r.Code)) then begin
    mainq = mainq - sum1;
    maingps = maingps - sum2;
    mains = mains - sum3;
    ArtSTItemLine(IN2r,"",mainq,maingps,mains,sum1,sum2,sum3,withcost);
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutVal(3,0,sum1,M4Val,true);
  if (withcost) then begin
    OutVal(4,0,sum2,M4Val,true);
  end;  
  OutVal(1,0,sum3,M4Val,true);
  EndFormat;
  EndJob;
  return;
end;

