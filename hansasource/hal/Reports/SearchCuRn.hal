external procedure GetCurUser(var record UserVc);

procedure SearchCuRnResults(record RcVc RepSpec,Boolean printf,Array string acontact,var Integer cnt)
begin
  record CUVc CUr;
  record LetVc Letr;
  boolean TrHs,testf;
  string 255 tstr,keystr;
  record UserVc Userr;
  LongInt pos;
  vector Boolean vfound;
  
  cnt = 0;
  TrHs = true;
  if (nonblank(RepSpec.f2)) then begin
    keystr = "Classification:" & RepSpec.f2;
  end else begin
    switch (RepSpec.flags[0]) begin
      case 0:
        keystr = "Code";
      case 1:
        keystr = "VEActCode";
      case 3:
        keystr = "Code";
      otherwise
        keystr = "ActCode";
    end;
  end;
  TrHs = true;
  while (LoopKey(keystr,CUr,1,TrHs)) begin
    if (TrHs) then begin
      testf = false;
      RecordClear(Letr);
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 1) then begin
        AddToText(CUr.Code,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 2) then begin
        AddToText(CUr.Name,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 3) then begin
        AddToText(CUr.SearchKey,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 4) then begin
        AddToText(CUr.CustCat,Letr);
        AddToText(" ",Letr);
      end;     
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 5) then begin
        AddToText(CUr.Phone,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 6) then begin
        AddToText(CUr.Person,Letr);
        AddToText(" ",Letr);
      end;
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 7) then begin
        AddToText(CUr.Department,Letr);
        AddToText(" ",Letr);
      end;    
      if (RepSpec.ArtMode == 0) or (RepSpec.ArtMode == 8) then begin
        AddToText(CUr.eMail,Letr);
        AddToText(" ",Letr);
      end;     
      if (RepSpec.ArtMode == 0) then begin
        AddToText(CUr.InvAddr0,Letr);
        AddToText(" ",Letr);
        AddToText(CUr.InvAddr1,Letr);
        AddToText(" ",Letr);
        AddToText(CUr.InvAddr2,Letr);
        AddToText(" ",Letr);
        AddToText(CUr.InvAddr3,Letr);
        AddToText(" ",Letr);
        AddToText(CUr.InvAddr4,Letr);
        AddToText(" ",Letr);
        AddToText(CUr.DelAddr3,Letr);
        AddToText(" ",Letr);
        AddToText(CUr.DelAddr4,Letr);
        AddToText(" ",Letr);
      end;     
      if (printf) then begin
        if (StringInText(RepSpec.f1,Letr)) then begin
          testf = true;
        end;
      end else begin
        pos = 0;
        while (GetNextSubstring(RepSpec.f1,pos,"+ ",tstr)) begin
          if (nonblank(tstr)) then begin vfound[tstr] = false; end;
        end;
        
        pos = 0;
        while (GetNextSubstring(RepSpec.f1,pos,"+ ",tstr)) begin
          if (nonblank(tstr) and StringInText(tstr,Letr)) then begin
            vfound[tstr] = true;
          end;
        end;
        
        pos = 0;
        testf = true;
        while (GetNextSubstring(RepSpec.f1,pos,"+ ",tstr)) begin
          if (nonblank(tstr)) then begin
            testf = testf and vfound[tstr];
          end;
        end;
      end;
      if (testf) then begin
        switch (Userr.limitedAccess) begin
          case 1: if (CUr.SalesMan!=Userr.Code) then begin testf = false; end; 
          case 2: if (CUr.SalesGroup!=Userr.SalesGroup) then begin testf = false; end; 
          case 0: testf = true;
        end;
        switch (RepSpec.flags[0]) begin
          case 0:
            if (testf) then begin
              testf = false;
              if (CUr.VEType!=0) then begin testf = true; end;
              if (CUr.CUType!=0) then begin testf = true; end;
              if (CUr.EmployeeType!=0) then begin testf = true; end;
              if (CUr.DealerType!=0) then begin testf = true; end;
              if ((CUr.CUType==0) and (CUr.VEType==0) and (CUr.GuestType==0) and (CUr.DealerType==0) and (CUr.EmployeeType==0)) then begin testf = true; end;
            end;
          case 1:
            if (CUr.VEType==0) then begin testf = false; end;
          case 2:
            if (CUr.GuestType==0) then begin testf = false; end;
          case 3:
            testf = false;
            if (CUr.VEType!=0) then begin testf = true; end;
            if (CUr.CUType!=0) then begin testf = true; end;
          case 4:
            if (CUr.CUType==0) then begin testf = false; end;
          otherwise
            if (CUr.VEType==0) then begin testf = false; end;
        end;
      end;
      if (testf) then begin
        if (printf) then begin
          StartFormat(15);
          OutString(0,"DblCUVc",CUr.Code,false);
          if (RepSpec.UsedOnly>0) then begin
            OutStringID(2,"DblPasteCUToJob",CUr.Name,false,CUr.Code);
          end else begin
            OutString(2,0,CUr.Name,false);
          end;
          switch (RepSpec.f12) begin
            case "JobVc":
              OutString(3,0,CUr.PassportNr,false);
          end;
          OutString(7,0,CUr.eMail,false);
          OutString(8,0,CUr.Phone,false);
          EndFormat;
        end else begin
          if (cnt>100) then begin
            cnt = 0;
            acontact[cnt] = USetStr(24160);
            TrHs = false;
          end else begin
            acontact[cnt] = CUr.Code & "     " & CUr.Name;
          end;
        end;
        cnt = cnt + 1;
      end;  
    end;
  end;  
  if (cnt==0) then begin
    acontact[cnt] = USetStr(19391);
//    cnt = cnt + 1;
  end;
  return;
end;

global
procedure SearchCuRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record LetVc Letr;
  boolean TrHs,testf;
  string 255 tstr;
  integer cnt, rw;
  record UserVc Userr;
  Array string 255 acontact;
    
  cnt = 0;
  rw = 1;
  switch (RepSpec.flags[0]) begin
    case 1:
      StartReportJob(USetStr(13538));
    otherwise
      StartReportJob(USetStr(13512));
  end;
  if (nonblank(RepSpec.f1)) then begin
    switch (RepSpec.ArtMode) begin
      case 0:tstr = USetStr(13513) & RepSpec.f1;
      case 1:tstr = USetStr(13514)  & RepSpec.f1;
      case 2:tstr = USetStr(13515)  & RepSpec.f1;
      case 3:tstr = USetStr(13516)  & RepSpec.f1;
      case 4:tstr = USetStr(13517)  & RepSpec.f1;
      case 5:tstr = USetStr(13518)  & RepSpec.f1;
      case 6:tstr = USetStr(13519)  & RepSpec.f1;
      case 7:tstr = USetStr(13520)  & RepSpec.f1;
      case 8:tstr = USetStr(12112)  & RepSpec.f1;
      otherwise tstr = "Not defined";
    end;
    Header(rw,tstr,1);
    rw = rw + 1;  
  end;
  EndHeader;
  if (blank(RepSpec.f1)) then begin
    goto LSearchCURn;
  end;
  GetCurUser(Userr);
  SetRepCol(2,70);
  SetRepCol(3,200);
  SetRepCol(7,280);
  SetRepCol(8,410);
  StartFormat(15);
  OutString(0,0,USetStr(13521),false);
  OutString(2,0,USetStr(13522),false);
  switch (RepSpec.f12) begin
    case "JobVc":
      OutString(3,0,USetStr(17297),false);
  end;
  OutString(7,0,USetStr(13539),false);
  OutString(8,0,USetStr(13523),false);
  EndFormat;
  Gray_Divider(0,1);
  SearchCuRnResults(RepSpec,true,acontact,cnt);
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(13524),false);
  OutVal(100,0,cnt,M40Val,true);
  EndFormat;
LSearchCURn:;
  EndJob;
  return;
end;

global
procedure CUNPTSSClassArrayOnOpen(record RcVc RepSpec,var Array string acontact,var Integer acnt)
begin
  SearchCuRnResults(RepSpec,false,acontact,acnt);
  return;
end;

procedure AddToUsersArray(var Array string auser,var Integer acnt,string UserStr)
begin
  Integer i;
  
  for (i=0;i<acnt;i=i+1) begin
    if (auser[i]==UserStr) then begin goto LAddToUsersArray; end;
  end;
  auser[acnt] = UserStr;
  acnt = acnt + 1;
LAddToUsersArray:;  
  return;
end;

global
procedure UserNPTSSClassArrayOnOpen(var Array string auser,var Integer acnt)
begin
  record UserVc Userr;
  record GlobalUserVc GlobalUserr;
  record ModuleBlock MBr;
  Boolean found,testf;
  
  BlockLoad(MBr);
  acnt = 0;
  found = true;
  while (LoopMain(Userr,1,found)) begin
    if (found) then begin
      testf = true;
      if (Userr.TerminatedFlag!=0) then begin testf = false; end;
      if (Userr.Closed!=0) then begin testf = false; end;
      if (testf) then begin
        AddToUsersArray(auser,acnt,Userr.Code & "     " & Userr.Name)
      end;
    end;
  end;
  if (MBr.UseGlobalUsers!=0) then begin
    found = true;
    while (LoopMain(GlobalUserr,1,found)) begin
      if (found) then begin
        testf = true;
        if (GlobalUserr.Closed!=0) then begin testf = false; end;
        if (testf) then begin
          AddToUsersArray(auser,acnt,GlobalUserr.Code & "     " & GlobalUserr.Name)
        end;
      end;
    end;
  end;
  return;
end;

global
procedure RestAccClassNPTSSClassArrayOnOpen(var Array string arestaccclass,var Integer acnt)
begin
  Boolean found;
  record RestAccClassVc RACr;
  
  found = true;
  while (LoopMain(RACr,1,found)) begin
    if (found) then begin
      arestaccclass[acnt] = RACr.Code & "     " & RACr.Comment;
      acnt = acnt + 1;
    end;
  end;
  return;
end;
