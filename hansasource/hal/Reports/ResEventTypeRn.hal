external function integer GetPersonsInJob(Record JobVc);

global
procedure ResEventTypeRn( Record RcVc RepSpec )
begin
  record JobVc Jobr;
  record ResEventTypeVc PLr;
  record ResEventTypersVc PLsr;
  Boolean Skip,TrHs;
  String 20 ReportTitle;
  Integer pers;
  
  if (RepSpec.flags[0]==0) then begin
    ReportTitle = USetStr(11277);
  end;
  if (RepSpec.flags[0]==1) then begin
    ReportTitle = USetStr(11278);
  end;
  if (RepSpec.flags[0]==2) then begin  
    ReportTitle = USetStr(11279);
  end;

  StartReportJob(ReportTitle);
  EndHeader;
  
  SetRepCol(2,60);
  SetRepCol(3,125);  
  SetRepCol(4,170); 
  SetRepCol(5,370); 
  SetRepCol(8,480); 
    
  if (RepSpec.flags[0]==0) then begin
  
    StartFormat(15);
    OutString(0,0,USetStr(11271),false);
    OutString(2,0,USetStr(11272),false);
    OutString(3,0,USetStr(11273),false);
    OutString(4,0,USetStr(11274),false);
    OutString(5,0,USetStr(11275),false);
    OutString(8,0,USetStr(11276),true);
    EndFormat;
    
    Gray_Divider(0,1);
    while(LoopMain(PLr,1,true)) begin
      Jobr.SerNr= PLr.SerNr;
      if ReadFirstMain(Jobr,1,true) then begin
        if ((RepSpec.flags[1]==0)  or (Jobr.Mother==-1)) then begin
          if ((Jobr.ResStatus==RepSpec.f1) or blank(RepSpec.f1)) then begin
            pers = GetPersonsInJob(Jobr);
            StartFormat(15);
            OutString(0,"DblResEventTypeVc",Jobr.SerNr,false);
            OutString(2,"DblJobVc",Jobr.SerNr,false);
            OutLongInt(3,0,pers,true);
            OutString(4,0,Jobr.CUName,false);
            OutDate(5,0,Jobr.TransDate,false);
            OutDate(8,0,Jobr.EndDate,true);
            EndFormat;
          end;  
        end;  
      end;
    end;        
  end; // if 0

  if (RepSpec.flags[0]==1) then begin
    
    StartFormat(15);
    OutString(0,0,USetStr(11271),false);
    OutString(2,0,USetStr(11272),false);
    OutString(3,0,USetStr(11273),false);
    OutString(4,0,USetStr(11274),false);
    OutString(5,0,USetStr(11275),false);
    OutString(8,0,USetStr(11276),true);
    EndFormat;
    Gray_Divider(0,1);

    while(LoopMain(Jobr,1,true)) begin
      
      Skip= false;
      if (Jobr.ResStatus=="CXL") then begin
        Skip= true;
      end;
      if ((Jobr.ResStatus<>RepSpec.f1) and nonblank(RepSpec.f1)) then begin
        Skip= true;
      end;
     if ((RepSpec.flags[1]==1)  and (Jobr.Mother<>-1)) then begin
       Skip = true;
     end;
     
      if (not Skip) then begin
     
        PLr.SerNr= Jobr.SerNr;
        if not ReadFirstMain(PLr,1,true) then begin
          StartFormat(15);
          OutString(0,"DblResEventTypeVc",Jobr.SerNr,false);
          OutString(2,"DblJobVc",Jobr.SerNr,false);
          pers = GetPersonsInJob(Jobr);
          OutLongInt(3,0,pers,true);
          OutString(4,0,Jobr.CUName,false);
          OutDate(5,0,Jobr.TransDate,true);
          OutDate(8,0,Jobr.EndDate,true);  
          EndFormat;      
        end; //if
      end; //if
     end; //while  
     
  end; // if  1

  if (RepSpec.flags[0]==2) then begin
 
    StartFormat(15);
    OutString(0,0,USetStr(11271),false);
    OutString(2,0,USetStr(11272),false);
    OutString(3,0,USetStr(11273),false);
    OutString(4,0,USetStr(11274),false);
    OutString(5,0,USetStr(11274),false);
    OutString(8,0,USetStr(11275),true);
    EndFormat;
     
    PLsr.EventType = ""; 
    TrHs = true;
    while (LoopKey("EventType",PLsr,1,TrHs)) begin
    
      if Blank(PLsr.EventType) then begin
        TrHs= false;
      end; // if 
    
      if (not TrHs) then begin
        Jobr.SerNr = PLsr.JobNr;
        if readfirstmain(Jobr,1,true) then begin
          if ((RepSpec.flags[1]==0)  or (Jobr.Mother==-1)) then begin
            if ((Jobr.ResStatus==RepSpec.f1) or blank(RepSpec.f1)) then begin
              StartFormat(15);
              OutString(0,"DblResEventTypeVc",PLsr.JobNr,false);
              OutString(2,"DblJobVc",PLsr.JobNr,false);
              pers = GetPersonsInJob(Jobr);
              OutLongInt(3,0,pers,true);
              OutString(4,0,Jobr.CUName,false);
              OutString(5,0,PLsr.EventGroup,false);
              OutString(8,0,PLsr.TransDate,false);
              EndFormat;  
            end;  
          end;      
        end; //if
      end;
    end; // while
  end;
 
  EndJob;
  return;
end;