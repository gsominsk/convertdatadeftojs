external procedure HTValuesPerMonth(Integer,var string);
external procedure HTModel(Integer,var string);
external procedure GetDepreciationPrc(string,var val);
external procedure OneAT2UnitDeprCalculation(Integer,Integer,Integer,Boolean,Date,Date,string,var val,var val,var val,var val,var string,val,val,Boolean);
external procedure GetDepreciationPrcAndDeprPeriod(string,var val,var Integer);
external procedure FindFiscalYear(Date,var Date,var Date);
external function Boolean GetInventoryNrWrofDate(string,var Date);

procedure PrintHeader1(record RcVc RepSpec)
BEGIN
  Integer rw;  
  string 255 tstr;
  
  rw = 1;
  Header(rw,USetStr(10622) & ": " & RepSpec.d1,1);
  rw = rw + 1;
  HTModel(RepSpec.flags[1],tstr);
  Header(rw,tstr,0);
  HTValuesPerMonth(RepSpec.Comparison,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f3)) then begin
    Header(rw,USetStr(5543) & ": " & RepSpec.f3,1);
    rw = rw + 1;
  end;
  RETURN;
END;

global
procedure AT2SubRn(record RcVc RepSpec)
BEGIN
  record AT2UnitVc ATUnitr;
  Boolean found,testf;
  val t,dprvbef,dprv,totdprv;
  string 255 tstr;
  Integer dprper;
  Date FStartDate,FEndDate,ed;
  Boolean wrof;
  string 30 frinv,toinv;
  
  StartReportJob(USetStr(10615));
   PrintHeader1(RepSpec);
  EndHeader;
  SetRepCol(2,160);
  SetRepCol(3,240);
  SetRepCol(4,320);
  SetRepCol(5,400);
  SetRepCol(6,480);
  frinv = FirstInRange(RepSpec.f2,30);
  toinv = LastInRange(RepSpec.f2,30);
  FindFiscalYear(RepSpec.d1,FStartDate,FEndDate);  
  StartFormat(15);
   OutString(0,0,USetStr(10616),false);
   OutString(2,0,USetStr(10617),true);
   OutString(3,0,USetStr(10618),true);
   OutString(4,0,USetStr(10619),true);
   OutString(5,0,USetStr(10620),true);
   OutString(6,0,USetStr(10621),true);
  EndFormat;
  Gray_Divider(0,1);
  found = true;
  ATUnitr.Subsidyf = 1;
  ATUnitr.InventoryNr = frinv;
  while (LoopKey("Subsidyf",ATUnitr,2,found)) begin
    if (ATUnitr.Subsidyf!=1) then begin found = false; end;
    if (nonblank(RepSpec.f2)) then begin
      if (ATUnitr.InventoryNr>toinv) then begin found = false; end;
    end;  
    testf = true;
    if (nonblank(RepSpec.f3)) then begin      
      if (ATUnitr.ContractNr!=RepSpec.f3) then begin testf = false; end;
    end;
    if (found and testf) then begin
      StartFormat(15);
       OutString(0,"DblAT2UnitVc",ATUnitr.InventoryNr,false);
       OutVal(2,0,ATUnitr.PurchVal,M4Val,true);
       GetDepreciationPrcAndDeprPeriod(ATUnitr.Model1,t,dprper);
       OutVal(3,0,t,M4Val,true);
       if (GetInventoryNrWrofDate(ATUnitr.InventoryNr,ed)==false) then begin
         ed = FEndDate;
       end else begin  
         if (ed>FEndDate) then begin
           ed = FEndDate;
         end else begin   
           ed = FEndDate;
           if (dprper==0) then begin
             ed = AddMonth(ed,-1);
             ed = AddDay(ed,-GetDay(ed) + DaysInMonth(GetYear(ed),GetMonth(ed)));      
           end;
           if (dprper==2) then begin       
             ed = AddYear(ed,-1);  
             ed = AddMonth(ed,-GetMonth(ed)+12);
             ed = AddDay(ed,-GetDay(ed) + DaysInMonth(GetYear(ed),GetMonth(ed))); 
           end;
         end;  
       end;  
       OneAT2UnitDeprCalculation(RepSpec.Comparison,1,RepSpec.flags[1],false,FStartDate,ed,ATUnitr.InventoryNr,dprvbef,dprv,t,t,tstr,ATUnitr.PurchVal,ATUnitr.ResVal,false);
       OutVal(4,0,dprv,M4Val,true);
       OutVal(5,0,ATUnitr.SubsidyVal,M4Val,true);
       OneAT2UnitDeprCalculation(RepSpec.Comparison,1,RepSpec.flags[1],false,FStartDate,ed,ATUnitr.InventoryNr,dprvbef,dprv,t,t,tstr,ATUnitr.SubsidyVal,-1,false);
       OutVal(6,0,dprv,M4Val,true);
       totdprv = totdprv + dprv;
      EndFormat;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
   OutVal(6,0,totdprv,M4Val,true);
  EndFormat;
  EndJob;
  RETURN;
END;
