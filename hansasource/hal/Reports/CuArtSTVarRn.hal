external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean TestArtCodeMatch(string,string);
external procedure PrintArtSTRnHeader(integer,date,date,string,string,string,string,integer,string,string,integer,boolean,boolean,string,string,string,string);
external procedure GetDateTurnover(string,string,string,string,string,record ICSVc,string,Date,Date,var val,Integer);

global
procedure CuArtSTVarDbl(string dblstr,LongInt l)
BEGIN
  record RcVc RepSpec;
  
  GetWindowRecord(CurWindow,RepSpec);
  RepSpec.repname = "ArtSTVarRn";
  RepSpec.Media = mtScreen;
  RepSpec.f1 = dblstr;
  RunReport(RepSpec,0);
  RETURN;
END;


procedure ArtSTItemLine(record INVc INr,val q,val gps,val s,var val sum1,var val sum2,var val sum3,Boolean withcost)
begin
  record INVc INNamer;
  
  if ((q<>0) or (gps<>0) or (s<>0)) then begin
    if (ReadFirstItem(INr.Code,INNamer,true,true)==false) then begin 
      INNamer.Name = INr.Name;
    end;
    StartFormat(15);
    OutString(0,0,INr.Code,false);
    OutString(2,0,INNamer.Name,false);
    OutVal(3,0,q,M4Qty,true);
    OutString(5,0,INr.Unittext,false);
    if (withcost) then begin
      OutVal(4,0,gps,M4Val,true);
    end;  
    OutVal(1,0,s,M4Val,true);
    EndFormat;
    sum1 = sum1 + q;
    sum2 = sum2 + gps;
    sum3 = sum3 + s;
  end;
  return;
end;

global
procedure CuArtSTVarRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record STVc STr;
  record ICSVc ICSp;
  record INVc INr;
  record INVc IN2r;
  string 255 fromcust,tocust;
  val s,q,gps,sum1,sum2,sum3,totsum1,totsum2,totsum3;
  val mains,mainq,maingps;
  Boolean withcost;
  Boolean cufoundf,foundf,testf;
  Boolean custprintf;
  
  withcost = true;
  totsum1 = BlankVal;
  totsum2 = BlankVal;
  totsum3 = BlankVal;
  fromcust = FirstInRange(RepSpec.f2,20);
  tocust = LastInRange(RepSpec.f2,20);
  if ((ProgramType==typFirstOffice) or 
      (ProgramType==typFirstOfficeSmall) or 
      (ProgramType==typFirstOfficeCurrency) or
      (IsBooks)) then begin withcost = false; end; //?? CHECKBOOKSFUNC
  StartReportJob(USetStr(2461));
  PrintArtSTRnHeader(RepSpec.ArtMode,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.f1,RepSpec.f3,RepSpec.ObjStr,RepSpec.f2,RepSpec.Media,RepSpec.AccStr,
                     RepSpec.f4,RepSpec.basecurncy,RepSpec.UsedOnly==1,RepSpec.wholemonthf==0,RepSpec.FirstAcc,RepSpec.f5,RepSpec.f6,RepSpec.LastAcc);
  EndHeader;
  SetRepCol(2,100);
  SetRepCol(3,315);
  SetRepCol(4,400);
  SetRepCol(5,320);
  SetRepCol(6,140);
  SetRepCol(9,221);
  StartFormat(15);
  OutString(0,0,USetStr(2462),false);
  OutString(2,0,USetStr(2463),false);
  OutString(3,0,USetStr(2464),true);
  if (withcost) then begin
    OutString(4,0,USetStr(2468),true);
  end;  
  OutString(1,0,USetStr(2466),true);
  EndFormat;
  Gray_Divider(0,1);
  cufoundf = true;
  CUr.Code = fromcust;
  while(LoopMain(CUr,1,cufoundf)) begin
    if (cufoundf) then begin
      if (nonblank(tocust)) then begin
        if (CUr.Code>tocust) then begin
          cufoundf = false;
        end;
      end;    
    end;
    testf = true;
    if (CUr.CUType==0) then begin testf = false; end;    
    if (cufoundf and testf) then begin
    custprintf = false;
    sum1 = BlankVal;
    sum2 = BlankVal;
    sum3 = BlankVal;
    mains = BlankVal;
    mainq = BlankVal;
    maingps = BlankVal;
    if (ReadFirstItem(RepSpec.f1,INr,true,false)) then begin
      ICSp.ArtCode = INr.Code;
      ICSp.CustCode = CUr.Code;
      foundf = true;
      ResetLoop(ICSp);
      while(LoopMain(ICSp,2,foundf)) begin
        if (TestArtCodeMatch(ICSp.ArtCode,RepSpec.f1)==false) then begin
          foundf = false;
        end;
        if (ICSp.CustCode<>CUr.Code) then begin
          foundf = false;
        end;
        if (foundf==true) then begin
          INr.Code = ICSp.ArtCode;
          GetDateTurnover(INr.Code,ICSp.Variety,CUr.Code,"","",ICSp,"quant",RepSpec.sStartDate,RepSpec.sEndDate,q,RepSpec.basecurncy);
          GetDateTurnover(INr.Code,ICSp.Variety,CUr.Code,"","",ICSp,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,s,RepSpec.basecurncy);
          GetDateTurnover(INr.Code,ICSp.Variety,CUr.Code,"","",ICSp,"grossprofit",RepSpec.sStartDate,RepSpec.sEndDate,gps,RepSpec.basecurncy);
          if (custprintf==false) then begin
            if ((q<>0) or (gps<>0) or (s<>0)) then begin
              custprintf = true;
              StartFormat(15);
              OutString(0,0,CUr.Code,false);
              OutString(50,0,CUr.Name,false);
              EndFormat;
              Gray_Divider(0,1);
            end;
          end;
          if (testf) then begin
            INr.Code = ICSp.ArtCode;
            GetDateTurnover(INr.Code,ICSp.Variety,CUr.Code,"","",ICSp,"quant",RepSpec.sStartDate,RepSpec.sEndDate,q,RepSpec.basecurncy);
            GetDateTurnover(INr.Code,ICSp.Variety,CUr.Code,"","",ICSp,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,s,RepSpec.basecurncy);
            GetDateTurnover(INr.Code,ICSp.Variety,CUr.Code,"","",ICSp,"grossprofit",RepSpec.sStartDate,RepSpec.sEndDate,gps,RepSpec.basecurncy);
            if (custprintf==false) then begin
              if ((q<>0) or (gps<>0) or (s<>0)) then begin
                custprintf = true;
                StartFormat(15);
                OutString(0,0,CUr.Code,false);
                OutString(50,0,CUr.Name,false);
                EndFormat;
                Gray_Divider(0,1);
              end;
            end;
            if (TestArtCodeMatch(ICSp.ArtCode & ICSp.Variety,RepSpec.f1)==false) then begin
              RecordCopy(IN2r,INr);
              mains = mains + s;
              mainq = mainq + q;
              maingps = maingps + gps;
            end else begin
              INr.Code = INr.Code & ICSp.Variety;
              ArtSTItemLine(INr,q,gps,s,sum1,sum2,sum3,withcost);
            end;
          end;
        end;
      end;
      if (nonblank(IN2r.Code)) then begin
        mainq = mainq - sum1;
        maingps = maingps - sum2;
        mains = mains - sum3;
        ArtSTItemLine(IN2r,mainq,maingps,mains,sum1,sum2,sum3,withcost);
        RecordNew(IN2r);
      end;
      if (custprintf) then begin
        Gray_Divider(0,1);
        StartFormat(15);
        OutVal(3,0,sum1,M4Val,true);
        if (withcost) then begin
          OutVal(4,0,sum2,M4Val,true);
        end;  
        OutVal(1,0,sum3,M4Val,true);
        EndFormat;
        StartFormat(15);
        EndFormat;
      end;
    end;
    totsum1 = totsum1 + sum1;
    totsum2 = totsum2 + sum2;
    totsum3 = totsum3 + sum3;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutVal(3,0,totsum1,M4Val,true);
  if (withcost) then begin
    OutVal(4,0,totsum2,M4Val,true);
  end;  
  OutVal(1,0,totsum3,M4Val,true);
  EndFormat;
  EndJob;
  return;
end;

