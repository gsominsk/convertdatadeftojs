external procedure AutomatedSalesOrderly(string);
external procedure AllVATRn_PrintArrayVI(record RcVc,var array string,var LongInt);
external function Boolean HasMultiCurrency();
external function roundmode GetVATRoundModeRB();
external procedure AllAVATRn_OverviewPrintArrayIV_NotTotals(integer,integer,var array string,var LongInt);
external function roundmode SetRoundModeD(Integer);
external function roundmode DefaultRoundMode();
external procedure PrintDetailed_VATVIVc(record RcVc,record SMVc,Integer);
external procedure PrintDetailed_VIVc(record RcVc,record SMVc,Integer);
external procedure PrintDetailed_IVVc(record RcVc,record SMVc,Integer);
external procedure PrintDetailed_POSBalancesVc(record RcVc,record SMVc,Integer);
external procedure AllVATRn_PrintVATVI(record RcVc,record VATVIVc,record SMVc,Date,val,var val,var val,var val);
external procedure AllVATRn_AddToArrayVI(record RcVc,record VIVc,record SMVc,Date,val,var val,var val,var val,var array string,var LongInt);
external procedure AllVATRn_PrintVATIV(record RcVc,LongInt,LongInt);
external procedure AllVATRn_PrintDeatailedHeader(Integer,Integer,Integer,record RcVc);
external procedure AllVATRn_OverviewAddToVAT(record IVVc,record SMVc,Integer,val);
external procedure AllAVATRn_OverviewAddToArrayIV_NotTotals(record IVVc,Date,string,Integer,var val,var val,var val,record SMVc,
                                                              val,integer,var array string,var LongInt);
external procedure AllVATRn_IPBookVAT(record RcVc,record SMVc,var val,var val,var val);
external procedure AllVATRn_OPBookVAT(record RcVc,record SMVc,var val,var val,var val);
external procedure AllVATRn_PrintIP(record RcVc,record SMVc,var val,var val,var val);
external procedure AllVATRn_PrintOP(record RcVc,record SMVc,var val,var val,var val);
external function val FindPaidInPeriod_IVVc(record IVVc,Boolean,Date,Date);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure GetVATdouble(string,var val,var val,Integer);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function val FindVAT(string,val,Integer,Integer);
external procedure HT2Per(Date, Date , var string);

procedure GetInvType(Integer nr, var String it, var Integer sign)
Begin
  sign = 1;
  if (nr==kInvoiceTypeNormal or nr==kInvoiceTypeNormalSpecialSales) begin
    it = USetStr(1150);
  end;
  if (nr==kInvoiceTypeCash or nr==kInvoiceTypeCashInvoiceReceiptPRT) begin
    it = USetStr(2488);
  end;
  if (nr==kInvoiceTypeCredit or nr==kInvoiceTypeCreditSpecialSales) begin
    it = USetStr(2433);
    sign = -1;
  end;
  if (nr==kInvoiceTypeInterest) begin
    it = USetStr(2547);
  end;
  Return;
end;

//Look up the VAT value

Procedure  GetVATProc2 (string vatc,  val debit,  val credit,  Var val VATval)
begin
  if (debit > 0) begin
    VATval = FindVAT (vatc,debit,0,0);          //(0=val not inc VAT, 1=val inc VAT)
  end;
  if (credit >0) begin
    VATval = FindVAT (vatc,credit,0,0);
  end;
  return;
end;

procedure ALLVATRnOverview(record RcVc RepSpec)
begin
  record IVVc IVr;
  record VIVc VIr;
  record VATVIVc VATVIr;
  record IPVc IPr;
  record OPVc OPr;
  record SMVc SMr;
  record SMVc SM2r;
  record SMVc SM3r;
  record SMVc SM4r;
  record SMVc SM5r;
  record SMVc SM6r;
  record CLInVc CLIr;
  record CLOutVc CLOr;
  record ExpVc EXPr;
  record VATCodeBlock vcb;
  record TRVc TRr;
  row SMVc SMrw;
  row VIVc VIrw;
  row ExpVc  EXPrw;
  row TRVc TRrw;
  row CLInVc CLIrw;
  row CLOutVc CLOrw;
  row VATCodeBlock vcbrow;
  LongInt frnr,tonr;  
  integer rwcnt, SMrwcnt, SM2rwcnt, SM3rwcnt, SM4rwcnt, SM5rwcnt, SM6rwcnt;
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9,p45;
  Integer i, sign, j,rw;
  val  nett, VATval;
  Val nettfrominv, VATSum, tBase;
  Val tvat, VATTemp,  VATSub, tt, eff;
  Val ndtn, nctn  ,ndtv, nctv;
  Val cnett, cvat, ctotal,tv,totvat;
  String 20 regstr;
  string 22 comment;
  String 6 invt, pinvt;
  String 80 tstr;
  record APAccBlock APAb;
  record AccBlock ARAb;
  Boolean TsHr, testf, vatfound;
  val tmp,paidcoef,blnkval;
  record APVc APr;
  record ARVc ARr;
  array string 255 aInvoices;
  LongInt aInvCnt;
  
  BlockLoad(APAb);
  BlockLoad(ARAb);
  frnr = FirstInRange(RepSpec.f1,10);
  tonr = LastInRange(RepSpec.f1,10);
// Positions
  p1= 55;
  p2= 70;
  p3= 124;
  p4= 165;
  p45 = 200;
  p5= 285;
  p6= 345;
  p7= 415;
  p8= 455;
  p9 =480;

// Get parameters & Init
  tt = 0;
  tvat = 0;
  tBase = 0;
  ndtn  =  0;
  nctn = 0;
  ndtv = 0;
  nctv  = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  aInvCnt = 0;

// Header
  StartReportJob(USetStr(7342));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  rw = 1;
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.d1)) then begin
    Header(rw,USetStr(7339) & " " & RepSpec.d1,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.Language)) then begin
    Header(rw,USetStr(2319) & " " & RepSpec.Language,1);
    rw = rw + 1;
  end;  
  EndHeader;
  if (RepSpec.flags[1]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2430),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(5201),false);
      OutString(p3,0,USetStr(2358),false);
      OutString(p4,0,USetStr(5203),false);
      if (RepSpec.flags[12]==1) then begin 
        OutString(p45,0,USetStr(28222),false);
      end;           
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);       //This means excluding VAT
    OutString(p6,0,USetStr(5233),true);
    OutString(p7,0,USetStr(2368),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);
    if (ARAb.IPBookVAT!=0) then begin
      AllVATRn_IPBookVAT(RepSpec,SMr,tt,tBase,tvat);
    end else begin
      IVr.TransDate = RepSpec.sStartDate;
      while (LoopKey("TransDate",IVr,1,TsHr)) begin
        if (IVr.TransDate>RepSpec.sEndDate) then begin
          TsHr = false;
        end;
        testf = TsHr;
        if (RepSpec.flags[7]==1 and IVr.Sum3!=0)  then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==2 and IVr.Sum3==0)  then begin
          testf = false;
        end;
          // Get Data
        i = i + 1;
        GetInvType(IVr.InvType,invt,sign);
        // Print Data
        if (IVr.OKFlag==0)then begin
          testf = false;
        end;
        if (IVr.Invalid!=0) then begin
          testf = false;
        end;
        if (nonblank(RepSpec.f1)) then begin
          if (IVr.SerNr<frnr) then begin testf = false; end;
          if (IVr.SerNr>tonr) then begin testf = false; end;
        end;
        if (testf and nonblank(RepSpec.d1)) then begin
          testf = false;
          TRr.Number = IVr.SerNr;
          TRr.IntYc = 201;
          if (ReadFirstKey("Number",TRr,2,true)) then begin
            if (TRr.RegDate>=RepSpec.d1) then begin
              testf=true;
            end;
          end;
        end;
        if (nonblank(RepSpec.Language)) then begin
          if (RepSpec.Language!=IVr.LangCode) then begin
            testf = false;
          end;
        end;        
        switch (IVr.InvType) begin
          case kInvoiceTypeCash: if (RepSpec.flags[20]!=0) then begin testf = false; end;
          case kInvoiceTypeCredit: if (RepSpec.flags[21]!=0) then begin testf = false; end;
        end;
        if (testf) then begin
          if (RepSpec.flags[6]==0) then begin
            AllAVATRn_OverviewAddToArrayIV_NotTotals(IVr,IVr.TransDate,invt,sign,tt,tBase,tvat,SMr,1,RepSpec.flags[12],aInvoices,aInvCnt);
          end;
          if (RepSpec.flags[6]==1) then begin
            AllVATRn_OverviewAddToVAT(IVr,SMr,sign,1);
            tt = tt + (mulratetobase1(IVr.CurncyCode,IVr.Sum4,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff)*sign);
            if (IVr.InclVAT>0) then begin
              tv = IVr.Sum1 - IVr.Sum3;
            end else begin
              tv = IVr.Sum1;
            end;             
            tBase = tBase + (mulratetobase1(IVr.CurncyCode,tv,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff)*sign);
  // what is tv         tBase = tBase + (mulratetobase1(IVr.CurncyCode,tv,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff)*sign);
            VATTemp = (mulratetobase1(IVr.CurncyCode,IVr.Sum3,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff)*sign*100)/(mulratetobase1(IVr.CurncyCode,IVr.Sum1,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff)*sign);          
            tvat = tvat + (mulratetobase1(IVr.CurncyCode,IVr.Sum3,IVr.FrRate,IVr.ToRateB1,IVr.ToRateB2,IVr.BaseRate1,IVr.BaseRate2,DefaultCurRoundOff)*sign);
          end;
        end;
      end;
      if (RepSpec.flags[12]==1) then begin 
        SortStringArray(aInvoices);
      end;  
      AllAVATRn_OverviewPrintArrayIV_NotTotals(RepSpec.flags[12],1,aInvoices,aInvCnt);
    end;
    // Sales Invoice Footer
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(7348),false);
    if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
      OutString(0,0,"",false);
      OutString(0,0,"",false);
      OutString(0,0,"",false);
    end;
    OutVal(p5,0,tBase,M4Val,true);
    OutVal(p6,0,tvat,M4Val,true);
    OutVal(p7,0,tt,M4Val,true);
    eff  =  tvat/tBase*100;
    OutVal(p8,0,eff,M4Val,True);
    EndFormat;
    StartFormat(15);
    EndFormat;
    if (HasMultiCurrency) then begin
      StartFormat(25);
      OutString(0,0,USetStr(7349),false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(p2,0,USetStr(7347),true);
    OutString(p4,0,USetStr(7351),true);
    EndFormat;
    SMrwcnt = MatRowCnt(SMr);
    for (i=0;i<SMrwcnt;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      StartFormat(15);
      OutString(p2,0,SMrw.VATCode,true);
      OutString (p4,0,SMrw.DebVal,true);
      if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutString (p6,0,SMrw.CredVal,true);
      EndFormat;
    end;
    StartFormat(25);
    EndFormat;
  end;

  if (RepSpec.flags[13]==1) then begin
    AllVATRn_PrintVATIV(RepSpec,frnr,tonr);
  end;
  
//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  invt  = 0;
  tBase = 0;
  tvat = 0;
  VATTemp  = 0;
  tt = 0;
  eff = 0;
  VATSub  = 0;

// Positions
  p1= 55;
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 285;
  p6= 345;
  p7= 415;
  p8= 455;
  p9 =480;
  RecordNew(SMr);

//Receipts Start here
  if (RepSpec.flags[10]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(7370),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(7371),false);
      OutString(p3,0,USetStr(7373),false);
      OutString(p4,0,USetStr(5203),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);       //This means excluding VAT
    OutString(p6,0,USetStr(5233),true);
    OutString(p7,0,USetStr(2368),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);
    AllVATRn_PrintIP(RepSpec,SMr,tt,tBase,tvat);
    // Receipt Footer
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(7372),false); //ENGLISH
    if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
      OutString(0,0,"",false);
      OutString(0,0,"",false);
      OutString(0,0,"",false);
    end;
    OutVal(p5,0,tBase,M4Val,true);
    OutVal(p6,0,tvat,M4Val,true);
    OutVal(p7,0,tt,M4Val,true);
    eff  =  tvat/tBase*100;
    OutVal(p8,0,eff,M4Val,True);
    EndFormat;
    StartFormat(15);
    EndFormat;
    if (HasMultiCurrency) then begin
      StartFormat(25);
      OutString(0,0,USetStr(7349),false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(p2,0,USetStr(7347),true);
    OutString(p4,0,USetStr(7351),true);
    EndFormat;
    SMrwcnt = MatRowCnt(SMr);
    for (i=0;i<SMrwcnt;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      StartFormat(15);
      OutString(p2,0,SMrw.VATCode,true);
      OutString (p4,0,SMrw.DebVal,true);
      if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutString (p6,0,SMrw.CredVal,true);
      EndFormat;
    end;
    StartFormat(25);
    EndFormat;
  end;

//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  invt  = 0;
  tBase = 0;
  tvat = 0;
  VATTemp  = 0;
  tt = 0;
  eff = 0;
  VATSub  = 0;

// Positions
  p1= 55;
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 285;
  p6= 345;
  p7= 415;
  p8= 455;
  p9 =480;
  RecordNew(SMr);

//Payments Start here
  if (RepSpec.flags[11]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(7374),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(17274),false); //ENGLISH
      OutString(p3,0,USetStr(17275),false); //ENGLISH
      OutString(p4,0,USetStr(7368),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);       //This means excluding VAT
    OutString(p6,0,USetStr(5233),true);
    OutString(p7,0,USetStr(17273),true); //ENGLISH
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);
    AllVATRn_PrintOP(RepSpec,SMr,tt,tBase,tvat);
    // Payment Footer
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(17276),false); //ENGLISH
    if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
      OutString(0,0,"",false);
      OutString(0,0,"",false);
      OutString(0,0,"",false);
    end;
    OutVal(p5,0,tBase,M4Val,true);
    OutVal(p6,0,tvat,M4Val,true);
    OutVal(p7,0,tt,M4Val,true);
    eff  =  tvat/tBase*100;
    OutVal(p8,0,eff,M4Val,True);
    EndFormat;
    StartFormat(15);
    EndFormat;
    if (HasMultiCurrency) then begin
      StartFormat(25);
      OutString(0,0,USetStr(7349),false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(p2,0,USetStr(7347),true);
    OutString(p4,0,USetStr(7351),true);
    EndFormat;
    SMrwcnt = MatRowCnt(SMr);
    for (i=0;i<SMrwcnt;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      StartFormat(15);
      OutString(p2,0,SMrw.VATCode,true);
      OutString (p4,0,SMrw.DebVal,true);
      if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutString (p6,0,SMrw.CredVal,true);
      EndFormat;
    end;
    StartFormat(25);
    EndFormat;
  end;

//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  invt  = 0;
  tBase = 0;
  tvat = 0;
  VATTemp  = 0;
  tt = 0;
  eff = 0;
  VATSub  = 0;
  ClearArray(aInvoices);
  aInvCnt = 0;

// Positions
  p1= 55;
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 285;
  p6= 345;
  p7= 415;
  p8= 455;
  p9 =480;

//Purchases Start here
  if (RepSpec.flags[3]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(4041),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(5201),false);
      OutString(p3,0,USetStr(2358),false);
      OutString(p4,0,USetStr(7368),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);       //This means excluding VAT
    OutString(p6,0,USetStr(5233),true);
    OutString(p7,0,USetStr(2368),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);

    if (APAb.OPBookVAT!=0) then begin
      AllVATRn_OPBookVAT(RepSpec,SMr,tt,tBase,tvat);
    end else begin
      VIr.TransDate = RepSpec.sStartDate;
      while (LoopKey("TransDate",VIr,1,TsHr)) begin
        if (VIr.TransDate>RepSpec.sEndDate) then begin
          TsHr = false;
        end;
        testf = true;
        if (nonblank(RepSpec.f1)) then begin
          if (VIr.SerNr<frnr) then begin testf = false; end;
          if (VIr.SerNr>tonr) then begin testf = false; end;
        end;
        if (RepSpec.flags[7]==1 and VIr.VATVal!=0)  then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==1 and blank(VIr.VATVal) and VIr.CalcVATVal!=0) then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==2 and VIr.CalcVATVal==0) then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==2 and (nonblank(VIr.VATVal) and VIr.VATVal==0)) then begin
          testf = false;
        end;
        switch (VIr.InvType) begin
          case kInvoiceTypeCash: if (RepSpec.flags[20]!=0) then begin testf = false; end;
          case kInvoiceTypeCredit: if (RepSpec.flags[21]!=0) then begin testf = false; end;
        end;

        if (testf and nonblank(RepSpec.d1)) then begin
          testf = false;
          TRr.Number = VIr.SerNr;
          TRr.IntYc = 203;
          if (ReadFirstKey("Number",TRr,2,true)) then begin
            if (TRr.RegDate>=RepSpec.d1) then begin
              testf = true;
            end;
          end;
        end;
        if (TsHr==false) then begin
          testf = false;
        end;
        if (VIr.Invalid!=0) then begin testf = false; end;
        if (VIr.OKFlag==0)  then begin testf = false; end;
        if (testf) then begin
          AllVATRn_AddToArrayVI(RepSpec,VIr,SM2r,VIr.TransDate,1,tvat,tBase,tt,aInvoices,aInvCnt);
       // Get Data
          i = i + 1;
        end;
      end;
      if (RepSpec.flags[12]==1) then begin 
        SortStringArray(aInvoices);
      end;        
      AllVATRn_PrintArrayVI(RepSpec,aInvoices,aInvCnt)
    end;
    // Purchase Invoice Footer
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(7352),false);
    if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
      OutString(0,0,"",false);
      OutString(0,0,"",false);
      OutString(0,0,"",false);
    end;
    OutVal(p5,0,tBase,M4Val,true);
    OutVal(p6,0,tvat,M4Val,true);
    OutVal(p7,0,tt,M4Val,true);
    OutVal(p8,0,tvat*100/tBase,M4Val,True);
    EndFormat;
    StartFormat(15);
    EndFormat;
    if (HasMultiCurrency) then begin
      StartFormat(25);
      OutString(0,0,USetStr(7349),false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(p2,0,USetStr(7347),true);
    OutString(p4,0,USetStr(7351),true);
    EndFormat;
    SM2rwcnt = MatRowCnt(SM2r);
    for (i=0;i<SM2rwcnt;i=i+1) begin
      MatRowGet(SM2r,i,SMrw);
      StartFormat(15);
      OutString(p2,0,SMrw.VATCode,true);
      OutString (p4,0,SMrw.DebVal,true);
      if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutString (p6,0,SMrw.CredVal,true);
      EndFormat;
    end;
    StartFormat(25);
    EndFormat;
  end;

  if (RepSpec.flags[15]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(4041),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(5201),false);
      OutString(p3,0,USetStr(2358),false);
      OutString(p4,0,USetStr(7368),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);       //This means excluding VAT
    OutString(p6,0,USetStr(5233),true);
    OutString(p7,0,USetStr(2368),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);

    if (APAb.OPBookVAT!=0) then begin
      AllVATRn_OPBookVAT(RepSpec,SMr,tt,tBase,tvat);
    end else begin
      VATVIr.TransDate = RepSpec.sStartDate;
      while (LoopKey("TransDate",VATVIr,1,TsHr)) begin
        if (VATVIr.TransDate>RepSpec.sEndDate) then begin
          TsHr = false;
        end;
        testf = true;
        if (nonblank(RepSpec.f1)) then begin
          if (VATVIr.SerNr<frnr) then begin testf = false; end;
          if (VATVIr.SerNr>tonr) then begin testf = false; end;
        end;
        if (RepSpec.flags[7]==1 and VATVIr.VATVal!=0) then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==1 and blank(VATVIr.VATVal) and VATVIr.CalcVATVal!=0) then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==2 and VATVIr.CalcVATVal==0) then begin
          testf = false;
        end;
        if (RepSpec.flags[7]==2 and (nonblank(VATVIr.VATVal) and VATVIr.VATVal==0)) then begin
          testf = false;
        end;

        if (testf) and nonblank(RepSpec.d1) then begin
          testf = false;
          TRr.Number = VATVIr.SerNr;
          TRr.IntYc = VATVIYc;
          if (ReadFirstKey("Number",TRr,2,true)) then begin
            if (TRr.RegDate>=RepSpec.d1) then begin
              testf = true;
            end;
          end;
        end;
        if (TsHr==false) then begin
          testf = false;
        end;
//        if (VATVIr.Invalid<>0) then begin testf = false; end;
        if (VATVIr.OKFlag == 0)  then begin testf = false; end;
        if (testf) then begin
          AllVATRn_PrintVATVI(RepSpec,VATVIr,SM2r,VATVIr.TransDate,1,tvat,tBase,tt);
     // Get Data
          i = i + 1;
        end;
      end;
    end;
    // Purchase Invoice Footer
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(7352),false);
    if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
      OutString(0,0,"",false);
      OutString(0,0,"",false);
      OutString(0,0,"",false);
    end;
    OutVal(p5,0,tBase,M4Val,true);
    OutVal(p6,0,tvat,M4Val,true);
    OutVal(p7,0,tt,M4Val,true);
    OutVal(p8,0,tvat*100/tBase,M4Val,True);
    EndFormat;
    StartFormat(15);
    EndFormat;
    if (HasMultiCurrency) then begin
      StartFormat(25);
      OutString(0,0,USetStr(7349),false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(p2,0,USetStr(7347),true);
    OutString(p4,0,USetStr(7351),true);
    EndFormat;
    SM2rwcnt = MatRowCnt(SM2r);
    for (i=0;i<SM2rwcnt;i=i+1) begin
      MatRowGet(SM2r,i,SMrw);
      StartFormat(15);
      OutString(p2,0,SMrw.VATCode,true);
      OutString (p4,0,SMrw.DebVal,true);
      if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutString (p6,0,SMrw.CredVal,true);
      EndFormat;
    end;
    StartFormat(25);
    EndFormat;
  end;
  
//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  VATTemp  = 0;
  eff = 0;
  VATSub  = 0;

// Positions
  p1= 45;
  p2= 65;//was 55
  p3= 115;
  p4= 140;
  p5= 270;
  p6= 330;
  p7= 400;
  p8= 440;
  p9 =480;

//Expenses Start here
  if (RepSpec.flags[5]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(5140),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(5142),false);
      OutString(p3,0,USetStr(5147),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);
    OutString(p6,0,USetStr(5150),true);
    OutString(p7,0,USetStr(5146),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);
    EXPr.TransDate = RepSpec.sStartDate;
    while (LoopKey("TransDate",EXPr,1,TsHr)) begin
      if (EXPr.TransDate>RepSpec.sEndDate) then begin
        TsHr = false;
      end;
      testf = TsHr;
      VATSub = 0;
      if (RepSpec.flags[7]==1 and EXPr.CalcVATVal!=0) then begin
        testf = false;
      end;
      if (RepSpec.flags[7]==2 and EXPr.CalcVATVal==0) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (EXPr.SerNr<frnr) then begin testf = false; end;
        if (EXPr.SerNr>tonr) then begin testf = false; end;
      end;
      // Get Data
      i = i + 1;
      // Print Data
      if (EXPr.OKFlag==0)then begin
        testf = false;
      end;
      if (Expr.Invalid!=0)then begin
        testf = false;
      end;
      if (testf and nonblank(RepSpec.d1)) then begin
        testf=false;
        TRr.Number = EXPr.SerNr;
        TRr.IntYc = 207;
        if (ReadFirstKey("Number",TRr,2,true)) then begin
          if (TRr.RegDate>=RepSpec.d1) then begin
            testf=true;
          end;
        end;
      end;     
      if (testf == true) then begin
        tvat = tvat + mulratetobase1(EXPr.CurncyCode,EXPr.CalcVATVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff);
        VATSub   =  mulratetobase1(EXPr.CurncyCode,EXPr.CalcVATVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff) ;
        tt = tt + mulratetobase1(EXPr.CurncyCode,EXPr.PayVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff);
        tBase = tBase + (mulratetobase1(EXPr.CurncyCode,EXPr.PayVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff))-(VATSub);
        VATTemp = (VATSub*100)/(mulratetobase1(EXPr.CurncyCode,EXPr.PayVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff)-VATSub);
        eff  =  tvat/tBase*100;

        if (RepSpec.flags[6]==0) then begin
          StartFormat(15);
          OutDate(p1,0,EXPr.TransDate,true);
          OutLongInt(p2,"DblExpVc",EXPr.SerNr,false);
          OutString(p3,0,EXPr.Name,false);
          OutVal(p5,0,(mulratetobase1(EXPr.CurncyCode,EXPr.PayVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff))-(VATSub),M4Val,true);//nett
          OutVal(p6,0,mulratetobase1(EXPr.CurncyCode,EXPr.CalcVATVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff),M4Val,true);//vat
          OutVal(p7,0,mulratetobase1(EXPr.CurncyCode,EXPr.PayVal,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff),M4Val,true);
          OutVal(p8,0,VATTemp,M4Val,true);
          if (HasMultiCurrency) then begin
            OutString(p9,0,EXPr.CurncyCode,true);
          end;
          EndFormat;
        end;
        rwcnt = MatRowCnt(EXPr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(EXPr,i,EXPrw);
          If (EXPrw.ovst!=1) then begin
            nettfrominv  =  mulratetobase1(EXPr.CurncyCode,EXPrw.Sum,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff);
            VATSum  = mulratetobase1(EXPr.CurncyCode,EXPrw.VATSum,EXPr.FrRate,EXPr.ToRateB1,EXPr.ToRateB2,EXPr.BaseRate1,EXPr.BaseRate2,DefaultCurRoundOff);
            vatfound = false;
            SM3rwcnt = MatRowCnt(SM3r);
            for (j=0;j<SM3rwcnt;j=j+1) begin
              MatRowGet(SM3r,j,SMrw);
              if (SMrw.VATCode== EXPrw.VATCode) then begin
                //Add your values
                SMrw.DebVal =  SMrw.DebVal + nettfrominv-VATSum;
                SMrw.CredVal = SMrw.CredVal + EXPrw.VATSum;
                MatRowPut(SM3r,j,SMrw);
                vatfound = true;
              end;
            end;
            if (vatfound==false) then begin
              SMrw.VATCode = EXPrw.VATCode;
              SMrw.DebVal =   nettfrominv - VATSum;
              SMrw.CredVal =   EXPrw.VATSum;
              MatRowPut(SM3r,SM3rwcnt,SMrw);
            end;
          end;
        end;
      end;
    end;//End while
    // Expenses Footer
   Gray_Divider(0,1);
   StartFormat(15);
   OutString(0,0,USetStr(7350),false);
   if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
   end;
   OutVal(p5,0,tBase,M4Val,true);
   OutVal(p6,0,tvat,M4Val,true);
   OutVal(p7,0,tt,M4Val,true);
   OutVal(p8,0,eff,M4Val,True);
   EndFormat;
   StartFormat(15);
   EndFormat;
   if (HasMultiCurrency) then begin
     StartFormat(25);
     OutString(0,0,USetStr(7349),false);
     EndFormat;
   end;
   StartFormat(15);
   OutString(p2,0,USetStr(7347),true);
   OutString(p4,0,USetStr(7351),true);
   OutString(p5,0,USetStr(7353),true);
   EndFormat;
   SM3rwcnt = MatRowCnt(SM3r);
   for (i=0;i<SM3rwcnt;i=i+1) begin
     MatRowGet(SM3r,i,SMrw);
     StartFormat(15);
     OutString(p2,0,SMrw.VATCode,true);
     OutString (p4,0,SMrw.DebVal,true);
     OutString (p5,0,SMrw.CredVal,true);
     EndFormat;
   end;
   StartFormat(25);
   EndFormat;
 end;

//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  VATTemp  = 0;
  eff = 0;
  VATSub  = 0;

// Positions
  p1= 45;
  p2= 65;//was 55
  p3= 115;
  p4= 140;
  p5= 270;
  p6= 330;
  p7= 400;
  p8= 440;
  p9 =480;

//POS Balances Start here
  if (RepSpec.flags[16]!=0) then begin
   BlockLoad(vcb);
   StartFormat(15);
   OutString(0,0,USetStr(7377),false);
   OutString(p3,0,"",false);
   OutString(p8,0,"",true);
   EndFormat;
   StartFormat(15);
   if (RepSpec.flags[6]==0) then begin
     OutString(0,0,USetStr(2353),false);
     OutString(p2,0,USetStr(2503),false);
     OutString(p3,0,USetStr(2504),false);
   end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
   OutString(p5,0,USetStr(2505),true);
   OutString(p6,0,USetStr(2506),true);
   OutString(p7,0,USetStr(7355),true);
   OutString(p8,0,USetStr(7356),true);
   if (HasMultiCurrency) then begin
     OutString(p9,0,USetStr(7357),true);
   end;
   EndFormat;
   Gray_Divider(0,1);
   TRr.IntYc = RestAccYc;
   TRr.TransDate = RepSpec.sStartDate;
   while (LoopKey("IntYc",TRr,2,TsHr)) begin
     if (TRr.IntYc!=RestAccYc) then begin TsHr = false; end;
     if (TRr.TransDate>RepSpec.sEndDate) then begin
       TsHr = false;
     end;
     testf = TsHr;
     // Get Data
     i = i + 1;
     if (testf and nonblank(RepSpec.d1)) then begin
       testf=false;
       if (TRr.RegDate>=RepSpec.d1) then begin
         testf=true;
       end;
     end;
     if (testf and RepSpec.flags[6]==0) then begin
       rwcnt = MatRowCnt(TRr);
       for (i=0;i<rwcnt;i=i+1) begin
         MatRowGet(TRr,i,TRrw);
         if (nonblank(TRrw.VATCode) and TRrw.ovst!=1) then begin
           GetVATProc2(TRrw.VATCode,TRrw.DebVal,TRrw.CredVal,VATval);
           StartFormat(15);
           OutDate(p1,0,TRr.TransDate,true);
           OutStringID(p2,"DblTRVc",TRr.Number,false,TRr.IntYc);
           comment = TRrw.Comment;
           OutString (p3,0,comment,false);
           if (nonblank (TRrw.DebVal)) then begin
             OutString (p5,0,TRrw.DebVal,true);
             OutString (p7,0,VATval,true);
             OutString(p9,0,TRrw.VATCode,true);
             ndtn  =  ndtn  +  TRrw.DebVal;
             ndtv = ndtv  +   VATval;
           end;
           if (nonblank(TRrw.CredVal)) then begin
             OutString (p6,0,TRrw.CredVal,true);
             OutString (p8,0,VATVal,true);
             OutString(p9,0,TRrw.VATCode,true);
             nctn = nctn   +  TRrw.CredVal;
             nctv  = nctv  +  VATval;
           end;
           vatfound = false;
           SM4rwcnt = MatRowCnt(SM4r);
           for (j=0;j<SM4rwcnt;j=j+1) begin
             MatRowGet(SM4r,j,SMrw);
             if (SMrw.VATCode == TRrw.VATCode) then begin
               //Add your values
               SMrw.DebVal =  SMrw.DebVal + TRrw.DebVal;
               SMrw.CredVal =  SMrw.CredVal + TRrw.CredVal;
               MatRowPut(SM4r,j,SMrw);
               vatfound = true;
             end;
           end;
           if (vatfound==false) then begin
             SMrw.VATCode = TRrw.VATCode;
             SMrw.DebVal =   TRrw.DebVal;
             SMrw.CredVal =  TRrw.CredVal;
             MatRowPut(SM4r,SM4rwcnt,SMrw);
           end;
           EndFormat;
         end;
       end;
     end;
     if (testf and RepSpec.flags[6]==1) then begin
       rwcnt = MatRowCnt(TRr);
       for (i=0;i<rwcnt;i=i+1) begin
         MatRowGet(TRr,i,TRrw);
         if (nonblank(TRrw.VATCode) and TRrw.ovst!=1) then begin
           GetVATProc2(TRrw.VATCode,TRrw.DebVal,TRrw.CredVal,VATval);
           if (nonblank(TRrw.DebVal)) then begin
             ndtn  =  ndtn  +  TRrw.DebVal;
             ndtv = ndtv  +   VATval;
           end;
           if (nonblank(TRrw.CredVal)) then begin
             nctn = nctn   +  TRrw.CredVal;
             nctv  = nctv  +  VATval;
           end;
           vatfound = false;
           SM4rwcnt = MatRowCnt(SM4r);
           for (j=0;j<SM4rwcnt;j=j+1) begin
             MatRowGet(SM4r,j,SMrw);
             if (SMrw.VATCode==TRrw.VATCode) then begin
               //Add your values
               SMrw.DebVal =  SMrw.DebVal + TRrw.DebVal;
               SMrw.CredVal =  SMrw.CredVal + TRrw.CredVal;
               MatRowPut(SM4r,j,SMrw);
               vatfound = true;
             end;
           end;   
           if (vatfound==false) then begin
             SMrw.VATCode = TRrw.VATCode;
             SMrw.DebVal =   TRrw.DebVal;
             SMrw.CredVal =  TRrw.CredVal;
             MatRowPut(SM4r,SM4rwcnt,SMrw);
           end;
           //EndFormat;
         end;
       end;
     end;
   end;//end while
// POS Balances Footer

   Gray_Divider(0,1);
   StartFormat(15);
   OutString(0,0,USetStr(7378),false);
   if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
     OutString(0,0,"",false);
     OutString(0,0,"",false);
   end;
   OutVal(p5,0,ndtn,M4Val,true);
   OutVal(p6,0,nctn,M4Val,true);
   OutVal(p7,0,ndtv,M4Val,true);
   OutVal(p8,0,nctv,M4Val,true);
   EndFormat;
   StartFormat(25);
   EndFormat;
   StartFormat(25);
   OutString(0,0,USetStr(7359),false);
   EndFormat;
   StartFormat(15);
   OutString(p1,0,USetStr(7347),true);
   OutString(p4,0,USetStr(7360),true);
   OutString(p6,0,USetStr(7361),true);
   EndFormat;
   SM4rwcnt = MatRowCnt(SM4r);
   for (i=0;i<SM4rwcnt;i=i+1) begin
     MatRowGet(SM4r,i,SMrw);
     StartFormat(15);
     OutString(p1,0,SMrw.VATCode,true);
     OutString (p4,0,SMrw.DebVal,true);
     OutString (p6,0,SMrw.CredVal,true);
     EndFormat;
   end;
   StartFormat(15);
   EndFormat;
   StartFormat(15);
   OutString(p1,0,USetStr(7362),false);
   OutString(p1,0,USetStr(7363),false);
   EndFormat;
   StartFormat(50);
   EndFormat;
   
 end;

//reinit variables before continuing
 tt = 0;
 tvat = 0;
 tBase = 0;
 TsHr = true;
 testf = true;
 i    = 0;
 VATTemp  = 0;
 eff = 0;
// Positions
 p1= 45;
 p2= 55;
 p3= 110;//was 100
 p4= 140;
 p5= 260;
 p6= 310;
 p7= 380;
 p8= 440;
 p9 =480;

//Transactions Start here
 if (RepSpec.flags[4]==1) then begin
   BlockLoad(vcb);
   StartFormat(15);
   OutString(0,0,USetStr(7354),false);
   OutString(p3,0,"",false);
   OutString(p8,0,"",true);
   EndFormat;
   StartFormat(15);
   if (RepSpec.flags[6]==0) then begin
     OutString(0,0,USetStr(2353),false);
     OutString(p2,0,USetStr(2503),false);
     OutString(p3,0,USetStr(2504),false);
   end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
   OutString(p5,0,USetStr(2505),true);
   OutString(p6,0,USetStr(2506),true);
   OutString(p7,0,USetStr(7355),true);
   OutString(p8,0,USetStr(7356),true);
   if (HasMultiCurrency) then begin
     OutString(p9,0,USetStr(7357),true);
   end;
   EndFormat;
   Gray_Divider(0,1);
   TRr.TransDate = RepSpec.sStartDate;
   while (LoopKey("TransDate",TRr,1,TsHr)) begin
     if (TRr.TransDate>RepSpec.sEndDate) then begin
       TsHr = false;
     end;
     testf = TsHr;
     // Get Data
     i = i + 1;
     if (TRr.IntYc>=IVYc) then begin
       testf = false;
     end;
     if (testf and nonblank(RepSpec.d1)) then begin
       testf=false;
       if (TRr.RegDate>=RepSpec.d1) then begin
         testf=true;
       end;
     end;
     if (testf and RepSpec.flags[6]==0) then begin
       rwcnt = MatRowCnt(TRr);
       for (i=0;i<rwcnt;i=i+1) begin
         MatRowGet(TRr,i,TRrw);
         if (nonblank(TRrw.VATCode) and TRrw.ovst!=1) then begin
           VATval = blnkval;
           GetVATProc2(TRrw.VATCode,TRrw.DebVal,TRrw.CredVal,VATval);
           StartFormat(15);
           OutDate(p1,0,TRr.TransDate,true);
           OutStringID(p2,"DblTRVc",TRr.Number,false,TRr.IntYc);
           comment = TRrw.Comment;
           OutString (p3,0,comment,false);
           if (nonblank(TRrw.DebVal)) then begin
             OutString (p5,0,TRrw.DebVal,true);
             if (blank(TRrw.CredVal) and (RepSpec.Media==mtFile or RepSpec.Media==mtExcel)) then begin
               OutString(0,0,"",false);
             end;
             OutString (p7,0,VATval,true);
             if (blank(TRrw.CredVal) and (RepSpec.Media==mtFile or RepSpec.Media==mtExcel)) then begin
               OutString(0,0,"",false);
             end;
             OutString(p9,0,TRrw.VATCode,true);
             ndtn  =  ndtn  +  TRrw.DebVal;
             ndtv = ndtv  +   VATval;
           end;
           if (nonblank(TRrw.CredVal)) then begin
             if (blank(TRrw.DebVal) and (RepSpec.Media==mtFile or RepSpec.Media==mtExcel)) then begin
               OutString(0,0,"",false);
             end;
             OutString (p6,0,TRrw.CredVal,true);
             if (blank(TRrw.DebVal) and (RepSpec.Media==mtFile or RepSpec.Media==mtExcel)) then begin
               OutString(0,0,"",false);
             end;
             OutString (p8,0,VATVal,true);
             OutString(p9,0,TRrw.VATCode,true);
             nctn = nctn   +  TRrw.CredVal;
             nctv  = nctv  +  VATval;
           end;
           vatfound = false;
           SM4rwcnt = MatRowCnt(SM4r);
           for (j=0;j<SM4rwcnt;j=j+1) begin
             MatRowGet(SM4r,j,SMrw);
             if (SMrw.VATCode == TRrw.VATCode) then begin
               //Add your values
               SMrw.DebVal =  SMrw.DebVal + TRrw.DebVal;
               SMrw.CredVal =  SMrw.CredVal + TRrw.CredVal;
               MatRowPut(SM4r,j,SMrw);
               vatfound = true;
             end;
           end;
           if (vatfound==false) then begin
             SMrw.VATCode = TRrw.VATCode;
             SMrw.DebVal =   TRrw.DebVal;
             SMrw.CredVal =  TRrw.CredVal;
             MatRowPut(SM4r,SM4rwcnt,SMrw);
           end;
           EndFormat;
         end;
       end;
     end;
     if (testf and RepSpec.flags[6]==1) then begin
       rwcnt = MatRowCnt(TRr);
       for (i=0;i<rwcnt;i=i+1) begin
         MatRowGet(TRr,i,TRrw);
         if nonblank(TRrw.VATCode) and (TRrw.ovst <> 1) then begin
           GetVATProc2(TRrw.VATCode,TRrw.DebVal,TRrw.CredVal,VATval);
           if (nonblank(TRrw.DebVal)) then begin
             ndtn  =  ndtn  +  TRrw.DebVal;
             ndtv = ndtv  +   VATval;
           end;
           if (nonblank(TRrw.CredVal)) then begin
             nctn = nctn   +  TRrw.CredVal;
             nctv  = nctv  +  VATval;
           end;
           vatfound = false;
           SM4rwcnt = MatRowCnt(SM4r);
           for (j=0;j<SM4rwcnt;j=j+1) begin
             MatRowGet(SM4r,j,SMrw);
             if (SMrw.VATCode == TRrw.VATCode) then begin
               //Add your values
               SMrw.DebVal =  SMrw.DebVal + TRrw.DebVal;
               SMrw.CredVal =  SMrw.CredVal + TRrw.CredVal;
               MatRowPut(SM4r,j,SMrw);
               vatfound = true;
             end;
           end;
           if (vatfound==false) then begin
             SMrw.VATCode = TRrw.VATCode;
             SMrw.DebVal =   TRrw.DebVal;
             SMrw.CredVal =  TRrw.CredVal;
             MatRowPut(SM4r,SM4rwcnt,SMrw);
           end;
           //EndFormat;
         end;
       end;
     end;
   end;//end while
// Transactions Footer

   Gray_Divider(0,1);
   StartFormat(15);
   OutString(0,0,USetStr(7358),false);
   if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
     OutString(0,0,"",false);
     OutString(0,0,"",false);
   end;
   OutVal(p5,0,ndtn,M4Val,true);
   OutVal(p6,0,nctn,M4Val,true);
   OutVal(p7,0,ndtv,M4Val,true);
   OutVal(p8,0,nctv,M4Val,true);
   EndFormat;
   StartFormat(25);
   EndFormat;
   StartFormat(25);
   OutString(0,0,USetStr(7359),false);
   EndFormat;
   StartFormat(15);
   OutString(p1,0,USetStr(7347),true);
   OutString(p4,0,USetStr(7360),true);
   OutString(p6,0,USetStr(7361),true);
   EndFormat;
   SM4rwcnt = MatRowCnt(SM4r);
   for (i=0;i<SM4rwcnt;i=i+1) begin
     MatRowGet(SM4r,i,SMrw);
     StartFormat(15);
     OutString(p1,0,SMrw.VATCode,true);
     OutString (p4,0,SMrw.DebVal,true);
     OutString (p6,0,SMrw.CredVal,true);
     EndFormat;
   end;
   StartFormat(15);
   EndFormat;
   StartFormat(15);
   OutString(p1,0,USetStr(7362),false);
   OutString(p1,0,USetStr(7363),false);
   EndFormat;
   StartFormat(50);
   EndFormat;
 end;

//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  VATTemp  = 0;
  eff = 0;
  VATSub  = 0;
  cnett = 0;
  cvat = 0;
  ctotal = 0;

// Positions
  p1= 45;
  p2= 65;//was 55
  p3= 115;
  p4= 140;
  p5= 270;
  p6= 330;
  p7= 400;
  p8= 440;
  p9 =480;

//Cash In Starts here
  if (RepSpec.flags[8]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(7364),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(5142),false);
      OutString(p3,0,USetStr(2925),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);
    OutString(p6,0,USetStr(5150),true);
    OutString(p7,0,USetStr(5146),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);
    CLIr.TransDate = RepSpec.sStartDate;
    while (LoopKey("TransDate",CLIr,1,TsHr)) begin
      if (CLIr.TransDate>RepSpec.sEndDate) then begin
        TsHr = false;
      end;
      testf = TsHr;
      VATSub = 0;
      if (RepSpec.flags[7]==1 and CLIr.VATVal!=0) then begin
        testf = false;
      end;
      if (RepSpec.flags[7]==2 and CLIr.VATVal==0) then begin
        testf = false;
      end;
      // Get Data
      i = i + 1;
      // Print Data
      if (CLIr.OKFlag==0)then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (CLIr.SerNr<frnr) then begin testf = false; end;
        if (CLIr.SerNr>tonr) then begin testf = false; end;
      end;
      if (CLIr.Invalid!=0) then begin testf = false; end;
      if (testf and nonblank(RepSpec.d1)) then begin
        testf = false;
        TRr.Number = CLIr.SerNr;
        TRr.IntYc = 211;
        if (ReadFirstKey("Number",TRr,2,true)) then begin
          if (TRr.RegDate>=RepSpec.d1) then begin
            testf = true;
          end;
        end;
      end;
      if (testf) then begin
        rwcnt = MatRowCnt(CLIr);
        if (rwcnt>0) then begin
          ctotal = 0;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(CLIr,i,CLIrw);
            if (CLIrw.Type==0) then begin
              ctotal = ctotal + CLIrw.Sum;
            end;
          end;
          cnett = CLIr.NetVal;
          cvat = CLIr.VATVal;
        end else begin
          cnett = CLIr.NetVal;
          cvat = CLIr.VATVal;
          ctotal = CLIr.Total;
        end;
        cnett   =  mulratetobase1( CLIr.CurncyCode, cnett,CLIr.FrRate,CLIr.ToRateB1,CLIr.ToRateB2,CLIr.BaseRate1,CLIr.BaseRate2,DefaultCurRoundOff);
        cvat = mulratetobase1( CLIr.CurncyCode, cvat,CLIr.FrRate,CLIr.ToRateB1,CLIr.ToRateB2,CLIr.BaseRate1,CLIr.BaseRate2,DefaultCurRoundOff);
        ctotal = mulratetobase1( CLIr.CurncyCode, ctotal,CLIr.FrRate,CLIr.ToRateB1,CLIr.ToRateB2,CLIr.BaseRate1,CLIr.BaseRate2,DefaultCurRoundOff);
        tt = tt + ctotal;
        tBase = tBase + cnett;
        tvat = tvat + cvat;
        eff  =  tvat/tBase*100;
        if (RepSpec.flags[6]==0) then begin
          StartFormat(15);
          OutDate(p1,0,CLIr.TransDate,true);
          OutLongInt(p2,"DblCLInVc",CLIr.SerNr,false);
          OutString(p3,0,CLIr.CorspComment,false);
          OutVal(p5,0,cnett,M4Val,true);//nett
          OutVal(p6,0,cvat,M4Val,true);//vat
          OutVal(p7,0,ctotal,M4Val,true);//total
          VATTemp = (cvat*100)/cnett;
          OutVal(p8,0,VATTemp,M4Val,true);
          if (HasMultiCurrency) then begin
            OutString(p9,0,CLIr.CurncyCode,true);
          end;
          EndFormat;
        end;
        vatfound = false;
        SM5rwcnt = MatRowCnt(SM5r);
        for (j=0;j<SM5rwcnt;j=j+1) begin
          MatRowGet(SM5r,j,SMrw);
          if (SMrw.VATCode== CLIr.VATCode) then begin
            //Add your values
            SMrw.DebVal =  SMrw.DebVal + cnett;
            SMrw.CredVal = SMrw.CredVal + cvat;
            MatRowPut(SM5r,j,SMrw);
            vatfound = true;
          end;
        end;
        if (vatfound==false) then begin
          SMrw.VATCode = CLIr.VATCode;
          SMrw.DebVal =   cnett;
          SMrw.CredVal =   cvat;
          MatRowPut(SM5r,SM5rwcnt,SMrw);
        end;        
        
      end;
    end;//End while
    // CASH IN Footer
   Gray_Divider(0,1);
   StartFormat(15);
   OutString(0,0,USetStr(7367),false);
   if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
     OutString(0,0,"",false);
     OutString(0,0,"",false);
   end;
   OutVal(p5,0,tBase,M4Val,true);
   OutVal(p6,0,tvat,M4Val,true);
   OutVal(p7,0,tt,M4Val,true);
   OutVal(p8,0,eff,M4Val,True);
   EndFormat;
   StartFormat(15);
   EndFormat;
   if (HasMultiCurrency) then begin
     StartFormat(25);
     OutString(0,0,USetStr(7349),false);
     EndFormat;
   end;
   StartFormat(15);
   OutString(p2,0,USetStr(7347),true);
   OutString(p4,0,USetStr(7351),true);
   OutString(p5,0,USetStr(7353),true);
   EndFormat;
   SM5rwcnt = MatRowCnt(SM5r);
   for (i=0;i<SM5rwcnt;i=i+1) begin
     MatRowGet(SM5r,i,SMrw);
     StartFormat(15);
     OutString(p2,0,SMrw.VATCode,true);
     OutString (p4,0,SMrw.DebVal,true);
     OutString (p5,0,SMrw.CredVal,true);
     EndFormat;
   end;
   StartFormat(25);
   EndFormat;
 end;

//reinit variables before continuing
  tt = 0;
  tvat = 0;
  tBase = 0;
  TsHr = true;
  testf = true;
  i    = 0;
  VATTemp  = 0;
  eff = 0;
  VATSub  = 0;
  cnett = 0;
  cvat = 0;
  ctotal = 0;

// Positions
  p1= 45;
  p2= 65;//was 55
  p3= 115;
  p4= 140;
  p5= 270;
  p6= 330;
  p7= 400;
  p8= 440;
  p9 =480;

//Cash Out Starts here
  if (RepSpec.flags[9]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(7365),false);
    OutString(p3,0,"",false);
    OutString(p8,0,USetStr(7346),true);
    EndFormat;
    StartFormat(15);
    if (RepSpec.flags[6]==0) then begin
      OutString(0,0,USetStr(5202),false);
      OutString(p2,0,USetStr(5142),false);
      OutString(p3,0,USetStr(2925),false);
    end else begin
      if (RepSpec.Media==mtFile or RepSpec.Media==mtExcel) then begin
        OutString(0,0,"",false);
      end;
    end;
    OutString(p5,0,USetStr(7343),true);
    OutString(p6,0,USetStr(5150),true);
    OutString(p7,0,USetStr(5146),true);
    OutString(p8,0,USetStr(7344),true);
    if (HasMultiCurrency) then begin
      OutString(p9,0,USetStr(7345),true);
    end;
    EndFormat;
    Gray_Divider(0,1);
    CLOr.TransDate = RepSpec.sStartDate;
    while (LoopKey("TransDate",CLOr,1,TsHr)) begin
      if (CLOr.TransDate>RepSpec.sEndDate) then begin
        TsHr = false;
      end;
      testf = TsHr;
      VATSub = 0;
      if (RepSpec.flags[7]==1 and CLOr.VATVal!=0) then begin
        testf = false;
      end;
      if (RepSpec.flags[7]==2 and CLOr.VATVal==0) then begin
        testf = false;
      end;
      // Get Data
      i = i + 1;
      // Print Data
      if (CLOr.OKFlag==0)then begin
        testf = false;
      end;
      if (CLOr.Invalid!=0) then begin testf = false; end;
      if (nonblank(RepSpec.f1)) then begin
        if (CLOr.SerNr<frnr) then begin testf = false; end;
        if (CLOr.SerNr>tonr) then begin testf = false; end;
      end;
      if (testf and nonblank(RepSpec.d1)) then begin
        testf=false;
        TRr.Number = CLOr.SerNr;
        TRr.IntYc = 212;
        if (ReadFirstKey("Number",TRr,2,true)) then begin
          if (TRr.RegDate>=RepSpec.d1) then begin
            testf=true;
          end;
        end;
      end;
      if (testf) then begin
        rwcnt = MatRowCnt(CLOr);
        if (rwcnt>0) then begin
          ctotal = 0;
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(CLOr,i,CLOrw);
            if (CLOrw.Type==0) then begin
              ctotal = ctotal + CLOrw.Sum;
            end;
          end;
          cnett = CLOr.NetVal;
          cvat = CLOr.VATVal;
        end else begin
          cnett = CLOr.NetVal;
          cvat = CLOr.VATVal;
          ctotal = CLOr.Total;
        end;
        cnett   =  mulratetobase1( CLOr.CurncyCode, cnett,CLOr.FrRate,CLOr.ToRateB1,CLOr.ToRateB2,CLOr.BaseRate1,CLOr.BaseRate2,DefaultCurRoundOff);
        cvat = mulratetobase1( CLOr.CurncyCode, cvat,CLOr.FrRate,CLOr.ToRateB1,CLOr.ToRateB2,CLOr.BaseRate1,CLOr.BaseRate2,DefaultCurRoundOff);
        ctotal = mulratetobase1( CLOr.CurncyCode, ctotal,CLOr.FrRate,CLOr.ToRateB1,CLOr.ToRateB2,CLOr.BaseRate1,CLOr.BaseRate2,DefaultCurRoundOff);
        tt = tt + ctotal;
        tBase = tBase + cnett;
        tvat = tvat + cvat;

        if (RepSpec.flags[6]==0) then begin
          StartFormat(15);
          OutDate(p1,0,CLOr.TransDate,true);
          OutLongInt(p2,"DblCLOutVc",CLOr.SerNr,false);
          OutString(p3,0,CLOr.CorspComment,false);
          OutVal(p5,0,cnett,M4Val,true);//nett
          OutVal(p6,0,cvat,M4Val,true);//vat
          OutVal(p7,0,ctotal,M4Val,true);//total
          VATTemp = (cvat*100)/cnett;
          OutVal(p8,0,VATTemp,M4Val,true);
          if (HasMultiCurrency) then begin
            OutString(p9,0,CLOr.CurncyCode,true);
          end;
          EndFormat;
        end;
        eff  =  tvat/tBase*100;
        vatfound = false;
        SM6rwcnt = MatRowCnt(SM6r);
        for (j=0;j<SM6rwcnt;j=j+1) begin
          MatRowGet(SM6r,j,SMrw);
          if (SMrw.VATCode==CLOr.VATCode) then begin
            //Add your values
            SMrw.DebVal =  SMrw.DebVal + cnett;
            SMrw.CredVal = SMrw.CredVal + cvat;
            MatRowPut(SM6r,j,SMrw);
            vatfound = true;
          end;
        end;
        if (vatfound==false) then begin
          SMrw.VATCode = CLOr.VATCode;
          SMrw.DebVal =   cnett;
          SMrw.CredVal =   cvat;
          MatRowPut(SM6r,SM6rwcnt,SMrw);
        end;
      end;
    end;//End while
    // CASH OUT Footer
   Gray_Divider(0,1);
   StartFormat(15);
   OutString(0,0,USetStr(7366),false);
   if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
     OutString(0,0,"",false);
     OutString(0,0,"",false);
   end;
   OutVal(p5,0,tBase,M4Val,true);
   OutVal(p6,0,tvat,M4Val,true);
   OutVal(p7,0,tt,M4Val,true);
   OutVal(p8,0,eff,M4Val,True);
   EndFormat;
   StartFormat(15);
   EndFormat;
   if (HasMultiCurrency) then begin
     StartFormat(25);
     OutString(0,0,USetStr(7349),false);
     EndFormat;
   end;
   StartFormat(15);
   OutString(p2,0,USetStr(7347),true);
   OutString(p4,0,USetStr(7351),true);
   OutString(p5,0,USetStr(7353),true);
   EndFormat;
   
   SM6rwcnt = MatRowCnt(SM6r);
   for (i=0;i<SM6rwcnt;i=i+1) begin
     MatRowGet(SM6r,i,SMrw);
     StartFormat(15);
     OutString(p2,0,SMrw.VATCode,true);
     OutString (p4,0,SMrw.DebVal,true);
     if ((RepSpec.Media==mtFile or RepSpec.Media==mtExcel) and RepSpec.flags[6]==0) then begin
       OutString(0,0,"",false);
       OutString(0,0,"",false);
       OutString(0,0,"",false);
     end;
     OutString (p5,0,SMrw.CredVal,true);
     EndFormat;
   end;
 end;
 EndJob;
return;
end;

function Boolean TestRegAfter(LongInt invnr,Integer intyc,Date d1)
begin
  Boolean res;
  record TRVc TRr;
  
  TRr.Number = invnr;
  TRr.IntYc = intyc;
  if (ReadFirstKey("Number",TRr,2,true)) then begin
    if (TRr.RegDate>=d1) then begin
      res = true;
    end;
  end;
  TestRegAfter = res;
  return;
end;

procedure AddVATToVATArray(record SMVc VATInr,var record SMVc TotVATr,Boolean calcvatf)
BEGIN
  Integer i,vatcnt;
  row SMVc VATInrw;
  row SMVc TotVATrw;
  val vatv,tax1;
  
  vatcnt = MatRowCnt(TotVATr);
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATInr,i,VATInrw);
    MatRowGet(TotVATr,i,TotVATrw);
    if (VATInrw.DebVal!=0) then begin
      TotVATrw.VATCode = VATInrw.VATCode;
      TotVATrw.DebVal = TotVATrw.DebVal + MulRateToBase1(VATInrw.CurncyCode,VATInrw.DebVal,VATInrw.FrRate,VATInrw.ToRateB1,VATInrw.ToRateB2,VATInrw.BaseRate1,VATInrw.BaseRate2,DefaultCurRoundOff);
      if (calcvatf) then begin
        MulVATIV(VATInrw.VATCode,VATInrw.DebVal,vatv,tax1,0,0);
        vatv = Round(vatv,GetVATRoundModeRB);
        TotVATrw.DebVal2 = TotVATrw.DebVal2 + vatv;
      end else begin
        TotVATrw.DebVal2 = VATInrw.DebVal2;
      end;
      MatRowPut(TotVATr,i,TotVATrw);
    end;
  end;
  RETURN;
END;

global
procedure AllVATRn_PrintVATBase(record RcVc RepSpec,Integer sign,record SMVc VATr,Integer vatcnt,Integer inclvat,Integer NoTAXonVAT,roundmode roundvat)
begin
  row SMVc VATrw;
  Boolean testf;
  val vatprc,tax1;
  val vatv;
  Integer i;
  Integer p4,p5,p6,p7;

  p4= 255;
  p5= 315;
  p6= 375;
  p7= 445;
//sign already done by adding negatie amounts  
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw);
    testf = false;
    if (nonblank(VATrw.DebVal)) then begin
      testf = true;
    end;
    if (testf) then begin
      StartFormat(15);
       if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
         OutString(0,0,"",false);
         OutString(0,0,"",false);
         OutString(0,0,"",false);
       end;
       OutString(200,0,VATrw.VATCode,false);
       GetVATdouble(VATrw.VATCode,vatprc,tax1,0);
       OutVal(p4,0,vatprc,M4Val,true);
       OutVal(p5,0,VATrw.DebVal,M4Val,true);
       if (VATrw.DebVal2==0) then begin
         MulVATIV(VATrw.VATCode,VATrw.DebVal,vatv,tax1,inclvat,NoTAXonVAT);
      end else begin
        vatv = VATrw.DebVal2;
      end;
      OutVal(p6,0,Round(vatv,roundvat),M4Val,true);
      OutVal(p7,0,Round(VATrw.DebVal+vatv,roundvat),M4Val,true);
      EndFormat;
    end;
  end;
  return;
end;

procedure PrintDetailed_TRVc(record RcVc RepSpec,record SMVc TotVATr,Integer totvatcnt)
begin
  record TRVc TRr;
  row TRVc TRrw;
  Boolean TrHs,testf,printheadf,printtrf,firstrowf;
  Integer i,rwcnt;
  string 20 keystr;
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9;
  val tv,vat;
  Integer vatcnt,allvatcnt;
  record SMVc VATr;
  record SMVc AllVATr;
  val net,brut,v;
  val totnet,totvat,totbrut;
  LongInt frnr,tonr;
  val vatprc,tax1;
  
  frnr = FirstInRange(RepSpec.f1,10);
  tonr = LastInRange(RepSpec.f1,10);
  SetupVATBase(AllVATr,allvatcnt);
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 315;
  p6= 375;
  p7= 445;
  p8= 455;
  p9 =480;  
  firstrowf = true;
  printheadf = true;
  TrHs = true;
  TRr.TransDate = RepSpec.sStartDate;
  keystr = "TransDate";
  while (LoopKey(keystr,TRr,2,TrHs)) begin
    if (TRr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    testf = TrHs;
    if (testf) and nonblank(RepSpec.d1) then begin
      testf = TRr.RegDate>=RepSpec.d1;
    end;
    if (TRr.IntYc>=IVYc) then begin
      testf = false;
    end;
    if (testf) then begin
      if (printheadf) then begin
        AllVATRn_PrintDeatailedHeader(7354,0,5238,RepSpec);
        printheadf = false;
      end;
      printtrf = true;
      firstrowf = true;
      rwcnt = MatRowCnt(TRr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TRr,i,TRrw);
        if (TRrw.stp==1) and (TRrw.ovst==0) and (nonblank(TRrw.VATCode)) then begin
          testf = true;
          if (nonblank(RepSpec.f2)) then begin
            if (SetInSet(TRrw.VATCode,RepSpec.f2)==false) then begin
              testf = false;
            end;
          end;
          if (testf) then begin
            v = TRrw.DebVal-TRrw.CredVal;
            if (v<0) then begin v = -v; end;
            vat = FindVAT(TRrw.VATCode,v,0,0); 
            GetVATdouble(TRrw.VATCode,vatprc,tax1,0);
            if (printtrf) then begin
              StartFormat(15);
              OutDate(0,0,TRr.TransDate,false);
              OutStringID(p2,"DblTRVc",TRr.Number,false,TRr.IntYc);
              OutString(p3,0,TRr.Comment,false); 
              if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
                OutString(0,0,"",false);
              end;
              OutVal(255,0,vatprc,M4Val,true);//vatprc
              OutVal(p5,0,v,M4Val,true);//nett
              OutVal(p6,0,vat,M4Val,true);//vat
              OutVal(p7,0,v+vat,M4Val,true);
              if (HasMultiCurrency) then begin
                OutString(p9,0,TRrw.Curncy,true);
              end;
              EndFormat;
              printtrf = false;
            end;
            if (firstrowf==false) then begin
              StartFormat(15);     
              if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
                OutString(0,0,"",false);
                OutString(0,0,"",false);
                OutString(0,0,"",false);
                OutString(0,0,"",false);
              end;
              OutVal(255,0,vatprc,M4Val,true);//vatprc
              OutVal(p5,0,v,M4Val,true);//nett
              OutVal(p6,0,vat,M4Val,true);//vat
              OutVal(p7,0,v+vat,M4Val,true);
              if (HasMultiCurrency) then begin
                OutString(p9,0,TRrw.Curncy,true);
              end;
              EndFormat;
            end;
            AddVATBase(AllVATr,TRrw.VATCode,v,blankval,allvatcnt,0,0);
            totnet = totnet + v;
            totvat = totvat + vat;
            totbrut = totbrut + v +vat;
            firstrowf = false;
          end;
        end;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,"",false);
  if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
  end;
  OutVal(p5,0,totnet,M4Val,true);//nett
  OutVal(p6,0,totvat,M4Val,true);//vat
  OutVal(p7,0,totbrut,M4Val,true);
  EndFormat;
  AllVATRn_PrintVATBase(RepSpec,1,AllVATr,allvatcnt,0,0,SetRoundModeD(2));
  return;
end;

procedure PrintDetailed_ExpVc(record RcVc RepSpec,record SMVc TotVATr,Integer totvatcnt)
begin
  record ExpVc Expr;
  row ExpVc Exprw;
  Boolean TrHs,testf,printheadf;
  Integer i,rwcnt;
  string 20 keystr;
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9;
  val tv,vivat;
  Integer vatcnt,allvatcnt;
  record SMVc VATr;
  record SMVc AllVATr;
  val net,vat,brut;
  val totnet,totvat,totbrut;
  LongInt frnr,tonr;
  
  frnr = FirstInRange(RepSpec.f1,10);
  tonr = LastInRange(RepSpec.f1,10);
  SetupVATBase(AllVATr,allvatcnt);
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 315;
  p6= 375;
  p7= 445;
  p8= 455;
  p9 =480;  
  printheadf = true;
  TrHs = true;
  keystr = "TransDate";
  Expr.TransDate = RepSpec.sStartDate;
  while (LoopKey(keystr,Expr,1,TrHs)) begin
    if (Expr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    vivat = Expr.CalcVATVal;
    testf = TrHs;
    switch (RepSpec.flags[7]) begin
      case 1: if (vivat!=0) then begin testf = false; end;
      case 2: if (vivat==0) then begin testf = false; end;
    end;
    if (Expr.OKFlag==0)then begin
      testf = false;
    end;
    If (Expr.Invalid!=0) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f1)) then begin
      if (Expr.SerNr<frnr) then begin testf = false; end;
      if (Expr.SerNr>tonr) then begin testf = false; end;
    end;
    if (testf) and nonblank(RepSpec.d1) then begin
      testf = TestRegAfter(Expr.SerNr,207,RepSpec.d1);
    end;
    if (testf)  then begin
      if (nonblank(RepSpec.f2)) then begin
        testf = false;
        rwcnt = MatRowCnt(Expr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Expr,i,Exprw);
          if (SetInSet(Exprw.VATCode,RepSpec.f2)) then begin
            testf = true;
            i = rwcnt;
          end;
        end;
      end;
    end;
    if (testf) then begin
      if (printheadf) then begin
        AllVATRn_PrintDeatailedHeader(5140,0,17270,RepSpec);
        printheadf = false;
      end;
      
      StartFormat(15);
      OutDate(0,0,Expr.TransDate,false);
      OutLongInt(p2,"DblExpVc",Expr.SerNr,false);
      OutString(p3,0,Expr.Name,false);
      if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      tv = Expr.PayVal - vivat;
      net = MulRateToBase1(Expr.CurncyCode,tv,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
      vat = MulRateToBase1(Expr.CurncyCode,vivat,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
      brut = MulRateToBase1(Expr.CurncyCode,Expr.PayVal,Expr.FrRate,Expr.ToRateB1,Expr.ToRateB2,Expr.BaseRate1,Expr.BaseRate2,DefaultCurRoundOff);
      OutVal(p5,0,net,M4Val,true);//nett
      OutVal(p6,0,vat,M4Val,true);//vat
      OutVal(p7,0,brut,M4Val,true);
      if (HasMultiCurrency) then begin
        OutString(p9,0,Expr.CurncyCode,true);
      end;
      EndFormat;
      totnet = totnet + net;
      totvat = totvat + vat;
      totbrut = totbrut + brut;
      SetupVATBase(VATr,vatcnt);
      rwcnt = MatRowCnt(Expr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Expr,i,Exprw);
        if (Exprw.stp==1) then begin
          testf = true;
          if (nonblank(RepSpec.f2)) then begin
            if (SetInSet(Exprw.VATCode,RepSpec.f2)==false) then begin
              testf = false;
            end;
          end;
          if (testf) then begin
            AddVATBase(VATr,Exprw.VATCode,Exprw.Sum-Exprw.VATSum,blankval,vatcnt,0,0);
          end;
        end;
      end;
      AllVATRn_PrintVATBase(RepSpec,1,VATr,vatcnt,0,0,SetRoundModeD(2));
      AddVATToVATArray(VATr,AllVATr,true);
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(7350),false);
  if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
  end;
  OutVal(p5,0,totnet,M4Val,true);//nett
  OutVal(p6,0,totvat,M4Val,true);//vat
  OutVal(p7,0,totbrut,M4Val,true);
  EndFormat;
  AllVATRn_PrintVATBase(RepSpec,1,AllVATr,allvatcnt,0,0,SetRoundModeD(2));
  return;
end;

procedure PrintDetailed_CLOutVc(record RcVc RepSpec,record SMVc TotVATr,Integer totvatcnt)
begin
  record CLOutVc CLOutr;
  Boolean TrHs,testf,printheadf;
  Integer i,rwcnt;
  string 20 keystr;
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9;
  Integer vatcnt,allvatcnt;
  record SMVc VATr;
  record SMVc AllVATr;
  val net,vat,brut;
  val totnet,totvat,totbrut;
  LongInt frnr,tonr;
  
  frnr = FirstInRange(RepSpec.f1,10);
  tonr = LastInRange(RepSpec.f1,10);
  SetupVATBase(AllVATr,allvatcnt);
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 315;
  p6= 375;
  p7= 445;
  p8= 455;
  p9 =480;  
  printheadf = true;
  TrHs = true;
  keystr = "TransDate";
  CLOutr.TransDate = RepSpec.sStartDate;
  while (LoopKey(keystr,CLOutr,1,TrHs)) begin
    if (CLOutr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    testf = TrHs;
    switch (RepSpec.flags[7]) begin
      case 1: if (CLOutr.VATVal!=0) then begin testf = false; end;
      case 2: if (CLOutr.VATVal==0) then begin testf = false; end;
    end;
    if (CLOutr.OKFlag==0)then begin
      testf = false;
    end;
    If (CLOutr.Invalid!=0) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f1)) then begin
      if (CLOutr.SerNr<frnr) then begin testf = false; end;
      if (CLOutr.SerNr>tonr) then begin testf = false; end;
    end;
    if (testf) and nonblank(RepSpec.d1) then begin
      testf = TestRegAfter(CLOutr.SerNr,212,RepSpec.d1);
    end;
    if (nonblank(RepSpec.f2)) then begin
      if (SetInSet(CLOutr.VATCode,RepSpec.f2)==false) then begin
         testf = false;
      end;
    end;
    if (testf) then begin
      if (printheadf) then begin
        AllVATRn_PrintDeatailedHeader(7365,0,17272,RepSpec);
        printheadf = false;
      end;      
      net = MulRateToBase1(CLOutr.CurncyCode,CLOutr.NetVal,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
      vat = MulRateToBase1(CLOutr.CurncyCode,CLOutr.VATVal,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);
      brut = MulRateToBase1(CLOutr.CurncyCode,CLOutr.Total,CLOutr.FrRate,CLOutr.ToRateB1,CLOutr.ToRateB2,CLOutr.BaseRate1,CLOutr.BaseRate2,DefaultCurRoundOff);

      StartFormat(15);
      OutDate(0,0,CLOutr.TransDate,false);
      OutLongInt(p2,"DblCLOutVc",CLOutr.SerNr,false);
      OutString(p3,0,CLOutr.CorspComment,false);
//      OutString(p4,0,CLOutr.VECode,false);
      if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutVal(p5,0,net,M4Val,true);//nett
      OutVal(p6,0,vat,M4Val,true);//vat
      OutVal(p7,0,brut,M4Val,true);
      if (HasMultiCurrency) then begin
        OutString(p9,0,CLOutr.CurncyCode,true);
      end;
      EndFormat;
      totnet = totnet + net;
      totvat = totvat + vat;
      totbrut = totbrut + brut;
      SetupVATBase(VATr,vatcnt);
      AddVATBase(VATr,CLOutr.VATCode,CLOutr.NetVal,blankval,vatcnt,0,0);
      AddVATBase(AllVATr,CLOutr.VATCode,CLOutr.NetVal,blankval,allvatcnt,0,0);
      AllVATRn_PrintVATBase(RepSpec,1,VATr,vatcnt,0,0,SetRoundModeD(2));
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(7366),false);
  if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
  end;
  OutVal(p5,0,totnet,M4Val,true);//nett
  OutVal(p6,0,totvat,M4Val,true);//vat
  OutVal(p7,0,totbrut,M4Val,true);
  EndFormat;
  AllVATRn_PrintVATBase(RepSpec,1,AllVATr,allvatcnt,0,0,SetRoundModeD(2));
  return;
end;

procedure PrintDetailed_CLInVc(record RcVc RepSpec,record SMVc TotVATr,Integer totvatcnt)
begin
  record CLInVc CLInr;
  Boolean TrHs,testf,printheadf;
  Integer i,rwcnt;
  string 20 keystr;
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9;
  Integer vatcnt,allvatcnt;
  record SMVc VATr;
  record SMVc AllVATr;
  val net,vat,brut;
  val totnet,totvat,totbrut;
  LongInt frnr,tonr;
  
  frnr = FirstInRange(RepSpec.f1,10);
  tonr = LastInRange(RepSpec.f1,10);
  SetupVATBase(AllVATr,allvatcnt);
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 315;
  p6= 375;
  p7= 445;
  p8= 455;
  p9 =480;  
  printheadf = true;
  TrHs = true;
  keystr = "TransDate";
  CLInr.TransDate = RepSpec.sStartDate;
  while (LoopKey(keystr,CLInr,1,TrHs)) begin
    if (CLInr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    testf = TrHs;
    switch (RepSpec.flags[7]) begin
      case 1: if (CLInr.VATVal!=0) then begin testf = false; end;
      case 2: if (CLInr.VATVal==0) then begin testf = false; end;
    end;
    if (CLInr.OKFlag==0)then begin
      testf = false;
    end;
    If (CLInr.Invalid!=0) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f1)) then begin
      if (CLInr.SerNr<frnr) then begin testf = false; end;
      if (CLInr.SerNr>tonr) then begin testf = false; end;
    end;
    if (testf) and nonblank(RepSpec.d1) then begin
      testf = TestRegAfter(CLInr.SerNr,211,RepSpec.d1);
    end;
    if (nonblank(RepSpec.f2)) then begin
      if (SetInSet(CLInr.VATCode,RepSpec.f2)==false) then begin
         testf = false;
      end;
    end;
    if (testf) then begin
      if (printheadf) then begin
        AllVATRn_PrintDeatailedHeader(7364,0,17271,RepSpec);
        printheadf = false;
      end;      
      net = MulRateToBase1(CLInr.CurncyCode,CLInr.NetVal,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
      vat = MulRateToBase1(CLInr.CurncyCode,CLInr.VATVal,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
      brut = MulRateToBase1(CLInr.CurncyCode,CLInr.Total,CLInr.FrRate,CLInr.ToRateB1,CLInr.ToRateB2,CLInr.BaseRate1,CLInr.BaseRate2,DefaultCurRoundOff);
      
      StartFormat(15);
      OutDate(0,0,CLInr.TransDate,false);
      OutLongInt(p2,"DblCLInVc",CLInr.SerNr,false);
      OutString(p3,0,CLInr.CorspComment,false);
//      OutString(p4,0,CLInr.CUCode,false);
      if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
        OutString(0,0,"",false);
        OutString(0,0,"",false);
      end;
      OutVal(p5,0,net,M4Val,true);//nett
      OutVal(p6,0,vat,M4Val,true);//vat
      OutVal(p7,0,brut,M4Val,true);
      if (HasMultiCurrency) then begin
        OutString(p9,0,CLInr.CurncyCode,true);
      end;
      EndFormat;
      totnet = totnet + net;
      totvat = totvat + vat;
      totbrut = totbrut + brut;
      SetupVATBase(VATr,vatcnt);
      AddVATBase(VATr,CLInr.VATCode,CLInr.NetVal,blankval,vatcnt,0,0);
      AddVATBase(AllVATr,CLInr.VATCode,CLInr.NetVal,blankval,allvatcnt,0,0);
      AllVATRn_PrintVATBase(RepSpec,1,VATr,vatcnt,0,0,SetRoundModeD(2));
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(7367),false);
  if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
  end;
  OutVal(p5,0,totnet,M4Val,true);//nett
  OutVal(p6,0,totvat,M4Val,true);//vat
  OutVal(p7,0,totbrut,M4Val,true);
  EndFormat;
  AllVATRn_PrintVATBase(RepSpec,1,AllVATr,allvatcnt,0,0,SetRoundModeD(2));
  return;
end;


procedure PrintDetailed_IPVc(record RcVc RepSpec,record SMVc TotVATr,Integer totvatcnt)
begin
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9;
  record SMVc AllVATr;
  val totnet,totvat,totbrut;
  Integer allvatcnt;

  p1= 55;
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 315;
  p6= 375;
  p7= 445;
  p8= 455;
  p9 =480;
  SetupVATBase(AllVATr,allvatcnt);
  AllVATRn_PrintDeatailedHeader(7370,7347,7371,RepSpec);
  AllVATRn_PrintIP(RepSpec,AllVATr,totbrut,totnet,totvat);
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(7372),false);
  if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
  end;
  OutVal(p5,0,totnet,M4Val,true);//nett
  OutVal(p6,0,totvat,M4Val,true);//vat
  OutVal(p7,0,totbrut,M4Val,true);
  EndFormat;
  AllVATRn_PrintVATBase(RepSpec,1,AllVATr,allvatcnt,0,0,SetRoundModeD(2));
  return;
end;

procedure PrintDetailed_OPVc(record RcVc RepSpec,record SMVc TotVATr,Integer totvatcnt)
begin
  Integer p1,p2,p3,p4,p5,p6,p7,p8,p9;
  record SMVc AllVATr;
  val totnet,totvat,totbrut;
  Integer allvatcnt;

  SetupVATBase(AllVATr,allvatcnt);
  p1= 55;
  p2= 70;
  p3= 124;
  p4= 165;
  p5= 315;
  p6= 375;
  p7= 445;
  p8= 455;
  p9 =480;
  AllVATRn_PrintDeatailedHeader(7374,7347,7375,RepSpec);
  AllVATRn_PrintOP(RepSpec,AllVATr,totbrut,totnet,totvat);
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(7376),false);
  if ((RepSpec.Media==mtFile) or (RepSpec.Media==mtExcel)) then begin
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
    OutString(0,0,"",false);
  end;
  OutVal(p5,0,totnet,M4Val,true);//nett
  OutVal(p6,0,totvat,M4Val,true);//vat
  OutVal(p7,0,totbrut,M4Val,true);
  EndFormat;
  AllVATRn_PrintVATBase(RepSpec,1,AllVATr,allvatcnt,0,0,SetRoundModeD(2));
  return;
end;

procedure ALLVATRnDetailed(record RcVc RepSpec)
begin
  string 255 tstr;
  Integer rw,totvatcnt;
  record SMVc TotVATr;
  
  rw = 1;
  StartReportJob(USetStr(7342));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.d1)) then begin
    Header(rw,USetStr(7339) & " " & RepSpec.d1,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    Header(rw,USetStr(7379) & " " & RepSpec.f2,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.Language)) then begin
    Header(rw,USetStr(2319) & " " & RepSpec.Language,1);
    rw = rw + 1;
  end;    
  EndHeader;
  SetupVATBase(TotVATr,totvatcnt);
  if (RepSpec.flags[1]!=0) then begin PrintDetailed_IVVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[3]!=0) then begin PrintDetailed_VIVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[4]!=0) then begin PrintDetailed_TRVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[5]!=0) then begin PrintDetailed_ExpVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[8]!=0) then begin PrintDetailed_CLInVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[9]!=0) then begin PrintDetailed_CLOutVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[10]!=0) then begin PrintDetailed_IPVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[11]!=0) then begin PrintDetailed_OPVc(RepSpec,TotVATr,totvatcnt); end;
//  if (RepSpec.flags[15]!=0) then begin PrintDetailed_VATVIVc(RepSpec,TotVATr,totvatcnt); end;
  if (RepSpec.flags[16]!=0) then begin PrintDetailed_POSBalancesVc(RepSpec,TotVATr,totvatcnt); end;
  EndJob;
  return;
end;

global
procedure ALLVATRn(record RcVc RepSpec)
begin
  if nonblank(RepSpec.f2) then begin 
    RepSpec.flags[7] = 2;
  end;  
  if (RepSpec.flags[14]==0) then begin
    ALLVATRnOverview(RepSpec);
  end else begin
    ALLVATRnDetailed(RepSpec);
  end;
  AutomatedSalesOrderly("HasIntegratedNL+Run_ALLVATRn");
  return;
end;
