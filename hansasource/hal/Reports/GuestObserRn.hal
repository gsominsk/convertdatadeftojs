external procedure PrintActualObservation(record GuestObserVc);
external procedure JobBubSort40(var array Record JobVc,Integer);
external function Boolean IsCancelState(String);
external function boolean IsTDBefore(date,time,date,time);
external procedure JobBubSort40(var array Record JobVc,Integer);
/*
Function Boolean GuestObSelect(Record RcVc RepSpec,Record JobVc Jobr,var Boolean foundf)
begin 
  Boolean sel;
  Record ResVc Roomr;
  Date vDate;
  
  sel = false;
  if ((Jobr.TransDate > RepSpec.d1) and (nonblank(RepSpec.d1))) then begin
    foundf = false;
  end else begin
    if ((RepSpec.flags[2]==1) or (IsCancelState(Jobr.ResStatus)==false)) then begin
      if (DateInRange(RepSpec.d1,Jobr.TransDate,Jobr.EndDate)) then begin
        if ((RepSpec.f4==Jobr.Type) or (blank(RepSpec.f4))) then begin
          Roomr.Code = Jobr.ResCode;
          if readfirstmain(Roomr,1,true) then begin
            if ((RepSpec.f1==Roomr.Class) or (blank(RepSpec.f1))) then begin
              if ((RepSpec.f2==Roomr.ResLoc) or (blank(RepSpec.f2))) then begin
                if ((RepSpec.f5==Roomr.Code) or (blank(RepSpec.f5))) then begin
                    sel = true;
                end;
              end;       
            end;
          end;
        end;
      end;
    end;
  end;
  GuestObSelect = sel;
  return;
end;  
*/
global
procedure ShowGuestObsRn(record RcVc RepSpec)
begin
  Record GuestObserVc GuestObser;
  Boolean TsHr,testf;
  String 40 Message;

  TsHr = true;
  StartReportJob(USetStr(12121));
  EndHeader;

  SetRepCol(2,60);
  SetRepCol(3,120);  

  StartFormat(15);
  OutString(0,0,USetStr(12155),false);
  OutString(240,0,USetStr(12126),false);
  EndFormat;
  Gray_Divider(0,1);
 
  GuestObser.Guest=RepSpec.f1;
  while (LoopKey("Guest",GuestObser,1,TsHr)) begin
    if (GuestObser.Guest!=RepSpec.f1) then begin
      TsHr = false;
    end;
    testf = TsHr;
    if ((GuestObser.Type==1) or (GuestObser.Type==3) or (GuestObser.Type==5) or (GuestObser.Type==6)) then begin
      if (GuestObser.TransDate!=CurrentDate) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      PrintActualObservation(GuestObser);
    end;
  end;
  EndJob;
  return;
end;
/*
global
procedure PrintGuestObs(Record JobVc Jobr,Date RepDate)
begin
  Record GuestObserVc GuestObser;
  Integer rowcnt,i;
  Row JobVc Jobrw;
  Boolean TsHr,firstf;
  
  if nonblank(Jobr.Comment) then begin
    StartFormat(15);  
    OutString(0,0,Jobr.ResCode,false); 
    OutString(2,0,USetStr(12126),false);
    OutString(5,0,Jobr.Comment,false);
    EndFormat;
  end;
  
  rowcnt = MatRowCnt( Jobr );
  for(i=0; i<rowcnt; i=i+1) begin
    MatRowGet(Jobr,i,Jobrw);
    Resetloop(GuestObser);
    firstf = true; TsHr = true;
    GuestObser.Guest = Jobrw.GuestCode;
    while (LoopKey("Guest",GuestObser,1,TsHr)) begin
      if (GuestObser.Guest==Jobrw.GuestCode) then begin
        if ((GuestObser.Type==0) or (GuestObser.Type==2) or (GuestObser.Type==4)) then begin
          StartFormat(15);
          if (firstf) then begin 
            OutString(0,0,Jobr.ResCode,false); 
//            OutLongInt(3,"DblGuestObserVc",GuestObser.SerNr,false);
            OutString(2,0,left(Jobrw.CUName,25),false);
            firstf = false;
          end;  
          OutStringID(5,"DblGuestObserVc",GuestObser.Comment,false,GuestObser.SerNr);
          EndFormat;
        end else begin
          if (GuestObser.TransDate==RepDate) then begin
            StartFormat(15);
            if (firstf) then begin 
              OutString(0,0,Jobr.ResCode,false); 
//              OutLongInt(3,"DblGuestObserVc",GuestObser.SerNr,false);
              OutString(2,0,left(Jobrw.CUName,25),false);
              firstf = false;
            end;  
            OutStringID(5,"DblGuestObserVc",GuestObser.Comment,false,GuestObser.SerNr);
            EndFormat;
          end;
        end; 
      end else begin
        TsHr = false;
      end;   
    end;     
  end;

  return;
end;
*/
/*
global
procedure GuestObserRn(Record RcVc RepSpec)
begin
  Record JobVc Jobr;
  Boolean foundf,skip;
  String 255 tstr;
  Integer rw,maxstay,j,rowcnt;
  Array Record JobVc aJobSerNr;
  Integer acnt;

  StartReportJob(USetStr(12121));
  rw = 1;
  tstr = USetStr(12129) & " " & RepSpec.d1;
  Header(rw,tstr,1);
  rw = rw + 1; 
  EndHeader;

  maxstay = 30;
  SetRepCol(2,60);
  SetRepCol(3,90);
  SetRepCol(5,210);

  StartFormat(15);
  OutString(0,0,USetStr(12122),false);
  OutString(2,0,USetStr(12123),false);
  OutString(5,0,USetStr(12124),false);
  EndFormat;  
  Black_Divider(0,1);
  
  acnt = 0;
  foundf = true;
  Jobr.TransDate = AddDay(RepSpec.d1,-maxstay);
  while (LoopKey("TransDate",Jobr,1,foundf)) begin
    if (GuestObSelect(RepSpec,Jobr,foundf)) then begin
      acnt= acnt+1;
      aJobSerNr[acnt]= Jobr;       
    end;
  end;

  JobBubSort40(aJobSerNr,acnt);

  StartFormat(15);
  OutString(0,0,USetStr(12128),false);
  Black_Divider(0,1);
  EndFormat;
  for(j=1;j<=acnt;j=j+1) begin
    Jobr = aJobSerNr[j];
    if readfirstmain(Jobr,1,true) then begin
      PrintGuestObs(Jobr,RepSpec.d1);
    end;
  end;

  EndJob;
  return;
end; 
*/
global
procedure PrintObsPerGuest(String GuestCode,String OBType,date RepDate)
begin
  Record GuestObserVc GuestObser;
  Record CUVc Guestr;
  Integer rowcnt,i;
  Boolean TsHr,firstf;
  string 200 tstr;

  Guestr.Code = GuestCode;
  if readfirstmain(Guestr,1,true) then begin
    StartFormat(15);
    OutString(0,0,GuestCode,false); 
    OutString(35,0,left(Guestr.Name,25),false);    
  end;

  TsHr = true;
  GuestObser.Guest = GuestCode;
  while (LoopKey("Guest",GuestObser,1,TsHr)) begin
    if (GuestObser.Guest<>GuestCode) then begin
      if (GuestObser.OBType==OBType) then begin
        if ((GuestObser.Type==0) or (GuestObser.Type==2) or (GuestObser.Type==4)) then begin
          OutStringID(180,"DblGuestObserVc",GuestObser.Comment,false,GuestObser.SerNr);
          EndFormat;
        end else begin
          if (GuestObser.TransDate==RepDate) then begin
            OutStringID(180,"DblGuestObserVc",GuestObser.Comment,false,GuestObser.SerNr);
            EndFormat;
          end;
        end;
      end;
    end else begin
      TsHr = false;
    end;   
  end;     

  return;
end;
