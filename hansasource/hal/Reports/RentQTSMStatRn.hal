external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function LongInt DateDiff(Date,Date);
external procedure HT2Per(Date, Date , var string);

procedure findleastamount(val rs, var val lamount)
begin
   if (lamount == 0)  then begin
     lamount = rs;
   end;
   if (lamount > rs) then begin
      lamount = rs;
   end;
return;
end;

procedure findhigestamount(val rs, var val hamount)
begin
   if (hamount == 0)  then begin
     hamount = rs;
   end;
   if (hamount < rs) then begin
      hamount = rs;
   end;
return;
end;

procedure findlessdays(val decdays, var val lessdays)
begin
   if (lessdays == 0) then begin
     lessdays = decdays;
   end;
   if (lessdays > decdays) then begin
     lessdays = decdays;
   end;
return;
end;

procedure findmostdays(val decdays, var val mostdays)
begin
   if (mostdays == 0) then begin
     mostdays = decdays;
   end;
   if ( mostdays < decdays) then begin
     mostdays = decdays;
   end;
  return;
end;

procedure FindRentQuotes(record RcVc RepSpec, String UserCode,var val ttotval, var val tnoqt, var val tleast,
                         var val tmost, var val tldays, var val tmdays,LongInt frqt,LongInt toqt)
begin
  Record RentQTVc RentQTr;
  Record UserVc Userr;
  Boolean TrHs, testf;
  val rs, iv, acc, valacc, totval;
  val totgp, lessdays, mostdays, lessamount, mostamount;
  string 255 str;
  val decdays, totdaysa, noqt;
  val avgval;
 
  noqt = 0;
  TrHs = true; 
  RentQTr.SerNr = frqt;  
  while (LoopMain(RentQTr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f1)) then begin
        if (RentQTr.SerNr>toqt) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (RentQTr.SalesMan<>UserCode) then begin 
        testf = false;
      end;
/*
  RentQTr.SalesMan = UserCode;  
  while (LoopKey("SalesMan",RentQTr,1,TrHs)) begin
    if (TrHs) then begin
      if (RentQTr.SalesMan<>UserCode) then begin 
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
       testf = true;
       if (nonblank(RepSpec.f1)) then begin
         if (RentQTr.SerNr>toqt) then begin
           testf = false;
         end;
       end;
*/
       if (DateInRange(RentQTr.RejectDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin 
         testf = false;
       end;
       if (RepSpec.vals0 > 0) then begin
         iv = RentQTr.Sum1;   
         rs = MULRATETOBASE1(RentQTr.CurncyCode,iv,RentQTr.FrRate,RentQTr.ToRateB1,RentQTr.ToRateB2,RentQTr.BaseRate1,RentQTr.BaseRate2,DefaultCurRoundOff);
         if (RepSpec.vals0 >= rs) then begin
           testf = false;
         end;
       end; 
       if (nonblank(RepSpec.f4) and (RepSpec.f4<>RentQTr.AgreeType)) then begin
         testf = false;
        end;
        if (nonblank(RepSpec.f3)) then begin
          if (RepSpec.f3<>RentQTr.CustCode) then begin
            testf=false;
          end;
        end;
        if (RentQTr.Rejected < 2) then begin
          testf = false;
        end;
        if (RentQTr.Status == 1) then begin
          testf = false;
        end;
        if (testf) then begin
          noqt = noqt +1;
          tnoqt = tnoqt + 1;
          iv = RentQTr.Sum1;   
          rs = MULRATETOBASE1(RentQTr.CurncyCode,iv,RentQTr.FrRate,RentQTr.ToRateB1,RentQTr.ToRateB2,RentQTr.BaseRate1,RentQTr.BaseRate2,DefaultCurRoundOff);
          if (RentQTr.Rejected == 2) then begin
            acc = acc + 1;
            valacc = valacc + rs;
            str = USetStr(11023);
            decdays = DateDiff(RentQTr.RejectDate,RentQTr.TransDate); 
            totdaysa = totdaysa + decdays;   
//            totgp = totgp + RentQTr.TotGP;
            findlessdays(decdays,lessdays);      
            findlessdays(decdays, tldays);
            findmostdays(decdays,mostdays);
            findmostdays(decdays,tmdays);
            findleastamount(rs, lessamount);
            findleastamount(rs, tleast);
            findhigestamount(rs, mostamount);
            findhigestamount(rs, tmost);
          end;  
          totval = totval + rs;
          ttotval = ttotval + rs; 
        end; 
      end; 
    end; 
    if (totval > 0) then begin
     avgval = totval/noqt;
     StartFormat(15)
     OutString(0,0,UserCode,false);
     Userr.Code = UserCode;
     if (ReadFirstMain(Userr,1,true)) then begin
       OutString(30,0,Userr.Name, false);
     end;
     OutString(200,0,totval,true);
     OutVal(225,0,noqt,M40Val,true);
     OutString(290,0,avgval,true);
     OutString(345,0,lessamount,true);
     OutString(420,0,mostamount,true);
     OutVal(450,0,lessdays,M40Val,true);
     OutVal(1,0,mostdays,M40Val,true);
     EndFormat;
   end;
  return;
end;         

global 
Procedure RentQTSMStatRn(record RcVc RepSpec)
BEGIN
  record UserVc Userr;
  Boolean TrHs, testf;
  string 20 fruser,touser;
  string 255 tstr;
  val rw;
  val ttotval, tnoqt,tavg,tleast, tmost;
  val tldays, tmdays;
  LongInt frqt,toqt;
    
  fruser = FirstInRange(RepSpec.f2,20);
  touser = LastInRange(RepSpec.f2,20);
  tldays = 0;
  tmdays = 0;
  tmost = 0;
  tleast = 0; 
  ttotval = 0;
  tnoqt = 0;
  frqt = FirstInRange(RepSpec.f1,20);
  toqt = FirstInRange(RepSpec.f1,20);
  StartReportJob(USetStr(11068));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;  
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(11001);
    tstr = tstr & ": " & RepSpec.f1;
    Header(rw,tstr,1); 
    rw = rw + 1;  
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(2692);
    tstr = tstr & ": " & RepSpec.f2;
    Header(rw,tstr,1); 
    rw = rw + 1;  
  end;
  if (nonblank(RepSpec.f3)) then begin
    tstr = USetStr(2684);
    tstr = tstr & ": " & RepSpec.f3;
    Header(rw,tstr,1); 
    rw = rw + 1;  
  end;
  if (nonblank(RepSpec.ObjStr)) then begin
    tstr = USetStr(11025);
    tstr = tstr & ": " & RepSpec.ObjStr;
    Header(rw,tstr,1); 
    rw = rw + 1;  
  end;
  if (RepSpec.vals0 > 0) then begin
    tstr = USetStr(11025);
    tstr = tstr & RepSpec.vals0;
    Header(rw,tstr,1);
    rw = rw + 1;  
  end;
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,USetStr(11071),false);
  OutString(30,0,USetStr(11072),false);
  OutString(200,0,USetStr(11073),true);
  OutString(225,0,USetStr(11074),true);
  OutString(290,0,USetStr(11075),true);
  OutString(345,0,USetStr(11076),true);
  OutString(420,0,USetStr(11077),true);
  OutString(445,0,USetStr(11078),false);
  EndFormat;
  Black_Divider(0,1);
  Userr.Code = fruser;
  TrHs = true;
  while (LoopMain(Userr,1,TrHs)) begin
   if (TrHs) then begin
     if (nonblank(RepSpec.f2)) then begin
       if (Userr.Code>touser) then begin 
         TrHs = false; 
       end;
     end;    
   end;    
   if (TrHs) then begin
     testf=true;
     if (nonblank(RepSpec.ObjStr)) then begin
       if (RepSpec.ObjStr<>Userr.SalesGroup) then begin
         testf = false;
       end;
     end;
     if (testf) then begin 
        FindRentQuotes(RepSpec, Userr.Code, ttotval, tnoqt,tleast,tmost,tldays,tmdays,frqt,toqt);
     end; // testf   
   end; // TrHs
  end; //while
  Black_Divider(0,1);
  StartFormat(15)
  OutString(0,0,USetStr(11079),false);
  OutString(200,0,ttotval,true);
  OutVal(225,0,tnoqt,M40Val,true);
  tavg = ttotval/tnoqt;
  OutString(290,0,tavg,true);
  OutString(345,0,tleast,true);
  OutString(420,0,tmost,true);
  OutVal(450,0,tldays,M40Val,true);
  OutVal(1,0,tmdays,M40Val,true);
  EndFormat;
  EndJob;
  
 RETURN; 
 END;
#endif
