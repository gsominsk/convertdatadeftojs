external function LongInt YearsOld(Date);
external Procedure GetUserName(String ,var String);

global
procedure TransfPaxsRn(Record RcVc RepSpec)
begin
 Record TransferVc Transf;
 Row TransferVc Transfrw;
 Record JobVc Jobr;
 Record CUVc Profiler;
 Record RouteVc Router;
 Record ExcursionVc Excur;
 Row ExcursionVc Excurrw;
 Integer wn,i,rwcnt,cantPax;
 Boolean Bool,Skip;
 Integer p1,p2,p3,p4,p5;
 String 100 temp;

 Bool= true; cantPax=0;
  
 StartReportJob("Reporte de Viaje");
 EndHeader;

 SetRepCol(2,20);
 SetRepCol(3,80);
 SetRepCol(4,120);
 SetRepCol(5,170);
 SetRepCol(6,320);
 SetRepCol(7,380);
 SetRepCol(8,480);
 
 StartFormat(15);
 EndFormat;

 Transf.SerNr = RepSpec.long1;
 if readfirstmain(Transf,1,true) then begin

   StartFormat(15);
   OutString(3,0,"Transfer Nro. " & Transf.SerNr,false);
   OutString(3,0,"Movil Nro. " & Transf.VehicleNr,false);
   EndFormat;

   GetUserName( Transf.MainPersons,temp);
   StartFormat(15);
   OutString(3,0,"Chofer: " & Transf.MainPersons & "-" & temp,false);
   EndFormat;
 
   Router.Code = Transf.Route;
   if ReadFirstMain(Router,1,true) then begin
     StartFormat(15);
     OutString(3,0,"Tramo: " & Router.FromPlace & "-" & Router.ToPlace,false);
     OutString(3,0,"Distancia: " & Router.Distance,false);
     EndFormat;
   end;
 
   StartFormat(15);
   OutString(3,0,"Hora Salida: " & Transf.StartTime,false);
   OutString(6,0,"Hora Llegada: " & Transf.EndTime,false);
   EndFormat;
   EndFormat;
   StartFormat(15);
   OutString(2,0,"Listado de Pasajeros",false);
   EndFormat;
 
   StartFormat(15);
   OutString(2,0,"Res",false);
   OutString(3,0,"Madre",false);
   OutString(4,0,"Hab.",false);
   OutString(5,0,"Huesped",false);
   OutString(6,0,"Edad",true);
   OutString(7,0,"Nr.Doc",false);
   OutString(8,0,"Nac",true);
   EndFormat;

   Gray_Divider(0,1);
 
   rwcnt= MatRowCnt(Transf);
   for(i=0;i<rwcnt;i=i+1) begin
     MatRowGet(Transf,i,Transfrw);
      
     StartFormat(15);
     OutString(2,0,Transfrw.JobNr,false);
     Jobr.SerNr = Transfrw.JobNr;
     if readfirstmain(Jobr,1,true) then begin
       OutString(3,0,Jobr.Mother,false);
       OutString(4,0,Jobr.ResCode,false);
     end;
     OutString(5,0,Transfrw.GuestName,false);
     Profiler.Code = Transfrw.GuestCode;
     if readfirstmain(Profiler,1,true) then begin
       OutString(6,0,YearsOld(Profiler.BirthDate),true);
       OutString(7,0,Profiler.PassportNr,false);
       OutString(8,0,Profiler.Nationality,true);
     end;  
     EndFormat;
       
     CantPax= CantPax+1;
   end;  
 end;
 
 if (CantPax>0) then begin
   Black_Divider(0,1);
   StartFormat(15);
   OutString(20,0,"Total de Pasajeros: " & CantPax,false );
   EndFormat;
 end;
 
 EndJob;
 return;
end;

