external function Boolean FindCustomerRelation(string,string,var record CUVc);

/* Not so good code... */

#ifdef HAL
external function Boolean SetInSet2(string,string);

procedure PrintCust(record CUVc CUr,Integer detail,var Integer countf,Boolean contactf)
begin
  switch (detail) begin
    case 0:
      StartFormat(15);
      if (contactf) then begin
        OutStringID(15,"DblCUVc",CUr.Name,false,CUr.Code);
        OutString(210,0,CUr.Phone,false);
      end else begin
        OutStringID(0,"DblCUVc",CUr.Name,false,CUr.Code);
        OutString(210,0,CUr.Phone,false);
      end;
      OutString(300,0,CUr.Mobile,false);
      OutString(390,0,CUr.AltPhone,false);
      EndFormat;
      countf = countf + 1;
    case 2:
      StartFormat(15);
      if (contactf) then begin
        OutStringID(15,"DblCUVc",CUr.Name,false,CUr.Code);
        OutString(210,0,CUr.Phone,false);
      end else begin
        OutStringID(0,"DblCUVc",CUr.Name,false,CUr.Code);
        OutString(210,0,CUr.Phone,false);
      end;
      OutString(300,0,CUr.Mobile,false);
      OutString(390,0,CUr.AltPhone,false);
      EndFormat;
      countf = countf + 1;
      StartFormat(15);
      OutString(0,0,CUr.JobDesc,false);
      OutString(140,0,CUr.Department,false);
      OutString(270,0,CUr.Comment0,false);
      OutString(390,0,CUr.Classification,false);
      EndFormat;
      Gray_Divider(0,1);
    case 1:
      countf = countf + 1;
      StartFormat(15);
      if (contactf) then begin
        OutString(0,"DblCUVc",CUr.Code,false);
        OutString(95,0,CUr.wwwAddr,false);
      end else begin
        OutString(0,"DblCUVc",CUr.Code,false);
        OutString(80,0,CUr.wwwAddr,false);
      end;
      OutString(390,0,CUr.Phone,false);
      EndFormat;
      StartFormat(15);
      OutString(80,0,CUr.Name,false);
      OutString(390,0,CUr.Fax,false);
      EndFormat;
      StartFormat(15);
      OutString(80,0,CUr.SearchKey,false);
      OutString(270,0,CUr.CustCat,false);
      EndFormat;
      if (nonblank(CUr.InvAddr0)) then begin
        StartFormat(15);
        OutString(80,0,CUr.InvAddr0,false);
        EndFormat;
      end;
      if (nonblank(CUr.InvAddr1)) then begin
        StartFormat(15);
        OutString(80,0,CUr.InvAddr1,false);
        EndFormat;
      end;
      if (nonblank(CUr.InvAddr2)) then begin
        StartFormat(15);
        OutString(80,0,CUr.InvAddr2,false);
        EndFormat;
      end;
      if (nonblank(CUr.InvAddr3)) then begin
        StartFormat(15);
        OutString(80,0,CUr.InvAddr3,false);
        EndFormat;
      end;
      if (nonblank(CUr.InvAddr4)) then begin
        StartFormat(15);
        OutString(80,0,CUr.InvAddr4,false);
        EndFormat;
      end;
      if (nonblank(CUr.DelAddr0)) then begin
        StartFormat(15);
        OutString(80,0,CUr.DelAddr0,false);
        EndFormat;
      end;
      if (nonblank(CUr.DelAddr1)) then begin
        StartFormat(15);
        OutString(80,0,CUr.DelAddr1,false);
        EndFormat;
      end;
      if (nonblank(CUr.DelAddr2)) then begin
        StartFormat(15);
        OutString(80,0,CUr.DelAddr2,false);
        EndFormat;
      end;
      if (nonblank(CUr.DelAddr3)) then begin
        StartFormat(15);
        OutString(80,0,CUr.DelAddr1,false);
        EndFormat;
      end;
      if (nonblank(CUr.DelAddr4)) then begin
        StartFormat(15);
        OutString(80,0,CUr.DelAddr2,false);
        EndFormat;
      end;
  end;
  return;
end;

global
procedure TeleRn(record RcVc RepSpec)
begin
  record ContactRelVc ContactRelr;
  record CUVc CUr;
  record CUVc CU2r;
  Integer xkey;
  Integer countf,tempf;
  Integer rw;
  Boolean TrHs,TrHsCR;
  Boolean testf;
  String 255 tstr;
  
  rw = 1;
  countf = 0;
  StartReportJob(USetStr(9040));
  if (RepSpec.f1<>"") then begin
    tstr = USetStr(7113);
    tstr = tstr & ": " & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end else begin
    tstr = USetStr(7302);
    Header(rw,tstr,1);
  end;
  EndHeader;


  switch (RepSpec.ArtMode) begin
    case 0:
      StartFormat(15);
      OutString(0,0,USetStr(9041),false);
      OutString(210,0,USetStr(9042),false);
      OutString(300,0,USetStr(9043),false);
      OutString(390,0,USetStr(9044),false);
      EndFormat;
    case 1:
      StartFormat(15);
      OutString(0,0,USetStr(9051),false);
      OutString(80,0,USetStr(9041),false);
      OutString(390,0,USetStr(9042),false);
      EndFormat;
    case 2:
      StartFormat(15);
      OutString(0,0,USetStr(9041),false);
      OutString(210,0,USetStr(9042),false);
      OutString(300,0,USetStr(9043),false);
      OutString(390,0,USetStr(9044),false);
      EndFormat;

      StartFormat(15);
      OutString(0,0,USetStr(9045),false);
      OutString(140,0,USetStr(9046),false);
      OutString(270,0,USetStr(9047),false);
      OutString(390,0,USetStr(9048),false);    
      EndFormat;
  end;
  Gray_Divider(0,1);
  if (RepSpec.ArtMode==0) or (RepSpec.ArtMode==1) or (RepSpec.ArtMode==2) then begin
    TrHs = true;
    CUr.Code = RepSpec.f1;
    while (LoopMain(CUr,1,TrHs)) begin
      testf = true;
      if (TrHs) then begin
        if (nonblank(RepSpec.f1)) then begin
          if (CUr.Code<>RepSpec.f1) then begin
            testf = false;
          end;
        end;
        if (nonblank(RepSpec.f3)) then begin
          if (CUr.CustCat<>RepSpec.f3) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        PrintCust(CUr,RepSpec.ArtMode,countf,false);
      
        ResetLoop(ContactRelr);
        TrHsCR = true;
        ContactRelr.CustCode = CUr.Code;
        while (LoopMain(ContactRelr,1,TrHsCR)) begin
          testf = true;
          if (TrHsCR) then begin
            if (nonblank(RepSpec.f1)) then begin
              if (ContactRelr.CustCode<>CUr.Code) then begin
                testf = false;
              end;
            end;
          end;
          if (TrHsCR) then begin
            if (FindCustomerRelation(ContactRelr.CustCode,ContactRelr.ContactName,CU2r)==false) then begin
              testf = false;
            end;
          end;
          if (TrHsCR) then begin
            if (nonblank(RepSpec.Stext)) then begin
              testf = (SetinSet2(RepSpec.Stext,CU2r.Classification));
            end;
          end;
          if (TrHsCR and testf) then begin
            if (nonblank(RepSpec.f3)) then begin
              CU2r.Code = ContactRelr.CustCode;
              if (ReadFirstMain(CU2r,1,true)) then begin
                if (CU2r.CustCat<>RepSpec.f3) then begin
                  testf = false;
                end;
              end;
            end;
          end;
          if (TrHsCR) then begin
            if (nonblank(RepSpec.ObjStr)) then begin
              if (CU2r.JobDesc<>RepSpec.ObjStr) then begin
                testf = false;
              end;
            end;
            if (CU2r.blockedFlag!=0) then begin testf = false; end;
            if (ContactRelr.Invalid!=0) then begin testf = false; end;
          end;
          if (testf) then begin
            PrintCust(CU2r,RepSpec.ArtMode,countf,true);
          end;
        end;
      end;
    end;
  end;
/*  
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(9049),false);
    EndFormat;
    TrHs = true;
    CUr.Code = RepSpec.f1;
    while (LoopMain(CUr,1,TrHs)) begin
      testf = true;
      if (TrHs) then begin
        if (nonblank(RepSpec.f1)) then begin
          if (CUr.Code<>RepSpec.f1) then begin
            testf = false;
          end;
        end;
        if (nonblank(RepSpec.f3)) then begin
          if (CUr.CustCat<>RepSpec.f3) then begin
            testf = false;
          end;
        end;
      end;
//      if (nonblank(CUr.Person)) then begin testf = false; end;
      if (testf) then begin
        PrintCust(CUr,RepSpec.ArtMode,tempf,false);
      end;
    end;
  end;
*/  
  Black_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(9050),false);
  OutVal(140,0,countf,M4UVal,false);
  EndFormat;
  EndJob;
return;
end;

#endif

