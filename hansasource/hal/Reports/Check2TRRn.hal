global
function val CalculateSHFIFOVal(record SHVc SHr,Boolean payalf)
begin
  val res;
  row SHVc SHrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(SHr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SHr,i,SHrw);
    res = res + SHrw.FIFORowVal; 
  end;
  CalculateSHFIFOVal = res;
  return;
end;

global
function val CalculateSDFIFOVal(record SDVc SDr,Boolean payalf)
begin
  val res;
  row SDVc SDrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(SDr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SDr,i,SDrw);
    res = res + SDrw.FIFORowVal; 
  end;
  CalculateSDFIFOVal = res;
  return;
end;

global
function val CalculateINTransferFIFOVal(record INTransferVc INTransferr,Boolean payalf)
begin
  val res;
  row INTransferVc INTransferrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(INTransferr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(INTransferr,i,INTransferrw);
    res = res + INTransferrw.FIFORowVal; 
  end;
  CalculateINTransferFIFOVal = res;
  return;
end;

global
function val CalculateRetFIFOVal(record RetVc Retr,Boolean payalf)
begin
  val res;
  row RetVc Retrw;
  Integer i,rwcnt;  
  val FIFORowVal;
  
  rwcnt = MatRowCnt(Retr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Retr,i,Retrw);
    FIFORowVal = Retrw.Quant*Retrw.CostPrice;
    res = res + FIFORowVal; 
  end;
  CalculateRetFIFOVal = res;
  return;
end;

global
function val CalculateDropSHFIFOVal(record DropSHVc DropSHr,Boolean payalf)
begin
  val res;
  row DropSHVc DropSHrw;
  Integer i,rwcnt;  
  val FIFORowVal;
  
  rwcnt = MatRowCnt(DropSHr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(DropSHr,i,DropSHrw);
    FIFORowVal = DropSHrw.Ship*DropSHrw.CostPrice;
    res = res + FIFORowVal; 
  end;
  CalculateDropSHFIFOVal = res;
  return;
end;

function val CalculateProdFIFOVal(record ProdVc Prodr,Boolean payalf)
begin
  val res;
  row ProdVc Prodrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(Prodr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Prodr,i,Prodrw);
    res = res + Prodrw.FIFORowVal; 
  end;
  CalculateProdFIFOVal = res;
  return;
end;

function val CalculateAT2WrofTotVal(record AT2WrofVc AT2Wrofr,Boolean payalf)
begin
  val res;
  row AT2WrofVc AT2Wrofrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(AT2Wrofr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(AT2Wrofr,i,AT2Wrofrw);
    res = res + AT2Wrofrw.DprVal; 
  end;
  CalculateAT2WrofTotVal = res;
  return;
end;

global
function val CalculateStockMovFIFOVal(record StockMovVc StockMovr,Boolean payalf)
begin
  val res;
  row StockMovVc StockMovrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(StockMovr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(StockMovr,i,StockMovrw);
    res = res + StockMovrw.Quant*StockMovrw.OldPrice; 
  end;
  CalculateStockMovFIFOVal = res;
  return;
end;

global
function val CalculateSentStockMovFIFOVal(record StockMovVc StockMovr,Boolean payalf)
begin
  val res;
  row StockMovVc StockMovrw;
  Integer i,rwcnt;  
  
  rwcnt = MatRowCnt(StockMovr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(StockMovr,i,StockMovrw);
    res = res + StockMovrw.SentQuant*StockMovrw.SentOldPrice; 
  end;
  CalculateSentStockMovFIFOVal = res;
  return;
end;

// Buggy, very many functions use LoopMain, when the code expects us to be using LoopKey....
global
procedure Check2TRRn(record RcVc RepSpec)
BEGIN
  record TRVc TRr;
  record IVVc IVr;
  record IVCashVc IVCashr;
  record RestAccVc RestAccr;
  record ChqDepVc ChqDepr;
  record IPVc IPr;
  record VIVc VIr;
  record OPVc OPr;
  record ExpVc Expr;
  record PPVc PPr;
  record SHVc SHr;
  record DropSHVc DropSHr;
  record SDVc SDr;
  record PUVc PUr;
  record ProdVc Prodr;
  record INTransferVc INTransferr;
  record StockMovVc SMr;
  record CLInVc CLInr;
  record CLOutVc CLOr;
  record RetVc Retr;
  record CheckVc Checkr;
  record OwnCheckVc OwnCheckr;
  record VATIVVc VATIVr;
  record VATVIVc VATVIr;
  record IntIVVc IntIVr;  
  record RetPUVc RetPUr;
  record WSVc WSr;
  record AT2WrofVc AT2Wrofr;
  record CredManVc CredManr;
  Boolean TrHs,testf;
  Boolean firstivf,firstivcashf,firstipf,firstipbf,firstipof,firstvif,firstopf,firstopbf,firstopof;
  Boolean firstexpf,firstprodf,firstppf,firstsmf,firstshf,firstdropshf,firstpuf,firstsdf,firstclif,firstclof;
  Boolean firstretf,firstcheckf,firstowncheckf,firstchqdepf,firstivvatf,firstvivatf,firstintivf,firstintransferf;
  Boolean firstretpuf,firstatwroff,firstwsf,firstsmsentf;
  Integer rw;
  string 255 tstr,keystr;
 
  firstretpuf = true;
  firstatwroff = true;
  firstwsf = true;
  firstivf = true;
  firstintivf = true;
  firstivcashf = true;
  firstipf = true;
  firstipbf = true;
  firstipof = true;
  firstvif = true;
  firstopf = true;
  firstopbf = true;
  firstopof = true;
  firstexpf = true;
  firstprodf = true;
  firstppf = true;
  firstsmf = true;
  firstsmsentf = true;
  firstshf = true;
  firstdropshf = true;
  firstpuf = true;
  firstsdf = true;
  firstclif = true;
  firstclof = true;
  firstretf = true;
  firstcheckf = true;
  firstowncheckf = true;
  firstchqdepf = true;
  firstivvatf = true;
  firstvivatf = true;
  firstintransferf = true;
  StartReportJob(USetStr(26352));
    Header(rw,USetStr(26353),1);
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,130);
  SetRepCol(4,180);
  SetRepCol(5,230);
  StartFormat(15);
  OutString(0,0,USetStr(26350),false);
  EndFormat;

  if (RepSpec.flags[0]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      IVr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,IVr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(IVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (IVr.OKFlag==0) then begin testf = false; end;
      if (IVr.Sum4==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = IVr.SerNr;
        TRr.IntYc = IVYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (IVr.Invalid==0) then begin
            if (firstivf) then begin
              Gray_Divider(0,1);
              StartFormat(15);
              OutString(0,0,USetStr(1150),false);
              OutString(2,0,USetStr(2503),false);
              OutString(3,0,USetStr(8094),false);
              OutString(4,0,USetStr(2354),false);
              OutString(5,0,USetStr(2448),false);
              OutString(1,0,USetStr(2357),true);
              EndFormat;
              Gray_Divider(0,1);
              firstivf = false;
            end;
            StartFormat(15);
            OutLongInt(2,"DblIVVc",IVr.SerNr,false);
            OutDate(3,0,IVr.TransDate,false);
            OutString(4,"DblCUVc",IVr.CustCode,false);
            OutString(5,0,IVr.Addr0,false);
            OutVal(1,0,IVr.Sum4,M4Val,true);
            EndFormat;
          end;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;

  if (RepSpec.flags[1]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      IVCashr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,IVCashr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(IVCashr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (IVCashr.OKFlag==0) then begin testf = false; end;
      if (IVCashr.NLFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = IVCashr.SerNr;
        TRr.IntYc = IVCashYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (IVCashr.Invalid==0) then begin
            if (firstivcashf) then begin
              Gray_Divider(0,1);
              StartFormat(15);
              OutString(0,0,USetStr(1431),false);
              OutString(2,0,USetStr(2503),false);
              OutString(3,0,USetStr(8094),false);
              OutString(4,0,USetStr(2354),false);
              OutString(5,0,USetStr(2448),false);
              OutString(1,0,USetStr(2357),true);
              EndFormat;
              Gray_Divider(0,1);
              firstivcashf = false;
            end;
            StartFormat(15);
            OutLongInt(2,"DblIVCash",IVCashr.SerNr,false);
            OutDate(3,0,IVCashr.TransDate,false);
            OutString(4,"DblCUVc",IVCashr.CustCode,false);
            OutString(5,0,IVCashr.Addr0,false);
            OutVal(1,0,IVCashr.Sum4,M4Val,true);
            EndFormat;
          end;
        end;
      end;
    end;
  end;
/*  
  TrHs = true;
  while (LoopMain(RestAccr,1,TrHs)) begin
    TRr.Number = RestAccr.SerNr;
    TRr.IntYc = RestAccYc;
    if (ReadFirstMain(TRr,2,true)==false) then begin
      if (RestAccr.Invalid==0) then begin
        if (firstivf) then begin
          StartFormat(15);
          OutString(0,0,USetStr(1436),false);
          Gray_Divider(0,1);
          EndFormat;
          firstivf = false;
        end;
        StartFormat(15);
        OutLongInt(2,0,RestAccr.SerNr,false);
        EndFormat;
      end;
    end;
  end;
*/  
  if (RepSpec.flags[2]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      ChqDepr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,ChqDepr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(ChqDepr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (ChqDepr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = ChqDepr.SerNr;
        TRr.IntYc = ChqDepYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstchqdepf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1437),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26354),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstchqdepf = false;
          end;
          StartFormat(15);
          OutLongInt(2,0,ChqDepr.SerNr,false);
          OutDate(3,0,ChqDepr.TransDate,false);
          OutString(4,0,ChqDepr.PayMode,false);
          OutString(5,0,ChqDepr.Comment,false);
          OutVal(1,0,ChqDepr.Sum,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[3]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      IPr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,IPr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(IPr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (IPr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = IPr.SerNr;
        TRr.IntYc = IPYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstipf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1151),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26354),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstipf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblIPVc",IPr.SerNr,false);
          OutDate(3,0,IPr.TransDate,false);
          OutString(4,0,IPr.PayMode,false);
          OutString(5,0,IPr.Comment,false);
          OutVal(1,0,IPr.CurPayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
L11:;    
  end;
  if (RepSpec.flags[4]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      VIr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,VIr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(VIr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (VIr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = VIr.SerNr;
        TRr.IntYc = VIYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstvif) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1152),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26356),false);
            OutString(5,0,USetStr(26357),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstvif = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblVIVc",VIr.SerNr,false);
          OutDate(3,0,VIr.TransDate,false);
          OutString(4,"DblCUVc",VIr.VECode,false);
          OutString(5,0,VIr.VEName,false);
          OutVal(1,0,VIr.PayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[5]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      OPr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,OPr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(OPr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (OPr.DoneFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = OPr.SerNr;
        TRr.IntYc = OPYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstopf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1153),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26354),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstopf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblOPVc",OPr.SerNr,false);
          OutDate(3,0,OPr.TransDate,false);
          OutString(4,0,OPr.PayMode,false);
          OutString(5,0,OPr.BankName,false);
          OutVal(1,0,OPr.CurPayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[6]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      PUr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,PUr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(PUr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (PUr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = PUr.SerNr;
        TRr.IntYc = PUYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstpuf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1157),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstpuf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblPU",PUr.SerNr,false);
          OutDate(3,0,PUr.TransDate,false);
          OutString(4,0,PUr.Location,false);
          OutString(5,0,PUr.Comment,false);
          OutVal(1,0,PUr.PayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[7]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "ShipDate";
      SHr.ShipDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,SHr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(SHr.ShipDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (SHr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = SHr.SerNr;
        TRr.IntYc = SHYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstshf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1158),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstshf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblSHVc",SHr.SerNr,false);
          OutDate(3,0,SHr.ShipDate,false);
          OutString(4,0,SHr.Location,false);
          OutString(5,0,SHr.Comment,false);
          OutVal(1,0,CalculateSHFIFOVal(SHr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[8]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      Expr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,Expr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(Expr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (Expr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = Expr.SerNr;
        TRr.IntYc = ExpYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstexpf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1170),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26359),false);
            OutString(5,0,USetStr(26360),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstexpf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblExpVc",Expr.SerNr,false);
          OutDate(3,0,Expr.TransDate,false);
          OutString(4,0,Expr.Person,false);
          OutString(5,0,Expr.Name,false);
          OutVal(1,0,Expr.PayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[9]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      PPr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,PPr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(PPr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (PPr.DoneFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = PPr.SerNr;
        TRr.IntYc = PPYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstppf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1171),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26354),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstppf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblPPVc",PPr.SerNr,false);
          OutDate(3,0,PPr.TransDate,false);
          OutString(4,0,PPr.PayMode,false);
          OutString(5,0,PPr.BankAcc,false);
          OutVal(1,0,PPr.BasePayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[10]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      SMr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,SMr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(SMr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (SMr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = SMr.SerNr;
        TRr.IntYc = STMovYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstsmf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1172),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26361),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstsmf = false;
          end;
          StartFormat(15);
          OutLongInt(60,"DblStockMovVc",SMr.SerNr,false);
          OutDate(3,0,SMr.TransDate,false);
          OutString(4,0,SMr.FrLocation,false);
          OutString(5,0,SMr.Comment,false);
          OutVal(1,0,CalculateStockMovFIFOVal(SMr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[11]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      CLInr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,CLInr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(CLInr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (CLInr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = CLInr.SerNr;
        TRr.IntYc = CLInYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstclif) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1193),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26362),false);
            OutString(5,0,USetStr(26363),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstclif = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblCLInVc",CLInr.SerNr,false);
          OutDate(3,0,CLInr.TransDate,false);
          OutString(4,0,CLInr.CorspCode,false);
          OutString(5,0,CLInr.Comment,false);
          OutVal(1,0,CLInr.Total,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[12]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      CLOr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,CLOr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(CLOr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (CLOr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = CLOr.SerNr;
        TRr.IntYc = CLOutYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstclof) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1194),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26362),false);
            OutString(5,0,USetStr(26363),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstclof = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblCLOutVc",CLOr.SerNr,false);
          OutDate(3,0,CLOr.TransDate,false);
          OutString(4,0,CLOr.CorspCode,false);
          OutString(5,0,CLOr.Comment,false);
          OutVal(1,0,CLOr.Total,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[13]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      SDr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,SDr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(SDr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (SDr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = SDr.SerNr;
        TRr.IntYc = SDYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstsdf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1195),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstsdf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblSDVc",SDr.SerNr,false);
          OutDate(3,0,SDr.TransDate,false);
          OutString(4,0,SDr.Location,false);
          OutString(5,0,SDr.Comment,false);
          OutVal(1,0,CalculateSDFIFOVal(SDr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[14]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "ProdDate";
      Prodr.ProdDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,Prodr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(Prodr.ProdDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (Prodr.PRStatusFlag<3) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = Prodr.SerNr;
        TRr.IntYc = ProdYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstprodf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1162),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstprodf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblProd",Prodr.SerNr,false);
          OutDate(3,0,Prodr.ProdDate,false);
          OutString(4,0,Prodr.Location,false);
          OutString(5,0,Prodr.Comment,false);
          OutVal(1,0,CalculateProdFIFOVal(Prodr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[15]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      INTransferr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,INTransferr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(INTransferr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (INTransferr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = INTransferr.SerNr;
        TRr.IntYc = INTransferYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstintransferf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1443),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            firstintransferf = false;
            Gray_Divider(0,1);
          end;
          StartFormat(15);
          OutLongInt(2,0,INTransferr.SerNr,false);
          OutDate(3,0,INTransferr.TransDate,false);
          OutString(4,0,INTransferr.FrLocation,false);
          OutString(5,0,INTransferr.Comment,false);
          OutVal(1,0,CalculateINTransferFIFOVal(INTransferr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[16]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      Retr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,Retr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(Retr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (Retr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = Retr.SerNr;
        TRr.IntYc = RetYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstretf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1421),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstretf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblRetVc",Retr.SerNr,false);
          OutDate(3,0,Retr.TransDate,false);
          OutString(4,0,Retr.Location,false);
          OutString(5,0,Retr.Comment,false);
          OutVal(1,0,CalculateRetFIFOVal(Retr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[17]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "EffectDate";
      Checkr.EffectDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,Checkr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(Checkr.EffectDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (Checkr.Openf==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = Checkr.SerNr;
        TRr.IntYc = CheckYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstcheckf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1423),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(2354),false);
            OutString(5,0,USetStr(2448),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstcheckf = false;
          end;
          StartFormat(15);
          OutLongInt(2,0,Checkr.SerNr,false);
          OutDate(3,0,Checkr.TransDate,false);
          OutString(4,"DblCUVc",Checkr.CUCode,false);
          OutString(5,0,Checkr.CUName,false);
          OutVal(1,0,Checkr.Amount,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[18]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "EffectDate";
      OwnCheckr.EffectDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,OwnCheckr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(OwnCheckr.EffectDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (OwnCheckr.Openf==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = OwnCheckr.SerNr;
        TRr.IntYc = OwnCheckYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstowncheckf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1428),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26356),false);
            OutString(5,0,USetStr(26357),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstowncheckf = false;
          end;
          StartFormat(15);
          OutLongInt(2,0,OwnCheckr.SerNr,false);
          OutDate(3,0,OwnCheckr.TransDate,false);
          OutString(4,"DblCUVc",OwnCheckr.VECode,false);
          OutString(5,0,OwnCheckr.VEName,false);
          OutVal(1,0,OwnCheckr.Amount,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[19]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      VATIVr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,VATIVr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(VATIVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (VATIVr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = VATIVr.SerNr;
        TRr.IntYc = VATIVYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstivvatf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1441),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(2354),false);
            OutString(5,0,USetStr(2448),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstivvatf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblVATIVVc",VATIVr.SerNr,false);
          OutDate(3,0,VATIVr.TransDate,false);
          OutString(4,"DblCUVc",VATIVr.CustCode,false);
          OutString(5,0,VATIVr.Addr0,false);
          OutVal(1,0,VATIVr.Sum4,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[20]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      VATVIr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,VATVIr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(VATVIr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (VATVIr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = VATVIr.SerNr;
        TRr.IntYc = VATVIYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstvivatf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1442),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26356),false);
            OutString(5,0,USetStr(26357),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstvivatf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblVATVIVc",VATVIr.SerNr,false);
          OutDate(3,0,VATVIr.TransDate,false);
          OutString(4,"DblCUVc",VATVIr.VECode,false);
          OutString(5,0,VATVIr.VEName,false);
          OutVal(1,0,VATVIr.PayVal,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[21]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      IntIVr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopMain(IntIVr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(IntIVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;

      testf = true;
      if (IntIVr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = IntIVr.SerNr;
        TRr.IntYc = IntIVYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstintivf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1447),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26359),false);
            OutString(5,0,USetStr(26360),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstintivf = false;
          end;
          StartFormat(15);
          OutLongInt(2,0,IntIVr.SerNr,false);
          OutDate(3,0,IntIVr.TransDate,false);
          OutString(4,0,IntIVr.SalesMan,false);
          OutString(5,0,IntIVr.Name,false);
          OutVal(1,0,IntIVr.Sum4,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[22]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      RetPUr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopMain(RetPUr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(RetPUr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (RetPUr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = RetPUr.SerNr;
        TRr.IntYc = RetPUYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstretpuf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1446),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstretpuf = false;
          end;
          StartFormat(15);
          OutLongInt(2,0,RetPUr.SerNr,false);
          OutDate(3,0,RetPUr.TransDate,false);
          OutString(4,0,RetPUr.Location,false);
          OutString(5,0,RetPUr.Comment,false);
          OutVal(1,0,RetPUr.SumCostPrice,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[23]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      WSr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopMain(WSr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(WSr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (WSr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = WSr.SerNr;
        TRr.IntYc = WSYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstwsf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1422),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26358),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstwsf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblWSVc",WSr.SerNr,false);
          OutDate(3,0,WSr.TransDate,false);
          OutString(4,0,WSr.Location,false);
          OutString(5,0,WSr.Comment1,false);
          OutVal(1,0,WSr.Sum4,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[24]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      AT2Wrofr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopMain(AT2Wrofr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(AT2Wrofr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (AT2Wrofr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = AT2Wrofr.SerNr;
        TRr.IntYc = AT2WrofYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstatwroff) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1430),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstatwroff = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblAT2WrofVc",AT2Wrofr.SerNr,false);
          OutDate(3,0,AT2Wrofr.TransDate,false);
          OutString(5,0,AT2Wrofr.Comment,false);
          OutVal(1,0,CalculateAT2WrofTotVal(AT2Wrofr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;  
  if (RepSpec.flags[25]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "TransDate";
      CredManr.TransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,CredManr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(CredManr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (CredManr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = CredManr.SerNr;
        TRr.IntYc = CredManYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstatwroff) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1635),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(2354),false);
            OutString(5,0,USetStr(2448),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstatwroff = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblCredManVc",CredManr.SerNr,false);
          OutDate(3,0,CredManr.TransDate,false);
          OutString(4,"DblCUVc",CredManr.CustCode,false);
          OutString(5,0,CredManr.Addr0,false);
          OutVal(1,0,CredManr.TotalSum,M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;  
  if (RepSpec.flags[26]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "SentTransDate";
      SMr.SentTransDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,SMr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(SMr.SentTransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (SMr.SentOKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = SMr.SerNr;
        TRr.IntYc = SentSTMovYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstsmsentf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1448),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(26364),false);
            OutString(5,0,USetStr(26355),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstsmsentf = false;
          end;
          StartFormat(15);
          OutLongInt(60,"DblStockMovVc",SMr.SerNr,false);
          OutDate(3,0,SMr.TransDate,false);
          OutString(4,0,SMr.ThrouLocation,false);
          OutString(5,0,SMr.Comment,false);
          OutVal(1,0,CalculateSentStockMovFIFOVal(SMr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;
  if (RepSpec.flags[27]!=0) then begin
    if (nonblankdate(RepSpec.sStartDate)) then begin
      keystr = "ShipDate";
      DropSHr.ShipDate = RepSpec.sStartDate;
    end else begin
      keystr = "SerNr";
    end;
    TrHs = true;
    while (LoopKey(keystr,DropSHr,1,TrHs)) begin
      if (nonblankdate(RepSpec.sStartDate)) then begin
        if (DateInRange(DropSHr.ShipDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin TrHs = false; end;
      end;
      testf = true;
      if (DropSHr.OKFlag==0) then begin testf = false; end;
      if (TrHs and testf) then begin
        TRr.Number = DropSHr.SerNr;
        TRr.IntYc = DropSHYc;
        if (ReadFirstMain(TRr,2,true)==false) then begin
          if (firstdropshf) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(1639),false);
            OutString(2,0,USetStr(2503),false);
            OutString(3,0,USetStr(8094),false);
            OutString(4,0,USetStr(2354),false);
            OutString(5,0,USetStr(2448),false);
            OutString(1,0,USetStr(2357),true);
            EndFormat;
            Gray_Divider(0,1);
            firstdropshf = false;
          end;
          StartFormat(15);
          OutLongInt(2,"DblDropSHVc",DropSHr.SerNr,false);
          OutDate(3,0,DropSHr.ShipDate,false);
          OutString(4,"DblCUVc",DropSHr.CustCode,false);
          OutString(5,0,DropSHr.Addr0,false);
          OutVal(1,0,CalculateDropSHFIFOVal(DropSHr,true),M4Val,true);
          EndFormat;
        end;
      end;
    end;
    StartFormat(15);
    EndFormat;
  end;  

  EndJob;
  RETURN;
END;