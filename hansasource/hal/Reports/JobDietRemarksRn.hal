external function Boolean IsCancelState(string);
external function LongInt YearsOld(Date);

procedure GuestsDietRemarks(record JobVc Jobr,LongInt rsvnr)
begin
  Integer rwcnt,i;
  record CUVc CUr;
  row JobVc Jobrw;
  record JobVc subJobr;
  Boolean found;
  String 30 ckey;
  LongInt minorcnt; 

  minorcnt = 0;
  rwcnt = MatRowCnt(Jobr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Jobr,i,Jobrw);
    CUr.Code = Jobrw.GuestCode;
    StartFormat(15);
    if (rsvnr>0) then begin
      OutString(0,"DblJobVc",rsvnr,false);
    end;
    OutString(2,0,Jobr.ResCode,false);
    OutString(3,"DblCUrVc",Jobrw.GuestCode,false);
    OutString(4,0,Jobrw.CUName,false);
    if (ReadFirstMain(CUr,1,true)) then begin
      OutString(5,0,CUr.DietRemarks,false);
    end;
    EndFormat;
  end;  
  found = true;
  ckey = "Mother:" & Jobr.SerNr;
  SetLoopPosition(subJobr,0);
  subJobr.Mother = Jobr.SerNr;  
  while (LoopKey(ckey,subJobr,1,found)) begin
    if (subJobr.Mother!=Jobr.SerNr) then begin
      found = false;
    end;
    if (found) then begin
       if (IsCancelState(subJobr.ResStatus)==false) then begin
         GuestsDietRemarks(subJobr,subJobr.SerNr);
       end;
    end;
  end;
  if (minorcnt>0) then begin
    Gray_Divider(0,1);
    StartFormat(15);
    EndFormat;
    StartFormat(15);
    OutString(100,0,USetStr(9927) & ": ",false);
    OutLongInt(240,0,minorcnt,true);
    EndFormat;
  end;
  return; 
end;

global
procedure JobDietRemarksRn(Record RcVc RepSpec)
begin
  record JobVc Jobr;
  Integer rw;

  rw = 1;
  Jobr.SerNr = RepSpec.long1;
  if (ReadFirstMain(Jobr,1,true)) then begin
    switch (Jobr.ReservationType) begin      
      case kReservationTypeNormal:
        if (MatRowCnt(Jobr)>0) then begin
          StartReportJob(USetStr(39770));
          Header(rw,USetStr(10199) & ": " & Jobr.TransDate,1);
          rw = rw + 1;
          Header(rw,USetStr(10200) & ": " & Jobr.EndDate,1);
          rw = rw + 1;
          EndHeader;
          SetRepCol(2,0);
          SetRepCol(3,60);
          SetRepCol(4,120); 
          SetRepCol(5,300); 
      
          StartFormat(15);
          OutString(2,0,USetStr(9919),false);
          OutString(3,0,USetStr(9921),false);
          OutString(4,0,USetStr(8199),false);
          OutString(5,0,USetStr(8181),false);
          EndFormat;
          Gray_Divider(10,0);
          StartFormat(15);
          GuestsDietRemarks(Jobr,-1);
          EndJob;
        end;
      case kReservationTypeGroup:
        StartReportJob(USetStr(39770));
//        Header(rw,USetStr(10199) & ": " & Jobr.TransDate,1);
//        rw = rw + 1;
//        Header(rw,USetStr(10200) & ": " & Jobr.EndDate,1);
//        rw = rw + 1;
        EndHeader;
        SetRepCol(2,50);
        SetRepCol(3,90);
        SetRepCol(4,150); 
        SetRepCol(5,300); 
        StartFormat(15);
        OutString(0,0,USetStr(9913),false);
        OutString(2,0,USetStr(9919),false);
        OutString(3,0,USetStr(9921),false);
        OutString(4,0,USetStr(8199),false);
        OutString(5,0,USetStr(8181),false);
        EndFormat;
        Gray_Divider(10,0);
        GuestsDietRemarks(Jobr,-1);
        EndJob;
    end;
  end;
  return;
end;
