external procedure HTLocations(string, string, var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure HTItems(string,var string);
external procedure HTITs(string,string,var string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function val FindVAT(string,val,Integer,Integer);
external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);
external procedure GetCustCat(string,var string);

global
procedure QTStkRn(record RcVc RepSpec)
begin
  record QTVc QTr;
  Row  QTVc QTrw;
  Boolean testf;
  Boolean found,test2f;
  Integer i,rwcnt;
  Integer rw;
  LongInt afr;
  LongInt ato;
  String 255 tstr;
  val totsumrs;
  val totsum;
  val iv;
  val prob;
  val rs;
  val prs;
  val t;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;
  val sum1,sum3,sum4,vatv,t1,rowsum;
  string 20 frit,toit;
  string 20 frin,toin;
  record INVc INr;

  afr = FirstInRange(RepSpec.f1,30);
  ato = LastInRange(RepSpec.f1,30);
  frit = FirstInRange(RepSpec.f3,20);
  toit = LastInRange(RepSpec.f3,20);
  frin = FirstInRange(RepSpec.f4,20);
  toin = LastInRange(RepSpec.f4,20);

  RepSpec.d1 = StringToDate(FirstInRange(RepSpec.Stext,10));
  RepSpec.d2 = StringToDate(LastInRange(RepSpec.Stext,10));

  QTr.SerNr = afr;
  BeginCurncyTotals(curcnt);

  StartReportJob(USetStr(8310));
  if  (RepSpec.PocketPC==0) then begin
    rw = 1;
    if (RepSpec.ArtMode==0) then begin
      tstr = USetStr(8311);
    end;
    if (RepSpec.ArtMode==1) then begin
      tstr = USetStr(8312);                        
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
    if (blank(RepSpec.AccStr)) then begin
      tstr = USetStr(8313);
    end else begin
      tstr = USetStr(8314);
      tstr = tstr & RepSpec.AccStr;
    end;    
    Header(rw,tstr,0);    
    if (blank(RepSpec.f1)) then begin
      tstr = USetStr(8320);
    end else begin
      tstr = USetStr(8321);
      tstr = tstr & afr;
      if (afr<>ato) then begin
        tstr = tstr & " : " & ato;
      end;
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
    if (nonblank(RepSpec.f4)) then begin
      HTItems(RepSpec.f4,tstr);
      Header(rw,tstr,0);
    end;
    if (blank(RepSpec.FirstAcc)) then begin
      tstr = USetStr(8325);
      end else begin
      tstr = USetStr(8326);
      tstr = tstr & RepSpec.FirstAcc;
    end;    
    Header(rw,tstr,1);    
    rw = rw + 1;
    if (nonblank(RepSpec.f3)) then begin
      HTITs(frit,toit,tstr);
      Header(rw,tstr,0);
    end;
    HTCustCat(RepSpec.LastAcc,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    HTCustClass(RepSpec.f10,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    HTLocations(RepSpec.f6,RepSpec.f6,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end else begin
  
  end;
  EndHeader;

  if (RepSpec.ArtMode==0) then begin
    if (RepSpec.PocketPC==0) then begin
      StartFormat(15);
      OutString(0,0,USetStr(2682),false);
      OutString(60,0,USetStr(2683),false);
      OutString(110,0,USetStr(2691),false);
      OutString(190,0,USetStr(2692),false);
      OutString(250,0,USetStr(2684),false);
      OutString(440,0,USetStr(2687),true);
      EndFormat;
    end else begin
      StartFormat(15);
      OutString(0,0,USetStr(2682),false);
      OutString(100,0,USetStr(2684),false);
      OutString(450,0,USetStr(2687),true);
      EndFormat;
    end;
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2682),false);
    OutString(130,0,USetStr(2683),false);
    OutString(300,0,USetStr(2692),false);
    OutString(440,0,USetStr(2691),true);
    EndFormat;
  end;
  Gray_Divider(0,1);
  
  found = true;
  while (LoopMain(QTr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (QTr.SerNr<afr) then begin
        found = false;
      end;
      if (QTr.SerNr>ato) then begin
        found = false;
      end;      
    end;         

    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (RepSpec.FirstAcc<>QTr.QuoteClass) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f2) and (RepSpec.f2<>QTr.CustCode)) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.AccStr)) then begin
        if (RepSpec.AccStr<>QTr.SalesMan) then begin testf = false; end;
      end;
      /*
      if ((QTr.QTDate<RepSpec.sStartDate) or (QTr.QTDate>RepSpec.sEndDate)) then begin
        testf = false;
      end;
   */
      if (QTr.Closed==1) then begin
        testf = false;
      end;
 
      if (QTr.OrderNr<>-1) then begin
        testf = false;
      end;
      if (QTr.Rejected>0) then begin
        testf = false;
      end;      
      if (nonblank(RepSpec.ObjStr)) then begin
        if (QTr.SalesGroup <> RepSpec.ObjStr) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.Stext)) then begin
        Date mcd;
        
        mcd = StringToDate(QTr.MakeContactDate);
        if (nonblankdate(mcd)) then begin
          if (DateInRange(mcd,RepSpec.d1,RepSpec.d2)==false) then begin
            testf = false;
          end;
        end else begin
          if (QTr.MakeContactDate<>RepSpec.Stext) then begin
            testf = false;
          end;
        end;
      end;
    end;
    if (nonblank(RepSpec.f6)) then begin
      if (RepSpec.f6!=QTr.Location) then begin testf = false; end;
    end;
    if (testf) then begin 
      testf = ContactInGroupClass(QTr.CustCode,RepSpec.LastAcc,RepSpec.f10,"CUST","","");    
    end;   
    if (!found) then begin
      testf = false;
    end;
    if (testf) then begin
      if (nonblank(RepSpec.f4)) then begin
        testf = false;
        rwcnt = MatRowCnt(QTr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(QTr,i,QTrw);
          if (ReadFirstItem(QTrw.ArtCode,INr,true,false)) then begin
            if (INr.Code>=frin) and (INr.Code<=toin) then begin
              testf = true;
              i = rwcnt;
            end;
          end;
        end;
      end;
    end;

    if (testf) then begin
      if (nonblank(RepSpec.f3) or nonblank(RepSpec.f5)) then begin
        testf = false;
        rwcnt = MatRowCnt(QTr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(QTr,i,QTrw);
          if (ReadFirstItem(QTrw.ArtCode,INr,true,false)) then begin
            testf = true;
            if (nonblank(RepSpec.f3)) then begin
              if (INr.Group<frit) or (INr.Group>toit) then begin
                testf = false;
              end;
            end;
            if (nonblank(RepSpec.f5)) then begin
              if (SetInSet(RepSpec.f5,INr.DispGroups)==false) then begin
                testf = false;
              end;
            end;
            if (testf) then begin
              i = rwcnt;
            end;
          end;            
        end;
      end;
    end;
    
    if (testf) then begin

      if (nonblank(RepSpec.f3)) or (nonblank(RepSpec.f4) or (nonblank(RepSpec.f5))) then begin
        sum1 = 0;
        rwcnt = MatRowCnt(QTr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(QTr,i,QTrw);
          if (ReadFirstItem(QTrw.ArtCode,INr,true,false)) then begin
            test2f = true;
            if (nonblank(RepSpec.f3)) then begin
              if (INr.Group<frit) or (INr.Group>toit) then begin
                test2f = false;
              end;
            end;
            if (nonblank(RepSpec.f4)) then begin
              if (INr.Code<frin) or (INr.Code>toin) then begin
                test2f = false;
              end;
            end;
            if (nonblank(RepSpec.f5)) then begin
              if (SetInSet(RepSpec.f5,INr.DispGroups)==false) then begin
                test2f = false;
              end;
            end;
            if (test2f) then begin
              sum1 = sum1 + QTrw.Sum;
              MulVATIV(QTrw.VATCode,QTrw.Sum,vatv,t1,QTr.InclVAT,QTr.NoTAXonVAT);
              rowsum = QTrw.Sum;
              if (QTr.InclVAT>0) then begin
                rowsum = QTrw.Sum - vatv;
              end else begin
                rowsum = rowsum + vatv;
              end;
            end;
          end;
        end;          
      end else begin
        sum1 = QTr.Sum1;
      end;
        
      if (RepSpec.flags[1]==0) then begin
        iv = sum1;
        TotSum = TotSum + iv;        
         rs = MULRATETOBASE1(QTr.CurncyCode,iv,QTr.FrRate,QTr.ToRateB1,QTr.ToRateB2,QTr.BaseRate1,QTr.BaseRate2,DefaultCurRoundOff);
        TotSumrs = TotSumrs + rs;
      end;
      if (RepSpec.flags[1]==1) then begin
        if (QTr.Probability>0) then begin
           prob = QTr.Probability;
        end else begin
           prob = 100;
        end;
        if RepSpec.ArtMode==0 then begin
          iv = (sum1*prob)/100;
        end else begin
          iv = (sum1*prob)/100;
        end;  
        TotSum = TotSum + iv;
        rs = MULRATETOBASE1(QTr.CurncyCode,iv,QTr.FrRate,QTr.ToRateB1,QTr.ToRateB2,QTr.BaseRate1,QTr.BaseRate2,DefaultCurRoundOff);
        prs =    (rs*prob)/100;
        TotSumrs = TotSumrs + rs;
      end;

      if RepSpec.ArtMode==0 then begin
        if  (RepSpec.PocketPC==0) then begin
          StartFormat(15);
          OutLongInt(0,"DblQuote",QTr.SerNr,false);
          OutDate(60,0,QTr.QTDate,false);
          OutDate(120,0,QTr.MakeContactDate,false);
          OutString(190,0,QTr.SalesMan,false);
          OutString(250,0,QTr.Addr0,false);
          OutVal(440,0,iv,M4Val,true);
          OutString(445,0,QTr.CurncyCode,false);
          EndFormat;
          AddCurncyTotals(acur,av1,curcnt,QTr.CurncyCode,iv);
        end else begin
          StartFormat(15);
          OutLongInt(0,"DblQuote",QTr.SerNr,false);
          OutString(100,0,left(QTr.Addr0,15),false);
          OutVal(450,0,iv,M4Val,true);
          OutString(455,0,QTr.CurncyCode,false);
          EndFormat;
          AddCurncyTotals(acur,av1,curcnt,QTr.CurncyCode,iv);
        
      end;
      end;
       
      if RepSpec.ArtMode==1 then begin
        StartFormat(15);
        OutLongInt(0,"DblQuote",QTr.SerNr,false);
        OutDate(130,0,QTr.QTDate,false);
        OutString(220,0,QTr.PayDeal,false);
        OutString(300,0,QTr.SalesMan,false);
        OutDate(440,0,QTr.MakeContactDate,true);
        EndFormat;
        StartFormat(15);
        OutString(50,0,QTr.CustCode,false);
        OutString(200,0,QTr.Addr0,false);
        EndFormat;
        StartFormat(15);
        OutString(50,0,QTr.CustCat,false);
        OutString(200,0,QTr.Addr1,false);
        EndFormat;
        StartFormat(15);
        OutString(50,0,QTr.OurContact,false);
        OutString(200,0,QTr.Addr2,false);
        EndFormat;
        if nonblank(QTr.Addr3) then begin
          StartFormat(15);
          OutString(200,0,QTr.Addr3,false);
          EndFormat;
        end;
        if nonblank(QTr.CustContact) then begin
          StartFormat(15);
          OutString(200,0,QTr.CustContact,false);
          EndFormat;
        end;
        if nonblank(QTr.CurncyCode) then begin
          StartFormat(15);
          OutString(460,0,QTr.CurncyCode,true);
          EndFormat;
        end;
        sum1 = blankval; sum3 = blankval; sum4 = blankval;
        rwcnt = MatRowCnt(QTr);
        for (i = 0 ; i<rwcnt ;i=i+1) begin
          MatRowGet(QTr,i,QTrw);
          testf = true;
          if QTrw.stp!=1 then begin testf = false; end;
          if (testf) then begin
            if (nonblank(RepSpec.f3) or nonblank(RepSpec.f4) or nonblank(RepSpec.f5)) then begin
              if (ReadFirstItem(QTrw.ArtCode,INr,true,false)) then begin
                if (nonblank(RepSpec.f3)) then begin
                  if (INr.Group<frit) then begin testf = false; end;
                  if (INr.Group>toit) then begin testf = false; end;
                end;
                if (nonblank(RepSpec.f4)) then begin
                  if (INr.Code<frin) then begin testf = false; end;
                  if (INr.Code>toin) then begin testf = false; end;
                end;
                if (nonblank(RepSpec.f5)) then begin
                  if (SetInSet(RepSpec.f5,INr.DispGroups)==false) then begin
                    testf = false;
                  end;
                end;
              end;
            end;
          end;
          if (testf) then begin
            StartFormat(15);
            OutString(20,0,QTrw.ArtCode,false);
            OutVal(124,0,QTrw.Quant,M4UVal,true);
            OutString(130,0,QTrw.Spec,false);
            OutString(340,0,QTrw.Price,true);
            OutVal(370,0,QTrw.vRebate,M41Val,true);
            if (QTr.InclVAT!=0) then begin
              t = QTrw.Sum - FindVAT(QTrw.VATCode,QTrw.Sum,QTr.InclVAT,QTr.NoTAXonVAT);
            end else begin
              t = QTrw.Sum;
            end;
            OutVal(460,0,t,M4Val,true);
            OutString(480,0,QTrw.VATCode,true);
            EndFormat;      

            sum1 = sum1 + QTrw.Sum;
            sum3 = sum3 + vatv;
            if (QTr.InclVAT>0) then begin
              sum4 = sum4 + QTrw.Sum;
            end else begin
              sum4 = sum4 + QTrw.Sum + vatv;
            end;
          end;              
        end;     
        AddCurncyTotals(acur,av1,curcnt,QTr.CurncyCode,iv);
                 
        Gray_Divider(380,460);
        StartFormat(15);
        OutString(100,0,QTr.Objects,false);
        if (nonblank(RepSpec.f3)) or (nonblank(RepSpec.f4) or (nonblank(RepSpec.f5))) then begin
          OutString(260,0,sum4,true);
          OutString(360,0,sum3,true);
          OutString(460,0,sum1,true);
        end else begin
          OutVal(260,0,QTr.Sum4,M4Val,true);
          OutVal(360,0,QTr.Sum3,M4Val,true);
          OutVal(460,0,QTr.Sum1,M4Val,true);
        end;
        EndFormat;
        Gray_Divider(0,1);
      end;
    end;
  end;
  if RepSpec.ArtMode==0 then begin
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(250,0,USetStr(2687),false);    
    OutVal(440,0,TotSumrs,M4Val,true);
    EndFormat;
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,440,-1,-1,250,true,RepSpec.PocketPC);
  end;
 
  if RepSpec.ArtMode==1 then begin
    StartFormat(15);
    OutString(250,0,USetStr(2687),false);    
    OutVal(460,0,TotSumrs,M4Val,true);
    EndFormat;
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,460,-1,-1,250,true,RepSpec.PocketPC);
  end; 
  EndJob;
  return;
end;
