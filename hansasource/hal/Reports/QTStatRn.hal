external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);

global
procedure QTStatRn(record RcVc RepSpec)
begin
  record QTVC QTr;
  Row QTVc QTrw;
  Boolean testf;
  Boolean found;
  Integer i,rwcnt;
  Integer rw;
  LongInt afr;
  LongInt ato;
  String 255 tstr;
  val totsumrs;
  val totsum;
  val iv;
  val prob;
  val rs;
  val prs;
  val exp;
  val totexp;
  val ord;
  val totord;
  val cld;
  val totcld;
  val opn;
  val totopn;
  val qtyord;
  val qtycld;
  val qtyopn;
  val totordprob;
  val totcldprob;
  val totopnprob;
  val ordprob;
  val cldprob;
  val opnprob;
  val ordproc;
  val cldproc;
  val opnproc;
  val totexpord;
  val totexpcld;
  val totexpopn;
  val tottot;
  val qty;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;

  afr = FirstInRange(RepSpec.f1,30);
  ato = LastInRange(RepSpec.f1,30);

  QTr.SerNr = afr;
  BeginCurncyTotals(curcnt);

  StartReportJob(USetStr(8335));
    rw = 1;
    if (RepSpec.ArtMode==0) then begin
      tstr = USetStr(8336);
    end;
    if (RepSpec.ArtMode==1) then begin
      tstr = USetStr(8337);                        
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
    if (blank(RepSpec.AccStr)) then begin
      tstr = USetStr(8338);
    end else begin
      tstr = USetStr(8319);
      tstr = tstr & RepSpec.AccStr;
    end;    
    Header(rw,tstr,0);    
    if (blank(RepSpec.f1)) then begin
      tstr = USetStr(8320);
    end else begin
      tstr = USetStr(8321);
      tstr = tstr & afr;
      if (afr<>ato) then begin
        tstr = tstr & " : " & ato;
      end;
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
    if (RepSpec.flags[2]==0) then begin
      tstr = USetStr(8322);
    end;
    if (RepSpec.flags[2]==1) then begin
      tstr = USetStr(8323);                        
    end;
    if (RepSpec.flags[2]==2) then begin
      tstr = USetStr(8324);                        
    end;
    Header(rw,tstr,0);
    if (blank(RepSpec.FirstAcc)) then begin
      tstr = USetStr(8325);
    end else begin
      tstr = USetStr(8326);
      tstr = tstr & RepSpec.FirstAcc;
    end;    
    Header(rw,tstr,1);    
  EndHeader;

  if (RepSpec.ArtMode==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2682),false);
    OutString(60,0,USetStr(2683),false);
    OutString(110,0,USetStr(2691),false);
    OutString(180,0,USetStr(8319),false);
  OutString(230,0,USetStr(2684),false);
    OutString(440,0,USetStr(2687),true);
    EndFormat;
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2682),false);
    OutString(130,0,USetStr(2683),false);
    OutString(300,0,USetStr(8319),false);
  OutString(440,0,USetStr(2691),true);
    EndFormat;
  end;
  Gray_Divider(0,1);


  testf = true;
  found = true;
  while (LoopMain(QTr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (afr>QTr.SerNr) then begin
        found = false;
      end;
      if (ato<QTr.SerNr) then begin
        found = false;
      end;      
    end;         

    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (RepSpec.FirstAcc<>QTr.QuoteClass) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f2) and (RepSpec.f2<>QTr.CustCode)) then begin
        testf = false;
      end;
      if nonblank(RepSpec.AccStr) then begin
        if (RepSpec.AccStr<>QTr.SalesMan) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.ObjStr)) then begin
        if (QTr.SalesGroup!=RepSpec.ObjStr) then begin testf = false; end;
      end;
      if ((QTr.QTDate<RepSpec.sStartDate) or (QTr.QTDate>RepSpec.sEndDate)) then begin
        testf = false;
      end;

    if (RepSpec.flags[2]==0) then begin
        if (QTr.OrderNr < 1) then begin
          testf = false;
        end;
    end;

    if (RepSpec.flags[2]==1) then begin
        if (QTr.Closed==0) then begin
          testf = false;
        end;
    end;
    
    if (RepSpec.flags[2]==2) then begin
      if (QTr.OrderNr > 0) or (QTr.Closed==1) then begin
      testf = false;
    end;
    end;
    
    if nonblank(RepSpec.Stext) then begin
        Date mcd;
        
        mcd = StringToDate(QTr.MakeContactDate);
        if (nonblankdate(mcd)) then begin
          if (DateInRange(mcd,RepSpec.d1,RepSpec.d2)==false) then begin
            testf = false;
          end;
        end else begin
          if QTr.MakeContactDate<>RepSpec.Stext then begin
            testf = false;
          end;
        end;
      end;
    end;

    
    rs = MULRATETOBASE1(QTr.CurncyCode,QTr.Sum4,QTr.FrRate,QTr.ToRateB1,QTr.ToRateB2,QTr.BaseRate1,QTr.BaseRate2,DefaultCurRoundOff);
    if (QTr.Probability>0) then begin
      prob = QTr.Probability;
      end else begin
      prob = 100;
    end;


    if (QTr.OrderNr > 0) then begin
    qty = 1;
      qtyord = qtyord + qty;
      ordprob = prob;
      totordprob = totordprob +  ordprob;
      iv = (rs*prob)/100;
      totexpord = totexpord + iv;
      ord = rs;
      Totord = Totord + ord;
    end;

    if (QTr.Closed==1) then begin
      qty = 1;
      qtycld = qtycld + qty;
      cldprob = prob;
      totcldprob = totcldprob +  cldprob;
      iv = (rs*prob)/100;
      totexpcld = totexpcld + iv;
      cld = rs;
    Totcld = Totcld + cld;
    end;

    if (QTr.Closed==0) and (QTr.OrderNr < 1) then begin
      qty = 1;
      qtyopn = qtyopn + qty;
      opnprob = prob;
      totopnprob = totopnprob +  opnprob;
      iv = (rs*prob)/100;
      totexpopn = totexpopn + iv;
      opn = rs;
      Totopn = Totopn + opn;
    end;


    if (testf) then begin
      if (RepSpec.flags[1]==0) then begin
        if RepSpec.ArtMode==0 then begin
          iv = QTr.Sum1;
        end else begin
          iv = QTr.Sum4;
        end;  
        TotSum = TotSum + iv;        
         rs = MULRATETOBASE1(QTr.CurncyCode,iv,QTr.FrRate,QTr.ToRateB1,QTr.ToRateB2,QTr.BaseRate1,QTr.BaseRate2,DefaultCurRoundOff);
        totsumrs = totsumrs + rs;
      end;
      if (RepSpec.flags[1]==1) then begin
        if (QTr.Probability>0) then begin
           prob = QTr.Probability;
        end else begin
           prob = 100;
        end;
        if RepSpec.ArtMode==0 then begin
          iv = (QTr.Sum1*prob)/100;
        end else begin
          iv = (QTr.Sum4*prob)/100;
        end;  
        TotSum = TotSum + iv;
        rs = MULRATETOBASE1(QTr.CurncyCode,iv,QTr.FrRate,QTr.ToRateB1,QTr.ToRateB2,QTr.BaseRate1,QTr.BaseRate2,DefaultCurRoundOff);
        prs =    (rs*prob)/100;
        totsumrs = totsumrs + prs;
      end;

      if RepSpec.ArtMode==0 then begin
        StartFormat(15);
        OutLongInt(0,0,QTr.SerNr,false);
        OutDate(60,0,QTr.QTDate,false);
        OutDate(120,0,QTr.MakeContactDate,false);
        OutString(180,0,QTr.SalesMan,false);
        OutString(230,0,QTr.Addr0,false);
        OutVal(440,0,iv,M4Val,true);
        OutString(445,0,QTr.CurncyCode,false);
        EndFormat;
        AddCurncyTotals(acur,av1,curcnt,QTr.CurncyCode,iv);
      end;
       
      if RepSpec.ArtMode==1 then begin
        StartFormat(15);
        OutLongInt(0,0,QTr.SerNr,false);
        OutDate(130,0,QTr.QTDate,false);
        OutString(220,0,QTr.PayDeal,false);
        OutString(300,0,QTr.SalesMan,false);
        OutDate(440,0,QTr.MakeContactDate,true);
        EndFormat;
        StartFormat(15);
        OutString(50,0,QTr.CustCode,false);
        OutString(200,0,QTr.Addr0,false);
        EndFormat;
        StartFormat(15);
        OutString(50,0,QTr.CustCat,false);
        OutString(200,0,QTr.Addr1,false);
        EndFormat;
        StartFormat(15);
        OutString(50,0,QTr.OurContact,false);
        OutString(200,0,QTr.Addr2,false);
        EndFormat;
        if nonblank(QTr.Addr3) then begin
          StartFormat(15);
          OutString(200,0,QTr.Addr3,false);
          EndFormat;
        end;
        if nonblank(QTr.CustContact) then begin
          StartFormat(15);
          OutString(200,0,QTr.CustContact,false);
          EndFormat;
        end;
        if nonblank(QTr.CurncyCode) then begin
          StartFormat(15);
          OutString(460,0,QTr.CurncyCode,true);
          EndFormat;
        end;
            
        rwcnt = MatRowCnt(QTr);
        for (i = 0 ; i<rwcnt ;i=i+1) begin
          MatRowGet(QTr,i,QTrw);
          if QTrw.stp==1 then begin
            StartFormat(15);
            OutString(20,0,QTrw.ArtCode,false);
            OutVal(124,0,QTrw.Quant,M4UVal,true);
            OutString(130,0,QTrw.Spec,false);
            OutString(340,0,QTrw.Price,true);
            OutVal(370,0,QTrw.vRebate,M41Val,true);
            OutVal(460,0,QTrw.Sum,M4Val,true);
            OutString(480,0,QTrw.VATCode,true);
            EndFormat;      
            AddCurncyTotals(acur,av1,curcnt,QTr.CurncyCode,iv);
          end;              
        end;     
                 
        Gray_Divider(380,460);
        StartFormat(15);
        OutString(100,0,QTr.Objects,false);
        OutVal(260,0,QTr.Sum1,M4Val,true);
        OutVal(360,0,QTr.Sum3,M4Val,true);
        OutVal(460,0,QTr.Sum4,M4Val,true);
        EndFormat;
        Gray_Divider(0,1);
      end;
    end;
  end;
  
  ordproc = (totordprob/qtyord);
  cldproc = (totcldprob/qtycld);
  opnproc = (totopnprob/qtyopn);
  totexp = (totexpord+totexpcld+totexpopn);
  tottot = (totord+totcld+totopn);


  StartFormat(15);
  OutString(135,0,USetStr(8327),false);
  OutString(210,0,USetStr(8328),false);
  OutString(290,0,USetStr(8329),false);
  OutString(420,0,USetStr(8330),false);
  EndFormat;
  if RepSpec.ArtMode==0 then begin
    StartFormat(15);
    OutString(230,0,USetStr(2687),false);    
    OutVal(440,0,totsumrs,M4Val,true);
    EndFormat;
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,440,-1,-1,230,true,RepSpec.PocketPC);

  Gray_Divider(0,1);
    StartFormat(15);
    OutString(50,0,USetStr(8322),false); 
    OutVal(150,0,qtyord,M4Qty,true);
    OutVal(230,0,ordproc,M4Val,true);
    OutVal(330,0,totexpord,M4Val,true);
    OutVal(440,0,totord,M4Val,true);
  EndFormat;
    StartFormat(15);
    OutString(50,0,USetStr(8323),false); 
    OutVal(150,0,qtycld,M4Qty,true);
    OutVal(230,0,cldproc,M4Val,true);
    OutVal(330,0,totexpcld,M4Val,true);
  OutVal(440,0,totcld,M4Val,true);
  EndFormat;
    StartFormat(15);
    OutString(50,0,USetStr(8324),false); 
    OutVal(150,0,qtyopn,M4Qty,true);
    OutVal(230,0,opnproc,M4Val,true);
    OutVal(330,0,totexpopn,M4Val,true);
  OutVal(440,0,totopn,M4Val,true);
  EndFormat;
  end;
 
  if RepSpec.ArtMode==1 then begin
    StartFormat(15);
    OutString(230,0,USetStr(2687),false);    
    OutVal(460,0,totsumrs,M4Val,true);
    EndFormat;
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,460,-1,-1,230,true,RepSpec.PocketPC);
  Gray_Divider(0,1);
    StartFormat(15);
    OutString(50,0,USetStr(8322),false); 
    OutVal(150,0,qtyord,M4Qty,true);
    OutVal(230,0,ordproc,M4Val,true);
    OutVal(330,0,totexpord,M4Val,true);
    OutVal(440,0,totord,M4Val,true);
  EndFormat;
    StartFormat(15);
    OutString(50,0,USetStr(8323),false); 
    OutVal(150,0,qtycld,M4Qty,true);
    OutVal(230,0,cldproc,M4Val,true);
    OutVal(330,0,totexpcld,M4Val,true);
  OutVal(440,0,totcld,M4Val,true);
  EndFormat;
    StartFormat(15);
    OutString(50,0,USetStr(8324),false); 
    OutVal(150,0,qtyopn,M4Qty,true);
    OutVal(230,0,opnproc,M4Val,true);
    OutVal(330,0,totexpopn,M4Val,true);
  OutVal(440,0,totopn,M4Val,true);
  EndFormat;
  end; 
  StartFormat(15);
  Gray_Divider(0,1);
  OutString(50,0,USetStr(8331),false); 
  OutVal(330,0,totexp,M4Val,true);
  OutVal(440,0,tottot,M4Val,true);
  EndFormat;
  
  EndJob;
  return;
end;
