external procedure GetVATCodeAccNumbers(string,var string,var string);

procedure PrintHeader()
BEGIN
  string 255 tstr;
  
  SetRepCol(2,50);
  SetRepCol(3,190);
  SetRepCol(4,260);
  SetRepCol(5,380);
  SetRepCol(6,440);
  SetRepCol(7,445);
  SetRepCol(8,475);
  StartFormat(15);
  OutString(0,0,USetStr(10501),false);
  OutString(2,0,USetStr(10502),false);
  OutString(3,0,USetStr(10503),false);
  OutString(4,0,USetStr(10504),false);
  OutString(5,0,USetStr(10505),true);
  OutString(6,0,USetStr(10506),true);
  OutString(7,0,USetStr(10507),false);
  OutString(8,0,USetStr(1532),false);
  EndFormat;
  Gray_Divider(0,1);
  RETURN;
END;

procedure PrintCollectionRow(LongInt sernr,string custcode,string custname,Date transdate,
                             string salesaccs,string curncycode,val sum4,val basesum4,
                             Integer okflag)
BEGIN
  string 255 tstr;
  
  StartFormat(15);
  OutLongInt(0,"DblCustPS2",sernr,false);
  OutString(2,0,Left(custname,25),false);
  OutDate(3,0,transdate,false);
  OutString(4,0,salesaccs,false);
  OutVal(5,0,basesum4,M4Val,true);
  OutVal(6,0,sum4,M4Val,true);
  OutString(7,0,curncycode,false);
  if (okflag!=0) then begin
    OutString(8,0,"Ã",false);
  end;  
  EndFormat;
  RETURN;
END;

procedure MakeSalesAccString(record IVVc IVr,var string salesaccs)
BEGIN
  row IVVc IVrw;
  Integer i,rwcnt;
  string 10 svatacc,pvatacc;

  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    if (SetInSet(IVrw.SalesAcc,salesaccs)==false) then begin
      if (nonblank(salesaccs)) then begin
        salesaccs = salesaccs & ",";
      end;  
      salesaccs = salesaccs & IVrw.SalesAcc;
    end; 
    GetVATCodeAccNumbers(IVrw.VATCode,svatacc,pvatacc);
    if (SetInSet(svatacc,salesaccs)==false) then begin
      if (nonblank(salesaccs)) then begin
        salesaccs = salesaccs & ",";
      end;  
      salesaccs = salesaccs & svatacc;
    end; 
  end;   
  RETURN;
END;

procedure PrintCollectionInvoices(LongInt clinsernr,var val tosum4,var val totbasesum4)
BEGIN
  record CLInIVVc CLInIVr;
  record IVVc IVr;
  Boolean TrHs,testf;
  string 255 salesaccs;
  
  TrHs = true;
  CLInIVr.CLInNr = clinsernr;
  while (LoopMain(CLInIVr,1,TrHs)) begin
    if (CLInIVr.CLInNr!=clinsernr) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      if (CLInIVr.FileName=="IVVc") then begin
        IVr.SerNr = CLInIVr.SerNr;
        if (ReadFirstMain(IVr,1,true)) then begin
          salesaccs = "";
          MakeSalesAccString(IVr,salesaccs);
          PrintCollectionRow(IVr.SerNr,IVr.CustCode,IVr.Addr0,IVr.TransDate,salesaccs,
                             IVr.CurncyCode,IVr.Sum4,IVr.BaseSum4,IVr.OKFlag);
        end else begin
          StartFormat(15);
          OutString(10,0,USetStr(1290),false);
          EndFormat;
        end;
        tosum4 = tosum4 + IVr.Sum4;
        totbasesum4 = totbasesum4 + IVr.BaseSum4;
      end else begin
        StartFormat(15);
        OutString(10,0,"Strange record",false);
        EndFormat;
      end;
    end;
  end;
  RETURN;
END;

global
procedure PrintCLInIV(LongInt ivsernr)
BEGIN
  record IVVc IVr;
  string 255 salesaccs;
  
  IVr.SerNr = ivsernr;
  if (ReadFirstMain(IVr,1,true)) then begin
    salesaccs = "";
    MakeSalesAccString(IVr,salesaccs);
    PrintCollectionRow(IVr.SerNr,IVr.CustCode,IVr.Addr0,IVr.TransDate,salesaccs,
                       IVr.CurncyCode,IVr.Sum4,IVr.BaseSum4,IVr.OKFlag);
  end else begin
    StartFormat(15);
    OutString(10,0,USetStr(1290),false);
    EndFormat;
  end;  
  RETURN;
END;

global
procedure CLInColIVRn(record RcVc RepSpec)
BEGIN
  record CLInVc CLInr;
  val tosum4,totbasesum4;

  StartReportJob(USetStr(10500));
  EndHeader;
  PrintHeader;
  CLInr.SerNr = RepSpec.long1;
  if (ReadFirstMain(CLInr,1,true)) then begin
    if ((CLInr.FSerNr!=-1) and (CLInr.FileName=="IVVc")) then begin
      PrintCLInIV(CLInr.FSerNr);
    end else begin
      PrintCollectionInvoices(CLInr.SerNr,tosum4,totbasesum4)
      Gray_Divider(0,1);
      StartFormat(15);
      OutVal(5,0,totbasesum4,M4Val,true);
      OutVal(6,0,tosum4,M4Val,true);
      EndFormat;
    end;  
  end;  
  EndJob;
  RETURN;
END;