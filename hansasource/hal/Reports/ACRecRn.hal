external procedure AutomatedSalesOrderly(string);
external procedure HT2Per(Date, Date , var string);
external function Boolean HasMultiCurrency();
external function Boolean HasBase2();
external procedure HTReconciled(Integer,Integer,var string);
external procedure HTbasecurncy(Integer,var string);
external procedure HTObj(string,var string);
external procedure HTAccs(string,string,Integer, var string);
external function Boolean CurUserAccBlockedTest(string);
external function val FindAccBalance(string,string,date,record ObjBalVc,Integer,Integer,Integer,string,Integer);

function string 255 FindReconComment(string recon)
BEGIN
  string 255 res;
  record ReconCodeVc ReconCoder;
  
  ReconCoder.Code = recon;
  if (ReadFirstMain(ReconCoder,1,true)) then begin end;
  res = ReconCoder.Comment;
  FindReconComment = res;
  RETURN;
END;

global
procedure ACRecRn(record RcVc RepSpec)
begin
  record AccVc Accr;
  record MainVc mainr;
  record TRVc TRr;
  record ObjBalVc ObjBalr;
  row TRVc TRrw;
  val startbal,totstartbal;
  val unrecval,unreccurval,unrecchange,unreccurchange;
  val recval,reccurval,recchange,reccurchange;
  val totrecchange,totreccurchange,totunrecchange,totunreccurchange;
  Boolean TrHs,Accs,testf,headprf,accheadprf;
  Integer trrwcnt,i;
  String 200 tstr;
  String 20 balostr;
  String 10 temp;
  String 20 fracc,toacc;
  String 60 objstr;
  Integer rw;
  record ReconBlock Reconb;
  Date td;

  totstartbal = 0;
  totrecchange = 0;
  totreccurchange = 0;
  totunrecchange = 0;
  totunreccurchange = 0;
  StartReportJob(USetStr(6920));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTAccs(RepSpec.f1,RepSpec.f1,0,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;  
  if (HasBase2) then begin
    HTbasecurncy(RepSpec.basecurncy,tstr);
    Header(rw,tstr,0);
  end;
  HTReconciled(RepSpec.flags[1],RepSpec.flags[2],tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.ObjStr)) then begin
    HTObj(RepSpec.ObjStr,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.RegDate)) then begin
    tstr = USetStr(6922) & ": " & RepSpec.RegDate;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.FirstAcc)) then begin
    tstr = USetStr(6932) & ": " & RepSpec.FirstAcc;
    if (RepSpec.flags[4]!=0) then begin
      tstr = USetStr(6933) & " " & tstr;
    end;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  SetRepCol(2,75);
  SetRepCol(3,120);
  SetRepCol(4,165);
  SetRepCol(5,210);
  SetRepCol(6,410);
  SetRepCol(7,470);
  BlockLoad(Reconb);  
  objstr = RepSpec.ObjStr;
  fracc = FirstInRange(RepSpec.f1,20);
  toacc = LastInRange(RepSpec.f1,20);
  Accr.AccNumber = fracc;
  Accs = true;
  while (LoopMain(Accr,1,Accs)) begin
    if (nonblank(toacc)) then begin
      if (Accr.AccNumber>toacc) then begin
        Accs = false;
      end;
    end;
    if (Accs) then begin
      reccurchange = 0;
      recchange = 0;
      unreccurchange = 0;
      unrecchange = 0;
      accheadprf = false;
      temp = "";
      balostr = RepSpec.ObjStr & ";;;";
      ObjBalr.AccNumber = Accr.AccNumber;
      ObjBalr.Object = balostr;
      if (ReadFirstMain(ObjBalr,2,true)==false) then begin
        ObjBalr.AccNumber = Accr.AccNumber;
        ObjBalr.Object = balostr;
      end;
      startbal = FindAccBalance(Accr.AccNumber,balostr,AddDay(RepSpec.sStartDate,-1),ObjBalr,0,RepSpec.basecurncy,0,temp,RepSpec.IncDaughter);
      totstartbal = totstartbal + startbal;
      if (RepSpec.flags[1]!=0) then begin
        headprf = false;
        mainr.AccNumber = Accr.AccNumber;
        mainr.TransDate = RepSpec.sStartDate;
        TrHs = true;
        if (CurUserAccBlockedTest(Accr.AccNumber)) then begin
          TrHs = false;
        end;
        ResetLoop(mainr);
        while (LoopMain(mainr,2,TrHs)) begin
          if (mainr.TransDate>RepSpec.sEndDate) then begin
            TrHs = false;
          end;
          if (TrHs) then begin
              if (mainr.AccNumber<>Accr.AccNumber) then begin 
                TrHs = false;
              end;
          end;
          if (TrHs) then begin
            if (mainr.FileName=="TRVc") then begin
              TRr.Number = mainr.TransNr;
              TRr.IntYc = mainr.IntYc;
              if (ReadFirstMain(TRr,2,true)) then begin
                if (mainr.TransDate==TRr.TransDate) then begin
                  trrwcnt = MatRowCnt(TRr);
                  for (i=0;i<trrwcnt;i=i+1) begin
                    MatRowGet(TRr,i,TRrw);
                    if ((TRrw.stp==1) and (TRrw.ovst==0)) then begin
                      if ((TRrw.AccNumber==Accr.AccNumber) and (SetInSet(objstr,TRrw.Objects))) then begin
                        testf = true;
                        if (TRrw.Reconsf==0) then begin
                          if (blankdate(TRrw.ReconDate)) then begin
                            testf = false;
                          end else begin
                            if (DateInRange(TRrw.ReconDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
                              testf = false;
                            end;
                          end;
                        end else begin
                          if (nonblankdate(TRrw.ReconDate)) then begin
                            if (DateInRange(TRrw.ReconDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
                              testf = false;
                            end;
                          end;
                        end;
                        if (nonblank(RepSpec.FirstAcc)) then begin
                          switch (RepSpec.flags[4]) begin
                            case 0:
                             if (TRrw.Reconsf!=0) then begin
                               if (TRrw.ReconCode!=RepSpec.FirstAcc) then begin testf = false; end;
                             end;
                            case 1:
                             if (TRrw.ReconCode==RepSpec.FirstAcc) then begin testf = false; end;
                          end;
                        end;
                        if (nonblankdate(TRrw.ReconDate)) then begin
                          if (DateInRange(TRrw.ReconDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
                        end else begin
                          if (DateInRange(TRr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
                        end;
                        if (testf) then begin
                          if (accheadprf==false) then begin
                            StartFormat(15);
                            OutString(0,0,Accr.AccNumber,false);
                            OutString(4,0,Accr.Comment,false);
                            EndFormat;
                            Gray_Divider(0,1);
                            accheadprf = true;
                          end;
                          if (headprf==false) then begin
                            StartFormat(15);
                             OutString(4,0,USetStr(6928),false);
                             OutVal(6,0,startbal,M4Val,true);
                            EndFormat;
                            StartFormat(15);
                             OutString(0,0,USetStr(6937),false);
                            EndFormat;
                            Black_Divider(0,1);
                            StartFormat(15);
                            OutString(0,0,USetStr(6921),false);
                            OutString(2,0,USetStr(6922),false);
                            OutString(3,0,USetStr(6943),false);
                            if (RepSpec.flags[3]==0) then begin
                              OutString(4,0,USetStr(6923),false);
                            end else begin
                              OutString(4,0,USetStr(6924),false);
                            end;
                            OutStringAdjustBiDi(6,0,USetStr(6925),true,M4Val,460);
                            if (HasMultiCurrency) then begin
                              OutStringAdjustBiDi(7,0,USetStr(6926),true,M4Val,515);
                            end;
                            OutString(1,0,USetStr(6927),true);
                            EndFormat;
                            Black_Divider(0,1);
                            headprf = true;
                          end;
                          temp = StrTRCode(TRr.IntYc);
                          unrecval = 0;
                          unreccurval = 0;
                          recval = 0;
                          reccurval = 0;
                          if (TRrw.Reconsf==0) then begin
                            if (RepSpec.basecurncy==0) then begin
                              unrecval = TRrw.DebVal-TRrw.CredVal;
                             end else begin
                              unrecval = TRrw.DebVal2-TRrw.CredVal2;
                            end;
                            unreccurval = TRrw.CurDebVal-TRrw.CurCredVal;
                          end else begin
                            if (RepSpec.basecurncy==0) then begin
                              recval = TRrw.DebVal-TRrw.CredVal;
                             end else begin
                              recval = TRrw.DebVal2-TRrw.CredVal2;
                            end;
                            reccurval = TRrw.CurDebVal-TRrw.CurCredVal;
                          end;
                          tstr = TRr.Comment;
                          if (TRrw.Comment<>Accr.Comment) then begin
                            if (tstr<>"") then begin 
                              tstr = tstr & ", "; 
                            end;
                            tstr = tstr & TRrw.Comment;
                          end;
                          StartFormat(15);
                          OutString(0,"DblTrans",temp & "." & TRr.Number,false);
                          OutDate(2,0,TRr.TransDate,false);
                          OutDate(3,0,TRrw.ReconDate,false);
                          if (RepSpec.flags[3]==0) then begin
                            OutString(4,0,tstr,false);
                          end else begin
                            OutString(4,0,TRrw.Objects,false);
                          end;
                          if (TRrw.Reconsf==0) then begin
                            OutValBiDi(6,0,unrecval,M4Val,true,460);
                            if (HasMultiCurrency) then begin
                              OutValBiDi(7,0,unreccurval,M4Val,true,515);
                            end;
                            OutString(1,0," ",true);
                          end else begin
                            OutValBiDi(6,0,recval,M4Val,true,460);
                            if (HasMultiCurrency) then begin
                              OutValBiDi(7,0,reccurval,M4Val,true,515);
                            end;
                            OutString(1,0,USetStr(6927),true);
                          end;
                          EndFormat;
                          if (RepSpec.flags[5]!=0) then begin
                            tstr = FindReconComment(TRrw.ReconCode);
                            if (nonblank(tstr)) then begin
                              StartFormat(15);
                              OutString(0,0,tstr,false);
                              EndFormat;
                            end;
                          end;
                          recchange = recval + recchange;
                          reccurchange = reccurval + reccurchange;
                        end;
                      end;
                    end;
                  end;
                end;
              end;
            end;
          end;
        end;
        if (headprf) then begin
          Gray_Divider(0,1);
          StartFormat(15);
          OutString(4,0,USetStr(6929),false);
          OutValBiDi(6,0,recchange,M4Val,true,460);
          if (HasMultiCurrency) then begin
            OutValBiDi(7,0,reccurchange,M4Val,true,515);
          end;
          EndFormat;
          StartFormat(15);
          OutString(4,0,USetStr(6938),false);
          OutValBiDi(6,0,startbal+recchange,M4Val,true,460);
          EndFormat;
          totrecchange = totrecchange + recchange;
          totreccurchange = totreccurchange + reccurchange;
        end;
      end;
      if (RepSpec.flags[2]!=0) then begin
        headprf = false;
        mainr.AccNumber = Accr.AccNumber;
        if (Reconb.NotReconTransIgnoreStartDate!=0) then begin
          td.day = 1; td.month = 1; td.year = 1980;
          mainr.TransDate = td;
        end else begin
          mainr.TransDate = RepSpec.sStartDate;
        end;
        TrHs = true;
        if (CurUserAccBlockedTest(Accr.AccNumber)) then begin
          TrHs = false;
        end;
        ResetLoop(mainr);
        while (LoopMain(mainr,2,TrHs)) begin
          if (mainr.TransDate>RepSpec.sEndDate) then begin
            TrHs = false;
          end;
          if (TrHs) then begin
              if (mainr.AccNumber<>Accr.AccNumber) then begin 
                TrHs = false;
              end;
          end;
          if (TrHs) then begin
            if (mainr.FileName=="TRVc") then begin
              TRr.Number = mainr.TransNr;
              TRr.IntYc = mainr.IntYc;
              if (ReadFirstMain(TRr,2,true)) then begin
                if (mainr.TransDate==TRr.TransDate) then begin
                  trrwcnt = MatRowCnt(TRr);
                  for (i=0;i<trrwcnt;i=i+1) begin
                    MatRowGet(TRr,i,TRrw);
                    if ((TRrw.stp==1) and (TRrw.ovst==0)) then begin
                      if ((TRrw.AccNumber==Accr.AccNumber) and (SetInSet(objstr,TRrw.Objects))) then begin
                        testf = true;
                        if (TRrw.Reconsf!=0) then begin
                          if (blankdate(TRrw.ReconDate)) then begin
                            testf = false;
                          end else begin
                            if (DateInRange(TRrw.ReconDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin
                              testf = false;
                            end;
                          end;
                        end;
                        if (nonblank(RepSpec.FirstAcc)) then begin
                          switch (RepSpec.flags[4]) begin
                            case 0:
//no code when not reconciled                            
//                             if (TRrw.ReconCode!=RepSpec.FirstAcc) then begin testf = false; end;
                            case 1:
                             if (TRrw.ReconCode==RepSpec.FirstAcc) then begin testf = false; end;
                          end;
                        end;
                        if (testf) then begin
                          if (accheadprf==false) then begin
                            StartFormat(15);
                            OutString(0,0,Accr.AccNumber,false);
                            OutString(4,0,Accr.Comment,false);
                            EndFormat;
                            Gray_Divider(0,1);
                            accheadprf = true;
                          end;
                          if (headprf==false) then begin
                            StartFormat(15);
                             OutString(0,0,USetStr(6939),false);
                            EndFormat;
                            Black_Divider(0,1);
                            StartFormat(15);
                            OutString(0,0,USetStr(6921),false);
                            OutString(2,0,USetStr(6922),false);
                            if (RepSpec.flags[3]==0) then begin
                              OutString(4,0,USetStr(6923),false);
                            end else begin
                              OutString(4,0,USetStr(6924),false);
                            end;
                            OutStringAdjustBiDi(6,0,USetStr(6925),true,M4Val,460);
                            if (HasMultiCurrency) then begin
                              OutStringAdjustBiDi(7,0,USetStr(6926),true,M4Val,515);
                            end;
                            OutString(1,0,USetStr(6927),true);
                            EndFormat;
                            Black_Divider(0,1);
                            headprf = true;
                          end;
                          temp = StrTRCode(TRr.IntYc);
                          unrecval = 0;
                          unreccurval = 0;
                          recval = 0;
                          reccurval = 0;
                          
                          testf = TRrw.Reconsf!=0;
                          if (TRrw.Reconsf!=0) then begin
                            if (blankdate(TRrw.ReconDate)) then begin
                              testf = false;
                            end else begin
                              if (DateInRange(TRrw.ReconDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
                                testf = false;
                              end;
                            end;
                          end;

                          if (testf==false) then begin
                            if (RepSpec.basecurncy==0) then begin
                              unrecval = TRrw.DebVal-TRrw.CredVal;
                             end else begin
                              unrecval = TRrw.DebVal2-TRrw.CredVal2;
                            end;
                            unreccurval = TRrw.CurDebVal-TRrw.CurCredVal;
                          end else begin
                            if (RepSpec.basecurncy==0) then begin
                              recval = TRrw.DebVal-TRrw.CredVal;
                             end else begin
                              recval = TRrw.DebVal2-TRrw.CredVal2;
                            end;
                            reccurval = TRrw.CurDebVal-TRrw.CurCredVal;
                          end;
                          tstr = TRr.Comment;
                          if (TRrw.Comment<>Accr.Comment) then begin
                            if (tstr<>"") then begin 
                              tstr = tstr & ", "; 
                            end;
                            tstr = tstr & TRrw.Comment;
                          end;
                          StartFormat(15);
                          OutString(0,"DblTrans",temp & "." & TRr.Number,false);
                          OutDate(2,0,TRr.TransDate,false);
                          if (RepSpec.flags[3]==0) then begin
                            OutString(4,0,tstr,false);
                          end else begin
                            OutString(4,0,TRrw.Objects,false);
                          end;
                          if (testf==false) then begin
                            OutValBidi(6,0,unrecval,M4Val,true,460);
                            if (HasMultiCurrency) then begin
                              OutValBidi(7,0,unreccurval,M4Val,true,515);
                            end;
                            OutString(1,0," ",true);
                          end else begin
                            OutValBidi(6,0,recval,M4Val,true,460);
                            if (HasMultiCurrency) then begin
                              OutValBidi(7,0,reccurval,M4Val,true,515);
                            end;
                            OutString(1,0,USetStr(6927),true);
                          end;
                          EndFormat;
                          if (RepSpec.flags[5]!=0) then begin
                            tstr = FindReconComment(TRrw.ReconCode);
                            if (nonblank(tstr)) then begin
                              StartFormat(15);
                              OutString(0,0,tstr,false);
                              EndFormat;
                            end;
                          end;
                          unrecchange = unrecval + unrecchange;
                          unreccurchange = unreccurval + unreccurchange;
                        end;
                      end;
                    end;
                  end;
                end;
              end;
            end;
          end;
        end;
        if (headprf) then begin
          Gray_Divider(0,1);
          StartFormat(15);
          OutString(4,0,USetStr(6940),false);
          OutValBiDi(6,0,unrecchange,M4Val,true,460);
          if (HasMultiCurrency) then begin
            OutValBiDi(7,0,unreccurchange,M4Val,true,515);
          end;
          EndFormat;
          StartFormat(5);
          EndFormat;
          StartFormat(15);
          OutString(4,0,USetStr(6942),false);
          if (RepSpec.flags[1]!=0) then begin
            OutValBiDi(6,0,startbal+recchange+unrecchange,M4Val,true,460);
          end else begin
            OutValBiDi(6,0,unrecchange,M4Val,true,460);
          end;
          EndFormat;
          totunrecchange = totunrecchange + unrecchange;
          totunreccurchange = totunreccurchange + unreccurchange;      
        end;
      end;
    end;
  end;
  Black_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(6931),false);
  if (RepSpec.flags[1]!=0) then begin
    OutString(4,0,USetStr(6928),false);
    OutValBiDi(6,0,totstartbal,M4Val,true,460);
    OutStringAdjustBiDi(7,0,"-",true,M4Val,515);
  end;
  EndFormat;
  if (RepSpec.flags[1]!=0) then begin
    StartFormat(15);
    OutString(4,0,USetStr(6929),false);
    OutValBiDi(6,0,totrecchange,M4Val,true,460);
    if (HasMultiCurrency) then begin
      OutValBiDi(7,0,totreccurchange,M4Val,true,515);
    end;
    EndFormat;
    StartFormat(15);
    OutString(4,0,USetStr(6938),false);
    OutValBiDi(6,0,totstartbal+totrecchange,M4Val,true,460);
    EndFormat;
  end;
  if (RepSpec.flags[2]!=0) then begin
    StartFormat(5);
    EndFormat;
    StartFormat(15);
    OutString(4,0,USetStr(6940),false);
    OutValBiDi(6,0,totunrecchange,M4Val,true,460);
    if (HasMultiCurrency) then begin
      OutValBiDi(7,0,totunreccurchange,M4Val,true,515);
    end;
    EndFormat;
  end;
  StartFormat(5);
  EndFormat;
  StartFormat(15);
  OutString(4,0,USetStr(6942),false);
  if (RepSpec.flags[1]!=0) then begin
    OutValBiDi(6,0,totstartbal+totrecchange+totunrecchange,M4Val,true,460);
  end else begin
    OutValBiDi(6,0,totunrecchange,M4Val,true,515);
  end;
  EndFormat;
  EndJob;
  AutomatedSalesOrderly("HasIntegratedNL+Run_ACRecRn");
  return;
end;
