external function Boolean FindTheUser(var record UserVc);

function string 60 GetCompanyName(string compcode)
begin
  record CompaniesBlock CompaniesRec;
  row CompaniesBlock comprw;
  Integer rwcnt,i;
  string 60 res;
  
  BlockLoad(CompaniesRec);
  rwcnt = MatRowCnt(CompaniesRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CompaniesRec,i,comprw);
    if (comprw.CompCode==compcode) then begin
      res = comprw.CompName;
      i = rwcnt;
    end;
  end;
  GetCompanyName = res;
  return;
end;

function Boolean PrintUserInfo(record RcVc RepSpec,record UserLoginVc UserLoginr,record CompaniesBlock CompaniesRec,Integer rwcnt,Boolean printf,var string olduser,var Boolean printedf,var Boolean firstf)
begin
  record UserVc Userr;
  row CompaniesBlock comprw;
  Boolean testf;
  string 255 tstr;
  Boolean foundf;
  
  foundf = true;
  if (nonblank(RepSpec.f1)) then begin
    if (UserLoginr.User!=RepSpec.f1) then begin
      foundf = false;
    end;
  end;
  if (DateInRange(UserLoginr.evDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
    foundf = false;
  end;
  testf = foundf;
  if (RepSpec.long1>0) then begin
    if (RepSpec.long1!=UserLoginr.Company) then begin
      testf = false;
    end;
  end;
  if (RepSpec.flags[1]==0) then begin
    if (UserLoginr.Event==0) then begin
      testf = false;
    end;
  end;
  if (RepSpec.flags[2]==0) then begin
    if (UserLoginr.Event==1) then begin
      testf = false;
    end;
  end;
  if (RepSpec.flags[3]>0) then begin
//    if (UserLoginr.ClientType>0) then begin
      if (RepSpec.flags[3]!=UserLoginr.ClientType) then begin
        testf = false;
//      end;
    end;
  end;
  if (RepSpec.flags[4]>0) then begin
//    if (UserLoginr.ClientOS>0) then begin
      if (RepSpec.flags[4]!=UserLoginr.ClientOS) then begin
        testf = false;
      end;
//    end;
  end;
  if (testf) then begin
    if (printf) then begin
      if (UserLoginr.User!=olduser) then begin
        Userr.Code = UserLoginr.User;
        if (FindTheUser(Userr)==false) then begin
          Userr.Code = UserLoginr.User;
          Userr.Name = USetStr(16337);
        end;
        if (firstf) then begin
          Black_Divider(0,1);
        end else begin
          StartFormat(15);
          EndFormat;
        end;
        firstf = false;
        StartFormat(15);
        OutString(0,0,UserLoginr.User,false); // Userr.Code
        OutString(2,0,Userr.Name,false);
        EndFormat;
        Gray_Divider(0,1);
      end;
      switch (UserLoginr.Event) begin
        case 0: // LogIn
          if (UserLoginr.Successful==0) then begin
            tstr = USetStr(16338);
          end else begin
            tstr = USetStr(16339);
          end;
        case 1: tstr = USetStr(16340); // Logout
      end;
      if (UserLoginr.Company-1<rwcnt) then begin
        MatRowGet(CompaniesRec,UserLoginr.Company-1,comprw);
      end else begin
        comprw.ShortName = "";
      end;
      StartFormat(15);
      OutString(3,0,tstr,false);
      OutString(4,0,UserLoginr.evDate,false);
      OutString(5,0,Left(UserLoginr.evTime,5),false);
      OutString(6,0,UserLoginr.MachineIP,false);
      OutString(7,0,StringFromSet(90,UserLoginr.ClientType),false);
      OutString(8,0,StringFromSet(394,UserLoginr.ClientOS),false);
      OutString(9,0,"" & UserLoginr.Company & " (" & comprw.ShortName & ")",false);
      EndFormat;
      printedf = true;
      olduser = UserLoginr.User;
    end else begin
      printedf = true;
    end;
  end;
LPrintUserInfo:;
  PrintUserInfo = foundf;
  return;
end;

procedure AddToUserArray(string usercode,string compcode,var array string auser,var array string acompcode,var LongInt acnt)
begin
  LongInt i;
  Boolean addedf;
  
  addedf = false;
  for (i=0;i<acnt;i=i+1) begin
    if (auser[i]==usercode) then begin
      addedf = true;
      i = acnt;
    end;
  end;
  if (addedf==false) then begin
    auser[acnt] = usercode;
    acompcode[acnt] = compcode;
    acnt = acnt + 1;
  end;
  return;
end;

function LongInt BuildFullUserArray(var array string auser,var array string acompcode,LongInt incomp)
begin
  record GlobalUserVc GlobalUserr;
  record UserVc Userr;
  record CompaniesBlock Companiesb;
  row CompaniesBlock Companiesbrw;
  Boolean foundf,testf;
  Integer i,rwcnt;
  Integer oldcomp;
  LongInt acnt;
  
  foundf = true;
  GlobalUserr.Code = "";
  while (LoopMain(GlobalUserr,1,foundf)) begin
    testf = foundf;
    if (GlobalUserr.Closed!=0) then begin testf = false; end;
    if (incomp>0) then begin
      if (incomp!=StringToLongInt(GlobalUserr.MainCRMCompany)) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      if (blank(GlobalUserr.MainCRMCompany)) then begin
        GlobalUserr.MainCRMCompany = "1";
      end;
      AddToUserArray(GlobalUserr.Code,GlobalUserr.MainCRMCompany,auser,acompcode,acnt);
    end;  
  end;
  oldcomp = CurrentCompany;
  BlockLoad(Companiesb);
  rwcnt = MatRowCnt(Companiesb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Companiesb,i,Companiesbrw);
    testf = true;
    if (incomp>0) then begin
      if (incomp!=StringToLongInt(Companiesbrw.CompCode)) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      if (SetCompanyCode(Companiesbrw.CompCode,false)) then begin
        ResetLoop(Userr);
        foundf = true;
        Userr.Code = "";
        while (LoopMain(Userr,1,foundf)) begin
          testf = foundf;
          if (Userr.TerminatedFlag!=0) then begin testf = false; end;
          if (Userr.Closed!=0) then begin testf = false; end;
          if (testf) then begin
            AddToUserArray(Userr.Code,Companiesbrw.CompCode,auser,acompcode,acnt);
          end;  
        end;  
      end;
    end;
  end;
  ResetCompany(oldcomp);
  BuildFullUserArray = acnt;
  return;
end;

// Can't loop over users, because I want to see all the logins with wierd codes as well, if I use loopback it prints the users backwards as well...
global
procedure UserHistRn(var record RcVc RepSpec)
begin
  record UserLoginVc UserLoginr;
  record CompaniesBlock CompaniesRec;
  record UserVc Userr;
  record GlobalUserVc GlobalUserr;
  Boolean foundf,printedf,firstf;
  string 20 olduser,maincompany;
  array string 10 auser;
  array string 10 acompcode;
  LongInt rwcnt,acnt,i;
  Integer oldcomp;

  oldcomp = CurrentCompany;
  BlockLoad(CompaniesRec);
  rwcnt = MatRowCnt(CompaniesRec);
  olduser = "xxxxxxxxxxxxxxxxxxxx";
  StartReportJob(USetStr(16330));
  EndHeader;
  SetRepCol(2,50);
  SetRepCol(3,30);
  SetRepCol(4,90);
  SetRepCol(5,150);
  SetRepCol(6,200);
  SetRepCol(7,280);
  SetRepCol(8,350);
  SetRepCol(9,420);
  if (RepSpec.flags[0]==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(16331),false);
    OutString(3,0,USetStr(16332),false);
    OutString(4,0,USetStr(16333),false);
    OutString(5,0,USetStr(16334),false);
    OutString(6,0,USetStr(16335),false);
    OutString(7,0,USetStr(16341),false);
    OutString(8,0,USetStr(16342),false);
    OutString(9,0,USetStr(16336),false);
    EndFormat;
  end else begin
    StartFormat(15);
    OutString(0,0,USetStr(16331),false);
    OutString(4,0,USetStr(16343),false);
    OutString(8,0,USetStr(16336),false);
    EndFormat;
    Gray_Divider(0,1);
  end;
  firstf = true;
  if (nonblank(RepSpec.f1)) then begin
    printedf = false;
    foundf = true;
    UserLoginr.User = RepSpec.f1;
    UserLoginr.evDate = RepSpec.sEndDate;
    while (LoopBackKey("User",UserLoginr,2,foundf)) begin
      foundf = PrintUserInfo(RepSpec,UserLoginr,CompaniesRec,rwcnt,true,olduser,printedf,firstf);
    end;
  end else begin
    if (RepSpec.flags[0]==0) then begin
      printedf = false;
      foundf = true;
      RecordClear(UserLoginr);
      ResetLoop(UserLoginr);
      UserLoginr.evDate = RepSpec.sStartDate;
      while (LoopKey("evDate",UserLoginr,1,foundf)) begin
        foundf = PrintUserInfo(RepSpec,UserLoginr,CompaniesRec,rwcnt,true,olduser,printedf,firstf);
      end;
    end else begin
      acnt = BuildFullUserArray(auser,acompcode,RepSpec.long2);
      for (i=0;i<acnt;i=i+1) begin
        RepSpec.f1 = auser[i];
        printedf = false;
        foundf = true;
        UserLoginr.User = RepSpec.f1;
        UserLoginr.evDate = RepSpec.sEndDate;
        ResetLoop(UserLoginr);
        while (LoopBackKey("User",UserLoginr,2,foundf)) begin
          foundf = PrintUserInfo(RepSpec,UserLoginr,CompaniesRec,rwcnt,false,olduser,printedf,firstf);
          if (printedf) then begin
            foundf = false;
          end;
        end;
        if (printedf==false) then begin
          if (SetCompanyCode(acompcode[i],false)) then begin
            Userr.Code = auser[i];
            if (FindTheUser(Userr)==false) then begin
              Userr.Code = UserLoginr.User;
              Userr.Name = USetStr(16337);
            end;
          end else begin
            Userr.Code = UserLoginr.User;
            Userr.Name = USetStr(16337);
          end;
          ResetCompany(oldcomp);
          StartFormat(15);
          OutString(0,0,Userr.Code,false);
          OutString(4,0,Userr.Name,false);
          OutString(8,0,GetCompanyName(acompcode[i]) & "(" & acompcode[i] & ")",false);
          EndFormat;
          foundf = false;
        end;
      end;
    end;
  end;
  EndJob;
  return;
end;
