external function Boolean SetInSet2(string,string);
external procedure HTItemClass(string,var string);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure HTItems(string,var string);
external procedure HTITs(string,string,var string);
external procedure HTSerialNos(string,string,var string);

global
procedure QualConRn(record RcVc RepSpec)
begin
  Integer rw;
  string 255 tstr,dblstr;
  string 255 frin,toin;
  string 255 frit,toit;
  record QualConVc QCr;
  Boolean found,testf;
  Integer keys;
  record INVc INr;
  
  frin = FirstInRange(RepSpec.f1,20);
  toin = LastInRange(RepSpec.f1,20);
  frit = FirstInRange(RepSpec.f2,20);
  toit = LastInRange(RepSpec.f2,20);
  StartReportJob(USetStr(17100));
  rw = 1;
  HTItems(RepSpec.f1,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f2)) then begin 
    HTITs(frit,toit,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;  
  end;
  if (nonblank(RepSpec.f8)) then begin 
    HTItemClass(RepSpec.f8,tstr);
    Header(rw,tstr,1);  
    rw = rw + 1;  
  end;
  tstr = USetStr(17101) & ": " & RepSpec.d1;
  Header(rw,tstr,1);
  rw = rw + 1;
  HTSerialNos(RepSpec.f3,RepSpec.f3,tstr);
  Header(rw,tstr,0);
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,USetStr(17102),false);
  OutString(70,0,USetStr(17103),false);
  OutString(190,0,USetStr(17104),false);
  OutString(280,0,USetStr(17105),false);
  OutString(350,0,USetStr(17106),false);
  OutString(450,0,USetStr(17107),false);
  EndFormat;
  Gray_Divider(0,1);
  
  found = true;
  QCr.OKFlag = 0;
  QCr.ArtCode = frin;
  keys = 2;
  if (nonblank(RepSpec.f3)) then begin
    QCr.SerialNr = RepSpec.f3;
    keys = 3;
  end;
  while (LoopKey("AnalyseDone",QCr,keys,found)) begin
    if (QCr.OKFlag!=0) then begin found = false; end;
    if (nonblank(RepSpec.f1)) then begin
      if (QCr.ArtCode>toin) then begin found = false; end;
    end;
    if (nonblank(RepSpec.f3)) then begin
      if (QCr.SerialNr!=RepSpec.f3) then begin found = false; end;
    end;
    if (found) then begin
      testf = true;
      if (nonblank(RepSpec.d1)) then begin
        if (QCr.AnalyseDate!=RepSpec.d1) then begin testf = false; end;
      end;
      if (testf) then begin
        if (ReadFirstItem(QCr.ArtCode,INr,false,false)) then begin
        end;
        if (nonblank(RepSpec.f2)) then begin
          if (INr.Group<frit) then begin testf = false; end;
          if (INr.Group>toit) then begin testf = false; end;
        end;
        if nonblank(RepSpec.f8) then begin
          if (SetInSet2(RepSpec.f8,INr.DispGroups)==false) then begin
            testf = false;
          end;
        end; 
      end;
      
      if (testf) then begin
        StartFormat(15);
        OutString(0,"DblINVc",QCr.ArtCode,false);
        OutString(70,0,Left(INr.Name,20),false);
        OutString(190,0,QCr.SerialNr,false);
        OutDateID(280,"DblQualConVc",QCr.AnalyseDate,false,QCr.SerNr);
        switch (QCr.Vc) begin
          case 0:
          otherwise
            OutString(350,0,USetStr(17110+QCr.Vc),false);
        end;
        switch (QCr.Vc) begin
          case kQCProdVc: dblstr = "DblProdVc";
          case kQCProdOperationVc:  dblstr = "DblProdOperationVc";
          case kQCSDVc: dblstr = "DblSDVc";
          case kQCPUVc: dblstr = "DblPUVc";
          case kQCRetVc: dblstr = "DblRetVc";
          case kQCRetPUVc: dblstr = "DblRetPUVc";
        end;
        switch (QCr.Vc) begin
          case 0:
          otherwise
            OutString(450,dblstr,QCr.VcSerNr,false);
        end;
        EndFormat;
      end;
    end;
  end;
  
  EndJob;  
  return;
end;
