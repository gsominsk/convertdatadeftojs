
#ifdef HAL
external procedure HTProject(string,var string);
external procedure HT2Per(Date, Date , var string);

global
procedure HTComparion(Integer comp,var string tstr)
begin  
  string 255 t2;
  
  tstr = USetStr(5571) & " ";
  if (comp==0) then begin
    t2 = USetStr(6824);
  end;
  if (comp==1) then begin
    t2 = USetStr(5572);
  end;
  if (comp==2) then begin
    t2 = USetStr(6826);
  end;
  tstr = tstr & t2;
return;
end;

global
procedure HTSorting(Integer sorting,var string tstr)
begin  
  string 255 t2;
  
  tstr = USetStr(5573) & " ";
  if (sorting==0) then begin
    t2 = USetStr(4883);
  end;
  if (sorting==1) then begin
    t2 = USetStr(4884);
  end;
  if (sorting==2) then begin
    t2 = USetStr(5574);
  end;
  tstr = tstr & t2;
return;
end;

global
procedure HTPOs(string in,var string tstr)
begin
  if (nonblank(in)) then begin
    tstr = USetStr(6784);
    tstr = tstr & " ";
    tstr = tstr & in;
  end else begin
    tstr = USetStr(2610);
  end;
end;

global
procedure HTItems(string in,var string tstr)
begin
  if (nonblank(in)) then begin
    tstr = USetStr(2463);
    tstr = tstr & " ";
    tstr = tstr & in;
  end else begin
    tstr = USetStr(2336);
  end;
end;

global
procedure HTPricelists(string pl,var string tstr)
begin
  if (nonblank(pl)) then begin
    tstr = USetStr(2321);
    tstr = tstr & " ";
    tstr = tstr & pl;
  end else begin
    tstr = USetStr(2397);
  end;
end;

global
procedure HTQuantities(Integer quants,var string tstr)
begin  
  if (quants==0) then begin
    tstr = USetStr(2425);
  end else begin
    tstr = USetStr(2620);
  end;
return;
end;

procedure OutCommonStrings(Integer quant,Integer comparison)
begin
  if (quant==1) then begin
     OutString(250,0,USetStr(2620),true);
  end else begin
     OutString(250,0,USetStr(2709),true);
  end;
  if (comparison==0) then begin
    OutString(320,0,USetStr(3152),true);
  end; 
  if (comparison==1) then begin
    OutString(320,0,USetStr(3554),true);
  end; 
  if (comparison==2) then begin
    OutString(320,0,USetStr(3554),true);
  end;      
  OutString(400,0,USetStr(6782),true);
  OutString(480,0,USetStr(4827),true);
return;
end;

global
procedure PrintPORnHead4()
begin
    StartFormat(15);
    OutString(0,0,USetStr(4822),false);
    OutString(60,0,USetStr(4824),false);
    OutString(130,0,USetStr(2584),false);
    OutString(210,0,USetStr(2620),true);
    OutString(280,0,USetStr(2709),true);
    EndFormat;
return;
end;

global
procedure PrintPORnHead3(Integer quant,Integer comparison)
begin
  StartFormat(15);
  OutString(0,0,USetStr(2584),false);
  OutString(80,0,USetStr(4883),false);
//  OutString(150,0,USetStr(4884),false);
  OutCommonStrings(quant,comparison);
  EndFormat;     
return;
end;

global
procedure PrintPORnHead2(Integer quant,Integer comparison)
begin
   StartFormat(15);
   OutString(0,0,USetStr(4884),false);
   OutString(70,0,USetStr(2303),false);
//   OutString(150,0,USetStr(2584),false);
   OutCommonStrings(quant,comparison);
   EndFormat;
   return;     
end;

global
procedure PrintPORnHead1(Integer quant,Integer comparison)
begin
  record INVc INr;
  Boolean res;
  
  StartFormat(15);
  OutString(0,0,USetStr(4883),false);
  OutString(70,0,USetStr(2303),false);
//  OutString(150,0,USetStr(2584),false);
  OutCommonStrings(quant,comparison);
  EndFormat;
  return;     
end;

global
procedure PrintPORnTotals(val totpoval,val totbud,val totpinv,val totinv)
BEGIN
  Gray_Divider(0,1);
  StartFormat(15);
   OutString(0,0,USetStr(4837),false);
   OutVal(250,0,totpoval,M4Val,true);
   OutVal(320,0,totbud,M4Val,true);
   OutVal(400,0,totpinv,M4Val,true);
   OutVal(480,0,totinv,M4Val,true);  
  EndFormat;
  RETURN;    
END;      

global
procedure PintPORnHeader(record RcVc RepSpec)
BEGIN
  Integer rw;
  string 255 tstr;
  
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTQuantities(RepSpec.flags[5],tstr);
  Header(rw,tstr,0);
  HTProject(RepSpec.f1,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTSorting(RepSpec.flags[0],tstr)
  Header(rw,tstr,0);
  HTItems(RepSpec.f2,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTComparion(RepSpec.flags[4],tstr);
  Header(rw,tstr,0);
  HTPOs(RepSpec.f3,tstr);
  Header(rw,tstr,1);
  RETURN;
END; 

global
function Boolean FindPORnCostVal(string project,string item,var val tbivv)
BEGIN
  record TBIVVc TBIVr;
  Boolean tbivf,found,testf;
  Integer rwcnt,i;
  val t;

  tbivf = false;
  tbivv = 0;
  TBIVr.PRCode = project;
  TBIVr.ArtCode = item;
  found = true;
  ResetLoop(TBIVr);
  while (LoopKey("PRCode",TBIVr,2,found)) begin
     testf = true;
     if (TBIVr.PRCode<>project) then begin found = false; end;
     if (nonblank(item)) then begin
//       if (TBIVr.ArtCode<>item) then begin testf = false; end;
     end;  
     if (found and testf) then begin
       t = TBIVr.CostPrice;
       tbivv = tbivv + t;
       tbivf = true;
     end;  
  end;
  FindPORnCostVal = tbivf;  
  RETURN;
END;
#endif
