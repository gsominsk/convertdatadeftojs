external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
// Cash Invoice  Journal 

external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);  
external function Boolean HasModQT();
external function Boolean HasModSL();
external function Boolean HasModSO();

external function Boolean HasObjects();

external function string 255 CreateInvoiceNumber(LongInt,string);
external function val FindVAT(string,val,Integer,Integer);
external procedure HTInv(string, var string);
external procedure HTDetailLevel(Integer, var string);
external procedure HTInvTypes(Integer,Integer,Integer,Integer, var string);
external procedure HTSaleMan(string,var string);
external procedure HTLocations(string, string, var string);
external procedure HT2Per(Date,Date,var string);
external procedure DblIVCashVc(string,string,Integer);

procedure HTOT(string objcode,var string tstr)
begin
  record OTVc OTr;
  OTr.Code = objcode;
  if (ReadFirstMain(OTr,1,true)) then begin
    tstr = USetStr(3016);
    tstr = tstr & OTr.Code;
    if (nonblank(OTr.Comment)) then begin
      tstr = tstr & "  ";
      tstr = tstr & OTr.Comment;
    end;
  end;
  return;
end;

function Boolean IVCashHasPaymentMode(record DefCashBlock DCb,record IVCashVc IVCashr,string PaymentMode)
begin
  Boolean res;
  row IVCashVc IVCashrw;
  Integer i,rwcnt;
  
  if (DCb.DefCashPayMode==PaymentMode) and (IVCashr.CashValue!=0) then begin
    res = true;
  end;
  if (IVCashr.PayDeal==PaymentMode) and (IVCashr.RecValue!=0) then begin
    res = true;
  end;
  if (IVCashr.PayDeal2==PaymentMode) and (IVCashr.RecValue2!=0) then begin
    res = true;
  end;
  if (!res) then begin
    rwcnt = MatRowCnt(IVCashr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(IVCashr,i,IVCashrw);
      if (IVCashrw.ovst==0) then begin
        if (IVCashrw.PayMode==PaymentMode) then begin
          res = true;
          i = rwcnt;
        end;
      end;
    end;
  end;
  
  IVCashHasPaymentMode = res;
  return;
end;

procedure RepCashInvoice(record IVCashVc IVCashr,string Defcust,record SMVc SMr, integer VATcodes)
begin
  row IVCashVc IVCashrw;
  string 255 tstr,t2;
  Integer i,rwcnt,j,k;
  val qty,VATsum;
  row SMVc SMrw;

  k = MatRowCnt(SMr);
  qty = 0;
  StartFormat(15);
  // Should be created Drill - Down for Cash Invoice
  // OutString(0,"DblCustPS2",CreateInvoiceNumber(IVCashr.SerNr),false);
  OutString(0,0,CreateInvoiceNumber(IVCashr.SerNr,""),false);
  OutDate(130,0,IVCashr.InvDate,false);
//  OutDate(220,0,IVCashr.PayDate,false);
  EndFormat;
  StartFormat(15);
  if (HasModSL or HasModSO or HasModQT) then begin
    OutString(50,0,IVCashr.CustCode,false);
  end;
  OutString(220,0,IVCashr.Addr0,false);
  EndFormat;
  if (nonblank(DefCust) and (IVCashr.CustCode <>DefCust)) or blank(DefCust) then begin
    StartFormat(15);
    OutString(50,0,IVCashr.CustCat,false);
    OutString(220,0,IVCashr.Addr1,false);
    StartFormat(15);
    EndFormat;
    StartFormat(15);
    OutString(50,0,IVCashr.OurContact,false);
    OutString(220,0,IVCashr.Addr2,false);
    EndFormat;
    if (IVCashr.Addr3<>"") then begin
      StartFormat(15);
      OutString(220,0,IVCashr.Addr3,false);
      EndFormat;
    end;
    if (IVCashr.ClientContact<>"") then begin
      StartFormat(15);
      OutString(220,0,IVCashr.ClientContact,false);
      EndFormat;
    end;
  end;
  rwcnt = MatRowCnt(IVCashr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVCashr,i,IVCashrw);
    if (IVCashrw.ovst==0) then begin
      if (VATcodes == 1) then begin
        for (j=0;j<k;j=j+1) begin
          MatRowGet(SMr,j,SMrw);
          if (SMrw.AccNumber==IVCashrw.VATCode) then begin
            SMrw.DebVal  = SMrw.DebVal + FindVAT(IVCashrw.VATCode,IVCashrw.Sum,IVCashr.InclVAT,IVCashr.NoTAXonVAT);
            MatRowPut(SMr,j,SMrw);
            j = k;
          end;
        end;
      end;    
    end;  
    if ((IVCashrw.stp==1) or (IVCashrw.stp==4)) and (IVCashrw.ovst==0) then begin
      if (IVCashr.InvType==kPOSInvoiceTypeCredit) then begin
        IVCashrw.Quant = -IVCashrw.Quant;
        IVCashrw.Sum = -IVCashrw.Sum;
      end;
      StartFormat(15);
      qty = qty + IVCashrw.Quant;
      OutString(20,0,IVCashrw.ArtCode,false);
      OutVal(104,0,IVCashrw.Quant,M4UVal,true);
      OutString(110,0,IVCashrw.Spec,false);
      OutVal(350,0,IVCashrw.Price,M423Val,true);
      OutString(380,0,IVCashrw.vRebate,true);
      OutVal(460,0,IVCashrw.Sum,M4Val,true);
      OutString(480,0,IVCashrw.VATCode,true);
      EndFormat;
    end;
   
  end;
  Black_Divider(380,460);
  StartFormat(15);
  OutString(70,0,USetStr(2645),false);
  if (HasObjects) then begin
    OutString(150,0,USetStr(3185),false);
  end;
  OutString(230,0,USetStr(6707),false);
  EndFormat;
  StartFormat(15);
  OutVal(104,0,qty,M4UVal,true);
  if (HasObjects) then begin
    OutString(150,0,IVCashr.Objects,false);
  end;
  OutVal(230,0,IVCashr.Sum3,M4Val,false);
  OutVal(460,0,IVCashr.Sum1,M4Val,true);//280
  EndFormat;
  return;
end;

global
procedure InvCashRn(record RcVc RepSpec)
begin
  record IVCashVc IVCashr;
  row IVCashVc IVCashrw;
  record CUVc CUr;
  record ObjVc OBr;
  record MainStockBlock MSb;
  record CashierDefBlock CDb;
  record DefCashBlock DCb;
  record SMVc SMr;
  row SMVc SMrw;
  record SMVc SM1r;
  row SMVc SM1rw;
  record VATCodeBlock VATb;
  row VATCodeBlock VATbrw;
  string 255 frdra,todra;
  val vatv,t1;
  Integer r,rwcnt;
  
  val iv,TotSum, ivnvat, TotSum2;
  String 255 tstr;
  String 20 mykey;
  Boolean Accs,TrHs,testf;
  Boolean datesort;
  Integer rw;
  Integer i,k;
  LongInt afr,ato;
  LongInt totinv;

  totinv = 0;
  BlockLoad(MSb);
  BlockLoad(CDb);
  BlockLoad(DCb);
  BlockLoad(VATb);
  
  frdra = FirstInRange(RepSpec.f4,5);
  todra = LastInRange(RepSpec.f4,5);
  StartReportJob(USetStr(9839));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
 
  HTDetailLevel(RepSpec.ArtMode,tstr);
  Header(rw,tstr,0);
  
  HTInv(RepSpec.f1,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.f2<>"") then begin
    tstr = USetStr(1113);
    tstr = tstr & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;

  if (RepSpec.AccStr<>"") then begin
    HTSaleMan(RepSpec.AccStr,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (RepSpec.ObjStr<>"") then begin
    tstr = RepSpec.ObjStr;
    Header(rw,tstr,1);
    rw = rw + 1;
  end else begin
    if (RepSpec.ObjType<>"") then begin
      HTOT(RepSpec.ObjType,tstr);
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasCategories) then begin
    HTCustCat(RepSpec.f3,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.f5,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (nonblank(RepSpec.LastAcc)) then begin
    HTLocations(RepSpec.LastAcc,RepSpec.LastAcc,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  
  if nonblank(RepSpec.FirstAcc) then begin
    tstr = USetStr(9840) & RepSpec.FirstAcc;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;

  if (nonblank(RepSpec.f4)) then begin
    Header(rw,USetStr(12542) & ": " & RepSpec.f4,1);
    rw = rw + 1;
  end;
  EndHeader;
 
 if ((RepSpec.flags[1] == 1) and (RepSpec.ArtMode == 1)) then begin
    k = MatRowCnt(VATb);
    for (i = 0; i<k ;i=i+1) begin
      MatRowGet(VATb,i,VATbrw);
      ClearRow(SMr,SMrw,i);  // VAT totals
      ClearRow(SM1r,SM1rw,i);// VAT invoice totals
      SMrw.AccNumber = VATbrw.VATCode;
      SM1rw.AccNumber = VATbrw.VATCode;
      MatRowPut(SMr,i,SMrw);
      MatRowPut(SM1r,i,SM1rw);
    end;  
  end;        
  TotSum = 0;
  TotSum2 = 0;
  SetRepCol(2,430);
  if (RepSpec.ArtMode==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2352),false);//0
    OutString(60,0,USetStr(2353),false);//60
    if (HasModSL or HasModSO or HasModQT) then begin
      OutString(125,0,USetStr(2354),false);//110
    end;
    OutString(380,0,USetStr(2328),true);
    OutString(455,0,USetStr(2329),true);
    EndFormat;
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2352),false);//0
    OutString(130,0,USetStr(2353),false);//130
//    OutString(220,0,USetStr(2370),false);//220
    EndFormat;
  end;
  
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  
  datesort = false;
  if (blank(RepSpec.f1)) then begin
    datesort = true;
  end;
  if (datesort) then begin
    IVCashr.TransDate = RepSpec.sStartDate;
    mykey = "TransDate";
  end else begin
    IVCashr.SerNr = afr;
    mykey = "SerNr";
  end;
  Gray_Divider(0,1);
  TrHs = true;

  while (LoopKey(mykey,IVCashr,1,TrHs)) begin
    iv = 0;
    ivnvat = 0;
    TrHs = true;
    if (TrHs) then begin
      if (ato<>-1) then begin
        if (IVCashr.SerNr>ato) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.TransStr)) then begin
        if (IVCashHasPaymentMode(CDb,IVCashr,RepSpec.TransStr)==false) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f4)) then begin
        if (IVCashr.DrawerCode<frdra) then begin testf = false; end;
        if (IVCashr.DrawerCode>todra) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (RepSpec.f2<>IVCashr.CustCode) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        testf = ContactInGroupClass(IVCashr.CustCode,RepSpec.f3,RepSpec.f5,"CUST","","");
      end;
      if (nonblank(RepSpec.AccStr)) then begin
        if (RepSpec.AccStr<>IVCashr.SalesMan) then begin
          testf = false;
        end;
      end;
      if (IVCashr.OKFlag==0) then begin
         testf = false;
      end;
      if (IVCashr.Invalid!=0) then begin testf = false; end;
      if (testf) then begin
        if (nonblank(RepSpec.LastAcc)) then begin
          if (RepSpec.LastAcc<>IVCashr.Location) then begin
            testf = false;
            if ((blank(IVCashr.Location)) and (RepSpec.LastAcc==MSb.MainStock)) then begin
              testf = true;
            end;
          end;
        end;
      end;
    if (DateInRange(IVCashr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;
      if (IVCashr.Invalid<>0) then begin testf = false; end;
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,IVCashr.Objects)==false) then begin
          testf = false;
        end;
      end else begin
        if ((testf==true) and (nonblank(RepSpec.ObjType))) then begin
          testf = false;
          OBr.OTCode = RepSpec.ObjType;
          OBr.Code = "";
          Accs = true;
          ResetLoop(OBr);
          while (LoopKey("OTCode",OBr,1,Accs)) begin
            if ((Accs==true) and (RepSpec.ObjType==OBr.OTCode)) then begin              
              if (SetInSet(OBr.Code,IVCashr.Objects)==true) then begin
                testf = true;
                Accs = false;
              end;
            end;
          end; 
        end;
      end;
     
      if nonblank(RepSpec.FirstAcc) then begin
        if (IVCashr.LocalMachineCode<> RepSpec.FirstAcc) then begin
          testf = false;
        end;
      end;  
      if (testf) then begin
        testf = ContactInGroupClass(IVCashr.CustCode,RepSpec.f3,RepSpec.f5,"CUST","","");
      end;   
      if (testf) then begin
        if (IVCashr.InvType==kPOSInvoiceTypeCredit) then begin
          IVCashr.Sum4 = -IVCashr.Sum4;
          IVCashr.Sum1 = -IVCashr.Sum1;
        end;
        if (blank(RepSpec.TransStr)) then begin
          iv = IVCashr.Sum4;
          if (blank(IVCashr.Sum1)) then begin
            ivnvat = IVCashr.Sum4;
          end else begin
            ivnvat = IVCashr.Sum1;
          end;
          if (IVCashr.InclVAT>0) then begin
            ivnvat = ivnvat - IVCashr.Sum3;
          end;
        end else begin
          iv = blankval;
          vatv = blankval;
          rwcnt = MatRowCnt(IVCashr);
          for (r=0;r<rwcnt;r=r+1) begin
            MatRowGet(IVCashr,r,IVCashrw);
            if (IVCashrw.ovst==0) then begin
              if (IVCashrw.PayMode==RepSpec.TransStr) then begin
                iv = iv + IVCashrw.Sum;
                if (IVCashrw.stp==kInvoiceRowTypeCashPayment) then begin
                  iv = iv - IVCashr.RetValue;
                end;
              end;
            end;
          end;
          if (IVCashr.InclVAT>0) then begin
            ivnvat = ivnvat + (iv*IVCashr.Sum3)/IVCashr.Sum4;
          end else begin
            ivnvat = ivnvat + (iv*IVCashr.Sum3)/IVCashr.Sum4;
          end;
        end;
        TotSum = TotSum + iv;
        TotSum2 = TotSum2 + ivnvat;

        if (RepSpec.ArtMode==1) then begin
          if (RepSpec.flags[1] == 1)  then begin
            RepCashInvoice(IVCashr,CDb.DefCustCode,SM1r,1);
            for (i = 0; i<k ;i=i+1) begin
              MatRowGet(SMr,i,SMrw);
              MatRowGet(SM1r,i,SM1rw);
              SMrw.DebVal = SMrw.DebVal + SM1rw.DebVal;
              SM1rw.DebVal = 0;
              MatRowPut(SMr,i,SMrw);
              MatRowPut(SM1r,i,SM1rw);
            end;
          end else begin
            RepCashInvoice(IVCashr,CDb.DefCustCode,SM1r,0);  
          end;    
          Gray_Divider(0,1);
        end;
        
        if (RepSpec.ArtMode==0)  then begin
          StartFormat(15);          
          OutString(0,"DblNPTSIVCash",CreateInvoiceNumber(IVCashr.SerNr,""),false);
          OutDate(60,0,IVCashr.InvDate,false);
          
          if (HasModSL or HasModSO or HasModQT) then begin
            if (nonblank(CDb.DefCustCode)) then begin
              if (CDb.DefCustCode!=IVCashr.CustCode) then begin
                OutString(125,0,IVCashr.Addr0,false);   
              end;
            end else begin
              OutString(125,0,IVCashr.Addr0,false);
            end;
          end;
          OutVal(380,0,ivnvat,M4Val,true);
          OutVal(455,0,iv,M4Val,true);
          EndFormat;
        end;
        totinv = totinv + 1;
      end;
    end;
  end;
  Gray_Divider(290,1);
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(380,0,USetStr(2328),true);
    OutString(455,0,USetStr(2329),true);
    EndFormat;
  end;
  StartFormat(15);
  OutString(290,0,USetStr(2357),false);
  OutVal(380,0, TotSum2,M4Val,true);
  OutVal(455,0, TotSum,M4Val,true);
  EndFormat;
  if (RepSpec.flags[1] == 1) and (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    EndFormat;
    Gray_Divider(290,1);
    for (i = 0; i<k ;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      StartFormat(15);
       OutString(290,0,USetStr(9841) & SMrw.AccNumber,false);
       OutVal(400,0,SMrw.DebVal,M4Val,true);
      EndFormat;
    end;
  end;
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(340,0,USetStr(26560),false);
  OutLongInt(1,0,totinv,true);
  EndFormat;

  EndJob;
  return;
end;
