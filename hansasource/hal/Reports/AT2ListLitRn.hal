#ifdef HAL

external procedure GetDepName(string,var string);
external function Boolean CheckDepAndDate(record AT2UnitVc,string,Date);


procedure PrintAllMovements(record RcVc RepSpec,record AT2UnitVc ATUnitr)
BEGIN
  record InvrsVc Invrsr;
  record AT2TakeVc AT2Taker;
  Boolean found;
    
  StartFormat(15);
   OutString(0,0,USetStr(9748) & ": ",false);
  EndFormat;
  found = true;
  Invrsr.FileName = "AT2TakeVc";
  Invrsr.InventoryNr = ATUnitr.InventoryNr;
  while (LoopKey("FileName",Invrsr,3,found)) begin
    if (Invrsr.TransDate>RepSpec.d1) then begin
      found = false;
    end;
    if (Invrsr.FileName!="AT2TakeVc") then begin
      found = false;
    end;
    if (Invrsr.InventoryNr!=ATUnitr.InventoryNr) then begin
      found = false;
    end;
    if (found) then begin
      AT2Taker.SerNr = Invrsr.TransNr;
      if (ReadFirstMain(AT2Taker,1,true)) then begin
        if (AT2Taker.PhysCheckf==0) then begin
          StartFormat(15);
           OutString(80,0,Invrsr.Department,false);
           OutDate(150,0,Invrsr.TransDate,false);
          EndFormat;
        end;
      end;  
    end;
  end;
  RETURN;      
END;

global
procedure AT2ListLitRn(var record RcVc RepSpec)
BEGIN
  record AT2UnitVc ATUnitr;
  record AT2DprVc ATDprr;
  Boolean TrHs,testf;
  Integer rw;
  string 255 tstr;
    
  StartReportJob(USetStr(9745));
   rw = 1;
   if (nonblankdate(RepSpec.d1)) then begin
     tstr = RepSpec.d1;
     Header(rw,tstr,1);
     rw = rw + 1;
   end else begin
     tstr = CurrentDate;
     Header(rw,tstr,1);
     rw = rw + 1;
   end;  
   if (nonblank(RepSpec.f1)) then begin
     tstr = USetStr(9732);
     tstr = tstr & ": ";
     tstr = tstr & RepSpec.f1;
     Header(rw,tstr,1);
     rw = rw + 1;
   end;
   if (nonblank(RepSpec.f2)) then begin
     tstr = USetStr(9731);
     tstr = tstr & ": ";
     tstr = tstr & RepSpec.f2;
     Header(rw,tstr,1);
     rw = rw + 1;
   end;  
  EndHeader;
  Black_Divider(0,1);  
  if (blankdate(RepSpec.d1)) then begin
    RepSpec.d1 = CurrentDate;
  end;
  TrHs = true;
  while (LoopMain(ATUnitr,1,TrHs)) begin
    testf = true;
    if (CheckDepAndDate(ATUnitr,RepSpec.f1,RepSpec.d1)==false) then begin testf = false; end;
    if (nonblank(RepSpec.f2)) then begin
      if (ATUnitr.AT2Code!=RepSpec.f2) then begin testf = false; end;
    end;
    if (TrHs and testf) then begin
      StartFormat(15);
      OutString(0,0,USetStr(9757) & ": ",false);
      OutString(80,0,ATUnitr.InventoryNr,false);       
      OutString(150,0,ATUnitr.Description,false);       
      OutString(340,0,ATUnitr.Objects,false);
      OutString(400,0,USetStr(9758) & ": ",false);
      OutVal(480,0,ATUnitr.Quantity,M4Qty,true);
      EndFormat;

      StartFormat(15);
      OutString(0,0,USetStr(9746) & ": ",false);
      OutString(80,0,ATUnitr.VEName,false);       
      EndFormat;
      StartFormat(15);
      OutString(0,0,USetStr(9747) & ": ",false);
      GetDepName(ATUnitr.DepCode,tstr);
      OutString(80,0,tstr,false);       
      OutString(210,0,USetStr(5469) & ": ",false);
      OutDate(290,0,ATUnitr.PurchaseDate,false);       
      OutString(350,0,USetStr(8780) & ": ",false);
      OutVal(480,0,ATUnitr.PurchVal,M4Val,true);       
      EndFormat;
      PrintAllMovements(RepSpec,ATUnitr);
      StartFormat(15);
      OutString(0,0,USetStr(9751) & ": ",false);
      GetDepName(ATUnitr.DepCode,tstr);
      OutString(80,0,tstr,false);  
      ATDprr.InventoryNr = ATUnitr.InventoryNr;
      if (ReadFirstKey("InventoryNr",ATDprr,1,true)) then begin
      end;     
      OutString(0,0,USetStr(9752) & ": ",false);
      OutDate(300,0,ATDprr.TransDate,false);             
      OutString(380,0,USetStr(9750) & ": ",false);
      OutVal(480,0,ATDprr.StartVal,M4Val,true);      
      EndFormat;
      StartFormat(15);
      OutString(0,0,USetStr(9753) & ": ",false);
      OutVal(480,0,ATUnitr.ResVal,M4Val,true);      
      EndFormat;
      StartFormat(15);
      OutString(0,0,USetStr(9754) & ": ",false);
      OutDate(80,0,ATUnitr.StartingDate1,false);             
      OutString(220,0,USetStr(9755) & ": ",false);
      OutString(300,0,ATUnitr.Model1,false);
      OutString(380,0,USetStr(9756) & ": ",false);
      OutDate(480,0,ATUnitr.EndDate,true);
      EndFormat;
      Black_Divider(0,1);
    end;
  end;
  EndJob;
  RETURN;
END;

#endif
