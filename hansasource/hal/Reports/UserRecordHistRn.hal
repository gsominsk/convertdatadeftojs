
function string 255 CompanyNrToName(Integer compnr)
begin
/*
  res = -1;
  oldcomp = CurrentCompany;  
  BlockLoad(CompaniesRec);
  rwcnt = MatRowCnt(CompaniesRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CompaniesRec,i,comprw);
    if ((comprw.CompCode==compcode) and (comprw.ActiveStatus==0)) then begin
      res = 0;
      if (SetCompanyCode(comprw.CompCode,false)) then begin
        compname = comprw.CompName;
        Userr.Code = usercode;
        if (ReadFirstMain(Userr,1,true)) then begin
          accessgroup = Userr.AccessGroup;
          res = 1;
        end else begin
          accessgroup = "";
        end;
      end;
      i = rwcnt;
    end;
  end;
*/

end;

global
procedure UserRecordHistRn(record RcVc RepSpec)
begin
  record RHistVc RHr;
  Boolean foundf,testf;
  val a;
  Integer compnr;
  string 255 vcname;
  
  StartReportJob("User Record History");
  EndHeader;
  SetRepCol(3,60);
  SetRepCol(4,100);
  SetRepCol(5,160);
  SetRepCol(6,260);
  
  StartFormat(15);
  OutString(0,0,"Company",false);
  OutString(3,0,"Date",false);
  OutString(4,0,"Time",false);
  OutString(5,0,"Action",false);
  OutString(6,0,"Register",false);
  //OutString(1,0,USetStr(16351),true);
  EndFormat;
  Gray_Divider(0,1);
  foundf = true;
  
  if (nonblank(RepSpec.f1)) then begin
    RHr.User = RepSpec.f1;
    RHr.TransDate = RepSpec.sStartDate;
  end;
  
  while (LoopKey("UserDateTime",RHr,2,foundf)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (RHr.User!=RepSpec.f1) then begin foundf = false; end;
      if (DateInRange(RHr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        foundf = false;
      end;
    end;
    testf = foundf;
    if (blank(RepSpec.f1)) then begin
      if (DateInRange(RHr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      compnr = GetRecordLinkFields(RHr.RecidStr,vcname);
      
      StartFormat(15);
      OutString(0,0,compnr,false);
      OutString(3,0,RHr.TransDate,false);
      OutString(4,0,RHr.TransTime,false);
      
      switch (RHr.accode) begin
        case kRecordHistoryActionCreated: OutString(5,0,USetStr(9061),false);
        case kRecordHistoryActionUpdated: OutString(5,0,USetStr(9062),false);
        case kRecordHistoryActionDeleted: OutString(5,0,USetStr(9063),false);
        otherwise OutString(5,0,"unknown " & RHr.accode,false);
      end;
      
      OutString(6,0,vcname,false); // translate to english
      EndFormat;
    end;
  end;
  
  EndJob;
  return;
end;
