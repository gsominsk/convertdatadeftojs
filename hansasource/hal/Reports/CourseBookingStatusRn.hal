external procedure HT2Per(Date, Date , var string);

global 
procedure CourseBookingStatusRn (record RcVc RepSpec)
begin
  record CourseEventVc CourseEventr;
  integer rw;
  string 255 tstr;
  boolean TrHs,testf;
  integer qty;
  
  rw = 1;
  StartReportJob(USetStr(16680));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(16681) & ": " & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (RepSpec.ArtMode == 0) then begin
    tstr = USetStr(16682);
    Header(rw,tstr,1);
  end;
  if (RepSpec.ArtMode == 1) then begin
    tstr = USetStr(16683);
    Header(rw,tstr,1);
  end;
  if (RepSpec.ArtMode == 2) then begin
    tstr = USetStr(16684);
    Header(rw,tstr,1);
  end;
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,USetStr(16685),false);
  OutString(80,0,USetStr(16681),false);
  OutString(160,0,USetStr(16686),false);
  OutString(300,0,USetStr(16687),true);
  OutString(390,0,USetStr(16688),true);
  OutString(1,0,USetStr(16689),true);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  CourseEventr.CourseCode = RepSpec.f1;
  
  while (LoopKey("CourseCode",CourseEventr,1,TrHs)) begin 
    if (TrHs) then begin
      if (nonblank(RepSpec.f1)) then begin 
        if (CourseEventr.CourseCode <> RepSpec.f1) then begin
          TrHs = false;    
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(CourseEventr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;
      if (CourseEventr.StatusFlag > 0) then begin
        testf = false;
      end;
      if (RepSpec.ArtMode == 1) then begin
        if (CourseEventr.MinPersons >0) then begin
          if (CourseEventr.NoOfPersons  >= CourseEventr.MinPersons) then begin
            testf = false;
          end;
        end;
      end;
      if (RepSpec.ArtMode == 2) then begin
        if (CourseEventr.MinPersons > 0) then begin
          if (CourseEventr.NoOfPersons < CourseEventr.MinPersons) then begin
            testf = false;
          end;
        end;
      end;
      if (nonblankdate(RepSpec.d1)) then begin
        if (nonblankdate(CourseEventr.LastBookingDate)) then begin
          if (CourseEventr.LastBookingDate > RepSpec.d1) then begin
            testf = false;
          end;
        end;
      end;
      if (RepSpec.ArtMode > 0) then begin
        if (CourseEventr.MinPersons <= 0) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        StartFormat(15);
        OutString(0,"DblCourseEventVc",CourseEventr.SerNr,false);
        OutString(80,0,CourseEventr.CourseCode,false);
        OutString(160,0,CourseEventr.TransDate,false);
        OutString(300,0,CourseEventr.MaxPersons,true);
        if (CourseEventr.MinPersons > 0) then begin
          OutString(390,0,CourseEventr.MinPersons,true);
        end;
        OutString(1,0,CourseEventr.NoOfPersons,true);
        EndFormat;
        qty = qty + 1;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(16690),false);
  OutVal(100,0,qty,M40Val,false);
  EndFormat;
  EndJob;
  return;
end;
