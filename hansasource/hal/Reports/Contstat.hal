external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean SetInSet2(string,string);
external procedure HTCusts(string,string,var string);
external procedure HTNr(Integer,Integer,LongInt,LongInt,var string);

procedure PrintCOCQRow(Integer nr, Date sendp, Date answerp, integer okf)
begin
  String 255 tstr;
  String 10 noevent;

  noevent = "    - ";
  StartFormat(15);
  OutString(0,0,USetStr(nr),false);
  if (nonblankdate(sendp)) then begin
   OutDate(150,0,sendp,false);
  end else begin
   OutString(150,0,noevent,false);
  end;
  if (nonblankdate(answerp)) then begin
   OutDate(250,0,answerp,false);
  end else begin
   OutString(250,0,noevent,false);
  end;
  if (nonblankdate(answerp)) then begin
   if (okf <> 0) then begin
    tstr = USetStr(5545);
   end else begin
    tstr = USetStr(5546);
   end;
  end else begin
   tstr=noevent;
  end;
  OutString(350,0,tstr,false);
  EndFormat;
return;
end;

procedure COCQPrintRecord(record COCQStatVc COCQp, record COVc COp,record CQVc CQp,Integer detail)
begin
if (detail==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(5544),false);
    if (CQp.SerNr <> -1) then begin
      OutLongInt(70,0,CQp.SerNr,false);
      OutLongInt(120,0,CQp.Version,false);
      OutString(160,0,CQp.CustCode,false);
      OutString(230,0,CQp.Name,false);
      OutDate(400,0,CQp.CQDate,true);
      OutDate(480,0,CQp.ValidTo,true);
    end else begin
      OutString(70,0,USetStr(5556),false);
    end;
    EndFormat;
    StartFormat(15);
    OutString(0,0,USetStr(5543),false);
    if (COp.SerNr<> -1) then begin
      OutLongInt(70,0,COp.SerNr,false);
      OutLongInt(120,0,COp.ChildSerNr,false);
      OutString(160,0,COp.CustCode,false);
      OutString(230,0,COp.Addr0,false);
      OutDate(400,0,COp.startDate,true);
      OutDate(480,0,COp.endDate,true);
    end else begin
      OutString(70,0,USetStr(5555),false);
    end;
    EndFormat;
    Gray_Divider(0,1);
end;
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(5550),false);
  OutString(150,0,USetStr(5547),false);
  OutString(250,0,USetStr(5548),false);
  OutString(350,0,USetStr(5549),false);
  EndFormat;
  Gray_Divider(0,1);
  PrintCOCQRow(7120,COCQp.SQAcceptDate,COCQp.AQAcceptDate,COCQp.QAcceptOK);
//  PrintCOCQRow(7121,COCQp.SCreditDate,COCQp.ACreditDate,COCQp.CreditOK);
//  PrintCOCQRow(7122,COCQp.SFundinDate,COCQp.AFundinDate,COCQp.FundinOK);
  PrintCOCQRow(7123,COCQp.SSignedDate,COCQp.ASignedDate,COCQp.SignedOK);
//  PrintCOCQRow(7124,COCQp.SDelAcceptDate,COCQp.ADelAcceptDate,COCQp.DelAcceptOK);
//  PrintCOCQRow(7125,COCQp.STransNotDate,COCQp.ATransNotDate,COCQp.TransNotOK);
//  PrintCOCQRow(7126,COCQp.SInsuranceDate,COCQp.AInsuranceDate,COCQp.InsuranceOK);
//  PrintCOCQRow(7127,COCQp.SSoldDate,COCQp.ASoldDate,COCQp.SoldOK);
  Gray_Divider(0,1);
  EndFormat;
return;
end;


global
procedure CQStatRn(record RcVc RepSpec)
begin
  record COVc COr;
  record CQVc CQr;
  record COCQStatVc COCQr;
  Boolean TrHs;
  Boolean testf;
  String 255 tstr;
  Integer rw;
  LongInt afrco;
  LongInt atoco;
  LongInt afrcq;
  LongInt atocq;
  String 20 frcc;
  String 20 tocc;
  Integer cocnt;
  Val TotSum;
  String 255 ckey;
  Integer keys;
  Integer sorting;
  record CUVc CUr;

  rw = 1;
  cocnt = 0;

  TotSum = 0;

  afrco = FirstInRange(RepSpec.f1,20);
  atoco =  LastInRange(RepSpec.f1,20);
  afrcq = FirstInRange(RepSpec.f2,20);
  atocq =  LastInRange(RepSpec.f2,20);
  frcc = FirstInRange(RepSpec.f3,20);
  tocc =  LastInRange(RepSpec.f3,20);

  StartReportJob(USetStr(5540));

  HTNr(6661,1168,afrco,atoco,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTNr(6664,1199,afrcq,atocq,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTCusts(frcc,tocc,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (HasCategories) then begin 
    HTCustCat(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end; 
  end;
  if (HasContactClassification) then begin 
    HTCustClass(RepSpec.Stext,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;  
  end;
  EndHeader;

  COCQr.COSerNr = afrco;
  COCQr.COChildNr = "";
  ckey = "COSerNr";
  keys = 1;
  sorting = 1;

  if nonblank(RepSpec.f2) then begin
    COCQr.CQSerNr = afrcq;
    COCQr.CQVersion = "";
    ckey="CQSerNr";
    keys = 1;
    sorting = 2;
  end else begin
    if (nonblank(RepSpec.f3)) then begin
     COCQr.CustCode = frcc;
     COCQr.CQSerNr = "";
     COCQr.CQVersion = "";
     ckey="CQCustCode";
     keys = 1;
     sorting = 3;
    end;
  end;

  TrHs = true;

  while (LoopKey(ckey,COCQr,keys,TrHs)) begin
    if (TrHs) then begin
      if (sorting==1) then begin
        if (nonblank(RepSpec.f1)) then begin
          if (COCQr.COSerNr<afrco) then begin
            TrHs = false;
          end;
          if (COCQr.COSerNr>atoco) then begin
            TrHs = false;
          end;
        end;
      end;
      if (sorting==2) then begin
       if (nonblank(RepSpec.f2)) then begin
          if (COCQr.COSerNr<afrcq) then begin
            TrHs = false;
          end;
          if (COCQr.COSerNr>atocq) then begin
            TrHs = false;
          end;
       end;
      end;
      if (sorting==3) then begin
        if (nonblank(RepSpec.f3)) then begin
          if (frcc>COCQr.CustCode) then begin
            TrHs = false;
          end;
          if (tocc<COCQr.CustCode) then begin
            TrHs = false;
          end;
        end;
      end;
     end;
     if (TrHs) then begin
      testf = true;
      if (sorting <> 3) then begin
        if (nonblank(RepSpec.f3)) then begin
          if (frcc>COCQr.CustCode) then begin
            testf = false;
          end;
          if (tocc<COCQr.CustCode) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        COr.SerNr = -1;
        CQr.SerNr = -1;
        if ((COCQr.COSerNr<> -1)) then begin
          COr.SerNr = COCQr.COSerNr;
          COr.ChildSerNr = COCQr.COChildNr;
          if (ReadFirstMain(COr,2,true)==false) then begin
           COr.SerNr = -1;
          end;
        end;
        if ((COCQr.CQSerNr<> -1)) then begin
          CQr.SerNr = COCQr.CQSerNr;
          CQr.Version = COCQr.CQVersion;
          if (ReadFirstMain(CQr,2,true)==false) then begin
           CQr.SerNr = -1;
          end;
        end;
      end;
      if ((COr.SerNr==-1) and (CQr.SerNr==-1)) then begin
       testf = false;
      end;
      if (testf) then begin
        CUr.Code = COCQr.CustCode;
        if (ReadFirstMain(CUr,1,true)==false) then begin  testf = false;  end;
      end;
      if (testf) then begin
        if (nonblank(RepSpec.Stext)) then begin
          if (SetInSet2(RepSpec.Stext,CUr.Classification)==false) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        if (nonblank(RepSpec.f4)) then begin
          if (RepSpec.f4!=CUr.CustCat) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        cocnt = cocnt + 1;
        if (cocnt <>  1) then begin
          Black_Divider(0,1);
          StartFormat(15);
          EndFormat;
        end;
        if (RepSpec.ArtMode==0) then begin
          StartFormat(15);
          OutString(70,0,USetStr(5551),false);
          OutString(160,0,USetStr(5552),false);
          OutString(400,0,USetStr(5553),true);
          OutString(480,0,USetStr(5554),true);
          EndFormat;
          Gray_Divider(0,1);
        end;
        COCQPrintRecord(COCQr,COr,CQr,RepSpec.ArtMode);
      end;
    end;
  end;
  EndJob;
return;
end;

