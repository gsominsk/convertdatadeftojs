external function Boolean WrapAndPrint(Integer,string,Integer);
external procedure GetUserName(string,var string);
external procedure ExtractObj(string,var Integer,var string);
external procedure HT2Per(Date, Date , var string);
external procedure vTimeDiff(Time,Time,var val);

procedure PrintUserActivities(record RcVc RepSpec,string usercode,var val tottimev,var LongInt actcnt)
BEGIN
  record ActVc Actr;
  row ActVc Actrw;
  Boolean TrHs,testf,firstf,oneperson,firstdate;
  string 255 ckey;
  string 255 tstr;
  Date oldDate;
  Time timet,blanktimet;
  val timev,totv;
  Integer i,rwcnt;

  totv = 0;
  firstf = true;
  oneperson = true;
  firstdate = true;
  Actr.OKFlag = 0;
  Actr.TransDate = RepSpec.sStartDate;
  if (RepSpec.flags[2]==0) then begin
    Actr.OKFlag = 1;
  end;
  oldDate = AddYear(oldDate,-2);  
  Actr.TodoFlag = 0;
  ckey = "UserMain:";
  ckey = ckey & usercode;
  TrHs = true;
  while (LoopKey(ckey,Actr,1,TrHs)) begin // can't we rewrite this to use key called DateUserMain
    if (Actr.TodoFlag!=0) then begin TrHs = false; end;
    testf = false;
    if (TrHs) then begin
      testf = true;
      if (DateInRange(Actr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
      if (Actr.Invalid!=0) then begin testf = false; end;
      if (Actr.PrivateFlag!=0) then begin
        if ((SetInSet(CurrentUser,Actr.MainPersons)==false) and
            (SetInSet(CurrentUser,Actr.CCPersons)==false)) then begin
          testf = false;
        end;
      end;
      if (RepSpec.flags[1]==0) then begin
        if (Actr.OKFlag!=0) then begin testf = false; end;
      end;
      if (RepSpec.flags[2]==0) then begin
        if (Actr.OKFlag==0) then begin testf = false; end;
      end;
      if (testf) then begin
        if (RepSpec.ArtMode==1) then begin
          if (firstf==false) then begin
            Gray_Divider(0,1);
            StartFormat(10);
            EndFormat;
          end else begin
            firstf = false;
          end;
        end;
        if (oldDate!=Actr.TransDate) then begin
          if (firstdate==false) then begin
            Gray_Divider(0,1);
            StartFormat(15);
            OutVal(440,0,totv,M4Val,true);
            EndFormat;
            totv = 0;
          end;
          StartFormat(15);
          OutDate(0,0,Actr.TransDate,false);
          tstr = "";
    //##      tstr = DateName(Actr.TransDate,"");
          OutString(70,0,tstr,false);
          EndFormat;
          firstdate = false;
        end;
        StartFormat(15);
        tstr = Actr.StartTime;
        OutStringID(0,"DblActRec",tstr,false,Actr.SerNr);
        if ((nonblankdate(Actr.EndDate)) and (Actr.TransDate!=Actr.EndDate)) then begin
          OutString(50,0,"***",false);
        end else begin
          tstr = Actr.EndTime;
          OutString(50,0,tstr,false);
        end;
        if (nonblank(Actr.Comment)) then begin
          OutStringID(100,"DblActRec",Actr.Comment,false,Actr.SerNr);
        end else begin
          OutStringID(100,"DblActRec","-",false,Actr.SerNr);
        end;
        if (nonblank(Actr.Contact)) then begin
          OutString(320,0,Actr.Contact,false);
        end else begin
          OutString(320,0,Actr.CUName,false);
        end;
        timet = blanktimet;
        if (Actr.CalTimeFlag==1) then begin
          if (nonblanktime(Actr.CostTime)) then begin
            vTimeDiff(timet,Actr.CostTime,timev);
          end else begin
            vTimeDiff(Actr.EndTime,Actr.StartTime,timev);
          end;  
          OutVal(440,0,timev,M4Val,true);
          tottimev = tottimev + timev;
          totv = totv + timev;
        end;          
        if (Actr.OKFlag!=0) then begin
          OutString(1,0,USetStr(6691),true);
        end;
        EndFormat;
        if (nonblank(Actr.Phone) or nonblank(Actr.CUCode) or nonblank(Actr.CUName)) then begin
          StartFormat(15);
          OutString(50,0,Actr.CUCode,false);
          OutString(150,0,Actr.CUName,false);
          OutString(320,0,Actr.Phone,false);
          EndFormat;
        end;
        if (RepSpec.ArtMode==1) then begin
          StartFormat(15);
          OutString(220,0,Actr.ActType,false);
          OutString(300,0,Actr.ActResult,false);
          EndFormat;
          StartFormat(10);
          EndFormat;
        end;        
        rwcnt = MatRowCnt(Actr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Actr,i,Actrw);
          StartFormat(15);
          OutString(50,0,Actrw.TextCode,false);
          if (WrapAndPrint(150,Actrw.Text,60)) then begin
            EndFormat;
          end;
        end;
        oldDate = Actr.TransDate;
        actcnt = actcnt + 1;
      end;
    end;
  end;
  if (firstdate==false) then begin
    Gray_Divider(0,1);
    StartFormat(15);
    OutVal(440,0,totv,M4Val,true);
    EndFormat;
  end;
  RETURN;
END;

global
procedure ActCalendarRn(record RcVc RepSpec)
BEGIN
  string 255 tstr,usersstr,name;
  LongInt actcnt,useractcnt;
  val tottimev,usertottimev;
  Integer rw,pos;
  record CalDispGroupBlock CalDispGroupRec;
  row CalDispGroupBlock CalDispGrouprw;
  Integer i,rwcnt;

  actcnt = 0;

  StartReportJob(USetStr(6950));
   rw = 1;
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   if (nonblank(RepSpec.f1)) then begin
     Header(rw,RepSpec.f1,1);
     rw = rw + 1;
   end;
   if (nonblank(RepSpec.AccStr)) then begin
     Header(rw,RepSpec.AccStr,1);
     rw = rw + 1;
   end;
  EndHeader;
  StartFormat(15);
  if (RepSpec.Notation>0) then begin
    OutString(0,"DblActPrev",USetStr(28150),false);
    OutString(80,"DblActNext",USetStr(28151),false);
    OutString(160,"DblActMonth",USetStr(28152),false);
    OutString(240,"DblActWeek",USetStr(28153),false);
    OutString(320,"DblActDay",USetStr(28154),false);
  end;
  EndFormat;

  StartFormat(15);
  OutString(0,"DblActNew",USetStr(6665),false);
  OutString(100,0,USetStr(6685),false);
  OutString(320,0,USetStr(6688),false);
  EndFormat;
  Black_Divider(0,1);
  if (blank(RepSpec.f1)) and (nonblank(RepSpec.AccStr)) then begin
    BlockLoad(CalDispGroupRec);
    rwcnt = MatRowCnt(CalDispGroupRec);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(CalDispGroupRec,i,CalDispGrouprw);
      if (CalDispGrouprw.Code==RepSpec.AccStr) then begin
        usersstr = CalDispGrouprw.DefStr;
        goto LBREAK;
      end;
    end;
LBREAK:;    
    pos = 0;
    ExtractObj(usersstr,pos,tstr);
    while (nonblank(tstr)) begin
      StartFormat(5);
      EndFormat;    
      StartFormat(15);
      OutString(0,0,USetStr(6684),false);
      OutString(100,0,tstr,false);
      GetUserName(tstr,name);
      OutString(200,0,name,false);
      EndFormat; 
      Gray_Divider(0,200);   
      useractcnt = 0;
      usertottimev = blankval;
      PrintUserActivities(RepSpec,tstr,usertottimev,useractcnt);
      Black_Divider(0,1);
      StartFormat(15);
       OutString(0,0,USetStr(6690),false);
       OutLongInt(120,0,useractcnt,false);
       OutString(280,0,USetStr(6683),false);
       OutVal(440,0,usertottimev,M4Val,true);  
      EndFormat;
      tottimev = tottimev + usertottimev;
      actcnt = actcnt + useractcnt;
      ExtractObj(usersstr,pos,tstr);
    end;
  end else begin
    PrintUserActivities(RepSpec,RepSpec.f1,tottimev,actcnt);
  end;
  Black_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(6690),false);
  OutLongInt(120,0,actcnt,false);
  OutString(280,0,USetStr(6793),false);
  OutVal(440,0,tottimev,M4Val,true);  
  EndFormat;
  EndJob;
  RETURN;
END;

global
procedure ActCalRn(record RcVc RepSpec)//the only reason is to not allow people to reopen report specification when one uses button on Calendar window
BEGIN
  ActCalendarRn(RepSpec);
  RETURN;
END;

