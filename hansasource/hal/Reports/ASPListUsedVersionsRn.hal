
function boolean IsVersionFromCloud(string vercode)
begin
  boolean res;
  record HansaVersionVc HVr;
  HVr.Code = vercode;
  res = ReadFirstMain(HVr,1,true);
  IsVersionFromCloud = res;
  return;
end;

global
procedure ASPListUsedVersionsRn(record RCVc RepSpec)
begin
  record RemoteCloudServerVc RCSr;
  Boolean TrHs,testf;
  record CloudNodeVc CNr;
  vector Integer vVer;
  array string 255 aList;
  Integer i;
  string 255 ver;

  StartReportJob("Used versions");
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,"Version",false);
  OutString(120,0,"Servers Using Version",false);
  EndFormat;
  StartFormat(1);
  Gray_Divider(0,1);
  EndFormat;

  while (LoopMain(RCSr,1,true)) begin
    testf = true;
    if (RCSr.Closed!=0) then begin testf = false; end;
    if (testf and (RCSr.OnDemandFlag==1) and (RepSpec.flags[0]==1)) then begin testf = false; end;
    if (testf and blank(RCSr.CUCode) and (RepSpec.flags[1]==1)) then begin testf = false; end;
    if (testf and IsVersionFromCloud(RCSr.HansaVersion)==false and (RepSpec.flags[2]==1)) then begin testf = false; end;
    if (testf) then begin
      CNr.Code = RCSr.Controller;
      if (ReadFirstMain(CNr,1,true)) then begin
        if (CNr.NodeType!=kCloudNodeTypeStandardCloudTest and RepSpec.flags[3]==1) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      vVer[RCSr.HansaVersion] = vVer[RCSr.HansaVersion] + 1;
    end;
  end;
  
  GetVectorTags(vVer,aList);
  
  for (i=0;i<aList.length;i=i+1) begin
    ver = aList[i];
    StartFormat(15);
    OutString(0,0,ver,false);
    OutString(120,0,vVer[ver],false);
    EndFormat;
  end;
  
  EndJob;
  
  return;
end;