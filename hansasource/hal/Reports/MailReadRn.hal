external procedure HTNr(Integer,Integer,LongInt,LongInt,var string);
external procedure FindMailboxName(LongInt,var string,var string);

global
procedure MailReadRn(record RcVc RepSpec)
BEGIN
  record MailReadVc mrr;
  string 255 username,tstr;
  Boolean TrHs;
  Integer rw;
  
  StartReportJob(USetStr(8140));
  HTNr(16807,16807,RepSpec.long1,RepSpec.long1,tstr);
  Header(rw,tstr,1)
  rw = rw + 1;
  EndHeader;
  SetRepCol(2,20);
  SetRepCol(3,270);
  SetRepCol(4,370);
  SetRepCol(5,440);
  SetRepCol(6,80);
  SetRepCol(7,150);
  StartFormat(15);
  OutString(2,0,USetStr(8141),false);
  OutString(3,0,USetStr(8142),false);
  OutString(4,0,USetStr(8143),false);
  OutString(5,0,USetStr(8144),false);
  EndFormat;
  Gray_Divider(0,1);
  mrr.mailSerNr = RepSpec.long1;
  TrHs = true;
  while (LoopMain(mrr,1,TrHs)) begin
    if (TrHs) then begin
      if (mrr.mailSerNr<>RepSpec.long1) then begin TrHs = false; end;
    end;  
    if (TrHs) then begin
      if (mrr.mailBoxNr>=0) then begin
        FindMailboxName(mrr.mailBoxNr,tstr,username);
        if (mrr.mailBoxNr==0) then begin
          if (blank(username)) then begin
            username = USetStr(8135);
          end;
        end;
      end else begin
        tstr = "System";
        username = "Adm";
        if (mrr.accode==kMailStatusReadByExternal) then begin
          username = USetStr(8125);
        end;
      end;
      StartFormat(15);
      OutLongInt(2,0,mrr.mailBoxNr,false);
      OutString(6,0,username,false);
      OutString(7,0,mrr.Comment,false);
      tstr = "";
      switch (mrr.accode) begin
        case kMailStatusRead:           tstr = USetStr(8145);
        case kMailStatusDeleted:        tstr = USetStr(8146);
        case kMailStatusCreated:        tstr = USetStr(8147);
        case kMailStatusUpdated:        tstr = USetStr(8148);
        case kMailStatusUnread:         tstr = USetStr(8139);
        case kMailStatusQueued:         tstr = USetStr(8137);
        case kMailStatusRouted:         tstr = USetStr(8138);
        case kMailStatusPrinted:        tstr = USetStr(8136);
        case kMailStatusReadByExternal: tstr = USetStr(8145);
        case kMailStatusPostponed:      tstr = USetStr(38540);
        case kMailStatusAccepted:       tstr = USetStr(38541);
        case kMailStatusRejected:       tstr = USetStr(38542);
        otherwise                       tstr = USetStr(8149);
      end;
      OutString(3,0,tstr,false);
      OutDate(4,0,mrr.fDate,false);
      tstr = mrr.fTime;
      OutString(5,0,mrr.fTime,false);
      EndFormat;
    end;
  end;
  EndJob;
  RETURN;
END;

//## this report SHOULD only run local in client!!!
global
procedure LocalMailReadRn(record RcVc RepSpec)
BEGIN
  record LocalMailReadVc mrr;
  string 255 username,tstr;
  Boolean TrHs;
  
  StartReportJob(USetStr(8140));
  EndHeader;
  SetRepCol(2,20);
  SetRepCol(3,280);
  SetRepCol(4,390);
  SetRepCol(5,440);
  SetRepCol(6,80);
  StartFormat(15);
  OutString(2,0,USetStr(8141),false);
  OutString(3,0,USetStr(8142),false);
  OutString(4,0,USetStr(8143),false);
  OutString(5,0,USetStr(8144),false);
  EndFormat;
  Gray_Divider(0,1);
  mrr.mailSerNr = RepSpec.long1;
  TrHs = true;
  while (LoopMain(mrr,1,TrHs)) begin
    if (TrHs) then begin
      if (mrr.mailSerNr<>RepSpec.long1) then begin TrHs = false; end;
    end;  
    if (TrHs) then begin
      if (mrr.mailBoxNr>=0) then begin
        FindMailboxName(mrr.mailBoxNr,tstr,username);
      end else begin
        tstr = "System";
        username = "Adm";
      end;
      StartFormat(15);
      OutLongInt(2,0,mrr.mailBoxNr,false);
      OutString(6,0,username,false);
      tstr = "";
      if (mrr.accode==0) then begin
        tstr = USetStr(8145);
      end;
      if (mrr.accode==1) then begin
        tstr = USetStr(8146);
      end;
      if (mrr.accode==2) then begin
        tstr = USetStr(8147);
      end;
      if (mrr.accode==3) then begin
        tstr = USetStr(8148);
      end;
      if (mrr.accode==4) then begin
        tstr = USetStr(8139);
      end;
      if (mrr.accode==7) then begin
        tstr = USetStr(8138);
      end;
      if (blank(tstr)) then begin
        tstr = USetStr(8149);
      end;
      OutString(3,0,tstr,false);
      OutDate(4,0,mrr.fDate,false);
      tstr = mrr.fTime;
      OutString(5,0,mrr.fTime,false);
      EndFormat;
    end;
  end;
  EndJob;
  RETURN;
END;
