// Commented out in the Interface. This needs to be written for Customer register instead of Contacts, and it has to be written in a better way...

external procedure HT2Per(Date,Date,var string);
external procedure HTCusts(string, string, var string);
external procedure HTCustCat(string,var string);

global
procedure ChatLogRn(record  RcVc RepSpec)
begin
  string 255 tstr;
  record ChatLogVc CLr;
  row ChatLogVc CLrw;
  longint i,rwcnt;


/*  record ContactRelVc ContactRelr;
  record CUVc CUr,mainCUr;*/
  date sdate,edate;
  array string 20 maincode; 
  array string 20 ccode;
  array string 10 wdate;
  string 20 workmaincode;
  string 20 workccode;
  string 10 fcat,lcat;
//  longint i,j,ars;
  string  10 startd,endd,workd,wd1,wd2;
  integer k;
//  record MailSettingsBlock MBr;
  string 20 indexname;
 
//  BlockLoad(MBr);
  sdate = RepSpec.sStartDate;
  edate = RepSpec.sEndDate;
  startd = datetostring(sdate,"MMDD");
  endd = datetostring(edate,"MMDD");
  fcat = FirstInRange(RepSpec.f1,5);
  lcat = LastInRange(RepSpec.f1,5);
  
  StartReportJob(USetStr(14730));
   
  HT2Per(sdate,edate,tstr);
  Header(1,tstr,1);
  k=2;
  if (nonblank(RepSpec.f1)) then begin
    HTCustCat(RepSpec.f1,tstr);
    Header(k, tstr, 1);
    k=k+1; 
  end; 
/*  if (RepSpec.flags[0]==1) then begin
    tstr = USetStr(10828) ; 
    Header(k, tstr, 1);
  end;   */
  EndHeader;
  i=0;
  indexname = "SerNr";
    
  SetRepCol(2,80);
  SetRepCol(3,200);
  SetRepCol(4,300);
  StartFormat(15);
  OutString(0,0,USetStr(14732),false);
  OutString(2,0,USetStr(14731),false);
  Endformat;

  While (LoopKey(indexname,CLr,1,true)) begin
   
    
    StartFormat(15);
    OutLongInt(0,0,CLr.SerNr,false);
    OutDate(2,0,CLr.StartDate,false);
//    OutDate(3,0,USetStr(10983),false);
//    OutString(1,0,USetStr(10984),true);
        rwcnt = MatRowCnt(CLr);
        for (i=0; i<rwcnt; i=i+1) begin
          MatRowGet(CLr,i, CLrw);
          StartFormat(15);
          OutString(20,0,CLrw.Person,false);
          OutString(80,0,CLrw.ChatText,false);
          EndFormat;
        end;


    Endformat;
  end;
/*      workd=datetostring(CUr.BirthDate,"MMDD");
      if (endd>=startd) then begin
        if (workd<startd) or (workd>endd)  then begin
          testf=false;
        end; 
      end else begin 
        if not ((workd>startd) or (workd<endd))  then begin
          testf=false;
        end;    
      end;     
      if (CUr.blockedFlag==1) and (RepSpec.flags[0]<>1) then begin
        testf=false;
      end;
    end;
    if (testf) then begin
      maincode[i]=mainCUr.Code;
      ccode[i]=CUr.Code;
      wdate[i]=workd;
      i=i+1;    
    end; 
      
  end;
  ars=i;
  
  SetRepCol(2,80);
  SetRepCol(3,200);
  SetRepCol(4,300);
   
    
  StartFormat(15);
  OutString(0,0,USetStr(10981),false);
  OutString(2,0,USetStr(10982),false);
  OutString(3,0,USetStr(10983),false);
  OutString(1,0,USetStr(10984),true);
  Endformat;
  StartFormat(15);
  OutString(0,0,USetStr(10985),false);
  OutString(2,0,USetStr(10986),false);
  OutString(3,0,USetStr(10987),false);
  Endformat;
  StartFormat(15); 
  OutString(0,0,USetStr(10988),false);
  OutString(2,0,USetStr(10989),false);
  OutString(3,0,USetStr(10990),false);
  OutString(1,0,USetStr(10991),true);
  Endformat;   
  Black_Divider(0,1);
   
 //Sort
  for(i=0;i<ars;i=i+1) begin
    for(j=i+1;j<ars;j=j+1) begin
      if (endd>=startd) then begin
        if (wdate[j]<wdate[i]) then begin
          workmaincode=  maincode[i];
          workccode= ccode[i];
          workd=wdate[i];
          maincode[i]=maincode[j];
          ccode[i]= ccode[j];
          wdate[i]=wdate[j];
          maincode[j]=workmaincode;
          ccode[j]=workccode;
          wdate[j]=workd;           
        end;
      end else begin
        if (wdate[j]>startd) then begin 
          wd1="0" & wdate[j];
        end else begin
          wd1="9" & wdate[j];
        end;
        if (wdate[i]>startd)  then begin
          wd2="0" & wdate[i];
        end else begin
          wd2="9" & wdate[i];
        end;
        if (wd1<wd2) then begin
          workmaincode=  maincode[i];
          workccode= ccode[i];
          workd=wdate[i];
          maincode[i]=maincode[j];
          ccode[i]= ccode[j];
          wdate[i]=wdate[j];
          maincode[j]=workmaincode;
          ccode[j]=workccode;
          wdate[j]=workd;           
        end;
      end;  
    end;
  end;
   
  for (i=0;i<ars;i=i+1) begin  
 //   ResetLoop(CUr);
    CUr.Code= ccode[i];
    mainCUr.Code = maincode[i];
    if (ReadFirstMain(CUr,1,true) and (ReadFirstMain(mainCUr,1,true))) then begin
      StartFormat(15);
      OutString(0,0, Right(wdate[i],2) & "/" & left(wdate[i],2),false);     
      OutStringID(2,"DblContCUVc",CUr.Name,false,CUr.Code);
      OutString(3,0,CUr.Title,false);
      OutDate(1,0,CUr.BirthDate,true);
      Endformat;
      StartFormat(15);
      OutString(0,"DblCUVc",mainCUr.Code,false);
      OutString(2,0,mainCUr.Name,false);
      OutString(3,0,mainCUr.Department,false);
      Endformat;   
      StartFormat(15); 
      OutString(0,0,CUr.Phone,false);
      OutString(2,0,CUr.Mobile,false);
      OutString(3,0,CUr.Fax,false);
      if (blank(CUr.eMail)) then begin
        OutString(1,0,USetStr(2289),true);
      end else begin
        if (MBr.ExclEmail==0) then begin
          OutString(1,0,CUr.eMail,true);
        end;
      end;
      Endformat;   
      StartFormat(15);
      OutString(0,0,CUr.InvAddr0,false);
      OutString(3,0,CUr.InvAddr1,false);
      OutString(1,0,CUr.InvAddr2,true);
      Endformat;    
      StartFormat(15);
      tstr=CUr.Code & "|" & mainCUr.Code ;
      OutStringID(1,"DblBDReminder",USetStr(10992),true,tstr); // Take care of CreateBDReminder as well
      Endformat;    
    end;
    Gray_Divider(0,1);    
  end; */
  endjob;
  
  return;
end;

