external procedure HT2Per(Date, Date , var string);

procedure PrintPayModeArray(string comment,var array string paydealsuma,var array val sumforpdsuma,Integer pcnt,Date lastdat,Time lasttim,Boolean drilldown)
begin
  Integer i;
  Boolean testf;
  record CashierBalVc CashierBalr;
  
  for (i=0;i<pcnt;i=i+1) begin
    StartFormat(15);
    OutString(3,0,comment,false);
    OutString(5,0,paydealsuma[i],false);
    testf = drilldown;
    if (testf) then begin
      RecordNew(CashierBalr);
      CashierBalr.TransDate = lastdat;
      CashierBalr.TransTime = lasttim;
      if (ReadFirstKey("TransDate",CashierBalr,2,false)) then begin
        if ((CashierBalr.TransDate>lastdat) or ((CashierBalr.TransDate==lastdat) and (CashierBalr.TransTime>lasttim))) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      OutStringID(1,"DblNewCashier",sumforpdsuma[i],true,paydealsuma[i]);
    end else begin
      OutString(1,0,sumforpdsuma[i],true);
    end;
    EndFormat;
  end;
  return;
end;

procedure ClearPayModeArray(var array val sumforpdsuma,Integer pcnt)
begin
  Integer i;
  
  for (i=0;i<pcnt;i=i+1) begin
    sumforpdsuma[i] = 0;
  end;
  return;
end;

procedure PrintCashierLine(record CashierBalVc CashierBalr,string comment)
begin
  row CashierBalVc CashierBalrw;
  Integer rwcnt,i;
  
  rwcnt = MatRowCnt(CashierBalr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CashierBalr,i,CashierBalrw);
//    if (CashierBalrw.Amount>0) then begin
      StartFormat(15);
      OutString(2,0,CashierBalr.UserCode,false);
      OutString(3,0,comment,false);
      OutString(5,0,CashierBalrw.PMCode,false);
      OutDate(6,0,CashierBalr.TransDate,false);
      OutString(8,0,CashierBalr.TransTime,false);
      OutVal(1,0,CashierBalrw.Amount,M4Val,true);
      EndFormat;
//    end;
  end;
  return;
end;

procedure FillPayDealArray(var array string paydeala,var array val sumforpda,var Integer pcnt)
begin
  Record RestPMBlock RPMr;
  row RestPMBlock RPMrw;
  Integer i,rwcnt;

  pcnt = 0;
  BlockLoad(RPMr);
  rwcnt = MatRowCnt(RPMr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(RPMr,i,RPMrw);
    if (nonblank(RPMrw.PMCode)) then begin
      paydeala[pcnt] = RPMrw.PMCode;
      sumforpda[pcnt] = BlankVal;
      pcnt = pcnt + 1;
    end;
  end;
  return;
end;

procedure AddToPayModeArray(string pd,val sum,var array string paydeala,var array val sumforpda,Integer pcnt,Boolean negf)
begin
  Integer i;

  for (i=0;i<pcnt;i=i+1) begin
    if (paydeala[i]==pd) then begin
      if (negf) then begin
        sumforpda[i] = sum - sumforpda[i];
      end else begin
        sumforpda[i] = sumforpda[i] + sum;
      end;
    end;
  end;
  return;
end;

procedure AddCashierToPayModeArray(record CashierBalVc CashierBalr,var array string paydealsuma,var array val sumforpdsuma,Integer pcnt)
begin
  row CashierBalVc CashierBalrw;
  Integer rwcnt,i;
  
  rwcnt = MatRowCnt(CashierBalr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CashierBalr,i,CashierBalrw);
    if (CashierBalrw.Amount>0) then begin
      AddToPayModeArray(CashierBalrw.PMCode,CashierBalrw.Amount,paydealsuma,sumforpdsuma,pcnt,true);
    end;
  end;
  return;
end;

global
procedure BarCashRn(record RcVc RepSpec)
begin
  Record CashierBalVc CashierBalr;
  record RestAccVc Bar;
  Boolean TsHr,Skip,cashiercountfound,cashierprintedf;
  String 50 tstr;
  Val tt;
  Integer rw;
  Integer i;
  array date data;
  array time timea;
  array Integer printeda;
  Integer ccnt;
  array string 10 paydealsuma;
  array val sumforpdsuma;
  array string 10 paydealnega;
  array val sumforpdnega;
  Integer pcnt;
  Integer keys;
  string 60 key;
  Date startdate,enddate;
  Time starttime;
  Boolean foundone;
  Time lasttim;
  Date lastdat;
  
  cashiercountfound = false;
  cashierprintedf = false;
  foundone = false;
  tt = 0;
  StartReportJob(USetStr(10070));
  rw = 1;
  startdate = RepSpec.sStartDate;
  enddate = RepSpec.sEndDate;
  HT2Per(startdate,enddate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  StartFormat(15);
  EndFormat;
  SetRepCol(2,55);
  SetRepCol(3,110);
  SetRepCol(4,180);
  SetRepCol(8,230);
  SetRepCol(5,245);
  SetRepCol(6,290);
  SetRepCol(7,480);
  SetRepCol(8,360);
  FillPayDealArray(paydealsuma,sumforpdsuma,pcnt);
  FillPayDealArray(paydealnega,sumforpdnega,pcnt);
  StartFormat(15);
  OutString(5,0,USetStr(10071),false);  
  OutString(0,0,USetStr(10072),false);
  OutString(2,0,USetStr(10073),false);
  OutString(3,0,USetStr(10074),false);  
  OutString(4,0,USetStr(10075),false);
  OutString(5,0,USetStr(10076),false);  
  OutString(6,0,USetStr(10077),false);  
  OutString(7,0,USetStr(10078),true);
  EndFormat;
  Gray_Divider(0,1);
  if (RepSpec.flags[4]!=0) then begin
    CashierBalr.TransDate = startdate;
    cashiercountfound = LoopKey("TransDate",CashierBalr,1,true);
    if (cashiercountfound) then begin
      startdate = CashierBalr.TransDate;
      starttime = CashierBalr.TransTime;
      PrintCashierLine(CashierBalr,"Last Cashier Count");
      cashierprintedf = true;
      Gray_Divider(0,1);
      StartFormat(15);
      EndFormat;
      Black_Divider(0,1);
    end;
  end;
   
  if (RepSpec.flags[4]!=0) then begin
    Bar.TransDate = startdate;
    Bar.TransTime = starttime;
    key = "TransDate";
    keys = 2;
  end else begin
    Bar.TransDate = startdate;
    key = "MachineName";
    keys = 1;
  end;
  TsHr = true;
  while (LoopKey(key,Bar,keys,TsHr)) begin
    Skip = false;
    If (Bar.TransDate>enddate) then begin
      Skip = true;
      TsHr = false;
    end;
    if (RepSpec.flags[2] == 0) then begin
      if (Bar.Closed == 0) then begin
        Skip = true;
      end;
    end;
    if ((RepSpec.f1 <> Bar.MachineName) and (not Blank(RepSpec.f1))) then begin
      Skip = true;
    end;
    if ((RepSpec.f2 <> Bar.Cashier) and (not Blank(RepSpec.f2))) then begin
      Skip = true;
    end;
    if ((RepSpec.f3 <> Bar.PayDeal) and (not Blank(RepSpec.f3))) then begin
      Skip = true;
    end;
    if (RepSpec.flags[3]==0) then begin
      if (nonblank(Bar.Resource)) then begin
        Skip = true;
      end;
    end;
    if (Skip==false) then begin
    if (cashiercountfound) then begin
      if (cashierprintedf) then begin
        cashiercountfound = LoopKey("TransDate",CashierBalr,1,true);
        if (CashierBalr.TransDate>enddate) then begin
          cashiercountfound = false;
        end;
        cashierprintedf = false;
      end;
    end;
      foundone = true;
      if (RepSpec.flags[1]==0) then begin
        if (cashiercountfound) then begin
          if (cashierprintedf==false) then begin
            if ((CashierBalr.TransDate<Bar.TransDate) or ((CashierBalr.TransDate==Bar.TransDate) and (CashierBalr.TransTime<Bar.TransTime))) then begin
              Gray_Divider(0,1);
              PrintCashierLine(CashierBalr,"Cashier Count");
              PrintPayModeArray(USetStr(8513),paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,false);
              AddCashierToPayModeArray(CashierBalr,paydealsuma,sumforpdsuma,pcnt);
              PrintPayModeArray("Net Total",paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,false);
              ClearPayModeArray(sumforpdsuma,pcnt);
              StartFormat(15);
              EndFormat;
              Black_Divider(0,1);
              cashierprintedf = true;
            end;
          end;
        end;
        StartFormat(15);
        OutString(0,0,Bar.MachineName,false);
        OutString(2,0,Bar.Cashier,false);
        OutStringOvst(3,0,Bar.SerNr,false,Bar.Invalid); 
        OutString(4,0,Bar.CustCode,false);
        OutString(5,0,Bar.PayDeal,false);
        OutDate(6,0,Bar.TransDate,false);
        OutString(8,0,Bar.TransTime,false);
        OutValOvst(7,0,Bar.Sum4,M4Val,true,Bar.Invalid);
        EndFormat;
        lastdat = Bar.TransDate;
        lasttim = Bar.TransTime;
      end;
      if (Bar.Invalid==0) then begin
        AddToPayModeArray(Bar.PayDeal,Bar.Sum4,paydealsuma,sumforpdsuma,pcnt,false);
      end;
    end;
  end;
  if (RepSpec.flags[4]!=0) then begin
    if (foundone) then begin
      Gray_Divider(0,1);
    end;
    if (cashiercountfound) then begin
      if (cashierprintedf==false) then begin
        PrintCashierLine(CashierBalr,"End Cashier Count");
        PrintPayModeArray(USetStr(8513),paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,false);
        AddCashierToPayModeArray(CashierBalr,paydealsuma,sumforpdsuma,pcnt);
        PrintPayModeArray("Net Total",paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,false);
        ClearPayModeArray(sumforpdsuma,pcnt);
      end else begin
        PrintPayModeArray(USetStr(8513),paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,true);
      end;
    end else begin
      PrintPayModeArray(USetStr(8513),paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,true);
    end;
  end else begin
    Gray_Divider(0,1);
    PrintPayModeArray(USetStr(8513),paydealsuma,sumforpdsuma,pcnt,lastdat,lasttim,false);
  end;
  EndJob;
  return;
end;


