global
function Boolean FindHRMCOChange(LongInt conr,var record HRMCOChangeVc resHRMCOCr)
begin
  Boolean res,found,testf;
  record HRMCOChangeVc HRMCOCr;
  
  RecordClear(resHRMCOCr);
  found = true;
  HRMCOCr.HRMCOSerNr = conr;
  while (LoopKey("HRMCONrDate",HRMCOCr,1,found)) begin
    if (found) then begin
      testf = true;
      if (HRMCOCr.OKFlag==0) then begin testf = false; end;
      if (testf) then begin
        RecordCopy(resHRMCOCr,HRMCOCr);
        res = true;
        found = false;
      end;
    end;
  end;
  FindHRMCOChange = res;
  return;
end;

global
procedure HRMCODataRn(record RcVc RepSpec)
begin
  LongInt frhrmco,tohrmco;
  record HRMCOVc HRMCOr;
  record HRMCOChangeVc HRMCOCr;
  Boolean found,testf,hrmcocf;
  string 255 ckey;

  StartReportJob(USetStr(19180));
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,130);
  SetRepCol(4,190);
  SetRepCol(5,300);
  SetRepCol(6,430);

  frhrmco = FirstInRange(RepSpec.f1,10);
  tohrmco = LastInRange(RepSpec.f1,10);

  ckey = "SerNr";
  HRMCOr.SerNr = frhrmco;
  found = true;
  while (LoopKey(ckey,HRMCOr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (HRMCOr.SerNr>tohrmco) then begin found = false; end;
    end;
    if (found) then begin
      testf = true;
//      testf = TestSelection(HRMCOr,RepSpec);
      if (testf) then begin
//        HRMCOCr.HRMCOSerNr = HRMCOr.SerNr;
//        hrmcocf = ReadLastKey("HRMCONrDate",HRMCOCr,1,true);
//        if (HRMCOCr.HRMCOSerNr!=HRMCOr.SerNr) then begin
//          hrmcocf = false;
//        end;
        hrmcocf = FindHRMCOChange(HRMCOr.SerNr,HRMCOCr);
        if (hrmcocf) then begin
          HRMCOr.TrialEndDate = HRMCOCr.TrialEndDate;
          HRMCOr.Class = HRMCOCr.Class;
          HRMCOr.JobTitle = HRMCOCr.JobTitle;
          HRMCOr.Comment = HRMCOCr.Comment;
          HRMCOr.SalaryType = HRMCOCr.SalaryType;
          HRMCOr.GrossSalary = HRMCOCr.GrossSalary;
          HRMCOr.CurncyCode = HRMCOCr.CurncyCode;
          HRMCOr.DepCode = HRMCOCr.DepCode;
          HRMCOr.LeaveScheme = HRMCOCr.LeaveScheme;
        end;
        StartFormat(15);
         OutString(0,0,USetStr(19190),false);
         OutString(2,0,USetStr(19191),false);
         OutString(3,0,USetStr(19182),false);
         OutString(4,0,USetStr(19183),false);
         OutString(5,0,USetStr(19192),false);
         OutString(6,0,USetStr(19184),false);
        EndFormat;
        Gray_Divider(0,1);
        StartFormat(15);
         OutString(0,"DblHRMCOVc",HRMCOr.SerNr,false);
         OutDate(2,0,HRMCOr.StartDate,false);
         OutString(3,0,HRMCOr.Employee,false);
         OutString(4,0,HRMCOr.Name,false);
         OutString(5,0,HRMCOr.JobTitle,false);
         OutString(6,0,HRMCOr.DepCode,false);
        EndFormat;
        Gray_Divider(0,1);
        StartFormat(15);
         OutString(0,0,USetStr(19195),false);
         OutDate(2,0,HRMCOr.TrialEndDate,false);
         OutString(3,0,USetStr(19196),false);
         OutDate(4,0,HRMCOr.EndDate,false);
         OutString(5,0,USetStr(19207),false);
         OutString(370,0,HRMCOr.LeaveScheme,false);
        EndFormat;          
        StartFormat(15);
         OutString(0,0,USetStr(19197),false);
         OutString(2,0,StringFromSet(470,HRMCOr.Reason),false);
         OutString(3,0,USetStr(19198),false);
         OutString(4,0,HRMCOr.ReasonDetails,false);
        EndFormat;          
        StartFormat(15);
         OutString(0,0,USetStr(19200),false);
         OutString(2,0,StringFromSet(463,HRMCOr.SalaryType),false);
         OutString(3,0,USetStr(19201),false);
         OutVal(4,0,HRMCOr.GrossSalary,M4Val,false);
         OutString(5,0,USetStr(19202),false);
         OutString(370,0,HRMCOr.CurncyCode,false);
        EndFormat;          
        if (nonblank(HRMCOr.Comment)) then begin
          StartFormat(15);
           OutString(0,0,USetStr(19199),false);
           OutString(2,0,HRMCOr.Comment,false);
          EndFormat;          
        end;
      end;
    end;
  end;
  
  EndJob;
  return;
end;