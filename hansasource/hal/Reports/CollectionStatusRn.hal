external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);

global procedure CollectionStatusRn(record RcVc RepSpec)
begin
  record CollectionVc Collectionr;
  boolean TrHs,testf;
  string 255 tstr;
  val rw, qty;
  
  StartReportJob(USetStr(13080));
  rw = 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(13081) & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(13082) & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTCustCat(RepSpec.f5,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTCustClass(RepSpec.f4,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (RepSpec.Comparison == 0) then begin
    tstr = USetStr(13083);
    Header(rw,tstr,1);
  end;
  if (RepSpec.Comparison == 1) then begin
    tstr = USetStr(13084);
    Header(rw,tstr,1);
  end;
  if (RepSpec.Comparison == 2) then begin
    tstr = USetStr(13085);
    Header(rw,tstr,1);
  end;
  EndHeader;

  StartFormat(15);
  OutString(0,0,USetStr(13086),false);
  OutString(60,0,USetStr(13087),false);
  OutString(150,0,USetStr(13088),false);
  OutString(250,0,USetStr(13089),false);
  if (blank(RepSpec.f1)) then begin
    OutString(440,0,USetStr(13090),false);
  end;
  EndFormat;
  Gray_Divider(0,1);  
  TrHs = true;
  Collectionr.OKFlag = 0;
  while LoopKey("OKFlag",Collectionr,1,TrHs) begin
    if (TrHs) then begin
      if (Collectionr.OKFlag > 0) then begin
        TrHs = false;  
      end;
    end;
    if (TrHs) then begin
      testf = true;     
      if (nonblank(RepSpec.f1)) then begin
        if (RepSpec.f1 <> Collectionr.Location) then begin
           testf = false;      
        end;    
      end;
      if (RepSpec.Comparison == 1) then begin
        if (Collectionr.Ordered == 0) then begin
          testf = false;
        end;
      end;
      if (RepSpec.Comparison == 2) then begin
        if (Collectionr.Ordered == 1) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (Collectionr.CustCode <> RepSpec.f2) then begin
          testf = false;
        end;
      end;
      if (testf) then begin 
        testf = ContactInGroupClass(Collectionr.CustCode,RepSpec.f5,RepSpec.f4,"CUST","","");
      end;
      if (testf) then begin
        StartFormat(15);
        OutStringID(0,"DblCollectionVc",Collectionr.SerNr,false,Collectionr.SerNr);
        OutString(60,0,Collectionr.TransDate,false);
        OutString(150,"DblAgreementVc",Collectionr.AgreementNr,false);  
        OutString(250,0,Collectionr.CustCode,false);
        OutString(300,0,Collectionr.Addr0,false);
        if (blank(RepSpec.f1)) then begin
          OutString(440,0,Collectionr.Location,false);
        end;
        EndFormat;
        qty = qty + 1;
      end;    
  
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(13091),false);
  OutVal(80,0,qty,M40Val,false);
  EndJob;
return;
end;