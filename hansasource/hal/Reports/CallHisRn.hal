#ifdef hal

external Procedure GetCustName(String,var String);
external Procedure GetAInvNr(LongInt,Var String,Var Boolean);
external Procedure GetVatRegPL(String,var String,var String,var String,var String,var String);

global
procedure CallHisRn(var record RcVc RepSpec)
begin
  Integer i;
  record TelCallsVc Callr;
  record CallTypeVc CallTyper;
  record JobVc Jobr;
  Boolean TsHr,Skip,Dummy;
  String 50 tstr,custname,ArgInvNr;
  Integer keys;
  Integer rw;
  String 20 mykey;
  String 100 HdrStr;
  Integer HdrLn;
  Val totprice, price;

  TsHr = true;
  if blank(RepSpec.sEndDate) then begin
    goto L99;
  end;
   
  StartReportJob(USetStr(10150));
  if (nonblank(RepSpec.f3)) then begin
    Jobr.SerNr = FirstInRange(RepSpec.f3,10);
    if (ReadFirstMain(Jobr,1,true)) then begin
      tstr = USetStr(10153) & " " & Jobr.ResCode;
    end;
  end else begin
    tstr = USetStr(10158);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  
  SetRepCol(2,0);
  SetRepCol(3,55);
  SetRepCol(4,130);
  SetRepCol(5,180);
  SetRepCol(6,245);
  SetRepCol(7,330);
  SetRepCol(8,480);

  StartFormat(15);
  OutString(2,0,USetStr(10151),false); 
  OutString(3,0,USetStr(10152),false);
  OutString(4,0,USetStr(10153),false);
  OutString(5,0,USetStr(10154),false);
  OutString(6,0,USetStr(10155),false);
  OutString(7,0,USetStr(10156),false);
    if (RepSpec.flags[2]==0) then begin
      OutString(8,0,USetStr(9674),true);  
    end else begin
      OutString(8,0,USetStr(10157),true);  
    end;    
  EndFormat;

  Gray_Divider(0,1);

  keys = 2;
  if (RepSpec.flags[1]==0) then begin
    mykey = "TransDate";
  end;
  if (RepSpec.flags[1]==1) then begin
    mykey = "ResCode";
  end;
  if (nonblank(RepSpec.f3)) then begin
    Jobr.SerNr = FirstInRange(RepSpec.f3,10);
    if (ReadFirstMain(Jobr,1,true)) then begin
      RepSpec.sStartDate = Jobr.TransDate;
      RepSpec.sEndDate = Jobr.EndDate;
      RepSpec.f2 = Jobr.ResCode;
      Callr.ResCode = RepSpec.f2;
      mykey = "ResCode";
    end;    
  end;

  while (LoopKey(mykey,Callr,keys,TsHr)) begin   
    Skip = false;
      If ((Callr.TransDate>RepSpec.sEndDate) or (Callr.TransDate<RepSpec.sStartDate)) then begin
          Skip = true;
      end;
      if ((RepSpec.f1<>Callr.Type) and (not Blank(RepSpec.f1))) then begin
        Skip = true;
      end;
      if (nonblank(RepSpec.f3)) then begin
        if (RepSpec.f2<>Callr.ResCode) then begin
          TsHr = false;
          Skip = true;
        end;
      end else begin
      if ((RepSpec.f2<>Callr.ResCode) and (not Blank(RepSpec.f2))) then begin
        Skip = true;
      end;
    end;
    if (RepSpec.flags[2]==0) then begin
      CallTyper.Code = Callr.Type;
      if (ReadFirstMain(CallTyper,1,true)) then begin
        price = Callr.Cost / 100 * CallTyper.Markup1 + CallTyper.Markup2;
      end;
    end else begin
      price = Callr.Cost;
    end;    
    If (not Skip) then begin
      StartFormat(15);
      OutDate(2,0,Callr.TransDate,false);
      OutString(3,0,Callr.TransTime,false);
      OutString(4,0,Callr.ResCode,false);
      OutString(5,0,Callr.Type,false); 
      OutString(6,0,Callr.Duration,false);
      if (RepSpec.flags[4] == 0) then begin
        OutString(7,0,Callr.Number,false);
      end;
      OutVal(8,0,price,M4Val,true);         
      EndFormat;
      totprice = totprice + price;
    end;
  end;

  Gray_Divider(0,1);

  StartFormat(15);
  OutString(2,0,USetStr(8513),false);
  OutVal(8,0,totprice,M4Val,true);
  EndFormat;
  EndJob;

L99:;

  return;
end;


#endif
