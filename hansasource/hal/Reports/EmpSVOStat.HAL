external function boolean CheckItemGroupClassification(string,string,string);external procedure HTItemClass(string,var string);external procedure HTArtSel(string,string, var string);globalprocedure SVOEMStatRn(record RcVc RepSpec)begin   record PErsVc per;   record TBIVVc TBIVr;   record TSVC Tsr;   record WSVc wksh;   Row WSVc wkshrw;   Row TSVc TSrw;   Boolean TsHr,Skip,Skip2;    Integer p1,p2,p3,p4,p5,p6,p7,p8;   Val total,price,rtot,qty,ptotal;   Integer j,rows,nrkeys;   String 30 Itemres,itemgroupres,mykey,lstper,tstr;   Integer rw;   // Positions   p1= 0;   p2= 45;   p3= 125;   p4= 185;   p5= 270;    p6= 370;   p7= 430;     p8= 480;      // Get parameters & Init   total = 0;   ptotal = 0;   TsHr = true;      StartReportJob(USetStr(4881));   rw = 1;   if (nonblank(RepSpec.f2) or nonblank(RepSpec.f3)) then begin     HTArtSel(RepSpec.f3,RepSpec.f2,tstr);     Header(rw,tstr,1);     rw = rw + 1;   end;   if (nonblank(RepSpec.f8)) then begin      HTItemClass(RepSpec.f8,tstr);     Header(rw,tstr,1);       rw = rw + 1;     end;   EndHeader;   StartFormat(15);   OutString(p1,0,USetStr(7601),false);   OutString(p2,0,USetStr(4882),false);   OutString(p3,0,USetStr(6807),false);   OutString(p4,0,USetStr(4884),false);   OutString(p5,0,USetStr(8621),false);   OutString(p6,0,USetStr(4885),true);   OutString(p7,0,USetStr(3546),true);     OutString(p8,0,USetStr(4887),true);     EndFormat;     Gray_Divider(0,1);   // sort out inconsistencies item - itemgroup   if nonblank(RepSpec.f3) then begin     itemres = RepSpec.f3;   end else begin     if nonblank(RepSpec.f2) then begin       Itemgroupres = RepSpec.f2;     end;     end;    if nonblank(RepSpec.f1) then begin     per.Person = RepSpec.f1;     per.Date   = RepSpec.sStartDate;     nrkeys     = 2;     mykey = "MainKey";     if nonblank(itemres) then begin       per.Item = Itemres;       nrkeys     = 3;     end;     if nonblank(itemgroupres) then begin       mykey = "INGroup";       per.INGroup = Itemgroupres;       nrkeys = 3;     end;   end else begin     nrkeys     = 1;     mykey = "MainKey";   end;   TsHr = true;   while (LoopKey(mykey,per,nrkeys,TsHr)) begin        Skip = false;     If ((per.Date>RepSpec.sEndDate) or (per.Date<RepSpec.sStartDate)) then begin       Skip = true;     end;     if ((itemres <> per.Item) and (not Blank(itemres))) then begin       Skip = true;     end;     if ((RepSpec.f1 <> per.Person) and (not Blank(RepSpec.f1))) then begin       Skip = true;     end;     if (CheckItemGroupClassification(per.Item,RepSpec.f2,RepSpec.f8)==false) then begin        Skip = true;     end;     /*      if ((Itemgroupres <> per.INGroup) and (not Blank(Itemgroupres))) then begin       Skip = true;     end;     */     if ((RepSpec.ArtMode==0) and ("WSVc" <> per.FileName)) then begin       Skip = true;     end;     If (not Skip) then begin       if (nonblank(lstper) and (lstper<>per.Person)) then begin         Gray_Divider(0,1);         StartFormat(15);         OutString(p1,0,USetStr(7823),false);         OutVal(p8,0,ptotal,M4Val,true);         EndFormat;         ptotal = 0;       end;       lstper=per.Person;            if (per.FileName=="WSVc") then begin         StartFormat(15);         OutString(p1,0,per.TSSerNr,false);         OutDate(p2,0,per.Date,false);         OutString(p3,0,per.Person,false);         OutString(p4,0,per.Item,false);         switch (per.FileName) begin           case "WSVc" : tstr = USetStr(8270);           case "TSVc" : tstr = USetStr(12575);           case "ActVc" : tstr = USetStr(12576);         end;         OutString(p5,0,tstr,false);         wksh.SerNr = per.TSSerNr;                if ReadFirstMain(wksh,1,true) then begin	       rows = MatRowCnt(wksh);  	       qty = 0; rtot = 0;  	       for (j=0;j<rows;j=j+1) begin		     MatRowGet(wksh,j,wkshrw);		     if (per.Item==wkshrw.ArtCode) then begin		       qty  = qty + wkshrw.Quant;               rtot = rtot + wkshrw.Sum;             end;           end;             total = total + rtot;           ptotal = ptotal + rtot;           price = rtot/qty;	         OutVal(p6,0,qty,M4Qty,true);           OutVal(p7,0,price,M4Val,true);           OutVal(p8,0,rtot,M4Val,true);                    EndFormat;         end;          end;       if (per.FileName=="TSVc") then begin               StartFormat(15);         OutString(p1,0,per.TSSerNr,false);         OutDate(p2,0,per.Date,false);         OutString(p3,0,per.Person,false);         OutString(p4,0,per.Item,false);         switch (per.FileName) begin           case "WSVc" : tstr = USetStr(8270);           case "TSVc" : tstr = USetStr(12575);           case "ActVc" : tstr = USetStr(12576);         end;         OutString(p5,0,tstr,false);         Tsr.SerNr = per.TSSerNr;         if ReadFirstMain(Tsr,1,true) then begin	       rows = MatRowCnt(Tsr);	       qty = 0; rtot = 0;	       for (j=0;j<rows;j=j+1) begin	  	     MatRowGet(Tsr,j,TSrw);             if ((per.Item==TSrw.ArtCode) and (per.Person==TSrw.EMCode) and (per.PRCode==TSrw.PRCode) and (per.Date==TSrw.date)) then begin               TBIVr.PRCode = TSrw.PRCode;               TBIVr.oVc = 1;               TBIVr.SerNr = Tsr.SerNr;               TBIVr.Row = j;               TBIVr.ArtCode = TSrw.ArtCode;               TBIVr.EMCode = TSrw.EMCode;               TBIVr.ChildNr = -1;               if (ReadFirstMain(TBIVr,0,true)) then begin		         qty  = qty + TBIVr.Qty;                 rtot = rtot + TBIVr.Sum;               end;             end;           end;           end;         total = total + rtot;         ptotal = ptotal + rtot;         price = rtot/qty;         OutVal(p6,0,qty,M4Qty,true);         OutVal(p7,0,price,M4Val,true);         OutVal(p8,0,rtot,M4Val,true);         EndFormat;       end;        end;   end; // while  // Footer  Gray_Divider(0,1);  StartFormat(15);  OutString(p1,0,USetStr(7823),false);  OutVal(p8,0,ptotal,M4Val,true);  EndFormat;  EndFormat;  Black_Divider(0,1);  StartFormat(15);  OutString(p1,0,USetStr(4837),false);  OutVal(p8,0,total,M4Val,true);  EndFormat;L99:;  EndJob;  return;end;