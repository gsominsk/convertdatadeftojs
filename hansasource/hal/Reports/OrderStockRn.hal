external function Integer InString2(string,string);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure SetupVATBase(var record SMVc,var Integer);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure CalcVATBaseVAT(record SMVc,Integer,Integer,Integer,var val,var val);
external function Boolean HasMultiCurrency();
external procedure HTOKF(Integer,Integer, var string);
external function Boolean TestArtCodeMatch(string,string);
external procedure CalcGPProc(var val,val,var string);
external procedure SetupOrder_OrderStockRn(record ORVc,Integer,record MainStockBlock);
external function Boolean SetInSet2(string,string);
external function Boolean FindItemVAR(string,var string,var string,var string,var string);
external function Integer CountObjects(string);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure GetStockValue(string,string,var record ItemStatusVc);
external procedure BeginCurncyTotals(var Integer);
external procedure AddCurncyTotals(var array string,var array val,var Integer,string,val);
external procedure PrintCurncyTotals(array string,array val,array val,array val,Integer,Integer,Integer,Integer,Integer,Boolean,Integer);
external procedure HTOrder(LongInt, LongInt, var string);
external procedure HTOrdStatus(integer, integer, integer,Integer,var string);
external procedure HTArtSel(string,string, var string);
external procedure HTDetailLevel(Integer, var string);
external procedure HTSaleMan(string, var string);
external procedure HTObj(string,var string);
external function Boolean CheckPlanShipRows(string,record ORVc);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure FindSalesExVat(record TaxMatrixVc,string,val,Integer,Integer,var val);
external function Boolean CheckPlanShip(string,string);
external procedure OrderStockComp(record RcVc);

function Boolean OrdRowMatchFlags(record ORVc ORr,Integer rownr,var val t,Integer notship,Integer partship,Integer notinvd,Integer showinvd,Integer inpick)
begin
  row ORVc ORrw;
  Boolean testf;
  Integer locnotship,locpartship,locnotinvd;
  val shpd;

  MatRowGet(ORr,rownr,ORrw);
  if (notship!=0) then begin
    if (ORrw.Shipd2==0) then begin testf = true; end;
  end;
  if (partship!=0) then begin
//    if ((ORr.ShipFlag==0) and ((ORr.InvFlag==0) or (ORr.InvFlag==2))) then begin
    if ((ORrw.Shipd2<ORrw.Quant) and ((ORr.InvFlag==0) or (ORr.InvFlag==2))) then begin
      if (ORr.InvBeforeShip==0) then begin
        testf = true;
      end;
    end;  
  end;
  if (inpick!=0) then begin
    if (ORrw.Shipd1!=ORrw.Shipd2) then begin testf = true; end;
  end;
/*  
  if (ORrw.Shipd2!=0) then begin
    shpd = ORrw.Shipd2;
  end else begin
    shpd = ORrw.Shipd1;
  end;  
  locnotship = 0;
  locpartship = 0;
  if (ORr.InvBeforeShip==0) then begin  
    t = shpd - ORrw.Invd;
  end else begin
    t = ORrw.Quant - ORrw.Invd;
  end;
  if (t!=0) then begin locnotinvd = 1; end;
  if (shpd!=0) then begin
    if (shpd!=ORrw.Quant) then begin locpartship = 1; end;
  end;  
  if (shpd==0) then begin locnotship = 1; end;
  if (notship!=0) then begin
    if (locnotship==notship) then begin testf = true; end;
  end;  
  if (partship!=0) then begin
    if (locpartship==partship) then begin testf = true; end;
  end;  
*/  
  locnotinvd = 0;
  if (ORr.InvBeforeShip==0) then begin  
    if (ORrw.Invd!=0) then begin
//      t = ORrw.Quant - ORrw.Invd;  // when eveyring what is delivered is invoice nothing more to invoice or? 
      t = ORrw.Shipd2 - ORrw.Invd;
    end else begin
      t = ORrw.Shipd2 - ORrw.Invd;
    end;
  end else begin
    t = ORrw.Quant - ORrw.Invd;
  end;
  if (t!=0) then begin locnotinvd = 1; end;
  if (notinvd!=0) then begin
    if (locnotinvd==notinvd) then begin testf = true; end;
  end;  
  if (showinvd!=0) then begin
    if (ORrw.Invd>0) then begin testf = true; end;
  end;  
  OrdRowMatchFlags = testf;
  return;
end;

procedure OrderStockHeader(record RcVc RepSpec)
BEGIN
  if (RepSpec.ArtMode==0) then begin
    if (RepSpec.PocketPC==0) then begin
      StartFormat(15);
      OutString(0,0,USetStr(2622),false);
      OutString(130,0,USetStr(2623),false);
      OutString(190,0,USetStr(2624),false);
      if (HasMultiCurrency) then begin
        if (RepSpec.flags[10]!=1) then begin 
          OutString(5,0,USetStr(2627),true);
        end else begin 
          OutString(5,0,USetStr(15160),true);
        end;          
      end else begin
        if (RepSpec.flags[10]!=1) then begin 
          OutString(1,0,USetStr(2627),true);
        end else begin 
          OutString(1,0,USetStr(15160),true); 
        end;  
      end;
      EndFormat;
    end else begin
      StartFormat(15);
      OutString(0,0,USetStr(2622),false);
      OutString(100,0,USetStr(2624),false);
      OutString(5,0,USetStr(2627),true);
      EndFormat;
    end;
    Gray_Divider(0,1);
  end;
  if (RepSpec.ArtMode==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(2622),false);
    OutString(130,0,USetStr(2623),false);
    OutString(200,0,USetStr(2624),false);
    OutString(300,0,USetStr(12805),false);
    OutString(480,0,USetStr(2638),true);
    EndFormat;
    if (RepSpec.flags[11]!=0) then begin
      StartFormat(15);
      OutString(420,0,USetStr(2643),true);
      OutString(480,0,USetStr(2642),true);
      EndFormat;
    end;  
    Gray_Divider(0,1);
  end;
  if (RepSpec.ArtMode==2) then begin
    if (RepSpec.flags[10]==0) then begin//amounts
      StartFormat(15);
      OutString(0,0,USetStr(2622),false);
      OutString(60,0,USetStr(2623),false);
      OutString(120,0,USetStr(2638),false);
      switch (RepSpec.flags[15]) begin
        case 0:
          OutString(180,0,USetStr(2637),false);
        case 1:
          OutString(180,0,USetStr(2637),false);
        case 2:
          OutString(180,0,USetStr(2624),false);
      end;
      if (RepSpec.flags[11]!=0) then begin
        OutString(250,0,USetStr(2639),true);
        OutString(310,0,USetStr(2640),true);
        OutString(400,0,USetStr(2643),true);
      end else begin
        OutString(310,0,USetStr(2639),true);
        OutString(400,0,USetStr(2640),true);
      end;
      if (HasMultiCurrency) then begin
        OutString(450,0,USetStr(2625),true);
      end else begin
        OutString(1,0,USetStr(2625),true);
      end;
      EndFormat;
    end;
    if (RepSpec.flags[10]==1) then begin//quantity
      StartFormat(15);
      OutString(0,0,USetStr(2622),false);
      OutString(60,0,USetStr(2623),false);
      OutString(120,0,USetStr(2638),false);
      switch (RepSpec.flags[15]) begin
        case 0:
          OutString(180,0,USetStr(2637),false);
        case 1:
          OutString(180,0,USetStr(2637),false);
        case 2:
          OutString(180,0,USetStr(2624),false);
      end;
      OutString(280,0,USetStr(2631),true);
      OutString(320,0,USetStr(5511),true);
      OutString(360,0,USetStr(2632),true);
      if (RepSpec.flags[11]!=0) then begin
        OutString(400,0,USetStr(2569),true);
      end;      
      OutString(440,0,USetStr(2630),true);
      OutString(480,0,USetStr(2639),true);
      EndFormat;
    end;
    Gray_Divider(0,1);
  end;
  RETURN;
END;

procedure StockNotShipped(record RcVc RepSpec,record ORVc ORp,Integer onlygr,Integer adress,Integer infoperrow,string frgr,string togr,Integer gp,record MainStockBlock MSb,var Boolean printedf)
BEGIN
  Integer i,rwcnt;
  row ORVc ORrw;
  val t,valv;
  Boolean testf,firstf,prntdf;
  record INVc INr;
  string 100 planshp;
  string 20 frin,toin;
  string 60 sz,msk,mskrep;
  string 200 varsubset;

  firstf = true;
  frin = FirstInRange(RepSpec.LastAcc,20);
  toin = LastInRange(RepSpec.LastAcc,20);
  rwcnt = MatRowCnt(ORp);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    if (ORrw.stp==1) or (ORrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
      testf = true;
      if (testf) then begin
        if (nonblank(RepSpec.LastAcc)) then begin
          if (InString2(RepSpec.LastAcc,".")<0) then begin
            if (TestArtCodeMatch(ORrw.ArtCode,RepSpec.LastAcc)==false) then begin
              testf = false;
            end;
          end else begin
            if (ORrw.ArtCode!=RepSpec.LastAcc) then begin
              testf = false;
            end;
          end;
        end;
      end;
      if (testf) then begin
        if (infoperrow!=0) then begin
          testf = OrdRowMatchFlags(ORp,i,valv,RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],RepSpec.flags[6],RepSpec.flags[7]);
        end;
      end;
      if (nonblank(RepSpec.Stext)) then begin
        planshp = ORp.PlanShip;
        if (nonblank(ORrw.PlanShipRow)) then begin
          planshp = ORrw.PlanShipRow;
        end;
        if (CheckPlanShip(RepSpec.Stext,planshp)==false) then begin 
          testf = false;
        end;
      end;  
      if (testf) then begin
        if ((nonblank(frgr)) and (onlygr!=0)) then begin
          testf = false;
          if (ReadFirstItem(ORrw.ArtCode,INr,false,false)) then begin
            if (INr.Group>=frgr) then begin
              if (INr.Group<=togr) then begin
                testf = true;
              end;
            end;
          end;      
        end;
      end;
      if (blank(ORrw.ArtCode)) then begin testf = false; end;
      if (ORp.InvBeforeShip==0) then begin
        if (ORrw.Shipd2 > ORrw.Quant) then begin
          t = ORrw.Shipd2 - ORrw.Invd;       
        end else begin
          t = ORrw.Quant - ORrw.Invd;
        end;
      end else begin
        t = ORrw.Quant - ORrw.Shipd2;
      end;  
//      if (t==0) then begin testf = false; end;
      if (ORrw.Quant==ORrw.Shipd1) then begin
        if (ORrw.Shipd1==ORrw.Shipd2) then begin
          if (ORrw.Shipd2==ORrw.Invd) then begin
            testf = false;
          end;  
        end;        
      end;                        
      if ((nonblank(RepSpec.f5) and nonblank(ORrw.Location)) and (ORrw.Location!=RepSpec.f5)) then begin 
        testf = false;
      end else begin
        if ((nonblank(RepSpec.f5) and blank(ORrw.Location)) and (ORp.Location!=RepSpec.f5)) then begin 
          testf = false;
        end;  
      end;
      if (testf) then begin
        if (true) then begin
        if (printedf==false) then begin
          OrderStockHeader(RepSpec);
          printedf = true;
        end;
        if (firstf) then begin
          firstf = false;
          StartFormat(15);
          OutLongInt(0,"DblORVc",ORp.SerNr,false);
          OutDate(130,0,ORp.OrdDate,false);
          OutString(200,0,ORp.CustCode,false);
          OutString(300,0,ORp.CustOrdNr,false);
          OutString(480,0,ORp.PlanShip,true);
          EndFormat;
          if (adress!=0) then begin
            StartFormat(15);
            OutString(200,0,ORp.Addr0,false);
            StartFormat(15);
            if (nonblank(ORp.Addr1)) then begin
              StartFormat(15);
              OutString(200,0,ORp.Addr1,false);
              StartFormat(15);
            end;
            EndFormat;
            if (nonblank(ORp.Addr2)) then begin
              StartFormat(15);
              OutString(200,0,ORp.Addr2,false);
              EndFormat;
            end;
            if (nonblank(ORp.Addr3)) then begin
              StartFormat(15);
              OutString(200,0,ORp.Addr3,false);
              EndFormat;
            end;
            StartFormat(10);
            EndFormat;
          end;
          StartFormat(15);
          if (gp!=0) then begin
            OutString(280,0,USetStr(2631),true);
            OutString(320,0,USetStr(5511),true);
            OutString(360,0,USetStr(2632),true);
            OutString(400,0,USetStr(2630),true);
            OutString(440,0,USetStr(2729),true);
            OutString(480,0,USetStr(2633),true);
          end else begin
            OutString(320,0,USetStr(2631),true);
            OutString(360,0,USetStr(5511),true);
            OutString(400,0,USetStr(2632),true);
            OutString(440,0,USetStr(2630),true);
            OutString(480,0,USetStr(2633),true);
          end;
          EndFormat;
        end;
        end;
        StartFormat(15);
        OutString(20,0,ORrw.ArtCode,false);
        OutString(144,0,Left(ORrw.Spec,20),false);
        t = ORrw.Quant - ORrw.Shipd1;
        if (t<0) then begin
          t = 0;
        end;        
        if (gp!=0) then begin
          OutVal(280,0,ORrw.Quant,M4UVal,true);
          OutVal(320,0,ORrw.Shipd1-ORrw.Shipd2,M4UVal,true);
          OutVal(360,0,ORrw.Shipd2,M4UVal,true);
          OutVal(400,0,t,M4UVal,true);
          OutVal(440,0,ORrw.rowGP,M4UVal,true); /* stock level, ugly but */
          OutVal(480,0,ORrw.Invd,M4UVal,true);
        end else begin
          OutVal(320,0,ORrw.Quant,M4UVal,true);
          OutVal(360,0,ORrw.Shipd1-ORrw.Shipd2,M4UVal,true);
          OutVal(400,0,ORrw.Shipd2,M4UVal,true);
          OutVal(440,0,t,M4UVal,true);
          OutVal(480,0,ORrw.Invd,M4UVal,true);
        end;
        EndFormat;
        prntdf = true;
      end;
    end;
  end;
  if (prntdf) then begin
  end;
  RETURN;
END;

procedure RepStock(record RcVc RepSpec,record ORVc ORp,Integer onlygr,Integer adress,Integer infoperrow,string frgr,string togr,var val tot,Integer gp,record MainStockBlock MSb,Integer UseDiscount,var Boolean printedf)
BEGIN
  Integer i,rwcnt;
  row ORVc ORrw;
  val qty,totgp;
  val rowv,valv;
  Boolean testf,firstf,prntdf;
  record INVc INr;
  string 100 planshp;
  string 20 frin,toin;
  string 60 sz,msk,mskrep;
  string 200 varsubset;
  record SMVc VATr;
  Integer vatcnt;
  val tax1,vatval;

  firstf = true;
  frin = FirstInRange(RepSpec.LastAcc,20);
  toin = LastInRange(RepSpec.LastAcc,20);
  if (ORp.InclVAT>0) then begin
    RecordClear(VATr);
    SetupVATBase(VATr,vatcnt);          
  end;
  rwcnt = MatRowCnt(ORp);  
  tot = blankval;
  for (i=0;i<rwcnt ;i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    if (ORrw.stp==1) or (ORrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
      testf = true;
      if (testf) then begin
        if (nonblank(RepSpec.LastAcc)) then begin
          if (InString2(RepSpec.LastAcc,".")<0) then begin
            if (TestArtCodeMatch(ORrw.ArtCode,RepSpec.LastAcc)==false) then begin
              testf = false;
            end;          
          end else begin
            if (ORrw.ArtCode!=RepSpec.LastAcc) then begin
              testf = false;
            end;
          end;
        end;
      end;
      if (testf) then begin
        if (infoperrow!=0) then begin
          testf = OrdRowMatchFlags(ORp,i,valv,RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],RepSpec.flags[6],RepSpec.flags[7]);
        end;
      end;
      if (nonblank(RepSpec.Stext)) then begin
        planshp = ORp.PlanShip;
        if (nonblank(ORrw.PlanShipRow)) then begin
          planshp = ORrw.PlanShipRow;
        end;
        if (CheckPlanShip(RepSpec.Stext,planshp)==false) then begin 
          testf = false;
        end;
      end;  
      if (testf) then begin
        if ((nonblank(frgr)) and (onlygr!=0)) then begin
          testf = false;
          if (ReadFirstItem(ORrw.ArtCode,INr,false,false)) then begin
            if (INr.Group>=frgr) then begin
              if (INr.Group<=togr) then begin
                testf = true;
              end;
            end;
          end;      
        end;
      end;
      if (blank(ORrw.ArtCode)) then begin testf = false; end;
      if (ORp.InvBeforeShip==0) then begin
        if (ORrw.Shipd2 > ORrw.Quant) then begin
          qty = ORrw.Shipd2 - ORrw.Invd;       
        end else begin
          qty = ORrw.Quant - ORrw.Invd;
        end;
      end else begin
        qty = ORrw.Quant - ORrw.Shipd2;
      end;  
//      if (qty==0) then begin testf = false; end;
      if (ORrw.Quant==ORrw.Shipd1) then begin
        if (ORrw.Shipd1==ORrw.Shipd2) then begin
          if (ORrw.Shipd2==ORrw.Invd) then begin
            if (RepSpec.flags[6]==0) then begin
              testf = false;
            end;
          end;  
        end;        
      end;
      if ((nonblank(RepSpec.f5) and nonblank(ORrw.Location)) and (ORrw.Location!=RepSpec.f5)) then begin 
        testf = false;
      end else begin    
        if ((nonblank(RepSpec.f5) and blank(ORrw.Location)==false) and (ORp.Location!=RepSpec.f5)) then begin 
          testf = false;
        end;          
      end;
      if (testf) then begin
        if (printedf==false) then begin
          OrderStockHeader(RepSpec);
          printedf = true;
        end;
        CalcSum(qty,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,rowv,UseDiscount);
        if (ORp.InclVAT>0) then begin
          AddVATBase(VATr,ORrw.VATCode,rowv,blankval,vatcnt,ORp.InclVAT,ORp.NoTAXonVAT);
        end;
        if (qty==0) then begin qty = blankval; end;
        if (rowv==0) then begin rowv = blankval; end;
        if (firstf) then begin
          StartFormat(15);
          OutLongInt(0,"DblORVc",ORp.SerNr,false);
          OutDate(130,0,ORp.OrdDate,false);
          OutString(220,0,ORp.PayDeal,false);
          OutString(300,0,ORp.CustOrdNr,false);
          OutString(480,0,ORp.PlanShip,true);
          EndFormat;
          if (adress!=0) then begin
            StartFormat(15);
            OutString(50,0,ORp.CustCode,false);
            OutString(200,0,ORp.Addr0,false);
            EndFormat;
            StartFormat(15);
            OutString(50,0,ORp.CustCat,false);
            OutString(200,0,ORp.Addr1,false);
            StartFormat(15);
            EndFormat;
            StartFormat(15);
            OutString(50,0,ORp.OurContact,false);
            OutString(200,0,ORp.Addr2,false);
            EndFormat;
            StartFormat(15);
            OutString(200,0,ORp.Addr3,false);
            EndFormat;
            StartFormat(15);
            OutString(200,0,ORp.CustContact,false);
            if (HasMultiCurrency) then begin
              OutString(480,0,ORp.CurncyCode,true);
            end;
            EndFormat;
            StartFormat(15);
            OutString(200,0,ORp.Phone,false); 
            EndFormat;
            StartFormat(15);
            OutString(200,0,ORp.Fax,false);
            EndFormat;
            firstf = false;
          end;
        end;
        StartFormat(15);
        OutString(20,0,ORrw.ArtCode,false);
        if (nonblank(ORrw.PlanShipRow)) then begin
          OutVal(95,0,qty,M4UVal,true);
          OutString(100,0,ORrw.PlanShipRow,false);
        end else begin
          OutVal(155,0,qty,M4UVal,true);
        end;
        OutString(170,0,Left(ORrw.Spec,20),false);
        if (ORp.InclVAT>0) then begin
          MulVATIV(ORrw.VATCode,ORrw.Price,vatval,tax1,ORp.InclVAT,ORp.NoTAXonVAT);
        end;
        OutVal(340,0,ORrw.Price-vatval,M423Val,true);
        OutVal(380,0,ORrw.vRebate,M41Val,true);
        if (gp!=0) then begin
          OutVal(420,0,ORrw.rowGP,M41Val,true);
        end;  
        if (ORp.InclVAT>0) then begin
          MulVATIV(ORrw.VATCode,rowv,vatval,tax1,ORp.InclVAT,ORp.NoTAXonVAT);
        end;
        OutVal(480,0,rowv-vatval,M4Val,true);
        EndFormat;
        tot = tot + rowv;
        totgp = totgp + ORrw.rowGP;
        prntdf = true;
      end;
    end;
  end;
  if (ORp.InclVAT>0) then begin
    CalcVATBaseVAT(VATr,ORp.InclVAT,ORp.NoTAXonVAT,vatcnt,vatval,tax1);
    tot = tot - vatval;
  end;
  if (prntdf) then begin
    Gray_Divider(300,480);
    StartFormat(15);
    if (gp!=0) then begin
      OutVal(420,0,totgp,M4Val,true);
    end;  
    OutVal(480,0,tot,M4Val,true);
    EndFormat;
  end;
  RETURN;
END;

procedure SkipSpace(string aost,var Integer np)
BEGIN
  while ((np<=len(aost)) and (Mid(aost,np,1)==" ")) begin
    np = np + 1;
  end;  
  RETURN;
END;

function Boolean GetNextTokenSpec(string aost,var Integer np,var string anitem)
BEGIN
  string 1 nc;
  string 255 ost;
  string 255 nitem;
  Integer i;
  Boolean res,TrHs;

  ost = aost;
  nitem = anitem;
  nitem = "";
  SkipSpace(ost,np);
  TrHs = true;
  while (TrHs) begin
    if (np>len(ost)) then begin TrHs = false; end;
    nc = Mid(ost,np,1);//  nc = ost[*np];
    if ((nc==";") or (nc==":") or (nc==",") or (nc=="-") or (nc=="+")) then begin 
      TrHs = false;
    end;
    if (TrHs) then begin
      nitem = nitem & nc;
      np = np + 1;
    end;
  end;
  anitem = nitem;
  if (blank(nitem)) then begin
    res = false;
  end else begin
    res = true;  
  end; 
  GetNextTokenSpec = res;   
  RETURN;
END;

global
procedure Split2Str2(string as,var string fp,var string tp,Integer l)
BEGIN
  string 255 t1,t2;
  string 6 tsep;
  Integer i;

  i = 0;
  if (GetNextTokenSpec(as,i,t1)) then begin end;
//  GetNextStrSep(as,&i,tsep);
  i = i + 1;
  if (GetNextTokenSpec(as,i,t2)) then begin end;
  if (blank(tsep) and blank(t2)) then begin t2 = t1; end;
  fp = Left(t1,l);
  tp = Left(t2,l);
  RETURN;
END;

function Boolean LocationInMatrix(record ORVc ORp,string Locp)
begin
  integer i,rwcnt;
  row ORVc ORrw;
  Boolean res;
  
  res = false;
  rwcnt = MatRowCnt(ORp);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(ORp,i,ORrw);
    if (ORrw.Location==Locp) then begin
      res = true;
      i = rwcnt;               
    end;
  end;    
  LocationInMatrix = res;
  return;
end;

global
procedure OrderStockRn(record RcVc RepSpec)
begin
  record ORVc ORr;
  row ORVc ORrw;
  record INVc INr;
  Boolean TrHs;
  val t,t2,t3,iv,gp;
  val TotSum,TotGP;
  val TotQty,TotLev,TotinPick,TotNotLev,TotInv,gpprc,shipd1;
  Boolean item,testf,test2f;
  string 255 frgr,togr;  
  LongInt afr,ato;
  string 255 ckey,tstr;
  string 60 frsort,tosort;
  Integer i,rwcnt;
  Integer keys,rw;
  record MainStockBlock MSb;
  record GeneralOptionBlock GenOptRec;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;
  string 20 frin,toin;
  string 1 c;
  boolean fr;
  string 60 sz,msk,mskrep;
  string 200 varsubset;
  record CUVc CUr;
  Boolean cuf;
  Boolean printedf;
  val invgp;
  Integer sorting;
  record SMVc VATr;
  Integer vatcnt;
  val tax1,vatval;

  BlockLoad(GenOptRec);
  if (RepSpec.ArtMode==3) then begin
    OrderStockComp(RepSpec);
    goto LOrderStockRn;
  end;
  BlockLoad(MSb);
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  frgr = FirstInRange(RepSpec.f3,5);
  togr = LastInRange(RepSpec.f3,5);
  
  if (nonblank(RepSpec.f4)) then begin
     // Sorting key can be specified with spaces in such format First Key:Last Key
    fr = true;
    for (i=0;i<len(RepSpec.f4);i=i+1) begin
      c = Mid(RepSpec.f4,i,1);
      if (fr) then begin
        frsort = frsort & c;
      end else begin
        tosort = tosort & c;
      end;    
      if (c==":") then begin
         fr = false;
      end;
    end;
    if (fr) then begin
      frsort = RepSpec.f4;
      tosort = frsort;
    end;  
  end;    
  
  Split2Str2(RepSpec.f4,frsort,tosort,20);  
  frin = FirstInRange(RepSpec.LastAcc,20);
  toin = LastInRange(RepSpec.LastAcc,20);
  BeginCurncyTotals(curcnt);
  if (RepSpec.flags[10]==0) then begin
    StartReportJob(USetStr(2621));
  end else begin
    StartReportJob(USetStr(2621));//2629
  end;
  if (RepSpec.PocketPC==0) then begin
    rw = 1; 
    HTOrdStatus(RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],RepSpec.flags[7],tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
    if (RepSpec.flags[10]==0) then begin
      tstr = USetStr(1177);
    end else  begin
      if (RepSpec.flags[10]==1) then begin
        tstr = USetStr(1176);
      end;  
    end;    
    Header(rw,tstr,0);
    if (RepSpec.ArtMode==2) then begin
      tstr = USetStr(6658);
    end else begin
      HTDetailLevel(RepSpec.ArtMode,tstr);
    end;  
    Header(rw,tstr,1);
    rw = rw + 1;
    if (nonblank(RepSpec.LastAcc)) then begin
      HTArtSel(RepSpec.LastAcc,RepSpec.f3,tstr);
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    if (nonblank(RepSpec.f1)) then begin
      HTOrder(afr,ato,tstr);
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    if (nonblank(RepSpec.f2)) then begin
      tstr = USetStr(1113);
      tstr = tstr & RepSpec.f2;
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    HTOKF(RepSpec.flags[17],RepSpec.flags[18],tstr);
    Header(rw,tstr,0);
    HTSaleMan(RepSpec.AccStr,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;       
    if (nonblank(RepSpec.FirstAcc)) then begin
      tstr = USetStr(1825);
      tstr = tstr & RepSpec.FirstAcc;
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    if (nonblank(RepSpec.f5)) then begin
      tstr = USetStr(2768);
      tstr = tstr & ": " & RepSpec.f5;
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
    if (nonblank(RepSpec.ObjStr)) then begin
      HTObj(RepSpec.ObjStr,tstr);
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end else begin
    rw = 2; 
    HTSaleMan(RepSpec.AccStr,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,0);
      rw = rw + 1;
    end;       
  end;
  EndHeader;
  SetRepCol(2,404);
  SetRepCol(3,520-(2*96));
  SetRepCol(4,540-(3*96));
  SetRepCol(5,430);
//  OrderStockHeader(RepSpec); // Will now always get printed if printedf==false
  ORr.SerNr = afr;
  ORr.OSFlag = 1;
  ORr.Objects = "";
  ORr.CustCode = "";

  
  if (nonblank(RepSpec.f2)) or (RepSpec.flags[16]!=0) then begin
    ckey = "OSCU";
    ORr.CustCode = RepSpec.f2;
    keys = 3;
    sorting = 2;
  end else begin
    ckey = "OSFlag";
    keys = 2;
    sorting = 1;
  end;


  if (RepSpec.flags[6]!=0) then begin
    ckey = "SerNr";
    keys = 1;
    sorting = 0;
  end;
  
  TrHs = true;
  while (LoopKey(ckey,ORr,keys,TrHs)) begin
    if (TrHs) then begin
      if (ato!=-1) then begin
        if (ORr.SerNr>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    switch (sorting) begin
      case 0:
      case 1:
        if (ORr.OSFlag!=1) then begin
          TrHs = false;
        end;
      case 2:
        if (ORr.OSFlag!=1) then begin
          TrHs = false;
        end;
        if (nonblank(RepSpec.f2)) then begin
          if (ORr.CustCode!=RepSpec.f2) then begin
            TrHs = false;
          end;
        end;
    end;
    if (TrHs) then begin
      if (false) then begin //if (nonblank(RepSpec.ObjStr)) then begin
        if (RepSpec.ObjStr<ORr.Objects) then begin TrHs = false; end;
      end;
    end;
    if (TrHs) then begin
      testf = false;
      if (RepSpec.ArtMode==1) then begin
        printedf = false;
      end;
      if (RepSpec.OnlyUnprntd!=0) then begin
        testf = true;
      end;
      if (RepSpec.flags[2]==1) then begin // Not Shipped 
        if ((ORr.ShipFlag==0) and (ORr.InvFlag<2 or ORr.InvBeforeShip==1)) then begin
          testf = true;
        end;
      end;
      if (RepSpec.flags[3]==1) then begin // Part Shipped 
        if ((ORr.ShipFlag==0) and ((ORr.InvFlag==0) or (ORr.InvFlag==2))) then begin testf = true; end;
      end;
      if (RepSpec.flags[4]==1) then begin // Not Invoiced 
//        if (((ORr.InvFlag==0) or (ORr.InvFlag==1)) and (ORr.ShipFlag!=0)) then testf = true;
//the  same as SetORFlags
          if (ORr.InvFlag<2) then begin testf = true; end;
//        if (ORr.OSFlag!=0) then begin testf = true; end;
//        if (ORr.InvMark==18) then begin testf = false; end; // We shouldn't set anything to false here, I mean, all the other options are lost then...
      end;
      if (RepSpec.flags[6]==1) then begin // Invoiced 
        if (ORr.InvFlag==2) then begin testf = true; end;
      end;
      if (ORr.OKFlag==0) then begin
        if (RepSpec.flags[17]==0) then begin testf = false; end;
      end;
      if (ORr.OKFlag!=0) then begin
        if (RepSpec.flags[18]==0) then begin testf = false; end;
      end;      
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,ORr.Objects)==false) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f2)) then begin//OSCU key used
        if (RepSpec.f2!=ORr.CustCode) then begin
          testf = false;
        end;
      end;
      if ((nonblank(RepSpec.FirstAcc)) and (RepSpec.FirstAcc!=ORr.OrderClass)) then begin 
        testf = false; 
      end;
      if ((nonblank(RepSpec.AccStr)) and (RepSpec.AccStr!=ORr.SalesMan)) then begin 
        testf = false; 
      end;
      if (nonblank(RepSpec.f8)) then begin
        if (RepSpec.f8!=ORr.SalesGroup) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f5)) then begin 
        if ((RepSpec.f5<>ORr.Location) and (LocationInMatrix(ORr,RepSpec.f5)==false)) then begin 
          testf = false; 
        end;
        if (RepSpec.ArtMode==0 and RepSpec.f5<>ORr.Location ) then begin 
          testf = false;
        end;     
      end;
      if (nonblank(RepSpec.f7)) then begin 
        if (ORr.OrderType!=SetFromString(433,RepSpec.f7)) then begin testf = false; end;
      end;
      cuf = false;
      if (nonblank(RepSpec.TransStr)) then begin
        CUr.Code = ORr.CustCode;
        cuf = ReadFirstMain(CUr,1,true);
        if (CUr.CustCat!=RepSpec.TransStr) then begin
          testf = false;
        end;
      end;    
      if (nonblank(RepSpec.f6)) then begin
        if (cuf==false) then begin
          CUr.Code = ORr.CustCode;
          cuf = ReadFirstMain(CUr,1,true);
        end;
        if ((SetInSet2(RepSpec.f6,CUr.Classification)==false)) then begin
          testf = false;
        end;
      end;    
      if ((nonblank(RepSpec.AccStr)) and (RepSpec.AccStr!=ORr.SalesMan)) then begin 
        testf = false; 
      end;
      if (nonblank(RepSpec.f4)) then begin
        if (ORr.Sorting<frsort) then begin
          testf = false; 
        end;
        if (ORr.Sorting>tosort) then begin
          testf = false; 
        end;
      end;   
      if (testf) then begin
        if (nonblank(RepSpec.Stext)) then begin
          if (CheckPlanShipRows(RepSpec.Stext,ORr)==false) then begin testf = false; end;
        end;  
      end;
      if ((nonblank(RepSpec.ObjStr)) and (SetInSet(RepSpec.ObjStr,ORr.Objects)==false)) then begin
        testf = false;
      end;  
//beacause of above : the  same as ....
//by the way I don't think it is needed
//      if (RepSpec.flags[6]==0) then 
//        if ((ORr.InvFlag==2) and (ORr.ShipFlag!=0)) then testf = false;
      if (RepSpec.flags[12]==0) then begin
        if (ORr.Closed!=0) then begin testf = false; end;
      end;
      if (RepSpec.flags[12]==2) then begin
        if (ORr.Closed==0) then begin testf = false; end;
      end;
      if (testf) then begin
        if (nonblank(RepSpec.f3) or nonblank(RepSpec.f9)) then begin
          testf = false;
        end;
        if (nonblank(RepSpec.LastAcc)) then begin
          item = false;
        end;
        rwcnt = MatRowCnt(ORr);
        for (i = 0 ; i<rwcnt ;i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          if (ORrw.stp==1) or (ORrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
            if (ReadFirstItem(ORrw.ArtCode,INr,false,false)) then begin
              if (nonblank(RepSpec.f3)) then begin
                if (INr.Group>=frgr) then begin
                  if (INr.Group<=togr) then begin
                    testf = true;
                  end;  
                end;  
              end;  
              if (nonblank(RepSpec.LastAcc)) then begin
                if (InString2(RepSpec.LastAcc,".")<0) then begin
                  if (TestArtCodeMatch(ORrw.ArtCode,RepSpec.LastAcc)) then begin
                    item = true;
                  end;
                end else begin
                  if (ORrw.ArtCode==RepSpec.LastAcc) then begin
                    item = true;
                  end;
                end;
              end;
              if (nonblank(RepSpec.f9)) then begin
                if (SetInSet(RepSpec.f9,INr.DispGroups)) then begin
                  testf = true;
                end;
              end;
            end;
          end;
          if (item and testf) then begin
            i = rwcnt;
          end;
        end;
      end;
      if ((nonblank(RepSpec.LastAcc)) and (item==false)) then begin testf = false; end;
      if (testf) then begin
        if (ORr.InclVAT>0) then begin
          RecordClear(VATr);
          SetupVATBase(VATr,vatcnt);          
        end;
        rwcnt = MatRowCnt(ORr);
        iv = blankval;
        gp = blankval;
        gpprc = blankval;
        invgp = blankval;
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          if (ORrw.stp==1) or (ORrw.stp==kInvoiceRowTypeStructuredItemComponent) then begin
            testf = true;
            if (nonblank(RepSpec.LastAcc)) then begin
              if (InString2(RepSpec.LastAcc,".")<0) then begin
                if (TestArtCodeMatch(ORrw.ArtCode,RepSpec.LastAcc)==false) then begin
                  testf = false;
                end;
              end else begin
                if (ORrw.ArtCode!=RepSpec.LastAcc) then begin
                  testf = false;
                end;
              end;
            end;
            if (testf) then begin
              if (RepSpec.OnlyUnprntd!=0) then begin
                testf = OrdRowMatchFlags(ORr,i,t,RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],RepSpec.flags[6],RepSpec.flags[7]);
              end;
            end;
            if (testf) then begin
              if ((nonblank(RepSpec.f3)) and (RepSpec.Comparison!=0)) then begin
                INr.Code = ORrw.ArtCode;
                if (ReadFirstItem(ORrw.ArtCode,INr,false,false)) then begin
                  if (INr.Group>=frgr) then begin
                    if (INr.Group<=togr) then begin
                      if (RepSpec.flags[6]==1) then begin
                        t = ORrw.Quant;
                      end else begin
                        if (ORr.InvBeforeShip==0) then begin
                          t = ORrw.Quant - ORrw.Invd;
                        end else begin
                          t = ORrw.Quant - ORrw.Shipd2;
                        end;  
                      end;  
                      CalcSum(t,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,t2,GenOptRec.UseDiscount);
                      if (ORr.InclVAT>0) then begin
                        AddVATBase(VATr,ORrw.VATCode,t2,blankval,vatcnt,ORr.InclVAT,ORr.NoTAXonVAT);
                      end;
                      CalcSum(t,ORrw.BasePrice,ORrw.PriceFactor,ORrw.vRebate,t3,GenOptRec.UseDiscount);
                      if (RepSpec.flags[10]==0) then begin
                        iv = iv + t2;
                      end else begin
                        iv = iv + t;
                      end;
                      t3 = t2 - t3;
                      gp = gp + t3;
                      invgp = invgp + t * (ORrw.rowGP/ORrw.Quant);
                    end;
                  end;
                end;
              end else begin
                if (RepSpec.flags[6]==1) then begin
                  t = ORrw.Quant;
                end else begin
                  if (ORr.InvBeforeShip==0) then begin
                    if (ORrw.Shipd2 > ORrw.Quant) then begin
                      t = ORrw.Shipd2 - ORrw.Invd;
                    end else begin
                      t = ORrw.Quant - ORrw.Invd;
                    end;
                    if (t<0) then begin t = 0; end;
                  end else begin
                    t = ORrw.Quant - ORrw.Shipd2;
                  end;
                end;
                CalcSum(t,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,t2,GenOptRec.UseDiscount);
                if (ORr.InclVAT>0) then begin
                  AddVATBase(VATr,ORrw.VATCode,t2,blankval,vatcnt,ORr.InclVAT,ORr.NoTAXonVAT);
                end;
                CalcSum(t,ORrw.BasePrice,ORrw.PriceFactor,ORrw.vRebate,t3,GenOptRec.UseDiscount);
                if (RepSpec.flags[10]==0) then begin
                  iv = iv + t2;
                end else begin
                  iv = iv + t;
                end;
                t3 = t2 - t3;
                gp = gp + t3;
                invgp = invgp + t * (ORrw.rowGP/ORrw.Quant);
              end;
            end;
          end;
        end;
        if (ORr.InclVAT>0) then begin
          CalcVATBaseVAT(VATr,ORr.InclVAT,ORr.NoTAXonVAT,vatcnt,vatval,tax1);
          iv = iv - vatval;
        end;
        t = MulRateToBase1(ORr.CurncyCode,iv,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
        TotSum = TotSum + t;
        t = MulRateToBase1(ORr.CurncyCode,invgp,ORr.FrRate,ORr.ToRateB1,ORr.ToRateB2,ORr.BaseRate1,ORr.BaseRate2,DefaultCurRoundOff);
        TotGP = TotGP + invgp;
        if (RepSpec.flags[11]!=0) then begin
          SetupOrder_OrderStockRn(ORr,RepSpec.flags[10],MSb);
        end;  
        if (RepSpec.ArtMode==1) then begin
          if (RepSpec.flags[10]==0) then begin
            RepStock(RepSpec,ORr,RepSpec.Comparison,RepSpec.flags[5],RepSpec.OnlyUnprntd,frgr,togr,TotQty,RepSpec.flags[11],MSb,GenOptRec.UseDiscount,printedf);
            AddCurncyTotals(acur,av1,curcnt,ORr.CurncyCode,TotQty);
          end else begin    
            StockNotShipped(RepSpec,ORr,RepSpec.Comparison,RepSpec.flags[5],RepSpec.OnlyUnprntd,frgr,togr,RepSpec.flags[11],MSb,printedf);
            AddCurncyTotals(acur,av1,curcnt,ORr.CurncyCode,iv);
          end;
        end;    
        if (RepSpec.ArtMode==0) then begin
//           if (iv!=0) then begin
          if (true) then begin // Orders with zero value should show. e.g: Free product to ship to customer.
            if (printedf==false) then begin
              OrderStockHeader(RepSpec);
              printedf = true;
            end;
            if (RepSpec.PocketPC == 0) then begin
              StartFormat(15);
              OutLongInt(0,"DblORVc",ORr.SerNr,false);
              OutString(60,0,ORr.Objects,false);
              OutDate(130,0,ORr.OrdDate,false);
              OutString(190,0,ORr.Addr0,false);
              if (HasMultiCurrency) then begin
                OutVal(5,0,iv,M4Val,true);
                OutString(1,0,ORr.CurncyCode,true);
              end else begin
                OutVal(1,0,iv,M4Val,true);
              end;
              EndFormat;
            end else begin
              StartFormat(15);
              OutLongInt(0,"DblORVc",ORr.SerNr,false);
              OutString(100,0,Left(ORr.Addr0,15),false);
              if (HasMultiCurrency) then begin
                OutVal(430,0,iv,M4Val,true);
                OutString(1,0,ORr.CurncyCode,true);
              end else begin
                OutVal(1,0,iv,M4Val,true);
              end;
              EndFormat;
            end;
            TotQty = TotQty + iv;
            AddCurncyTotals(acur,av1,curcnt,ORr.CurncyCode,iv);
          end;
        end;
        if (RepSpec.ArtMode==2) then begin
          if (ORr.InclVAT>0) then begin
            RecordClear(VATr);
            SetupVATBase(VATr,vatcnt);          
          end;
          rwcnt = MatRowCnt(ORr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(ORr,i,ORrw);
            if (RepSpec.OnlyUnprntd!=0) then begin
              testf = OrdRowMatchFlags(ORr,i,t,RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],RepSpec.flags[6],RepSpec.flags[7]);
            end;
            if (testf) then begin
            if (ReadFirstItem(ORrw.ArtCode,INr,false,false)) then begin
              test2f = true;
              if (nonblank(RepSpec.LastAcc)) then begin
                test2f = false;
                if (InString2(RepSpec.LastAcc,".")<0) then begin
                  if (TestArtCodeMatch(ORrw.ArtCode,RepSpec.LastAcc)) then begin
                    test2f = true;
                  end;
                end else begin
                  if (ORrw.ArtCode==RepSpec.LastAcc) then begin
                    test2f = true;
                  end;
                end;
              end;
              if (nonblank(RepSpec.f3)) then begin
                if (INr.Group<frgr) then begin test2f = false; end;
                if (INr.Group>togr) then begin test2f = false; end;
              end;
              if (test2f) then begin
                if (ORrw.Quant==blankval) then begin test2f = false; end;
              end;
              if (test2f) then begin
                if (ORrw.Quant==ORrw.Shipd1) then begin
                  if (ORrw.Shipd1==ORrw.Shipd2) then begin
                    if (ORrw.Shipd2==ORrw.Invd) then begin
                      test2f = false;
                    end;  
                  end;        
                end;                        
                if (RepSpec.flags[10]==0) then begin
                  if (ORr.InvBeforeShip==0) then begin
                    t = ORrw.Quant - ORrw.Invd;
                   end else begin
                    t = ORrw.Quant - ORrw.Shipd2;
                  end;  
                end;
                if (RepSpec.flags[10]==1) then begin
                  if (ORrw.Quant==ORrw.Shipd1) then begin
                    if (ORrw.Shipd1==ORrw.Shipd2) then begin
                      if (ORrw.Shipd2==ORrw.Invd) then begin
                        test2f = false;
                      end;  
                    end;        
                  end;          
                end;
//                if (nonblank(ORrw.PlanShipRow)) then begin
                  tstr = ORr.PlanShip;
                  if (nonblank(ORrw.PlanShipRow)) then begin
                    tstr = ORrw.PlanShipRow;
                  end;
                  if (nonblank(RepSpec.Stext)) then begin
                    if (CheckPlanShip(RepSpec.Stext,tstr)==false) then begin test2f = false; end;
                  end;  
//                end;
                if ((nonblank(RepSpec.f5) and nonblank(ORrw.Location)) and (ORrw.Location!=RepSpec.f5)) then begin 
                  test2f = false;
                end else begin
                  if ((nonblank(RepSpec.f5) and blank(ORrw.Location)==false) and (ORr.Location!=RepSpec.f5)) then begin 
                    test2f = false;
                  end;      
                end;
                if (test2f) then begin
                  if (printedf==false) then begin
                    OrderStockHeader(RepSpec);
                    printedf = true;
                  end;
                  StartFormat(15);
                  OutLongInt(0,"DblORVc",ORr.SerNr,false);
                  OutDate(60,0,ORr.OrdDate,false);
                  if (blankdate(ORrw.PlanShipRow)) then begin
                    OutString(120,0,ORr.PlanShip,false);
                  end else begin  
                    OutDate(120,0,ORrw.PlanShipRow,false);
                  end;
                  switch (RepSpec.flags[15]) begin
                    case 0:
                      OutString(180,0,ORrw.ArtCode,false);
                    case 1:
                      OutString(180,0,ORrw.Spec,false);
                    case 2:
                      OutString(180,0,Left(ORr.Addr0,20),false);
                  end;
                  switch (RepSpec.flags[10]) begin
                    case 0:
                      if (ORr.InvBeforeShip==0) then begin
                        t = ORrw.Shipd1 - ORrw.Invd;
                        if (t<0) then begin
                          t = 0;
                        end;                    
                      end else begin
                        t = ORrw.Shipd2 - ORrw.Quant;
                      end;  
                      if ((ORrw.Quant==t) or (t==0)) then begin
                        t2 = ORrw.Sum;
                      end else begin
                        CalcSum(t,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,t2,GenOptRec.UseDiscount);
                      end;  
                      if (ORr.InclVAT>0) then begin
                        AddVATBase(VATr,ORrw.VATCode,ORrw.Price,blankval,vatcnt,ORr.InclVAT,ORr.NoTAXonVAT);
                        MulVATIV(ORrw.VATCode,ORrw.Price,vatval,tax1,ORr.InclVAT,ORr.NoTAXonVAT);
                      end;
                      if (RepSpec.flags[11]!=0) then begin
                        OutVal(250,0,t,M4UVal,true);
                        OutVal(310,0,ORrw.Price-vatval,M4Val,true);
                        OutVal(400,0,ORrw.rowGP,M4Val,true); // changed during OrderSetup 
                      end else begin
                        OutVal(310,0,t,M4UVal,true);
                        OutVal(400,0,ORrw.Price-vatval,M4Val,true);
                      end;
                      if (ORr.InclVAT>0) then begin
                        MulVATIV(ORrw.VATCode,t2,vatval,tax1,ORr.InclVAT,ORr.NoTAXonVAT);
                      end;
                      if (HasMultiCurrency) then begin
                        OutVal(460,0,t2-vatval,M4Val,true);
                        OutString(465,0,ORr.CurncyCode,false);
                      end else begin
                        OutVal(1,0,t2-vatval,M4Val,true);
                      end;
                      EndFormat;
                      TotQty = TotQty + t;
                    case 1:
                      OutVal(280,0,ORrw.Quant,M4UVal,true);
                      OutVal(320,0,ORrw.Shipd1-ORrw.Shipd2,M4UVal,true);
                      TotQty = TotQty + ORrw.Quant;
                      shipd1 = ORrw.Shipd1;
                      OutVal(360,0,ORrw.Shipd2,M4UVal,true);
                      if (RepSpec.flags[11]!=0) then begin
                        OutVal(400,0,ORrw.rowGP,M4UVal,true);
                      end;                    
                      TotLev = TotLev + ORrw.Shipd2;
                      TotinPick = TotinPick + (ORrw.Shipd1-ORrw.Shipd2);
                      t = ORrw.Quant - shipd1;
                      if (t<0) then begin
                        t = 0;
                      end;                    
                      OutVal(440,0,t,M4UVal,true);
                      TotNotLev = TotNotLev + t;
                      t = shipd1 - ORrw.Invd;
                      OutVal(480,0,t,M4UVal,true);
                      TotInv = TotInv + t;
                      EndFormat;
                  end;
                end;
              end;
            end;
            end;
          end;
        end;
      end;
      if (RepSpec.flags[13]!=0) then begin
        NewPage(false);
        printedf = false;
      end;
    end;
  end;
  if (printedf==false) then begin
    OrderStockHeader(RepSpec); //Should it be here? I am not sure.
    printedf = true;
  end;
  Gray_Divider(0,1);
  if (RepSpec.ArtMode==0) then begin
    StartFormat(15);
    if (RepSpec.flags[10]==0) then begin
      if (HasMultiCurrency) then begin
        OutVal(430,0,TotSum,M4Val,true);
      end else begin
        OutVal(1,0,TotSum,M4Val,true);
      end;
    end else begin
      if (HasMultiCurrency) then begin
        OutVal(430,0,TotQty,M4Qty,true);
      end else begin
        OutVal(1,0,TotQty,M4Qty,true);
      end;
    end;
    EndFormat;
    Gray_Divider(0,1);
  end;
  if (RepSpec.ArtMode==2) then begin
    StartFormat(15);
    if (RepSpec.flags[10]==0) then begin
      OutVal(310,0,TotQty,M4Qty,true);
    end;
    if (RepSpec.flags[10]==1) then begin
      OutVal(280,0,TotQty,M4Qty,true);
      OutVal(320,0,TotinPick,M4Qty,true);
      OutVal(360,0,TotLev,M4Qty,true);
      OutVal(440,0,TotNotLev,M4Qty,true);
      OutVal(480,0,TotInv,M4Qty,true);
    end;
    EndFormat;
    Gray_Divider(0,1);
  end;
  if (RepSpec.flags[14]!=0) then begin//some people don't want GP for everyone
    t = TotGP/TotSum;
    t = t*100;
    StartFormat(15);
    OutString(320,0,USetStr(2644),true);
    OutString(400,0,USetStr(2643),true);
    OutString(480,0,USetStr(2642),true);
    EndFormat;
    Gray_Divider(250,1);
    StartFormat(15);
    CalcGPProc(TotGP,TotSum,tstr);
    OutString(320,0,tstr,true);
//    OutVal(320,0,t,M4Prcnt,true);
    OutVal(400,0,TotGP,M4Val,true);
    OutVal(480,0,TotSum,M4Val,true);
    EndFormat;
  end;  
  if (RepSpec.flags[10]==0) then begin
    PrintCurncyTotals(acur,av1,av2,av3,curcnt,480,-1,-1,300,true,RepSpec.PocketPC);
  end;
  EndJob;
LOrderStockRn:;
  RETURN;
END;
