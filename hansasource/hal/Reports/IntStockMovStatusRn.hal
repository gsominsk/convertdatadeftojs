
global procedure IntStockMovStatusRn(record RcVc RepSpec)
begin
  record InternMovVc Internr;
  boolean TrHs,testf;
  string 255 tstr;
  val rw, qty;
  
  StartReportJob(USetStr(13100));
  rw = 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(13101) & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(13102) & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
   EndHeader;

  StartFormat(15);
  OutString(0,0,USetStr(13103),false);
  OutString(60,0,USetStr(13104),false);
  OutString(300,0,USetStr(13105),false);
  OutString(400,0,USetStr(13106),false);
  EndFormat;
  Gray_Divider(0,1);  
  TrHs = true;
  Internr.OKFlag = 0;
  while LoopKey("OKFlag",Internr,1,TrHs) begin
    if (TrHs) then begin
      if (Internr.OKFlag > 0) then begin
        TrHs = false;  
      end;
    end;
    if (TrHs) then begin
      testf = true;     
      if (nonblank(RepSpec.f1)) then begin
        if (RepSpec.f1 <> Internr.FrLocation) then begin
           testf = false;      
        end;    
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (Internr.ToLocation <> RepSpec.f2) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        StartFormat(15);
        OutStringID(0,"InternMovVc",Internr.SerNr,false,Internr.SerNr);
        OutString(60,0,Internr.TransDate,false);
        OutString(300,0,Internr.FrLocation,false);  
        OutString(400,0,Internr.ToLocation,false);
        EndFormat;
        qty = qty + 1;
      end;    
  
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(13107),false);
  OutVal(80,0,qty,M40Val,false);
  EndJob;
return;
end;
