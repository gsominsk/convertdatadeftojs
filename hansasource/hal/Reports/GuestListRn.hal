

global
procedure GuestListRn(record RcVc RepSpec)
begin
    record CUVc Guest;
    record CUVc CUr;
    Integer xkey;
    Integer rw;
    Boolean TrHs;
    Boolean testf;
    String 255 tstr;

    rw = 1;

    StartReportJob(USetStr(12110));
    if (RepSpec.f1<>"") then begin
      tstr = USetStr(7113);
      tstr = tstr & RepSpec.f1;
      Header(rw,tstr,1);
      rw = rw + 1;
    end else begin
      tstr = USetStr(7302);
      Header(rw,tstr,1);
    end;
    EndHeader;
    StartFormat(15);
     OutString(0,0,USetStr(12111),false);
     OutString(150,0,USetStr(12112),false);
     OutString(250,0,USetStr(12113),false);
     OutString(330,0,USetStr(12114),false);
     OutString(420,0,USetStr(12115),false);
    EndFormat;
    Gray_Divider(0,1);
    TrHs = true;
    Guest.Code = "";
    while (LoopKey("GuestActCode",Guest,1,TrHs)) begin
     testf = true;
     if (TrHs) then begin
       if (nonblank(RepSpec.f1)) then begin
         testf = (SetinSet(RepSpec.f1,Guest.Classification));
       end;
     end;
     if (TrHs) then begin
       if (nonblank(RepSpec.f2)) then begin
         if (Guest.CustCat<>RepSpec.f2) then begin
           testf = false;
         end;
       end;
     end;
     if (testf) then begin
        StartFormat(15);
         OutString(0,0,Guest.Name,false);
         OutString(150,0,Guest.eMail,false);
         OutString(250,0,Guest.Mobile,false);
         OutString(330,0,Guest.Phone,false);
         OutString(420,0,Guest.Fax,false);
        EndFormat;
        if (RepSpec.ArtMode==1) then begin
          StartFormat(15);
           OutString(80,0,Guest.Profesion,false);
           OutString(270,0,Guest.Classification,false);
          EndFormat;
          if (nonblank(Guest.InvAddr0)) then begin
            StartFormat(15);
             OutString(80,0,Guest.InvAddr0,false);
            EndFormat;
          end;
          if (nonblank(Guest.InvAddr1)) then begin
            StartFormat(15);
             OutString(80,0,Guest.InvAddr1,false);
            EndFormat;
          end;
          if (nonblank(Guest.InvAddr2)) then begin
            StartFormat(15);
             OutString(80,0,Guest.InvAddr2,false);
            EndFormat;
          end;
          if (nonblank(Guest.InvAddr3)) then begin
            StartFormat(15);
             OutString(80,0,Guest.InvAddr3,false);
            EndFormat;
          end;
          if (nonblank(Guest.InvAddr4)) then begin
            StartFormat(15);
             OutString(80,0,Guest.InvAddr4,false);
            EndFormat;
          end;
/*
          if (nonblank(Guest.InvAddr5)) then begin
            StartFormat(15);
             OutString(80,0,Guest.InvAddr5,false);
            EndFormat;
          end;
*/
          Black_Divider(0,1);
        end;
      end;
    end;
    if (RepSpec.ArtMode==1) then begin
      StartFormat(15);
       OutString(0,0,USetStr(7304),false);
      EndFormat;
      TrHs = true;
      while (LoopMain(CUr,1,TrHs)) begin
      testf = true;
      if (TrHs) then begin
        if (nonblank(RepSpec.f1)) then begin
          if (CUr.CustCat<>RepSpec.f1) then begin
            testf = false;
          end;
        end;
      end;
      if (nonblank(CUr.Person)) then begin testf = false; end;
      if (testf) then begin
        StartFormat(15);
        OutString(0,0,CUr.Code,false);
        OutString(80,0,CUr.wwwAddr,false);
        OutString(380,0,CUr.Phone,false);
        EndFormat;
        StartFormat(15);
        OutString(80,0,CUr.Name,false);
        OutString(380,0,CUr.Fax,false);
        EndFormat;
        StartFormat(15);
        OutString(80,0,CUr.SearchKey,false);
        OutString(270,0,CUr.CustCat,false);
        EndFormat;
        if (nonblank(CUr.InvAddr0)) then begin
          StartFormat(15);
          OutString(80,0,CUr.InvAddr0,false);
          EndFormat;
        end;
        if (nonblank(CUr.InvAddr1)) then begin
          StartFormat(15);
          OutString(80,0,CUr.InvAddr1,false);
          EndFormat;
        end;
        if (nonblank(CUr.InvAddr2)) then begin
          StartFormat(15);
          OutString(80,0,CUr.InvAddr2,false);
          EndFormat;
        end;
        if (nonblank(CUr.InvAddr3)) then begin
          StartFormat(15);
          OutString(80,0,CUr.InvAddr3,false);
          EndFormat;
        end;
        if (nonblank(CUr.InvAddr4)) then begin
          StartFormat(15);
          OutString(80,0,CUr.InvAddr4,false);
          EndFormat;
        end;
        if (nonblank(CUr.DelAddr0)) then begin
          StartFormat(15);
          OutString(80,0,CUr.DelAddr0,false);
          EndFormat;
        end;
        if (nonblank(CUr.DelAddr1)) then begin
          StartFormat(15);
          OutString(80,0,CUr.DelAddr1,false);
          EndFormat;
        end;
        if (nonblank(CUr.DelAddr2)) then begin
          StartFormat(15);
          OutString(80,0,CUr.DelAddr2,false);
          EndFormat;
        end;
        if (nonblank(CUr.DelAddr3)) then begin
          StartFormat(15);
          OutString(80,0,CUr.DelAddr3,false);
          EndFormat;
        end;
        if (nonblank(CUr.DelAddr4)) then begin
          StartFormat(15);
          OutString(80,0,CUr.DelAddr4,false);
          EndFormat;
        end;
        Black_Divider(0,1);
        end;//testf
      end;
    end;
    EndJob;
  return;
end;






