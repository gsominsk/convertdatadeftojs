external updating procedure TRfromIVCash(record RcVc,record TRVc,Integer);
external procedure FormTrr(record RcVc,Integer,record TRVc,Integer,var val,record SMVc,var LongInt,Boolean);

global
updating procedure TransGenPOSRn(record RcVc RepSpec)
BEGIN
  record TRVc TRr;
  row TRVc TRrw;
  record SMVc Dummyr;
  val TransSum;
  LongInt TransCount;
  Integer i,rwcnt;

  StartReportJob(USetStr(10325));
  EndHeader;
  SetRepCol(2,60);
  SetRepCol(3,140);
  SetRepCol(4,380);
  SetRepCol(5,465);
  switch (RepSpec.ArtMode) begin
    case 0: 
      StartFormat(15);
      OutString(0,0,USetStr(2741),false);
      OutString(2,0,USetStr(2742),false);
      OutString(3,0,USetStr(2743),false);
      EndFormat;
    case 1: 
      StartFormat(15);
      OutString(20,0,USetStr(2744),false);
      OutString(2,0,USetStr(2748),false);
      OutString(4,0,USetStr(2745),true);
      OutString(5,0,USetStr(2746),true);
      EndFormat;
  end;  
  Gray_Divider(0,1);
  TRfromIVCash(RepSpec,TRr,1);
  switch (RepSpec.ArtMode) begin
    case 0: 
      StartFormat(15);
      OutString(20,0,USetStr(2744),false);
      OutString(2,0,USetStr(2748),false);
      OutString(4,0,USetStr(2745),true);
      OutString(5,0,USetStr(2746),true);
      EndFormat;
  end;  
  Gray_Divider(0,1);
  rwcnt = MatRowCnt(TRr);
  for (i=0 ;i<rwcnt; i=i+1) begin
    MatRowGet(TRr,i,TRrw);
    if (TRrw.stp==1) then begin
      FormTrr(RepSpec,160,TRr,i,TransSum,Dummyr,TransCount,true);
    end;  
  end;          
  Gray_Divider(0,1);
  EndJob;
  RETURN;
END;
