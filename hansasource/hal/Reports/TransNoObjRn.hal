external function Boolean ObjectTypeMatch(string,string);
external procedure TRExtYc(record TRVc,var string);

procedure OneCompanyTransactions(record RcVc RepSpec,string compcode,var Boolean companyf)
BEGIN
  record TRVc TRr;
  row TRVc TRrw;
  Boolean TrHs,testf;
  Integer i,rwcnt;
  string 255 tstr;
  Integer res;

  TrHs = true;
  TRr.TransDate = RepSpec.sStartDate;
  while (LoopKey("TransDate",TRr,1,TrHs)) begin
    if (TRr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
    testf = TrHs;
    if (testf) then begin
      if (RepSpec.flags[2]==0) then begin
        testf = true;
      end else begin
        testf = false;
      end;
      res = 0;
      rwcnt = MatRowCnt(TRr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TRr,i,TRrw);
        if ((TRrw.ovst!=0) or (TRrw.stp!=1)) then begin
          testf = false;
        end;
        if (((nonblank(TRrw.AccNumber)) or (TRrw.DebVal!=0) or (TRrw.CredVal!=0) or 
            (TRrw.DebVal2!=0) or (TRrw.CredVal2!=0) or (RepSpec.flags[1]==0)) and (TRrw.ovst==0) and (TRrw.stp==1)) then begin
          if (nonblank(RepSpec.ObjType)) then begin
            if (ObjectTypeMatch(TRrw.Objects,RepSpec.ObjType)==false) then begin
              if (RepSpec.flags[2]!=0) then begin
                testf = true;
                i = rwcnt;
                res = 1;
              end;
            end else begin
              if (RepSpec.flags[2]==0) then begin
                testf = false;
                i = rwcnt;
                res = 2;
              end;
            end;
          end;
          if (nonblank(RepSpec.ObjStr)) then begin
            if (SetInSet(RepSpec.ObjStr,TRrw.Objects)==false) then begin
              if (RepSpec.flags[2]!=0) then begin
                testf = true;
                i = rwcnt;
                res = 3;
              end;
            end else begin
              if (RepSpec.flags[2]==0) then begin
                testf = false;
                i = rwcnt;
                res = 4;
              end;
            end;
          end else begin
            if (blank(RepSpec.ObjType)) then begin
              if (nonblank(TRrw.Objects)) then begin 
                if (RepSpec.flags[2]!=0) then begin
                  testf = true;
                  i = rwcnt;
                  res = 5;
                end;
              end else begin
                if (RepSpec.flags[2]==0) then begin
                  testf = false;
                  i = rwcnt;
                  res = 6;
              end;
              end;
            end;
          end;
        end;
        if (((RepSpec.flags[0]!=0)) and ((TRrw.DebVal!=0) or (TRrw.CredVal!=0) or 
            (TRrw.DebVal2!=0) or (TRrw.CredVal2!=0)) and (TRrw.ovst==0) and (TRrw.stp==1)) then begin
          if (blank(TRrw.AccNumber)) then begin
            testf = true;
            i = rwcnt;
            res = 7;
          end;
        end;
      end;
      if (testf) then begin
        if (companyf) then begin
          StartFormat(15);
          OutString(0,0,USetStr(14162) & ": " & compcode,false)
          EndFormat;
          Gray_Divider(0,200);
          companyf = false;
        end;
        TRExtYc(TRr,tstr);
        StartFormat(15);
        OutString(0,"DblTrans",tstr,false);
        OutString(130,0,TRr.Comment,false);
        OutString(300,0,TRr.TransDate,false);
        OutString(1,0,res,true);
        EndFormat;
      end;
    end;
  end;
  RETURN;
END;

function string 255 FindCompanyName(Integer compcode)
BEGIN
  record CompaniesBlock CompaniesRec;
  row CompaniesBlock Companiesrw;
  Integer i,rwcnt;
  string 255 res;

  BlockLoad(CompaniesRec);
  rwcnt = MatRowCnt(CompaniesRec);
  for (i=0;i<rwcnt;i=i+1) begin
    if (i==(compcode-1)) then begin
      MatRowGet(CompaniesRec,i,Companiesrw);
      res = Companiesrw.CompCode;
      goto LFindCompanyName;
    end;
  end;
LFindCompanyName:;  
  FindCompanyName = res;
  RETURN;
END;

global
procedure TransNoObjRn(record RcVc RepSpec)
BEGIN
  record DaughterCompBlock DaughterCompRec;
  row DaughterCompBlock DaughterComprw;

  Integer i,rwcnt;
  Integer oldcomp;
  Boolean testf,companyf;
  
  StartReportJob(USetStr(14160))
  EndHeader;
  StartFormat(15);
   OutString(0,0,USetStr(14161),false)
  EndFormat;
  Gray_Divider(0,1);
  oldcomp = CurrentCompany;  
  companyf = true;
  OneCompanyTransactions(RepSpec,FindCompanyName(oldcomp),companyf);
  if (companyf==false) then begin
    Gray_Divider(0,1);
  end;
  BlockLoad(DaughterCompRec);
  rwcnt = MatRowCnt(DaughterCompRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(DaughterCompRec,i,DaughterComprw);
    testf = true;
    if (nonblank(RepSpec.FirstAcc)) then begin 
      if (RepSpec.FirstAcc!=DaughterComprw.CompCode) then begin
        testf = false; 
      end;
    end;
    if (testf) then begin
      if (SetCompanyCode(DaughterComprw.CompCode,false)) then begin
        companyf = true;
        OneCompanyTransactions(RepSpec,DaughterComprw.CompCode,companyf);
        if (companyf==false) then begin
          Gray_Divider(0,1);
        end;
      end;  
    end;
  end;
  ResetCompany(oldcomp);  
  EndJob;
  RETURN;
END;
