/*This report shows all productions orders with status Created 
It might be that it should be resorted by Planned date */

external procedure HTItem(string,var string);
external procedure HTArtGroup(string, var string);
external procedure HTItemClass(string,var string);
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean ItemInItemGroupOrClass(string,string,string);
external procedure HT2Per(Date, Date , var string);

procedure FindOutItemGroupAndClass(record ProdOrderVc ProdOrderr,var boolean testf, record RcVc RepSpec)
begin
  integer rwcnt,i;
  record INVc INr;
  row ProdOrderVc Prodorderrw;
  
  testf = false;
  rwcnt = MatRowCnt(ProdOrderr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ProdOrderr,i,ProdOrderrw);
    if (ProdOrderrw.OutQty > 0) then begin
      testf = ItemInItemGroupOrClass(ProdOrderrw.Item,RepSpec.f3,RepSpec.f6);
      if (nonblank(RepSpec.f5)) then begin 
        if (RepSpec.f5!=ProdOrderrw.Item) then begin testf = false; end; 
      end; 
      if (testf) then begin 
        i = rwcnt;
      end; 
    end;
  end;
  return;
end;

global
procedure ProdOrderPlanRn(record RcVc RepSpec)
begin
  record ProdOrderVc ProdOrderr;
  boolean TrHs, testf;
  LongInt sernr;
  string 5 unit;
  integer qty;
  string 255 tstr;
  integer rw;
  sernr = FirstInRange(RepSpec.f3,10);
  
  rw = 1;
  StartReportJob(USetStr(15010));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(15018) & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw +1 ;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(15019) & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw +1 ;
  end;
  if (nonblank(RepSpec.f5)) then begin
    HTItem(RepSpec.f5,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (HasItemGroups) then begin
    HTArtGroup(RepSpec.f3,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasItemClassification) then begin
    HTItemClass(RepSpec.f6,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (nonblank(RepSpec.f4)) then begin
    tstr = USetStr(15021) & RepSpec.f4;
    Header(rw,tstr,1);
    rw = rw +1 ;
  end;
  EndHeader;
  SetRepCol(2,80);
  SetRepCol(3,130);
  SetRepCol(4,200);
  SetRepCol(5,400);
  StartFormat(15);
  OutString(0,0,USetStr(15011),false);
  OutString(2,0,USetStr(15012),false);
  OutString(3,0,USetStr(15013),false);
  OutString(4,0,USetStr(15014),false);
  OutString(5,0,USetStr(15015),true);
  OutString(1,0,USetStr(15016),true);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  while (LoopKey("DoneFlag",ProdOrderr,1,TrHs)) begin
    if (TrHs) then begin
      if (ProdOrderr.DoneFlag <> 0) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f1)) then begin
        if (RepSpec.f1 <> ProdOrderr.Location) then begin
          testf = false;
        end;
      end;
      if (ProdOrderr.StatusFlag <> 0) then begin
        testf = false;
      end;
       if (nonblank(RepSpec.f2)) then begin
        if (ProdOrderr.Recipe <> RepSpec.f2) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f4)) then begin
        if (RepSpec.f4 <> ProdOrderr.Machine) then begin
          testf = false;
        end;
      end;
      if (nonblankdate(ProdOrderr.PlannedStartDate)) then begin
        if (DateInRange(ProdOrderr.PlannedStartDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
          testf = false;
        end;  
      end;
      if (testf) then begin
        if (nonblank(RepSpec.f3) or nonblank(RepSpec.f5) or nonblank(RepSpec.f6)) then begin
          FindOutItemGroupAndClass(ProdOrderr,testf,RepSpec)
        end;
      end;
      if (testf) then begin
        StartFormat(15);
        OutString(0,"DblProdOrderVc",ProdOrderr.SerNr,false);
        OutString(2,0,ProdOrderr.Recipe,false);
        OutString(3,0,ProdOrderr.Machine,false);
        OutString(4,0,ProdOrderr.RecName,false);
        OutVal(5,0,ProdOrderr.Qty,M40Val,true);
        OutString(1,0,ProdOrderr.PlannedStartDate,true);
        EndFormat;
        qty = qty + 1;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(450,0,USetStr(15017),true);
  OutVal(1,0,qty,M40Val,true);
  EndFormat;
  EndJob;
  Return;
end;