procedure PrintConferencesWithGroup(string Group,string conference)
begin
  record ConfVc Confr;
  Boolean found,firstf,testf;
  record ConfAccVc ConfAccr;

  firstf = true;
  found = true;
  while (LoopKey("Group:" & Group,Confr,1,found)) begin
    testf = true;
    if (Confr.Class==kConfClassMailbox) then begin testf = false; end;
    if (nonblank(conference)) then begin
      if (Confr.AddrName!=conference) then begin testf = false; end;
    end;
    if (testf) then begin
      if (found) then begin
        if (firstf) then begin
          StartFormat(15);
           OutString(2,0,USetStr(16113),false);
           OutString(3,0,USetStr(16114),false);
          EndFormat;
          Gray_Divider(0,1);
          ConfAccr.Code = Group;
          if (ReadFirstMain(ConfAccr,1,true)) then begin end;
          StartFormat(15);
           OutString(2,0,Group,false);
//           OutString(100,0,ConfAccr.Comment,false);
          EndFormat;
          firstf = false;
        end;
        StartFormat(15);
         OutString(3,0,Confr.AddrName,false);
        EndFormat;
      end;
    end;
  end;
  return;
end;

global
procedure UserConfAccessRn(record RcVc RepSpec)
begin
  record UserVc Userr;
  record ConfVc Confr;
  row ConfVc Confrw;
  Boolean found;
  Integer i,rwcnt;
  string 20 frus,tous;
  
  StartReportJob(USetStr(16110));
  EndHeader;
  SetRepCol(2,15);
  SetRepCol(3,100);
  StartFormat(15);
   OutString(0,0,USetStr(16112),false);
  EndFormat;
  Gray_Divider(0,1);

  frus = FirstInRange(RepSpec.f1,20);
  tous = LastInRange(RepSpec.f1,20);
  Userr.Code = frus;
  found = true;
  while (LoopMain(Userr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (Userr.Code>tous) then begin found = false; end;
    end;
    if (found) then begin
      StartFormat(15);
       OutString(0,0,Userr.Name,false);
      EndFormat;
      Gray_Divider(0,1);

      Confr.AddrName = Userr.Name;
      if (ReadFirstKey("AddrName",Confr,1,true)) then begin
        rwcnt = MatRowCnt(Confr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Confr,i,Confrw);
          PrintConferencesWithGroup(Confrw.Group,RepSpec.f2);
        end;
      end;
      Gray_Divider(0,1);
    end;
  end;
  EndJob;
  return;
end;
