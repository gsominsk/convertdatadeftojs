external function LongInt FindReservation(string,Date,Time);

global
procedure AllocGuestRn(record RcVc RepSpec)
begin
   Integer i;
   record ResVc Room;
   record JobVc Res;
   Boolean TsHr,Skip,Dummy;
   Integer p1,p2,p3,p4,p5,p6,p7,p8,p9,pA,pB;
   String 50 tstr,InvoiceNro;
   Integer keys;
   String 20 mykey;
   String 60 vatnr,vatPos,Supname,dom1,dom2;
   String 100 HdrStr;
   Integer HdrLn;
   LongInt ResNro,tt,t2;

   // Positions
   p1= 0;
   p2= 55;
   p3= 135;
   p4= 320;
   p5= 400;
   p7= 480;  

   // Get parameters & Init
   tt = 0;
   TsHr = true;
   
   StartReportJob(USetStr(9970));
   EndHeader;

   StartFormat(15);
   OutString(p1,0,USetStr(9971),false);
   OutString(p2,0,USetStr(9972),false);
   OutString(p3,0,USetStr(9973),false);
   OutString(p4,0,USetStr(9974),false);
   OutString(p5,0,USetStr(9975),false);
   OutString(p7,0,USetStr(9976),true);  
   EndFormat;
  
  Gray_Divider(0,1);
  
   while (LoopMain(Room,1,TsHr)) begin
   
      Skip = false;
      if ((RepSpec.f1 <> Room.Type) and (not Blank(RepSpec.f1))) then begin
        Skip = true;
      end;

      If (not Skip) then begin
         StartFormat(15);
         ResNro = FindReservation(Room.Code,CurrentDate,CurrentTime);
         OutString(p1,0,Room.Code,false);
         OutString(p2,0,Room.Type,false);
        if (ResNro==-1) then begin
           OutString(p3,0,USetStr(9978),false);
         end else begin
           Res.SerNr = ResNro;
           if (ReadFirstMain(Res,1,true)) then begin
             OutString(p3,0,Left(Res.CUName,25),false);
             OutDate(p4,0,Res.TransDate,false);
             OutDate(p5,0,Res.EndDate,false); 
             OutLongInt(p7,0,StringtoInt(Res.Persons),true);
             t2 = Stringtoint(Res.Persons);
             if (t2>0) then begin
               tt = tt + t2;
             end;
           end;      
         end;
         EndFormat;
      End;

   end;

  // Footer
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(p1,0,USetStr(9977),false);
  OutLongInt(p7,0,tt,true);
  EndFormat;

  EndJob;
  return;
end;