external procedure HT2Per(Date,Date,var string);
external procedure HTCusts(string,string,var string);

procedure UnivTestResults(record RcVc RepSpec,string coursecode,var LongInt totcnt,var Boolean firstcourse)
begin
  Boolean found,testf,firstf;
  record UnivTestAnswerVc UTAr;
  LongInt NoOfQuestions;
  string 255 ckey;
  Integer keys;
  record CUVc CUr;

  firstf = true;
  found = true;
  if (blank(RepSpec.f2)) then begin
    ckey = "CourseCodeEndDate";
    keys = 2;
    UTAr.CourseCode = coursecode;
    UTAr.EndDate = RepSpec.sStartDate;
  end else begin
    ckey = "CustCode";
    keys = 3;
    UTAr.CustCode = RepSpec.f2;
    UTAr.CourseCode = coursecode;
    UTAr.EndDate = RepSpec.sStartDate;
  end;
  while (LoopKey(ckey,UTAr,keys,found)) begin
    if (UTAr.CourseCode!=coursecode) then begin
      found = false;
    end;
    if (nonblankdate(RepSpec.sEndDate) and UTAr.EndDate>RepSpec.sEndDate) then begin
      found = false;
    end;
    if (nonblank(RepSpec.f2) and UTAr.CustCode!=RepSpec.f2) then begin
      found = false;
    end;
    if (found) then begin
      testf = true;
      NoOfQuestions = RepSpec.long1;
      if (NoOfQuestions<=0) then begin
        NoOfQuestions = UTAr.NoOfQuestions;
      end;
      switch (RepSpec.flags[0]) begin
        case 0:
          if (UTAr.CorrectAnswers<NoOfQuestions) then begin
            testf = false;
          end;
        case 1:
          if (UTAr.CorrectAnswers>=NoOfQuestions) then begin
            testf = false;
          end;
      end;
      if (nonblank(RepSpec.f3) and SetInSet(UTAr.Person,RepSpec.f3)==false) then begin
        testf = false;
      end;
      if (testf) then begin
        if (nonblank(UTAr.CustCode)) then begin
          CUr.Code = UTAr.CustCode;
          ReadFirstMain(CUr,1,true);
          testf = false;
          if (RepSpec.flags[1]!=0 and CUr.CUType!=0) then begin
            testf = true;
          end;
          if (RepSpec.flags[2]!=0 and CUr.VEType!=0) then begin
            testf = true;
          end;
          if (RepSpec.flags[3]!=0 and CUr.GuestType!=0) then begin
            testf = true;
          end;
          if (RepSpec.flags[4]!=0 and CUr.DealerType!=0) then begin
            testf = true;
          end;
          if (RepSpec.flags[5]!=0 and CUr.EmployeeType!=0) then begin
            testf = true;
          end;
          if (RepSpec.flags[6]!=0) then begin
            if (CUr.CUType==0 and CUr.VEType==0 and CUr.GuestType==0 and CUr.DealerType==0 and CUr.EmployeeType==0) then begin
              testf = true;
            end;
          end;
        end;
        if (nonblank(UTAr.Person)) then begin
          if (RepSpec.flags[7]!=0) then begin
            testf = true;
          end;
        end;
      end;
      if (testf) then begin
        if (blank(RepSpec.f2)) then begin
          if (firstf) then begin
            if (!firstcourse) then begin
              StartFormat(15);
              EndFormat;
            end;
            StartFormat(15);
             OutString(0,0,UTAr.CourseCode,false);
            EndFormat;
            StartFormat(15);
             OutString(0,0,UsetStr(16745),false);
             OutString(200,0,UsetStr(16746),false);
             OutString(280,0,UsetStr(16747),false);
             OutString(360,0,UsetStr(16748),false);
             OutString(420,0,UsetStr(16749),false);
            EndFormat;
            Gray_Divider(0,1);
            firstf = false;
          end;
          StartFormat(15);
           OutStringID(0,"DblCUVc",UTAr.PersonName,false,UTAr.CustCode);
           OutDate(200,0,UTAr.EndDate,false);
           OutString(280,0,UTAr.EndTime,false);
           OutString(360,0,UTAr.CorrectAnswers,false);
           OutString(420,0,UTAr.NoOfQuestions,false);
          EndFormat;
        end else begin
          if (firstcourse) then begin
            StartFormat(15);
             OutStringID(0,"DblCUVc",UTAr.PersonName,false,UTAr.CustCode);
            EndFormat;
            StartFormat(15);
             OutString(0,0,UsetStr(16742),false);
             OutString(200,0,UsetStr(16746),false);
             OutString(280,0,UsetStr(16747),false);
             OutString(360,0,UsetStr(16748),false);
             OutString(420,0,UsetStr(16749),false);
            EndFormat;
            Gray_Divider(0,1);
          end;
          StartFormat(15);
           OutString(0,0,UTAr.CourseCode,false);
           OutDate(200,0,UTAr.EndDate,false);
           OutString(280,0,UTAr.EndTime,false);
           OutString(360,0,UTAr.CorrectAnswers,false);
           OutString(420,0,UTAr.NoOfQuestions,false);
          EndFormat;
        end;
        totcnt = totcnt + 1;
        firstcourse = false;
      end;
    end;
  end;
  return;
end;

procedure HTUnivTests(string a, string b, var string res)
begin
  if (blank(a) and blank(b)) then begin
    res = USetStr(16741);
  end else begin
    res = USetStr(16742);
    res = res & " " & a;
    if (a <> b) then begin
      res = res & " : " & b;
    end;
  end;
  return;
end;

procedure UnivTestResHeader(record RcVc RepSpec)
begin
  string 255 tstr;
  Integer rw;
  string 255 frut,tout;
  
  frut = FirstInRange(RepSpec.f1,20);
  tout = LastInRange(RepSpec.f1,20);
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTUnivTests(frut,tout,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTCusts(RepSpec.f2,RepSpec.f2,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  switch (RepSpec.flags[0]) begin
    case 0: tstr = USetStr(16743);
    case 1: tstr = USetStr(16744);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  return;
end;

global
procedure UnivTestResRn(record RcVc RepSpec)
begin
  Boolean found,firstcourse;
  record UnivTestVc UTr;
  string 255 frut,tout;
  LongInt totcnt;
  
  firstcourse = true;
  totcnt = 0;
  StartReportJob(USetStr(16740));
  UnivTestResHeader(RepSpec);
  EndHeader;
  frut = FirstInRange(RepSpec.f1,20);
  tout = LastInRange(RepSpec.f1,20);
  found = true;
  UTr.CourseCode = frut;
  while (LoopMain(UTr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (UTr.CourseCode>tout) then begin found = false; end;
    end;
    if (found) then begin
      UnivTestResults(RepSpec,UTr.CourseCode,totcnt,firstcourse);
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
   OutString(300,0,UsetStr(16750),false);
   OutLongInt(420,0,totcnt,false);
  EndFormat;
  EndJob;
  return;
end;
