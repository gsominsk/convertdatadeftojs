external procedure HTItem(string,var string);
external procedure HTArtGroup(string, var string);
external procedure HTItemClass(string,var string);
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean RentalItemInItemGroupOrClass(string,string,string);
external function LongInt DateDiff(Date,Date);

global 
procedure UncOffHireRn(record RcVc RepSpec)
begin
  record RentResVc Rentr;
  record AgreementVc Agreementr;
  boolean TrHs, testf;
  LongInt diff;
  val days, qty, avg;
  string 255 tstr;
  integer rw;

  StartReportJob(USetStr(12890));
  HTItem(RepSpec.f3,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (HasItemGroups) then begin
    HTArtGroup(RepSpec.f2,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasItemClassification) then begin
    HTItemClass(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;  
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(12891),false);
  OutString(90,0,USetStr(12892),false);
  OutString(160,0,USetStr(12893),false);
  OutString(240,0,USetStr(12894),false);
  OutString(320,0,USetStr(12895),false);
  OutString(400,0,USetStr(12896),false);
  OutString(1,0,USetStr(12897),true);
  EndFormat;
  Gray_Divider(0,1);
  Rentr.SerNr = -1;
  TrHs = true;
  while (LoopMain(Rentr,1,TrHs)) begin
   /* if (TrHs) then begin
      if (nonblankdate(Rentr.EndDate)) then begin
        if (Rentr.EndDate > CurrentDate) then begin
           TrHs = false;
        end;
      end;
    end; */
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f1)) then begin 
        Agreementr.SerNr = Rentr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          if (Agreementr.CustCode <> RepSpec.f1) then begin
            testf = false;
          end;
        end;
      end; 
      if (nonblank(RepSpec.f5)) then begin 
       if (Rentr.Location <> RepSpec.f5) then begin
         testf = false;
       end;
      end;
      if (nonblank(RepSpec.f3)) then begin
        if (Rentr.Code <> RepSpec.f3) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        testf = RentalItemInItemGroupOrClass(Rentr.Code,RepSpec.f2,RepSpec.f4);
      end;      
      if (Rentr.RentResRet > 0) then begin
        testf = false;
      end;
      if (blankdate(Rentr.EndDate)) then begin
        testf = false;
      end;
      if (Rentr.EndDate > CurrentDate) then begin
        testf = false;
      end;
      if (testf) then begin
        Agreementr.SerNr = Rentr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)==false) then begin
          Agreementr.CustCode = "";
        end;
        StartFormat(15);
        OutString(0,0,Agreementr.CustCode,false);
        OutStringID(90,"DblRentResVc",Rentr.SerNr,false,Rentr.SerNr);
        OutString(160,0,Rentr.EndDate,false);
        OutString(240,0,Rentr.SerialNr,false);
        OutString(320,0,Rentr.Code,false);
        OutString(400,0,Rentr.Location,false);
        diff = DateDiff(CurrentDate,Rentr.EndDate);
        OutVal(1,0,diff,M40Val,true);
        EndFormat;
        qty = qty + 1;
        days = days + diff;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(450,0,USetStr(12898),true);
  OutVal(1,0,qty,M40Val,true);
  EndFormat;
  avg = days/qty;
  StartFormat(15);
  OutString(450,0,USetStr(12899),true);
  OutVal(1,0,avg,M40Val,true);
  EndFormat;
  EndJob; 
  return;
end;