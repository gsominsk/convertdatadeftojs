external function boolean CheckItemGroupClassification(string,string,string);
external procedure HTItemClass(string,var string);
external procedure HTArtSel(string,string, var string);

// Should care about FileName becuase there are other things in here except SVGM records
global
procedure SVOItemRn(record RcVc RepSpec)
begin
  record SVOSerHistVc SVOShr;
  record SVOVc SVOr;
  record SVGMVc SVGMr;
  record StandProblemVc STPr;
  row SVOVc SVOw;
  Integer i,rwcnt;
  Boolean TrHs,testf,test;
  string 255 tstr;
  string 20 frit,toit;
  LongInt totcnt;
  Integer rw;

  
  frit = FirstInRange(RepSpec.f1,20);
  toit = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(7760));
  rw = 1;
  if (nonblank(RepSpec.f1) or nonblank(RepSpec.f3)) then begin
    HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f8)) then begin 
    HTItemClass(RepSpec.f8,tstr);
    Header(rw,tstr,1);  
    rw = rw + 1;  
  end;
  EndHeader;
  StartFormat(15);
   OutString(0,0,USetStr(7764),false);
   OutString(100,0,USetStr(7765),false);                  
   OutString(170,0,USetStr(7766),false);
   OutString(300,0,USetStr(7767),false);
  EndFormat; 
  Gray_Divider(0,1);
  totcnt = 0;
  TrHs = true;
  SVOShr.ItemCode = frit;
  SVOShr.Date = RepSpec.sStartDate;
  while (LoopMain(SVOShr,2,TrHs)) begin
    test = TrHs;
    if (nonblank(RepSpec.f1)) then begin
      if (SVOShr.ItemCode>toit) then begin
        TrHs = false;
        test = false;
      end;
    end;
    if (CheckItemGroupClassification(SVOShr.ItemCode,RepSpec.f3,RepSpec.f8)==false) then begin 
      test = false;
    end;
    if (test) then begin
      SVGMr.SerNr = SVOShr.TransNr;
      if (ReadFirstMain(SVGMr,1,true)) then begin
        SVOr.SerNr = SVGMr.SVONr;
        if (ReadFirstMain(SVOr,1,true)) then begin
          rwcnt = MatRowCnt(SVOr);
          for (i = 0;i<rwcnt;i = i + 1) begin
            MatRowGet(SVOr,i,SVOw);
            testf = false;
            if (RepSpec.flags[1]==1) then begin
              if (SVOw.ItemType==1) then begin
                testf = true;
              end;
            end;
            if (RepSpec.flags[2]==1) then begin
              if (SVOw.ItemType==2) then begin
                testf = true;
              end;
            end;
            if (RepSpec.flags[3]==3) then begin
              if (SVOw.ItemType==3) then begin
                testf = true;
              end;
            end;
            if (RepSpec.flags[5]==1) then begin
              if (SVOw.ItemType==4) then begin
                testf = true;
              end;
            end;
            if (DateInRange(SVOr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
              testf = false;
            end;
            if (nonblank(RepSpec.f2)) then begin
              if (SVOShr.SerialNr<>RepSpec.f2) then begin
                testf = false;
              end;
            end;
            if (testf) then begin
              if (SVOw.ArtCode==SVOShr.ItemCode) then begin
                totcnt = totcnt + 1;              
                StartFormat(15);
                 OutString(0,0,SVOw.ArtCode,false);
                 OutDate(100,0,SVOr.TransDate,false);                  
                 OutString(170,0,SVOw.SerialNr,false);
                 if (SVOw.ItemType==1) then begin
                   OutString(300,0,USetStr(7761),false);
                 end;
                 if (SVOw.ItemType==2) then begin
                   OutString(300,0,USetStr(7762),false);
                 end;
                 if (SVOw.ItemType==3) then begin
                   OutString(300,0,USetStr(7763),false);
                 end;
                 if (SVOw.ItemType==4) then begin
                   OutString(300,0,USetStr(7768),false);
                 end;
                EndFormat;
                if (RepSpec.flags[4]==1) then begin
                   STPr.Code = SVOw.StandProblem;
                   if (ReadFirstMain(STPr,1,true)) then begin
                     StartFormat(15);
                     OutString(0,0,STPr.Code,false);
                     OutString(100,0,STPr.ShortDesc,false);
                     EndFormat;
                     StartFormat(15);
                     OutString(0,0,STPr.Comment1,false);
                     EndFormat;
                     StartFormat(15);
                     OutString(0,0,STPr.Comment2,false);
                     EndFormat;
                     StartFormat(15);
                     OutString(0,0,STPr.Comment3,false);
                     EndFormat;
                     Gray_Divider(0,300);
                   end;
                end;            
              end;
            end;  
          end;    
        end;      
      end;
    end;  
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutLongInt(0,0,totcnt,false);
  EndFormat;
  EndJob;
  return;
end;
