external function Boolean CheckTodoAcessAct(record ActVc,string);
external procedure HT2Per(Date, Date,var string);
external function Boolean SetInSet2(string,string);

global
procedure ActJRn(record RcVc RepSpec)
BEGIN
  record CUVc Cur;
  record ActVc Actr;
  record ActTypeVc ActTyper;
  Boolean foundf,testf;
  boolean datef,readf;
  string 60 keystr,tstr;
  string 20 frcu,tocu;
  string 30 acttype;
  integer rw;
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  
  StartReportJob(USetStr(9821));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(7250),false);
  OutString(50,0,USetStr(9822),false);
  OutString(120,0,USetStr(9823),false);
  OutString(200,0,USetStr(9824),false);
  OutString(270,0,USetStr(7589),false);
  EndFormat;
  Gray_Divider(0,1);
  foundf = true;
  keystr = "UserMain:";
  keystr = keystr & CurrentUser;
  while (LoopKey(keystr,Actr,1,foundf)) begin
    if (foundf) then begin
      testf = true;
      datef = false;
      if (RepSpec.flags[0] == 0) then begin
        if (DateInRange(Actr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true; end;
      end;
      if (RepSpec.flags[1] == 1) then begin
        if (DateInRange(Actr.CreationDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true;; end;
      end;
      if (RepSpec.flags[2] == 1) then begin
        if (DateInRange(Actr.LastChangedDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true; end;
      end;
      if (RepSpec.flags[6] == 1) then begin
        if (DateInRange(Actr.EndDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true; end;
      end else begin
        if (Actr.OKFlag!=0) then begin testf = false; end;
      end;

      if (datef == false) then begin
        testf = false;
      end;
      
      if (RepSpec.flags[3] == 1 and Actr.CalTimeFlag == 1) then begin testf = false; end;
      if (RepSpec.flags[4] == 1 and Actr.CalTimeFlag == 2) then begin testf = false; end;
      if (RepSpec.flags[5] == 1 and Actr.CalTimeFlag == 0) then begin testf = false; end;
      if (Actr.Invalid!=0) then begin testf = false; end;
       if (nonblank(RepSpec.f3)) then begin
        if (RepSpec.f3!=Actr.ActType) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (Actr.CUCode<frcu) then begin testf = false; end;
        if (Actr.CUCode>tocu) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f5) and RepSpec.f5 != Actr.PRCode) then begin
        testf=false;
      end;
      Cur.Code = Actr.CUCode;
      readf = ReadFirstmain(CUr,1,true);
      
      if (nonblank(RepSpec.f4) and RepSpec.f4 != CUr.CustCat) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (SetInSet2(RepSpec.f2,CUr.Classification)==false) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        testf = CheckTodoAcessAct(Actr,CurrentUser);
      end;
      if (testf) then begin
        switch (Actr.CalTimeFlag) begin
          case 1: 
            acttype = USetStr(9825);
          case 2:
            acttype = USetStr(9826);
          case 0:
            acttype = USetStr(9827);
        end;
        ActTyper.Code = Actr.ActType;
        testf = readfirstmain(ActTyper,1,true);
        StartFormat(15);
         OutLongInt(0,"DblActVc",Actr.SerNr,false);
         OutString(50,0,Actr.TransDate,false);
         OUtString(120,0,ActTyper.Comment,false);
         OUtString(200,0,acttype,false);
         OutString(270,0,Actr.Comment,false);
        EndFormat;
      end;
    end;  
  end;
  EndJob;
  RETURN;
END;

global
procedure UserActRn(record RcVc RepSpec)
BEGIN
  record CUVc Cur;
  record CalDispGroupBlock CalDisGrbl;
  record ActVc Actr;
  record ActTypeVc ActTyper;
  row CalDispGroupBlock CalDisGrrw;
  Boolean foundf,testf;
  boolean datef,readf;
  string 60 keystr,tstr;
  string 20 frcu,tocu;
  string 30 acttype;
  string 10 ustr;
  integer rw,rwc;
  integer x,lastp;
  
  blockLoad(CalDisGrBl);
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(9821));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(7250),false);
  OutString(50,0,USetStr(9822),false);
  OutString(120,0,USetStr(9823),false);
  OutString(200,0,USetStr(9824),false);
  OutString(270,0,USetStr(7589),false);
  EndFormat;
  Gray_Divider(0,1);
  foundf = true;
  keystr = "SerNr";
  rwc = matrowcnt(CalDisGrbl);
  while (LoopKey(keystr,Actr,1,foundf)) begin
    if (foundf) then begin
      testf = true;
      
      datef = false;
      
      
      if (RepSpec.flags[0] == 0) then begin
        if (DateInRange(Actr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true; end;
      end;
      if (RepSpec.flags[1] == 1) then begin
        if (DateInRange(Actr.CreationDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true;; end;
      end;
      if (RepSpec.flags[2] == 1) then begin
        if (DateInRange(Actr.LastChangedDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true; end;
      end;
    
      if (RepSpec.flags[6] == 1) then begin
        if (DateInRange(Actr.EndDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin datef = true; end;
      end else begin
        if (Actr.OKFlag!=0) then begin testf = false; end;
      end;

      if (datef == false) then begin
        testf = false;
      end;
      
      
      if (RepSpec.flags[3] == 1 and Actr.CalTimeFlag == 1) then begin testf = false; end;
      if (RepSpec.flags[4] == 1 and Actr.CalTimeFlag == 2) then begin testf = false; end;
      if (RepSpec.flags[5] == 1 and Actr.CalTimeFlag == 0) then begin testf = false; end;
     /*
      if (testf) then begin
        messagebox(0,"AAA");
      end;
     */
      
      
      if (Actr.Invalid!=0) then begin testf = false; end;
      if (nonblank(RepSpec.f3)) then begin
        if (RepSpec.f3!=Actr.ActType) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (Actr.CUCode<frcu) then begin testf = false; end;
        if (Actr.CUCode>tocu) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f6) and SetInSet(repSpec.f6,Actr.MainPersons)==false) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f5) and RepSpec.f5 != Actr.PRCode) then begin
        testf=false;
      end;
      Cur.Code = Actr.CUCode;
      readf = ReadFirstmain(CUr,1,true);
     if (nonblank(RepSpec.f4) and RepSpec.f4 != CUr.CustCat) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f2) and setinset2(RepSpec.f2,Cur.Classification)) then begin
        testf = false;
      end;
      
      if (nonblank(RepSpec.ObjStr) and testf) then begin
        lastp = 0;
        datef = false;
        for (x = 0; x <= len(Actr.MainPersons); x = x + 1) begin
          if (mid(Actr.MainPersons,x,1)=="," or x == len(Actr.MainPersons)) then begin
            ustr = mid(Actr.MainPersons,lastp,x-lastp);
            lastp = x + 1;
            for (rw = 0; rw < rwc; rw = rw +1 ) begin
              matrowget(CalDisGrbl,rw,CalDisgrrw);
             
              if (RepSpec.ObjStr == CalDisGrrw.Code) then begin
                if (SetInSet(ustr,CalDisGrrw.DefStr)) then begin
                  datef = true;
                end;
              end;
            end;
          end;
        end;
        if (datef == false) then begin
          testf = false;
    //      Messagebox(0,Actr.MainPersons);
        end;
      end;
      if (testf) then begin
        switch (Actr.CalTimeFlag) begin
          case 1: 
            acttype = USetStr(9825);
          case 2:
            acttype = USetStr(9826);
          case 0:
            acttype = USetStr(9827);
        end;
        ActTyper.Code = Actr.ActType;
        testf = readfirstmain(ActTyper,1,true);
        StartFormat(15);
         OutLongInt(0,"DblActVc",Actr.SerNr,false);
         OutString(50,0,Actr.TransDate,false);
         OUtString(120,0,ActTyper.Comment,false);
         OUtString(200,0,acttype,false);
         OutString(270,0,Actr.Comment,false);
        EndFormat;
      end;
    end;  
  end;
  EndJob;
  RETURN;
END;
