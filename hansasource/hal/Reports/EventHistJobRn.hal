global
procedure EventHistJobRn(record RcVc RepSpec)
begin
  record ExcursionrsVc Eventhisr;
  record ExcursionVc Excur;
  record TransferVc Transfer;
  Boolean TrHs;
  record JobVc Jobr;
  Longint frjob,tojob,lastjob;
  
  StartReportJob(USetStr(14450) & RepSpec.f1);
  EndHeader;

  frjob = FirstInRange(RepSpec.f1,20);
//  toguest = LastInRange(RepSpec.f1,20);
  
  SetRepCol(2,10);
  SetRepCol(3,80);  
  SetRepCol(4,150); 
  SetRepCol(5,210); 
  SetRepCol(6,270);
  SetRepCol(7,310); 
  SetRepCol(8,480); 
  
  StartFormat(15);
  OutString(2,0,USetStr(14451),false);
  OutString(3,0,USetStr(14452),false);
  OutString(4,0,USetStr(14453),false);
  OutString(5,0,USetStr(14454),false);
  OutString(6,0,USetStr(14455),false);
  OutString(7,0,USetStr(14456),false);
  EndFormat;
  Gray_Divider(0,1);
  
  TrHs = true;
  Eventhisr.JobNr = frjob;
  while (LoopMain(Eventhisr,1,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (Eventhisr.JobNr<>frjob) then begin
        TrHs = false;
      end;
    end;
    if (TrHs==true) then begin
      StartFormat(15);
      If (Eventhisr.FileName=="ExcursionVc") then begin
        OutString(2,"DblExcursionVc",Eventhisr.EventNr,false);
      end else begin  
        OutString(3,"DblTransferVc",Eventhisr.EventNr,false);
      end;
      OutDate(4,0,Eventhisr.TransDate,false);
      OutString(5,0,Eventhisr.StartTime,false);
      If (Eventhisr.FileName=="ExcursionVc") then begin
        Excur.SerNr = Eventhisr.EventNr;
        if (ReadFirstMain(Excur,1,true)) then begin
          OutString(6,0,Excur.EndTime,false);
          OutString(7,0,Eventhisr.Comment,false);
        end;
      end else begin  
        Transfer.SerNr = Eventhisr.EventNr;
        if (ReadFirstMain(Transfer,1,true)) then begin
          OutString(6,0,Transfer.EndTime,false);
          OutString(7,0,Transfer.Comment,false);
        end;

      end;
      EndFormat;
    end;
  end;
  EndJob;
  return;
end;