// IntOrdJRn.hal    

external procedure HTDetailLevel(Integer, var string);
external procedure HTNr(Integer,Integer,LongInt,LongInt,var string);
external procedure HTEmployees(string,string,var string);
external procedure HTDepartment(string,var string);
external procedure HTLocations(string, string, var string);


procedure RepIntOR( record IntORVc IntORp)
begin
  Integer i,rwcnt;
  row IntORVc IntORrw;

  StartFormat(15);
  OutLongInt(0,"DblIntORVc",IntORp.SerNr,false);
  OutDate(130,0,IntORp.TransDate,false);
  OutString(280,0,IntORp.Reference,false);
  EndFormat;
  StartFormat(15);
  OutString(50,0,IntORp.OurUser,false);
  OutString(180,0,IntORp.Name,false);
  OutString(400,0,IntORp.Department,false);
  EndFormat;
  StartFormat(15);
  OutString(200,0,IntORp.ShipAddr0,false);
  EndFormat;
  if nonblank(IntORp.ShipAddr1) then begin
    StartFormat(15);
    OutString(200,0,IntORp.ShipAddr1,false);
    EndFormat;
  end;
  if nonblank(IntORp.ShipAddr2) then begin
    StartFormat(15);
    OutString(200,0,IntORp.ShipAddr2,false);
    EndFormat;
  end;
  if nonblank(IntORp.ShipAddr3) then begin
    StartFormat(15);
    OutString(200,0,IntORp.ShipAddr3,false);
    EndFormat;
  end;
  if nonblank(IntORp.DelAddr3) then begin
    StartFormat(15);
    OutString(200,0,IntORp.DelAddr3,false);
    EndFormat;
  end;
  if nonblank(IntORp.DelAddr4) then begin
    StartFormat(15);
    OutString(200,0,IntORp.DelAddr4,false);
    EndFormat;
  end;
  rwcnt = MatRowCnt(IntORp);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(IntORp,i,IntORrw);
      StartFormat(15);
      OutString(20,0,IntORrw.ArtCode,false);
      OutVal(124,0,IntORrw.Quant,M4UVal,true);
      OutString(130,0,IntORrw.Spec,false);
      OutValBiDi(340,0,IntORrw.Price,M423Val,true,396);
      OutVal(460,0,IntORrw.Sum,M4Val,true);
      EndFormat;
  end;
  Black_Divider(380,460);
  StartFormat(15);
  OutString(340,0,USetStr(4957),true);
  OutVal(460,0,IntORp.Total,M4Val,true);
  EndFormat;
return;
end;


global
procedure IntOrdJRn(record RcVc RepSpec)
begin
  record IntORVc IntORr;
  Boolean TrHs;
  val iv;
  val TotSum;
  Boolean testf;
  LongInt afr,ato;
  string 255 tstr;
  Integer rw;
  array val av1;
  array val av2;
  array val av3;
  array string 20 acur;
  Integer curcnt;

  rw = 1;
  afr = FirstInRange(RepSpec.f1,30);
  ato = LastInRange(RepSpec.f1,30);

  TotSum = 0;
  StartReportJob(USetStr(4951));
  HTNr(14552,14551,afr,ato,tstr);
  if nonblank(tstr) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTDetailLevel(RepSpec.ArtMode,tstr);
  Header(rw,tstr,0);
  HTEmployees(RepSpec.f2,RepSpec.f2,tstr);
  if nonblank(tstr) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTDepartment(RepSpec.f4,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTLocations(RepSpec.f3,RepSpec.f3,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  if (RepSpec.ArtMode==0) then  begin
    StartFormat(15);
    OutString(0,0,USetStr(4952),false);
    OutString(60,0,USetStr(4953),false);
    OutString(140,0,USetStr(4954),false);
    OutString(280,0,USetStr(4955),false);
    OutStringAdjustBiDi(1,0,USetStr(4957),true,M4Val,510);
    EndFormat;
  end;
  if (RepSpec.ArtMode==1)  then  begin
    StartFormat(15);
    OutString(0,0,USetStr(4952),false);
    OutString(130,0,USetStr(4953),false);
    OutString(280,0,USetStr(8584),false);
    EndFormat;
  end;
  IntORr.SerNr = afr;
  if (RepSpec.ArtMode==0) then begin
    Gray_Divider(0,1);
  end;
  TrHs = true;
  while LoopMain(IntORr,1,TrHs) begin
    if (ato<>-1) then begin
      if (IntORr.SerNr>ato) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f2) and (RepSpec.f2<>IntORr.OurUser)) then begin
         testf = false;
      end;
      if (nonblank(RepSpec.f4) and (RepSpec.f4<>IntORr.Department)) then begin
         testf = false;
      end;
      if (nonblank(RepSpec.FirstAcc) and (RepSpec.FirstAcc<>IntORr.IntORClass)) then begin
         testf = false;
      end;
      if ((nonblank(RepSpec.f3)) and (RepSpec.f3<>IntORr.Location)) then begin 
        testf = false; 
      end;
      if (DateInRange(IntORr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
      if (testf) then begin
        if  (RepSpec.ArtMode==1) then begin
          Gray_Divider(0,1);
          RepIntOR(IntORr);
        end;
        if (RepSpec.ArtMode==0) then begin
          StartFormat(15);
          OutLongInt(0,"DblIntORVc",IntORr.SerNr,false);
          OutDate(60,0,IntORr.TransDate,false);
          OutString(140,0,IntORr.Name,false);
          OutString(280,0,IntORr.Department,false);
          OutValBiDi(1,0,IntORr.Total,M4Val,true,510);
          EndFormat;
        end;
      end;
    end;
  end;
  Gray_Divider(0,1);
  EndJob;
  return;
end;
