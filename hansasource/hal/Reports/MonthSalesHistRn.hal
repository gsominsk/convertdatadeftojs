external procedure ExtractObj(string,var Integer,var string);
external procedure HT2Per(Date, Date , var string);

function Boolean MonthShouldBeAdded(Date monthend,Integer totalmonths,val sum)
begin
  Boolean res;
  
  if (monthend>CurrentDate) then begin
    res = false;
    goto out;
  end;
  if (sum==0) then begin
    if (totalmonths>0) then begin
      res = false;
      goto out;
    end;
  end;
  res = true;
out:;
  MonthShouldBeAdded = res;
end;

function val GetTotalSMTurnover(string salesman,Date frdate,Date todate)
Begin
  record IUSVc IUSr;
  val totsales;
  Boolean TrHs,foundf;
  integer pos;
  string 255 salespersons,tstr;
  record UserVc USr;

  totsales = 0;
  salespersons = salesman;
  
  pos = 0;
  ExtractObj(salespersons,pos,tstr);
  USr.Code = tstr;
  foundf = ReadFirstMain(USr,1,true);
  while (foundf) begin 
    IUSr.UserCode = USr.Code;
    TrHs = true;
    while(LoopMain(IUSr,1,TrHs))begin
      if(IUsr.UserCode <> tstr)then begin
        TrHs = false;
      end;
      if(TrHs)then begin
        totsales = totsales + GetTurnover(IUSr,"salesexclvat",frdate,todate);
      end;
    end;
    ExtractObj(salespersons,pos,tstr);
    USr.Code = tstr;
    foundf = ReadFirstMain(USr,1,true);
  end;
  GetTotalSMTurnover = totsales;
  Return;
End;

global
procedure MonthSalesHistCURn(record RcVc RepSpec)
begin
  record CUVc CUr;
  record UserVc USr;
  Boolean TrHs,testf;
  string 255 tstr,keystr;
  Integer rw;
  Integer i,col,j;
  array Integer year;
  Integer startyear,endyear ;
  Date startdate;
  Integer numyear,nummonth;
  Date fromd,tod;
  val s,s1,s2;
  string 20 mname,salespersons;
  array val tots,tots1,tots2;
  array val avgtots,avgtots1,avgtots2;
  array Integer nummonths;
  Boolean afternow;
  Date monthend;
  Integer totalmonths,pos;
  Boolean foundf,found2f;
  
  if (RepSpec.wholemonthf==0) then begin
    MessageBox(1163,"");
    goto LMonthSalesHistCURn;
  end;
  
  startyear = GetYear(RepSpec.sStartDate);
  endyear   = GetYear(RepSpec.sEndDate);
  numyear = GetYear(RepSpec.sEndDate)-GetYear(RepSpec.sStartDate);
  salespersons = RepSpec.f1;

  if (RepSpec.flags[0]!=3) then begin
    if (RepSpec.flags[0]!=4) then begin
      StartReportJob(USetStr(17196));
    end else begin
      StartReportJob(USetStr(17179));
    end;
  end else begin
    if (RepSpec.flags[0]==3) then begin
      StartReportJob(USetStr(17181));
    end else begin
      StartReportJob(USetStr(17182));
    end;
  end;
  rw = rw + 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  EndHeader;
  if (RepSpec.flags[0]!=4) then begin
    CUr.Code = RepSpec.f1;
    foundf = ReadFirstMain(CUr,1,true);
    if (foundf) then begin
      found2f = true;
      StartFormat(15);
      OutString(0,0,USetStr(17183),false);
      OutString(120,0,USetStr(17184),false);
      EndFormat;
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(0,0,CUr.Code,false);
      OutString(120,0,CUr.Name,false);
      EndFormat;
      StartFormat(15);
      EndFormat;
    end else begin
      StartFormat(15);
      if (RepSpec.repname=="MonthSalesHistVERn") then begin
        OutString(0,0,USetStr(17197),false);
      end else begin
        OutString(0,0,USetStr(17194),false);
      end;
      EndFormat;
    end;
  end else begin
    pos = 0;
    ExtractObj(RepSpec.f1,pos,tstr);
    USr.Code = tstr;
    foundf = ReadFirstMain(USr,1,true);
    if (foundf) then begin
      found2f = true;
      StartFormat(15);
      OutString(0,0,USetStr(17185),false);
      OutString(120,0,USetStr(17184),false);
      EndFormat;
      while (foundf) begin 
        StartFormat(15);
        OutString(0,0,USr.Code,false);
        OutString(120,0,USr.Name,false);
        EndFormat;
        ExtractObj(RepSpec.f1,pos,tstr);
        USr.Code = tstr;
        foundf = ReadFirstMain(USr,1,true);
      end;
      StartFormat(15);
      EndFormat;
    end else begin
      StartFormat(15);
      OutString(0,0,USetStr(17195),false);
      EndFormat;
    end;
  end;
  if (found2f) then begin
    
    StartFormat(15);
    switch (RepSpec.flags[0]) begin
      case 0: mname = USetStr(17186);
      case 1: mname = USetStr(17187);
      case 2: mname = USetStr(17188);
      case 3: mname = USetStr(17189);
      case 4: mname = USetStr(17190);
    end;
    
    OutString(120,0,mname,false);
    EndFormat;

    Gray_Divider(0,1);

    StartFormat(15);
    OutString(0,0,USetStr(17191),false);

    col = 120;
    for (i=startyear;i<=endyear;i=i+1) begin
      year[i] = i;
      OutLongInt(col,0,i,true);
      col = col + 70;
    end;
    EndFormat;
    
    Gray_Divider(0,1);
    nummonths[i] = 0;
    startdate = RepSpec.sStartDate;

    for (j = 0; j<12; j = j + 1) begin
      StartFormat(15);
      OutString(0,0,USetStr(2870 + GetMonth(startdate)),false);
      col = 120;
      for (i = 0; i<=numyear; i = i + 1) begin
        fromd = AddYear(startdate,i);
        if (fromd.day==1) then begin
          tod = AddMonth(fromd,1);
          tod = AddDay(tod,-1);
        end else begin
          tod = fromd;
          tod.day = DaysInMonth(tod.year,tod.month);
          startdate = fromd;
          startdate.day = 1;
        end;
        if (CurrentDate<tod) then begin
          afternow = true;
        end else begin
          afternow = false;
        end;
        switch (RepSpec.flags[0]) begin
          case 0:
            s = GetTurnover(CUr,"salesexclvat",fromd,tod);
            tots[i] = tots[i] + s;
            if (afternow==false) then begin
             avgtots[i] = avgtots[i] + s;
            end;
          case 1:
            s = GetTurnover(CUr,"grossprofit",fromd,tod);
            tots[i] = tots[i] + s;
            if (afternow==false) then begin
              avgtots[i] = avgtots[i] + s;
            end;
          case 2:
            s1 = GetTurnover(CUr,"salesexclvat",fromd,tod);
            s2 = GetTurnover(CUr,"grossprofit",fromd,tod);
            tots1[i] = tots1[i] + s1;
            tots2[i] = tots2[i] + s2;
            if (afternow==false) then begin
              avgtots1[i] = avgtots1[i] + s1;
              avgtots2[i] = avgtots2[i] + s2;
            end;
            s = s2 * 100;
            s = s/s1;
            if ((s2<0) or (s1<0)) then begin
              s = -s;
            end;
            if (s == blankval) then begin 
              s = 0;
            end;
          case 3:
            s = GetTurnover(CUr,"vesalesexclvat",fromd,tod);
            tots[i] = tots[i] + s;
            if (afternow==false) then begin
              avgtots[i] = avgtots[i] + s;
            end;
          case 4:
            s = GetTotalSMTurnover(salespersons,fromd,tod);
            tots[i] = tots[i] + s;
            if (afternow==false) then begin
              avgtots[i] = avgtots[i] + s;
            end;
        end;
        OutValBiDi(col,0,s,M4Val,true,col+56);
        if (MonthShouldBeAdded(tod,totalmonths,s)) then begin
          totalmonths = totalmonths + 1;
          nummonths[i] = nummonths[i] + 1;
        end;
        col = col + 70;
      end;
      EndFormat;
      startdate = AddMonth(startdate,1);
    end;
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(17192),false);
    col = 120;
    for (i=0;i<=numyear;i=i+1) begin
      if (RepSpec.flags[0] == 2) then begin
        tots[i] = tots2[i] * 100;
        tots[i] = tots[i]/tots1[i];
        if ((tots2[i]<0) or (tots1[i]<0)) then begin
          tots[i] = -tots[i];
        end;
        avgtots[i] = avgtots2[i] * 100;
        avgtots[i] = avgtots[i]/avgtots1[i];
        if ((avgtots2[i]<0) or (avgtots1[i]<0)) then begin
          avgtots[i] = -avgtots[i];
        end;
      end;
      OutValBiDi(col,0,tots[i],M4Val,true,col+56);
      col = col + 70;
    end;
    EndFormat;
    StartFormat(15);
    OutString(0,0,USetStr(17193),false);
    col = 120;
    for (i=0;i<=numyear;i=i+1) begin
      OutValBiDi(col,0,avgtots[i]/nummonths[i],M4Val,true,col+56);
      col = col + 70;
    end;
    EndFormat;
  end;
  EndJob;
LMonthSalesHistCURn:;  
  return;
end;

global
procedure MonthSalesHistVERn(var record RcVc RepSpec)
begin
  RepSpec.flags[0] = 3;
  MonthSalesHistCURn(RepSpec);
  return;
end;

global
procedure MonthSalesHistSMRn(var record RcVc RepSpec)
begin
  RepSpec.flags[0] = 4;
  MonthSalesHistCURn(RepSpec);
  return;
end;
