external function roundmode GetTotalRoundMode(record RoundBlock);
external function Boolean GetPD (var Record PDVc);
external procedure GetFullCurncyRate(var string,Date,var val,var val,var val,var val,var val);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external function LongInt DateDiff(Date,Date);
external procedure GetPDVRebt(string,var val);
external function Integer GetIntYc(Date);
external procedure HTVends(string, string, var string);
external function Boolean GetForeignCurncyRate(string,var val,var val,var val,Date,var Date);

procedure HTOT(string objcode,var string tstr)
begin
  record OTVc OTr;

  OTr.Code = objcode;
  if (ReadFirstMain(OTr,1,true)) then begin
    tstr = USetStr(3016);
    tstr = tstr & OTr.Code;
    if (nonblank(OTr.Comment)) then begin
      tstr = tstr & "  ";
      tstr = tstr & OTr.Comment;
    end;
  end;
  return;
end;

procedure HTObj(String a, var string tstr)
begin
 record ObjVc RUr;
 Integer cnt;
 cnt = 0;
 if (cnt==1) then begin
  RUr.Code = a;
  if (ReadFirstMain(RUr,1,true)) then begin
   tstr = USetStr(3015);
   tstr = tstr & RUr.Code;
   tstr = tstr & "  ";
   tstr = tstr & RUr.Comment;
  end else begin
   tstr = USetStr(3015);
   tstr = tstr & a;
  end;
 end else begin
  tstr = USetStr(3015);
  tstr = tstr & a;
 end;
return;
end;

global
procedure FindRateOnTR(LongInt SerNr,string curncy,var val fr,var val to1,var val to2,var val br1,var val br2,Boolean ipf)
BEGIN
  Integer rwcnt,i;
  record OPrsVc OPrsr;
  record IPrsVc IPrsr;
  record TRVc TRr;
  row TRVc TRrw;
  Boolean found;
  Boolean ratefound;
  Date tdp;
  LongInt TransNr;
  Integer stp;
  
  if (ipf==false) then begin    
    OPrsr.VINr = SerNr;
    if (ReadFirstKey("VIKey",OPrsr,1,true)) then begin
      found = true;
      tdp = OPrsr.TransDate;
      TransNr = OPrsr.TransNr;
      stp = 2;
    end;
  end else begin
    IPrsr.IVNr = SerNr;
    if (ReadFirstKey("IVKey",IPrsr,1,true)) then begin
      found = true;
      tdp = IPrsr.TransDate;
      TransNr = IPrsr.TransNr;
      stp = 1;
    end;
  end;
  if (found) then begin 
    TRr.Number = TransNr;
    TRr.IntYc = GetIntYc(tdp);
    if (ReadFirstMain(TRr,2,true)) then begin
      rwcnt = MatRowCnt(TRr);
      for (i=0; i<rwcnt; i=i+1) begin
        MatRowGet(TRr,i,TRrw);
        if (TRrw.ovst==0) then begin
          if (TRrw.stp==stp) then begin
            if (TRrw.SerNr==SerNr) then begin
              if (TRrw.Curncy==curncy) then begin
                fr = TRrw.FrRate;
                to1 = TRrw.ToRateB1;
                to2 = TRrw.ToRateB2;
                br1 = TRrw.BaseRate1;
                br2 = TRrw.BaseRate2;
                ratefound = true;
              end;
            end;
          end;
        end;
      end;  
    end;
  end; 
  if (ratefound==false) then begin
    GetFullCurncyRate(curncy,CurrentDate,fr,to1,to2,br1,br2);
  end;
  RETURN;
END; 

global
procedure MOPProgRn ( record RcVc RepSpec )
begin

  String 30 supfr, supto;
  String 255 tstr;
  record APVc APr;
  String 255 ckey;
  Val APSum;
  Val s0,s1,s16,s31;
  Boolean TrHs;
  record VIVc VIr;
  Boolean vif;
  Date pd;
  Boolean testf;
  Boolean Accs;
  Record ObjVc OBr;
  Record RoundBlock RoundRec;
  LongInt latedays;
  Val APVal;
  Val pdvrebt;
  Val tv;
  Val rs;
  Val frrate,to1,to2,br1,br2;
  String 255 t2;

  Integer rw;
  rw = 2;

  supfr = FirstInRange(RepSpec.f2,30);
  supto = LastInRange(RepSpec.f2,30);
  StartReportJob(USetStr(4121));
  HTVends(supfr,supto,tstr);
  Header(rw,tstr,1);
  if (RepSpec.ArtMode == 1) then begin
    tstr = USetStr(4128);
  end else begin
    tstr = USetStr(4127);
  end;
  Header(rw,tstr,0);
  if (RepSpec.flags[1]==0) then begin
    tstr = USetStr(4133);
  end else begin
    tstr = USetStr(4134);
  end;
  rw = rw + 1;
  Header(rw,tstr,1);
  if (RepSpec.flags[0]==0) then begin
    tstr = USetStr(4129);
  end else begin
    tstr = USetStr(4130);
  end;
  Header(rw,tstr,0);
  if nonblank(RepSpec.ObjStr) then begin
    HTObj(RepSpec.ObjStr,tstr);
    rw = rw + 1;
    Header(rw,tstr,1);
  end else begin
    if nonblank(RepSpec.ObjType) then begin
      HTOT(RepSpec.ObjType,tstr);
      rw = rw + 1;
      Header(rw,tstr,1);
    end;
  end;
  EndHeader; 
  if (RepSpec.ArtMode==1) then begin
    ckey = "RebDate";
  end else begin
    ckey = "DueDate";
  end; 
 if (RepSpec.flags[0]==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(4122),false);
    OutString(60,0,USetStr(4123),false);
    OutString(120,0,USetStr(4126),false);
    OutString(220,0,USetStr(4132),false);
    OutString(380,0,USetStr(4124),true);
    OutString(480,0,USetStr(4125),true);
    EndFormat;
  end; 
  APSum = 0;
  s0 = 0;
  s1 = 0;
  s16 = 0;
  s31 = 0;
  APr.SerNr = 0;

  if (RepSpec.flags[0]==0) then begin
    Gray_Divider(0,1);
  end; 
  TrHs = true;
  while LoopKey(ckey,APr,2,TrHs) begin
    VIr.SerNr = APr.SerNr;
    vif=ReadFirstMain(VIr,1,true);
    if (RepSpec.ArtMode==1) then begin
      if (vif) then begin
        pd = VIr.RebDate;
      end else begin
        pd = APr.RebDate;
      end;
    end else begin
      if (vif) then begin
        pd = VIr.DueDate;
      end else begin
        pd = APr.DueDate;
      end;
    end; 
    if ( nonblankdate(RepSpec.d1) and (DateDiff(pd,RepSpec.d1)>0) ) then begin TrHs = false; end;
    if (TrHs) then begin 
      if (blank(RepSpec.f2) or ((APr.VECode >= supfr) and (APr.VECode <= supto))) then begin 
        testf = true;
        if ((RepSpec.flags[1]==1) and vif and (VIr.Closed==0)) then begin testf = false; end;
        if (VIr.Invalid<>0) then begin testf = false; end;
//        if ((RepSpec.flags[1]==1) and vif and (VIr.Closed<>0) ) then begin testf = false; end;
        if (nonblank(RepSpec.ObjStr)) then begin 
          if (SetInSet(RepSpec.ObjStr,VIr.Objects)==false) then begin testf = false; end;
        end else begin
          if ((testf==true) and nonblank(RepSpec.ObjType)) then begin  
            testf = false;
            OBr.OTCode = RepSpec.ObjType;
            OBr.Code = "";
            Accs = true;
            while (LoopKey("OTCode",OBr,1,Accs)) begin
              if ((Accs==true) and (RepSpec.ObjType == OBr.OTCode)) then begin
                if (SetInSet(OBr.Code,VIr.Objects)==true) then begin
                  testf = true;
                  Accs = false;
                end;
              end;
            end; 
          end;
        end; 
        if (testf) then begin 

          BlockLoad(RoundRec);  
          if (RepSpec.ArtMode==1) then begin 
            latedays = DateDiff(pd,CurrentDate);
            APVal = APr.RVal; 
            GetPDVRebt(VIr.PayDeal,pdvrebt);
            if (pdvrebt <> 0) then begin
              tv = APVal * pdvrebt;
              tv = tv / 100;
              tv = Round(tv,GetTotalRoundMode(RoundRec));
              APVal = APVal - tv;
//pdvrebt2              
            end; 
          end;
           
          if (vif) then begin
            latedays = DateDiff(VIr.DueDate,CurrentDate);
          end else begin  
            latedays = DateDiff(APr.DueDate,CurrentDate);
          end;
          APVal = APr.RVal;

          if (vif) then begin
            rs = MulRateToBase1(VIr.CurncyCode,APVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff);
          end else begin
            GetFullCurncyRate(APr.CurncyCode,APr.DueDate,frrate,to1,to2,br1,br2);
            rs = MulRateToBase1(APr.CurncyCode,APVal,frrate,to1,to2,br1,br2,DefaultCurRoundOff);
          end;  
          APSum = APSum + rs;
          if (vif==false) then begin
            VIr.SerNr = APr.SerNr;
            VIr.VECode = APr.VECode;
            VIr.VEName = APr.VEName;
            VIr.Comment = "";
            t2 = USetStr(2530);
          end; 
          tstr = VIr.SerNr;
          if (vif==false) then begin
            tstr = tstr & t2;
          end;
          if (RepSpec.flags[0]==0) then begin
            StartFormat(15);
            OutDate(0,0,pd,false);
            OutString(60,0,tstr,false);
            OutString(120,0,VIr.VECode,false);
            OutString(200,0,VIr.VEName,false);
            OutVal(380,0,rs,M4Val,true);
            OutVal(480,0,APSum,M4Val,true);
            EndFormat;
            if nonblank(VIr.Comment) then begin
              StartFormat(15);
              OutString(40,0,VIr.Comment,false);
              EndFormat;
            end;
          end; 
          if (latedays<=0) then begin
            s0 = rs + s0;
          end;
          if (latedays>0 and latedays<=15) then begin
            s1 = rs + s1;
          end;
          if (latedays>15 and latedays<=30) then begin
            s16 = rs + s16;
          end;
          if (latedays>30) then begin
            s31 = rs + s31; 
          end;
        end;
      end; 
    end; 
  end;
  if (RepSpec.flags[0]==0) then begin
    Gray_Divider(0,1);
  end;
  if (RepSpec.flags[0]==1) then begin
    StartFormat(15);
    OutString(140,0,USetStr(2381),false);
    OutVal(380,0,s0,M4Val,true);
    EndFormat;
    StartFormat(15);
    OutString(140,0,USetStr(2382),false);
    OutString(200,0,USetStr(2384),false);
    OutString(240,0,USetStr(2383),false);
    OutVal(380,0,s1,M4Val,true);
    EndFormat;
    StartFormat(15);
    OutString(200,0,USetStr(2385),false);
    OutString(240,0,USetStr(2383),false);
    OutVal(380,0,s16,M4Val,true);
    EndFormat;
    StartFormat(15);
    OutString(200,0,USetStr(2386),false);
    OutString(240,0,USetStr(2383),false);
    OutVal(380,0,s31,M4Val,true);
    EndFormat;
  end; 
  EndJob;
  return;

end;
