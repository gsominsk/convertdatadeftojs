external procedure HT2Per(date,date,var string);globalprocedure DblHTSSMSQueueVc(string dblstr,string l,Integer currepwn)begin  record ERecordStatusVC ERecStatr;  Integer wn;  ERecStatr.SerNr = l;  if (ReadFirstMain(ERecStatr,1,true)) then begin    wn = OpenWindow("ERecordStatusDClass",1,0,"","",ERecStatr);  end;  return;end;globalprocedure CustHTSSMSStatRn(record RcVc RepSpec)begin  record SMSVc SMSr;  record ERecordStatusVc ERecStatr;  record HTSSMSQueueVc HTSSMSr;  Record ETasksQueueVc ETaskr;  string 255 tstr;  boolean testf,TrHs;  boolean sentf,sentisf,delf,errf,foundf;  string 255 sent,delstr,comment;  longint lb;  integer smsstat;  date senddate,recdate;  time sendtime,rectime;  string 50 prevcode,tcode;  string 50 custcode,phoneno;  longint sendnr,recnr;  StartReportJob(USetStr(15225));  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);  Header(1,tstr,1);  EndHeader;    SetRepCol(2,80);  SetRepCol(3,190);  SetRepCol(4,290);  SetRepCol(5,300);  SetRepCol(6,300);    StartFormat(15);  OutString(0,0,"ID",false);          // Not sure what the english for this to be able to link it to an SString()  OutString(2,0,"Nosðt´ts",false);    // Not sure what the english for this to be able to link it to an SString()  OutString(3,0,"SaÀemts",false);     // Not sure what the english for this to be able to link it to an SString()//  OutString(4,0,"Adres‚ts",false);  OutString(6,0,"Apraksts",false);    // Not sure what the english for this to be able to link it to an SString()  EndFormat;  lb = blankval;  TrHs = true;  ErecStatr.FileName = "SMSVc";  ERecStatr.CustID = RepSpec.f1;  While LoopKey("CustIDSerNr",ERecStatr,2,TrHs) begin    testf = true;    if DateInRange(ERecStatr.CreationDate,RepSpec.sStartDate,RepSpec.sEndDate)==false then begin      testf = false;    end;    if nonblank(RepSpec.f1) and RepSpec.f1 <> ERecStatr.CustID then begin      testf = false;      TrHs = false;    end;    if ERecStatr.FileName <> "SMSVc" then begin      TrHs = false;      testf = false;    end;    if testf then begin      tcode = ERecStatr.CustID & ":" & ERecStatr.CustSerNr;      if tcode <> prevcode then begin        if prevcode <>"" then begin          testf = true;          switch smsstat begin           case 0: if RepSpec.flags[3]==0 then begin testf = false; end;           case 1: if RepSpec.flags[3]==0 then begin testf = false; end;           case 2: if RepSpec.flags[2]==0 then begin testf = false; end;           case 3: if RepSpec.flags[1]==0 then begin testf = false; end;           case 4: if RepSpec.flags[3]==0 then begin testf = false; end;          end;          if testf then begin            StartFormat(15);            OutStringID(0,0,prevcode,false,0);            if nonblankdate(senddate) then begin              OutStringID(2,"DblHTSSMSQueueVc",DateToString(senddate,"DD.MM.YYYY") & "-" & sendtime,false,sendnr);            end;            if nonblankdate(recdate) then begin              OutStringID(3,"DblHTSSMSQueueVc",DateToString(recdate,"DD.MM.YYYY") & "-" & rectime,false,recnr);            end;    //        OutString(5,0,PhoneNo,false);            OutString(6,0,delstr,false);            EndFormat;            senddate = "";            recdate = "";          end;        end;        smsstat = -1;        delstr = "";      end;      Switch ERecStatr.Status begin        case 0:              if smsstat==-1 then begin smsstat = 0; end;             delstr = USetStr(20220);            senddate = ERecStatr.CreationDate;            sendtime = ERecStatr.CreationTime;            sendnr = ERecStatr.SerNr;        case 2:              if smsstat==-1 then begin smsstat = 2; end;//delstr = "SMS being processed by operator";            senddate = ERecStatr.CreationDate;            sendtime = ERecStatr.CreationTime;            sendnr = ERecStatr.SerNr;        case 4:              if smsstat==-1 then begin               smsstat = 2;              delstr = ERecStatr.Comment;            end;            senddate = ERecStatr.CreationDate;            sendtime = ERecStatr.CreationTime;            sendnr = ERecStatr.SerNr;        case 5:              delstr = USetStr(15223);             recdate = ERecStatr.CreationDate;            rectime = ERecStatr.CreationTime;            recnr = ERecStatr.SerNr;            smsstat = 3;        case 6:              delstr = USetStr(15224);             smsstat = 4;            recdate = ERecStatr.CreationDate;            rectime = ERecStatr.CreationTime;            recnr = ERecStatr.SerNr;      end;      prevcode = ERecStatr.CustID & ":" & ERecStatr.CustSerNr;    end;  end;    EndJob;return;end;