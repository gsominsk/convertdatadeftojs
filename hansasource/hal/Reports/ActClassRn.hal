external function Boolean WrapAndPrint(Integer,string,Integer);

procedure PrintFirstLineOfNote(record ActVc Actr)
begin
  record NotepadVc Noter;
  record RLinkVc RLr;
  Integer notenr;
  string 255 tstr;

  notenr = 1;
  if (ReadRecordLink(Actr,notenr,Noter,RLr)) then begin
  
    if (LineTextCnt(Noter)>0) then begin
      tstr = LineTextGet(Noter,0);
      StartFormat(15);
      OutString(80,0,"Note",false); //USetStr(6675)
      OutString(140,0,tstr,false);
      EndFormat;
    end;
  end;
  return;
end;

procedure RepAct(record RcVc RepSpec,record ActVc Actr,Integer sortord)
BEGIN
  Integer i,rwcnt;
  row ActVc Actrw;

  if (sortord==0) then begin// pr. customer 
    StartFormat(15);
//     OutLongInt(0,"DblActVc",Actr.SerNr,false);
     if (Actr.OKFlag==0) then begin 
       OutString(0,0,"",false);
     end else begin
       OutString(0,0,USetStr(10115),false);
     end;
     OutStringID(40,"DblActRec",Actr.TransDate,false,Actr.SerNr);//DblActRec
     OutString(80,0,Actr.ActType,false);
     OutString(130,"DblPersAct",Actr.MainPersons,false);//DblPersAct
     OutString(200,0,Actr.Contact,false);
     if (WrapAndPrint(300,Actr.Comment,58)) then begin
       EndFormat;
     end;     
    if (RepSpec.ArtMode==1) then begin
      rwcnt = MatRowCnt(Actr);
      for (i=0; i<rwcnt ;i=i+1) begin
        MatRowGet(Actr,i,Actrw);
        StartFormat(15);
        OutString(80,0,Actrw.TextCode,false);
        if (WrapAndPrint(140,Actrw.Text,70)) then begin
          EndFormat;
        end;     
      end;
      PrintFirstLineOfNote(Actr);
/*
      StartFormat(10);
      EndFormat;
*/
    end;
  end;
  if (sortord==1) then begin// pr. person 
    StartFormat(15);
//     OutLongInt(0,"DblActRec",Actr.SerNr,false);
     if (Actr.OKFlag==0) then begin 
       OutString(0,0,"",false);
     end else begin
       OutString(0,0,USetStr(10115),false);
     end;
     OutStringID(50,"DblActRec",Actr.TransDate,false,Actr.SerNr);//DblActRec
     OutString(120,0,Actr.ActType,false);
     OutString(160,"DblCustAct",Actr.CUCode,false);//DblCustAct
     OutString(210,0,Actr.Contact,false);//DblCustAct
     if (WrapAndPrint(340,Actr.Comment,28)) then begin
       EndFormat;
     end;     
//    EndFormat; // Wrap function will do this if neccesary
    if (RepSpec.ArtMode==1) then begin
      rwcnt = MatRowCnt(Actr);
      for (i = 0 ; i<rwcnt ;i=i+1) begin
        MatRowGet(Actr,i,Actrw);
        StartFormat(15);
        OutString(80,0,Actrw.TextCode,false);
        if (WrapAndPrint(140,Actrw.Text,70)) then begin
          EndFormat;
        end;     
//        EndFormat; // Wrap function will do this if neccesary
      end;
      PrintFirstLineOfNote(Actr);
/*
      StartFormat(10);
      EndFormat;
*/
    end;
  end;
  RETURN;
END;

procedure PrintActivities(record RcVc RepSpec,string acttype,var Boolean firstf)
begin
  record ActVc Actr;
  Boolean foundact,testf;

  ResetLoop(Actr);
  foundact = true;
  Actr.CUCode = RepSpec.f2;
  Actr.ActType = acttype;
  while (LoopBackKey("CUCodeActType",Actr,2,foundact)) begin
    if (Actr.CUCode!=RepSpec.f2) then begin foundact = false; end;
    if (Actr.ActType!=acttype) then begin foundact = false; end;
    if (foundact) then begin
      testf = true;
      if ((nonblank(Actr.ActType)) and (nonblank(RepSpec.f6))) then begin
        if (SetInSet(Actr.ActType,RepSpec.f6)) then begin testf = false; end;
      end;
      if (Actr.Invalid!=0) then begin testf = false; end;
      if (testf) then begin
        if (firstf) then begin
          StartFormat(15);
          OutString(40,0,USetStr(6682),false);
          OutString(80,0,USetStr(6676),false);
          OutString(130,0,USetStr(6684),false);
          OutString(200,0,USetStr(6688),false);
          OutString(300,0,USetStr(6685),false);
          EndFormat;
          firstf = false;
          Gray_Divider(0,1);
        end;
        RepAct(RepSpec,Actr,0);
      end;
    end;
  end;
  return;
end;

procedure PrintActivitiesPerActTypeGr(record RcVc RepSpec,string acttypegr,var Boolean firstf)
begin
  Boolean foundtype,testf;
  record ActTypeVc ActTyper;

  ResetLoop(ActTyper);
  foundtype = true;
  ActTyper.ActTypeGr = acttypegr;
  while (LoopKey("ActTypeGr",ActTyper,1,foundtype)) begin
    if (ActTyper.ActTypeGr!=acttypegr) then begin
      foundtype = false;
    end;
    if (foundtype) then begin
      PrintActivities(RepSpec,ActTyper.Code,firstf);
    end;  
  end;
  return;
end;
      
global
procedure ActClassRn(record RcVc RepSpec)
begin
  Boolean TrHs,foundtype,foundact;
  record ActTypeGrVc ActTypeGrr;
  Boolean firstf;

  StartReportJob(USetStr(2715));
  EndHeader;

  firstf = true;
  TrHs = true;
  ActTypeGrr.Code = RepSpec.f1;
  while (LoopMain(ActTypeGrr,1,TrHs)) begin
    if (ActTypeGrr.Code!=RepSpec.f1) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      PrintActivitiesPerActTypeGr(RepSpec,ActTypeGrr.Code,firstf);
    end;
  end;
  if (blank(RepSpec.f1)) then begin
    PrintActivitiesPerActTypeGr(RepSpec,"",firstf);
    PrintActivities(RepSpec,"",firstf);
  end;
  EndJob;
  return;
end;