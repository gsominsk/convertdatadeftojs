external function Boolean HasContactClassification();
external function Boolean HasCategories();
external function Boolean HasBranch();
external procedure HTCusts(string, string, var string);
external procedure HT2Per(Date, Date , var string);
external procedure HTCustCat(string,var string);
external procedure HTArtSel(string,string, var string);
external procedure HTBranchIDs(string,string,var string);
external procedure HTClasses(string,string,var string);

global
procedure PrintHeaderCuArt(record RcVc RepSpec)
BEGIN
  Integer rw;
  string 255 tstr;
  string 20 fromcust,tocust;
  string 20 fromcat,tocat;
  
  fromcust = FirstInRange(RepSpec.f1,20);
  tocust = LastInRange(RepSpec.f1,20);
  fromcat = FirstInRange(RepSpec.ObjStr,20);
  tocat = LastInRange(RepSpec.ObjStr,20);

   rw = 1;  
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   if (HasBranch) then begin
     HTBranchIDs(RepSpec.f6,RepSpec.f6,tstr);
     Header(rw,tstr,0);
   end;
   Header(rw,RepSpec.Stext,1);
   rw = rw + 1;   
   if (HasContactClassification) then begin
     HTClasses(RepSpec.LastAcc,RepSpec.LastAcc,tstr);
     Header(rw,tstr,0);
   end;
   HTCusts(fromcust,tocust,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   if (HasCategories) then begin
     HTCustCat(RepSpec.ObjStr,tstr);
     if (nonblank(tstr)) then begin
       Header(rw,tstr,1);
       rw = rw + 1;
     end;  
   end;

  HTArtSel(RepSpec.f2,RepSpec.f3,tstr);
  if (nonblank(tstr)) then begin
     Header(rw,tstr,1);
     rw = rw + 1;
  end;  
  SetRepCol(2,60);
  SetRepCol(3,288);
  SetRepCol(4,384);
  SetRepCol(5,293);
  SetRepCol(6,140);
  SetRepCol(9,221);   
  RETURN;
END;  

global
procedure PrintStrings(record RcVc RepSpec)
BEGIN
  StartFormat(15);
  OutString(170,0,USetStr(2472),false);
  OutString(300,0,USetStr(2471),false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(2482),false);
  OutString(50,0,USetStr(2483),false);
  OutString(170,0,RepSpec.Stext,false);
  OutString(300,0,RepSpec.Period2Str,false);
  OutString(420,0,USetStr(2475),false);
  EndFormat;
  StartFormat(15);
  OutString(15,0,USetStr(2462),false);
  OutString(60,0,USetStr(2463),false);
  OutStringAdjustBiDi(190,0,USetStr(2464),true,M4Val,250);
  OutStringAdjustBiDi(260,0,USetStr(2476),true,M4Val,300);
  OutStringAdjustBiDi(300,0,USetStr(2464),true,M4Val,360);
  OutStringAdjustBiDi(370,0,USetStr(2476),true,M4Val,410);
  OutStringAdjustBiDi(410,0,USetStr(2464),true,M4Val,470);
  OutStringAdjustBiDi(480,0,USetStr(2476),true,M4Val,510);
  EndFormat;
  RETURN;
END;  

global
procedure PrintStrings2(string catcode,val catp2totq,val catp2tots,val catp1totq,
                        val catp1tots)
BEGIN
    val diffq, diffs;

    diffs = catp1tots - catp2tots;
    diffq = catp1totq - catp2totq;
    StartFormat(15);
    OutString(0,0,USetStr(2473),false);
    OutString(130,0,catcode,false);
    OutValBiDi(190,0,catp2totq,M4UVal,true,250);
    OutValBiDi(260,0,catp2tots,M4Val,true,300);
    OutValBiDi(300,0,catp1totq,M4UVal,true,360);
    OutValBiDi(370,0,catp1tots,M4Val,true,410);
    OutValBiDi(410,0,diffq,M4UVal,true,470);
    OutValBiDi(480,0,diffs,M4Val,true,510);
    EndFormat;
    StartFormat(15);
    EndFormat;
    StartFormat(15);
    EndFormat;
  RETURN;
END;  

global
procedure PrintStrings3(val p1tots,val p2tots,val p1totq,val p2totq)
BEGIN
  val diffq, diffs;

  diffs = p1tots - p2tots;
  diffq = p1totq - p2totq;
  StartFormat(15);
  OutValBiDi(190,0,p2totq,M4UVal,true,250);
  OutValBiDi(260,0,p2tots,M4Val,true,300);
  OutValBiDi(300,0,p1totq,M4UVal,true,360);
  OutValBiDi(370,0,p1tots,M4Val,true,410);
  OutValBiDi(410,0,diffq,M4UVal,true,470);
  OutValBiDi(480,0,diffs,M4Val,true,510);
  EndFormat;  
  RETURN;
END;  
  
global
procedure PrintStrings4(string dblstr,string item,string itemname,val p2q,val p2s,val p1q,val p1s,val diffq,val diffs)
BEGIN  
  StartFormat(15);
   OutString(11,dblstr,item,false);//CuArtSTVarDblClk
   OutString(80,0,itemname,false);
   OutValBiDi(190,0,p2q,M4UVal,true,250);
   OutValBiDi(260,0,p2s,M4Val,true,300);
   OutValBiDi(300,0,p1q,M4UVal,true,360);
   OutValBiDi(370,0,p1s,M4Val,true,410);
   OutValBiDi(410,0,diffq,M4UVal,true,470);
   OutValBiDi(480,0,diffs,M4Val,true,510);
  EndFormat;
  RETURN;
END;  

global
procedure PrintGroup(string itemgroup)
BEGIN  
  string 255 tstr;
  record ITVc ITr;  
  
  ITr.Code = itemgroup;
  if (ReadFirstMain(ITr,1,true)) then begin
    tstr = ITr.Comment;
  end;              
  StartFormat(15);
   OutString(15,0,USetStr(2474),false);
   OutString(70,0,itemgroup,false);
   OutString(100,0,tstr,false);
  EndFormat;
  RETURN;
END;  
