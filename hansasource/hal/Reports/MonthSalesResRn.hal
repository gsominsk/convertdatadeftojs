external procedure FindTargetTimeOverView(record RcVc,string,var val,string,string,string);
external function val FindTargetTimeForTypes(record RcVc,string,string);

global
function val GetCostUser(string user,Date ed)
BEGIN
  val res;
  record CostUserVc CostUserr;
  Boolean TrHs;

  ResetLoop(CostUserr);
  CostUserr.Person = user;
  CostUserr.TransDate = ed;
  TrHs = true;
  while (LoopBackKey("PersonDate",CostUserr,2,TrHs)) begin
    if (CostUserr.Person!=user) then begin TrHs = false; end;
    if (TrHs) then begin
      TrHs = false;
      res = CostUserr.Total;
    end;
  end;
  GetCostUser = res;
  RETURN;
END;

procedure PrintResultForCompany(Integer mothercomp,string daughtercompcode,record RcVc RepSpec,Date sStartDate,Date sEndDate,string jobgroup,string CompCode,string CompName,
          var LongInt totmeet,var LongInt totleads,var LongInt totuserno,var val totsales,var val totprofit,var val totprevprofit,
          var val totsalestarg,var val totalltarg,var val totprc)
BEGIN
  record ResultUserVc ResultUserr;
  record ResultUserVc prevResultUserr;
  record ResultUserVc prevprevResultUserr;
  record UserVc Userr;
  Boolean TrHs,compprintedf;
  LongInt meet,leads,userno;
  val sales,profit,prevprofit,prevprevprofit;
  LongInt comeet,coleads;
  val cosales,coprofit,coprevprofit;
  record MonthlyUserSetVc MonthlyUserSetr;
  val salestarg,alltarg;
  val cosalestarg,coalltarg,coprc;
  Date td;
  val usercosted,usercostlm,usercostlm2;
  
  userno = 0;
  comeet = 0;
  coleads = 0;
  TrHs = true;
  Userr.JobGroup = jobgroup;
  while (LoopKey("JobGroup",Userr,1,TrHs)) begin
    if (nonblank(jobgroup)) then begin
      if (Userr.JobGroup!=jobgroup) then begin TrHs = false; end;
    end;
    if (TrHs) then begin
      ResultUserr.Person = Userr.Code;
      ResultUserr.Month = GetMonth(sStartDate);
      if (ReadFirstKey("PersonMonth",ResultUserr,2,true)) then begin
        if (compprintedf==false) then begin
          StartFormat(15);
           OutString(0,0,CompCode,false);
           OutString(100,0,CompName,false);
          EndFormat;
          Gray_Divider(0,200);
          compprintedf = true;          
        end;
        MonthlyUserSetr.Person = Userr.Code;
        if (ReadFirstMain(MonthlyUserSetr,1,true)) then begin
        end;

        prevResultUserr.Person = Userr.Code;
        prevResultUserr.Month = GetMonth(sStartDate)-1;
        if (ReadFirstKey("PersonMonth",prevResultUserr,2,true)) then begin
        end;
        prevprevResultUserr.Person = Userr.Code;
        prevprevResultUserr.Month = GetMonth(sStartDate)-2;
        if (ReadFirstKey("PersonMonth",prevprevResultUserr,2,true)) then begin
        end;
        leads = ResultUserr.NewLeads + ResultUserr.NewLeadsPart;
        meet = ResultUserr.MeetNewCU + ResultUserr.MeetNewCUPart + ResultUserr.MeetNewPart + ResultUserr.MeetOldCU + ResultUserr.MeetOldCUPart + ResultUserr.MeetOldPart;
        sales = ResultUserr.TurnoverNewCU + ResultUserr.TurnoverNewCUPart + ResultUserr.TurnoverOldCU + ResultUserr.TurnoverOldCUPart;

        if (SetCompany(mothercomp,false)) then begin
          salestarg = FindTargetTimeForTypes(RepSpec,Userr.Code,MonthlyUserSetr.Sales);
          FindTargetTimeOverView(RepSpec,Userr.Code,alltarg,"","","");
          usercosted = GetCostUser(Userr.Code,sEndDate);
          td = AddMonth(sEndDate,-1);
          td = AddDay(td,-GetDay(td) + DaysInMonth(GetYear(td),GetMonth(td)));        
          usercostlm = GetCostUser(Userr.Code,td);
          td = AddMonth(sEndDate,-2);
          td = AddDay(td,-GetDay(td) + DaysInMonth(GetYear(td),GetMonth(td)));        
          usercostlm2 = GetCostUser(Userr.Code,td);
        end;
        if (SetCompanyCode(daughtercompcode,false)) then begin end;

        profit = ResultUserr.GPNewCU + ResultUserr.GPNewCUPart + ResultUserr.GPOldCU + ResultUserr.GPOldCUPart;
        profit = profit - 2*usercosted*(salestarg/alltarg); 
        prevprofit = prevResultUserr.GPNewCU + prevResultUserr.GPNewCUPart + prevResultUserr.GPOldCU + prevResultUserr.GPOldCUPart;
        prevprofit = prevprofit - 2*usercostlm*(salestarg/alltarg);
        prevprevprofit = prevprevResultUserr.GPNewCU + prevprevResultUserr.GPNewCUPart + prevprevResultUserr.GPOldCU + prevprevResultUserr.GPOldCUPart;
        prevprevprofit = prevprevprofit - 2*usercostlm2*(salestarg/alltarg);
        prevprofit = prevprofit + prevprevprofit;

        StartFormat(15);
         OutString(0,0,Userr.Name,false);
         OutVal(2,0,(salestarg/alltarg),M4Val,false);
         OutLongInt(3,0,leads,true);
         OutLongInt(4,0,meet,true);
         OutVal(5,0,sales,M4Val,true);
         OutVal(6,0,profit,M4Val,true);
         OutVal(7,0,profit + prevprofit,M4Val,true);
        EndFormat;
        coleads = coleads + leads;
        comeet = comeet + meet;
        cosales = cosales + sales;
        coprofit = coprofit + profit;
        coprevprofit = coprevprofit + prevprofit;
        cosalestarg = cosalestarg + salestarg;
        coalltarg = coalltarg + alltarg;
        coprc = coprc + (salestarg/alltarg);
        userno = userno + 1;
      end;
    end;
  end;
  if (compprintedf) then begin
    Gray_Divider(0,1);
    StartFormat(15);
     OutString(0,0,USetStr(14423),false);
     OutVal(2,0,coprc,M4Val,false);
     OutLongInt(3,0,coleads,true);
     OutLongInt(4,0,comeet,true);
     OutVal(5,0,cosales,M4Val,true);
     OutVal(6,0,coprofit,M4Val,true);
     OutVal(7,0,coprofit + coprevprofit,M4Val,true);
    EndFormat;
    StartFormat(15);
     OutString(0,0,USetStr(14425),false);
     OutVal(2,0,cosalestarg/coalltarg,M4Val,false);
     OutLongInt(3,0,coleads/userno,true);
     OutLongInt(4,0,comeet/userno,true);
     OutVal(5,0,cosales/userno,M4Val,true);
     OutVal(6,0,coprofit/userno,M4Val,true);
     OutVal(7,0,(coprofit + coprevprofit)/userno,M4Val,true);
    EndFormat;
    totleads = totleads + coleads;
    totmeet = totmeet + comeet;
    totsales = totsales + cosales;
    totprofit = totprofit + coprofit;
    totprevprofit = totprevprofit + coprevprofit;
    totuserno = totuserno + userno;
    totsalestarg = totsalestarg + cosalestarg;
    totalltarg = totalltarg + coalltarg;
    totprc = totprc + coprc;
  end;
  RETURN;
END;

global
procedure MonthSalesResRn(record RcVc RepSpec)
BEGIN
  record DaughterCompBlock DaughterCompRec;
  row DaughterCompBlock DaughterComprw;
  Integer oldcomp,di,drwcnt;
  Boolean testf;
  LongInt totmeet,totleads,totuserno;
  val totsales,totprofit,totprevprofit;
  val totsalestarg,totalltarg,totprc;

  totuserno = 0;
  totmeet = 0;
  totleads = 0;

  StartReportJob(USetStr(14415));
  EndHeader;
  SetRepCol(2,100);
  SetRepCol(3,170);
  SetRepCol(4,240);
  SetRepCol(5,320);
  SetRepCol(6,400);
  SetRepCol(7,480);
  StartFormat(15);
   OutString(0,0,USetStr(14416),false);
   OutString(2,0,USetStr(14417),false);
   OutString(3,0,USetStr(14418),true);
   OutString(4,0,USetStr(14419),true);
   OutString(5,0,USetStr(14420),true);
   OutString(6,0,USetStr(14421),true);
   OutString(7,0,USetStr(14422),true);
  EndFormat;
  Gray_Divider(0,1);
  oldcomp = CurrentCompany;  
  BlockLoad(DaughterCompRec);
  drwcnt = MatRowCnt(DaughterCompRec);
  for (di=0;di<drwcnt;di=di+1) begin
    MatRowGet(DaughterCompRec,di,DaughterComprw);
    if (nonblank(RepSpec.FirstAcc)) then begin 
      testf = false;
      if (RepSpec.FirstAcc==DaughterComprw.CompCode) then begin
        testf = true;
      end;
    end else begin
      testf = true;
    end;
    if (testf) then begin
      if (SetCompanyCode(DaughterComprw.CompCode,false)) then begin
        PrintResultForCompany(oldcomp,DaughterComprw.CompCode,RepSpec,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.TransStr,DaughterComprw.CompCode,DaughterComprw.CompName,
                              totmeet,totleads,totuserno,totsales,totprofit,totprevprofit,totsalestarg,totalltarg,totprc);
      end;
    end;
  end;
  StartFormat(15);
  EndFormat;
  StartFormat(15);
   OutString(0,0,USetStr(14424),false);
   OutVal(2,0,totprc,M4Val,false);
   OutLongInt(3,0,totleads,true);
   OutLongInt(4,0,totmeet,true);
   OutVal(5,0,totsales,M4Val,true);
   OutVal(6,0,totprofit,M4Val,true);
   OutVal(7,0,totprofit + totprevprofit,M4Val,true);
  EndFormat;
  StartFormat(15);
   OutString(0,0,USetStr(14426),false);
   OutVal(2,0,totsalestarg/totalltarg,M4Val,false);
   OutLongInt(3,0,totleads/totuserno,true);
   OutLongInt(4,0,totmeet/totuserno,true);
   OutVal(5,0,totsales/totuserno,M4Val,true);
   OutVal(6,0,totprofit/totuserno,M4Val,true);
   OutVal(7,0,(totprofit + totprevprofit)/totuserno,M4Val,true);
  EndFormat;
  if (oldcomp!=CurrentCompany) then begin
    ResetCompany(oldcomp);
  end;
  EndJob;
  RETURN;
END;