external function Boolean HasEMail();
external function Boolean IsEnterprise();
external procedure HTDetailLevel(Integer, var string);
external procedure HTPersons(string, string,var string);

procedure UserList(record RcVc RepSpec,row CompaniesBlock Compbrw,var Integer totnamedusercnt,var Integer totconcusercnt)
begin
  record UserVc Userr;
  record ConfVc Confr;
  string 10 fruser,touser,usrlevel;
  Boolean TrHs,testf,firstf;
  Integer namedusercnt,concusercnt,rw;
  string 255 tstr;

  firstf = true;
  TrHs = true;
  Userr.Code = fruser;
  while (LoopMain(Userr,1,TrHs)) begin
    testf = true;
    if (nonblank(touser)) then begin    
      if (Userr.Code>touser) then begin
        TrHs = false;
      end;
    end;  
    if (TrHs==true) then begin
      if (RepSpec.f2<>"") then begin
        if (Userr.SalesGroup<>RepSpec.f2) then begin
          testf = false;
        end;
      end;
    end;
    if (TrHs==true) then begin
      if (RepSpec.flags[1]==1) then begin
        if (Userr.TypeOfUser!=kTypeOfUserConcurrent) then begin
          testf = false;
        end;
      end;
    end;
    if (TrHs==true) then begin
      if (RepSpec.flags[1]==2) then begin
        if (Userr.TypeOfUser!=kTypeOfUserNamed) then begin
          testf = false;
        end;
      end;
    end;
    if (TrHs==false) then begin
      testf = false;
    end;
    if (RepSpec.flags[2]==0) then begin
      if (Userr.Closed!=0) then begin testf = false; end;
    end;
    if (RepSpec.flags[3]!=0) then begin
//      if (Userr.Unlicensed==0) then begin testf = false; end;
    end;
    if (testf==true) then begin
      if (firstf) then begin
        if (nonblank(Compbrw.CompCode)) then begin
          StartFormat(15);
          OutString(0,0,Compbrw.CompCode,false);
          OutString(70,0,Compbrw.CompName,false);
          EndFormat;
          Gray_Divider(0,250);
        end;
        firstf = false;
      end;
      switch (Userr.TypeOfUser) begin
        case kTypeOfUserConcurrent: 
          concusercnt = concusercnt + 1;
        case kTypeOfUserNamed: 
          namedusercnt = namedusercnt + 1;
      end;      
      usrlevel = USetStr(20176);
      Confr.AddrCode = Userr.Code;
      if (ReadFirstKey("AddrCode",Confr,1,true)) then begin
        usrlevel = USetStr(20175);
      end;
      StartFormat(15);
      if (RepSpec.flags[4]!=0) then begin
        OutString(15,"DblUserVc",Userr.Code,false);
        OutString(65,0,Userr.Name,false);
      end else begin
        OutString(0,"DblUserVc",Userr.Code,false);
        OutString(50,0,Userr.Name,false);
      end;
      if (IsEnterprise) then begin
        OutString(200,0,Userr.SalesGroup,false);
        if (Userr.limitedAccess==0) then begin
          OutString(270,0,USetStr(8898),false);
        end else begin
          if (Userr.limitedAccess==1) then begin
            OutString(270,0,USetStr(12163),false);
          end else begin
            OutString(270,0,USetStr(8903),false);
          end;
        end;
        switch (Userr.TypeOfUser) begin
          case kTypeOfUserTimekeeper:
            OutString(380,0,USetStr(16189),false);
          case kTypeOfUserConcurrent:
            OutString(380,0,USetStr(16188),false);
          otherwise
            OutString(380,0,USetStr(16187),false);
        end;
      end;
      OutString(480,0,usrlevel,true);
      EndFormat;
      if (RepSpec.flags[0]==1) then begin
        Gray_Divider(0,1);
        StartFormat(15);
        if (IsEnterprise) then begin
          OutString(0,0,USetStr(8905) & ":",false);
          OutString(80,0,Userr.Job,false);
        end;
        OutString(200,0,USetStr(10839) & ":",false);
        OutString(280,0,Userr.emailAddr,false);
        EndFormat;
        StartFormat(15);
        if (IsEnterprise) then begin
          OutString(0,0,USetStr(8904) & ":",false);
          OutString(80,0,Userr.JobGroup,false);
        end;
        OutString(200,0,USetStr(8909) & ":",false);
        OutString(280,0,Userr.IDCode,false);
        EndFormat;
        if (IsEnterprise) then begin
          StartFormat(15);
          OutString(0,0,USetStr(8908) & ":",false);
          OutVal(100,0,Userr.CostPrHour,M4Val,true);
          OutString(200,0,USetStr(8456) & ":",false);
          OutString(280,0,Userr.BankName,false);
          EndFormat;
          StartFormat(15);
          OutString(0,0,USetStr(8907) & ":",false);
          OutVal(100,0,Userr.PricePrHour,M4Val,true);
          OutString(200,0,USetStr(16591) & ":",false);
          OutString(280,0,Userr.BankAcc,false);
          EndFormat;
        end;
        StartFormat(15);
        OutString(0,0,USetStr(9073) & ":",false);
        OutString(80,0,Userr.Spec,false);
        EndFormat;
        StartFormat(15);
        OutString(0,0,USetStr(9047) & ":",false);
        OutString(80,0,Userr.Comment,false);
        EndFormat;
        StartFormat(15);
        EndFormat;
        Gray_Divider(0,1);
      end;
    end;
  end;
  if (IsEnterprise) then begin
    if (namedusercnt!=0 or concusercnt!=0) then begin
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(350,0,USetStr(16181) & " " ,false);
      OutString(1,0,namedusercnt,true);
      EndFormat;
      StartFormat(15);
      OutString(350,0,USetStr(7860) & " " ,false);
      OutString(1,0,concusercnt,true);
      EndFormat;
      if (RepSpec.flags[4]!=0) then begin
        Gray_Divider(0,1);
      end;
    end;
  end;
  totnamedusercnt = totnamedusercnt + namedusercnt;
  totconcusercnt = totconcusercnt + concusercnt;
  return;
end;

global
procedure UserRn(record RcVc RepSpec)
begin
  string 10 fruser,touser;
  Integer totnamedusercnt,totconcusercnt,rw;
  string 255 tstr;
  record CompaniesBlock Compb;
  row CompaniesBlock Compbrw;
  Integer i,rwcnt,oldcomp;
  
  fruser = FirstInRange(RepSpec.f1,10);
  touser = LastInRange(RepSpec.f1,10);
  StartReportJob(USetStr(8900));
  HTDetailLevel(RepSpec.flags[0],tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.flags[1]==0) then begin tstr = USetStr(14575); end;
  if (RepSpec.flags[1]==1) then begin tstr = USetStr(16183); end;
  if (RepSpec.flags[1]==2) then begin tstr = USetStr(16181); end;
  rw = rw + 1;
  Header(rw,tstr,0);
  HTPersons(fruser,touser,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.flags[2]==0) then begin
    Header(rw,USetStr(38353),0);
  end;
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,USetStr(8901),false);
  OutString(50,0,USetStr(8902),false);
  if (IsEnterprise) then begin
    OutString(200,0,USetStr(8903),false);
    OutString(270,0,USetStr(8899),false);
    OutString(410,0,USetStr(8906),true);
  end;
  if (IsStandardProduct or IsSberbankProduct) and (HasEMail==false) then begin
    OutString(480,0,USetStr(28710),true);  
  end else begin
    OutString(480,0,USetStr(8141),true);
  end;
  EndFormat;    
  Gray_Divider(0,1);

  if (RepSpec.flags[4]!=0) then begin
    BlockLoad(Compb);
    oldcomp = CurrentCompany;
    rwcnt = MatRowCnt(Compb);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(Compb,i,Compbrw);
      if (SetCompany(i+1,false)) then begin
        UserList(RepSpec,Compbrw,totnamedusercnt,totconcusercnt);
      end;
    end;
    ResetCompany(oldcomp);
  end else begin
    UserList(RepSpec,Compbrw,totnamedusercnt,totconcusercnt);
  end;

  if (IsEnterprise) then begin
    if (RepSpec.flags[4]!=0) then begin
      Gray_Divider(0,1);
      StartFormat(15);
      OutString(350,0,USetStr(16181) & " " ,false);
      OutString(1,0,totnamedusercnt,true);
      EndFormat;
      StartFormat(15);
      OutString(350,0,USetStr(7860) & " " ,false);
      OutString(1,0,totconcusercnt,true);
      EndFormat;
    end;
  end;

  EndJob;
  return;
end;
