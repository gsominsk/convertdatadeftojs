external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTLevCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass2(string,string,string,string,string,string,string);

procedure AddDfncyStock(record DfncyStockVc DSr,record DfncyStockVc sumDSr,Integer flags0)
begin
  switch (flags0) begin
    case 1:
      sumDSr.ArtCode = DSr.ArtCode;
    case 2:
      sumDSr.ArtCode = DSr.ArtCode;
      sumDSr.VECode = DSr.VECode;
  end;
  sumDSr.Quant = sumDSr.Quant + DSr.Quant;
  return;
end;

procedure PrintDfncyStock(record DfncyStockVc DSr,record RcVc RepSpec,array integer a_column)
begin
  record INVc INr;
  record CUVc CUr;

  switch (RepSpec.flags[0]) begin
    case 0:
      StartFormat(15);
      OutString(a_column[1],"DblINVc",DSr.ArtCode,false);
      ReadFirstItem(DSr.ArtCode,INr,true,false);
      OutString(a_column[6],0,left(INr.Name,25),false);
      OutString(a_column[2],"DblVEVc",DSr.VECode,false);
      CUr.Code = DSr.VECode;
      if (ReadFirstMain(CUr,1,true)) then begin
        OutString(a_column[7],0,left(CUr.Name,25),false);
      end else begin
        OutString(a_column[7],0,"",false);
      end;
      OutStringID(a_column[3],"DblPIVc",DSr.PICode,false,DSr.ArtCode & ":" & DSr.VECode);
      OutString(a_column[4],0,DSr.Location,false);
      OutValID(a_column[5],"DblDfncyStock",DSr.Quant,M4Val,true,DSr.SerNr);
      EndFormat;
    case 1:
      StartFormat(15);
      OutString(a_column[1],"DblINVc",DSr.ArtCode,false);
      ReadFirstItem(DSr.ArtCode,INr,true,false);
      OutString(a_column[6],0,left(INr.Name,25),false);      
      OutValID(a_column[5],"DblDfncyStock",DSr.Quant,M4Val,true,DSr.SerNr);
      EndFormat;
    case 2:
      StartFormat(15);
      OutString(a_column[1],"DblVEVc",DSr.VECode,false);
      CUr.Code = DSr.VECode;
      if (ReadFirstMain(CUr,1,true)) then begin
        OutString(a_column[6],0,left(CUr.Name,25),false);
      end else begin
        OutString(a_column[6],0,"",false);
      end;      
      OutString(a_column[9],"DblINVc",DSr.ArtCode,false);
      ReadFirstItem(DSr.ArtCode,INr,true,false);
      OutString(a_column[8],0,left(INr.Name,25),false);      
      OutValID(a_column[5],"DblDfncyStock",DSr.Quant,M4Val,true,DSr.SerNr);
      EndFormat;
  end;
  return;
end;

global
procedure DfncyStockRn(record RcVc RepSpec)
begin
  record DfncyStockVc DSr;
  Boolean found,samef,testf;
  val totq;
  string 255 keystr,tstr;
  Integer keys,rw;
  record DfncyStockVc sumDSr;
  record DfncyStockVc lastDSr;
  string 255 frin,toin;
  string 255 frve,tove;
  array integer a_column;
  
  a_column[1] = 0;
  a_column[6] = 50;
  a_column[2] = 150;
  a_column[3] = 310;
  a_column[4] = 380;
  a_column[5] = 480;
  a_column[7] = 185;
  a_column[8] = 250;
  a_column[9] = 180;
  
  frin = FirstInRange(RepSpec.f1,20);
  toin = LastInRange(RepSpec.f1,20);
  frve = FirstInRange(RepSpec.f2,20);
  tove = LastInRange(RepSpec.f2,20);
  StartReportJob(USetStr(17620));
  rw = 1;
  if (HasCategories) then begin
    HTLevCat(RepSpec.f3,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  EndHeader;
  switch (RepSpec.flags[0]) begin
    case 0:
      StartFormat(15);
      OutString(a_column[1],0,USetStr(17621),false);
      OutString(a_column[6],0,USetStr(5393),false);
      OutString(a_column[2],0,USetStr(17622),false);
      OutString(a_column[7],0,USetStr(12599),false);
      OutString(a_column[3],0,USetStr(17623),false);
      OutString(a_column[4],0,USetStr(17624),false);
      OutString(a_column[5],0,USetStr(17625),true);
      EndFormat;
    case 1:
      StartFormat(15);
      OutString(a_column[1],0,USetStr(17621),false);
      OutString(a_column[6],0,USetStr(5393),false);
      OutString(a_column[5],0,USetStr(17625),true);
      EndFormat;
    case 2:
      StartFormat(15);
      OutString(a_column[1],0,USetStr(17622),false);
      OutString(a_column[6],0,USetStr(12599),false);
      OutString(a_column[9],0,USetStr(17621),false);
      OutString(a_column[8],0,USetStr(5393),false);
      OutString(a_column[5],0,USetStr(17625),true);
      EndFormat;
  end;
  Gray_Divider(0,1);

  RecordClear(lastDSr);
  RecordClear(sumDSr);

  switch (RepSpec.flags[0]) begin
    case 0:
      keystr = "SerNr";
      keys = 1;
    case 1:
      keystr = "ArtCode";
      keys = 1;
    case 2:
      keystr = "ActVEArt";
      keys = 1;
  end;
  found = true;
  while (LoopKey(keystr,DSr,1,found)) begin
    switch (RepSpec.flags[0]) begin
      case 0:
      case 1:
      case 2:
    end;
    if (found) then begin
      testf = true;
      if (DSr.PONr>0) then begin testf = false; end;
      if (nonblank(RepSpec.f1)) then begin
        if (DSr.ArtCode<frin) then begin testf = false; end;
        if (DSr.ArtCode>toin) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.FirstAcc)) then begin
        if (DSr.Location!=RepSpec.FirstAcc) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (DSr.VECode<frve) then begin testf = false; end;
        if (DSr.VECode>tove) then begin testf = false; end;
      end;
      if (testf) then begin
        testf = ContactInGroupClass2(DSr.VECode,RepSpec.f3,RepSpec.f4,"","SUPP","","");
      end;
      if (testf) then begin
        switch (RepSpec.flags[0]) begin
          case 0:
            PrintDfncyStock(DSr,RepSpec,a_column);
          case 1:
            samef = true;
            if (nonblank(lastDSr.ArtCode)) then begin
              if (lastDSr.ArtCode!=DSr.ArtCode) then begin
                samef = false;
              end;
            end;
            if (samef) then begin
              AddDfncyStock(DSr,sumDSr,RepSpec.flags[0]);
            end else begin
              PrintDfncyStock(sumDSr,RepSpec,a_column);
              RecordClear(sumDSr);
              AddDfncyStock(DSr,sumDSr,RepSpec.flags[0]);
            end;
            RecordCopy(lastDSr,DSr);
          case 2:
            samef = true;
            if (nonblank(lastDSr.ArtCode)) then begin
              if (lastDSr.ArtCode!=DSr.ArtCode) or (lastDSr.VECode!=DSr.VECode) then begin
                samef = false;
              end;
            end;
            if (samef) then begin
              AddDfncyStock(DSr,sumDSr,RepSpec.flags[0]);
            end else begin
              PrintDfncyStock(sumDSr,RepSpec,a_column);
              RecordClear(sumDSr);
              AddDfncyStock(DSr,sumDSr,RepSpec.flags[0]);
            end;
            RecordCopy(lastDSr,DSr);
        end;
        totq = totq + DSr.Quant;
      end;
    end;
  end;
  switch (RepSpec.flags[0]) begin
    case 1:
      if (sumDSr.Quant!=0) then begin
        PrintDfncyStock(sumDSr,RepSpec,a_column);
      end;
    case 2:
      if (sumDSr.Quant!=0) then begin
        PrintDfncyStock(sumDSr,RepSpec,a_column);
      end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutVal(a_column[5],0,totq,M4Val,true);
  EndFormat;
  EndJob;
  return;
end;