external procedure HT2Per(Date,Date,var string);

global
procedure DAJRn(record RcVc RepSpec)
begin
  record DAVc DAr;
  row DAVc DArw;
  Integer i,rwcnt;
  string 255 tstr,index;
  Integer rw;
  Boolean found,testf,firstf;
  LongInt afr,ato;
  val totpayval,dapayval,rate;

  rw = 1;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(32760));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.ArtMode==0) then begin
    tstr = USetStr(1159);
  end else begin
    tstr = USetStr(1160);
  end;
  Header(rw,tstr,0);
  if ((RepSpec.flags[1]==0) and (RepSpec.flags[2]==0)) then begin
   tstr = USetStr(1139);
  end;
  if (RepSpec.flags[1]==0) then begin
    tstr = USetStr(1138);
  end;
  if (RepSpec.flags[2]==0) then begin
    tstr = USetStr(1137);
  end;
  if ((RepSpec.flags[1]==0) or (RepSpec.flags[2]==0)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if ((afr==-1) and (ato==-1)) then begin
    tstr = USetStr(32761);
  end else begin
    tstr = USetStr(32762);
    tstr = tstr & afr;
    if (afr<>ato) then begin
      tstr = tstr & " : ";
      tstr = tstr & ato;
    end;
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(4830);
    tstr = tstr & " : " & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;
  
 switch (RepSpec.ArtMode) begin
   case 0:
     StartFormat(15);
     OutString(0,0,USetStr(32763),false);
     OutString(60,0,USetStr(32764),false);
     OutString(120,0,USetStr(4830),false);
     OutString(170,0,USetStr(32765),false);
     OutString(300,0,USetStr(32766),false);
     OutString(1,0,USetStr(32767),true);
     EndFormat;
   case 1:
     StartFormat(15);
     OutString(0,0,USetStr(32763),false);
     OutString(60,0,USetStr(32764),false);
     OutString(120,0,USetStr(4830),false);
     OutString(170,0,USetStr(32765),false);
     OutString(300,0,USetStr(32766),false);
     EndFormat;
  end;
  Gray_Divider(0,1);

  firstf = true;
  DAr.TransDate = RepSpec.sStartDate;
  DAr.SerNr = afr;
  found = true;
  index = "TransDate";
  if (nonblank(RepSpec.f1)) then begin
    index = "SerNr";
  end;
  while (LoopKey(index,DAr,1,found)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (DAr.SerNr>ato) then begin found = false; end;
    end else begin
      if (DateInRange(DAr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin found = false; end;
    end;
//    if (DAr.Invalid!=0)then begin testf = false; end;
    if (found) then begin
      testf = true;
      if ((RepSpec.flags[1]==0) and (DAr.OKFlag==0)) then begin
        testf = false;
      end;
      if ((RepSpec.flags[2]==0) and (DAr.OKFlag!=0)) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f1)) then begin
      end else begin
        if (DateInRange(DAr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
      end;
      if (testf) then begin
        if (firstf==false) then begin
          StartFormat(15);
          EndFormat;
        end;
        firstf = false;
        StartFormat(15);
        OutLongInt(0,"DblDAVc",DAr.SerNr,false);
        OutDate(60,0,DAr.TransDate,false);
        OutString(120,0,DAr.Person,false);
        OutString(170,0,DAr.Name,false);
        OutString(300,0,DAr.Comment,false);
        switch (RepSpec.ArtMode) begin
          case 0:
            OutVal(1,0,DAr.PayVal,M4Val,true);
            EndFormat;
          case 1:
            EndFormat;
            Gray_Divider(15,1);
            StartFormat(15);
            OutString(15,0,USetStr(32768),false);
            OutString(60,0,USetStr(32764),false);
            OutString(120,0,USetStr(32769),false);
            OutString(200,0,USetStr(32773),true);
            OutString(240,0,USetStr(32770),false);
            OutString(295,0,USetStr(32771),false);
            OutString(350,0,USetStr(32772),false);
            OutString(420,0,"%",true);
            OutString(1,0,USetStr(32767),true);
            EndFormat;
            Gray_Divider(15,1);          
            rwcnt = MatRowCnt(DAr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(DAr,i,DArw);
              StartFormat(15);
               OutString(15,0,i+1,false);
               OutDate(60,0,DArw.Date,false);
               OutString(120,0,DArw.Country,false);
               OutVal(200,0,DArw.DailySum,M4Val,true);
               OutString(240,0,StringFromSet(562,DArw.Breakfast),false);
               OutString(295,0,StringFromSet(562,DArw.Lunch),false);
               OutString(350,0,StringFromSet(562,DArw.Dinner),false);
               rate = 15;
               if (DArw.Breakfast==kDAMealNotProvided) then begin
                 rate = rate + DArw.BreakfastRate;
               end;
               if (DArw.Lunch==kDAMealNotProvided) then begin
                 rate = rate + DArw.LunchRate;
               end;
               if (DArw.Dinner==kDAMealNotProvided) then begin
                 rate = rate + DArw.DinnerRate;
               end;
               OutVal(420,0,rate,M4Val,true);
               OutVal(1,0,DArw.Compensation,M4Val,true);
              EndFormat;
            end;
            Gray_Divider(390,1);
            StartFormat(15);
             OutString(400,0,USetStr(32774) & ":",false);
             OutVal(1,0,DAr.PayVal,M4Val,true);
            EndFormat;
        end;
        totpayval = totpayval + DAr.PayVal;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
   OutString(400,0,USetStr(32774) & ":",false);
   OutVal(1,0,totpayval,M4Val,true);
  EndFormat;
  
  EndJob;
  return;
end;