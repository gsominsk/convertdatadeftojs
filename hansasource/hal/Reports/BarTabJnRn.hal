external procedure HT2Per(Date, Date , var string);external procedure HTCusts(string, string, var string);external procedure HTCustCat(string,var string);external procedure HTObj(string,var string);procedure RepBarInvoice(record RestAccVc RestAccr)begin  row RestAccVc RestAccrw;  string 255 tstr,t2;  Integer i,rwcnt,j,k;  val qty;  qty = 0;  StartFormat(15);  OutString(0,"DblRestAccVc",RestAccr.SerNr,false);  OutDate(130,0,RestAccr.TransDate,false);  EndFormat;    StartFormat(15);  OutString(50,0,RestAccr.CustCode,false);  OutString(120,0,RestAccr.CUName,false);  OutString(230,0,RestAccr.GuestName,false);  OutString(330,0,RestAccr.Resource,false);  if (RestAccr.Closed==1) then begin     OutString(1,0,USetStr(26577),true);  end else begin      OutString(1,0,USetStr(26578),true);  end;     EndFormat;  rwcnt = MatRowCnt(RestAccr);  for (i=0;i<rwcnt;i=i+1) begin    MatRowGet(RestAccr,i,RestAccrw);    if ((RestAccrw.stp==1) or (RestAccrw.stp==4)) then begin      StartFormat(15);      qty = qty + RestAccrw.Quant;      OutString(20,0,RestAccrw.ArtCode,false);      OutVal(104,0,RestAccrw.Quant,M4UVal,true);      OutString(110,0,RestAccrw.Spec,false);      OutVal(350,0,RestAccrw.Price,M423Val,true);      OutVal(410,0,RestAccrw.Price*RestAccrw.Quant,M4Val,true);      EndFormat;    end;  end;  Black_Divider(380,460);  StartFormat(15);  OutString(20,0,USetStr(2645),false);  OutVal(104,0,qty,M4UVal,true);  OutString(150,0,USetStr(3185),false);  OutString(200,0,RestAccr.Objects,false);  OutString(320,0,USetStr(26579),false);  OutVal(410,0,RestAccr.Sum4,M4Val,true);  EndFormat;  return;end;procedure HTOT(string objcode,var string tstr)begin  record OTVc OTr;  OTr.Code = objcode;  if (ReadFirstMain(OTr,1,true)) then begin    tstr = USetStr(3016);    tstr = tstr & OTr.Code;    if (nonblank(OTr.Comment)) then begin      tstr = tstr & "  ";      tstr = tstr & OTr.Comment;    end;  end;  return;end;globalprocedure BarTabJnRn(record RcVc RepSpec)begin  record RestAccVc RAr;  record ObjVc OBr;  Boolean Accs;  Boolean TrHs;  Boolean testf;  string 255 tstr;  Integer rw;  string 20 frcust,tocust;  LongInt frtab,totab;  val totsum;  record ResVc Resr;  record CUVc CUr;  LongInt totinv;  frcust = FirstInRange(RepSpec.f2,20);  tocust =  LastInRange(RepSpec.f2,20);        frtab = FirstInRange(RepSpec.f1,20);  totab =  LastInRange(RepSpec.f1,20);    totinv = 0;    StartReportJob(USetStr(26580));  rw = 1;  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);  Header(rw,tstr,1);  rw = rw + 1;  if (nonblank(RepSpec.f2)) then begin    HTCusts(frcust,tocust,tstr);    Header(rw,tstr,1);    rw = rw + 1;  end;  if (nonblank(RepSpec.f8)) then begin    HTCustCat(RepSpec.f8,tstr);    Header(rw,tstr,1);    rw = rw + 1;  end;  if nonblank(RepSpec.f3) then begin     tstr = USetStr(26562) & RepSpec.f3;    Header(rw,tstr,1);    rw = rw + 1;  end;  if nonblank(RepSpec.f4) then begin     tstr = USetStr(26563) & RepSpec.f4;    Header(rw,tstr,1);    rw = rw + 1;  end;  if nonblank(RepSpec.f5) then begin     tstr = USetStr(26564) & RepSpec.f5;    Header(rw,tstr,1);    rw = rw + 1;  end;  if nonblank(RepSpec.f7) then begin     tstr = USetStr(26567) & RepSpec.f7;    Header(rw,tstr,1);    rw = rw + 1;  end;      if (nonblank(RepSpec.ObjStr)) then begin    HTObj(RepSpec.ObjStr,tstr);    Header(rw,tstr,1);    rw = rw + 1;  end;  if (RepSpec.ObjType<>"") then begin    HTOT(RepSpec.ObjType,tstr);    Header(rw,tstr,1);    rw = rw + 1;  end;  if (RepSpec.flags[0]==1) then begin     tstr = USetStr(26575);    Header(rw,tstr,1);    rw = rw + 1;    end;   EndHeader;  StartFormat(15);  OutString(0,  0,USetStr(26566),false);  OutString(60, 0,USetStr(26567),false);  OutString(120,0,USetStr(26568),false);  OutString(230,0,USetStr(26569),false);  OutString(330,0,USetStr(26570),false);  OutString(410,0,USetStr(26571),true);  OutString(1,  0,USetStr(26572),true);  EndFormat;  Gray_Divider(0,1);    TrHs = true;  RAr.TransDate = RepSpec.sStartDate;  while (LoopKey("TransDate",RAr,1,TrHs)) begin    testf = true;    if (RAr.TransDate>RepSpec.sEndDate) then begin      testf = false;      TrHs = false;    end;    if (nonblank(RepSpec.f2)) then begin      if (RAr.CUCode<frcust) then begin        testf = false;      end;      if (RAr.CUCode>tocust) then begin        testf = false;      end;    end;    if (nonblank(RepSpec.f1)) then begin      if (RAr.SerNr<frtab) then begin        testf = false;      end;      if (RAr.SerNr>totab) then begin        testf = false;      end;    end;    if nonblank(RepSpec.f6) then begin       if (RepSpec.f6<>RAr.Cashier) then begin         testf = false;      end;       end;    if nonblank(RepSpec.f4) then begin       if (RepSpec.f4<>RAr.Resource) then begin         testf = false;      end;       end;    if nonblank(RepSpec.f3) then begin       if (RepSpec.f3<>RAr.GuestCode) then begin         testf = false;      end;       end;    if nonblank(RepSpec.f7) then begin       if (RepSpec.f7<>RAr.MachineName) then begin         testf = false;      end;       end;    if nonblank(RepSpec.f5) then begin       Resr.Code = RAr.Resource;      if ReadFirstMain(Resr,1,true) then begin         if (Resr.ResLoc<>RepSpec.f5) then begin           testf = false;          end;      end else begin         testf = false;        end;    end;    if (nonblank(RepSpec.TransStr)) then begin      if (testf==true) then begin         if (RepSpec.TransStr==RAr.PayDeal) then begin          testf = true;        end;        if (RepSpec.TransStr==RAr.PayDeal2) then begin          testf = true;        end;        if (RepSpec.TransStr==RAr.PayDeal3) then begin          testf = true;        end;      end;      end;    if (nonblank(RepSpec.f8)) then begin      CUr.Code = RAr.CustCode;      if (ReadFirstMain(CUr,1,true)) then begin        if (RepSpec.f8<>CUr.CustCat) then begin          testf = false;        end;      end;    end;    if (nonblank(RepSpec.ObjStr)) then begin      if (SetInSet(RepSpec.ObjStr,RAr.Objects)==false) then begin        testf = false;      end;    end else begin      if ((testf==true) and (nonblank(RepSpec.ObjType))) then begin        testf = false;        OBr.OTCode = RepSpec.ObjType;        OBr.Code = "";        Accs = true;        ResetLoop(OBr);        while (LoopKey("OTCode",OBr,1,Accs)) begin          if ((Accs==true) and (RepSpec.ObjType==OBr.OTCode)) then begin                          if (SetInSet(OBr.Code,RAr.Objects)==true) then begin              testf = true;              Accs = false;            end;          end;        end;       end;    end;    if ((RepSpec.flags[0]==1) and (RAr.Closed!=1)) then begin       testf = true;    end;    if (testf) then begin      if (RepSpec.ArtMode==0) then begin         StartFormat(15);        OutString(0,"DblRestAccVc",RAr.SerNr,false);        OutDate(60,0,RAr.TransDate,false);        OutString(120,0,RAr.CUName,false);        OutString(230,0,RAr.GuestName,false);        OutString(330,0,RAr.Resource,false);        OutVal(410,0,RAr.Sum4,M4Val,true);        if (RAr.Closed==1) then begin           OutString(1,0,USetStr(26577),true);        end else begin            OutString(1,0,USetStr(26578),true);        end;           EndFormat;      end;       if (RepSpec.ArtMode==1) then begin         RepBarInvoice(RAr);      end;       totsum = totsum + RAr.Sum4;      totinv = totinv + 1;    end;  end;  Gray_Divider(0,1);  StartFormat(15);  OutString(230,0,USetStr(8330),false);  OutVal(410,0,totsum,M4Val,true);  EndFormat;  StartFormat(15);  OutString(230,0,USetStr(26576),false);  OutLongInt(410,0,totinv,true);  EndFormat;    EndJob;  return;end;