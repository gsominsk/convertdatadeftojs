global
function Boolean IsInvalidPhoneNumber(string phonenumber)
begin
  Boolean res;
  String 255 normphoneno;
  res = true;
  normphoneno = NormalizePhoneNumber(phonenumber);
  if (normphoneno=="") then begin
    res = false;
  end;
  
  IsInvalidPhoneNumber = res;
  return;
end;

function Boolean CheckPhoneNo(record CUVc CUr,string labelstring,string phonenumber,Boolean validf)
begin
  Boolean res;
  res = validf;

  if (blank(phonenumber)) then begin
    goto L99;
  end;

  if (IsInvalidPhoneNumber(phonenumber)==false) then begin
    if (validf==true) then begin
      res = false;
      StartFormat(15);
      OutString(0,"DblCUVc",CUr.Code,false);
      OutString(2,0,CUr.Name,false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(3,0,labelstring,false);
    OutString(4,0,phonenumber,false);
    EndFormat;
  end;

L99:;
  CheckPhoneNo = res;
  return;
end;

function Boolean CheckExtension(record CUVc CUr,string labelstring,string extension,Boolean validf)
begin
  Boolean res;
  res = validf;

  if (blank(extension)) then begin
    goto LCheckExtension;
  end;

  if (IsInvalidPhoneNumber(extension)==false) then begin
    if (validf==true) then begin
      res = false;
      StartFormat(15);
      OutString(0,"DblCUVc",CUr.Code,false);
      OutString(2,0,CUr.Name,false);
      EndFormat;
    end;
    StartFormat(15);
    OutString(3,0,labelstring,false);
    OutString(4,0,extension,false);
    EndFormat;
  end;

LCheckExtension:;
  CheckExtension = res;
  return;
end;

global
procedure InvPhoneNoRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  Boolean found;
  Boolean validf,validextf;
  LongInt invalcnt,cnt;

  invalcnt = 0;
  cnt = 0;
  StartReportJob(USetStr(20985));
  EndHeader;
  SetRepCol(2,65);
  SetRepCol(3,210);
  SetRepCol(4,260);
  SetRepCol(5,280);
  SetRepCol(6,330);
  StartFormat(15);
  OutString(0,0,USetStr(12501),false); // Code
  OutString(2,0,USetStr(12502),false); // Name
  OutString(3,0,USetStr(20980),false); // Field
  OutString(4,0,USetStr(20981),false); // Phonenumber
  EndFormat;
  Gray_Divider(0,1);
  validf = true;
  found = true;
  while (LoopMain(CUr,1,found)) begin
    if (found) then begin
      cnt = cnt + 1;
      validf = CheckPhoneNo(CUr,USetStr(12114),CUr.Phone,validf); // Phone
      validf = CheckPhoneNo(CUr,USetStr(12115),CUr.Fax,validf); // Fax
      validf = CheckPhoneNo(CUr,USetStr(20984),CUr.AltPhone,validf); // AltPhone
      validf = CheckPhoneNo(CUr,USetStr(20986),CUr.Mobile,validf); // Mobile
      validextf = CheckExtension(CUr,USetStr(20988),CUr.Extension,validf); // Extension
      if (validf==false) or (validextf==false) then begin
        StartFormat(15);
        EndFormat;
        invalcnt = invalcnt + 1;
        validf = true;
      end;
    end;
  end;
  StartFormat(15);
  EndFormat;
  StartFormat(15);
  OutString(5,0,USetStr(20982),true); // Number of contacts:
  OutString(6,0,cnt,false);
  EndFormat;
  StartFormat(15);
  OutString(5,0,USetStr(20983),true); // Invalid contacts:
  OutString(6,0,invalcnt,false);
  EndFormat;
  EndJob;
  return;
end;
