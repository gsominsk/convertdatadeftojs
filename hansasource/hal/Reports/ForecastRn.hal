external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external procedure CalcSum(val,val,val,val,var val,Integer);
external procedure HT2Per(Date,Date,var string);

procedure CalculateNotInvoicedOrders(record ORVc ORr,var val sum1,var val sum4,var val totgp)
begin
  Integer i,rwcnt;
  row ORVc ORrw;
  val q,s,vatv,t1;
  
  sum1 = blankval;
  sum4 = blankval;
  totgp = blankval;
  if (ORr.ShipFlag==0) and ((ORr.InvFlag==1) or (ORr.InvFlag==0)) then begin
    sum1 = ORr.Sum1;
    sum4 =  ORr.Sum4;
    totgp =  ORr.TotGP;
  end else begin
    rwcnt = MatRowCnt(ORr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(ORr,i,ORrw);
      q = ORrw.Quant - ORrw.Invd;
      if (q>0) then begin
        CalcSum(q,ORrw.Price,ORrw.PriceFactor,ORrw.vRebate,s,ORr.InclVAT);
        sum1 = sum1 + s;
        MulVATIV(ORrw.VATCode,s,vatv,t1,ORr.InclVAT,ORr.NoTAXonVAT);
        sum4 = sum4 + s + vatv + t1;
        totgp = totgp + ((ORrw.rowGP*q)/ORrw.Quant);
      end;
    end;
  end;
  return;
end;

global
procedure ForecastRn(record RcVc RepSpec)
BEGIN
  record ORVc ORr;
  record QTVc QTr;
  LongInt orfr,orto,qtfr,qtto;
  Val TotProb;
  Boolean testf,TrHs;
  Integer rw;
  string 255 tstr;
  string 5 frus,tous;
  string 20 frcu,tocu;
  Date dat;
  val sum1,sum4,totgp;
  
  StartReportJob(USetStr(8200));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  EndHeader;
  
  SetRepCol(2,60);
  SetRepCol(3,120);
  SetRepCol(4,240);
  SetRepCol(5,320);
  SetRepCol(6,400);
  
  StartFormat(15);
  OutString(0,0,USetStr(8201),false);
  OutString(2,0,USetStr(8202),false);
  OutString(3,0,USetStr(8203),false);
  OutString(4,0,USetStr(8204),true);
  OutString(5,0,USetStr(8205),true);
  OutString(6,0,USetStr(8206),true);
  OutString(1,0,USetStr(8207),true);
  EndFormat;
  Gray_Divider(0,1);
  orfr = FirstInRange(RepSpec.f1,10);
  orto = LastInRange(RepSpec.f1,10);
  qtfr = FirstInRange(RepSpec.f2,10);
  qtto = LastInRange(RepSpec.f2,10);
  frus = FirstInRange(RepSpec.f3,5);
  tous = LastInRange(RepSpec.f3,5);
  frcu = FirstInRange(RepSpec.ObjStr,20);
  tocu = LastInRange(RepSpec.ObjStr,20);
  TotProb = 0;
  
  if (RepSpec.flags[0]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(8208),false);
    EndFormat;  
    Gray_Divider(0,100);
    ORr.SerNr = orfr;
    TrHs = true;
    while (LoopMain(ORr,1,TrHs)) begin
      testf = true;
      if (orto<>-1) then begin
        if (ORr.SerNr>orto) then begin
          TrHs = false;
        end;
      end;
      if (TrHs) then begin
        if (RepSpec.flags[2]==0) then begin
          if (DateInRange(ORr.OrdDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.AccStr)) then begin
          if (ORr.SalesGroup <> RepSpec.AccStr) then begin
             testf = false;
          end;
        end;   
       
        if (nonblank(frus)) then begin
          if (ORr.SalesMan<frus) then begin
            testf = false;
          end;
        end;
        if (nonblank(tous)) then begin
          if (ORr.SalesMan>tous) then begin
            testf = false;
          end;
        end;
        if (nonblank(RepSpec.ObjStr)) then begin
          if (ORr.CustCode<frcu) then begin
            testf = false;
          end;
          if (ORr.CustCode>tocu) then begin
            testf = false;
          end;
        end;
        if (ORr.Closed<>0) then begin testf = false; end;
        if (ORr.OSFlag==0) then begin testf = false; end;
        if (testf) then begin          
          CalculateNotInvoicedOrders(ORr,sum1,sum4,totgp);
          StartFormat(15);
          OutLongInt(0,"DblORVc",ORr.SerNr,false);
          OutDate(2,0,ORr.OrdDate,false);
          OutString(3,0,"",false);
          OutVal(4,0,sum1,M4Val,true);
          OutVal(5,0,sum4,M4Val,true);
          OutVal(6,0,totgp,M4Val,true);
          OutVal(1,0,ORr.Probability,M41Val,true);            
          EndFormat;
        end;
      end;  
    end;  
  end;
  if (RepSpec.flags[1]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(8209),false);
    EndFormat;  
    Gray_Divider(0,100);
    QTr.SerNr = qtfr;
    TrHs = true;
    while (LoopMain(QTr,1,TrHs)) begin
      testf = true;
      if (qtto<>-1) then begin
        if (QTr.SerNr>qtto) then begin
          TrHs = false;
        end;
      end;
      if (TrHs) then begin
        if (RepSpec.flags[2]==0) then begin
          if (DateInRange(QTr.QTDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
        end;
        if (nonblankdate(RepSpec.d1)) then begin
          dat = StringToDate(QTr.ValidUntilDate);
          if (dat<RepSpec.d1) then begin
            testf = false;
          end;
        end;
        if (nonblank(frus)) then begin
          if (QTr.SalesMan<frus) then begin
            testf = false;
          end;
        end;
        if (nonblank(tous)) then begin
          if (QTr.SalesMan>tous) then begin
            testf = false;
          end;
        end;
        if (nonblank(RepSpec.AccStr)) then begin
          if (QTr.SalesGroup <> RepSpec.AccStr) then begin
             testf = false;
          end;
        end;   
        if (nonblank(RepSpec.ObjStr)) then begin
          if (QTr.CustCode<frcu) then begin
            testf = false;
          end;
          if (QTr.CustCode>tocu) then begin
            testf = false;
          end;
        end;       
        if (QTr.Rejected!=0) then begin testf = false; end;        
        if (QTr.Closed<>0) then begin testf = false; end;        
        if (QTr.OrderNr>0) then begin testf = false; end;        
        if (testf) then begin
          TotProb = TotProb+(QTr.Sum1*QTr.Probability)/100;
          StartFormat(15);
          OutLongInt(0,"DblQTVc",QTr.SerNr,false);
          OutDate(2,0,QTr.QTDate,false);
          OutDate(3,0,QTr.ValidUntilDate,false);
          OutVal(4,0,QTr.Sum1,M4Val,true);
          OutVal(5,0,QTr.Sum4,M4Val,true);
          OutVal(6,0,QTr.TotGP,M4Val,true);
          OutVal(1,0,QTr.Probability,M41Val,true);                        
          EndFormat;
        end;
      end;  
    end;  
  end;
  Black_Divider(0,1);
  StartFormat(15);
  OutString(0,0,"",false);
  OutString(2,0,"",false);
  OutString(3,0,"",false);
  OutString(4,0,"",false);
  OutString(5,0,"",false);
  OutString(6,0,USetStr(8210),true);
  OutVal(1,0,TotProb,M4Val,true);
  EndFormat;
  EndJob;
  RETURN;
END;
