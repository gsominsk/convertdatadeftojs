external procedure HTCusts(string,string,var string);
external procedure HT2Per(Date,Date,var string);
external procedure HTCustZone(Integer,Integer,Integer,var string);
external procedure GetDateTurnover(string,string,string,string,string,record ICSVc,string,Date,Date,var val,Integer);
external function Boolean TestArtCodeMatch(string,string);

/*
procedure GetSalesItemType(string customer,record RcVc RepSpec,var val tsum)
BEGIN
 boolean test,TrHs,stfound;
 record INVc INr;
 record ICSVc ICSp;
 val sum;
    
 tsum = 0;
 TrHs = true;
 if (RepSpec.flags[8] == 1) then begin
    INr.ItemType = 3;
 end;
 if (RepSpec.flags[7] == 1) then begin
    INr.ItemType = 2;
 end;
 if (RepSpec.flags[6] == 1) then begin
    INr.ItemType = 1;
 end;
 if (RepSpec.flags[5] == 1) then begin
    INr.ItemType = 0;
 end;
 ResetLoop(INr);
 while (LoopKey("ItemType",INr,1,TrHs)) begin
    test = false;
    if (RepSpec.flags[8] == 1) and (INr.ItemType == 3) then begin
        test = true;
    end;
    if (RepSpec.flags[7] == 1) and (INr.ItemType == 2) then begin
        test = true;
    end;
    if (RepSpec.flags[6] == 1) and (INr.ItemType == 1) then begin
        test = true;
    end;
    if (RepSpec.flags[5] == 1) and (INr.ItemType == 0) then begin
        test = true;
    end;
    if test then begin
      ICSp.ArtCode = INr.Code;
      ICSp.CustCode = customer;
      stfound = ReadFirstMain(ICSp,2,false);
      if (TestArtCodeMatch(ICSp.ArtCode,INr.Code)==false) then begin
        stfound = false;
      end;
      if (ICSp.CustCode<>customer) then begin
        stfound = false;
      end;
      if (stfound==true) then begin
        GetDateTurnover(INr.Code,customer,ICSp,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,sum,0);
        tsum = tsum + sum;
      end;
    end;
  end;
  RETURN;
END;
*/

procedure GetSalesItemType(string customer,record RcVc RepSpec,var val tsum)
begin
  Boolean test,TrHs,stfound,testf;
  record INVc INr;
  record ICSVc ICSp;
  val sum;
  vector Boolean vitemf;
    
  tsum = 0;
  ICSp.CustCode = customer;
  stfound = true;
  TrHs = true;
  while (LoopMain(ICSp,1,TrHs)) begin
    if (ICSp.CustCode!=customer) then begin TrHs = false; end;
    if (TrHs==true) then begin
      testf = true;
      INr.Code = ICSp.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
        testf = false;
        if (RepSpec.flags[8]==1) then begin
          if (INr.ItemType==3) then begin testf = true; end;
        end;
        if (RepSpec.flags[7] == 1) then begin
          if (INr.ItemType==2) then begin testf = true; end;
        end;
        if (RepSpec.flags[6] == 1) then begin
          if (INr.ItemType==1) then begin testf = true; end;
        end;
        if (RepSpec.flags[5] == 1) then begin
          if (INr.ItemType==0) then begin testf = true; end;
        end;
      end else begin
        testf = false;
      end;
      if (vitemf[ICSp.ArtCode]==true) then begin testf = false; end;
      if (testf) then begin
        GetDateTurnover(ICSp.ArtCode,ICSp.Variety,customer,"","",ICSp,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate,sum,0);
        tsum = tsum + sum;
        vitemf[ICSp.ArtCode] = true;
      end;
    end;
  end;  
  return;
end;

global
procedure SLEUVATRn(record RcVc RepSpec)
BEGIN
  record CUVc CUr;
  Boolean TrHs,stfound;
  val sum,t,gps,totgp,totsum;
  string 255 frcu,tocu;
  Boolean testf;
  record CYBlock CompYear;
  string 255 tstr;
  Integer rw;

  rw = 1;
  BlockLoad(CompYear);
  frcu = FirstInRange(RepSpec.f1,20);
  tocu = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(5620));
   tstr = USetStr(5625);
   tstr = tstr & ": ";
   tstr = tstr & CompYear.VATNr;
   Header(rw,tstr,1);
   rw = rw + 1;
   tstr = CompYear.Addr0;
   Header(rw,tstr,0);
   HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   tstr = CompYear.Addr1;
   Header(rw,tstr,0);
   HTCusts(frcu,tocu,tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
   tstr = CompYear.Addr2;
   Header(rw,tstr,0);
   HTCustZone(RepSpec.flags[1],RepSpec.flags[2],RepSpec.flags[3],tstr);
   Header(rw,tstr,1);
   rw = rw + 1;
  EndHeader;

  StartFormat(15);
  OutString(0,0,USetStr(5621),false);
  OutString(50,0,USetStr(5622),false);
  OutString(320,0,USetStr(5623),false);
  OutString(480,0,USetStr(5624),true);
  EndFormat;
  Gray_Divider(0,1);
  CUr.Code = frcu;
  TrHs = true;
  while (LoopMain(CUr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(tocu)) then begin
        if (CUr.Code>tocu) then begin
          TrHs = false;
        end;
      end;    
    end;
    if (TrHs) then begin
      testf = true;
      if (testf) then begin
        if (CUr.ExportFlag==0) then begin
          if (RepSpec.flags[1]==0) then begin testf = false; end;
        end;  
        if (CUr.ExportFlag==1 or CUr.ExportFlag==3) then begin
          if (RepSpec.flags[2]==0) then begin testf = false; end;
        end;  
        if (CUr.ExportFlag==2 or CUr.ExportFlag==4) then begin
          if (RepSpec.flags[3]==0) then begin testf = false; end;
        end;  
      end;
      if (CUr.CUType==0) then begin testf = false; end;
      if (testf) then begin
        if (nonblank(RepSpec.Stext)) then begin
          if (SetInSet(RepSpec.Stext,CUr.Classification)==false) then begin
            testf = false;
          end;  
        end;
      end;
      if (testf) then begin
        if (RepSpec.flags[5]==0 and RepSpec.flags[6]==0 and RepSpec.flags[7]==0 and RepSpec.flags[8]==0) then begin        //per item type calculations
          sum = GetTurnover(CUr,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate);
        end else begin
          GetSalesItemType(CUr.Code,RepSpec,sum);
        end;
        if (RepSpec.flags[4]==1) then begin
          if (sum==0) then begin
            goto L12;
          end;
        end;    
        StartFormat(15);
        OutString(0,0,CUr.CountryCode,false);
        OutString(50,"DblCUVc",CUr.Code,false);
        OutString(130,0,CUr.Name,false);
        OutString(320,0,CUr.VATNr,false);
        OutVal(480,0,sum,M4Val,true);
        EndFormat;
        totsum = totsum + sum;
L12:;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutVal(480,0,totsum,M4Val,true);
  EndFormat;
  EndJob;
  RETURN;
END;
