#ifdef HAL

external procedure GetEmplName(string,var string);


//----------------------------------------------
global
procedure WLLatRn(var record RcVc RepSpec)
BEGIN
  record WayListVc WayListr;
  row WayListVc WayListrw;
  Boolean TrHs;
  Boolean testf;
  LongInt sn;
  string 255 tstr,empname;
  Integer i,ar,height;
  integer r2,r3,r4,r5,r6,r7,r8,r9,r10;
  record WLCarVc WLCarr;
  

  sn=RepSpec.f1;
  height=15;

  r2=20;
  r3=30;
  r4=80;
  r5=90;
  r6=300;
  r7=310;
  r8=360;
  r9=370; 
  r10=420;
  
    
  StartReportNoHeaderJob("Way List");
  
  WayListr.SerNr=sn;
  if (ReadFirstMain(WayListr,1,true)) then begin
      WLCarr.CarCode=WayListr.CarCode;
      testf=ReadFirstMain(WLCarr,1,true);    
      
      tstr="WAY LIST Nr.  " & RepSpec.f1 & "  from " & WayListr.TransDate;
      StartFormat(height);OutString(150,0,tstr,false);endformat;
      tstr="Period from " & WayListr.SDate & " to " & WayListr.EDate;   
      StartFormat(height);OutString(0,0,tstr,false);endformat;   
      tstr="Model: " & WLCarr.CarName & "          Number: "& WLCarr.CarNumber; 
      StartFormat(height); OutString(0,0,tstr,false); endformat;    
      GetEmplName(WayListr.Driver,empname);
      tstr="Driver: " & empname; 
      GetEmplName(WayListr.UsedBy,empname);
      tstr=tstr & "          Used by: " & empname; 
      StartFormat(height);OutString(0,0,tstr,false);endformat;   
      tstr="Petroil: " & WayListr.PetroilCode & "          Normal, l/100 km: "  & WayListr.NormAmount ; 
      tstr=tstr & "          Real, l/100 km: " & WayListr.RealAmount ; 
      StartFormat(height);OutString(0,0,tstr,false);endformat;  
      tstr="km, begin: " & WayListr.Stkm & "          km, end: " & WayListr.Endkm ; 
      StartFormat(height);OutString(0,0,tstr,false);endformat;  
      tstr="Purppose: " & WayListr.Purpose ; 
      StartFormat(height);OutString(0,0,tstr,false);endformat;  
      tstr="Comment: " & WayListr.Comment ; 
      StartFormat(height);OutString(0,0,tstr,false);endformat;  
      
      
          StartFormat(20);
          EndFormat;   
          Black_Divider(0,1);
          MatRowGet(WayListr,i,WayListrw);
          StartFormat(Height);
          OutString(0,0,"Nr",false);
          OutString(r2,0,"|",false);
          OutString(r3,0,"Date",false);
          OutString(r4,0,"|",false);
          OutString(r5,0,"Comment",false);
          OutString(r6,0,"|",false);
          OutString(r7,0,"From",false);
          OutString(r8,0,"|",false);
          OutString(r9,0,"To",false);
          OutString(r10,0,"|",false);
          OutString(1,0,"Distance",true);
          EndFormat;
          Black_Divider(0,1);
      
      ar=MatRowCnt(WayListr);
      for (i=0;i<ar;i=i+1) begin
          MatRowGet(WayListr,i,WayListrw);
          StartFormat(Height);
          OutString(0,0,i+1,false);
          OutString(r2,0,"|",false);
          OutDate(r3,0,WayListrw.WDate,false);
          OutString(r4,0,"|",false);
          OutString(r5,0,WayListrw.WComment,false);
          OutString(r6,0,"|",false);
          OutString(r7,0,WayListrw.WSTime,false);
          OutString(r8,0,"|",false);
          OutString(r9,0,WayListrw.WETime,false);
          OutString(r10,0,"|",false);
          OutString(1,0,WayListrw.WDistVal,true);
          EndFormat;
          Black_Divider(0,1);
          
       
      end;
       
       
          StartFormat(Height);
          OutString(r9,0,"Total, km:",false);
          OutString(1,0,WayListr.Totalkm,true);
          EndFormat;
          StartFormat(Height);
          OutString(r9,0,"Total, l:",false);
          OutString(1,0,WayListr.Totall,true);
          EndFormat;
  
          StartFormat(20);
          EndFormat;
          StartFormat(15);
          OutString(100,0,"Signature________________________________",false);
  
          EndFormat;    
  
      
  end else begin
      StartFormat(height);
      OutString(0,0,"No record with number: "&RepSpec.f1,false);
      endformat;    
  end;
  
  
  EndJob;
  return;
END;


#endif
