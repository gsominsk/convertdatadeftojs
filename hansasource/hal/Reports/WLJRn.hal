external procedure GetEmplName(string,var string);
external procedure HT2Per(Date, Date , var string);
external procedure HTOKF(Integer,Integer, var string);


//----------------------------------------------
global
procedure WLJRn(var record RcVc RepSpec)
BEGIN
  record WayListVc WayListr;
  row WayListVc WayListrw;
  Boolean TrHs,testf;
  LongInt fn,ln;
  string 255 tstr,empname;
  Integer i,ar,rw;
  record WLCarVc WLCarr;
  date sdate,edate;
  
  sdate=RepSpec.sStartDate;
  edate=RepSpec.sEndDate;
  fn=FirstInRange(RepSpec.f1,10);
  ln=LastInRange(RepSpec.f1,10);
     
  StartReportJob(USetStr(10100));
  rw=1;
  HT2Per(sdate,edate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr=UsetStr(10108) & ": " & RepSpec.f1; 
  	Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr=UsetStr(10103) & ": " & RepSpec.f2; 
  	Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f3)) then begin
    tstr=UsetStr(10109) & ": " & RepSpec.f3; 
  	Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTOKF(RepSpec.flags[2],RepSpec.flags[1],tstr);
  Header(rw,tstr,1);
  EndHeader;
  
  SetRepCol(2,40);
  SetRepCol(7,100);  
  SetRepCol(3,140); 
  SetRepCol(6,190);    
  SetRepCol(4,400);
  SetRepCol(5,440);
  StartFormat(15);
	OutString(0,0,USetStr(10101),false);	
	OutString(2,0,USetStr(10102),false);
	OutString(7,0,USetStr(10109),false);	
	OutString(3,0,USetStr(10103),false);	
	OutString(6,0,USetStr(10104),false);	
	OutString(4,0,USetStr(10105),true);	
	OutString(5,0,USetStr(10106),true);	
	OutString(1,0,USetStr(10107),true);	
	EndFormat;
	Black_Divider(0,1);
  
  WayListr.TransDate=sdate;
  TrHs=true;
  
  While (LoopKey("TransDate",WayListr,1,true)) begin
  	testf=true;
  	if (WayListr.TransDate>edate) then begin
  		TrHs=false;testf=false;
  	end;
  	if (nonblank(RepSpec.f1)) then begin
  		if (WayListr.SerNr<fn) or (WayListr.SerNr>ln) then begin
  			testf=false;
  		end; 
  	end;
  	if (nonblank(RepSpec.f2)) and (RepSpec.f2<>WayListr.Driver) then begin
  	  testf=false; 
  	end;
  	if (nonblank(RepSpec.f3)) and (RepSpec.f3<>WayListr.CarCode) then begin
  	  testf=false; 
  	end;
  	if (WayListr.OKFlag==0 and  RepSpec.flags[2]==0) or
       (WayListr.OKFlag==1 and  RepSpec.flags[1]==0) then begin
  	  testf=false;
  	end;  
  	
  	if (testf) then begin
  	  StartFormat(15);
  	  OutString(0,"DblWLVc",WayListr.SerNr,false);	
  	  OutString(2,0,WayListr.TransDate,false);	
  	  OutString(7,0,WayListr.CarCode,false);	
  	  OutString(3,0,WayListr.Driver,false);	
  	  GetEmplName(WayListr.Driver,empname);
  	  OutString(6,0,empname,false);	
  	  OutString(4,0,WayListr.Totalkm,true);	
  	  OutString(5,0,WayListr.Totall,true);	
  	  OutString(1,0,WayListr.TotalCost,true);	
  	  EndFormat;
  	  if (RepSpec.ArtMode==1) then begin
  	  	ar=matrowcnt(WayListr);
  	  	for (i=0;i<ar;i=i+1) begin
  	  		MatRowGet(WayListr,i,WayListrw);
  	  		StartFormat(15);
					OutString(2,0,WayListrw.WDate,false);	
					OutString(3,0,WayListrw.WDistCode,false);	
					OutString(6,0,WayListrw.WComment,false);	
					OutString(4,0,WayListrw.WDistVal,true);	
					OutString(1,"DblCUVc",WayListrw.CUCode,true);		
  	  		EndFormat;
  	  	end;
  	  	Gray_Divider(0,1);
  	  end;
  	end;
     
  end;
  
  
  EndJob;
  return;
END;
