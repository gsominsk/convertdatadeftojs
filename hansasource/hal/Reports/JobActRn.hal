external function string 255 GetObservTypeName(Integer);
external function Boolean CheckIfPrintObs(Date,Date,record GuestObserVc);

global
procedure PrintActualObservation(record GuestObserVc GuestObserr)
begin
  StartFormat(15);
  OutString(0,0,GetObservTypeName(GuestObserr.Type),false);
  OutString(100,0,GuestObserr.Person,false);
  OutLongInt(140,"DblGuestObserVc",GuestObserr.SerNr,false);
  OutString(180,0,GuestObserr.OBType,false);
  OutString(240,0,GuestObserr.Comment,false);
  OutDate(430,0,GuestObserr.TransDate,true);
  OutString(1,0,Left(GuestObserr.TransTime,5),true);
  EndFormat;
  return;
end;

// I made this function just to be able to use the below function wihout special formatting rules
// If this returns true, you know it will print something
global
function Boolean ObservationExists(record JobVc Jobr,Date frdat,Date todat,Date thedat,string guestcode,string frtyp,string totyp)
begin
  Boolean res;
  record GuestObserVc GuestObserr;
  Boolean Cont,testf;
  Boolean foundf;
  row JobVc Jobrw;
  Integer rwcnt,i;
  
  res = false;
  rwcnt = MatRowCnt(Jobr);
  for(i=0;i<rwcnt;i=i+1) begin
    MatrowGet(Jobr,i,Jobrw);
    foundf = true;
    if (nonblank(guestcode)) then begin
      if (guestcode!=Jobrw.GuestCode) then begin
        foundf = false;
      end;
    end;
    if (foundf) then begin
      ResetLoop(GuestObserr);
      Cont = true;
      GuestObserr.Guest = Jobrw.GuestCode;
      while LoopKey("Guest",GuestObserr,1,Cont) begin
        if (GuestObserr.Guest <> Jobrw.GuestCode) then begin
          Cont = false;
        end;
        testf = Cont;
        if (CheckIfPrintObs(frdat,todat,GuestObserr)==false) then begin
          testf = false;
        end;
        if (nonblank(frtyp)) then begin
          if (GuestObserr.OBType<frtyp) then begin testf = false; end;
        end;
        if (nonblank(totyp)) then begin
          if (GuestObserr.OBType>totyp) then begin testf = false; end;
        end;
        if (nonblankdate(thedat)) then begin
          if ((GuestObserr.Type==1) or (GuestObserr.Type==3) or (GuestObserr.Type==5) or (GuestObserr.Type==6)) then begin
            if (GuestObserr.TransDate!=thedat) then begin
              testf = false;
            end;
          end;
        end;
        if (testf) then begin
          res = true;
          goto LObservationExists;
        end;
      end;
    end;
  end;
LObservationExists:;
  ObservationExists = res;
  return;
end;

global
procedure PrintGuestObservation(record JobVc Jobr,Date frdat,Date todat,Date thedat,string guestcode,string frtyp,string totyp)
begin
  record GuestObserVc GuestObserr;
  Boolean Cont,testf;
  Boolean foundf;
  row JobVc Jobrw;
  Integer rwcnt,i;
  Boolean firstf;

  firstf = true;
  rwcnt = MatRowCnt(Jobr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatrowGet(Jobr,i,Jobrw);
    foundf = true;
    if (nonblank(guestcode)) then begin
      if (guestcode!=Jobrw.GuestCode) then begin
        foundf = false;
      end;
    end;
    if (foundf) then begin
      ResetLoop(GuestObserr);
      Cont = true;
      GuestObserr.Guest = Jobrw.GuestCode;
      while LoopKey("Guest",GuestObserr,1,Cont) begin
        if (GuestObserr.Guest <> Jobrw.GuestCode) then begin
          Cont = false;
        end;
        testf = Cont;
        if (CheckIfPrintObs(frdat,todat,GuestObserr)==false) then begin
          testf = false;
        end;
        if (nonblank(frtyp)) then begin
          if (GuestObserr.OBType<frtyp) then begin testf = false; end;
        end;
        if (nonblank(totyp)) then begin
          if (GuestObserr.OBType>totyp) then begin testf = false; end;
        end;
        if (nonblankdate(thedat)) then begin
          if ((GuestObserr.Type==1) or (GuestObserr.Type==3) or (GuestObserr.Type==5) or (GuestObserr.Type==6)) then begin
            if (GuestObserr.TransDate!=thedat) then begin
              testf = false;
            end;
          end;
        end;
        if (testf) then begin
          if (firstf) then begin
            StartFormat(15);
            OutString(0,0,Jobr.ResCode,false);
            EndFormat;
            Gray_Divider(0,1);
            StartFormat(15);
            OutString(0,0,USetStr(10206) & " " & Jobrw.CUName,false);
            EndFormat;
            Gray_Divider(0,1);
            firstf = false;
          end;
          PrintActualObservation(GuestObserr);
        end;
      end;
    end;  
  end;
  if (firstf==false) then begin
    StartFormat(15);
    EndFormat;
  end;
  return;
end;

global
procedure JobActRn(record RcVc RepSpec)
begin
  record JobVc Jobr;
  
  StartReportJob(USetStr(10205));
  EndHeader;
  Jobr.SerNr = RepSpec.long1;
  if (ReadFirstMain(Jobr,1,true)) then begin
    PrintGuestObservation(Jobr,Jobr.TransDate,Jobr.EndDate,CurrentDate,RepSpec.f1,"","");
  end;
  EndJob;
  return;
end;
