procedure GetSender(record EMailQueVc EMailQuer,var string res)
BEGIN
  row EMailQueVc EMailQuerw;
  Integer i,rwcnt;
  
  res = "";
  rwcnt = MatRowCnt(EMailQuer);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(EMailQuer,i,EMailQuerw);
    if (EMailQuerw.RowTyp==1) then begin
      res = EMailQuerw.AddrCode;
      goto LGetSender;      
    end;    
  end;
LGetSender:;
  RETURN;
END;

function Boolean CheckEMailQuer(string mailbox,string user,record EMailQueVc EMailQuer)
BEGIN
  Boolean res;
  row EMailQueVc EMailQuerw;
  Integer i,rwcnt;
  record ConfVc Confr;

  rwcnt = MatRowCnt(EMailQuer);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(EMailQuer,i,EMailQuerw);
    if (nonblank(mailbox)) then begin
      if (EMailQuerw.AddrCode==mailbox) then begin
        res = true;
        goto LCheckEMailQuer;
      end;
    end;
    if (nonblank(user)) then begin
      Confr.AddrName = EMailQuerw.AddrCode;
      if (ReadFirstKey("AddrName",Confr,1,true)) then begin
        if (Confr.AddrCode==user) then begin
          res = true;
          goto LCheckEMailQuer;
        end;
      end;
    end;
  end;
LCheckEMailQuer:;  
  CheckEMailQuer = res;
  RETURN;
END;

global
procedure EMailQueJRn(record RcVc RepSpec)
begin
  record EMailQueVc EMailQuer;//EMailQueView
  Boolean TrHs;
  Boolean testf;
  string 20 keystr;
  LongInt mailcnt;
  Integer rw;
  string 255 tstr;
  
  mailcnt = 0;
  rw = 1;
  StartReportJob(USetStr(11320));
   switch (RepSpec.flags[0]) begin
     case 0: tstr = USetStr(11321);
     case 1: tstr = USetStr(11322);
     case 2: tstr = USetStr(11323);
   end;
   Header(rw,tstr,1);
   rw = rw + 1;   
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(11325),false);
  OutString(60,0,USetStr(11333),false);
  OutString(120,0,USetStr(11326),false);
  OutString(180,0,USetStr(11327),false);
  OutString(240,0,USetStr(11328),false);
  OutString(320,0,USetStr(11329),false);
  OutString(380,0,USetStr(11330),false);
  switch (RepSpec.flags[0]) begin
    case 0: OutString(440,0,USetStr(11331),false);
  end;
  EndFormat;
  switch (RepSpec.flags[0]) begin
    case 0: keystr = "SerNr";    
    case 1: 
      keystr = "Sending";    
      EMailQuer.EMailSent = kEMailQueueSent;
    case 2: 
      keystr = "Sending";
      EMailQuer.EMailSent = kEMailQueueNotSent;
  end;
  Gray_Divider(0,1);
  TrHs = true;        
  while LoopKey(keystr,EMailQuer,1,TrHs) begin
    if (TrHs) then begin
      switch (RepSpec.flags[0]) begin
        case 1: 
          if (EMailQuer.EMailSent==0) then begin
            TrHs = false;
          end;          
        case 2: 
          if (EMailQuer.EMailSent!=0) then begin
            TrHs = false;
          end;          
      end;
      testf = true;
      if (TrHs==false) then begin
        testf = false;
      end;
      if (testf) then begin
        if ((nonblank(RepSpec.f2)) or (nonblank(RepSpec.f1))) then begin
          testf = CheckEMailQuer(RepSpec.f2,RepSpec.f1,EMailQuer);
        end;
      end;
      if (testf) then begin
        StartFormat(15);
        OutLongInt(0,0,EMailQuer.SerNr,false);
        GetSender(EMailQuer,tstr);        
        OutString(60,0,tstr,false);
        OutLongInt(120,0,EMailQuer.OrgSerNr,false);
        OutDate(180,0,EMailQuer.QueDate,false);
        OutString(240,0,EMailQuer.QueTime,false);
        OutDate(320,0,EMailQuer.TransDate,false);
        OutString(380,0,EMailQuer.TransTime,false);
        switch (RepSpec.flags[0]) begin
          case 0:
            switch (EMailQuer.EMailSent) begin
              case 0: tstr = USetStr(11323);
              case 1: tstr = USetStr(11322);
            end;          
            OutString(440,0,tstr,false);           
        end;
        EndFormat;
        mailcnt = mailcnt + 1;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(400,0,USetStr(11332),false);
  OutLongInt(480,0,mailcnt,true);
  EndFormat;
  EndJob;
  return;
end;
