external function Boolean IsCancelState(string);
external Function Val GetCustAccount(LongInt,String,Boolean,Boolean);
external Function Val GetDownGuest(Record JobVc);

global
function boolean JobJourSelect(Record RcVc RepSpec,Record JobVc Jobr,var boolean foundf)
begin
  Boolean Sel;
  String 20 CustCat;
  Record CUVc CUr;
     
  Sel = false;
  CUr.Code = Jobr.Source;
  if readfirstmain(CUr,1,true) then begin 
    CustCat = CUr.CustCat;
  end;  
  if (((RepSpec.flags[0]==0) and (Jobr.RegDate > RepSpec.sEndDate)) or 
      ((RepSpec.flags[0]==1) and (Jobr.TransDate > RepSpec.sEndDate))) then begin
        foundf = false;  
  end else begin
    if ((RepSpec.f1 == Jobr.ResStatus) or blank(RepSpec.f1)) then begin
      if ((RepSpec.f2==Jobr.Source)  or blank(RepSpec.f2)) then begin
        if (blank(RepSpec.f3) or (RepSpec.f3==CustCat)) then begin
          if ((RepSpec.flags[1]==0) or (Jobr.Mother==-1)) then begin 
            if ((RepSpec.flags[2]==1) or (not IsCancelState(Jobr.ResStatus))) then begin  //LO40 
              if ((RepSpec.f4 == Jobr.BookOrigin) or blank(RepSpec.f4)) then begin   //LO40 
                if ((RepSpec.f5 == Jobr.ResUsage) or blank(RepSpec.f5)) then begin   //LO40 
                  if ((RepSpec.f6 == Jobr.PriceList) or blank(RepSpec.f6)) then begin   //LO40 
                    Sel = true;
                  end;
                end;
              end;
            end;
          end;
        end;
      end;
    end;          
  end;   
  JobJourSelect = Sel;   
  return;
end;
 
global
procedure JobJourRn(record RcVc RepSpec)
begin
  Integer i; 
  record JobVc Jobr;
  record CUVc CUr;   
  Boolean TsHr,Skip,tflag;
  String 50 tstr;
  String 20 mykey;
  String 100 HdrStr;
  Val Monto,JobSaldo,DownPaid,tMonto;
   
  StartReportJob(USetStr(9985));
  EndHeader;

  SetRepCol(2,47);
  SetRepCol(3,190);  
  SetRepCol(4,230); 
  SetRepCol(5,310);
  SetRepCol(6,400);
  SetRepCol(7,280);  
  SetRepCol(8,480); 

  StartFormat(15);
  OutString(0,0,USetStr(9986),false); 
  OutString(2,0,USetStr(9991),false); 
  OutString(3,0,USetStr(9992),false); 
  OutString(4,0,USetStr(9991),false); 
  OutString(5,0,USetStr(11157),false); 
  OutString(6,0,USetStr(9993),false); 
  OutString(7,0,USetStr(9984),true);
  OutString(8,0,USetStr(9988),true);
  EndFormat;
  Gray_Divider(0,1);

  if (RepSpec.flags[0]==0) then begin
    Jobr.RegDate = RepSpec.sStartDate;
    mykey = "RegDate";
  end else begin
    Jobr.TransDate = RepSpec.sStartDate;
    mykey = "TransDate";
  end;

  TsHr = true;  
  while (LoopKey(mykey,Jobr,1,TsHr)) begin
   If (JobJourSelect(RepSpec,Jobr,TsHr)) then begin
      StartFormat(15);
      OutString(0,"DblJobVc",Jobr.SerNr,false);
      OutString(2,0,left(Jobr.CUName,22),false);
      OutString(3,0,Jobr.Source,false);
      CUr.Code = Jobr.Source;
      if readfirstmain(CUr,1,true) then begin
        OutString(4,0,Left(CUr.Name,22),false);
      end;
      OutString(7,0,Jobr.BookOrigin,false);
      OutString(5,0,DatetoString(Jobr.TransDate,"DD/MM") & " - " & DatetoString(Jobr.EndDate,"DD/MM"),false);
      tstr = lowercase(Jobr.ResStatus);
      OutString(6,0,tstr,false);
      DownPaid = GetDownGuest(Jobr);
      if (RepSpec.flags[3]==1) then begin tflag = false; end else begin tflag = true; end; //LO40
      Monto    = GetCustAccount(Jobr.SerNr,Jobr.Source,tflag,false); 
    //  OutVal(7,0,DownPaid,M4Val,true);
      OutVal(8,0,Monto,M4Val,true);
      EndFormat;
      tMonto = tMonto + Monto;
    end;  
  end;   
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(9990),false);
  OutVal(8,0,tMonto,M4Val,true);
  EndFormat;
  EndJob;
  return;
end;


