#ifdef HAL

external procedure HTItem(string,var string);
external procedure HTArtGroup(string, var string);
external procedure HTItemClass(string,var string);
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean ItemInItemGroupOrClass(string,string,string);

global
procedure WeighAvRn(record RcVc RepSpec)
begin
  record WeigAvVc war;
  Boolean TrHs;
  string 20 frin,toin;
  Boolean testf;
  integer rw,i;
  string 255 tstr;
  
  frin = FirstInRange(RepSpec.f1,20);
  toin = LastInRange(RepSpec.f1,20);
  StartReportJob(USetStr(9765));     
  rw = 1;
  HTItem(RepSpec.f1,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (HasItemGroups) then begin
    HTArtGroup(RepSpec.f2,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasItemClassification) then begin
    HTItemClass(RepSpec.f3,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  EndHeader;
  StartFormat(15);
   OutString(0,0,USetStr(7588),false);
   OutString(100,0,USetStr(7582),false);
   OutString(1,0,USetStr(7591),true);  
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  war.ArtCode = frin;
  while (LoopMain(war,1,TrHs)) begin
    testf = true;
    if (nonblank(RepSpec.f1)) then begin
      if (war.ArtCode>toin or war.ArtCode<frin) then begin
        TrHs = false;
        testf = false;
      end;
    end; 
    if (testf) then begin
      testf = ItemInItemGroupOrClass(war.ArtCode,RepSpec.f2,RepSpec.f3);
    end;     
    if (TrHs and testf) then begin
      StartFormat(15);
      OutString(0,0,war.ArtCode,false);
      OutString(100,0,war.Location,false);
      OutString(1,0,war.WeighedAvPrice,true);
      EndFormat;
    end;  
  end;
  EndJob;
L99:;
  return;
end;
#endif
