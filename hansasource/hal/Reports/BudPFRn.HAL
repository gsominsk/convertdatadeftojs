#ifdef halexternal Function Boolean FindProjContractSales(string,string,Date,Date,var record SMVc,var val,var val,var val,var val,var val,var val,var val,var val);globalprocedure BudPFollRn(record RcVc RepSpec)begin  record SMVc SMr;  record INVc INr;  record TBIVVc TBr;  record PRVc PRr;  record TBBUVc TBBr;  row TBBUVc TBBrw;  Boolean testf;  Boolean testb;  Boolean firstf;    Boolean found;  Boolean budexist;  String 255 Project;  Boolean res;  String 255 fromproj;  String 255 toproj;  String 255 fromitem;  String 255 toitem;  String 255 tstr;  String 255 PRCode;  String 255 PRName;  String 255 item;  Integer PRTerm;  Integer rw;  Integer budrwcnt,i;  val bud;  val t;  val budv;  val artbudv;  val projbudv;  val totbudv;  val cost;  val artcost;  val projcost;  val totcost;  val inv;  val artinv;  val projinv;  val totinv;  val tb;  val arttb;  val projtb;  val tottb;  val budtb;  val artbudtb;  val projbudtb;  val totbudtb;  val sumtime,sumpurch,summater,sumstock;  val costtime,costpurch,costmater,coststock;  rw = 1;  firstf = false;  testb = true;  budv = 0;  budexist = false;  TBr.TransDate = RepSpec.sStartDate;  fromproj = FirstInRange(RepSpec.f1,20);  toproj = LastInRange(RepSpec.f1,20);  fromitem = FirstInRange(RepSpec.f2,20);  toitem = LastInRange(RepSpec.f2,20);  StartReportJob(USetStr(8980));    rw = rw + 0;    if ((blank(fromproj)) and (blank(toproj))) then begin      tstr = USetStr(3564);    end else begin      tstr = USetStr(1829);      tstr = tstr & fromproj;      if (fromproj<>toproj) then begin        tstr = tstr & " : " & toproj;      end;    end;    Header(rw,tstr,1);    rw = rw + 1;    if ((blank(fromitem)) and (blank(toitem))) then begin      tstr = USetStr(1106);    end else begin      tstr = "Item ";      tstr = tstr & fromitem;      if (fromitem<>toitem) then begin        tstr = tstr & " : " & toitem;      end;    end;    Header(rw,tstr,0);    if (RepSpec.ArtMode==0) then begin      tstr = USetStr(1159);    end;    if (RepSpec.ArtMode==1) then begin      tstr = USetStr(4888);    end;     if (RepSpec.ArtMode==2) then begin      tstr = USetStr(3541);    end;        Header(rw,tstr,1);      EndHeader;  If (RepSpec.ArtMode==0) then begin      StartFormat(15);    OutString(0,0,USetStr(3550),false);      OutString(70,0,USetStr(4022),false);        OutString(220,0,USetStr(6826),true);         OutString(285,0,USetStr(2639),true);            OutString(350,0,USetStr(8891),true);            OutString(415,0,USetStr(4825),true);            OutString(480,0,USetStr(6824) & " " & USetStr(6787),true);            EndFormat;  end;    found = true;  TBr.PRCode = fromproj;  while (LoopKey("PRCode",TBr,1,found)) begin    if (nonblank(RepSpec.f1)) then begin    if (fromproj>TBr.PRCode) then begin       found = false;     end;     if (toproj<TBr.PRCode) then begin     found = false;     end;  end;    testf = true;  if (found) then begin    if (nonblankdate(RepSpec.sStartDate)) then begin        if (RepSpec.sStartDate>TBr.TransDate) then begin      testf = false;    end;      if (RepSpec.sEndDate<TBr.TransDate) then begin      testf = false;    end;    end;    if (nonblank(RepSpec.f2)) then begin      if (fromitem>TBr.ArtCode) then begin      testf = false;    end;    if (toitem<TBr.ArtCode) then begin      testf = false;    end;    end;        If (testf==true) then begin    testf=false;      if ((RepSpec.flags[1]==1) and ((TBr.oVc==1) or (TBr.oVc==5))) then begin        testf = true;      end;      if ((RepSpec.flags[2]==1) and (TBr.oVc==2)) then begin        testf = true;         end;       if ((RepSpec.flags[3]==1) and (TBr.oVc==3)) then begin        testf = true;         end;    end;   end;  if (found==false) then begin      testf = false;  end;             If (testf) then begin      if ((TBr.PRCode<>Project))then begin        if (firstf==true) then begin          if (budexist) then begin            for (i=0; i<budrwcnt; i = i + 1) begin              MatRowGet(TBBr,i,TBBrw);              if (TBBrw.ArtCode<>"ZZZZZZZZZZ") then begin                bud = TBBrw.Sum;                projbudv = projbudv + bud;                totbudv = totbudv + bud;                if(RepSpec.ArtMode<>0) then begin                  StartFormat(15);                     OutString(0,0,TBBrw.ArtCode,false);                    OutString(70,0,TBBrw.Comment,false);                    OutString(220,0,"-",true);                  OutString(285,0,"-",true);                  OutString(350,0,"-",true);                  OutString(415,0,TBBrw.Sum,true);                   OutString(480,0,TBBrw.Sum,true);                   EndFormat;          end;              end;            end;          end;      end;            TBBr.PRCode = TBr.PRCode;      budexist = ReadFirstMain(TBBr,1,true);        if (budexist) then begin          budrwcnt = MatRowCnt(TBBr);        end else begin          budrwcnt = 0;        end;      end;      If (RepSpec.ArtMode==0) then begin      if ((TBr.PRCode<>Project))then begin      if (firstf == true)then begin          projbudtb = projbudv - projcost;       StartFormat(15);           Gray_Divider(0,1);          OutString(0,0,PRr.Code,false);          OutString(70,0,left(PRr.Name,23),false);          OutVal(220,0,projcost,M4Val,true);          OutVal(285,0,projinv,M4Val,true);          OutVal(350,0,projtb,M4Val,true);          OutVal(415,0,projbudv,M4Val,true);          OutVal(480,0,projbudtb,M4Val,true);            Endformat;      projcost = 0;          projinv = 0;          projtb  = 0;          projbudv = 0;        projbudtb = 0;      end;    end;      firstf = true;      Project = TBr.PRCode;              PRr.Code = project;        res = ReadFirstMain(PRr,1,true);      INr.Code = TBr.ArtCode;        res = ReadFirstMain(INr,1,true);       cost = TBr.CostPrice * TBr.Qty;    projcost = projcost + cost;    totcost = totcost + cost;      if (TBr.ArtCode <> item) then begin        testb = true;       end;                         if (budexist) then begin          budv = 0;          for (i=0; i<budrwcnt; i = i + 1) begin            MatRowGet(TBBr,i,TBBrw);            if (TBBrw.ArtCode==TBr.ArtCode) then begin              t = TBBrw.Sum;                  budv = budv + t;        if (testb == true) then begin                if ((TBBrw.Invoiced <> -1) and (RepSpec.flags[5]==1)) then begin              testb = false;                    inv = TBBrw.Sum;                   end;                        end;                              TBBrw.ArtCode = "ZZZZZZZZZZ";               MatRowPut(TBBr,i,TBBrw);            end;          end;      end;    /*    if (testb == true) then begin                    if ((RepSpec.flags[5]==1) and (TBr.Invoice<>-1)) then begin                if (RepSpec.sEndDate>TBr.TransDate) then begin          inv = TBr.Sum;      end;        end;                                    if ((RepSpec.flags[4]==1) and (TBr.Invoice==-1))then begin                 inv = TBr.Sum;          end;        if ((RepSpec.flags[4]==1) and (TBr.Invoice<>-1)) then begin              if (RepSpec.sEndDate<TBr.TransDate))            inv = TBr.Sum;            end;                    end;                                  end;                              LŠser inte deliveries. FunktionerItem types/item groupsItem types/objects*/     if (FindProjContractSales(PRr.Code,item,RepSpec.sStartDate,RepSpec.sEndDate,SMr,sumtime,sumpurch,summater,sumstock,costtime,costpurch,costmater,coststock)) then begin      inv = inv + sumtime + sumpurch + summater + sumstock;    end;    projinv = projinv + inv;    totinv = totinv + inv;          tb = inv - cost;    projtb = projtb + tb;    tottb = tottb + tb;             if (TBr.ArtCode <> item) then begin      bud = budv;      budtb = bud - cost;            projbudv = projbudv + bud;      totbudv = totbudv + bud;        end;        item = TBr.ArtCode;        inv = 0;      end;      If (RepSpec.ArtMode==1) then begin    artbudtb = artbudv - artcost;    if (TBr.ArtCode <> item) then begin      if (firstf) then begin            StartFormat(15);         OutString(0,0,item,false);        OutString(70,0,INr.Name,false);        OutString(220,0,artcost,true);      OutString(285,0,artinv,true);      OutString(350,0,arttb,true);      OutString(415,0,artbudv,true);       OutString(480,0,artbudtb,true);       artcost = 0;        artinv = 0;      arttb  = 0;      artbudv = 0;      artbudtb = 0;            EndFormat;        end;    end;    if ((TBr.PRCode<>Project))then begin      if (firstf == true)then begin        projbudtb = projbudv - projcost;       StartFormat(25);          Gray_Divider(0,1);          OutString(0,0,USetStr(6785),false);          OutVal(220,0,projcost,M4Val,true);          OutVal(285,0,projinv,M4Val,true);          OutVal(350,0,projtb,M4Val,true);          OutVal(415,0,projbudv,M4Val,true);          OutVal(480,0,projbudtb,M4Val,true);            Endformat;      projcost = 0;          projinv = 0;          projtb  = 0;          projbudv = 0;        projbudtb = 0;      end;            Project = TBr.PRCode;                PRr.Code = project;          res = ReadFirstMain(PRr,1,true);                      Gray_divider(0,1);          StartFormat(15);          OutString(0,0,USetStr(6821) & ":",false);          OutString(70,0,TBr.PRCode,false);          OutString(160,0,left(PRr.Name,23),false);          OutString(0,0,USetStr(7225) & ":",false);          OutString(70,0,PRr.CustCode,false);          OutString(160,0,PRr.CustName,false);          OutString(0,0,USetStr(4863) & ":",false);          OutString(70,0,PRr.Leader,false);          OutString(160,0,PRr.LeaderName,false);          OutString(0,0,USetStr(5332) & ":",false);          OutString(70,0,PRr.PRClass,false);              StartFormat(20);          OutString(0,0,USetStr(5386),false);            OutString(70,0,USetStr(4022),false);              OutString(220,0,USetStr(6826),true);               OutString(285,0,USetStr(6802),true);                  OutString(350,0,USetStr(6787),true);                  OutString(415,0,USetStr(6824),true);                  OutString(480,0,USetStr(6824) & " " & USetStr(6787),true);         EndFormat;        firstf = true;    end;        INr.Code = TBr.ArtCode;        res = ReadFirstMain(INr,1,true);       if (TBr.ArtCode <> item) then begin        testb = true;       end;                 if (budexist) then begin          budv = 0;          for (i=0; i<budrwcnt; i = i + 1) begin            MatRowGet(TBBr,i,TBBrw);            if (TBBrw.ArtCode==TBr.ArtCode) then begin              t = TBBrw.Sum;                  budv = budv + t;              if (testb == true) then begin                if ((TBBrw.Invoiced <> -1) and (RepSpec.flags[5]==1)) then begin              testb = false;                    inv = TBBrw.Sum;                   end;                        end;                              TBBrw.ArtCode = "ZZZZZZZZZZ"; // Högst osannoligt att dom har en artikel som heter så              MatRowPut(TBBr,i,TBBrw);            end;          end;      end;          cost = TBr.CostPrice * TBr.Qty;      artcost = artcost + cost;      projcost = projcost + cost;      totcost = totcost + cost;        if (testb == true) then begin                       if ((RepSpec.flags[5]==1) and (TBr.Invoice<>-1)) then begin              inv = TBr.Sum;                               end;                                     if ((RepSpec.flags[4]==1) and (TBr.Invoice==-1))then begin                 inv = TBr.Sum;                                end;                                     end;      if (FindProjContractSales(PRr.Code,item,RepSpec.sStartDate,RepSpec.sEndDate,SMr,sumtime,sumpurch,summater,sumstock,costtime,costpurch,costmater,coststock)) then begin        inv = inv + sumtime + sumpurch + summater + sumstock;      end;      artinv = artinv + inv;      projinv = projinv + inv;      totinv = totinv + inv;            tb = inv - cost;      arttb = arttb + tb;      projtb = projtb + tb;      tottb = tottb + tb;              if (TBr.ArtCode <> item) then begin        inv = 0;          bud = budv;          budtb = bud - cost;              artbudv = artbudv + budv;        projbudv = projbudv + bud;          totbudv = totbudv + bud;          end;          item = TBr.ArtCode;      Project = TBr.PRCode;        end;    If (RepSpec.ArtMode==2) then begin    if ((TBr.PRCode<>Project))then begin          if (firstf == true)then begin          projbudtb = projbudv - projcost;       StartFormat(25);           Gray_Divider(0,1);                     OutString(0,0,USetStr(6785),false);          OutVal(220,0,projcost,M4Val,true);          OutVal(285,0,projinv,M4Val,true);          OutVal(350,0,projtb,M4Val,true);          OutVal(415,0,projbudv,M4Val,true);          OutVal(480,0,projbudtb,M4Val,true);            Endformat;      projcost = 0;          projinv = 0;          projtb  = 0;          projbudv = 0;        projbudtb = 0;      end;            Project = TBr.PRCode;                PRr.Code = project;          res = ReadFirstMain(PRr,1,true);          Gray_divider(0,1);          StartFormat(15);          OutString(0,0,USetStr(4822),false);          OutString(70,0,TBr.PRCode,false);          OutString(160,0,left(PRr.Name,23),false);          OutString(0,0,USetStr(4823),false);          OutString(70,0,PRr.CustCode,false);          OutString(160,0,PRr.CustName,false);          OutString(0,0,USetStr(4863),false);          OutString(70,0,PRr.Leader,false);          OutString(160,0,PRr.LeaderName,false);          OutString(0,0,USetStr(4870),false);          OutString(70,0,PRr.PRClass,false);              EndFormat;          StartFormat(20);          OutString(0,0,USetStr(4884),false);            OutString(70,0,USetStr(4886),false);              OutString(220,0,USetStr(6826),true);               OutString(285,0,USetStr(6802),true);                  OutString(350,0,USetStr(6787),true);                  OutString(415,0,USetStr(6824),true);                  OutString(480,0,USetStr(6824) & " " & USetStr(6787),true);                 EndFormat;        firstf = true;    end;        INr.Code = TBr.ArtCode;        res = ReadFirstMain(INr,1,true);       cost = TBr.CostPrice * TBr.Qty;    projcost = projcost + cost;    totcost = totcost + cost;    if (TBr.ArtCode <> item) then begin        testb = true;       end;                     if (budexist) then begin          budv = 0;          for (i=0; i<budrwcnt; i = i + 1) begin            MatRowGet(TBBr,i,TBBrw);            if (TBBrw.ArtCode==TBr.ArtCode) then begin              t = TBBrw.Sum;                  budv = budv + t;        if (testb == true) then begin                if ((TBBrw.Invoiced <> -1) and (RepSpec.flags[5]==1)) then begin                testb = false;                    inv = TBBrw.Sum;                   end;                        end;                              TBBrw.ArtCode = "ZZZZZZZZZZ"; // Högst osannoligt att dom har en artikel som heter så              MatRowPut(TBBr,i,TBBrw);            end;          end;      end;        if (testb == true) then begin               if ((RepSpec.flags[5]==1) and (TBr.Invoice<>-1)) then begin          inv = TBr.Sum;                          end;                                 if ((RepSpec.flags[4]==1) and (TBr.Invoice==-1))then begin          inv = TBr.Sum;                             end;                            end;                             if (FindProjContractSales(PRr.Code,item,RepSpec.sStartDate,RepSpec.sEndDate,SMr,sumtime,sumpurch,summater,sumstock,costtime,costpurch,costmater,coststock)) then begin      inv = inv + sumtime + sumpurch + summater + sumstock;    end;    projinv = projinv + inv;    totinv = totinv + inv;          tb = inv - cost;    projtb = projtb + tb;    tottb = tottb + tb;         StartFormat(15);       OutString(0,0,TBr.ArtCode,false);      OutString(70,0,INr.Name,false);      OutString(220,0,cost,true);    OutString(285,0,inv,true);    OutString(350,0,tb,true);    if (TBr.ArtCode <> item) then begin        bud = budv;      budtb = bud - cost;          projbudv = projbudv + bud;      totbudv = totbudv + bud;          OutString(415,0,budv,true);       OutString(480,0,budtb,true);     end;    EndFormat;          item = TBr.ArtCode;      Project = TBr.PRCode;      cost = 0;      inv = 0;      tb  = 0;      budv = 0;    budtb = 0;    end;  end;       end;        If (RepSpec.ArtMode==0) then begin  projbudtb = projbudv - projcost;     if (firstf==true) then begin      if (budexist) then begin        for (i=0; i<budrwcnt; i = i + 1) begin          MatRowGet(TBBr,i,TBBrw);          if (TBBrw.ArtCode<>"ZZZZZZZZZZ") then begin            bud = TBBrw.Sum;            projbudv = projbudv + bud;            totbudv = totbudv + bud;          end;        end;      end;    end;         projbudtb = projbudv - projcost;  StartFormat(15);  Gray_Divider(0,1);  OutString(0,0,PRr.Code,false);  OutString(70,0,left(PRr.Name,23),false);  OutVal(220,0,projcost,M4Val,true);  OutVal(285,0,projinv,M4Val,true);  OutVal(350,0,projtb,M4Val,true);  OutVal(415,0,projbudv,M4Val,true);  OutVal(480,0,projbudtb,M4Val,true);    Endformat;  projcost = 0;    projinv = 0;  projtb  = 0;  projbudv = 0;  projbudtb = 0;  end;  If (RepSpec.ArtMode==1) then begin  artbudtb = artbudv - artcost;  StartFormat(15);     OutString(0,0,item,false);    OutString(70,0,INr.Name,false);    OutString(220,0,artcost,true);  OutString(285,0,artinv,true);  OutString(350,0,arttb,true);  OutString(415,0,artbudv,true);   OutString(480,0,artbudtb,true);   artcost = 0;    artinv = 0;  arttb  = 0;  artbudv = 0;  artbudtb = 0;        EndFormat;                if (firstf==true) then begin      if (budexist) then begin        for (i=0; i<budrwcnt; i = i + 1) begin          MatRowGet(TBBr,i,TBBrw);          if (TBBrw.ArtCode<>"ZZZZZZZZZZ") then begin            StartFormat(15);               OutString(0,0,TBBrw.ArtCode,false);              OutString(70,0,TBBrw.Comment,false);              OutString(220,0,"-",true);            OutString(285,0,"-",true);            OutString(350,0,"-",true);            OutString(415,0,TBBrw.Sum,true);             OutString(480,0,TBBrw.Sum,true);             EndFormat;              bud = TBBrw.Sum;            projbudv = projbudv + bud;            totbudv = totbudv + bud;          end;        end;      end;    end;    projbudtb = projbudv - projcost;   StartFormat(25);  Gray_Divider(0,1);  OutString(0,0,USetStr(6785),false);  OutVal(220,0,projcost,M4Val,true);  OutVal(285,0,projinv,M4Val,true);  OutVal(350,0,projtb,M4Val,true);  OutVal(415,0,projbudv,M4Val,true);  OutVal(480,0,projbudtb,M4Val,true);    Endformat;  projcost = 0;    projinv = 0;  projtb  = 0;  projbudv = 0;  projbudtb = 0;  end;  If (RepSpec.ArtMode==2) then begin  projbudtb = projbudv - projcost;     if (firstf==true) then begin      if (budexist) then begin        for (i=0; i<budrwcnt; i = i + 1) begin          MatRowGet(TBBr,i,TBBrw);          if (TBBrw.ArtCode<>"ZZZZZZZZZZ") then begin            StartFormat(15);               OutString(0,0,TBBrw.ArtCode,false);              OutString(70,0,TBBrw.Comment,false);              OutString(220,0,"-",true);            OutString(285,0,"-",true);            OutString(350,0,"-",true);            OutString(415,0,TBBrw.Sum,true);             OutString(480,0,TBBrw.Sum,true);             EndFormat;              bud = TBBrw.Sum;            projbudv = projbudv + bud;            totbudv = totbudv + bud;            end;          end;        end;      end;      projbudtb = projbudv - projcost;     StartFormat(25);    Gray_Divider(0,1);    OutString(0,0,USetStr(6785),false);    OutVal(220,0,projcost,M4Val,true);    OutVal(285,0,projinv,M4Val,true);    OutVal(350,0,projtb,M4Val,true);    OutVal(415,0,projbudv,M4Val,true);    OutVal(480,0,projbudtb,M4Val,true);      Endformat;    projcost = 0;      projinv = 0;    projtb  = 0;    projbudv = 0;    projbudtb = 0;    end;    totbudtb = totbudv - totcost;               StartFormat(15);    Gray_Divider(0,1);  OutString(0,0,USetStr(3560),false);  OutVal(220,0,totcost,M4Val,true);  OutVal(285,0,totinv,M4Val,true);  OutVal(350,0,tottb,M4Val,true);  OutVal(415,0,totbudv,M4Val,true);  OutVal(480,0,totbudtb,M4Val,true);    Endformat;  EndJob;  return;end;#endif