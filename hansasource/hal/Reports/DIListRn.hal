global
procedure DIListRn(record RcVc RepSpec)
begin
  record DIVc DIr;
  record CTypeVc CTyper;
  Boolean TrHs,testf,firstf;
  string 20 frtype,totype;
  string 60 ckey;
  string 20 curgr;
  String 255 tstr;
  Integer rw;

  frtype = FirstInRange(RepSpec.f1,5);
  totype = LastInRange(RepSpec.f1,5);
  curgr = "";
  firstf = true;

  StartReportJob(USetStr(25550));
  rw = 1;
  if (RepSpec.flags[2]==0) then begin
   tstr = USetStr(25556);
  end;
  if (RepSpec.flags[2]==1) then begin
   tstr = USetStr(25557);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.f1<>"") then begin
   tstr = USetStr(25558);
   tstr = tstr & ": " & RepSpec.f1;
   Header(rw,tstr,1);
   rw = rw + 1;
  end;
  EndHeader;
  
  SetRepCol(2,80);
  SetRepCol(3,200);
  SetRepCol(4,260);
  SetRepCol(5,330);
  SetRepCol(6,20);
  SetRepCol(7,90);
  
  if (RepSpec.flags[2]==0) then begin
    StartFormat(15);
    OutString(0,0,USetStr(25551),false);
    OutString(2,0,USetStr(25552),false);
    OutString(4,0,USetStr(25553),false);
    OutString(5,0,USetStr(25554),false);
    EndFormat;
  end;
  if (RepSpec.flags[2]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(25553),false);
    OutString(2,0,USetStr(25554),false);
    EndFormat;
    StartFormat(15);
    OutString(6,0,USetStr(25551),false);
    OutString(7,0,USetStr(25552),false);
    OutString(4,0,USetStr(25555),false);
    EndFormat;
  end;
  Gray_Divider(0,1);

  if (RepSpec.flags[2]==0) then begin
    DIr.Code = "";
    ckey = "Code";
  end;
  if (RepSpec.flags[2]==1) then begin
    DIr.CType = frtype;
    ckey = "CType";
  end;
  TrHs = true;
  while (LoopKey(ckey,DIr,1,TrHs)) begin
    TrHs = true;
    if (RepSpec.flags[2]==1) then begin
      if (nonblank(totype)) then begin
        if (DIr.CType>totype) then begin
          TrHs = false;
        end;
      end;
    end;
    testf = true;
    if (TrHs==false) then begin
      testf = false;
    end;
    if (testf) then begin
      if (nonblank(frtype)) then begin
        if (DIr.CType<frtype) then begin
          testf = false;
        end;
      end;
      if (nonblank(totype)) then begin
        if (DIr.CType>totype) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      if (RepSpec.flags[2]==0) then begin
        StartFormat(15);
        OutString(0,0,DIr.Code,false);
        OutString(2,0,DIr.Name,false);
        OutString(4,0,DIr.CType,false);
        CTyper.Code = DIr.CType;
        if (ReadFirstMain(CTyper,1,true)) then begin
          OutString(5,0,CTyper.Comment,false);
        end;
        EndFormat;
      end;
      if (RepSpec.flags[2]==1) then begin
        if (curgr<>DIr.CType) then begin
          if (firstf==false) then begin
            StartFormat(15);
            EndFormat;
          end;
          firstf = false;
          Gray_Divider(0,1);
          StartFormat(15);
          OutString(0,0,DIr.CType,false);
          CTyper.Code = DIr.CType;
          if (ReadFirstMain(CTyper,1,true)) then begin
            OutString(2,0,CTyper.Comment,false);
          end;
          EndFormat;
          Gray_Divider(0,1);
          curgr = DIr.CType;
        end;
        StartFormat(15);
        OutString(6,0,DIr.Code,false);
        OutString(7,0,DIr.Name,false);
        OutString(4,0,DIr.DispGroups,false);
        EndFormat;
      end;
    end;
  end;
  EndJob;
  return;
end;
