procedure CombineArrays(array string usercode,Integer cnt,var array string usersort,var Integer sortcnt)
begin
  Integer i,j;
  Boolean usrfndf;

  for (i=0;i<cnt;i=i+1) begin
    usrfndf = false;
    for (j=0;j<sortcnt;j=j+1) begin
      if (usercode[i]==usersort[j]) then begin
        usrfndf = true;
      end;
    end;
    if (usrfndf==false) then begin
      usersort[sortcnt] = usercode[i];
      sortcnt = sortcnt + 1;
    end;
  end;
  return;
end;

procedure PrintAllUsersInfo(record CompaniesBlock CompaniesRec,array string usercode,array string username,array LongInt activities,array string company,Integer cnt)
begin
  row CompaniesBlock comprw;
  Integer i,j,k,rwcnt,sortcnt;
  array string 20 usersort;
  Boolean firstf;

  StartFormat(15)
  OutString(0,0,USetStr(13238),false);
  EndFormat;
  Black_Divider(0,1);
  StartFormat(15)
  OutString(0,0,USetStr(13201),false);
  OutString(2,0,USetStr(13202),false);
  OutString(3,0,USetStr(30291),false);
  OutString(1,0,USetStr(30292),true);
  EndFormat;
  Gray_Divider(0,1);
  rwcnt = MatRowCnt(CompaniesRec);
  CombineArrays(usercode,cnt,usersort,sortcnt);
  for (i=0;i<sortcnt;i=i+1) begin
    firstf = true;
    for (j=0;j<cnt;j=j+1) begin
      if (usersort[i]==usercode[j]) then begin
//        if (firstf) then begin
          StartFormat(15)
          OutString(0,0,usercode[j],false);
          OutString(2,0,username[j],false);
          OutString(3,0,company[j],false);
          for (k=0;k<rwcnt;k=k+1) begin
            MatRowGet(CompaniesRec,k,comprw);
            if (comprw.CompCode==company[j]) then begin
//              OutString(3,0,comprw.CompCode,false);
              OutString(4,0,comprw.CompName,false);
              OutString(5,0,comprw.ShortName,false);
            end;
          end;
          OutString(1,0,activities[j],true);
          EndFormat;
          firstf = false;
//        end;
      end;
    end;
  end;
  return;
end;

global
procedure ActUserCompRn(record RcVc RepSpec)
begin
  record UserVc Userr;
  Boolean foundf,testf;
  Integer i,rwcnt;
  Integer compnr,oldcomp;
  Array string 20 usercode;
  Array string 60 username;
  Array LongInt activities;
  Array string 5  company;
  Integer cnt;
  record CompaniesBlock CompaniesRec;
  row CompaniesBlock comprw;
  LongInt comps;

  StartReportJob(USetStr(30290));
  EndHeader;
  SetRepCol(2,80);
  SetRepCol(3,220);
  SetRepCol(4,260);
  SetRepCol(5,360);
// To create the Array of information
  cnt = 0;
  oldcomp = CurrentCompany;
  BlockLoad(CompaniesRec);
  rwcnt = MatRowCnt(CompaniesRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CompaniesRec,i,comprw);
    if (SetCompany(i+1,false)) then begin
      ResetLoop(Userr);
      Userr.Code = RepSpec.f1;
      foundf = true;
      while (LoopMain(Userr,1,foundf)) begin
        if (nonblank(RepSpec.f1)) then begin
          if (Userr.Code!=RepSpec.f1) then begin
            foundf = false;
          end;
        end;
        testf = true;
        if (foundf==false) then begin
          testf = false;
        end;
        if (Userr.Closed!=0) then begin
          testf = false;
        end;
        if (testf) then begin
          comps = RecordsInIndex("ActVc","UserMain:" & Userr.Code);
          if (comps>0) then begin
            usercode[cnt] = Userr.Code;
            username[cnt] = Userr.Name;
            company[cnt] = comprw.CompCode;
            activities[cnt] = comps;
            cnt = cnt + 1;
          end;
        end;
      end;
    end;
  end;
  ResetCompany(oldcomp);
  PrintAllUsersInfo(CompaniesRec,usercode,username,activities,company,cnt);
  EndJob;
  return;
end;
