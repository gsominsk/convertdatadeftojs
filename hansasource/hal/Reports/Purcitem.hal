external procedure HTSuppGroup(string,var string);
external procedure HTVendClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external procedure HTLocations(string, string, var string);
external procedure HTArtSel(string, string, var string);
external procedure HTItemClass(string,var string);
external procedure HTVends(string, string, var string);
external procedure HTSort1(integer, var string);
external function Boolean SetInSet2(string,string);

global
procedure PurPriceRn(record RcVc RepSpec)
begin
  record PIVc PIr;
  record INVc INr;
  Boolean TrHs;
  String 50 fromart;
  String 50 toart;
  String 20 tove;
  String 20 frve;
  String 20 ckey;
  String 5   tkn;
  String 255 tstr;
  Integer rw;
  Boolean testf,printcurf;
  val price;
  Integer keys;

  rw = 1;
  fromart = FirstInRange(RepSpec.f1,50);
  toart =  LastInRange(RepSpec.f1,50);
  frve = FirstInRange(RepSpec.f2,20);
  tove = LastInRange(RepSpec.f2,20);

  StartReportJob(USetStr(2320));
  HTArtSel(RepSpec.f1,RepSpec.f3,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTItemClass(RepSpec.f4,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTVends(frve,tove,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTSuppGroup(RepSpec.f9,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  HTVendClass(RepSpec.f10,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end; 
  if (RepSpec.flags[2]==2) then begin
    tstr = USetStr(1192);
  end else begin
    HTSort1(RepSpec.flags[2],tstr);
  end;
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.FirstAcc)) then begin
    HTLocations(RepSpec.FirstAcc,RepSpec.FirstAcc,tstr);
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;

  SetRepCol(2,150);
  SetRepCol(3,268);
  SetRepCol(4,400);
  SetRepCol(5,460);
  SetRepCol(6,465);
  StartFormat(15);
  OutString(0,0,USetStr(2325),false);         //Item No
  OutString(70,0,USetStr(17623),false);       //Supplier Item
  OutString(2,0,USetStr(5010),false);         //Location
  OutString(190,0,USetStr(2326),false);       //Name
  OutString(320,0,USetStr(6662),false);       //Supplier
  OutString(4,0,USetStr(6663),false);         //Default
  if (RepSpec.flags[3]==0) then begin
    OutString(5,0,USetStr(5013),true);
  end else begin    
    OutString(5,0,USetStr(5135),true);
  end;
  EndFormat;

  if (RepSpec.flags[2]==0) then begin
    PIr.ItemCode = fromart;
    PIr.Location = RepSpec.FirstAcc;
    PIr.VECode = "";
    PIr.VEItemCode = "";
    ckey = "MainKey";
    keys = 2;
  end;
  if (RepSpec.flags[2]==2) then begin
    PIr.VECode = frve;
    PIr.ItemCode = "";
    PIr.Location = "";
    PIr.VEItemCode = "";
    ckey = "Vendor";
    keys = 1;
  end;
  Gray_Divider(0,1);
  TrHs = true;

  while (LoopKey(ckey,PIr,keys,TrHs)) begin
    testf = false;
    if (TrHs) then begin
      testf = true;
    end;
    if (RepSpec.flags[2]==0) then begin
      if (TrHs) then begin
        if (nonblank(toart)) then begin
          if (PIr.ItemCode > toart) then begin
            testf = false;
          end;
        end;
      end;
      if (TrHs) then begin
        if (nonblank(tove)) then begin
          if (PIr.VECode > tove) then begin
            testf = false;
          end;
        end;
        if (nonblank(frve)) then begin
          if (PIr.VECode < frve) then begin
            testf = false;
          end;
        end;
      end;
    end;
    if (RepSpec.flags[2]==2) then begin
      if (TrHs) then begin
        if (nonblank(tove)) then begin
          if (PIr.VECode > tove) then begin
            testf = false;
          end;
        end;
      end;
      if (TrHs) then begin
        if (nonblank(frve)) then begin
          if (PIr.VECode < frve) then begin
            testf = false;
          end;
        end;
      end;
      if (TrHs) then begin
        if (nonblank(toart)) then begin
          if (PIr.ItemCode > toart) then begin
            testf = false;
          end;
        end;
      end;
      if (TrHs) then begin
        if (nonblank(fromart)) then begin
          if (PIr.ItemCode < fromart) then begin
            testf = false;
          end;
        end;
      end;
    end;
    if (testf) then begin
      testf = ContactInGroupClass(PIr.VECode,RepSpec.f9,RepSpec.f10,"SUPP","","");
    end;
    if (nonblank(RepSpec.FirstAcc)) then begin
      if (PIr.Location!=RepSpec.FirstAcc) then begin
        testf = false;
      end;
    end;
    if (TrHs==false) then begin
      testf = false;
    end;
    if (testf) then begin
      INr.Code = PIr.ItemCode;
      ReadFirstMain(INr,1,true);
      if (nonblank(RepSpec.f3)) then begin
        if (INr.Group!=RepSpec.f3) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f4)) then begin
        if (!SetInSet2(RepSpec.f4,INr.DispGroups)) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      if (RepSpec.flags[3]==0) then begin
        price = PIr.PurPrice;
        if (PIr.PIFactor!=0) then begin
          price = price/PIr.PIFactor;
        end;
        printcurf = true;
      end else begin
        price = INr.InPrice;
        printcurf = false;
      end;
      if (PIr.DefaultChoice<>0) then begin
        tkn = " *"; 
      end else begin
        tkn = "";
      end;
      StartFormat(15);
      OutStringID(0,"DblPIVc2",PIr.ItemCode,false,PIr.Location & ":" & PIr.VECode);
      OutString(70,0,PIr.VEItemCode,false);
      OutString(2,0,PIr.Location,false);
      OutString(190,0,PIr.Comment,false);
      OutString(320,0,Left(PIr.VEName,22),false);
      OutString(4,0,tkn,false);
      OutString(5,0,price,true);
      if (printcurf) then begin
        OutString(6,0,PIr.CurncyCode,false);
      end;
      EndFormat;
    end;
  end;

  Gray_Divider(0,1);
  EndJob;
  return;
end;
