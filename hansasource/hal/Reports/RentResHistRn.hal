//Hal rental reservation report
external procedure HTItem(string,var string);
external procedure HTArtGroup(string, var string);
external procedure HTItemClass(string,var string);
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean ItemInItemGroupOrClass(string,string,string);

global 
procedure RentResHistRn(record RcVc RepSpec)
begin
  record RentResVc Rentr;
  record AgreementVc Agreementr;
  record CUVc CUr;
  record INVc INr;
  boolean TrHs, testf;
  integer qty,rw;
  string 255 tstr;
  
  StartReportJob(USetStr(12870));
  rw = 1;
  HTItem(RepSpec.f3,tstr);
  if (nonblank(tstr)) then begin
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (HasItemGroups) then begin
    HTArtGroup(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasItemClassification) then begin
    HTItemClass(RepSpec.f7,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;  
  EndHeader;
  
  StartFormat(15);
  OutString(0,0,USetStr(12871),false);
  OutString(90,0,USetStr(12872),false);
  OutString(160,0,USetStr(12873),false);
  OutString(240,0,USetStr(12874),false);
  OutString(290,0,USetStr(12875),false);
  OutString(350,0,USetStr(12876),false);
  OutString(420,0,USetStr(12877),false);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  Rentr.Code = RepSpec.f3;
  while (LoopKey("Code",Rentr,2,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(RepSpec.f3)) then begin
        if (Rentr.Code > RepSpec.f3) then begin
          TrHs = false;
        end;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f1)) then begin 
        Agreementr.SerNr = Rentr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          if (Agreementr.CustCode <> RepSpec.f1) then begin
            testf = false;
          end;
        end;
      end; 
      if (nonblank(RepSpec.f2)) then begin 
        Agreementr.SerNr = Rentr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          CUr.Code = Agreementr.CustCode;
          if (ReadFirstMain(CUr,1,true)) then begin
            if (CUr.CustCat <> RepSpec.f2) then begin
              testf = false;
            end;  
          end;
        end;
      end;
      if (testf) then begin
        testf = ItemInItemGroupOrClass(Rentr.Code,RepSpec.f4,RepSpec.f7);
      end;      
      if (nonblank(RepSpec.f5)) then begin 
       if (Rentr.Location <> RepSpec.f5) then begin
         testf = false;
       end;
      end;
      if (RepSpec.Comparison == 0) then begin
        if (blankdate(Rentr.EndDate)) then begin
          testf = false;
        end;
        if (nonblankdate(Rentr.EndDate)) then begin
          if (DateInRange(Rentr.EndDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
            testf = false;
          end;
        end; 
      end;
      if (RepSpec.Comparison == 1) then begin
        if (DateInRange(Rentr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
          testf = false;
        end;
      end;     
      if (testf) then begin
        StartFormat(15);
        OutString(0,0,Rentr.Code,false);
        OutString(90,0,Rentr.SerialNr,false);
        OutString(160,"DblAgreementVc",Rentr.AgreementNr,false);
        OutStringID(240,"DblRentResVc",Rentr.SerNr,false,Rentr.SerNr);
        Agreementr.SerNr = Rentr.AgreementNr;
        if (ReadFirstMain(Agreementr,1,true)) then begin
          OutString(290,0,Agreementr.CustCode,false);
        end;
        OutString(350,0,Rentr.TransDate,false);
        OutString(420,0,Rentr.EndDate,false);
        EndFormat;
        qty = qty + 1;
      end;
    end;
  end;
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(12878),false);
  OutVal(100,0,qty,M40Val,false);
  EndFormat;
  EndJob; 
  return;
end;