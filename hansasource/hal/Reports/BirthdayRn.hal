external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustClass(string,var string);
external function string 60 UserDefined(string,string);
external procedure HT2Per(Date,Date,var string);
external procedure HTCusts(string, string, var string);
external procedure HTCustCat(string,var string);

global
procedure BirthDayRn(record  RcVc RepSpec)
begin
  string 255 tstr;
  boolean testf, TrHs,found;
  record ContactRelVc ContactRelr;
  record CUVc CUr,mainCUr;
  date sdate,edate,birthdate;
  string 20 workmaincode;
  string 20 workccode;
  string 20 fcust,lcust;
  string 10 fcat,lcat;
  longint i,j,ars;
  string  10 startd,endd,birthday,wd1,wd2;
  integer keys,k;
  record MailSettingsBlock MBr;
  string 20 indexname;
  
  BlockLoad(MBr);
  sdate = RepSpec.sStartDate;
  edate = RepSpec.sEndDate;
  startd = DateToString(sdate,"MMDD");
  endd = DateToString(edate,"MMDD");
  fcust = FirstInRange(RepSpec.f2,20);
  lcust = LastInRange(RepSpec.f2,20);
  fcat = FirstInRange(RepSpec.f1,5);
  lcat = LastInRange(RepSpec.f1,5);
  
  StartReportJob(USetStr(10980));
   
  HT2Per(sdate,edate,tstr);
  Header(1,tstr,1);
  k=2;
  if (HasCategories) then begin
    if (nonblank(RepSpec.f1)) then begin
      HTCustCat(RepSpec.f1,tstr);
      Header(k, tstr, 1);
      k=k+1; 
    end; 
  end;
  if (nonblank(RepSpec.f2)) then begin
    HTCusts(fcust,lcust,tstr);
    Header(k, tstr, 1);
    k=k+1; 
  end; 
  if (RepSpec.flags[0]==1) then begin
    tstr = USetStr(10828) ; 
    Header(k, tstr, 1);
  end;   
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.Stext,tstr);
    if (nonblank(tstr)) then begin
      Header(k,tstr,1);
      k=k+1;
    end;
  end;  
  EndHeader;
  SetRepCol(2,80);
  SetRepCol(3,200);
  SetRepCol(4,300);

  StartFormat(15);
  OutString(0,0,USetStr(10981),false);
  OutString(2,0,USetStr(10982),false);
  OutString(3,0,USetStr(10983),false);
  switch (RepSpec.flags[7]) begin
    case 0: OutString(1,0,USetStr(10984),true);
    case 1: OutString(1,0,UserDefined("CUVc","UserDate1"),true);
    case 2: OutString(1,0,UserDefined("CUVc","UserDate2"),true);
    case 3: OutString(1,0,UserDefined("CUVc","UserDate3"),true);
  end;
  Endformat;
  StartFormat(15);
  OutString(0,0,USetStr(10985),false);
  OutString(2,0,USetStr(10986),false);
  OutString(3,0,USetStr(10987),false);
  Endformat;
  StartFormat(15); 
  OutString(0,0,USetStr(10988),false);
  OutString(2,0,USetStr(10989),false);
  OutString(3,0,USetStr(10990),false);
  OutString(1,0,USetStr(10991),true);
  Endformat;   
  Black_Divider(0,1);
  
  TrHs = true;
  switch (RepSpec.flags[7]) begin
    case 0: 
      CUr.Birthday = "01/01";
      indexname = "Birthday";
      keys = 2;
    otherwise
      indexname = "Code";
      keys = 1;
  end;
  CUr.Code = fcust;  
  while (LoopKey(indexname,CUr,keys,TrHs)) begin
    switch (RepSpec.flags[7]) begin
      case 0: 
        if (blank(CUr.Birthday)) then begin TrHs = false; end;
    end;
    if (nonblank(RepSpec.f2)) then begin
      if (CUr.Code>lcust) then begin TrHs = false; end;
    end;
    if (TrHs) then begin
      testf = true;
      if (RepSpec.flags[0]==0) then begin
        if (CUr.blockedFlag!=0) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (CUr.CustCat<fcat) or (CUr.CustCat>lcat) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (CUr.Code<fcust) or (CUr.Code>lcust) then begin testf = false; end;
      end;
      if (testf) then begin 
        testf = ContactInGroupClass("","",RepSpec.Stext,"CUST",CUr.CustCat,CUr.Classification);    
      end;      
      if (testf) then begin
        testf = false;
        if (RepSpec.flags[1]!=0) then begin
          if ((CUr.CUType==0) and (CUr.VEType==0) and (CUr.GuestType==0) and (CUr.DealerType==0) and (CUr.EmployeeType==0)) then begin
            testf = true;
          end;
        end;
        if (RepSpec.flags[2]!=0) then begin
          if (CUr.CUType!=0) then begin testf = true; end;
        end;
        if (RepSpec.flags[3]!=0) then begin
          if (CUr.VEType!=0) then begin testf = true; end;
        end;
        if (RepSpec.flags[4]!=0) then begin
          if (CUr.GuestType!=0) then begin testf = true; end;
        end;
        if (RepSpec.flags[5]!=0) then begin
          if (CUr.DealerType!=0) then begin testf = true; end;
        end;
        if (RepSpec.flags[6]!=0) then begin
          if (CUr.EmployeeType!=0) then begin testf = true; end;
        end;
      end;
      if (testf) then begin
        switch (RepSpec.flags[7]) begin
          case 0:  birthdate = CUr.BirthDate;
          case 1:  birthdate = CUr.UserDate1;
          case 2:  birthdate = CUr.UserDate2;
          case 3:  birthdate = CUr.UserDate3;
        end;
        birthday = DateToString(birthdate,"MMDD");
        if (endd>=startd) then begin
          if (birthday<startd) or (birthday>endd)  then begin
            testf = false;
          end;
        end else begin 
          if not ((birthday>startd) or (birthday<endd))  then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
/*      
        ResetLoop(ContactRelr);
        found = true;
        ContactRelr.CustCode = CUr.Code;
        while (LoopKey("CustCode",ContactRelr,1,found)) begin
          if (ContactRelr.CustCode!=CUr.Code) then begin found = false; end; 
          if (found) then begin

          end;
        end;
*/        
        RecordClear(mainCUr);
        ContactRelr.ContactCode = CUr.Code;
        if (ReadFirstKey("ContactCode",ContactRelr,1,true)) then begin
          mainCUr.Code = ContactRelr.CustCode;
          ReadFirstMain(mainCUr,1,true);
        end;
        
        StartFormat(15);
        OutString(0,0,birthdate,false);     
        OutStringID(2,"DblContCUVc",CUr.Name,false,CUr.Code);
        OutString(3,0,CUr.Title,false);
        OutDate(1,0,CUr.BirthDate,true);
        Endformat;
        if (nonblank(mainCUr.Code)) then begin
          StartFormat(15);
          OutString(0,"DblCUVc",mainCUr.Code,false);
          OutString(2,0,mainCUr.Name,false);
          OutString(3,0,mainCUr.Department,false);
          Endformat;   
        end;
        StartFormat(15); 
        OutString(0,0,CUr.Phone,false);
        OutString(2,0,CUr.Mobile,false);
        OutString(3,0,CUr.Fax,false);
        if (blank(CUr.eMail)) then begin
          OutString(1,0,USetStr(2289),true);
        end else begin
          if (MBr.ExclEmail==0) then begin
            OutString(1,0,CUr.eMail,true);
          end;
        end;
        Endformat;   
        StartFormat(15);
        OutString(0,0,CUr.InvAddr0,false);
        OutString(3,0,CUr.InvAddr1,false);
        OutString(1,0,CUr.InvAddr2,true);
        Endformat;    
        StartFormat(15);
        tstr = CUr.Code & "|" & mainCUr.Code;
        OutStringID(1,"DblBDReminder",USetStr(10992),true,tstr); // Take care of CreateBDReminder as well
        Endformat;    
        Gray_Divider(0,1);    
      end; 
    end;
  end;  
  EndJob;  
  return;
end;

