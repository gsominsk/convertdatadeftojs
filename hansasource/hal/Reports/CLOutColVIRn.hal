external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetVATCodeAccNumbers(string,var string,var string);

procedure PrintHeader()
BEGIN
  string 255 tstr;

  SetRepCol(2,50);
  SetRepCol(3,200);
  SetRepCol(4,260);
  SetRepCol(5,400);
  SetRepCol(6,440);
  SetRepCol(7,445);
  SetRepCol(8,475);
  StartFormat(15);
  OutString(0,0,USetStr(10491),false);
  OutString(2,0,USetStr(10492),false);
  OutString(3,0,USetStr(10493),false);
  OutString(4,0,USetStr(10494),false);
  OutString(5,0,USetStr(10495),true);
  OutString(6,0,USetStr(10496),true);
  OutString(7,0,USetStr(10497),false);
  OutString(8,0,USetStr(1532),false);
  EndFormat;
  Gray_Divider(0,1);
  RETURN;
END;

procedure PrintCollectionRow(LongInt sernr,string custcode,string custname,Date transdate,
                             string costaccs,string curncycode,val sum4,val basesum4,
                             Integer okflag)
BEGIN
  string 255 tstr;
  
  StartFormat(15);
  OutLongInt(0,"DblVIVc",sernr,false);
  OutString(2,0,custname,false);
  OutDate(3,0,transdate,false);
  OutString(4,0,costaccs,false);
  OutVal(5,0,basesum4,M4Val,true);
  OutVal(6,0,sum4,M4Val,true);
  OutString(7,0,curncycode,false);
  if (okflag!=0) then begin
    OutString(8,0,"Ã",false);
  end;  
  EndFormat;
  RETURN;
END;

procedure MakeCostAccString(record VIVc VIr,var string costaccs)
BEGIN
  row VIVc VIrw;
  Integer i,rwcnt;
  string 10 svatacc,pvatacc;

  rwcnt = MatRowCnt(VIr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(VIr,i,VIrw);
    if (SetInSet(VIrw.AccNumber,costaccs)==false) then begin
      if (nonblank(costaccs)) then begin
        costaccs = costaccs & ",";
      end;  
      costaccs = costaccs & VIrw.AccNumber;    
    end; 
    GetVATCodeAccNumbers(VIrw.VATCode,svatacc,pvatacc);
    if (SetInSet(pvatacc,costaccs)==false) then begin
      if (nonblank(costaccs)) then begin
        costaccs = costaccs & ",";
      end;  
      costaccs = costaccs & pvatacc;
    end;     
  end;   
  RETURN;
END;

procedure PrintCollectionInvoices(LongInt cloutsernr,var val totpayval,var val totbasepayval)
BEGIN
  record CLOutVIVc CLOutVIr;
  record VIVc VIr;
  Boolean TrHs,testf;
  string 255 costaccs;
  val basev;
  
  TrHs = true;
  CLOutVIr.CLOutNr = cloutsernr;
  while (LoopMain(CLOutVIr,1,TrHs)) begin
    if (CLOutVIr.CLOutNr!=cloutsernr) then begin
      TrHs = false;
    end;
    if (TrHs) then begin
      if (CLOutVIr.FileName=="VIVc") then begin
        VIr.SerNr = CLOutVIr.SerNr;
        if (ReadFirstMain(VIr,1,true)) then begin
          costaccs = "";
          MakeCostAccString(VIr,costaccs);
          basev = MulRateToBase1(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff);
          PrintCollectionRow(VIr.SerNr,VIr.VECode,VIr.VEName,VIr.TransDate,costaccs,VIr.CurncyCode,VIr.PayVal,basev,VIr.OKFlag);
        end else begin
          StartFormat(15);
          OutString(10,0,USetStr(1290),false);
          EndFormat;
        end;
        totpayval = totpayval + VIr.PayVal;
        totbasepayval = totbasepayval + basev;
      end else begin
        StartFormat(15);
        OutString(10,0,"Strange record",false);
        EndFormat;
      end;
    end;
  end;
  RETURN;
END;

global
procedure PrintCLOutVI(LongInt visernr)
BEGIN
  record VIVc VIr;
  string 255 costaccs;
  
  VIr.SerNr = visernr;
  if (ReadFirstMain(VIr,1,true)) then begin
    costaccs = "";
    MakeCostAccString(VIr,costaccs);
    PrintCollectionRow(VIr.SerNr,VIr.VECode,VIr.VEName,VIr.TransDate,costaccs,VIr.CurncyCode,VIr.PayVal,MulRateToBase1(VIr.CurncyCode,VIr.PayVal,VIr.FrRate,VIr.ToRateB1,VIr.ToRateB2,VIr.BaseRate1,VIr.BaseRate2,DefaultCurRoundOff),VIr.OKFlag);
  end else begin
    StartFormat(15);
    OutString(10,0,USetStr(1290),false);
    EndFormat;
  end;  
  RETURN;
END;

global
procedure CLOutColVIRn(record RcVc RepSpec)
BEGIN
  record CLOutVc CLOutr;
  val totpayval,totbasepayval;

  StartReportJob(USetStr(10490));
  EndHeader;
  PrintHeader;
  CLOutr.SerNr = RepSpec.long1;
  if (ReadFirstMain(CLOutr,1,true)) then begin
    if ((CLOutr.FSerNr!=-1) and (CLOutr.FileName=="VIVc")) then begin
      PrintCLOutVI(CLOutr.FSerNr);
    end else begin
      PrintCollectionInvoices(CLOutr.SerNr,totpayval,totbasepayval);
      Gray_Divider(0,1);
      StartFormat(15);
      OutVal(5,0,totbasepayval,M4Val,true);
      OutVal(6,0,totpayval,M4Val,true);
      EndFormat;      
    end;  
  end;  
  EndJob;
  RETURN;
END;