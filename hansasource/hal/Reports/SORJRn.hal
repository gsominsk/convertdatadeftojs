
procedure AddToCUAccSort(var record CUAccVc CUAccr,var record CUAccVc CUAcc2r,LongInt sernr,string sort)
begin
  row CUAccVc CUAccrw;
  row CUAccVc CUAcc2rw;
  Integer i,j,rwcnt;
  Boolean addedf;
  
  addedf = false;
  rwcnt = MatRowCnt(CUAccr);
  j = 0;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CUAccr,i,CUAccrw);
    if ((CUAccrw.Comment>sort) and (addedf==false)) then begin
      CUAcc2rw.InvNr = sernr;
      CUAcc2rw.Comment = sort;
      MatRowPut(CUAcc2r,j,CUAcc2rw);
      j = j + 1;
      addedf = true;
    end;
    MatRowPut(CUAcc2r,j,CUAccrw);
    j = j + 1;
  end;
  if (addedf==false) then begin
    CUAcc2rw.InvNr = sernr;
    CUAcc2rw.Comment = sort;
    MatRowPut(CUAcc2r,j,CUAcc2rw);
  end;
  RecordNew(CUAccr);
  rwcnt = MatRowCnt(CUAcc2r);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CUAcc2r,i,CUAccrw);
    MatRowPut(CUAccr,i,CUAccrw);
  end;
  return;
end;

procedure AddToSMSort(var record SMVc SMr,var record SMVc SM2r,string artcode,string comment,val q,string sort)
begin
  row SMVc SMrw;
  row SMVc SM2rw;
  Integer i,j,rwcnt;
  Boolean addedf;
  
  addedf = false;
  rwcnt = MatRowCnt(SMr);
  j = 0;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    if ((SMrw.Comment==sort) and (addedf==false)) then begin
      SMrw.DebVal = SMrw.DebVal + q;
      addedf = true;
    end;
    if ((SMrw.Comment>sort) and (addedf==false)) then begin
      SM2rw.Objects = artcode;
      SM2rw.Comment = sort;
      SM2rw.DebVal = q;
      MatRowPut(SM2r,j,SM2rw);
      j = j + 1;
      addedf = true;
    end;
    MatRowPut(SM2r,j,SMrw);
    j = j + 1;
  end;
  if (addedf==false) then begin
    SM2rw.Objects = artcode;
    SM2rw.Comment = comment;
    SM2rw.DebVal = q;
    MatRowPut(SM2r,j,SM2rw);
  end;
  RecordNew(SMr);
  rwcnt = MatRowCnt(SM2r);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SM2r,i,SMrw);
    MatRowPut(SMr,i,SMrw);
  end;
  return;
end;


procedure OutSORItem(string ArtCode,string Quant,string Spec)
begin
  StartFormat(15);
  OutString(0,0,ArtCode,false);
  OutString(90,0,Quant,false);
  OutString(150,0,Spec,false);
  EndFormat;
  return;
end;

procedure OutSORItemHeader()
begin
  StartFormat(15);
  OutString(0,0,USetStr(2325),false);
  OutString(90,0,USetStr(5583),false);
  OutString(150,0,USetStr(2326),false);
  OutString(250,0,USetStr(5584),false);
  EndFormat;
  Gray_Divider(0,1);
  return;
end;

/* Used in recursion */
procedure PrintSORJOrder(record ORVc ORr,string depart,LongInt lines,Integer oneperpage,Integer curline)
begin
  record INVc INr;
  row ORVc ORrw;
  Integer i,rwcnt;
  Boolean testf;
  Integer skipped;
  Boolean firstf;
  
  firstf = true;
  rwcnt = MatRowCnt(ORr);
  for (i=curline;(i<rwcnt) and (i<(lines+curline)+skipped);i=i+1) begin
    MatRowGet(ORr,i,ORrw);
    testf = true;
    if (nonblank(depart)) then begin
      INr.Code = ORrw.ArtCode;
      if (ReadFirstMain(INr,1,true)) then begin
        if (INr.Department<>depart) then begin
          testf = false;
        end;
      end;
    end;
    if (testf) then begin
      if (firstf) then begin
        StartFormat(15);
        OutString(0,0,USetStr(2584) & ":",false);
        OutLongInt(60,"DblORVc",ORr.SerNr,false);
        OutString(120,0,USetStr(2354) & ":",false);
        OutString(180,0,ORr.CustCode,false);
        OutString(260,0,USetStr(2305) & ":",false);
        OutString(340,0,ORr.Addr0,false);
        EndFormat;
        OutString(0,0,USetStr(2580) & ":",false);
        OutString(60,0,ORr.Sorting,false);
        OutString(340,0,ORr.Addr1,false);
        EndFormat;
        StartFormat(15);
        OutString(340,0,ORr.Addr2,false);
        EndFormat;
        Gray_Divider(0,1);
        OutSORItemHeader;
        firstf = false;
      end;
      OutSORItem(ORrw.ArtCode,ORrw.Quant,ORrw.Spec);
    end else begin
      skipped = skipped + 1;
    end;
  end;
  if (oneperpage==1) then begin
    NewPage(false);
  end else begin
    if (firstf==false) then begin
      Black_Divider(0,1);
    end;
  end;
  if (i<rwcnt) then begin
    PrintSORJOrder(ORr,depart,lines,oneperpage,i);
  end;
  return;
end;

global
procedure SORJRn(record RcVc RepSpec)
begin
  record ORVc ORr;
  record SMVc SMr;
  record SMVc SM2r;
  record CUAccVc CUAccr;
  record INVc INr;
  record CUAccVc CUAcc2r;
  row SMVc SMrw;
  row CUAccVc CUAccrw;
  row ORVc ORrw;
  Boolean TrHs;
  Boolean testf;
  string 60 frsort;
  string 60 tosort;
  LongInt afr;
  LongInt ato;
  Integer i,rwcnt;
  LongInt lines;
  Integer rw;
  string 200 tstr;
  string 1 c;
  boolean fr;
  
  
  afr = FirstInRange(RepSpec.f1,30);
  ato =  LastInRange(RepSpec.f1,30);
    
  if nonblank(RepSpec.f2) then begin
  	 // Sorting key can be specified with spaces in such format First Key:Last Key
  	 fr = true;
	 for (i=0;i<len(RepSpec.f2);i=i+1) begin
		c = Mid(RepSpec.f2,i,1);
		if fr then begin
			frsort = frsort & c;
		end else begin
			tosort = tosort & c;
		end;		
		if (c == ":") then begin
		 	fr = false;
		end;
	 end;
	 if fr then begin
	    frsort = RepSpec.f2;
	 	tosort = frsort;
	 end;	
  end;	     
  
  lines = RepSpec.long1;
  if (lines<1) then begin
    lines = 99999;
  end;
  StartReportJob(USetStr(2578));
  rw = 1;
  Header(rw,USetStr(2638) & " " & RepSpec.AccStr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f2)) then begin
    Header(rw,USetStr(2579) & " " & RepSpec.f2,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f3)) then begin
    Header(rw,USetStr(6105) & " " & RepSpec.f3,1);
    rw = rw + 1;
  end;
  EndHeader;
  ORr.PlanShip = RepSpec.AccStr;
  TrHs = true;
  while (LoopKey("PlanShip",ORr,1,TrHs)) begin
    if (ORr.PlanShip<>RepSpec.AccStr) then begin TrHs = false; end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (nonblank(RepSpec.f1)) then begin
      if ((ORr.SerNr<afr) or (ORr.SerNr>ato)) then begin testf = false; end;
    end;
    if (nonblank(RepSpec.f2)) then begin
      if ((ORr.Sorting<frsort) or (ORr.Sorting>tosort)) then begin testf = false; end;
    end;
    if (ORr.Closed!=0) then begin
      testf = false;
    end;
    if (testf) then begin
      if (RepSpec.flags[1]!=2) then begin
        RecordNew(CUAcc2r);
        AddToCUAccSort(CUAccr,CUAcc2r,ORr.SerNr,ORr.Sorting);
      end else begin
        rwcnt = MatRowCnt(ORr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(ORr,i,ORrw);
          RecordNew(SM2r);
          AddToSMSort(SMr,SM2r,ORrw.ArtCode,ORrw.Spec,ORrw.Quant,ORrw.Spec)
        end;
      end;
    end;
  end;
  if (RepSpec.flags[1]!=2) then begin
    rwcnt = MatRowCnt(CUAccr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(CUAccr,i,CUAccrw);
      ORr.SerNr = CUAccrw.InvNr;
      if (ReadFirstMain(ORr,1,true)) then begin
        PrintSORJOrder(ORr,RepSpec.f3,lines,RepSpec.flags[1],0);
      end;
    end;
  end else begin
    OutSORItemHeader;
    rwcnt = MatRowCnt(SMr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(SMr,i,SMrw);
      testf = true;
      if (nonblank(RepSpec.f3)) then begin
        INr.Code = SMrw.Objects;
        if (ReadFirstMain(INr,1,true)) then begin
          if (INr.Department<>RepSpec.f3) then begin
            testf = false;
          end;
        end;
      end;
      if (testf) then begin
        OutSORItem(SMrw.Objects,SMrw.DebVal,SMrw.Comment);
      end;
    end;
    Gray_Divider(0,1);
  end;
  
  EndJob;
  return;
end;

