external procedure HTEmployees(string,string,var string);
external procedure HTSkills(string,string,var string);
external procedure HTRatings(string,string,var string);
external procedure HTOKF(Integer,Integer, var string);

procedure PrintHeader(record RcVc RepSpec)
begin
  Integer rw;
  string 255 tstr;
  string 255 fremp,toemp;
  string 255 frskill,toskill;
  string 255 frrat,torat;
  
  fremp = FirstInRange(RepSpec.f1,20);
  toemp = LastInRange(RepSpec.f1,20);
  frskill = FirstInRange(RepSpec.f2,10);
  toskill = LastInRange(RepSpec.f2,10);
  frrat = FirstInRange(RepSpec.f3,10);
  torat = LastInRange(RepSpec.f3,10);
  rw = 1;
  HTEmployees(fremp,toemp,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  tstr = USetStr(19161);
  switch (RepSpec.flags[1]) begin
    case 0: tstr = tstr & USetStr(19162);
    case 1: tstr = tstr & USetStr(19163);
  end;
  Header(rw,tstr,0);
  HTSkills(frskill,toskill,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  HTOKF(RepSpec.flags[1],RepSpec.flags[2],tstr);
  Header(rw,tstr,0);
  HTRatings(frrat,torat,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  tstr = USetStr(19164) & ": " & RepSpec.d1;
  Header(rw,tstr,1);
  rw = rw + 1;
  return;
end;

procedure HRMSkillSortingSkill(record RcVc RepSpec)
begin
  string 255 fremp,toemp;
  string 255 frskill,toskill;
  string 255 frrat,torat;
  record HRMSkillVc HRMSkillr;
  record HRMSEVc HRMSEr;
  row HRMSEVc HRMSErw;
  Integer i,rwcnt;
  Boolean foundskill,foundse,testf;
  Boolean firstskillf;
  Integer cnt,segs;
  string 255 lastemployee;

  firstskillf = true;
  fremp = FirstInRange(RepSpec.f1,20);
  toemp = LastInRange(RepSpec.f1,20);
  frskill = FirstInRange(RepSpec.f2,10);
  toskill = LastInRange(RepSpec.f2,10);
  frrat = FirstInRange(RepSpec.f3,10);
  torat = LastInRange(RepSpec.f3,10);
  foundskill = true;
  HRMSkillr.Code = frskill;
  while (LoopMain(HRMSkillr,1,foundskill)) begin
    if (nonblank(RepSpec.f2)) then begin
      if (HRMSkillr.Code>toskill) then begin foundskill = false; end;
    end;
    if (foundskill) then begin
      if (firstskillf==false) then begin
        Gray_Divider(0,400);
      end;
      StartFormat(15);
       OutString(0,0,HRMSkillr.Code,false);
       OutString(3,0,HRMSkillr.Name,false);
      EndFormat;
      Gray_Divider(0,400);
      firstskillf = false;
      cnt = 0;
      ResetLoop(HRMSEr);
      foundse = true;
      HRMSEr.TransDate = RepSpec.d1;
      segs = 1;
      if (nonblank(RepSpec.f1)) then begin
        HRMSEr.Employee = toemp;
        segs = 2;
      end;
      while (LoopBackKey("Skill:" & HRMSkillr.Code,HRMSEr,segs,foundse)) begin
        if (HRMSEr.TransDate>RepSpec.d1) then begin foundse = false; end;
        if (nonblank(RepSpec.f1)) then begin
          if (HRMSEr.Employee>toemp) then begin foundse = false; end;
        end;
        if (foundse) then begin
          testf = true;
          if (nonblank(lastemployee)) then begin
            if (HRMSEr.Employee==lastemployee) then begin
              testf = false;
            end;
          end;
          if (HRMSEr.OKFlag==0) then begin
            if (RepSpec.flags[1]==0) then begin
              testf = false;
            end;
          end;
          if (HRMSEr.OKFlag<>0) then begin
            if (RepSpec.flags[2]==0) then begin
              testf = false;
            end;
          end;

          if (testf) then begin
            testf = false;
            ClearRow(HRMSEr,HRMSErw,1);
            rwcnt = MatRowCnt(HRMSEr);
            for (i=0;i<rwcnt;i=i+1) begin
              MatRowGet(HRMSEr,i,HRMSErw);
              if (HRMSErw.Skill==HRMSkillr.Code) then begin
                i = rwcnt;
                if (nonblank(RepSpec.f3)) then begin
                  if (HRMSErw.Rating>=frrat) and (HRMSErw.Rating<=torat) then begin 
                    testf = true; 
                  end;
                end else begin
                  testf = true;
                end;
              end;
            end;
            if (testf) then begin
              StartFormat(15);
               OutString(2,0,HRMSEr.Employee,false);
               OutString(3,0,HRMSEr.Name,false);
               OutString(4,0,HRMSErw.Rating,false);
               OutString(5,0,HRMSErw.RatingComment,false);
              EndFormat;
              cnt = cnt + 1;
            end;
          end;
          lastemployee = HRMSEr.Employee;
        end;
      end;
      Gray_Divider(0,400);
      StartFormat(15);
       OutString(2,0,USetStr(19169) & ":    " & cnt ,false);
      EndFormat;
      StartFormat(15);
      EndFormat;
    end;
  end;
  return;
end;

procedure HRMSkillSortingEmployee(record RcVc RepSpec)
begin
  string 255 fremp,toemp;
  string 255 frskill,toskill;
  string 255 frrat,torat;
  record HRMSEVc HRMSEr;
  row HRMSEVc HRMSErw;
  Integer i,rwcnt;
  Boolean foundse;
  Boolean testf,test2f;
  Integer cnt,segs;
  Boolean firstsef;
  string 255 lastemployee;
  
  firstsef = true;
  fremp = FirstInRange(RepSpec.f1,20);
  toemp = LastInRange(RepSpec.f1,20);
  frskill = FirstInRange(RepSpec.f2,10);
  toskill = LastInRange(RepSpec.f2,10);
  frrat = FirstInRange(RepSpec.f3,10);
  torat = LastInRange(RepSpec.f3,10);
  foundse = true;
  HRMSEr.TransDate = RepSpec.d1;
  segs = 1;
  if (nonblank(RepSpec.f1)) then begin
    HRMSEr.Employee = toemp;
    segs = 2;
  end;
  while (LoopBackKey("DateEmployee",HRMSEr,segs,foundse)) begin
    if (HRMSEr.TransDate>RepSpec.d1) then begin foundse = false; end;
    if (nonblank(RepSpec.f1)) then begin
      if (HRMSEr.Employee<fremp) then begin foundse = false; end;
    end;
    if (foundse) then begin      
      testf = true;
      if (HRMSEr.OKFlag==0) then begin
        if (RepSpec.flags[1]==0) then begin
          testf = false;
        end;
      end;
      if (HRMSEr.OKFlag<>0) then begin
        if (RepSpec.flags[2]==0) then begin
          testf = false;
        end;
      end;
      if (nonblank(lastemployee)) then begin
        if (HRMSEr.Employee==lastemployee) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        if (nonblank(RepSpec.f2)) then begin
          testf = false;
          rwcnt = MatRowCnt(HRMSEr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(HRMSEr,i,HRMSErw);
            if (HRMSErw.Skill>=frskill) and (HRMSErw.Skill<=toskill) then begin testf = true; end;
          end;
        end;
      end;
      if (testf) then begin
       if (nonblank(RepSpec.f3)) then begin
          testf = false;
          rwcnt = MatRowCnt(HRMSEr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(HRMSEr,i,HRMSErw);
            test2f = true;
            if (nonblank(RepSpec.f2)) then begin
              if (HRMSErw.Skill>=frskill) and (HRMSErw.Skill<=toskill) then begin 
                if (HRMSErw.Rating>=frrat) and (HRMSErw.Rating<=torat) then begin testf = true;  end;
              end;
            end else begin
              if (HRMSErw.Rating>=frrat) and (HRMSErw.Rating<=torat) then begin testf = true;  end;
            end;
          end;
        end;
      end;
      if (testf) then begin
        cnt = 0;
        if (firstsef==false) then begin
          Gray_Divider(0,400);
        end;
        StartFormat(15);
         OutString(0,0,HRMSEr.Employee,false);
         OutString(3,0,HRMSEr.Name,false);
        EndFormat;
        Gray_Divider(0,400);
        rwcnt = MatRowCnt(HRMSEr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(HRMSEr,i,HRMSErw);
          testf = true;
          if (nonblank(RepSpec.f2)) then begin
            if (HRMSErw.Skill<frskill) or (HRMSErw.Skill>toskill) then begin testf = false; end;
          end;
          if (nonblank(RepSpec.f3)) then begin
            if (HRMSErw.Rating<frrat) or (HRMSErw.Rating>torat) then begin testf = false; end;
          end;
          if (testf) then begin
            StartFormat(15);
             OutString(2,0,HRMSErw.Skill,false);
             OutString(3,0,HRMSErw.SkillComment,false);
             OutString(4,0,HRMSErw.Rating,false);
             OutString(5,0,HRMSErw.RatingComment,false);
            EndFormat;
            cnt = cnt + 1;
          end;
        end;
        Gray_Divider(0,400);
        StartFormat(15);
         OutString(2,0,USetStr(19170) & ":    " & cnt ,false);
        EndFormat;
        StartFormat(15);
        EndFormat;
        firstsef = false;
      end;
      lastemployee = HRMSEr.Employee;
    end;
  end;
  return;
end;

global
procedure HRMSkillRn(record RcVc RepSpec)
begin
  record CompaniesBlock Cb;
  row CompaniesBlock Cbrw;
  Integer i,rwcnt;
  Integer oldcomp;
  
  if (blankdate(RepSpec.d1)) then begin
    RepSpec.d1 = CurrentDate;
  end;
  StartReportJob(USetStr(19160));
   PrintHeader(RepSpec);
  EndHeader;
  SetRepCol(2,40);
  SetRepCol(3,100);
  SetRepCol(4,250);
  SetRepCol(5,300);
  switch (RepSpec.flags[0]) begin
    case 0:
      StartFormat(15);
       OutString(0,0,USetStr(19166),false);
       OutString(2,0,USetStr(19165),false);
       OutString(3,0,USetStr(19167),false);
       OutString(4,0,USetStr(19168),false);
      EndFormat;
      Gray_Divider(0,1);
      if (RepSpec.IncDaughter!=0) then begin
        oldcomp = CurrentCompany;
        BlockLoad(Cb);
        rwcnt = MatRowCnt(Cb);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Cb,i,Cbrw);
          StartFormat(15);
           OutString(0,0,Cbrw.CompName,false);
          EndFormat;      
          HRMSkillSortingEmployee(RepSpec);
          Black_Divider(0,1);
        end;
        ResetCompany(oldcomp);
      end else begin
        HRMSkillSortingEmployee(RepSpec);
      end;
    case 1:
      StartFormat(15);
       OutString(0,0,USetStr(19165),false);
       OutString(2,0,USetStr(19166),false);
       OutString(3,0,USetStr(19167),false);
       OutString(4,0,USetStr(19168),false);
      EndFormat;
      Gray_Divider(0,1);
      if (RepSpec.IncDaughter!=0) then begin
        oldcomp = CurrentCompany;
        BlockLoad(Cb);
        rwcnt = MatRowCnt(Cb);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(Cb,i,Cbrw);
          StartFormat(15);
           OutString(0,0,Cbrw.CompName,false);
          EndFormat;      
          HRMSkillSortingSkill(RepSpec);
          Black_Divider(0,1);
        end;
        ResetCompany(oldcomp);
      end else begin
        HRMSkillSortingSkill(RepSpec);
      end;
  end;
  EndJob;
  return;
end;