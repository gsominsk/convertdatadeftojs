
/* DayBalCash for Russia, slow */
global
procedure CashInO(record RcVc RepSpec)
begin
  record CLInVc CLIr;
  record CLOutVc CLOr;
  val TotSum,t;
  LongInt afr,ato;
  Boolean TrHs,TrHs2,testf;
  Date td;
  Boolean foundCLI,foundCLO;
  
  StartReportJob(USetStr(3259));
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(5252),false);
  OutString(40,0,USetStr(7085),false);
  OutString(100,0,USetStr(2445),false);
  OutString(150,0,USetStr(5147),false);
  OutString(200,0,USetStr(5208),false);
  OutString(260,0,USetStr(2607),false);
  EndFormat;
  StartFormat(15);
  OutString(15,0,USetStr(2445),false);
  OutString(60,0,USetStr(2445),false);
  OutString(215,0,USetStr(2354),false);
  OutString(265,0,USetStr(2543),false);
  OutString(400,0,USetStr(2356),false);
  OutString(450,0,USetStr(2348),false);
  OutString(480,0,USetStr(2357),false);
  EndFormat;
  Gray_Divider(0,1);
  afr =  FirstInRange(RepSpec.f1,20);
  ato =  LastInRange(RepSpec.f1,20);
  td = RepSpec.sStartDate;
  foundCLI = true;
  foundCLO = true;
  while((td<RepSpec.sEndDate) and (foundCLI==true or foundCLO==true)) begin
    if (foundCLI==true) then begin
                 
      ResetLoop(CLIr);
      CLIr.SerNr = afr;
      TrHs = true;     
      while (LoopMain(CLIr,1,TrHs)) begin 
        testf = true;
        if (ato <> -1) then begin
          if (CLIr.SerNr>ato) then begin
            TrHs = false;
          end;
        end;  
        if (TrHs == false) then begin
          testf = false;
        end;
         if (nonblank(RepSpec.f2)) then begin
           if (CLIr.CUCode<>RepSpec.f2) then begin
             testf = false;
           end;
         end;
         if (CLIr.TransDate<>td) then begin  testf = false; end;   
         if (CLIr.Invalid!=0)then begin testf = false; end;
         if (testf) then begin
           StartFormat(15);
           OutLongInt(0,0,CLIr.SerNr,false);
           OutDate(40,0,CLIr.TransDate,false);
           OutString(100,0,CLIr.PayMode,false);
           OutString(150,0,CLIr.Person,false);
           OutString(200,0,CLIr.VATCode,false);
           OutString(250,0,CLIr.Comment,false);
           EndFormat;
           StartFormat(15);
           OutString(15,0,CLIr.CorspCode,false);
           OutString(55,0,CLIr.CorspComment,false);
           OutString(215,0,CLIr.CUCode,false);
           OutString(265,0,CLIr.CUName,false);
           OutVal(400,0,CLIr.VATVal,M4Val,true);
           OutVal(440,0,CLIr.NetVal,M4Val,true);
           OutVal(480,0,CLIr.Total,M4Val,true);
           EndFormat;
           TotSum = TotSum + CLIr.Total;
         end;
      end;
      if (CLIr.TransDate>td) then begin foundCLI = false; end;
    end;  
    if (foundCLO==true) then begin
      CLOr.SerNr = afr;
      TrHs2 =true;
      ResetLoop(CLOr);     
      while (LoopMain(CLOr,1,TrHs2)) begin
        testf = true;
        if (ato <> -1) then begin
          if (CLOr.SerNr>ato) then begin
            TrHs2 = true;
          end;
        end;  
         if (nonblank(RepSpec.f1)) then begin
           if (CLOr.CUCode<>RepSpec.f1) then begin
             testf = false;
           end;
         end;
         if (CLOr.TransDate<>td) then begin  
           testf = false; 
         end;          
         if (CLOr.Invalid!=0) then begin testf = false; end;         
         if (testf==true) then begin
           StartFormat(15);
           OutLongInt(0,0,CLOr.SerNr,false);
           OutDate(40,0,CLOr.TransDate,false);
           OutString(100,0,CLOr.PayMode,false);
           OutString(150,0,CLOr.Person,false);
           OutString(250,0,CLOr.Comment,false);
           EndFormat;
           StartFormat(15);
           OutString(15,0,CLOr.CorspCode,false);
           OutString(55,0,CLOr.CorspComment,false);
           OutString(215,0,CLOr.CUCode,false);
           OutString(265,0,CLOr.CUName,false);
           t = 0-CLOr.Total;
           OutVal(480,0,t,M4Val,true);
           EndFormat;
           TotSum = TotSum - CLOr.Total;
         end;
      end;
      if (CLOr.TransDate>td) then begin foundCLO = false; end;
    end;  
    td=AddDay(td,1);
  end;
  Gray_Divider(0,1);
  StartFormat(15);
    OutVal(480,0,TotSum,M4Val,true);
  EndFormat;
  EndJob;
  return;
end;

