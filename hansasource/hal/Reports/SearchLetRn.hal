external procedure HT2Per(Date, Date , var string);
external procedure GetCurUser(var record UserVc);

procedure SearchHeader(record RcVc RepSpec)
begin
  string 255 tstr;
  Integer rw;
  
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (RepSpec.long1<=0) then begin
    tstr = "User: ";
    tstr = tstr & CurrentUser;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f1)) then begin
    if (RepSpec.ArtMode == 0) then begin
      tstr = USetStr(11701) & " " & RepSpec.f1;
    end;
    if (RepSpec.ArtMode == 1) then begin    
      tstr = USetStr(11702) & " " & RepSpec.f1;
    end;
    if (RepSpec.ArtMode == 2) then begin
      tstr = USetStr(11703) & " " & RepSpec.f1;
    end;
    Header(rw,tstr,1);
    rw = rw + 1;  
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(11704) & " " & RepSpec.f2;
    Header(rw,tstr,1);
  end;
  return;
end;

global
procedure SearchLetRn(record RcVc RepSpec)
begin
  record LetVc Letr;
  record LetVc tmpLetr;
  boolean TrHs,testf,testtextf;
  string 255 tstr;
  integer cnt, rw;
  record UserVc Userr;
    
  cnt = 0;
  rw = 1;
  StartReportJob(USetStr(13537));
  SearchHeader(RepSpec);
  EndHeader;
  if (blank(RepSpec.f2)) then begin
    goto LSearchLetRn;
  end;
  GetCurUser(Userr);
  SetRepCol(2,120);
  SetRepCol(3,380);
  StartFormat(15);
  OutString(0,0,USetStr(13521),false);
  OutString(2,0,USetStr(13522),false);
  OutString(3,0,USetStr(13523),false);
  EndFormat;
  Gray_Divider(0,1);
  TrHs = true;
  Letr.TransDate = RepSpec.sStartDate;
  while (LoopKey("TransDate",Letr,1,TrHs)) begin
    if (Letr.TransDate>RepSpec.sEndDate) then begin 
      TrHs = false;
    end;
    if (TrHs) then begin
      RecordNew(tmpLetr);
      testf = true;
      testtextf = false;
      if (nonblank(RepSpec.f2)) then begin
        RecordNew(tmpLetr);
        RecordCopy(tmpLetr,Letr);
        AddToText(Letr.Header,tmpLetr);
        AddToText(" ",Letr);
        AddToText(Letr.Name,tmpLetr);
        AddToText(" ",Letr);

        if (StringInText(RepSpec.f2,tmpLetr)) then begin
          testtextf = true;
        end;
      end;    
      if (testf and testtextf) then begin
        StartFormat(15);
        OutStringID(0,"DblLetVc",Letr.CustCode,false,Letr.SerNr);
        OutString(2,0,Letr.Name,false);
        OutString(3,0,Letr.CustCat,false);
        EndFormat;
        cnt = cnt + 1;
      end;  
    end;
  end;  
  Gray_Divider(0,1);
  StartFormat(15);
  OutString(0,0,USetStr(13524),false);
  OutVal(100,0,cnt,M40Val,true);
  EndFormat;
LSearchLetRn:;
  EndJob;
  return;
end;

