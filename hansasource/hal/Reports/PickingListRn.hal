procedure PrintHeader(longint delivery)
begin
  record SHVc SHr;
  record ORVc ORr;
  record CUVc CUr;
  record PDVc PDr;

  SHr.SerNr = delivery;
  if (ReadFirstMain(SHr,1,true)) then begin
    StartFormat(15);
    OutString(0,0,USetStr(30078) & " ",false);
    OutString(90,"DblSHVc",SHr.SerNr,false);
    OutString(200,0,USetStr(30079) & " ",false);
    OutString(270,"DblORVc",SHr.OrderNr,false);
    EndFormat;
      StartFormat(15);
    OutString(0,0,"Kund: " & SHr.CustCode,false);
    OutString(80,0,SHr.Addr0,false);
    EndFormat;
    if (nonblank(SHr.Addr1)) then begin
      StartFormat(15);
      OutString(80,0,SHr.Addr1,false);
      EndFormat;
    end;
    if (nonblank(SHr.Addr2)) then begin
      StartFormat(15);
      OutString(80,0,SHr.Addr2,false);
      EndFormat;
    end;
    if (nonblank(SHr.Addr3)) then begin
      StartFormat(15);
      OutString(80,0,SHr.Addr3,false);
      EndFormat;
    end;
    if (nonblank(SHr.DelAddr3)) then begin
      StartFormat(15);
      OutString(80,0,SHr.DelAddr3,false);
      EndFormat;
    end;
    if (nonblank(SHr.DelAddr4)) then begin
      StartFormat(15);
      OutString(80,0,SHr.DelAddr4,false);
      EndFormat;
    end;
    StartFormat(15);
    EndFormat;
  
    StartFormat(15);	
    OutString(0,0,USetStr(30070) & " ",false);
    OutString(80,0,SHr.ShipDate,false);
    if (nonblank(SHr.Comment)) then begin
      OutString(200,0,USetStr(30071) & " ",false);
      OutString(270,0,SHr.Comment,false);
    end;
    EndFormat;
    ORr.SerNr = SHr.OrderNr;
    if (ReadFirstMain(ORr,1,true)) then begin end;
    StartFormat(15);
    OutString(0,0,USetStr(30072) & " ",false);
    OutString(80,0,ORr.ShipDeal,false);
    OutString(200,0,USetStr(30073) & " ",false);
    OutString(270,0,ORr.Phone,false);
    EndFormat;
    StartFormat(15);
    OutString(0,0,USetStr(30074) & " ",false);
    OutString(80,0,SHr.ShipMode,false);
    OutString(200,0,USetStr(30075) & " ",false);
    OutString(270,0,ORr.Fax,false);
    EndFormat;
 
    StartFormat(15);
    OutString(0,0,USetStr(30076) & " ",false);
    PDr.Code = ORr.PayDeal;
    if (ReadFirstMain(PDr,1,true)) then begin end;
    OutString(80,0,PDr.pdComment,false);
    EndFormat;
    CUr.Code = SHr.CustCode;
    if (ReadFirstMain(CUr,1,true)) then begin
      if (nonblank(CUr.FreightNr)) then begin
        StartFormat(15);
        OutString(0,0,USetStr(30077) & " ",false);
        OutString(80,0,CUr.FreightNr,false);
        EndFormat;
      end;
    end;
  end;
  return;
end;

procedure FindItemsOfTypeNormal(LongInt delivery,var val qty)
begin
  record SHVc SHr;
  row SHVc SHrw;
  record INVc INr;
  integer i,rwcnt;

  SHr.SerNr = delivery;
  if (ReadFirstMain(SHr,1,true)) then begin
    rwcnt = MatRowCnt(SHr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(SHr,i,SHrw);
      if (nonblank(SHRw.ArtCode)) then begin
        if (blank(SHrw.PosCode)) then begin
          StartFormat(15);
          OutString(0,0,SHrw.ArtCode,false);
          OutString(80,0,SHrw.Spec,false);
          OutVal(340,0,SHrw.Ship,M40Val,true);
          INr.Code = SHrw.ArtCode;
          if (ReadFirstMain(INr,1,true)) then begin end;
          OutString(345,0,INr.Unittext,false);
          OutString(430,0,"________",false);
          EndFormat;
          qty = qty + SHrw.Ship;
        end;
      end;
    end;
  end;
  return;
end;

global
procedure PickingListRn(record RcVc RepSpec)
BEGIN
  record StockMovVc StockMovr;
  row StockMovVc StockMovrw;
  record INVc INr;
  integer i,rwcnt;
  Boolean TrHs, testf,firstf;
  LongInt delivery;
  string 255 tstr;
  integer rw; 
  val qty;
  delivery = FirstInRange(RepSpec.f1,10);
  
  firstf = true;
  rw = 1;
  StartReportJob(USetStr(30060));
  tstr = USetStr(30061) & delivery;
  Header(rw,tstr,1);
  EndHeader;
  TrHs = true;
  StockMovr.TransNr = delivery;
  StockMovr.FileName = "SHVc";
  while (LoopKey("FileName",StockMovr,2,TrHs)) begin
    if (TrHs) then begin
      if (StockMovr.TransNr <> delivery) then begin
        TrHs = false;  
      end;
      if (StockMovr.FileName <> "SHVc") then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      testf = true;
      if (StockMovr.OKFlag == 1) then begin
        testf = false;  
      end;
      if (testf) then begin
        if (firstf) then begin
          PrintHeader(delivery);
          StartFormat(15);
          EndFormat;
          StartFormat(15);
          OutString(0,0,USetStr(30062),false);
          OutString(80,0,USetStr(30063),false);
          OutString(300,0,USetStr(30064),true);
          OutString(340,0,USetStr(30065),true);
          OutString(420,0,USetStr(30066),true);
          EndFormat;
          Gray_Divider(0,1);
          firstf = false;
        end;
        rwcnt = MatRowCnt(StockMovr);
        for (i=0;i<rwcnt;i=i+1) begin
          MatRowGet(StockMovr,i,StockMovrw);

          StartFormat(15);
          OutString(0,0,StockMovrw.ArtCode,false);
          OutString(80,0,StockMovrw.Spec,false);
          OutLongInt(300,"DblStockMovVc",StockMovr.SerNr,true);
          OutVal(340,0,StockMovrw.Quant,M40Val,true);
          OutString(420,0,StockMovrw.FrPosCode,true);
          OutString(430,0,"_________",false);
          EndFormat;
          qty = qty + StockMovrw.Quant;
        end;
      end;
    end;
  end; // While  
  FindItemsOfTypeNormal(delivery,qty);
  Gray_Divider(0,1);
  StartFormat(10);
  EndFormat;
  StartFormat(15);
  OutString(420,0,USetStr(30067),true);
  OutString(430,0,ValToString(qty,M40Val,"","",0),false);
  EndFormat;
  StartFormat(10);
  EndFormat;
  StartFormat(15);
  OutString(420,0,USetStr(30068),true);
  OutString(430,0,"_________",false);
  EndFormat;
  StartFormat(10);
  EndFormat;
  StartFormat(15);
  OutString(420,0,USetStr(30069),true);
  OutString(430,0,"_________",false);
  EndFormat;
  EndJob;
  RETURN;
END;

