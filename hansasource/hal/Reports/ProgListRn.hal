external procedure HT2Per(Date, Date , var string);
external Function Boolean TestPrognosis(string,record INProgVc,record RcVc,var record INVc,string,string,var Boolean,Boolean);

global
Procedure ProgListRn(record RcVc RepSpec)
BEGIN
  record INProgVc INProgr;
  record RecVc Recr;
  record INVc INr;
  Boolean TrHs,bydate;
  integer rw;
  string 255 tstr;
  string 20 fritem,toitem;
  string 60 comment;
  val qty;
  string 60 thekey;
  Integer nofkeys;
  string 255 dblstr;

  fritem = FirstInRange(RepSpec.f1,20);
  toitem = LastInRange(RepSpec.f1,20);
  qty = BlankVal;

  StartReportJob(USetStr(13790));
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  if (nonblank(RepSpec.f1)) then begin
    tstr = USetStr(13791);
    tstr = tstr & ": " & RepSpec.f1;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f2)) then begin
    tstr = USetStr(13792);
    tstr = tstr & ": " & RepSpec.f2;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  if (nonblank(RepSpec.f3)) then begin
    tstr = USetStr(13793);
    tstr = tstr & ": " & RepSpec.f3;
    Header(rw,tstr,1);
    rw = rw + 1;
  end;
  EndHeader;

  SetRepCol(2,60);
  SetRepCol(3,300);
  SetRepCol(4,400);
  SetRepCol(5,410);
  SetRepCol(6,240);

  if (RepSpec.flags[0]==0) then begin
    nofkeys = 3;
    thekey = "OrderDate";
    bydate = true;
  end else begin
    nofkeys = 3;
    thekey = "MainKey";
    bydate = false;
  end;

  if (RepSpec.AccSpec==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(13791),false);
    OutString(2,0,USetStr(13794),false);
    OutString(6,0,USetStr(13795),false);
    OutString(3,0,USetStr(13796),false);
    OutString(4,0,USetStr(13797),true);
    OutString(5,0,USetStr(13793),false);
    EndFormat;
    Black_Divider(0,1);

    TrHs = true;
    INProgr.FileName = "PUVc";
    INProgr.OrderDate = RepSpec.sStartDate;
    INProgr.ItemCode = fritem;
    While (LoopKey(thekey,INProgr,nofkeys,TrHs)) begin
      if (TestPrognosis("PUVc",INProgr,RepSpec,INr,fritem,toitem,TrHs,bydate)) then begin
        dblstr = INProgr.FileName & "," & INProgr.ItemCode & "," & INProgr.OrderDate & ",";
        if (blank(INProgr.Location)) then begin
          dblstr = dblstr & "NIL" & ",";
        end else begin
          dblstr = dblstr & INProgr.Location & ",";
        end;
        if (blank(INProgr.VECode)) then begin
          dblstr = dblstr & "NIL";
        end else begin
          dblstr = dblstr & INProgr.VECode;
        end;
        StartFormat(15);
        OutStringID(0,"DblINProgVc",INProgr.ItemCode,false,dblstr);//DblINVc
        OutString(2,0,Left(INr.Name,30),false);
        OutString(6,0,INProgr.NeededDate,false);
        OutString(3,0,INProgr.OrderDate,false);
        OutVal(4,0,INProgr.Qty,M4UVal,true);
        OutString(5,0,INProgr.Location,false);
        EndFormat;
        qty = qty + INProgr.Qty;
      end;
    end;
    Black_Divider(0,1);
    StartFormat(15);
    OutString(0,0,USetStr(13798),false);
    OutVal(400,0,qty,M4Val,true);
    EndFormat;
    StartFormat(15);
    EndFormat;
  end;

  qty = BlankVal;

  if ((RepSpec.AccSpec==1) and (RepSpec.flags[1]==1)) then begin
    Black_Divider(0,1);
    StartFormat(15);
    EndFormat;
  end;

  if (RepSpec.flags[1]==1) then begin
    StartFormat(15);
    OutString(0,0,USetStr(13800),false);
    OutString(60,0,USetStr(13791),false);
    OutString(120,0,USetStr(13801),false);
    OutString(3,0,USetStr(13795),false)
    OutString(4,0,USetStr(13797),true);
    OutString(5,0,USetStr(13793),false);
    EndFormat;

    Black_Divider(0,1);
    TrHs = true;
    ResetLoop(INProgr);
    INProgr.FileName = "ProdVc";
    INProgr.OrderDate = RepSpec.sStartDate;
    INProgr.ItemCode = fritem;
    while (LoopKey(thekey,INProgr,nofkeys,TrHs)) begin
      if (TestPrognosis("ProdVc",INProgr,RepSpec,INr,fritem,toitem,TrHs,bydate)) then begin
        StartFormat(15);
        OutString(0,0,INr.Recepy,false);
        OutString(60,0,INProgr.ItemCode,false);
        OutString(120,0,INr.Name,false);
        OutString(300,0,INProgr.OrderDate,false);
        OutVal(4,0,INProgr.Qty,M4UVal,true);
        OutString(5,0,INProgr.Location,false);
        EndFormat;
        qty = qty + INProgr.Qty;
      end;
    end;
    Black_Divider(0,1);
    OutString(0,0,USetStr(13798),false);
    OutVal(400,0,qty,M4Qty,true);
  end;
  EndJob;
  return;
end;

