external function Boolean GetFullCurncyRateDate(var string,Date,var val,var val,var val,var val,var val,var Date);

procedure ListExchangeRates(record RcVc RepSpec)
BEGIN
  record CurncyCodeVc ccr;
  record BaseCurBlock bascur;
  Boolean TrHs;
  val fr,to1,to2,br1,br2;
  Date ed;
  string 255 tstr;

  BlockLoad(bascur);
  TrHs = true;
  ccr.CurncyCode = "";
  while (LoopMain(ccr,1,TrHs)) begin
    if (GetFullCurncyRateDate(ccr.CurncyCode,RepSpec.d1,fr,to1,to2,br1,br2,ed)) then begin
    if (ed<=RepSpec.d1) then begin
      StartFormat(15);
      OutString(0,0,ccr.CurncyCode,false);
      OutString(60,0,ccr.Comment,false);
      OutDate(200,0,ed,false);
      if (fr<>0) then begin
        OutVal(380,0,fr,M4Rate,true);
        OutString(385,0,ccr.CurncyCode,false);
        if (to1<>0) then begin
          OutVal(460,0,to1,M4Rate,true);
          OutString(465,0,bascur.BaseCur1,false);
        end else begin
          OutVal(460,0,to2,M4Rate,true);
          OutString(465,0,bascur.BaseCur2,false);
        end;
      end else begin
        OutVal(380,0,100,M4Rate,true);
        OutString(385,0,ccr.CurncyCode,false);
        OutVal(460,0,to1,M4Rate,true);
        OutString(465,0,bascur.BaseCur1,false);
      end;
      EndFormat;
    end;  
    end;  
  end;
END;

global
procedure ERDateRn(var record RcVc RepSpec)
BEGIN
  String 20 datstr;
  
  if (blankdate(RepSpec.d1)) then begin
    RepSpec.d1 = CurrentDate;
  end;
  StartReportJob(USetStr(6700));
  datstr = PackStrDate(RepSpec.d1);
  Header(1,datstr,1);
  EndHeader;
  StartFormat(15);
  OutString(0,0,USetStr(6699),false);
  OutString(60,0,USetStr(6698),false);
  OutString(200,0,USetStr(6697),false);
  OutString(400,0,USetStr(6696),true);
  OutString(480,0,USetStr(6695),true);
  EndFormat;
  Gray_Divider(0,1);
  ListExchangeRates(RepSpec);
  EndJob;
  RETURN;
END;
