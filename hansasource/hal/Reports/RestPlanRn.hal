external function Boolean ReadRestOpenHours(string,var record RestOpenHoursVc);
external procedure HT2Per(Date, Date , var string);
external function LongInt DateDiff(Date,Date);

global
procedure RestPlanningRn(record RcVc RepSpec)
BEGIN
  record RestBookingVc RestBookingr;
  record RestBookTypeVc RestBookTyper;
  record RestOpenHoursVc ROHr;
  Boolean found,testf;
  Date dat;
  string 200 tstr;
  Integer rw;
  LongInt i;
  Array string 10 typearrs;
  Array string 60 typearrscom;
  Array LongInt typearrc;
  LongInt typecnt,rwcnt;
  Time lasttime,bltim;
  Boolean printedf;
  
  typecnt = 0;
  rw = 1;
  ReadRestOpenHours("",ROHr);
  StartReportJob(USetStr(12485));
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
  Header(rw,USetStr(12482) & " " & ROHr.Seats,1);
  EndHeader;
  SetRepCol(2,20);
  SetRepCol(3,150);
  SetRepCol(4,260);
  SetRepCol(5,340);
  SetRepCol(6,410);
  SetRepCol(7,50);
  SetRepCol(8,200);
  SetRepCol(9,440);
  StartFormat(15);
  OutString(2,0,USetStr(12487),false);
//  OutString(3,0,USetStr(12488),false);
  OutString(4,0,USetStr(12489),false);
  OutString(5,0,USetStr(12490),false);
  OutString(6,0,USetStr(12491),true);
  OutString(9,0,USetStr(12494),true);
  OutString(1,0,USetStr(12492),true);
  EndFormat;
  RestBookTyper.Code = "";
  while (LoopMain(RestBookTyper,1,true)) begin
    typearrs[typecnt] = RestBookTyper.Code;
    typearrscom[typecnt] = RestBookTyper.Comment;
    typearrc[typecnt] = 0;
    typecnt = typecnt + 1;
  end;
  dat = RepSpec.sStartDate;
  while (DateDiff(dat,RepSpec.sEndDate)<=0) begin
    lasttime = bltim;
    printedf = false;
    found = true;
    for (i=0;i<typecnt;i=i+1) begin
      typearrc[i] = 0;
    end;
    RestBookingr.BookDate = dat;
    ResetLoop(RestBookingr);
    while (LoopKey("BookTime",RestBookingr,1,found)) begin
      if (RestBookingr.BookDate!=dat) then begin
        found = false;
      end;
      testf = true;
      if (found==false) then begin
        testf = false;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (RepSpec.f1!=RestBookingr.CUCode) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.f4)) then begin
        if (RepSpec.f4!=RestBookingr.Type) then begin
          testf = false;
        end;
      end;
      if (testf) then begin
        if (printedf==false) then begin
          Gray_Divider(0,1);
          StartFormat(15);
          OutString(0,0,dat,false);
          EndFormat;
          Gray_Divider(0,1);
          StartFormat(15);
          printedf = true;
        end;
        if (lasttime!=RestBookingr.BookStart) then begin
          lasttime = RestBookingr.BookStart;
          StartFormat(15);
          OutString(0,0,lasttime,false);
          EndFormat;
        end;
        if (nonblank(RestBookingr.CUName)) then begin
          tstr = RestBookingr.CUName;
        end;
        if (nonblank(tstr)) then begin
          tstr = tstr & " / ";
        end;
        tstr = tstr & RestBookingr.Contact;
        tstr = RestBookingr.CUName & "/" & RestBookingr.Contact;
        StartFormat(15);
        if ((blank(RepSpec.f1)) and (nonblank(RestBookingr.CUCode))) then begin
          OutStringID(2,"RestBookCust",tstr,false,RestBookingr.CUCode);
        end else begin
          OutStringID(2,"RestBookID",tstr,false,RestBookingr.SerNr);
        end;
        OutString(4,0,RestBookingr.Phone,false);
        OutString(5,0,RestBookingr.Type,false);
        OutString(6,0,RestBookingr.Persons,true);
        OutString(9,0,RestBookingr.Table,true);
        OutString(1,0,Left(RestBookingr.BookEnd,5),true);
        EndFormat;
        if (RepSpec.ArtMode==1) then begin
          rwcnt = LineTextCnt(RestBookingr);
          for (i=0;i<rwcnt;i=i+1) begin
            tstr = LineTextGet(RestBookingr,i);
            StartFormat(15);
            OutString(7,0,tstr,false);
            EndFormat;
          end;  
        end;
        for (i=0;i<typecnt;i=i+1) begin
          if (typearrs[i]==RestBookingr.Type) then begin
            typearrc[i] = typearrc[i] + RestBookingr.Persons;
          end;
        end;
      end;
    end;
    if (printedf) then begin
      Gray_Divider(0,1);
      for (i=0;i<typecnt;i=i+1) begin
        if (typearrc[i]>0) then begin
          tstr = USetStr(12486);
          if (nonblank(typearrscom[i])) then begin
            tstr = tstr & " " & typearrscom[i];
          end else begin
            tstr = tstr & " " & typearrs[i];
          end;
          StartFormat(15);
          OutString(0,0,tstr,false);
          OutString(8,0,typearrc[i],false);
          EndFormat;
        end;
      end;
      StartFormat(15);
      EndFormat;
    end;
    dat = AddDay(dat,1);
  end;
  EndJob;
  RETURN;
END;
