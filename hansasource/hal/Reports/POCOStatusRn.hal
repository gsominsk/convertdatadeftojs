
global
procedure POCOStatusRn(record RcVc RepSpec)
begin 
  record POCOVc POCOr;
  row POCOVc POCOrw;  
  record POVc POr;
  row POVc POrw;
  integer ar,i,rw;
  date sdate,edate;
  longint sn;
  boolean testf,TrHs;
  string 255 tstr;
  val ss;
  record VIVc VIr;
  row VIVc VIrw;
  record PUVc PUr;
  row PUVc PUrw;
  
  StartReportJob(USetStr(11551));
  tstr=UsetStr(11552) & RepSpec.f1; 
  Header(1,tstr,1);
  EndHeader;  
  sn=RepSpec.f1;    
  POCOr.SerNr=sn;
  if (ReadFirstMain(POCOr,1,true)) then begin
    StartFormat(15);
    OutString(0,0,USetStr(11553),false);
    OutString(80,0,USetStr(11554),false);
    OutString(150,0,USetStr(11555),false);
    OutString(1,0,USetStr(11562),true);
    EndFormat;
    Gray_Divider(0,1);
    StartFormat(15);
    OutString(0,0,POCOr.SerNr,false);
    OutString(80,0,POCOr.TransDate,false);
    OutString(150,"DblVEVc",POCOr.VECode,false);
    OutString(200,0,POCOr.Addr0,false);
    OutString(1,0,POCOr.PlanShip,true);
    EndFormat;
    ar=MatRowCnt(POCOr);
    StartFormat(15);
    OutString(0,0,USetStr(11556),false);
    OutString(80,0,USetStr(11557),false);
    OutString(340,0,USetStr(11558),true);
    OutString(400,0,USetStr(11559),true);
    OutString(1,0,USetStr(11560),true);   
    EndFormat;
    Gray_Divider(0,1);
    for (i=0;i<ar;i=i+1) begin
      MatRowGet(POCOr,i,POCOrw);
      StartFormat(15);
      OutString(0,"DblINVc",POCOrw.ArtCode,false);
      OutString(80,0,POCOrw.Spec,false);
      OutVal(340,0,POCOrw.Quant,M4UVal,true);
      OutVal(400,0,POCOrw.Ordered,M4UVal,true);
      OutVal(1,0,POCOrw.Sum,M4Val,true);    
      EndFormat;  
    end;
    Gray_Divider(80,1);
    StartFormat(15);
    OutString(80,0,USetStr(11561),false);
    OutString(340,0,POCOr.CurncyCode,true);
    OutVal(1,0,POCOr.Sum4,M4Val,true);    
    EndFormat;
  end;
  
  
  
  POr.POCOSerNr=sn;
  TrHs=true;
  StartFormat(15); EndFormat;
  StartFormat(30);
  OutString(0,0,USetStr(11563),false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(11553),false);
  OutString(80,0,USetStr(11554),false);
//  OutString(150,0,USetStr(11555),false);
  OutString(1,0,USetStr(11562),true);
  EndFormat;
  Gray_Divider(0,1);
  While (LoopKey("POCOSerNr",POr,1,TrHs))  begin
    testf=true;
    if (POr.POCOSerNr<>sn) then begin
      TrHs=false;testf=false;
    end;
    if (testf) then begin
      StartFormat(15);
      OutLongInt(0,"DblPOVc",POr.SerNr,false);
      OutDate(80,0,POr.TransDate,false);
      OutString(1,0,POr.PlanShip,true);
      EndFormat;
      ar=MatRowCnt(POr);
      for (i=0;i<ar;i=i+1) begin
        StartFormat(15);
        OutString(0,0,USetStr(11556),false);
        OutString(80,0,USetStr(11557),false);
        OutString(280,0,USetStr(11558),true);
        OutString(340,0,USetStr(11566),true);
        OutString(400,0,USetStr(11567),true);
        OutString(1,0,USetStr(11560),true);   
        EndFormat;
        MatRowGet(POr,i,POrw);
        StartFormat(15);
        OutString(0,"DblINVc",POrw.ArtCode,false);
        OutString(80,0,POrw.Spec,false);
        OutVal(280,0,POrw.Quant,M4UVal,true);
        OutVal(340,0,POrw.Shipd2,M4UVal,true);
        OutVal(400,0,POrw.Invd,M4UVal,true);
        OutVal(1,0,POrw.Sum,M4Val,true);  
        EndFormat;          
      end;
       Gray_Divider(80,1);
      StartFormat(25);
      OutString(80,0,USetStr(11561),false);
      OutString(340,0,POr.CurncyCode,true);
      OutVal(1,0,POr.Sum4,M4Val,true);    
      EndFormat;
    end;
  end;
  
  
  VIr.VECode=POCOr.VECode;
  TrHs=true;
  StartFormat(15); EndFormat;
  StartFormat(30);
  OutString(0,0,USetStr(11564),false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(11553),false);
  OutString(80,0,USetStr(11554),false);
  OutString(150,0,USetStr(11555),false);
  OutString(1,0,USetStr(11569),true);
  EndFormat; 
  Gray_Divider(0,1);
  While (LoopKey("VECode",VIr,1,TrHs))  begin
    testf=true;
    if (VIr.VECode<>POCOr.VECode) then begin
      TrHs=false;testf=false;
    end;
    if (VIr.POCOSerNr<>sn) then begin
      testf=false;
    end;
    if (testf) then begin
      StartFormat(15);
      OutLongInt(0,"DblVIVc",VIr.SerNr,false);
      OutDate(80,0,VIr.TransDate,false);
      OutString(150,"DblVEVc",VIr.VECode,false);
      OutString(200,0,VIr.VEName,false);
      OutString(1,0,VIr.InvoiceNr,true);
      EndFormat;
      ar=MatRowCnt(VIr);
      for (i=0;i<ar;i=i+1) begin
        StartFormat(15);
        OutString(0,0,USetStr(11568),false);
        OutString(80,0,USetStr(11557),false);
        OutString(270,0,USetStr(11556),false);
        OutString(400,0,USetStr(11558),true);
        OutString(1,0,USetStr(11560),true);   
        EndFormat;
        MatRowGet(VIr,i,VIrw);
        StartFormat(15);
        OutString(0,0,VIrw.AccNumber,false);
        OutString(80,0,VIrw.Comment,false);
        OutString(270,0,VIrw.Item,false);
        OutVal(400,0,VIrw.qty,M4UVal,true);
        OutVal(1,0,VIrw.Sum,M4Val,true);  
        EndFormat;          
      end;
       Gray_Divider(80,1);
      StartFormat(25);
      OutString(80,0,USetStr(11561),false);
      OutString(340,0,VIr.CurncyCode,true);
      OutVal(1,0,VIr.PayVal,M4Val,true);    
      EndFormat;
    end;
  end;
  
  PUr.VECode=POCOr.VECode;
  TrHs=true;
  StartFormat(15); EndFormat;
  StartFormat(30);
  OutString(0,0,USetStr(11565),false);
  EndFormat;
  StartFormat(15);
  OutString(0,0,USetStr(11553),false);
  OutString(80,0,USetStr(11554),false);
  OutString(150,0,USetStr(11571),false);
  OutString(1,0,USetStr(11570),true);
  EndFormat;
  Gray_Divider(0,1);
  While (LoopKey("VECode",PUr,1,TrHs))  begin
    testf=true;
    if (PUr.VECode<>POCOr.VECode) then begin
      TrHs=false;testf=false;
    end;
    if (PUr.POCOSerNr<>sn) then begin
      testf=false;
    end;
    if (testf) then begin
      StartFormat(15);
      OutLongInt(0,"DblPU",PUr.SerNr,false);
      OutDate(80,0,PUr.TransDate,false);
      OutLongInt(150,"DblPOVc",PUr.PONr,false);
      OutString(1,0,PUr.Location,true);
      EndFormat;
      ar=MatRowCnt(PUr);
      for (i=0;i<ar;i=i+1) begin
        StartFormat(15);
        OutString(0,0,USetStr(11556),false);
        OutString(80,0,USetStr(11557),false);
        OutString(280,0,USetStr(11558),true);
        OutString(400,0,USetStr(11572),true);
        OutString(1,0,USetStr(11560),true);   
        EndFormat;
        MatRowGet(PUr,i,PUrw);
        StartFormat(15);
        OutString(0,"DblINVc",PUrw.ArtCode,false);
        OutString(80,0,PUrw.Spec,false);
        OutVal(280,0,PUrw.Quant,M4UVal,true);
        OutVal(400,0,PUrw.CostPrice,M4UVal,true);
        OutVal(1,0,PUrw.Sum,M4Val,true);  
        EndFormat;          
      end;
       Gray_Divider(80,1);
      StartFormat(25);
      OutString(80,0,USetStr(11561),false);
      OutString(340,0,PUr.CurncyCode,true);
      OutVal(1,0,PUr.PayVal,M4Val,true);    
      EndFormat;
    end;
  end;
  EndJob;
  return;
end;