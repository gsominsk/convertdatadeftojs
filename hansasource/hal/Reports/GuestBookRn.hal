external function string 20 FindJobCustomerCode(record JobVc);
external function Boolean HasContactClassification();
external function Boolean HasCategories();
external procedure HTCustCat(string,var string);
external procedure HTCustClass(string,var string);
external function Boolean ContactInGroupClass(string,string,string,string,string,string);
external function Boolean IsCancelState(String);

procedure SetColumnPositions(var Integer p1,var Integer p2,var Integer p3,var Integer p4,var Integer p5,var Integer p6,var Integer p7,var Integer p8)
begin
  p1 = 0;
  p2 = 40;
  p3 = 180;
  p4 = 190;
  p5 = 250;
  p6 = 330; 
  p7 = 370;  
  p8 = 420;  
  return;
end;

procedure SetColumnPositionsHRV(var Integer p1,var Integer p2,var Integer p3,var Integer p4,var Integer p5,var Integer p6,var Integer p7,var Integer p8)
begin
  p1 = 15;
  p2 = 40;
  p3 = 140;
  p4 = 170;
  p5 = 215;
  p6 = 280; 
  p7 = 360;  
  return;
end;

procedure PrintGuestBookRow(record RcVc RepSpec,record JobVc Jobr,row JobVc Jobrw)
begin
  record CUVc CUr;
  string 255 tstr;
  Integer p1,p2,p3,p4,p5,p6,p7,p8;
  
  SetColumnPositions(p1,p2,p3,p4,p5,p6,p7,p8);
  
  StartFormat(15);
  if (RepSpec.flags[2]==0) then begin
    OutString(0,"DblProfileVc",Jobrw.GuestCode,false);
  end else begin
    OutString(0,"DblJobVc",Jobr.SerNr,false);
  end;  
  OutString(p2,0,Left(Jobrw.CUName,25),false);
  tstr = "" & Jobr.TransDate & "-" & Jobr.EndDate;
  OutString(p3,0,tstr,false);
  OutString(p6,0,Jobr.ResCode,false); 
  CUr.Code = Jobrw.GuestCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    tstr = "";
    tstr = CUr.Nationality;
    if (nonblank(tstr)) then begin
      if (nonblank(CUr.PassportNr)) then begin
        tstr = tstr & "/" & CUr.PassportNr;
      end;
    end else begin
      tstr = CUr.PassportNr;
    end;
    OutString(p7,0,tstr,false); 
  end;
  EndFormat;
  return;
end;

procedure PrintForeignGuestDataHRV(record CUVc CUr,Integer p2,Integer p5)
begin
  record CountryVc Countryr;

  OutString(0,0,CUr.DocType,false);
  OutString(p2,0,CUr.PassportNr,false);
  Countryr.Code = CUr.Nationality;
  ReadFirstMain(Countryr,1,true);
  OutString(p5,0,Countryr.Comment,false);
  return;
end;

procedure PrintGuestBookRowHRV(record RcVc RepSpec,record JobVc Jobr,row JobVc Jobrw)
begin
  record CUVc CUr;
  string 255 tstr;
  Integer p1,p2,p3,p4,p5,p6,p7,p8;
  Boolean printedforeignf;
  
  SetColumnPositionsHRV(p1,p2,p3,p4,p5,p6,p7,p8);
  CUr.Code = Jobrw.GuestCode;
  ReadFirstMain(CUr,1,true);
  
  StartFormat(15);
  if (RepSpec.flags[2]==0) then begin
    OutString(0,"DblProfileVc",Jobrw.GuestCode,false);
  end else begin
    OutString(0,"DblJobVc",Jobr.SerNr,false);
  end;  
  OutString(p2,0,Left(Jobrw.CUName,25),false);
  switch (CUr.Gender) begin
    case 0: OutString(p3,0,USetStr(33482),false);
    case 1: OutString(p3,0,USetStr(33483),false);
  end;
  OutDate(p4,0,CUr.BirthDate,false);
  OutString(p5,0,CUr.BirthPlace,false);
  tstr = "" & Jobr.TransDate & "-" & Jobr.EndDate;
  OutStringID(p6,"DblJobVcID",tstr,false,Jobr.SerNr);
  OutString(p7,0,CUr.InvAddr0,false);
  EndFormat;
  if (nonblank(CUr.InvAddr1)) then begin
    StartFormat(15);
    if (nonblank(CUr.Nationality)) and (printedforeignf==false) then begin
      PrintForeignGuestDataHRV(CUr,p2,p5);
      printedforeignf = true;
    end;
    OutString(p7,0,CUr.InvAddr1,false);
    EndFormat;
  end;
  if (nonblank(CUr.InvAddr2)) then begin
    StartFormat(15);
    OutString(p7,0,CUr.InvAddr2,false);
    if (nonblank(CUr.Nationality)) and (printedforeignf==false) then begin
      PrintForeignGuestDataHRV(CUr,p2,p5);
      printedforeignf = true;
    end;
    EndFormat;
  end;
  if (nonblank(CUr.InvAddr3)) then begin
    StartFormat(15);
    OutString(p7,0,CUr.InvAddr3,false);
    if (nonblank(CUr.Nationality)) and (printedforeignf==false) then begin
      PrintForeignGuestDataHRV(CUr,p2,p5);
      printedforeignf = true;
    end;
    EndFormat;
  end;
  if (nonblank(CUr.InvAddr4)) then begin
    StartFormat(15);
    OutString(p7,0,CUr.InvAddr4,false);
    if (nonblank(CUr.Nationality)) and (printedforeignf==false) then begin
      PrintForeignGuestDataHRV(CUr,p2,p5);
      printedforeignf = true;
    end;
    EndFormat;
  end;
  if (nonblank(Jobrw.VisaNo) or nonblank(Jobrw.VisaType)) then begin
    StartFormat(15);
     OutString(0,0,Jobrw.VisaNo,false);
     OutString(p2,0,Jobrw.VisaType,false);
     OutDate(p4,0,Jobrw.VisaValid,false);
    EndFormat;
  end;
  return;
end;

global
procedure GuestBookRn(record RcVc RepSpec)
begin
  record JobVc Jobr;
  Boolean found,testf;
  Integer p1,p2,p3,p4,p5,p6,p7,p8;
  Integer rwcnt,i,rw;
  Row JobVc Jobrw;
  string 255 tstr;
  string 255 frcu,tocu,custcode;
  LongInt frnr,tonr;
  Integer lenclass;
  Date blankd;
   
  StartReportJob(USetStr(9945));
  rw = 1;
  if (HasCategories) then begin
    HTCustCat(RepSpec.f4,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;
  if (HasContactClassification) then begin
    HTCustClass(RepSpec.f5,tstr);
    if (nonblank(tstr)) then begin
      Header(rw,tstr,1);
      rw = rw + 1;
    end;
  end;  
  EndHeader;

  frnr = FirstInRange(RepSpec.f2,20);
  tonr = LastInRange(RepSpec.f2,20);
  frcu = FirstInRange(RepSpec.f3,20);
  tocu = LastInRange(RepSpec.f3,20);
  if (HasLocalization("HRV")) then begin
    SetColumnPositionsHRV(p1,p2,p3,p4,p5,p6,p7,p8);
    StartFormat(15);
    OutString(p1,0,USetStr(33480),false);
    OutString(p2,0,USetStr(9947),false);
    OutString(p3,0,USetStr(9952),false);
    OutString(p4,0,USetStr(9953),false);
    OutString(p5,0,USetStr(9954),false);
    OutString(p6,0,USetStr(9951),false);
    OutString(p7,0,USetStr(33481),false);
    EndFormat;
  end else begin
    SetColumnPositions(p1,p2,p3,p4,p5,p6,p7,p8);
    StartFormat(15);
    OutString(p1,0,USetStr(9946),false);
    OutString(p2,0,USetStr(9947),false);
    OutString(p3,0,USetStr(9951),false);
    OutString(p6,0,USetStr(9919),false);
    OutString(p7,0,USetStr(9948) & "/" & USetStr(9949),false);
    EndFormat;
  end;
  Gray_Divider(0,1);

  lenclass = 4;
  while (lenclass>=0) begin
    ResetLoop(Jobr);
    Jobr.LengthClass = lenclass;
    Jobr.TransDate = RepSpec.sStartDate;
    switch (lenclass) begin
      case 4: Jobr.TransDate = blankd;
      case 3: Jobr.TransDate = AddDay(Jobr.TransDate,-366);
      case 2: Jobr.TransDate = AddDay(Jobr.TransDate,-31);
      case 1: Jobr.TransDate = AddDay(Jobr.TransDate,-7);
      case 0: ;
    end;
    found = true;
    while (LoopKey("LengthClass",Jobr,2,found)) begin
      if (Jobr.LengthClass!=lenclass) then begin found = false; end;
      if (Jobr.TransDate>RepSpec.sEndDate) then begin found = false; end;
      if (found) then begin      
        testf = true;
        if (nonblank(RepSpec.f1)) then begin
          if (Jobr.ResStatus!=RepSpec.f1) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.f2)) then begin
          if (Jobr.SerNr<frnr) then begin testf = false; end;
          if (Jobr.SerNr>tonr) then begin testf = false; end;
        end;
        if (nonblank(RepSpec.f3)) then begin
          if (Jobr.CUCode<frcu) then begin testf = false; end;
          if (Jobr.CUCode>tocu) then begin testf = false; end;
        end;
        if (testf) then begin      
          if (IsCancelState(Jobr.ResStatus)) then begin
            testf = false;
          end;
        end;
        if (testf) then begin      
          rwcnt = MatRowCnt(Jobr);
          for (i=0;i<rwcnt;i=i+1) begin
            MatRowGet(Jobr,i,Jobrw);
            testf = true;
            if (testf) then begin
              testf = ContactInGroupClass(Jobrw.GuestCode,RepSpec.f4,RepSpec.f5,"CUST","","");
            end;            
            if (testf) then begin 
              if (HasLocalization("HRV")) then begin
                PrintGuestBookRowHRV(RepSpec,Jobr,Jobrw);
              end else begin
                PrintGuestBookRow(RepSpec,Jobr,Jobrw);
              end;            
            end;
          end;
        end;
      end;
    end;
    lenclass = lenclass - 1;
  end;  
  EndJob;
  return;
end;
