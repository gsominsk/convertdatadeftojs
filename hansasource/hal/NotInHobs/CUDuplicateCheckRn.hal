external inner function Integer GetCompanyCodeFromCode(Integer);

event startup
begin

  SetLangMode(LangEnglish,"ENG",0);
  
  Report("Contacts Duplicates Check",CUDuplicateCheckRClass,CUDuplicateCheckRn,0,modCRM);

  return;
end;

event DefineWindows
begin
  Real h,h1,h2,h3,h4,h5,h6,h7,hs,hm,v,v3,l,vs,vm,f,t,x,v2;

  SetLangMode(LangEnglish,"ENG",0);

  WindowBegin("Specify Contacts Duplicates Check",CUDuplicateCheckRClass,CGRcW,RcType);
  SetWRect(20,80,450,200);
  vs = 20;
  ButtonFrame(h=120,vm=(v+=45),l=140,2,"Check Contacts");
  RadioButton(h,v,0,0,"Current Company",flags[0]);
  RadioButton(h,v+=16,1,0,"All Companies",flags[0]);
  EndWindow;

  return;
end;

function Boolean DuplicatesCheck(record CUVc CUr,Integer oldcomp,string curcompcode)
begin
  Boolean res;
  record CUVc lCUr;
  Boolean found,firstf;
  record CompaniesBlock CBb;
  row CompaniesBlock CBbrw;
  Integer i,rwcnt;
  
  firstf = true;
  BlockLoad(CBb);
  rwcnt = MatRowCnt(CBb);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CBb,i,CBbrw);
    if (oldcomp!=i+1) then begin
    if (blank(CBbrw.TCPIP)) and (blank(CBbrw.PresenceCode)) then begin
      if (SetCompanyCode(CBbrw.CompCode,false)) then begin
        lCUr.Code = CUr.Code;
        if (ReadFirstMain(lCUr,1,true)) then begin
/*        
          if (firstf) then begin
            StartFormat(15);
             OutString(0,0,CUr.Code,false);
             OutStringID(100,"DblCUVc",CUr.Name,false,CUr.Code);
            EndFormat;
            Gray_Divider(0,200);
          end;
*/          
          if (blank(curcompcode)) then begin
            StartFormat(15);
             OutString(0,0,CUr.Code,false);
             OutStringID(100,"DblCUVc",CUr.Name,false,CUr.Code);
             OutString(270,0,CBbrw.CompName,false);
             OutStringID(350,"DblCUVc",lCUr.Name,false,lCUr.Code);
            EndFormat;
          end else begin
            StartFormat(15);
             OutString(0,0,curcompcode,false);
             OutString(50,0,CUr.Code,false);
             OutStringID(150,"DblCUVc",CUr.Name,false,CUr.Code);
             OutString(270,0,CBbrw.CompName,false);
             OutStringID(350,"DblCUVc",lCUr.Name,false,lCUr.Code);
            EndFormat;
          end;
          res = true;
        end;
      end;
    end;
    end;
  end;
  if (SetCompany(oldcomp,false)) then begin
  end;
  DuplicatesCheck = res;
  return;
end;

global
procedure CUDuplicateCheckRn(record RcVc RepSpec)
begin
  record CUVc CUr;
  Boolean found,testf,printedf;
  record CompaniesBlock CBb;
  row CompaniesBlock CBbrw;
  Integer i,rwcnt;
  Integer oldcomp;
  
  StartReportJob("Contacts Duplicates Check");
  EndHeader;

  StartFormat(15);
   OutString(0,0,"Customers with same Code",false);
  EndFormat;
  if (RepSpec.flags[0]==0) then begin
    StartFormat(15);
     OutString(0,0,"Code",false);
     OutString(100,0,"Cust. Name",false);
     OutString(250,0,"Company",false);
     OutString(350,0,"Cust. Name",false);
    EndFormat;
  end else begin
    StartFormat(15);
     OutString(0,0,"Company",false);
     OutString(50,0,"Code",false);
     OutString(150,0,"Cust. Name",false);
     OutString(270,0,"Company",false);
     OutString(350,0,"Cust. Name",false);
    EndFormat;
  end;
  Gray_Divider(0,1);
  
  switch (RepSpec.flags[0]) begin
    case 0:
      found = true;
      while (LoopMain(CUr,1,found)) begin
        if (found) then begin
          testf = true;
          if (testf) then begin
            DuplicatesCheck(CUr,CurrentCompany,"");
          end;
        end;
      end;  
    case 1:
      oldcomp = CurrentCompany;
      BlockLoad(CBb);
      rwcnt = MatRowCnt(CBb);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(CBb,i,CBbrw);
        if (blank(CBbrw.TCPIP)) and (blank(CBbrw.PresenceCode)) then begin
          if (SetCompanyCode(CBbrw.CompCode,false)) then begin
            ResetLoop(CUr);
            found = true;
            while (LoopMain(CUr,1,found)) begin
              if (found) then begin
                testf = true;
                if (testf) then begin
                  printedf = DuplicatesCheck(CUr,CurrentCompany,CBbrw.CompCode);
                end;
              end;
            end;  
          end;
          if (printedf) then begin
            Gray_Divider(0,1);
          end;
        end;
      end;
      ResetCompany(oldcomp);
  end;
  EndJob;
  return;
end;
