external function roundmode DefaultRoundMode();
external procedure CalcExtra(val,string,var val);
external procedure CalcSum(val,val,val,val,var val,Integer);
external function Integer DateGetIntMonth(Date);
external procedure Bud1Sumup(var record Bud1Vc);
external procedure FindFiscalYear(Date,var Date,var Date);
external procedure POSumup(var record POVc);
external procedure SetPOFlags(record POVc,Boolean);
external procedure MulM4OneRate(val,val,var val,roundmode,Boolean);
external procedure PUCalcCostPrice(string,val,Integer,Integer,string,string,
                                   val,val,val,val,val,
                                   val,val,val,val,val,val,
                                   string,var val,val,var val,string,Integer);
external function Integer GetIntYc(Date);
external procedure ORRowInsertValues(record ORVc,row ORVc,Integer);
external procedure OPSumup(var record OPVc,Boolean);
external procedure SetSalesMan(var string,string);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure GetPriceList(string,Date,Time,var string,var Integer);
external procedure IVRowInsertValues(record IVVc,row IVVc,Integer);
external procedure IPSumup(var record IPVc);
external procedure SetIPFlags(record IPVc);
external function val MulRateToBase1(var string,val,val,val,val,val,val,roundmode);
external procedure GetBaseCurncy(Integer,var string);

global
procedure ReadImportTagAssetsRecord(record ATVc ATr)
begin
  row ATVc ATrw;
  val deprv;
  Date deprd;
  string 255 mod1,mod2;

  RecordNew(ATr);
  ATr.Code = ImportField;
  ATr.Description = ImportField;
  ATr.ATClass = ImportField;
  ATr.Owner = ImportField;
  ATr.Department = ImportField;
  ATr.SerialNo = ImportField;
  ATr.PurchaseDate = StringToDate(ImportField);
  ATr.Comment = ImportField;
  deprv = StringToVal(ImportField,M4Val);
  deprd = StringToDate(ImportField);
  ATr.BookedDepr = StringToVal(ImportField,M4Val);
  ATr.PurchVal = StringToVal(ImportField,M4Val);
  ATr.EndDate = StringToDate(ImportField);
  mod1 = ImportField;
  mod2 = ImportField;
  ATr.VECode = ImportField;
  ATr.VEName = ImportField;
  ClearRow(ATr,ATrw,1);
  ATrw.StartDate = deprd;
  ATrw.StartVal = deprv;
  ATrw.Model1 = mod1;
  ATrw.Model2 = mod2;
  ATrw.Comment = "";
  MatRowPut(ATr,0,ATrw);    
  return;
end;

global
procedure ReadImportTagProj2Record(record PRVc PRr)
begin
  row PRVc PRrw;
  Integer cnt,rwcnt;

    RecordNew(PRr);  
    PRr.Code = ImportField;
    PRr.CustCode = ImportField;
    PRr.Name = ImportField;
    PRr.Desc0 = ImportField;
    PRr.Desc1 = ImportField;
    PRr.Desc2 = ImportField;
    PRr.CustName = ImportField;
    PRr.Terminated = StringToInt(ImportField);
    PRr.StopInvoicing = StringToInt(ImportField);
    PRr.Leader = ImportField;
    PRr.LeaderName = ImportField;
    PRr.StartDate = StringToDate(ImportField);
    PRr.EndDate = StringToDate(ImportField);
    PRr.InvoiceTime = StringToInt(ImportField);
    PRr.InvoicePurch = StringToInt(ImportField);
    PRr.InvoiceStock = StringToInt(ImportField);
    PRr.NoInvBefore = StringToDate(ImportField);
    PRr.BuildOn = StringToInt(ImportField);
    PRr.Contact = ImportField;
    PRr.PRCodeOnInv = StringToInt(ImportField);
    PRr.PRNameOnInv = StringToInt(ImportField);
    PRr.PRContOnInv = StringToInt(ImportField);
    PRr.PRTextOnInv = StringToInt(ImportField);

    PRr.TimexSum = StringToVal(ImportField,M4Val);
    PRr.PurSum = StringToVal(ImportField,M4Val);
    PRr.TotSum = StringToVal(ImportField,M4Val);
    PRr.TimBudModel = StringToInt(ImportField);
    PRr.PurBudModel = StringToInt(ImportField);
    PRr.Type = StringToInt(ImportField);
    PRr.PRClass = ImportField;
    PRr.Text0 = ImportField;
    PRr.Text1 = ImportField;
    PRr.Text2 = ImportField;
    PRr.Text3 = ImportField;
    PRr.Text4 = ImportField;
    PRr.Text5 = ImportField;
    PRr.Text6 = ImportField;
    PRr.Text7 = ImportField;
    PRr.Text8 = ImportField;
    PRr.Text9 = ImportField;
    PRr.DownPaySent = StringToVal(ImportField,M4Val);
    PRr.DownPayRedcd = StringToVal(ImportField,M4Val);
    PRr.Objects = ImportField;
    PRr.TimeAvgPriOnInv = StringToInt(ImportField);
    PRr.TimeAvgQtyOnInv = StringToInt(ImportField);
    PRr.PurcAvgPriOnInv = StringToInt(ImportField);
    PRr.PurcAvgQtyOnInv = StringToInt(ImportField);
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(PRr,PRrw,1);
      PRrw.PlanDate = StringToDate(ImportField);
      PRrw.InvNr = StringToLongInt(ImportField);
      PRrw.ValStr = StringToVal(ImportField,M4Val);
      PRrw.Person = ImportField;
      PRrw.Comment = ImportField;
      PRrw.InvFlag = StringToInt(ImportField);
      MatRowPut(PRr,rwcnt,PRrw);
      rwcnt = rwcnt + 1;
    end;
  return;
end;

global
procedure ReadImportTagShipDealsRecord(record ShipDealVc ShipDealr)
begin
  RecordNew(ShipDealr);  
  ShipDealr.Code = ImportField;
  ShipDealr.Comment = ImportField;
  return;
end;

global
procedure ReadImportTagUnitsRecord(record UnitVc Unitr)
begin
  RecordNew(Unitr);  
  Unitr.Code = ImportField;
  Unitr.Comment = ImportField;
  return;
end;

global
procedure ReadImportTagDprModsRecord(record DprModVc DprModr)
begin
  RecordNew(DprModr);  
  DprModr.Code = ImportField;
  DprModr.Description = ImportField;
  DprModr.DeprMethod = StringToInt(ImportField);
  DprModr.DeprPerc = StringToVal(ImportField,M45Val);
  DprModr.DeprRnd = StringToInt(ImportField);
  DprModr.DeprPeriod = StringToInt(ImportField);
  DprModr.LifecycleYears = StringToLongInt(ImportField);
  DprModr.LifecycleDays = StringToLongInt(ImportField);
  DprModr.DeprCalc = StringToInt(ImportField);  
  return;
end;

global
procedure ReadImportTagVarietiesRecord(record VARVc VARr)
begin
  RecordNew(VARr);  
  VARr.Code = ImportField;
  VARr.Comment = ImportField;
  VARr.VARGCode = ImportField;
  VARr.TerminateFlag = StringToInt(ImportField);
  return;
end;

global
procedure ReadImportTagSuppliersRecord(record VEVc VEr)
begin
    RecordNew(VEr);  
    VEr.Code = ImportField;
    VEr.Name = ImportField;
    VEr.Person = ImportField;
    if (NextImportLine(true)) then begin end;
    VEr.Addr0 = ImportField;
    VEr.Addr1 = ImportField;
    VEr.Addr2 = ImportField;
    if (NextImportLine(true)) then begin end;
    VEr.Phone = ImportField;
    VEr.Fax = ImportField;
    VEr.Comment = ImportField;
    VEr.PayDeal = ImportField;
    VEr.ExportFlag = StringToInt(ImportField);
    VEr.CustID = ImportField;
    VEr.BankAcc = ImportField;
    VEr.AccAP = ImportField;
    VEr.AccCost = ImportField;
    VEr.PRCode = ImportField;
    VEr.BankName = ImportField;
    VEr.SearchKey = ImportField;
    VEr.CurncyCode = ImportField;
    VEr.CountryCode = ImportField;
    VEr.Objects = ImportField;
  return;
end;

global
procedure ReadImportTagTimeSheetRecord(record TSVc TSr)
begin
  row TSVc TSrw;
  Integer rwcnt;

    RecordNew(TSr);  
    TSr.SumOther = blankval;
    TSr.SerNr = StringToLongInt(ImportField);
    TSr.RegDate = StringToDate(ImportField);
    TSr.OKFlag = StringToInt(ImportField);
    TSr.OKMark = StringToInt(ImportField);
    TSr.Comment = ImportField;
    TSr.Sign = ImportField;
    TSr.Sum = StringToVal(ImportField,M4Val);
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(TSr,TSrw,1);
      TSrw.stp = 1;
      TSrw.ovst = 0;
      TSrw.date = StringToDate(ImportField);
      TSrw.EMCode = ImportField;
      TSrw.PRCode = ImportField;
      TSrw.ArtCode = ImportField;
      TSrw.Qty = StringToVal(ImportField,M4Qty);
      TSrw.Spec = ImportField;
      TSrw.RowType = StringToInt(ImportField);
      TSrw.ItemType = 3;
      MatRowPut(TSr,rwcnt,TSrw);
      rwcnt = rwcnt + 1;
    end;
  return;
end;

global
procedure ReadImportTagArtikelInfo1RecordRead(record INVc INr)
begin
  row INVc INrw;
  string 255 tstr;
  Integer rwcnt,i;
  
  RecordNew(INr);
  INr.Code = ImportField;
  INr.Name = ImportField;
  INr.Unittext = ImportField;
  INr.MinLevel = StringToVal(ImportField,M4Qty);
  INr.Objects = ImportField;
  INr.SalesAcc = ImportField;
  INr.UPrice1 = StringToVal(ImportField,M423Val);
  INr.ItemType = StringToInt(ImportField);
  INr.Group = ImportField;
  tstr = ImportField;
  tstr = ImportField;
  INr.InPrice = StringToVal(ImportField,M45Val);
  INr.InvCode = ImportField;
  INr.ExtraCost = StringToVal(ImportField,M4Val);
  INr.SerNrf = StringToInt(ImportField);
  INr.Department = ImportField;
  INr.Weight = StringToVal(ImportField,M45Val);
  INr.Volume = StringToVal(ImportField,M45Val);
  INr.EUCodex = ImportField;
  INr.InCurncyCode = ImportField;
  INr.Bonus = StringToVal(ImportField,M4Val);
  INr.Recepy = ImportField;
  INr.Markup = StringToVal(ImportField,M4Val);
  tstr = ImportField;
  if (tstr=="1") then begin
    INr.ItemType = 2;
  end;
  INr.BarCode = ImportField;
  INr.UpdateCost = StringToInt(ImportField);
  INr.LastPriceChange = StringToDate(ImportField);
  INr.CalcPrice = ImportField;
  INr.VATCode = ImportField;
  tstr = ImportField;
  if (nonblank(tstr)) then begin
    INr.PriceFactor = StringToVal(tstr,M45Val);
  end else begin
    INr.PriceFactor = BlankVal;
  end;
  INr.Terminated = StringToInt(ImportField);
  INr.AvgMarkup = StringToVal(ImportField,M4Val);
  INr.LastPurchPrice = StringToVal(ImportField,M45Val);
  INr.LastPurchCurncyCode = ImportField;
  INr.WeighedAvPrice = StringToVal(ImportField,M45Val);
  INr.Conversion1 = StringToVal(ImportField,M45Val);
  INr.Conversion2 = StringToVal(ImportField,M45Val);
  INr.WarrantyLength = StringToVal(ImportField,M4Qty);
  INr.InvRecepy = ImportField;
  INr.EUSalesAcc = ImportField;
  INr.ExpSalesAcc = ImportField;
  INr.VATCodeEU = ImportField;
  INr.VATCodeExp = ImportField;
  INr.ChangePrice = StringToInt(ImportField);
  INr.RebCode = ImportField;
  INr.ExplodeRec = StringToInt(ImportField);
  INr.Unittext2 = ImportField;
  INr.UnitCoefficient = StringToVal(ImportField,M45Val);
  INr.WarnText1 = ImportField;
  INr.VARList = ImportField;
  INr.ItemMaterial = StringToInt(ImportField);
  INr.AlcPrc = StringToVal(ImportField,M4UVal);
  INr.DefaultSource = ImportField;
  INr.AlternativeCode = ImportField;
  INr.CostAcc = ImportField;
  INr.DefLocation = ImportField;
  INr.LastBasePriceChange = StringToDate(ImportField);
  INr.MaxLevel = StringToVal(ImportField,M4Qty);
  INr.LastPurchPrice2 = StringToVal(ImportField,M45Val);
  INr.Width = StringToVal(ImportField,M4UVal);
  INr.Height = StringToVal(ImportField,M4UVal);
  INr.Depth = StringToVal(ImportField,M4UVal);
  INr.ContractItem = ImportField;
  INr.Internal = StringToInt(ImportField);
  INr.InclItemFreight = StringToInt(ImportField);
  INr.FixedFreight = StringToVal(ImportField,M4Val);
  INr.DispGroups = ImportField;
  INr.HazLevCode = ImportField;
  INr.Density = StringToVal(ImportField,M45Val);
  INr.xClassification = ImportField;
  INr.CredSalesAcc = ImportField;
  INr.CredEUSalesAcc = ImportField;
  INr.CredExpSalesAcc = ImportField;
  INr.CredVATCode = ImportField;
  INr.CredVATCodeEU = ImportField;
  INr.CredVATCodeExp = ImportField;
  INr.RentalItem = ImportField;
  return;
end;

global
procedure ReadImportTagAccountsRecord(record AccVc Accr)
begin
    RecordNew(Accr);
    Accr.AccNumber = ImportField;
    Accr.Comment = ImportField;
    Accr.AccType = StringToInt(ImportField);
    Accr.NVD = StringToInt(ImportField);
    Accr.NVC = StringToInt(ImportField);
    Accr.AutCode = ImportField;
    Accr.blockedFlag = StringToInt(ImportField);
    Accr.VATCode = ImportField;
    Accr.ControlType = StringToInt(ImportField);
    Accr.Curncy = ImportField;
    Accr.ConsAccNumber = ImportField;
    Accr.Conspr = StringToInt(ImportField);
    Accr.Objects = ImportField;        
  return;
end;

global
procedure ReadImportTagReceiptsRecord(record IPVc IPr,Integer ver)
begin
  row IPVc IPrw;
  Integer rwcnt;
  string 255 tstr;
  val temp,excost,fr,to1,to2,br1,br2;
  string 10 curncy,basecur;
  Date paydate;
  LongInt invoicenr,latedays;
  val payval,credval,rebval;
  string 60 custcode,custname;

    RecordNew(IPr);  
if (ver==3) then begin    
    GetBaseCurncy(1,basecur);
    tstr = ImportField;
    IPr.SerNr = StringToLongInt(tstr);
    IPr.Comment = ImportField;
    IPr.PayMode = ImportField;
    IPr.CurPayVal = StringToVal(ImportField,M4Val);
    IPr.RegDate = StringToDate(ImportField);
    IPr.OKFlag = StringToInt(ImportField);
    temp = StringToVal(ImportField,M4Val);
    tstr = ImportField;
    IPr.TransDate = StringToDate(ImportField);
    curncy = ImportField;
    to1 = StringToVal(ImportField,M4Rate);
    excost = StringToVal(ImportField,M4Val);
    temp = StringToVal(ImportField,M4Val);
    IPr.ARonTR = StringToInt(ImportField);
    IPr.ExportedFlag = StringToInt(ImportField);
    IPr.ReceivedFlag = StringToInt(ImportField);
    IPr.RejectedFlag = StringToInt(ImportField);
    tstr = ImportField;
    IPr.RecNumber = ImportField;
    fr = StringToVal(ImportField,M4Rate);
    to2 = StringToVal(ImportField,M4Rate);
    br1 = StringToVal(ImportField,M4Rate);
    br2 = StringToVal(ImportField,M4Rate);
    IPr.Objects = ImportField;    
    rwcnt = 0;
    while (NextImportLine(false)) begin
      IPrw.stp = StringToInt(ImportField);
      ClearRow(IPr,IPrw,IPrw.stp);
      IPrw.ovst = StringToInt(ImportField);
      switch (IPrw.stp) begin
        case 1:
          IPrw.InvoiceNr = StringToLongInt(ImportField);
          IPrw.CustCode = ImportField;
          IPrw.PayDate = StringToDate(ImportField);
          IPrw.CustName = ImportField;
          IPrw.BankVal = StringToVal(ImportField,M4Val);
          IPrw.latedays = StringToLongInt(ImportField);
          if (nonblankdate(IPrw.PayDate)) then begin
            IPrw.PayDate = IPr.TransDate;
          end;
          temp = StringToVal(ImportField,M4Val);
          IPrw.ChequeNr = StringToLongInt(ImportField);
          IPrw.CUPNr = StringToLongInt(ImportField);
          IPrw.VATVal = StringToVal(ImportField,M4Val);
          IPrw.VATCode = ImportField;
          temp = StringToVal(ImportField,M4Val);
          tstr = ImportField;
          temp = StringToVal(ImportField,M4Val);
          IPrw.PayMode = ImportField;
          IPrw.PayMode = ImportField;
          tstr = ImportField;
          if (blank(IPrw.PayMode)) then begin
            IPrw.PayMode = IPr.PayMode;
          end;
          if (IPrw.ChequeNr==0) then begin IPrw.ChequeNr = -1; end;
          if (IPrw.CUPNr==0) then begin IPrw.CUPNr = -1; end;          
        case 5:
          IPrw.InvoiceNr = StringToLongInt(ImportField);
          IPrw.CustCode = ImportField;
          IPrw.CustName = ImportField;
          IPrw.BankVal = StringToVal(ImportField,M4Val);
          temp = StringToVal(ImportField,M4Val);
          temp = StringToVal(ImportField,M4Val);
          tstr = ImportField;
          temp = StringToVal(ImportField,M4Val);
          IPrw.latedays = -1;
          IPrw.PayDate = IPr.TransDate;          
        case 6:
          IPrw.InvoiceNr = StringToLongInt(ImportField);
          IPrw.CustCode = ImportField;
          IPrw.CustName = ImportField;
          IPrw.BankVal = StringToVal(ImportField,M4Val);
          temp = StringToVal(ImportField,M4Val);
          temp = StringToVal(ImportField,M4Val);
          tstr = ImportField;
          temp = StringToVal(ImportField,M4Val);
          IPrw.latedays = -1;
          IPrw.PayDate = IPr.TransDate;          
      end;
      IPrw.InvCurncy = curncy;
      IPrw.BankCurncy = curncy;
      IPrw.RecCurncy = curncy;
      IPrw.RecVal = IPrw.BankVal;
      IPrw.InvVal = IPrw.BankVal;
      if (basecur!=IPrw.RecCurncy) then begin
        IPrw.BankCurncy = basecur;
        IPrw.BankVal = MulRateToBase1(IPrw.RecCurncy,IPrw.RecVal,fr,to1,to2,br1,br2,DefaultCurRoundOff);
      end;
      MatRowPut(IPr,rwcnt,IPrw);
      rwcnt = rwcnt + 1;
    end;
    if (excost!=0) then begin
      ClearRow(IPr,IPrw,7);
      IPrw.InvCurncy = basecur;
      IPrw.BankCurncy = basecur;
      IPrw.RecCurncy = basecur;
      IPrw.BankVal = excost;
      IPrw.RecVal = excost;
      IPrw.InvVal = excost;
      MatRowPut(IPr,rwcnt,IPrw);
      rwcnt = rwcnt + 1;
    end;
    SetIPFlags(IPr);
end;    
if (ver==2) then begin    
    IPr.SerNr = StringToLongInt(ImportField);
    IPr.Comment = ImportField;
    paydate = StringToDate(ImportField);
    IPr.PayMode = ImportField;
    temp = StringToVal(ImportField,M4Val);
    IPr.RegDate = StringToDate(ImportField);
    invoicenr = StringToLongInt(ImportField);
    payval = StringToVal(ImportField,M4Val);
    credval = StringToVal(ImportField,M4Val);
    rebval = StringToVal(ImportField,M4Val);
    IPr.OKFlag = StringToInt(ImportField);
    tstr = ImportField;
    tstr = ImportField;
    latedays = StringToLongInt(ImportField);
    tstr = ImportField;
    custcode = ImportField;
    custname = ImportField;
    tstr = ImportField;
    tstr = ImportField;
    tstr = ImportField;
    temp = StringToVal(ImportField,M4Val);
    temp = StringToVal(ImportField,M4Val);
    temp = StringToVal(ImportField,M4Val);
    temp = StringToVal(ImportField,M41Val);
    tstr = ImportField;
    IPr.TransDate = StringToDate(ImportField);
    if (nonblankdate(IPr.TransDate)) then begin
      IPr.TransDate = paydate;
    end;
    IPr.CurPayVal = blankval;
    if (blank(IPrw.PayMode)) then begin
      IPrw.PayMode = IPr.PayMode;
    end;
    rwcnt = 0;
    if (payval!=0) then begin
      ClearRow(IPr,IPrw,1);
      IPrw.stp = 1;
      IPrw.ovst = 0;
      IPrw.InvoiceNr = invoicenr;
      IPrw.CustCode = custcode;
      IPrw.CustName = custname;
      IPrw.PayDate = paydate;
      IPrw.InvVal = payval;
      IPrw.latedays = latedays;
      IPrw.InvCurncy = "";
      IPrw.BankCurncy = "";
      IPrw.RecCurncy = "";
      IPrw.RecVal = IPrw.InvVal;
      IPrw.InvVal = IPrw.InvVal;
      MatRowPut(IPr,rwcnt,IPrw);
      rwcnt = rwcnt + 1;
    end;
    if (rebval!=0) then begin
      ClearRow(IPr,IPrw,5);
      IPrw.stp = 5;
      IPrw.ovst = 0;
      IPrw.InvoiceNr = invoicenr;
      IPrw.CustCode = custcode;
      IPrw.CustName = custname;
      IPrw.PayDate = paydate;
      IPrw.InvCurncy = "";
      IPrw.BankCurncy = "";
      IPrw.RecCurncy = "";
      IPrw.BankVal = rebval;
      IPrw.RecVal = rebval;
      IPrw.InvVal = rebval;
      IPrw.latedays = -1;
      MatRowPut(IPr,rwcnt,IPrw);
      rwcnt = rwcnt + 1;
    end;
    if (credval!=0) then begin
      ClearRow(IPr,IPrw,6);
      IPrw.stp = 6;
      IPrw.ovst = 0;
      IPrw.InvoiceNr = invoicenr;
      IPrw.CustCode = custcode;
      IPrw.CustName = custname;
      IPrw.PayDate = paydate;
      IPrw.InvCurncy = "";
      IPrw.BankCurncy = "";
      IPrw.RecCurncy = "";
      IPrw.BankVal = credval;
      IPrw.RecVal = credval;
      IPrw.InvVal = credval;
      IPrw.latedays = latedays;
      MatRowPut(IPr,rwcnt,IPrw);
      rwcnt = rwcnt + 1;
    end;
    SetIPFlags(IPr);
    IPSumup(IPr);
end;    

  return;
end;

// Why not just PaseCustInInv?
global
procedure IVFillValues(record IVVc IVr)
begin
  record CUVc CUr;
  Integer i;
  string 255 tstr;
  val frrate,to1,to2,br1,br2;
  
  CUr.Code = IVr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (blank(IVr.Addr0)) then begin IVr.Addr0 = CUr.Name; end;
    if (blank(IVr.Addr1)) then begin IVr.Addr1 = CUr.InvAddr0; end;
    if (blank(IVr.Addr2)) then begin IVr.Addr2 = CUr.InvAddr1; end;
    if (blank(IVr.Addr3)) then begin IVr.Addr3 = CUr.InvAddr2; end;
    if (blank(IVr.InvAddr3)) then begin IVr.InvAddr3 = CUr.InvAddr3; end;
    if (blank(IVr.InvAddr4)) then begin IVr.InvAddr4 = CUr.InvAddr4; end;
    if (blank(IVr.ClientContact)) then begin IVr.ClientContact = CUr.Person; end;
    if (blank(IVr.ShipAddr0) and blank(IVr.ShipAddr1) and 
        blank(IVr.ShipAddr2) and blank(IVr.ShipAddr3)) then begin
      if ((nonblank(CUr.DelAddr0)) or (nonblank(CUr.DelAddr1)) or (nonblank(CUr.DelAddr2))) then begin
        IVr.ShipAddr0 = CUr.Name;
        IVr.ShipAddr1 = CUr.DelAddr0;
        IVr.ShipAddr2 = CUr.DelAddr1;
        IVr.ShipAddr3 = CUr.DelAddr2;
        IVr.DelAddr3 = CUr.DelAddr3;
        IVr.DelAddr4 = CUr.DelAddr4;
      end;
    end;
    IVr.ExportFlag = CUr.ExportFlag;
    if (blank(IVr.CustCat)) then begin IVr.CustCat = CUr.CustCat; end;
    if (blank(IVr.PayDeal)) then begin IVr.PayDeal = CUr.PayDeal; end;
    if (blank(IVr.Objects)) then begin IVr.Objects = CUr.Objects; end;
    if (blank(IVr.CurncyCode)) then begin IVr.CurncyCode = CUr.CurncyCode; end;
    if (blank(IVr.SalesMan)) then begin 
      SetSalesMan(tstr,CUr.SalesMan); 
      IVr.SalesMan = tstr;
    end;
    if (blank(IVr.LangCode)) then begin IVr.LangCode = CUr.LangCode; end;
    if (blank(IVr.ShipDeal)) then begin IVr.ShipDeal = CUr.ShipDeal; end;
    if (blank(IVr.ShipMode)) then begin IVr.ShipMode = CUr.ShipMode; end;
    if (blank(IVr.InvComment)) then begin IVr.InvComment = CUr.OrderComment; end;
    if (blank(IVr.PriceList)) then begin IVr.PriceList = CUr.PLCode; end;
    if (blank(IVr.RebCode)) then begin IVr.RebCode = CUr.RebCode; end;
    if (blank(IVr.CustVATCode)) then begin IVr.CustVATCode = CUr.VATCode; end;
    if (blank(IVr.Phone)) then begin IVr.Phone = CUr.Phone; end;
    if (blank(IVr.Fax)) then begin IVr.Fax = CUr.Fax; end;
    GetPriceList(IVr.CustCat,IVr.TransDate,IVr.TransTime,tstr,i);
    IVr.PriceList = tstr;
    IVr.InclVAT = i;
    if (blank(IVr.VATNr)) then begin IVr.VATNr = CUr.VATNr; end;
    tstr = IVr.CurncyCode;
    GetFullCurncyRate(tstr,IVr.InvDate,frrate,to1,to2,br1,br2);
    IVr.CurncyCode = tstr;
    IVr.FrRate = frrate;
    IVr.ToRateB1 = to1; 
    IVr.ToRateB2 = to2;
    IVr.BaseRate1 = br1;
    IVr.BaseRate2 = br2;    
  end;
  return;
end;

global
procedure ReadImportTagInvoicesRecord(record IVVc IVr)
begin
  row IVVc IVrw;
  Integer rwcnt;
  string 255 SerStr,tstr;
  record SRBlock SRRec;

  BlockLoad(SRRec);

    RecordNew(IVr);  
    SerStr = ImportField;
    IVr.SerNr = StringToLongInt(SerStr);    
    IVr.InvDate = StringToDate(ImportField);
    IVr.PayDate = StringToDate(ImportField);
    IVr.ExportFlag = StringToInt(ImportField);
    IVr.Prntdf = StringToInt(ImportField);
    IVr.PayDeal = ImportField;
    IVr.pdays = StringToLongInt(ImportField);
    IVr.pdvrebt = StringToVal(ImportField,M41Val);
    IVr.pdrdays = StringToLongInt(ImportField);
    IVr.pdComment = ImportField;
    IVr.OrderNr = StringToLongInt(ImportField);
    IVr.OKFlag = StringToInt(ImportField);
    IVr.IntCode = ImportField;
    tstr = ImportField;
    IVr.InvType = StringToInt(ImportField);
    IVr.PriceList = ImportField;
    IVr.Objects = ImportField;
    tstr = ImportField;
    IVr.InclVAT = StringToInt(ImportField);
    IVr.ARAcc = ImportField;
    IVr.CredMark = ImportField;
    tstr = ImportField;
    if (nonblank(tstr)) then begin
      if ((tstr!="0") and (tstr!="1")) then begin
        IVr.CurncyCode = tstr;
        IVr.ToRateB1 = StringToVal(ImportField,M4Rate);
      end else begin
        IVr.CurncyCode = "";
        IVr.ToRateB1 = blankval;
      end;
    end else begin
      IVr.CurncyCode = ImportField;
      IVr.ToRateB1 = StringToVal(ImportField,M4Rate);
    end;
    if (IVr.CurncyCode=="0,00") then begin IVr.CurncyCode = ""; end;
    IVr.TransDate = StringToDate(ImportField);
    if (blankdate(IVr.TransDate)) then begin
      IVr.TransDate = IVr.InvDate;
    end;
    tstr = ImportField;
    if (nonblank(tstr)) then begin
      IVr.UpdStockFlag = StringToInt(tstr);
      if (IVr.UpdStockFlag!=0) then begin
        IVr.UpdStockFlag = 1;
      end;
    end else begin
      IVr.UpdStockFlag = 0;
      if (IVr.OrderNr!=-1) then begin
        if (IVr.InvType!=kInvoiceTypeCredit and IVr.InvType!=kInvoiceTypeCreditSpecialSales) then begin
          IVr.UpdStockFlag = 1;
        end;
      end;
    end;
    IVr.LastRemndr = StringToLongInt(ImportField);
    IVr.LastRemDate = StringToDate(ImportField);
    IVr.FrRate = StringToVal(ImportField,M4Rate);
    IVr.ToRateB2 = StringToVal(ImportField,M4Rate);
    IVr.BaseRate1 = StringToVal(ImportField,M4Rate);
    IVr.BaseRate2 = StringToVal(ImportField,M4Rate);
    IVr.Sign = ImportField;
    if (NextImportLine(true)) then begin end;
    IVr.CustCode = ImportField;
    IVr.Addr0 = ImportField;
    IVr.Addr1 = ImportField;
    IVr.Addr2 = ImportField;
    IVr.Addr3 = ImportField;
    IVr.CustCat = ImportField;
    IVr.InvAddr3 = ImportField;
    IVr.InvAddr4 = ImportField;
    IVr.DelAddr3 = ImportField;
    IVr.DelAddr4 = ImportField;
    IVr.DelAddrCode = ImportField;
    if (NextImportLine(true)) then begin end;
    IVr.ClientContact = ImportField;
    IVr.OurContact = ImportField;
    IVr.InvComment = ImportField;
    IVr.SalesMan = ImportField;
    IVr.LangCode = ImportField;
    IVr.OrgCust = ImportField;
    IVr.CustOrdNr = ImportField;
    if (NextImportLine(true)) then begin end;
    IVr.Sum0 = StringToVal(ImportField,M4Val);
    IVr.Sum1 = StringToVal(ImportField,M4Val);
    IVr.Sum2 = StringToVal(ImportField,M4Val);
    IVr.Sum3 = StringToVal(ImportField,M4Val);
    IVr.Sum4 = StringToVal(ImportField,M4Val);
    IVr.FrItem = ImportField;
    IVr.FrPrice = StringToVal(ImportField,M4Val);
    IVr.FrBase = StringToVal(ImportField,M4Val);
    IVr.FrVATCode = ImportField;
    IVr.FrObjects = ImportField;
    IVr.FrGP = StringToVal(ImportField,M4Val);
    IVr.ShipAddr0 = ImportField;
    IVr.ShipAddr1 = ImportField;
    IVr.ShipAddr2 = ImportField;
    IVr.ShipAddr3 = ImportField;
    IVr.VATNr = ImportField;
    IVr.ShipDeal = ImportField;
    IVr.ShipMode = ImportField;
    IVr.PRCode = ImportField;
    IVr.FrSalesAcc = ImportField;
    IVr.TAX1Sum = StringToVal(ImportField,M4Val);
    IVr.Location = ImportField;
    IVr.CustVATCode = ImportField;
    IVr.RebCode = ImportField;
    IVr.CalcFinRef = ImportField;
    IVr.Phone = ImportField;
    IVr.Fax = ImportField;
    IVr.ARonTR = StringToInt(ImportField);
/*    IVr.ARonTR = 0;*/
    IVr.CredInv = StringToLongInt(ImportField);
    IVr.BaseSum4 = StringToVal(ImportField,M4Val);
    IVr.DiscPerc = StringToVal(ImportField,M4Val);
    IVr.DiscSum = StringToVal(ImportField,M4Val);
    IVr.InvoiceNr = ImportField;  
    IVr.TotGP = StringToVal(ImportField,M4Val);
    IVr.LocOKNr = StringToVal(ImportField,M40Val);
    IVr.Invalid = StringToInt(ImportField);
    IVr.CreditCard = ImportField;
    IVr.AuthorizationCode = ImportField;
    IVr.RecValue = StringToVal(ImportField,M4Val);
    IVr.RetValue = StringToVal(ImportField,M4Val);
    IVr.FromBUQT = StringToInt(ImportField);
    IVr.Sorting = ImportField;
    IVr.NoInterestFlag = StringToInt(ImportField);
    IVr.NoRemndrFlag = StringToInt(ImportField);
    IVr.SVONr = StringToLongInt(ImportField);
    IVr.InstallmentInv = StringToInt(ImportField);
    IVr.OfficialSerNr = ImportField;
    IVr.OfficialSerNr2 = ImportField;
    IVr.TotQty= StringToVal(ImportField,M4Qty);
    IVr.TotWeight = StringToVal(ImportField,M4Qty);
    IVr.TotVolume = StringToVal(ImportField,M4Qty);        
    IVr.AutoGiro = StringToInt(ImportField);
    IVr.SalesGroup = ImportField;
    IVr.DisputedFlag = StringToInt(ImportField);
    IVr.NoColectionFlag = StringToInt(ImportField);
    IVr.QTNr = StringToLongInt(ImportField);
    IVr.FiscalFlag = StringToInt(ImportField);
    if ((SerStr=="S") or (SerStr=="s")) then begin
      IVr.SerNr = NextSerNr("IVVc",IVr.TransDate,SRRec.LastInvNr,false,"");            
    end;
    if ((nonblank(IVr.CustCode)) and (blank(IVr.Addr0))) then begin
      IVFillValues(IVr);
    end;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      IVrw.stp = StringToInt(ImportField);
      ClearRow(IVr,IVrw,IVrw.stp);
      switch (IVrw.stp) begin
        case 3:
          IVrw.Spec = ImportField;
          IVrw.Spec = ImportField;
          IVrw.Spec = ImportField;
          IVrw.Spec = ImportField;
          IVrw.Spec = ImportField;
          IVrw.OrdRow = StringToLongInt(ImportField);
          if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin IVr.CredInv = IVrw.OrdRow; end;
        case 4:
          IVrw.ArtCode = ImportField;
          IVrw.Quant = StringToVal(ImportField,M4UVal);
          IVrw.Spec = ImportField;
          IVrw.Price = StringToVal(ImportField,M423Val);
          IVrw.Sum = StringToVal(ImportField,M4Val);
          IVrw.vRebate = StringToVal(ImportField,M41Val);
          IVrw.SalesAcc = ImportField;
          IVrw.Objects = ImportField;
          IVrw.OrdRow = StringToLongInt(ImportField);
          IVrw.VATCode = ImportField;
          IVrw.OrdRow = StringToLongInt(ImportField);
          IVrw.BasePrice = StringToVal(ImportField,M4Val);
        case 5:
          IVrw.Spec = ImportField;
          IVrw.Sum = StringToVal(ImportField,M4Val);
          IVrw.SalesAcc = ImportField;
          IVrw.VATCode = ImportField;
        case 6:
          IVrw.CUPNr = StringToLongInt(ImportField);
          IVrw.Sum = StringToVal(ImportField,M4Val);
          IVrw.BasePrice = StringToVal(ImportField,M4Val);
        case 7:
          IVrw.CuAccCode = ImportField;
          IVrw.SalesAcc = ImportField;
          IVrw.Objects = ImportField;
          IVrw.Sum = StringToVal(ImportField,M4Val);
          IVrw.VATCode = ImportField;
        case 8:
          IVrw.CuAccCode = ImportField;
          IVrw.SalesAcc = ImportField;
          IVrw.Objects = ImportField;
          IVrw.Sum = StringToVal(ImportField,M4Val);
          IVrw.VATCode = ImportField;
        otherwise 
          IVrw.ArtCode = ImportField;
          IVrw.Quant = StringToVal(ImportField,M4UVal);
          IVrw.Spec = ImportField;
          IVrw.Price = StringToVal(ImportField,M423Val);
          IVrw.Sum = StringToVal(ImportField,M4Val);
          IVrw.vRebate = StringToVal(ImportField,M41Val);
          IVrw.SalesAcc = ImportField;
          IVrw.Objects = ImportField;
          IVrw.OrdRow = StringToLongInt(ImportField);
          IVrw.BasePrice = StringToVal(ImportField,M4Val);
          IVrw.rowGP = StringToVal(ImportField,M4Val);
          IVrw.FIFO = StringToVal(ImportField,M45Val);
          IVrw.VATCode = ImportField;
          IVrw.Recepy = ImportField;
          IVrw.SerialNr = ImportField;
          tstr = ImportField;
          IVrw.VARList = ImportField;
          IVrw.FIFORowVal = StringToVal(ImportField,M45Val);
          IVrw.Coefficient = StringToVal(ImportField,M45Val);
          IVrw.CuAccCode = ImportField;
          IVrw.ExciseNr = ImportField;
          IVrw.PeriodCode = ImportField;
          IVrw.UnitCode = ImportField;
          IVrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
          IVrw.UnitFactPrice = StringToVal(ImportField,M423Val);
          IVrw.UnitXval = StringToVal(ImportField,M4UVal);
          IVrw.UnitYval = StringToVal(ImportField,M4UVal);
          IVrw.UnitZval = StringToVal(ImportField,M4UVal);
          if (nonblank(tstr)) then begin
            IVrw.PriceFactor = StringToVal(tstr,M45Val);
          end else begin
            IVrw.PriceFactor = blankval;
          end;
          if (IVrw.Recepy=="_") then begin
            IVrw.Recepy = "";
          end;
          if ((nonblank(IVrw.ArtCode)) and (blank(IVrw.Spec)) and (blank(IVrw.Price)) and (IVr.OKFlag==0)) then begin
            IVRowInsertValues(IVr,IVrw,0);//GenOptr.UseDiscount KH??
          end;          
      end;
      MatRowPut(IVr,rwcnt,IVrw);
      rwcnt = rwcnt + 1;
    end;

  return;
end;

global
procedure ReadImportTagPaymentsRecord(record OPVc OPr)
begin
  row OPVc OPrw;
  row OPVc OP2rw;
  Integer rwcnt;
  string 255 tstr;
  val temp,excost,fr,to1,to2,br1,br2;
  string 10 curncy,basecur;
  Date paydate;
  LongInt invoicenr,latedays;
  val payval,credval,rebval;
  string 60 custcode,custname;
  record VIVc VIr;

    RecordNew(OPr);      
    GetBaseCurncy(1,basecur);
    tstr = ImportField;
    OPr.SerNr = StringToLongInt(tstr);
    OPr.BankAcc = ImportField;
    OPr.Sign = ImportField;
    OPr.RegDate = StringToDate(ImportField);
    OPr.TransDate = StringToDate(ImportField);
    OPr.PayMode = ImportField;
    OPr.BankName = ImportField;
    OPr.OrderedFlag = StringToInt(ImportField);
    OPr.SentFlag = StringToInt(ImportField);
    OPr.DoneFlag = StringToInt(ImportField);    
    temp = StringToVal(ImportField,M4Val);
    curncy = ImportField;    
    to1 = StringToVal(ImportField,M4Rate);
    temp = StringToVal(ImportField,M4Val);    
    excost = StringToVal(ImportField,M4Val);
    OPr.PayDate = StringToDate(ImportField);
    OPr.StatFlag = StringToInt(ImportField);
    OPr.ExportedFlag = StringToInt(ImportField);
    OPr.PayNumber = ImportField;
    OPr.RejectedFlag = StringToInt(ImportField);
    temp = StringToVal(ImportField,M4Val);    
    to1 = StringToVal(ImportField,M4Rate);
    to1 = StringToVal(ImportField,M4Rate);
    to1 = StringToVal(ImportField,M4Rate);
    to1 = StringToVal(ImportField,M4Rate);    
    OPr.Objects = ImportField;    
    rwcnt = 0;
    while (NextImportLine(false)) begin
      OPrw.stp = StringToInt(ImportField);
      ClearRow(OPr,OPrw,OPrw.stp);
      OPrw.ovst = StringToInt(ImportField);
      OPrw.VISerNr = StringToLongInt(ImportField);
      OPrw.Comment = ImportField;
      OPrw.BankAcc = ImportField;
      OPrw.BankVal = StringToVal(ImportField,M4Val);
      rebval = StringToVal(ImportField,M4Val);
      OPrw.VECode = ImportField;
      OPrw.Objects = ImportField;
      OPrw.VATVal = StringToVal(ImportField,M4Val);
      OPrw.VATCode = ImportField;
      OPrw.ChequeNr = StringToLongInt(ImportField);
      OPrw.PrepayNr = StringToLongInt(ImportField);
      temp = StringToVal(ImportField,M4Val);    
      tstr = ImportField;
      temp = StringToVal(ImportField,M4Val);    
      OPrw.PayMode = ImportField;
      OPrw.PInvCurncy = curncy;
      OPrw.BankCurncy = curncy;
      OPrw.RecCurncy = curncy;
      OPrw.RecVal = OPrw.BankVal;
      OPrw.PInvVal = OPrw.BankVal;
      if (basecur!=OPrw.RecCurncy) then begin
        OPrw.BankCurncy = basecur;
        OPrw.BankVal = MulRateToBase1(OPrw.RecCurncy,OPrw.RecVal,fr,to1,to2,br1,br2,DefaultCurRoundOff);
      end;
      if (blank(OPrw.VECode)) then begin
        if (OPrw.VISerNr!=-1) then begin          
          VIr.SerNr = OPrw.VISerNr;
          if (ReadFirstMain(VIr,1,true)) then begin
            OPrw.VECode = VIr.VECode;
          end;
        end;
      end;          
      MatRowPut(OPr,rwcnt,OPrw);
      rwcnt = rwcnt + 1;
      if (rebval!=0) then begin
        ClearRow(OPr,OP2rw,OPrw.ovst);
        OP2rw.ovst = OPrw.ovst;        
        OP2rw.VISerNr = OPrw.VISerNr;
        OP2rw.BankAcc = OPrw.BankAcc;
        OP2rw.Comment = OPrw.Comment;
        OP2rw.PInvCurncy = curncy;
        OP2rw.BankCurncy = curncy;
        OP2rw.RecCurncy = curncy;        
        OP2rw.BankVal = rebval;
        OP2rw.RecVal = rebval;
        OP2rw.PInvVal = rebval;
        OP2rw.VECode = OPrw.VECode;
        MatRowPut(OPr,rwcnt,OP2rw);
        rwcnt = rwcnt + 1;
      end;      
    end;
    if (excost!=0) then begin
      ClearRow(OPr,OPrw,7);
      OPrw.PInvCurncy = basecur;
      OPrw.BankCurncy = basecur;
      OPrw.RecCurncy = basecur;
      OPrw.BankVal = excost;
      OPrw.RecVal = excost;
      OPrw.PInvVal = excost;
      MatRowPut(OPr,rwcnt,OPrw);
      rwcnt = rwcnt + 1;
    end;      
    OPr.StatFlag = 0;
    OPSumup(OPr,false);

  return;
end;

procedure SetCustVATCode(record CUVc CUp,Integer ExportFlag,var string vatcode)
begin
  record AccBlock ARAccRec;

  if (nonblank(CUp.VATCode)) then begin
    vatcode = CUp.VATCode;
  end else begin
    BlockLoad(ARAccRec);
    switch (ExportFlag) begin
      case 4: vatcode = ARAccRec.VATCodeExp;
      case 3: vatcode = ARAccRec.VATCodeEU;
      case 2: vatcode = ARAccRec.VATCodeExp;
      case 1: vatcode = ARAccRec.VATCodeEU;
      otherwise vatcode = ARAccRec.VATCodeDom;
    end;
  end;
  return;
end;

// Why not just PaseCustInOrd?
global
procedure ORFillValues(record ORVc ORp)
begin
  record CUVc CUr;
  val frrate,to1,to2,br1,br2;
  string 255 tstr;
  Integer i;
  Time blankt;
  
  CUr.Code = ORp.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (blank(ORp.Addr0)) then begin ORp.Addr0 = CUr.Name; end;
    if (blank(ORp.Addr1)) then begin ORp.Addr1 = CUr.InvAddr0; end;
    if (blank(ORp.Addr2)) then begin ORp.Addr2 = CUr.InvAddr1; end;
    if (blank(ORp.Addr3)) then begin ORp.Addr3 = CUr.InvAddr2; end;
    if (blank(ORp.InvAddr3)) then begin ORp.InvAddr3 = CUr.InvAddr3; end;
    if (blank(ORp.InvAddr4)) then begin ORp.InvAddr4 = CUr.InvAddr4; end;
    if (blank(ORp.CustContact)) then begin ORp.CustContact = CUr.Person; end;
    if (blank(ORp.ShipAddr0) and blank(ORp.ShipAddr1) and blank(ORp.ShipAddr2) and blank(ORp.ShipAddr3)) then begin
      if ((nonblank(CUr.DelAddr0)) or (nonblank(CUr.DelAddr1)) or (nonblank(CUr.DelAddr2))) then begin
        ORp.ShipAddr0 = CUr.Name;
        ORp.ShipAddr1 = CUr.DelAddr0;
        ORp.ShipAddr2 = CUr.DelAddr1;
        ORp.ShipAddr3 = CUr.DelAddr2;
        ORp.DelAddr3 = CUr.DelAddr3;
        ORp.DelAddr4 = CUr.DelAddr4;
      end;
    end;
    if (blank(ORp.InvoiceToCode)) then begin ORp.InvoiceToCode = CUr.InvoiceToCode; end;
    ORp.ExportFlag = CUr.ExportFlag;
    if (blank(ORp.CustCat)) then begin ORp.CustCat = CUr.CustCat; end;
    if (blank(ORp.PayDeal)) then begin ORp.PayDeal = CUr.PayDeal; end;
    if (blank(ORp.Objects)) then begin ORp.Objects = CUr.Objects; end;
    if (blank(ORp.CurncyCode)) then begin ORp.CurncyCode = CUr.CurncyCode; end;
    if (blank(ORp.SalesMan)) then begin 
      SetSalesMan(tstr,CUr.SalesMan); 
      ORp.SalesMan = tstr;    
    end;
    if (blank(ORp.LangCode)) then begin ORp.LangCode = CUr.LangCode; end;
    if (blank(ORp.ShipDeal)) then begin ORp.ShipDeal = CUr.ShipDeal; end;
    if (blank(ORp.ShipMode)) then begin ORp.ShipMode = CUr.ShipMode; end;
    if (blank(ORp.Comment)) then begin ORp.Comment = CUr.OrderComment; end;
    if (blank(ORp.PriceList)) then begin ORp.PriceList = CUr.PLCode; end;
    if (blank(ORp.RebCode)) then begin ORp.RebCode = CUr.RebCode; end;
    if (blank(ORp.CustVATCode)) then begin SetCustVATCode(CUr,ORp.ExportFlag,ORp.CustVATCode); end;
    if (blank(ORp.Phone)) then begin ORp.Phone = CUr.Phone; end;
    if (blank(ORp.Fax)) then begin ORp.Fax = CUr.Fax; end;
    GetPriceList(ORp.CustCat,ORp.OrdDate,blankt,tstr,i);
    ORp.PriceList = tstr;
    ORp.InclVAT = i;
    if (blank(ORp.VATNr)) then begin ORp.VATNr = CUr.VATNr; end;
    tstr = ORp.CurncyCode;
    GetFullCurncyRate(tstr,ORp.OrdDate,frrate,to1,to2,br1,br2);
    ORp.CurncyCode = tstr;
    ORp.FrRate = frrate;
    ORp.ToRateB1 = to1; 
    ORp.ToRateB2 = to2;
    ORp.BaseRate1 = br1;
    ORp.BaseRate2 = br2;    
  end;
  return;
end;

global
procedure ReadImportTagOrdersRecord(record ORVc ORr)
begin
  Integer rwcnt;
  row ORVc ORrw;
  string 255 sernr,tstr;
  record SRBlock SRRec;

  BlockLoad(SRRec);  
    RecordNew(ORr);  
    sernr = ImportField;
    ORr.OrdDate = StringToDate(ImportField);
    ORr.PayDeal = ImportField;
    ORr.ExportFlag = StringToInt(ImportField);
    ORr.InvFlag = StringToInt(ImportField);
    ORr.ShipFlag = StringToInt(ImportField);
    ORr.Prntdf = StringToInt(ImportField);
    ORr.Objects = ImportField;
    ORr.OrderClass = ImportField;
    ORr.ShipAddr0 = ImportField;
    ORr.ShipAddr1 = ImportField;
    ORr.ShipAddr2 = ImportField;
    ORr.ShipAddr3 = ImportField;
    if (NextImportLine(true)) then begin end;
    ORr.CustCode = ImportField;
    ORr.Addr0 = ImportField;
    ORr.Addr1 = ImportField;
    ORr.Addr2 = ImportField;
    ORr.Addr3 = ImportField;
    ORr.CustCat = ImportField;
    ORr.PriceList = ImportField;
    ORr.InclVAT = StringToInt(ImportField);
    ORr.InvAddr3 = ImportField;
    ORr.InvAddr4 = ImportField;
    ORr.DelAddr3 = ImportField;
    ORr.DelAddr4 = ImportField;
    ORr.DelAddrCode = ImportField;
    if (NextImportLine(true)) then begin end;
    ORr.CustContact = ImportField;
    ORr.OurContact = ImportField;
    ORr.Comment = ImportField;
    ORr.ShipMode = ImportField;
    ORr.SalesMan = ImportField;
    ORr.CurncyCode = ImportField;
    ORr.ToRateB1 = StringToVal(ImportField,M4Rate);
    ORr.OrderStatus = StringToInt(ImportField);
    ORr.PlanShip = ImportField;
    ORr.Sign = ImportField;
    ORr.ShipDeal = ImportField;
    tstr = ImportField;
    ORr.LangCode = ImportField;
    ORr.InvoiceToCode = ImportField;
    ORr.Closed = StringToInt(ImportField);
    ORr.BuildOn = StringToInt(ImportField);
    ORr.PRCode = ImportField;
    ORr.InvOnlyOnFull = StringToInt(ImportField);
    ORr.CustOrdNr = ImportField;
    if (NextImportLine(true)) then begin end;
    ORr.Sum0 = StringToVal(ImportField,M4Val);
    ORr.Sum1 = StringToVal(ImportField,M4Val);
    ORr.Sum2 = StringToVal(ImportField,M4Val);
    ORr.Sum3 = StringToVal(ImportField,M4Val);
    ORr.Sum4 = StringToVal(ImportField,M4Val);
    ORr.DownPaySent = StringToVal(ImportField,M4Val);
    ORr.DownPayRedcd = StringToVal(ImportField,M4Val);
    ORr.Location = ImportField;
    ORr.CustVATCode = ImportField;
    ORr.RebCode = ImportField;
    ORr.VATNr = ImportField;
    ORr.Phone = ImportField;
    ORr.Fax = ImportField;
    ORr.Reserved = StringToInt(ImportField);
    ORr.FrRate = StringToVal(ImportField,M4Rate);
    ORr.ToRateB2 = StringToVal(ImportField,M4Rate);
    ORr.BaseRate1 = StringToVal(ImportField,M4Rate);
    ORr.BaseRate2 = StringToVal(ImportField,M4Rate);
    ORr.DiscPerc = StringToVal(ImportField,M4Val);
    ORr.DiscSum = StringToVal(ImportField,M4Val);
    ORr.TotGP = StringToVal(ImportField,M4Val);
    ORr.Probability = StringToVal(ImportField,M41Val);
    ORr.CreditCard = ImportField;
    ORr.AuthorizationCode = ImportField;
    ORr.GPProc = StringToVal(ImportField,M41Val);
    ORr.DespatchDate = StringToDate(ImportField);
    ORr.DespatchTime = StringToTime(ImportField);
    ORr.SalesGroup = ImportField;
    ORr.Sorting = ImportField;
    ORr.TotQty = StringToVal(ImportField,M4Qty);
    ORr.TotWeight = StringToVal(ImportField,M4Qty);
    ORr.TotVolume = StringToVal(ImportField,M4Qty);
    ORr.Commision = StringToVal(ImportField,M4Val);
    ORr.SumIncCom = StringToVal(ImportField,M4Val);
    ORr.FrPrice = StringToVal(ImportField,M4Val);
    ORr.FrBase = StringToVal(ImportField,M4Val);
    ORr.FrItem = ImportField;
    ORr.FrVATCode = ImportField;
    ORr.FrObjects = ImportField;
    ORr.TAX1Sum = StringToVal(ImportField,M4Val);
    ORr.QuoteNr = StringToLongInt(ImportField);
    ORr.InvBeforeShip = StringToInt(ImportField);

    ORr.SerNr = StringToLongInt(sernr);
    if (sernr=="S") then begin
      ORr.SerNr = NextSerNr("ORVc",ORr.OrdDate,SRRec.LastOrdNr,false,""); // S will give next free 
    end;  
    if ((nonblank(ORr.CustCode)) and (blank(ORr.Addr0))) then begin
      ORFillValues(ORr);
    end;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ORrw.stp = StringToInt(ImportField);
      ClearRow(ORr,ORrw,ORrw.stp);
      switch (ORrw.stp) begin
        case 1: 
          ORrw.ArtCode = ImportField;
          ORrw.Quant = StringToVal(ImportField,M4UVal);
          ORrw.Spec = ImportField;
          ORrw.Price = StringToVal(ImportField,M423Val);
          ORrw.Sum = StringToVal(ImportField,M4Val);
          ORrw.vRebate = StringToVal(ImportField,M41Val);
          ORrw.SalesAcc = ImportField;
          ORrw.Shipd2 = StringToVal(ImportField,M4UVal);
          ORrw.Invd = StringToVal(ImportField,M4UVal);
          ORrw.Objects = ImportField;
          ORrw.Shipd1 = StringToVal(ImportField,M4UVal);
          ORrw.BasePrice = StringToVal(ImportField,M423Val);
          ORrw.rowGP = StringToVal(ImportField,M4Val);
          ORrw.VATCode = ImportField;
          ORrw.Recepy = ImportField;
          ORrw.SerialNr = ImportField;
          ORrw.PriceFactor = StringToVal(ImportField,M45Val);
          ORrw.VARList = ImportField;
          ORrw.Location = ImportField;
          ORrw.Source = ImportField;
          ORrw.PickingDate = StringToDate(ImportField);
          ORrw.PickingTime = ImportField;
          ORrw.InloadingDate = StringToDate(ImportField);
          ORrw.InloadingTime = ImportField;
          ORrw.DespatchRowDate = StringToDate(ImportField);
          ORrw.DespatchRowTime = ImportField;
          ORrw.PlanShipRow = ImportField;//plshrow
          ORrw.ShipNote = ImportField;
          ORrw.UnitCode = ImportField;
          ORrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
          ORrw.UnitFactPrice = StringToVal(ImportField,M423Val);
          ORrw.UnitXval = StringToVal(ImportField,M4UVal);
          ORrw.UnitYval = StringToVal(ImportField,M4UVal);
          ORrw.UnitZval = StringToVal(ImportField,M4UVal);
          ORrw.Coefficient = StringToVal(ImportField,M45Val);
          ORrw.VECode = ImportField;          
          if (ORrw.Shipd2<0) then begin ORrw.Shipd2 = 0; end;
          if (ORrw.Shipd1<0) then begin ORrw.Shipd1 = 0; end;
          if (ORrw.Invd<0) then begin ORrw.Invd = 0; end;
          if (ORrw.Shipd2>ORrw.Quant) then begin ORrw.Shipd2 = ORrw.Quant; end;
          if (ORrw.Shipd1>ORrw.Quant) then begin ORrw.Shipd1 = ORrw.Quant; end;
          if (ORrw.Recepy=="_") then begin
            ORrw.Recepy = "";
          end;
          if ((nonblank(ORrw.ArtCode)) and (blank(ORrw.Spec))) then begin
            ORRowInsertValues(ORr,ORrw,0);//GenOptr.UseDiscount KH??
          end;
        case 9: 
          ORrw.ArtCode = ImportField;
          ORrw.Quant = StringToVal(ImportField,M4UVal);
          ORrw.Spec = ImportField;
          ORrw.Price = StringToVal(ImportField,M423Val);
          ORrw.Sum = StringToVal(ImportField,M4Val);
          ORrw.vRebate = StringToVal(ImportField,M41Val);
          ORrw.SalesAcc = ImportField;
          ORrw.Shipd2 = StringToVal(ImportField,M4UVal);
          ORrw.Invd = StringToVal(ImportField,M4UVal);
          ORrw.Objects = ImportField;
          ORrw.Shipd1 = StringToVal(ImportField,M4UVal);
          ORrw.BasePrice = StringToVal(ImportField,M423Val);
          ORrw.rowGP = StringToVal(ImportField,M4Val);
          ORrw.VATCode = ImportField;
          ORrw.Recepy = ImportField;
          ORrw.SerialNr = ImportField;
          ORrw.PriceFactor = StringToVal(ImportField,M45Val);
          ORrw.VARList = ImportField;
          ORrw.Location = ImportField;
          ORrw.Source = ImportField;
          ORrw.PickingDate = StringToDate(ImportField);
          ORrw.PickingTime = ImportField;
          ORrw.InloadingDate = StringToDate(ImportField);
          ORrw.InloadingTime = ImportField;
          ORrw.DespatchRowDate = StringToDate(ImportField);
          ORrw.DespatchRowTime = ImportField;
          ORrw.PlanShipRow = ImportField;//plshrow
          ORrw.ShipNote = ImportField;
          ORrw.UnitCode = ImportField;
          ORrw.UnitFactQuant = StringToVal(ImportField,M4UVal);
          ORrw.UnitFactPrice = StringToVal(ImportField,M423Val);
          ORrw.UnitXval = StringToVal(ImportField,M4UVal);
          ORrw.UnitYval = StringToVal(ImportField,M4UVal);
          ORrw.UnitZval = StringToVal(ImportField,M4UVal);
          ORrw.Coefficient = StringToVal(ImportField,M45Val);
          ORrw.VECode = ImportField;          
      end;
      MatRowPut(ORr,rwcnt,ORrw);
      rwcnt = rwcnt + 1;
    end;    
  return;
end;

global
procedure ReadImportTagSimulationsRecord(record SMVc SMr)
begin
  Integer rwcnt;
  row SMVc SMrw;
  string 255 sernr,tstr;
  val sv;

    RecordNew(SMr);  
    sernr = ImportField;
    SMr.Comment = ImportField;
    SMr.TransDate = StringToDate(ImportField);
    SMr.Sign = ImportField;
    SMr.RefStr = ImportField;
    SMr.DSum = StringToVal(ImportField,M4Val);
    SMr.CSum = StringToVal(ImportField,M4Val);
    SMr.DiffVal = StringToVal(ImportField,M4Val);
    SMr.xMainf = StringToInt(ImportField);
    SMr.Balf = StringToInt(ImportField);
    SMr.CreateStat = StringToInt(ImportField);
    
    SMr.SerNr = StringToLongInt(sernr);
    if (sernr=="S") then begin
      SMr.SerNr = NextSerNr("SMVc",SMr.TransDate,-1,false,""); // S will give next free 
    end;      
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(SMr,SMrw,1);
      SMrw.AccNumber = ImportField;
      SMrw.Objects = ImportField;
      SMrw.Comment = ImportField;
      sv = StringToVal(ImportField,M4Val);
      SMrw.VATCode = ImportField;
      SMrw.DebVal = StringToVal(ImportField,M4Val);
      SMrw.CredVal = StringToVal(ImportField,M4Val);
      if (sv!=0) then begin
        if (sv>=0) then begin
          SMrw.DebVal = SMrw.DebVal + sv;
        end else begin
          SMrw.CredVal = SMrw.CredVal - sv;
        end;
      end;
      SMrw.TransDate = StringToDate(ImportField);
      SMrw.RowSimStat = StringToInt(ImportField);
      SMrw.DebVal2 = StringToVal(ImportField,M4Val);
      SMrw.CredVal2 = StringToVal(ImportField,M4Val);
      SMrw.CurDebVal = StringToVal(ImportField,M4Val);
      SMrw.CurCredVal = StringToVal(ImportField,M4Val);
      SMrw.CurncyCode = ImportField;
      SMrw.FrRate = StringToVal(ImportField,M4Rate);
      SMrw.ToRateB1 = StringToVal(ImportField,M4Rate);
      SMrw.ToRateB2 = StringToVal(ImportField,M4Rate);
      SMrw.BaseRate1 = StringToVal(ImportField,M4Rate);
      SMrw.BaseRate2 = StringToVal(ImportField,M4Rate);      
      MatRowPut(SMr,rwcnt,SMrw);
      rwcnt = rwcnt + 1;
    end;    

  return;
end;

procedure ImpVIHead(record VIVc VIp)
BEGIN
  string 255 tstr;
  record CUVc VEr;

  tstr = ImportField;
  VIp.SerNr = StringToLongInt(tstr);
  VIp.InvDate = StringToDate(ImportField);
  VIp.PayVal = StringToVal(ImportField,M4Val);
  VIp.RegDate = StringToDate(ImportField);
  VIp.InvoiceNr = ImportField;
  VIp.OKFlag = StringToInt(ImportField);
  VIp.PayDeal = ImportField;
  VIp.VECode = ImportField;
  VIp.VEName = ImportField;
  if (blank(VIp.VEName)) then begin
    VEr.Code = VIp.VECode;
    if (ReadFirstMain(VEr,1,true)) then begin
      VIp.VEName = VEr.Name;
    end;
  end;
  VIp.DueDate = StringToDate(ImportField);
  VIp.RebDate = StringToDate(ImportField);
  VIp.RefStr = ImportField;
  VIp.BankAcc = ImportField;
  VIp.Sign = ImportField;
  VIp.RebVal = StringToVal(ImportField,M4Val);
  VIp.TransDate = StringToDate(ImportField);
  VIp.InvType = StringToInt(ImportField);
  VIp.VATVal = StringToVal(ImportField,M4Val);
  VIp.APAcc = ImportField;
  VIp.VEFactoring = ImportField;
  VIp.BankName = ImportField;
  VIp.OKPersons = ImportField;
  VIp.CurncyCode = ImportField;
  VIp.ToRateB1 = StringToVal(ImportField,M4Val);
  VIp.ExportFlag = StringToInt(ImportField);
  VIp.VEVatCode = ImportField;
  VIp.Comment = ImportField;
  VIp.CalcVATVal = StringToVal(ImportField,M4Val);
  VIp.Closed = StringToInt(ImportField);
  VIp.Objects = ImportField;
  VIp.PrelBook = StringToInt(ImportField);
  VIp.BankCode = ImportField;
  if (VIp.InvType==0) then begin VIp.InvType = kInvoiceTypeNormal; end;
  return;
end;

procedure ReadImportTagPurchaseInvoices2(var record VIVc VIr)
begin
  string 255 sernr;
  row VIVc VIrw;
  Integer rwcnt;
  
    sernr = ImportField;
    VIr.SerNr = StringToLongInt(sernr);
    VIr.InvDate = StringToDate(ImportField);    
    VIr.PayVal = StringToVal(ImportField,M4Val);
    VIr.RegDate = StringToDate(ImportField);
    VIr.InvoiceNr = ImportField;
    VIr.OKFlag = StringToInt(ImportField);
    VIr.PayDeal = ImportField;
    VIr.VECode = ImportField;
    VIr.VEName = ImportField;
    VIr.DueDate = StringToDate(ImportField);
    VIr.RebDate = StringToDate(ImportField);
    VIr.RefStr = ImportField;
    VIr.BankAcc = ImportField;
    VIr.Sign = ImportField;
    VIr.RebVal = StringToVal(ImportField,M4Val);
    VIr.TransDate = StringToDate(ImportField);
    VIr.InvType = StringToInt(ImportField);
    VIr.VATVal = StringToVal(ImportField,M4Val);
    VIr.APAcc = ImportField;
    VIr.VEFactoring = ImportField;
    VIr.BankName = ImportField;
    VIr.OKPersons = ImportField;
    VIr.CurncyCode = ImportField;
    VIr.ToRateB1 = StringToVal(ImportField,M4Rate);
    VIr.ExportFlag = StringToInt(ImportField);
    VIr.VEVatCode = ImportField;
    VIr.Comment = ImportField;
    VIr.CalcVATVal = StringToVal(ImportField,M4Val);
    VIr.Closed = StringToInt(ImportField);
    VIr.Objects = ImportField;
    VIr.PrelBook = StringToInt(ImportField);
    VIr.BankCode = ImportField;
    VIr.CredInv = StringToLongInt(ImportField);
    VIr.xStatFlag = StringToInt(ImportField);
    VIr.CORefStr = ImportField;
    VIr.ExportedFlag = StringToInt(ImportField);
    VIr.POSerNr = StringToLongInt(ImportField);
    VIr.FrRate = StringToVal(ImportField,M4Rate); 
    VIr.ToRateB2 = StringToVal(ImportField,M4Rate); 
    VIr.BaseRate1 = StringToVal(ImportField,M4Rate); 
    VIr.BaseRate2 = StringToVal(ImportField,M4Rate);
    VIr.CredMark = ImportField;
    VIr.APonTR = StringToInt(ImportField);
    VIr.Invalid = StringToInt(ImportField);
    VIr.VATNr = ImportField;
    VIr.LangCode = ImportField;
    VIr.InstallmentInv = StringToInt(ImportField);
    VIr.POCQStatNr = StringToLongInt(ImportField);
    VIr.SortCode = ImportField;
    VIr.SalesGroup = ImportField;
    VIr.SalesMan = ImportField;
    VIr.POCOSerNr = StringToLongInt(ImportField);
    VIr.HoldSum = StringToVal(ImportField,M4Val); 
    VIr.DiffVal = StringToVal(ImportField,M4Val); 
    VIr.BarCode = ImportField;
    VIr.StatVal = StringToVal(ImportField,M4Val); 
    VIr.xAcceptanceState = StringToInt(ImportField);
    VIr.xAcceptanceGroup = ImportField;
    VIr.WithHoldingTax = StringToVal(ImportField,M4UVal); 
    VIr.SupCurVal = StringToVal(ImportField,M4UVal); 
    if (VIr.FrRate==0) then begin VIr.FrRate = blankval; end;
    if (VIr.ToRateB1==0) then begin VIr.ToRateB1 = blankval; end;
    if (VIr.ToRateB2==0) then begin VIr.ToRateB2 = blankval; end;
    if (VIr.BaseRate1==0) then begin VIr.BaseRate1 = blankval; end;
    if (VIr.BaseRate2==0) then begin VIr.BaseRate2 = blankval; end;
    if (VIr.InvType==0) then begin VIr.InvType = kInvoiceTypeNormal; end;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      VIrw.stp = StringToInt(ImportField);
      ClearRow(VIr,VIrw,VIrw.stp);
      VIrw.ovst = StringToInt(ImportField);
      VIrw.AccNumber = ImportField;
      VIrw.Objects = ImportField;
      VIrw.Comment = ImportField;
      VIrw.Sum = StringToVal(ImportField,M4Val);
      VIrw.Item = ImportField;
      VIrw.qty = StringToVal(ImportField,M4UVal);
      VIrw.PRCode = ImportField;
      VIrw.VATCode = ImportField;
      VIrw.VEPNr = StringToLongInt(ImportField);
      VIrw.PrepayNr = StringToLongInt(ImportField);
      VIrw.PrepayAmount = StringToVal(ImportField,M4Val);
      VIrw.OrdRow = StringToLongInt(ImportField);
      VIrw.VATVal = StringToVal(ImportField,M4Val);
      VIrw.PeriodCode = ImportField;
      VIrw.ACShort = ImportField;
      VIrw.PUNr = StringToLongInt(ImportField);
      if ((VIrw.PUNr>0) and (VIrw.OrdRow>=0)) then begin
        VIrw.PURow = VIrw.OrdRow;
      end;
      if (VIrw.ovst!=1) then begin VIrw.ovst = 0; end;
      MatRowPut(VIr,rwcnt,VIrw);
      rwcnt = rwcnt + 1;
    end;
  return;
end;

global
procedure ReadImportTagPurchaseInvoicesRecord(record VIVc VIr,Integer ver)
begin
  Integer rwcnt;
  row VIVc VIrw,VI2rw;
  string 255 sernr,tstr;
  val sv;

    RecordNew(VIr);  
if (ver==99) then begin
    ImpVIHead(VIr);
    goto LReadImportTagVIVc;
end;    
if (ver==3) then begin
    ReadImportTagPurchaseInvoices2(VIr);
    goto LReadImportTagVIVc;
end;    
    sernr = ImportField;
    VIr.SerNr = StringToLongInt(sernr);
    VIr.InvDate = StringToDate(ImportField);    
    VIr.PayVal = StringToVal(ImportField,M4Val);
    VIr.RegDate = StringToDate(ImportField);
    VIr.InvoiceNr = ImportField;
    VIr.OKFlag = StringToInt(ImportField);
    VIr.PayDeal = ImportField;
    VIr.VECode = ImportField;
    VIr.VEName = ImportField;
    VIr.DueDate = StringToDate(ImportField);
    VIr.RebDate = StringToDate(ImportField);
    VIr.RefStr = ImportField;
    VIr.BankAcc = ImportField;
    VIr.Sign = ImportField;
    VIr.RebVal = StringToVal(ImportField,M4Val);
    VIr.TransDate = StringToDate(ImportField);
    VIr.InvType = StringToInt(ImportField);
    VIr.VATVal = StringToVal(ImportField,M4Val);
    VIr.APAcc = ImportField;
    VIr.VEFactoring = ImportField;
    VIr.BankName = ImportField;
    VIr.OKPersons = ImportField;
    VIr.CurncyCode = ImportField;
    VIr.ToRateB1 = StringToVal(ImportField,M4Rate);
    VIr.ExportFlag = StringToInt(ImportField);
    VIr.VEVatCode = ImportField;
    VIr.Comment = ImportField;
    VIr.CalcVATVal = StringToVal(ImportField,M4Val);
    VIr.Closed = StringToInt(ImportField);
    VIr.Objects = ImportField;
    VIr.PrelBook = StringToInt(ImportField);
    VIr.BankCode = ImportField;
    VIr.CredInv = StringToLongInt(ImportField);
    VIr.CORefStr = ImportField;
    VIr.ExportedFlag = StringToInt(ImportField);
    VIr.POSerNr = StringToLongInt(ImportField);
    VIr.FrRate = StringToVal(ImportField,M4Rate); 
    VIr.ToRateB2 = StringToVal(ImportField,M4Rate); 
    VIr.BaseRate1 = StringToVal(ImportField,M4Rate); 
    VIr.BaseRate2 = StringToVal(ImportField,M4Rate);
    VIr.CredMark = ImportField;
    VIr.APonTR = StringToInt(ImportField);
    VIr.Invalid = StringToInt(ImportField);
    if (VIr.FrRate==0) then begin VIr.FrRate = blankval; end;
    if (VIr.ToRateB1==0) then begin VIr.ToRateB1 = blankval; end;
    if (VIr.ToRateB2==0) then begin VIr.ToRateB2 = blankval; end;
    if (VIr.BaseRate1==0) then begin VIr.BaseRate1 = blankval; end;
    if (VIr.BaseRate2==0) then begin VIr.BaseRate2 = blankval; end;
    if (VIr.InvType==0) then begin VIr.InvType = kInvoiceTypeNormal; end;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      if (ver==2) then begin
        VIrw.stp = StringToInt(ImportField);
        ClearRow(VIr,VIrw,VIrw.stp);
        VIrw.ovst = StringToInt(ImportField);
        VIrw.AccNumber = ImportField;
        VIrw.Objects = ImportField;
        VIrw.Comment = ImportField;
        VIrw.Sum = StringToVal(ImportField,M4Val);
        VIrw.Item = ImportField;
        VIrw.qty = StringToVal(ImportField,M4UVal);
        VIrw.PRCode = ImportField;
        VIrw.VATCode = ImportField;
        VIrw.VEPNr = StringToLongInt(ImportField);
        VIrw.PrepayNr = StringToLongInt(ImportField);
        VIrw.PrepayAmount = StringToVal(ImportField,M4Val);
        VIrw.OrdRow = StringToLongInt(ImportField);
        VIrw.VATVal = StringToVal(ImportField,M4Val);
//        MatRowPut(VIr,rwcnt,VIrw);
//        rwcnt = rwcnt + 1;
      end else begin
        VIrw.stp = StringToInt(ImportField);
        ClearRow(VIr,VIrw,VIrw.stp);
        switch (VIrw.stp) begin
          case 1: 
            VIrw.ovst = StringToInt(ImportField);
            VIrw.AccNumber = ImportField;
            VIrw.Objects = ImportField;
            VIrw.Comment = ImportField;
            VIrw.Sum = StringToVal(ImportField,M4Val);
            VIrw.Item = ImportField;
            VIrw.qty = StringToVal(ImportField,M4UVal);
            VIrw.PRCode = ImportField;
            VIrw.VATCode = ImportField;
            VIrw.PrepayNr = StringToLongInt(ImportField);
            VIrw.PrepayAmount = StringToVal(ImportField,M4Val);
            VIrw.OrdRow = StringToLongInt(ImportField);
            VIrw.VATVal = StringToVal(ImportField,M4Val);
            if (VIrw.ovst!=1) then begin VIrw.ovst = 0; end;
            if (VIrw.PrepayNr!=-1) then begin
              ClearRow(VIr,VI2rw,6);
              VI2rw.PrepayNr = VIrw.PrepayNr;
              VI2rw.PrepayAmount = VIrw.PrepayAmount;
              VI2rw.VATVal = VIrw.VATVal;
              VI2rw.Comment = USetStr(1288);
              MatRowPut(VIr,rwcnt,VI2rw);
              rwcnt = rwcnt + 1;
            end;
            VIrw.PrepayNr = -1;
            VIrw.PrepayAmount = blankval;
            VIrw.VATVal = blankval;
          case 3: 
            VIrw.ovst = StringToInt(ImportField);
            VIr.CredInv = StringToLongInt(ImportField);
        end;
      end;
      MatRowPut(VIr,rwcnt,VIrw);
      rwcnt = rwcnt + 1;
    end; 
LReadImportTagVIVc:;
    if (VIr.CredInv<=0) then begin VIr.CredInv = -1; end;
  return;
end;

procedure ReadImportTagTransactionRecord_TRVc(record TRVc TRr)
begin
  row TRVc TRrw;
  string 255 sernr;
  Integer rwcnt,stp;

  RecordNew(TRr);      
  sernr = ImportField;
  TRr.RegDate = StringToDate(ImportField);
  TRr.Comment = ImportField;
  TRr.TransDate = StringToDate(ImportField);
  TRr.Sign = ImportField;
  TRr.DSum = StringToVal(ImportField,M4Val);
  TRr.CSum = StringToVal(ImportField,M4NegVal);
  TRr.DiffVal = StringToVal(ImportField,M4Val);
  TRr.RefStr = ImportField;
  TRr.xMainf = StringToInt(ImportField);
  TRr.IntYc = StringToInt(ImportField);
  if (TRr.IntYc<IVYc) then begin
    TRr.IntYc = 50 + (TRr.IntYc-50)/2;
//    TRr.IntYc = TRr.IntYc/2;
  end;
  TRr.xBalf = StringToInt(ImportField);
  TRr.Expf = StringToInt(ImportField);
  TRr.ExportedFlag = StringToInt(ImportField);
  TRr.DSum2 = StringToVal(ImportField,M4Val);
  TRr.CSum2 = StringToVal(ImportField,M4NegVal);
  TRr.Diff2Val = StringToVal(ImportField,M4Val);
  TRr.LastChangeDate = StringToDate(ImportField);
  TRr.FileName = ImportField;
  TRr.TransNr = StringToLongInt(ImportField);
  TRr.Number = StringToLongInt(sernr);
  if (sernr=="S") then begin
    TRr.Number = NextSerNr("TRVc",TRr.TransDate,-1,false,""); // S will give next free 
  end;      
  rwcnt = 0;
  while (NextImportLine(false)) begin
    stp = StringToInt(ImportField);
    ClearRow(TRr,TRrw,stp);
    TRrw.stp = stp;
    TRrw.ovst = StringToInt(ImportField);
    TRrw.AccNumber = ImportField;
    TRrw.Objects = ImportField;
    TRrw.DebVal = StringToVal(ImportField,M4Val);
    TRrw.CredVal = StringToVal(ImportField,M4Val);
    TRrw.VATCode = ImportField;
    TRrw.Qty = StringToVal(ImportField,M4Val);
    TRrw.CurDebVal = StringToVal(ImportField,M4Val);
    TRrw.CurCredVal = StringToVal(ImportField,M4Val);
    TRrw.ToRateB1 = StringToVal(ImportField,M4Rate);
    TRrw.Comment = ImportField;
    TRrw.Curncy = ImportField;
    TRrw.BRSerNr = StringToLongInt(ImportField);
    TRrw.BRRowNr = StringToInt(ImportField);
    TRrw.NomVal = StringToVal(ImportField,M4Val);
    TRrw.CompCode = ImportField;
    TRrw.Typ = StringToInt(ImportField);
    TRrw.SerNr = StringToLongInt(ImportField);
    TRrw.DueDate = StringToDate(ImportField);
    TRrw.CorspSer = StringToLongInt(ImportField);
    TRrw.UpdDate = StringToDate(ImportField);
    TRrw.Sign = ImportField;
    TRrw.OldTransDate = StringToDate(ImportField);
    TRrw.CorrNr = StringToLongInt(ImportField);
    TRrw.CorrDate = StringToDate(ImportField);
    TRrw.CorrYc = StringToInt(ImportField);
    TRrw.Reconsf = StringToInt(ImportField);
    TRrw.FrRate = StringToVal(ImportField,M4Rate);
    TRrw.ToRateB2 = StringToVal(ImportField,M4Rate);
    TRrw.DebVal2 = StringToVal(ImportField,M4Val);
    TRrw.CredVal2 = StringToVal(ImportField,M4Val);
    TRrw.BaseRate1 = StringToVal(ImportField,M4Rate);
    TRrw.BaseRate2 = StringToVal(ImportField,M4Rate);
    TRrw.ACShort = ImportField;
    TRrw.ReconCode = ImportField;
    TRrw.TAccNumber = ImportField;
    TRrw.TFromFileName = ImportField;
    TRrw.TFromCode = ImportField;
    MatRowPut(TRr,rwcnt,TRrw);
    rwcnt = rwcnt + 1;
  end;    
  return;
end;


global
procedure ReadImportTagTransactionsRecord(record TRVc TRr,Integer ver)
begin
  row TRVc TRrw;
  string 255 sernr,tstr;
  val sv;
  LongInt corryc;
  Boolean sidef;
  Integer rwcnt,curYearYc;

  if (ver==5) then begin
    ReadImportTagTransactionRecord_TRVc(TRr);
  end else begin
    curYearYc = GetIntYc(CurrentDate);  

    RecordNew(TRr);      
    sernr = ImportField;
    TRr.RegDate = StringToDate(ImportField);
    TRr.Comment = ImportField;
    TRr.TransDate = StringToDate(ImportField);
    TRr.Sign = ImportField;
    TRr.RefStr = ImportField;
    TRr.IntYc = StringToInt(ImportField);
    if (TRr.IntYc<IVYc) then begin
      TRr.IntYc = 50 + (TRr.IntYc-50)/2;
//    TRr.IntYc = TRr.IntYc/2;
    end;
    if (blankdate(TRr.TransDate)) then begin
      TRr.TransDate = TRr.RegDate;
    end;        
    TRr.Number = StringToLongInt(sernr);
    if (sernr=="S") then begin
      TRr.Number = NextSerNr("TRVc",TRr.TransDate,-1,false,""); // S will give next free 
    end;      
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(TRr,TRrw,1);
      TRrw.stp = 1;
      TRrw.ovst = 0;
      TRrw.AccNumber = ImportField;
      if (blank(TRrw.AccNumber)) then begin
        TRrw.stp = StringToInt(ImportField);
      end;

      switch (TRrw.stp) begin
        case 1:
          TRrw.Objects = ImportField;
          TRrw.Comment = ImportField;
          sv = StringToVal(ImportField,M4Val);
          TRrw.ovst = StringToInt(ImportField);
          TRrw.VATCode = ImportField;
          TRrw.Qty = StringToVal(ImportField,M4Qty);
          TRrw.DebVal = StringToVal(ImportField,M4Val);
          TRrw.CredVal = StringToVal(ImportField,M4Val);
          TRrw.CurDebVal = StringToVal(ImportField,M4Val);
          TRrw.CurCredVal = StringToVal(ImportField,M4Val);
          TRrw.ToRateB1 = StringToVal(ImportField,M4Rate);
          TRrw.Curncy = ImportField;
          TRrw.BRSerNr = StringToLongInt(ImportField);
          TRrw.BRRowNr = StringToInt(ImportField);
          TRrw.NomVal = StringToVal(ImportField,M4Val);
          TRrw.CompCode = ImportField;
          TRrw.Typ = StringToInt(ImportField);
          TRrw.SerNr = StringToLongInt(ImportField);
          TRrw.DueDate = StringToDate(ImportField);
          TRrw.CorspSer = StringToLongInt(ImportField);
          TRrw.Reconsf = StringToInt(ImportField);
          TRrw.FrRate = StringToVal(ImportField,M4Rate);
          TRrw.ToRateB2 = StringToVal(ImportField,M4Rate);
          TRrw.DebVal2 = StringToVal(ImportField,M4Val);
          TRrw.CredVal2 = StringToVal(ImportField,M4Val);
          TRrw.BaseRate1 = StringToVal(ImportField,M4Rate);
          TRrw.BaseRate2 = StringToVal(ImportField,M4Rate);
          TRrw.ACShort = ImportField;
          TRrw.ReconCode = ImportField;
          if (sv!=0) then begin
            if (sv>=0) then begin
              TRrw.DebVal = TRrw.DebVal + sv;
            end else begin
              TRrw.CredVal = TRrw.CredVal - sv;
            end;
          end;
        case 2:
          TRrw.UpdDate = StringToDate(ImportField);
          TRrw.Sign = ImportField;
          TRrw.OldTransDate = StringToDate(ImportField);
          if (blankdate(TRrw.OldTransDate)) then begin
            TRrw.OldTransDate = TRr.TransDate;
          end;
        case 3:
          TRrw.CorrNr = StringToLongInt(ImportField);
          TRrw.CorrDate = StringToDate(ImportField);
          corryc = StringToLongInt(ImportField);
          if (corryc==-1) then begin
            corryc = curYearYc;
          end;
          TRrw.CorrYc = corryc;
        case 4:
          TRrw.CorrNr = StringToLongInt(ImportField);
          corryc = StringToLongInt(ImportField);
          if (corryc==-1) then begin
            corryc = curYearYc;
          end;
          TRrw.CorrYc = corryc;
      end;                 
      MatRowPut(TRr,rwcnt,TRrw);
      rwcnt = rwcnt + 1;
    end;    
  end;
  return;
end;

global
procedure ReadImportTagDeliveriesRecord(record SHVc SHr)
begin
  Integer rwcnt;
  row SHVc SHrw;
  string 255 tstr;
  val sv;

    RecordNew(SHr);      
    SHr.SerNr = StringToLongInt(ImportField);
    SHr.OrderNr = StringToLongInt(ImportField);
    SHr.ShipDate = StringToDate(ImportField);
    SHr.CustCode = ImportField;
    SHr.Addr0 = ImportField;
    SHr.Addr1 = ImportField;
    SHr.Addr2 = ImportField;
    SHr.Addr3 = ImportField;
    SHr.Prntdf = StringToInt(ImportField);
    SHr.ShipMode = ImportField;/* dummy */
    SHr.ShipMode = ImportField;
    SHr.OKFlag = StringToInt(ImportField);
    SHr.Location = ImportField;
    SHr.LangCode = ImportField;
    SHr.PRCode = ImportField;
    SHr.Packages = StringToVal(ImportField,M4Qty);
    SHr.Weight = StringToVal(ImportField,M4Qty);
    SHr.Volyme = StringToVal(ImportField,M4Qty);
    SHr.FromCity = ImportField;
    SHr.ToCity = ImportField;
    SHr.FromDock = ImportField;
    SHr.ToDock = ImportField;
    SHr.TransportDirect = ImportField;
    SHr.Comment = ImportField;
    SHr.Check1 = StringToInt(ImportField);
    SHr.Check2 = StringToInt(ImportField);
    SHr.TransportNumber = ImportField;
    SHr.ExportedFlag = StringToInt(ImportField);
    SHr.TotQty = StringToVal(ImportField,M4Qty);
    SHr.LocOKNr = StringToVal(ImportField,M4Qty);
    SHr.Objects = ImportField;
    SHr.FreightCode = ImportField;
    SHr.FreightCompany = ImportField;
    SHr.FreightCompanyRegNr = ImportField;
    SHr.TruckInfo = ImportField;
    SHr.Driver = ImportField;
    SHr.CMRText = ImportField;
    SHr.TotWeight = StringToVal(ImportField,M4Qty);
    SHr.TotVolume = StringToVal(ImportField,M4Qty);
    SHr.SHClass = ImportField;
    SHr.DelAddr3 = ImportField;
    SHr.DelAddr4 = ImportField;
    SHr.DelAddrCode = ImportField;        
    SHr.Sorting = ImportField;        
    SHr.TAX1Sum = StringToVal(ImportField,M4Val);
    SHr.DeliveryMan = ImportField;        
    SHr.Sign = ImportField;        
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(SHr,SHrw,1);
      SHrw.OrdRow = StringToLongInt(ImportField);
      SHrw.ArtCode = ImportField;
      SHrw.Ordered = StringToVal(ImportField,M4UVal);
      SHrw.InStock = StringToVal(ImportField,M4UVal);
      SHrw.Ship = StringToVal(ImportField,M4UVal);
      SHrw.Spec = ImportField;
      SHrw.SerialNr = ImportField;
      SHrw.FIFO = StringToVal(ImportField,M45Val);
      SHrw.Location = ImportField;
      SHrw.Recepy = ImportField;
      SHrw.VARList = ImportField;
      SHrw.BestBefore = StringToDate(ImportField);
      SHrw.FIFORowVal = StringToVal(ImportField,M45Val);
      SHrw.Coefficient = StringToVal(ImportField,M45Val);
      SHrw.BasePrice = StringToVal(ImportField,M423Val);
      SHrw.Source = ImportField;
      SHrw.DespatchRowDate = StringToDate(ImportField);
      SHrw.DespatchRowTime = ImportField;
      SHrw.Objects = ImportField;
      if (SHrw.Recepy=="_") then begin
        SHrw.Recepy = "";
      end;
      SHrw.RowPackages = StringToVal(ImportField,M4UVal);
      SHrw.PackageType = ImportField;
      SHrw.PackageDesc = ImportField;
      SHrw.ExciseNr = ImportField;      
      SHrw.UnitXval = StringToVal(ImportField,M4UVal);
      SHrw.UnitYval = StringToVal(ImportField,M4UVal);
      SHrw.UnitZval = StringToVal(ImportField,M4UVal);
      SHrw.MeasWeight = StringToVal(ImportField,M423Val);
      SHrw.PosCode = ImportField;
      MatRowPut(SHr,rwcnt,SHrw);
      rwcnt = rwcnt + 1;
    end;

  return;
end;

global
procedure ReadImportTagQuotesRecord(record QTVc QTr)
begin
  Integer rwcnt;
  row QTVc QTrw;
  string 255 tstr;
  val sv;

    RecordNew(QTr);      
    QTr.SerNr = StringToLongInt(ImportField);
    QTr.QTDate = StringToDate(ImportField);
    QTr.PayDeal = ImportField;
    QTr.ExportFlag = StringToInt(ImportField);
    QTr.Objects = ImportField;
    QTr.PlanShip = ImportField;
    QTr.ShipAddr0 = ImportField;
    QTr.ShipAddr1 = ImportField;
    QTr.ShipAddr2 = ImportField;
    QTr.ShipAddr3 = ImportField;
    if (NextImportLine(true)) then begin end;
    QTr.CustCode = ImportField;
    QTr.Addr0 = ImportField;
    QTr.Addr1 = ImportField;
    QTr.Addr2 = ImportField;
    QTr.Addr3 = ImportField;
    QTr.CustCat = ImportField;
    QTr.PriceList = ImportField;
    QTr.InclVAT = StringToInt(ImportField);
    if (NextImportLine(true)) then begin end;
    QTr.CustContact = ImportField;
    QTr.OurContact = ImportField;
    QTr.Comment = ImportField;
    QTr.ShipMode = ImportField;
    QTr.SalesMan = ImportField;
    QTr.CurncyCode = ImportField;
    QTr.ToRateB1 = StringToVal(ImportField,M4Rate);
    QTr.Sign = ImportField;
    QTr.ShipDeal = ImportField;
    QTr.LangCode = ImportField;
    QTr.PRCode = ImportField;
    QTr.InvoiceToCode = ImportField;
    QTr.Closed = StringToInt(ImportField);
    QTr.BuildOn = StringToInt(ImportField);
    QTr.InvOnlyOnFull = StringToInt(ImportField);
    QTr.ValidUntilDate = ImportField;
    QTr.QuoteClass = ImportField;
    QTr.RebCode = ImportField;
    if (NextImportLine(true)) then begin end;
    QTr.Sum0 = StringToVal(ImportField,M4Val);
    QTr.Sum1 = StringToVal(ImportField,M4Val);
    QTr.Sum2 = StringToVal(ImportField,M4Val);
    QTr.Sum3 = StringToVal(ImportField,M4Val);
    QTr.Sum4 = StringToVal(ImportField,M4Val);
    QTr.RebCode = ImportField;
    QTr.VATNr = ImportField;
    QTr.Phone = ImportField;
    QTr.Fax = ImportField;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(QTr,QTrw,1);
      QTrw.stp = StringToInt(ImportField);
      switch (QTrw.stp) begin
        case 1: 
          QTrw.ArtCode = ImportField;
          QTrw.Quant = StringToVal(ImportField,M4Qty);
          QTrw.Spec = ImportField;
          QTrw.Price = StringToVal(ImportField,M423Val);
          QTrw.Sum = StringToVal(ImportField,M4Val);
          QTrw.vRebate = StringToVal(ImportField,M41Val);
          QTrw.SalesAcc = ImportField;
          QTrw.Objects = ImportField;
          QTrw.BasePrice = StringToVal(ImportField,M4Val);
          QTrw.rowGP = StringToVal(ImportField,M4Val);
          QTrw.VATCode = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          QTrw.PlanShip = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          QTrw.SerialNr = ImportField;
          QTrw.PriceFactor = StringToVal(ImportField,M4Val);
          QTrw.VARList = ImportField;
      end;
      MatRowPut(QTr,rwcnt,QTrw);
      rwcnt = rwcnt + 1;
    end;    

  return;
end;

global
procedure ReadImportTagqtRecordRead(record QTVc QTr)
begin
  Integer rwcnt;
  row QTVc QTrw;
  string 255 tstr;
  val sv;

    RecordNew(QTr);      
    QTr.SerNr = StringToLongInt(ImportField);
    QTr.QTDate = StringToDate(ImportField);
    QTr.PayDeal = ImportField;
    QTr.ExportFlag = StringToInt(ImportField);
    QTr.Objects = ImportField;
    QTr.PlanShip = ImportField;
    QTr.ShipAddr0 = ImportField;
    QTr.ShipAddr1 = ImportField;
    QTr.ShipAddr2 = ImportField;
    QTr.ShipAddr3 = ImportField;
    if (NextImportLine(true)) then begin end;
    QTr.CustCode = ImportField;
    QTr.Addr0 = ImportField;
    QTr.Addr1 = ImportField;
    QTr.Addr2 = ImportField;
    QTr.Addr3 = ImportField;
    QTr.CustCat = ImportField;
    QTr.PriceList = ImportField;
    QTr.InclVAT = StringToInt(ImportField);
    if (NextImportLine(true)) then begin end;
    QTr.CustContact = ImportField;
    QTr.OurContact = ImportField;
    QTr.Comment = ImportField;
    QTr.ShipMode = ImportField;
    QTr.SalesMan = ImportField;
    QTr.CurncyCode = ImportField;
    QTr.ToRateB1 = StringToVal(ImportField,M4Rate);
    QTr.Sign = ImportField;
    QTr.ShipDeal = ImportField;
    QTr.LangCode = ImportField;
    QTr.PRCode = ImportField;
    QTr.InvoiceToCode = ImportField;
    QTr.Closed = StringToInt(ImportField);
    QTr.BuildOn = StringToInt(ImportField);
    QTr.InvOnlyOnFull = StringToInt(ImportField);
    QTr.ValidUntilDate = ImportField;
    QTr.QuoteClass = ImportField;
    QTr.RebCode = ImportField;
    if (NextImportLine(true)) then begin end;
    QTr.Sum0 = StringToVal(ImportField,M4Val);
    QTr.Sum1 = StringToVal(ImportField,M4Val);
    QTr.Sum2 = StringToVal(ImportField,M4Val);
    QTr.Sum3 = StringToVal(ImportField,M4Val);
    QTr.Sum4 = StringToVal(ImportField,M4Val);
    QTr.RebCode = ImportField;
    QTr.VATNr = ImportField;
    QTr.Phone = ImportField;
    QTr.Fax = ImportField;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(QTr,QTrw,1);
      QTrw.stp = StringToInt(ImportField);
      switch (QTrw.stp) begin
        case 1: 
          QTrw.ArtCode = ImportField;
          QTrw.Quant = StringToVal(ImportField,M4Qty);
          QTrw.Spec = ImportField;
          QTrw.Price = StringToVal(ImportField,M423Val);
          QTrw.Sum = StringToVal(ImportField,M4Val);
          QTrw.vRebate = StringToVal(ImportField,M41Val);
          QTrw.SalesAcc = ImportField;
          QTrw.Objects = ImportField;
          QTrw.BasePrice = StringToVal(ImportField,M4Val);
          QTrw.rowGP = StringToVal(ImportField,M4Val);
          QTrw.VATCode = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          QTrw.PlanShip = ImportField;
          tstr = ImportField;
          tstr = ImportField;
          QTrw.SerialNr = ImportField;
          QTrw.PriceFactor = StringToVal(ImportField,M4Val);
          QTrw.VARList = ImportField;
      end;
      MatRowPut(QTr,rwcnt,QTrw);
      rwcnt = rwcnt + 1;
    end;    

  return;
end;

global
procedure ReadImportTagGoodsReceiptsRecord(record PUVc PUr,Integer ver)
begin
  Integer rwcnt;
  row PUVc PUrw;
  record INVc INr;
  string 255 tstr;
  val sv,t;

    RecordNew(PUr);  
if (ver==1) then begin
    PUr.SerNr = StringToLongInt(ImportField);
    PUr.RegDate = StringToDate(ImportField);
    PUr.TransDate = StringToDate(ImportField);
    PUr.Comment = ImportField;
    PUr.VECode = ImportField;
    PUr.VEName = ImportField;
    PUr.PONr = StringToLongInt(ImportField);
    PUr.Location = ImportField;
    PUr.OKFlag = StringToInt(ImportField);
    PUr.CurncyCode = ImportField;
    PUr.ToRateB1 = StringToVal(ImportField,M4Rate);
    PUr.InclVAT = 0;
    PUr.SumQuant = blankval;
    PUr.SumCostPrice = blankval;
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(PUr,PUrw,1);
      PUrw.ArtCode = ImportField;
      PUrw.Quant = StringToVal(ImportField,M4UVal);
      PUrw.Spec = ImportField;
      tstr = ImportField;
      PUrw.UPrice = StringToVal(tstr,M4Val);
      PUrw.SerialNr = ImportField;
      PUrw.OrdRow = StringToLongInt(ImportField);
      if (blank(PUrw.Spec) or (tstr=="S")) then begin
        INr.Code = PUrw.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin
          if (blank(PUrw.Spec)) then begin
            PUrw.Spec = INr.Name;
          end;
          if (tstr=="S") then begin
            PUrw.UPrice = INr.InPrice;
          end else begin
            PUrw.UPrice = StringToVal(ImportField,M4Val);
          end;
        end;
      end;
/* Supporting old TB, MulM4OneRate is OK */
      MulM4OneRate(PUrw.UPrice,PUr.ToRateB1,sv,DefaultCurRoundOff,false);
      PUrw.CostPrice = sv;
/*      CopyM4Val(&PUrw.CostPrice,&PUrw.UPrice); */
      PUrw.Extra = "";
      PUrw.VEItemCode = "";
      t = t + PUrw.Quant;
      sv = PUrw.UPrice*PUrw.Quant;
      PUr.SumCostPrice = PUr.SumCostPrice + sv;
      PUrw.ovst = 0;
      PUrw.stp = 1;
      MatRowPut(PUr,rwcnt,PUrw);
      rwcnt = rwcnt + 1;
    end;
    PUr.SumQuant = Round(t,DefaultRoundMode);
end;    
if (ver==2) then begin
    PUr.SerNr = StringToLongInt(ImportField);
    PUr.RegDate = StringToDate(ImportField);
    PUr.TransDate = StringToDate(ImportField);
    PUr.Comment = ImportField;
    PUr.VECode = ImportField;
    PUr.VEName = ImportField;
    PUr.PONr = StringToLongInt(ImportField);
    PUr.Location = ImportField;
    PUr.OKFlag = StringToInt(ImportField);
    PUr.CurncyCode = ImportField;
    PUr.ToRateB1 = StringToVal(ImportField,M4Rate);
    PUr.InclVAT = StringToInt(ImportField);
    PUr.SumCostPrice = StringToVal(ImportField,M45Val);
    PUr.SumQuant = StringToVal(ImportField,M4UVal);
    PUr.ShipCost = StringToVal(ImportField,M4UVal);
    PUr.CustomsCost = StringToVal(ImportField,M4UVal);
    PUr.ExtraCost = StringToVal(ImportField,M4UVal);
    PUr.ExportedFlag = StringToInt(ImportField);
    PUr.FrRate = StringToVal(ImportField,M4Rate);
    PUr.ToRateB2 = StringToVal(ImportField,M4Rate);
    PUr.BaseRate1 = StringToVal(ImportField,M4Rate);
    PUr.BaseRate2 = StringToVal(ImportField,M4Rate);
    PUr.LocOKNr = StringToVal(ImportField,M4Qty);
    PUr.Objects = ImportField;
    PUr.PUClass = ImportField;
    PUr.POCOSerNr = StringToLongInt(ImportField);
    PUr.Cost1 = StringToVal(ImportField,M4UVal);
    PUr.Cost2 = StringToVal(ImportField,M4UVal);
    PUr.Cost3 = StringToVal(ImportField,M4UVal);
    PUr.Cost4 = StringToVal(ImportField,M4UVal);
    PUr.Cost5 = StringToVal(ImportField,M4UVal);
    PUr.VATVal = StringToVal(ImportField,M4UVal);
    PUr.SubTotal = StringToVal(ImportField,M4UVal);
    PUr.PayVal = StringToVal(ImportField,M4UVal);
    PUr.VEVATCode = ImportField;
    PUr.Invalid = StringToInt(ImportField);
    PUr.ExportFlag = StringToInt(ImportField);
    PUr.PrelPUNr = StringToLongInt(ImportField);
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(PUr,PUrw,1);
      
      PUrw.ArtCode = ImportField;
      PUrw.Quant = StringToVal(ImportField,M4UVal);
      PUrw.Spec = ImportField;
      tstr = ImportField;
      PUrw.UPrice = StringToVal(tstr,M45Val);
      PUrw.SerialNr = ImportField;
      PUrw.OrdRow = StringToLongInt(ImportField);
      PUrw.Extra = ImportField;
      PUrw.CostPrice = StringToVal(ImportField,M45Val);
      PUrw.VEItemCode = ImportField;
      PUrw.VARList = ImportField;
      PUrw.ShipCost = StringToVal(ImportField,M4UVal);
      PUrw.CustomsCost = ImportField;
      PUrw.BestBefore = StringToDate(ImportField);
      PUrw.Coefficient = StringToVal(ImportField,M45Val);
      PUrw.BasePrice = StringToVal(ImportField,M423Val);
      PUrw.Sum = StringToVal(ImportField,M45Val);
      PUrw.Comment = ImportField;
      PUrw.Objects = ImportField;
      PUrw.CostAcc = ImportField;
      PUrw.CredAcc = ImportField;
      PUrw.CustomsNr = ImportField;
      PUrw.CountryOfOrg = ImportField;
      PUrw.PosCode = ImportField;
      PUrw.BatchStatus = ImportField;
      PUrw.UnitXval = StringToVal(ImportField,M4UVal);
      PUrw.UnitYval = StringToVal(ImportField,M4UVal);
      PUrw.UnitZval = StringToVal(ImportField,M4UVal);
      PUrw.RowCost1 = StringToVal(ImportField,M4UVal);
      PUrw.RowCost2 = StringToVal(ImportField,M4UVal);
      PUrw.RowCost3 = StringToVal(ImportField,M4UVal);
      PUrw.RowCost4 = StringToVal(ImportField,M4UVal);
      PUrw.RowCost5 = StringToVal(ImportField,M4UVal);
      PUrw.VATCode = ImportField;
      PUrw.stp = StringToInt(ImportField);
      if ((PUrw.stp!=1) and (PUrw.stp!=3)) then begin PUrw.stp = 1; end;
      PUrw.ovst = StringToInt(ImportField);
      PUrw.Sign = ImportField;
      PUrw.UpdDate = StringToDate(ImportField);
      
      PUrw.PORecon = StringToVal(ImportField,M4UVal);
      PUrw.POReconComment = ImportField;
      PUrw.VIRecon = StringToVal(ImportField,M4UVal);
      PUrw.VIReconComment = ImportField;
      PUrw.PONr = StringToLongInt(ImportField);
      PUrw.BarCode = ImportField;
      PUrw.PrelPUNr = StringToLongInt(ImportField);
      PUrw.PrelPURow = StringToLongInt(ImportField);
      if (blank(PUrw.Spec)) or (tstr=="S") then begin // JAJ
        INr.Code = PUrw.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin
          if (blank(PUrw.Spec)) then begin
            PUrw.Spec = INr.Name;
          end;
          if (tstr=="S") then begin
            PUrw.UPrice = INr.InPrice;
            PUCalcCostPrice(PUrw.ArtCode,PUrw.UPrice,PUr.InclVAT,PUr.NoTAXonVAT,PUrw.Extra,PUr.CurncyCode,
                            PUr.FrRate,PUr.ToRateB1,PUr.ToRateB2,PUr.BaseRate1,PUr.BaseRate2,
                            PUrw.ShipCost,PUrw.RowCost1,PUrw.RowCost2,PUrw.RowCost3,PUrw.RowCost4,PUrw.RowCost5,
                            PUrw.CustomsCost,t,PUrw.Quant,sv,PUrw.VATCode,PUr.ExportFlag);
            PUrw.CostPrice = t;                                        
            PUrw.Sum = sv;
          end else begin
            PUrw.UPrice = StringToVal(tstr,M4Val);
          end;
        end;
      end;

      MatRowPut(PUr,rwcnt,PUrw);
      rwcnt = rwcnt + 1;
    end;
end;    
  return;
end;

global
procedure ReadImportTagPurchaseOrdersRecord(record POVc POr)
begin
  Integer rwcnt,i;
  row POVc POrw;
  string 255 tstr;
  val sv;

    RecordNew(POr);      
    POr.SerNr = StringToLongInt(ImportField);    
    POr.VECode = ImportField;
    POr.TransDate = StringToDate(ImportField);
    POr.PayDeal = ImportField;
    POr.ExportFlag = StringToInt(ImportField);
    POr.OKFlag = StringToInt(ImportField);
    POr.Addr0 = ImportField;
    POr.Addr1 = ImportField;
    POr.Addr2 = ImportField;
    POr.Addr3 = ImportField;
    POr.ShipAddr0 = ImportField;
    POr.ShipAddr1 = ImportField;
    POr.ShipAddr2 = ImportField;
    POr.ShipAddr3 = ImportField;
    POr.VEContact = ImportField;
    POr.OurContact = ImportField;
    POr.ShipMode = ImportField;
    POr.CurncyCode = ImportField;
    POr.PlanShip = ImportField;
    POr.Sign = ImportField;
    POr.ShipDeal = ImportField;
    POr.LangCode = ImportField;
    POr.OrdNr = StringToLongInt(ImportField);
    POr.ToRateB1 = StringToVal(ImportField,M4Rate);
    POr.Closed = StringToInt(ImportField);
    POr.CostPerUnit = ImportField;
    POr.Sum0 = StringToVal(ImportField,M4Val);
    POr.Sum1 = StringToVal(ImportField,M4Val);
    POr.Sum2 = StringToVal(ImportField,M4Val);
    POr.Sum3 = StringToVal(ImportField,M4Val);
    POr.Sum4 = StringToVal(ImportField,M4Val);
    POr.PRCode = ImportField;
    POr.Printdf = StringToInt(ImportField);
    POr.Comment = ImportField;
    POr.InclVAT = StringToInt(ImportField);
    POr.Location = ImportField;
    POr.VEFactoring = ImportField;
    POr.PUFlag = StringToInt(ImportField);
    POr.OSFlag = StringToInt(ImportField);
    POr.ExportedFlag = StringToInt(ImportField);
    POr.FrRate = StringToVal(ImportField,M4Rate);
    POr.ToRateB2 = StringToVal(ImportField,M4Rate);
    POr.BaseRate1 = StringToVal(ImportField,M4Rate);
    POr.BaseRate2 = StringToVal(ImportField,M4Rate);
    POr.WONr = StringToLongInt(ImportField);
    POr.Objects = ImportField;
    POr.PIFlag = StringToInt(ImportField);
    POr.InvFlag = StringToInt(ImportField);
    POr.Reference = ImportField;
    POr.SalesMan = ImportField;
    POr.OKPersons = ImportField;
    POr.POClass = ImportField;
    POr.POCQStatNr = StringToLongInt(ImportField);
    POr.SalesGroup = ImportField;
    POr.InvAddr3 = ImportField;
    POr.InvAddr4 = ImportField;
    POr.DelAddr3 = ImportField;
    POr.DelAddr4 = ImportField;
    POr.POCOSerNr = StringToLongInt(ImportField);
    POr.VEVATCode = ImportField;      
    POr.TotPalletNr= StringToVal(ImportField,M4UVal);
    POr.Cost1 = StringToVal(ImportField,M4UVal);   
    POr.Cost2 = StringToVal(ImportField,M4UVal);   
    POr.Cost3 = StringToVal(ImportField,M4UVal);   
    POr.Cost4 = StringToVal(ImportField,M4UVal);   
    POr.Cost5 = StringToVal(ImportField,M4UVal);   
    POr.CustomsCost = StringToVal(ImportField,M4UVal);   
    POr.ShipCost = StringToVal(ImportField,M4UVal);     
    POr.IntORNo = StringToLongInt(ImportField);
    POr.xAcceptanceState = StringToInt(ImportField);
    POr.xAcceptanceGroup = ImportField;
    POr.PlanShipDate = StringToDate(ImportField);
    POr.PrepaidAmount = StringToVal(ImportField,M4Val);
    POr.InvBeforePU = StringToInt(ImportField);
    POr.TAX1Sum = StringToVal(ImportField,M4Val);
    rwcnt = 0;
    while (NextImportLine(false)) begin
      POrw.stp = StringToInt(ImportField);
      ClearRow(POr,POrw,POrw.stp);
      POrw.ovst = StringToInt(ImportField);
      POrw.VEArtCode = ImportField;
      POrw.ArtCode = ImportField;
      POrw.Quant = StringToVal(ImportField,M4UVal);
      POrw.Spec = ImportField;
      POrw.Price = StringToVal(ImportField,M45Val);
      POrw.Sum = StringToVal(ImportField,M45Val);
      POrw.vRebate = StringToVal(ImportField,M41Val);
      POrw.VATCode = ImportField;
      POrw.Objects = ImportField;
      POrw.Shipd2 = StringToVal(ImportField,M4UVal);
      POrw.Shipd1 = StringToVal(ImportField,M4UVal);
      POrw.VEQuant = StringToVal(ImportField,M4UVal);
      POrw.PIFactor = StringToVal(ImportField,M4UVal);
      POrw.PriceFactor = StringToVal(ImportField,M45Val);
      POrw.VARList = ImportField;
      POrw.PRCode = ImportField;
      POrw.WSNr = StringToLongInt(ImportField);
      POrw.Invd = StringToVal(ImportField,M4UVal);
      POrw.CostAcc = ImportField;
      POrw.PlanShipRow = ImportField;
      POrw.Comment = ImportField;
      POrw.Coefficient = StringToVal(ImportField,M45Val);
      POrw.RentSerialNr = ImportField;
      POrw.PalletNr = StringToVal(ImportField,M4UVal);
      POrw.UnitCode = ImportField;
      POrw.VEUnit = ImportField;
      POrw.RowCost1 = StringToVal(ImportField,M4UVal);
      POrw.RowCost2 = StringToVal(ImportField,M4UVal);
      POrw.RowCost3 = StringToVal(ImportField,M4UVal);
      POrw.RowCost4 = StringToVal(ImportField,M4UVal);
      POrw.RowCost5 = StringToVal(ImportField,M4UVal); 
      POrw.ShipCost = StringToVal(ImportField,M45Val);
      POrw.CustomsCost = ImportField;
      POrw.IntORRow = StringToLongInt(ImportField);
      MatRowPut(POr,rwcnt,POrw);
      rwcnt = rwcnt + 1;
    end;    
    rwcnt = MatRowCnt(POr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(POr,i,POrw);
      if (blank(POrw.VEQuant)) then begin
        POrw.VEQuant = POrw.Quant;
        MatRowPut(POr,i,POrw);
      end;
    end;
    SetPOFlags(POr,false);
//    POSumup(POr);recelculating on import is not good, changes data
  return;
end;

global
procedure ReadImportTagAttachmentsRecord(record Attach2Vc Attachr,record MailVc Mailr)
begin
  RecordNew(Attachr);    
  Attachr.SerNr = StringToLongInt(ImportField);    
  Mailr.SerNr = StringToLongInt(ImportField);    
  Attachr.FileName = ImportField;
  Attachr.PackTyp = 0;
  return;
end;

