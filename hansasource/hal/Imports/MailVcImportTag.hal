external procedure ResolveMailboxNumber(var row MailVc);

global
updating procedure ReadImportTagmail()
begin
  record MailVc Mailr;
  record MailReadVc MRr;
  row MailVc Mailrw;
  LongInt i,mailboxes,rwcnt;
  Boolean sentf;
  
  while (NextImportLine(false)) begin
    RecordNew(Mailr);
    ImportOneRecord(Mailr,"mail");
    sentf = Mailr.SendFlag<>0;
    
    rwcnt = MatRowCnt(Mailr);
    for (i = 0; i<rwcnt; i = i + 1) begin
      MatRowGet(Mailr,i,Mailrw);
      
      ResolveMailboxNumber(Mailrw);
      if (Mailrw.Mailbox<>-1) then begin
        MRr.mailSerNr = Mailr.SerNr;
        MRr.mailBoxNr = Mailrw.Mailbox;
        MRr.accode = kMailStatusDeleted;
        
        if (ReadFirstKey("userCode",MRr,3,true)) then begin
          Mailrw.AddrStatus = kMailStatusDeleted;
          //LogText(0,"Mail " & Mailr.SerNr & " is deleted for mailbox " & Mailrw.Mailbox);
        end;
        
        if (sentf==false and Mailrw.RowTyp<>kMailRowTypeFrom) then begin
          Mailrw.Mailbox = -1;
        end else begin
          mailboxes = mailboxes + 1;
        end;
        
        MatRowPut(Mailr,i,Mailrw);
      end;
    end;
    
    if (mailboxes>0) then begin
      if (RecordImportStore(Mailr,false)) then begin end;
    end;
  end;
  
  return;
end;

global
updating procedure ReadImportTagmail2()
begin
  record MailVc Mailr;
  row MailVc Mailrw;
  longint rwcnt;
  
  while (NextImportLine(false)) begin
    RecordNew(Mailr);
    
    Mailr.SerNr = StringToLongInt(ImportField);
    Mailr.Header = ImportField;
    Mailr.TransDate = StringToDate(ImportField);
    Mailr.TransTime = StringToTime(ImportField);
    Mailr.LockedFlag = StringToInt(ImportField);
    Mailr.SendFlag = StringToInt(ImportField);
    Mailr.HasFileAtt = StringToInt(ImportField);
    Mailr.HasRecAtt = StringToInt(ImportField);
    Mailr.Priority = StringToInt(ImportField);
    Mailr.Lifespan = StringToInt(ImportField);
    Mailr.MessageID = ImportField;
    Mailr.Identifier = ImportField;
    Mailr.LangCode = ImportField;
    Mailr.Sortorder = ImportField;
    Mailr.Version = StringToLongInt(ImportField);
    Mailr.HtmlTranslation = StringToInt(ImportField);
    
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(Mailr,Mailrw,1);
      
      Mailrw.RowTyp = StringToInt(ImportField);
      Mailrw.AddrCode = ImportField;
      Mailrw.AddrStatus = StringToInt(ImportField);
      Mailrw.AddrFolder = ImportField;
      Mailrw.Mailbox = StringToLongInt(ImportField);
      
      MatRowPut(Mailr,rwcnt,Mailrw);
      
      rwcnt = rwcnt + 1;
    end;
    
    ReadRecordTextField(Mailr,"Math");
    
    if (RecordImportStore(Mailr,false)) then begin end;
  end;
end;

global
updating procedure ReadImportTagConfVc4()
begin
  record ConfVc Confr;
  row ConfVc Confrw;
  longint rwcnt;
  
  while (NextImportLine(false)) begin
    RecordNew(Confr);
    
    Confr.SerNr = StringToLongInt(ImportField);
    Confr.AddrName = ImportField;
    Confr.AddrCode = ImportField;
    Confr.MotherConf = StringToLongInt(ImportField);
    Confr.Class = StringToInt(ImportField);
    Confr.MaxMail = StringToLongInt(ImportField);
    Confr.MaxReadDays = StringToLongInt(ImportField);
    Confr.MaxUnreadDays = StringToLongInt(ImportField);
    Confr.Comment = ImportField;
    Confr.HtmForm = ImportField;
    Confr.Closed = StringToInt(ImportField);
    Confr.UserType = StringToInt(ImportField);
    Confr.Identifier = ImportField;
    Confr.Sortorder = ImportField;
    Confr.Version = StringToLongInt(ImportField);
    Confr.ExtEmailAddrs = ImportField;
    Confr.MaxUpdateDays = StringToLongInt(ImportField);
    
    rwcnt = 0;
    while (NextImportLine(false)) begin
      ClearRow(Confr,Confrw,1);
      
      Confrw.Group = ImportField;
      
      MatRowPut(Confr,rwcnt,Confrw);
      
      rwcnt = rwcnt + 1;
    end;
    
    if (RecordImportStore(Confr,false)) then begin end;
  end;
  
end;

global
updating procedure ReadImportTagmailread2(string thetag)
begin
  record MailReadVc MRr;
  
  while (NextImportLine(false)) begin
    RecordNew(MRr);
    
    MRr.mailSerNr = StringToLongInt(ImportField);
    MRr.mailBoxNr = StringToLongInt(ImportField);
    MRr.accode = StringToInt(ImportField);
    MRr.fDate = StringToDate(ImportField);
    MRr.fTime = StringToTime(ImportField);
        
    if (RecordImportStore(MRr,false)) then begin end;
  end;
  return;
end;
