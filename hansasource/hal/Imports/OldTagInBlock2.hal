external updating procedure AddRowFormDefOnImport(var record FormDefVc,row InvDefBlock);

global
updating procedure SVODefBlockImport()
begin
  record SVODefBlock SVODefRec;
  row SVODefBlock SVODefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SVODefRec,SVODefrw,1);
    SVODefrw.LangCode = ImportField;
    SVODefrw.UserGroup = ImportField;
    SVODefrw.SerNr = StringToLongInt(ImportField);
    SVODefrw.FPCode = ImportField;
    SVODefrw.PrintGroupCode = ImportField;
    SVODefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(SVODefRec,i,SVODefrw);
    i = i + 1;
  end;
  BlockStore(SVODefRec);
  return;
end;

global
updating procedure SVGMFDefBlockImport()
begin
  record SVGMFDefBlock SVGMFDefRec;
  row SVGMFDefBlock SVGMFDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SVGMFDefRec,SVGMFDefrw,1);
    SVGMFDefrw.LangCode = ImportField;
    SVGMFDefrw.UserGroup = ImportField;
    SVGMFDefrw.SerNr = StringToLongInt(ImportField);
    SVGMFDefrw.FPCode = ImportField;
    SVGMFDefrw.PrintGroupCode = ImportField;
    SVGMFDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(SVGMFDefRec,i,SVGMFDefrw);
    i = i + 1;
  end;
  BlockStore(SVGMFDefRec);
  return;
end;

global
updating procedure WOrdDefBlockImport()
begin
  record WOrdDefBlock WOrdDefRec;
  row WOrdDefBlock WOrdDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(WOrdDefRec,WOrdDefrw,1);
    WOrdDefrw.LangCode = ImportField;
    WOrdDefrw.UserGroup = ImportField;
    WOrdDefrw.SerNr = StringToLongInt(ImportField);
    WOrdDefrw.FPCode = ImportField;
    WOrdDefrw.PrintGroupCode = ImportField;
    WOrdDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(WOrdDefRec,i,WOrdDefrw);
    i = i + 1;
  end;
  BlockStore(WOrdDefRec);
  return;
end;

global
updating procedure WSDefBlockImport()
begin
  record WSDefBlock WSDefRec;
  row WSDefBlock WSDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(WSDefRec,WSDefrw,1);
    WSDefrw.LangCode = ImportField;
    WSDefrw.UserGroup = ImportField;
    WSDefrw.SerNr = StringToLongInt(ImportField);
    WSDefrw.FPCode = ImportField;
    WSDefrw.PrintGroupCode = ImportField;
    WSDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(WSDefRec,i,WSDefrw);
    i = i + 1;
  end;
  BlockStore(WSDefRec);
  return;
end;

global
updating procedure IVCashDefBlockImport()
begin
  record IVCashDefBlock IVCashDefRec;
  row IVCashDefBlock IVCashDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(IVCashDefRec,IVCashDefrw,1);
    IVCashDefrw.LangCode = ImportField;
    IVCashDefrw.UserGroup = ImportField;
    IVCashDefrw.SerNr = StringToLongInt(ImportField);
    IVCashDefrw.FPCode = ImportField;
    IVCashDefrw.PrintGroupCode = ImportField;
    IVCashDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(IVCashDefRec,i,IVCashDefrw);
    i = i + 1;
  end;
  BlockStore(IVCashDefRec);
  return;
end;

global
updating procedure RestAccDefBlockImport()
begin
  record RestAccDefBlock RestAccDefRec;
  row RestAccDefBlock RestAccDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(RestAccDefRec,RestAccDefrw,1);
    RestAccDefrw.LangCode = ImportField;
    RestAccDefrw.UserGroup = ImportField;
    RestAccDefrw.SerNr = StringToLongInt(ImportField);
    RestAccDefrw.FPCode = ImportField;
    RestAccDefrw.PrintGroupCode = ImportField;
    RestAccDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(RestAccDefRec,i,RestAccDefrw);
    i = i + 1;
  end;
  BlockStore(RestAccDefRec);
  return;
end;

global
updating procedure GuestDocDefBlockImport()
begin
  record GuestDocDefBlock GuestDocDefRec;
  row GuestDocDefBlock GuestDocDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(GuestDocDefRec,GuestDocDefrw,1);
    GuestDocDefrw.LangCode = ImportField;
    GuestDocDefrw.UserGroup = ImportField;
    GuestDocDefrw.SerNr = StringToLongInt(ImportField);
    GuestDocDefrw.FPCode = ImportField;
    GuestDocDefrw.PrintGroupCode = ImportField;
    GuestDocDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(GuestDocDefRec,i,GuestDocDefrw);
    i = i + 1;
  end;
  BlockStore(GuestDocDefRec);
  return;
end;

global
updating procedure JobDefBlockImport()
begin
  record JobDefBlock JobDefRec;
  row JobDefBlock JobDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(JobDefRec,JobDefrw,1);
    JobDefrw.LangCode = ImportField;
    JobDefrw.UserGroup = ImportField;
    JobDefrw.SerNr = StringToLongInt(ImportField);
    JobDefrw.FPCode = ImportField;
    JobDefrw.PrintGroupCode = ImportField;
    JobDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(JobDefRec,i,JobDefrw);
    i = i + 1;
  end;
  BlockStore(JobDefRec);
  return;
end;

global
updating procedure ResAvDefBlockImport()
begin
  record ResAvDefBlock ResAvDefRec;
  row ResAvDefBlock ResAvDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ResAvDefRec,ResAvDefrw,1);
    ResAvDefrw.LangCode = ImportField;
    ResAvDefrw.UserGroup = ImportField;
    ResAvDefrw.SerNr = StringToLongInt(ImportField);
    ResAvDefrw.FPCode = ImportField;
    ResAvDefrw.PrintGroupCode = ImportField;
    ResAvDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(ResAvDefRec,i,ResAvDefrw);
    i = i + 1;
  end;
  BlockStore(ResAvDefRec);
  return;
end;

global
updating procedure ExcurDocDefBlockImport()
begin
  record ExcurDocDefBlock ExcurDocDefRec;
  row ExcurDocDefBlock ExcurDocDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ExcurDocDefRec,ExcurDocDefrw,1);
    ExcurDocDefrw.LangCode = ImportField;
    ExcurDocDefrw.UserGroup = ImportField;
    ExcurDocDefrw.SerNr = StringToLongInt(ImportField);
    ExcurDocDefrw.FPCode = ImportField;
    ExcurDocDefrw.PrintGroupCode = ImportField;
    ExcurDocDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(ExcurDocDefRec,i,ExcurDocDefrw);
    i = i + 1;
  end;
  BlockStore(ExcurDocDefRec);
  return;
end;

global
updating procedure TransferDocDefBlockImport()
begin
  record TransferDocDefBlock TransferDocDefRec;
  row TransferDocDefBlock TransferDocDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(TransferDocDefRec,TransferDocDefrw,1);
    TransferDocDefrw.LangCode = ImportField;
    TransferDocDefrw.UserGroup = ImportField;
    TransferDocDefrw.SerNr = StringToLongInt(ImportField);
    TransferDocDefrw.FPCode = ImportField;
    TransferDocDefrw.PrintGroupCode = ImportField;
    TransferDocDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(TransferDocDefRec,i,TransferDocDefrw);
    i = i + 1;
  end;
  BlockStore(TransferDocDefRec);
  return;
end;

global
updating procedure MailDefBlockImport()
begin
  record MailDefBlock MailDefRec;
  row MailDefBlock MailDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(MailDefRec,MailDefrw,1);
    MailDefrw.LangCode = ImportField;
    MailDefrw.UserGroup = ImportField;
    MailDefrw.SerNr = StringToLongInt(ImportField);
    MailDefrw.FPCode = ImportField;
    MailDefrw.PrintGroupCode = ImportField;
    MailDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(MailDefRec,i,MailDefrw);
    i = i + 1;
  end;
  BlockStore(MailDefRec);
  return;
end;

global
updating procedure TBBudgetDefBlockImport()
begin
  record TBBudgetDefBlock TBBudgetDefRec;
  row TBBudgetDefBlock TBBudgetDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(TBBudgetDefRec,TBBudgetDefrw,1);
    TBBudgetDefrw.LangCode = ImportField;
    TBBudgetDefrw.UserGroup = ImportField;
    TBBudgetDefrw.SerNr = StringToLongInt(ImportField);
    TBBudgetDefrw.FPCode = ImportField;
    TBBudgetDefrw.PrintGroupCode = ImportField;
    TBBudgetDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(TBBudgetDefRec,i,TBBudgetDefrw);
    i = i + 1;
  end;
  BlockStore(TBBudgetDefRec);
  return;
end;

global
updating procedure ProjectDefBlockImport()
begin
  record ProjectDefBlock ProjectDefRec;
  row ProjectDefBlock ProjectDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ProjectDefRec,ProjectDefrw,1);
    ProjectDefrw.LangCode = ImportField;
    ProjectDefrw.UserGroup = ImportField;
    ProjectDefrw.SerNr = StringToLongInt(ImportField);
    ProjectDefrw.FPCode = ImportField;
    ProjectDefrw.PrintGroupCode = ImportField;
    ProjectDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(ProjectDefRec,i,ProjectDefrw);
    i = i + 1;
  end;
  BlockStore(ProjectDefRec);
  return;
end;

global
updating procedure ProjectInfoDefBlockImport()
begin
  record ProjectInfoDefBlock ProjectInfoDefRec;
  row ProjectInfoDefBlock ProjectInfoDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ProjectInfoDefRec,ProjectInfoDefrw,1);
    ProjectInfoDefrw.LangCode = ImportField;
    ProjectInfoDefrw.UserGroup = ImportField;
    ProjectInfoDefrw.SerNr = StringToLongInt(ImportField);
    ProjectInfoDefrw.FPCode = ImportField;
    ProjectInfoDefrw.PrintGroupCode = ImportField;
    ProjectInfoDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(ProjectInfoDefRec,i,ProjectInfoDefrw);
    i = i + 1;
  end;
  BlockStore(ProjectInfoDefRec);
  return;
end;

global
updating procedure TimeSheetDefBlockImport()
begin
  record TimeSheetDefBlock TimeSheetDefRec;
  row TimeSheetDefBlock TimeSheetDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(TimeSheetDefRec,TimeSheetDefrw,1);
    TimeSheetDefrw.LangCode = ImportField;
    TimeSheetDefrw.UserGroup = ImportField;
    TimeSheetDefrw.SerNr = StringToLongInt(ImportField);
    TimeSheetDefrw.FPCode = ImportField;
    TimeSheetDefrw.PrintGroupCode = ImportField;
    TimeSheetDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(TimeSheetDefRec,i,TimeSheetDefrw);
    i = i + 1;
  end;
  BlockStore(TimeSheetDefRec);
  return;
end;

global
updating procedure ActDocDefBlockImport()
begin
  record ActDocDefBlock ActDocDefRec;
  row ActDocDefBlock ActDocDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ActDocDefRec,ActDocDefrw,1);
    ActDocDefrw.LangCode = ImportField;
    ActDocDefrw.UserGroup = ImportField;
    ActDocDefrw.SerNr = StringToLongInt(ImportField);
    ActDocDefrw.FPCode = ImportField;
    ActDocDefrw.PrintGroupCode = ImportField;
    ActDocDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(ActDocDefRec,i,ActDocDefrw);
    i = i + 1;
  end;
  BlockStore(ActDocDefRec);
  return;
end;

global
updating procedure LetDefBlockImport()
begin
  record LetDefBlock LetDefRec;
  row LetDefBlock LetDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(LetDefRec,LetDefrw,1);
    LetDefrw.LangCode = ImportField;
    LetDefrw.UserGroup = ImportField;
    LetDefrw.SerNr = StringToLongInt(ImportField);
    LetDefrw.FPCode = ImportField;
    LetDefrw.PrintGroupCode = ImportField;
    LetDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(LetDefRec,i,LetDefrw);
    i = i + 1;
  end;
  BlockStore(LetDefRec);
  return;
end;

global
updating procedure VATRepDefBlockImport()
begin
  record VATRepDefBlock VATRepDefRec;
  row VATRepDefBlock VATRepDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(VATRepDefRec,VATRepDefrw,1);
    VATRepDefrw.LangCode = ImportField;
    VATRepDefrw.UserGroup = ImportField;
    VATRepDefrw.SerNr = StringToLongInt(ImportField);
    VATRepDefrw.FPCode = ImportField;
    VATRepDefrw.PrintGroupCode = ImportField;
    VATRepDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(VATRepDefRec,i,VATRepDefrw);
    i = i + 1;
  end;
  BlockStore(VATRepDefRec);
  return;
end;

global
updating procedure OP2DDefBlockImport()
begin
  record OP2DDefBlock OP2DDefRec;
  row OP2DDefBlock OP2DDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(OP2DDefRec,OP2DDefrw,1);
    OP2DDefrw.LangCode = ImportField;
    OP2DDefrw.UserGroup = ImportField;
    OP2DDefrw.SerNr = StringToLongInt(ImportField);
    OP2DDefrw.FPCode = ImportField;
    OP2DDefrw.PrintGroupCode = ImportField;
    OP2DDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(OP2DDefRec,i,OP2DDefrw);
    i = i + 1;
  end;
  BlockStore(OP2DDefRec);
  return;
end;

global
updating procedure InStaPuDefBlockImport()
begin
  record InStaPuDefBlock InStaPuDefRec;
  row InStaPuDefBlock InStaPuDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(InStaPuDefRec,InStaPuDefrw,1);
    InStaPuDefrw.LangCode = ImportField;
    InStaPuDefrw.UserGroup = ImportField;
    InStaPuDefrw.SerNr = StringToLongInt(ImportField);
    InStaPuDefrw.FPCode = ImportField;
    InStaPuDefrw.PrintGroupCode = ImportField;
    InStaPuDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(InStaPuDefRec,i,InStaPuDefrw);
    i = i + 1;
  end;
  BlockStore(InStaPuDefRec);
  return;
end;

global
updating procedure APSDefBlockImport()
begin
  record APSDefBlock APSDefRec;
  row APSDefBlock APSDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(APSDefRec,APSDefrw,1);
    APSDefrw.LangCode = ImportField;
    APSDefrw.UserGroup = ImportField;
    APSDefrw.SerNr = StringToLongInt(ImportField);
    APSDefrw.FPCode = ImportField;
    APSDefrw.PrintGroupCode = ImportField;
    APSDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(APSDefRec,i,APSDefrw);
    i = i + 1;
  end;
  BlockStore(APSDefRec);
  return;
end;

global
updating procedure OPDDefBlockImport()
begin
  record OPDDefBlock OPDDefRec;
  row OPDDefBlock OPDDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(OPDDefRec,OPDDefrw,1);
    OPDDefrw.LangCode = ImportField;
    OPDDefrw.UserGroup = ImportField;
    OPDDefrw.SerNr = StringToLongInt(ImportField);
    OPDDefrw.FPCode = ImportField;
    OPDDefrw.PrintGroupCode = ImportField;
    OPDDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(OPDDefRec,i,OPDDefrw);
    i = i + 1;
  end;
  BlockStore(OPDDefRec);
  return;
end;

global
updating procedure CashDefBlockImport()
begin
  record CashDefBlock CashDefRec;
  row CashDefBlock CashDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CashDefRec,CashDefrw,1);
    CashDefrw.LangCode = ImportField;
    CashDefrw.UserGroup = ImportField;
    CashDefrw.SerNr = StringToLongInt(ImportField);
    CashDefrw.FPCode = ImportField;
    CashDefrw.PrintGroupCode = ImportField;
    CashDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(CashDefRec,i,CashDefrw);
    i = i + 1;
  end;
  BlockStore(CashDefRec);
  return;
end;

global
updating procedure CredDefBlockImport()
begin
  record CredDefBlock CredDefRec;
  row CredDefBlock CredDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CredDefRec,CredDefrw,1);
    CredDefrw.LangCode = ImportField;
    CredDefrw.UserGroup = ImportField;
    CredDefrw.SerNr = StringToLongInt(ImportField);
    CredDefrw.FPCode = ImportField;
    CredDefrw.PrintGroupCode = ImportField;
    CredDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(CredDefRec,i,CredDefrw);
    i = i + 1;
  end;
  BlockStore(CredDefRec);
  return;
end;

global
updating procedure FEIVDefBlockImport()
begin
  record FEIVDefBlock FEIVDefRec;
  row FEIVDefBlock FEIVDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(FEIVDefRec,FEIVDefrw,1);
    FEIVDefrw.LangCode = ImportField;
    FEIVDefrw.UserGroup = ImportField;
    FEIVDefrw.SerNr = StringToLongInt(ImportField);
    FEIVDefrw.FPCode = ImportField;
    FEIVDefrw.PrintGroupCode = ImportField;
    FEIVDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(FEIVDefRec,i,FEIVDefrw);
    i = i + 1;
  end;
  BlockStore(FEIVDefRec);
  return;
end;

global
updating procedure IIDefBlockImport()
begin
  record IIDefBlock IIDefRec;
  row IIDefBlock IIDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(IIDefRec,IIDefrw,1);
    IIDefrw.LangCode = ImportField;
    IIDefrw.UserGroup = ImportField;
    IIDefrw.SerNr = StringToLongInt(ImportField);
    IIDefrw.FPCode = ImportField;
    IIDefrw.PrintGroupCode = ImportField;
    IIDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(IIDefRec,i,IIDefrw);
    i = i + 1;
  end;
  BlockStore(IIDefRec);
  return;
end;

global
updating procedure InStaDefBlockImport()
begin
  record InStaDefBlock InStaDefRec;
  row InStaDefBlock InStaDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(InStaDefRec,InStaDefrw,1);
    InStaDefrw.LangCode = ImportField;
    InStaDefrw.UserGroup = ImportField;
    InStaDefrw.SerNr = StringToLongInt(ImportField);
    InStaDefrw.FPCode = ImportField;
    InStaDefrw.PrintGroupCode = ImportField;
    InStaDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(InStaDefRec,i,InStaDefrw);
    i = i + 1;
  end;
  BlockStore(InStaDefRec);
  return;
end;

global
updating procedure InvDefBlockImport()
begin
  record InvDefBlock InvDefRec;
  row InvDefBlock InvDefrw;
  Integer i;  
  
  while (NextImportLine(false)) begin
    ClearRow(InvDefRec,InvDefrw,1);
    InvDefrw.LangCode = ImportField;
    InvDefrw.UserGroup = ImportField;
    InvDefrw.SerNr = StringToLongInt(ImportField);
    InvDefrw.FPCode = ImportField;
    InvDefrw.PrintGroupCode = ImportField;
    InvDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(InvDefRec,i,InvDefrw);
    i = i + 1;
  end;
  BlockStore(InvDefRec);
  return;
end;

global
updating procedure ARSDefBlockImport()
begin
  record ARSDefBlock ARSDefRec;
  row ARSDefBlock ARSDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ARSDefRec,ARSDefrw,1);
    ARSDefrw.LangCode = ImportField;
    ARSDefrw.UserGroup = ImportField;
    ARSDefrw.SerNr = StringToLongInt(ImportField);
    ARSDefrw.FPCode = ImportField;
    ARSDefrw.PrintGroupCode = ImportField;
    ARSDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(ARSDefRec,i,ARSDefrw);
    i = i + 1;
  end;
  BlockStore(ARSDefRec);
  return;
end;

global
updating procedure CuPerDefBlockImport()
begin
  record CuPerDefBlock CuPerDefRec;
  row CuPerDefBlock CuPerDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CuPerDefRec,CuPerDefrw,1);
    CuPerDefrw.LangCode = ImportField;
    CuPerDefrw.UserGroup = ImportField;
    CuPerDefrw.SerNr = StringToLongInt(ImportField);
    CuPerDefrw.FPCode = ImportField;
    CuPerDefrw.PrintGroupCode = ImportField;
    CuPerDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(CuPerDefRec,i,CuPerDefrw);
    i = i + 1;
  end;
  BlockStore(CuPerDefRec);
  return;
end;

global
updating procedure Inv1DefBlockImport()
begin
  record Inv1DefBlock Inv1DefRec;
  row Inv1DefBlock Inv1Defrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(Inv1DefRec,Inv1Defrw,1);
    Inv1Defrw.LangCode = ImportField;
    Inv1Defrw.UserGroup = ImportField;
    Inv1Defrw.SerNr = StringToLongInt(ImportField);
    Inv1Defrw.FPCode = ImportField;
    Inv1Defrw.PrintGroupCode = ImportField;
    Inv1Defrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(Inv1DefRec,i,Inv1Defrw);
    i = i + 1;
  end;
  BlockStore(Inv1DefRec);
  return;
end;

global
updating procedure PRInvDefBlockImport()
begin
  record PRInvDefBlock PRInvDefRec;
  row PRInvDefBlock PRInvDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(PRInvDefRec,PRInvDefrw,1);
    PRInvDefrw.LangCode = ImportField;
    PRInvDefrw.UserGroup = ImportField;
    PRInvDefrw.SerNr = StringToLongInt(ImportField);
    PRInvDefrw.FPCode = ImportField;
    PRInvDefrw.PrintGroupCode = ImportField;
    PRInvDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(PRInvDefRec,i,PRInvDefrw);
    i = i + 1;
  end;
  BlockStore(PRInvDefRec);
  return;
end;

global
updating procedure IPDDefBlockImport()
begin
  record IPDDefBlock IPDDefRec;
  row IPDDefBlock IPDDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(IPDDefRec,IPDDefrw,1);
    IPDDefrw.LangCode = ImportField;
    IPDDefrw.UserGroup = ImportField;
    IPDDefrw.SerNr = StringToLongInt(ImportField);
    IPDDefrw.FPCode = ImportField;
    IPDDefrw.PrintGroupCode = ImportField;
    IPDDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(IPDDefRec,i,IPDDefrw);
    i = i + 1;
  end;
  BlockStore(IPDDefRec);
  return;
end;

global
updating procedure RemDefBlockImport()
begin
  record RemDefBlock RemDefRec;
  row RemDefBlock RemDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(RemDefRec,RemDefrw,1);
    RemDefrw.LangCode = ImportField;
    RemDefrw.UserGroup = ImportField;
    RemDefrw.SerNr = StringToLongInt(ImportField);
    RemDefrw.FPCode = ImportField;
    RemDefrw.PrintGroupCode = ImportField;
    RemDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(RemDefRec,i,RemDefrw);
    i = i + 1;
  end;
  BlockStore(RemDefRec);
  return;
end;

global
updating procedure VATIVDefBlockImport()
begin
  record VATIVDefBlock VATIVDefRec;
  row VATIVDefBlock VATIVDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(VATIVDefRec,VATIVDefrw,1);
    VATIVDefrw.LangCode = ImportField;
    VATIVDefrw.UserGroup = ImportField;
    VATIVDefrw.SerNr = StringToLongInt(ImportField);
    VATIVDefrw.FPCode = ImportField;
    VATIVDefrw.PrintGroupCode = ImportField;
    VATIVDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(VATIVDefRec,i,VATIVDefrw);
    i = i + 1;
  end;
  BlockStore(VATIVDefRec);
  return;
end;

global
updating procedure QTDefBlockImport()
begin
  record QTDefBlock QTDefRec;
  row QTDefBlock QTDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(QTDefRec,QTDefrw,1);
    QTDefrw.LangCode = ImportField;
    QTDefrw.UserGroup = ImportField;
    QTDefrw.SerNr = StringToLongInt(ImportField);
    QTDefrw.FPCode = ImportField;
    QTDefrw.PrintGroupCode = ImportField;
    QTDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(QTDefRec,i,QTDefrw);
    i = i + 1;
  end;
  BlockStore(QTDefRec);
  return;
end;

global
updating procedure OrdDefBlockImport()
begin
  record OrdDefBlock OrdDefRec;
  row OrdDefBlock OrdDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(OrdDefRec,OrdDefrw,1);
    OrdDefrw.LangCode = ImportField;
    OrdDefrw.UserGroup = ImportField;
    OrdDefrw.SerNr = StringToLongInt(ImportField);
    OrdDefrw.FPCode = ImportField;
    OrdDefrw.PrintGroupCode = ImportField;
    OrdDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(OrdDefRec,i,OrdDefrw);
    i = i + 1;
  end;
  BlockStore(OrdDefRec);
  return;
end;

global
updating procedure Or2DefBlockImport()
begin
  record Or2DefBlock Or2DefRec;
  row Or2DefBlock Or2Defrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(Or2DefRec,Or2Defrw,1);
    Or2Defrw.LangCode = ImportField;
    Or2Defrw.UserGroup = ImportField;
    Or2Defrw.SerNr = StringToLongInt(ImportField);
    Or2Defrw.FPCode = ImportField;
    Or2Defrw.PrintGroupCode = ImportField;
    Or2Defrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(Or2DefRec,i,Or2Defrw);
    i = i + 1;
  end;
  BlockStore(Or2DefRec);
  return;
end;

global
updating procedure AgreementDefBlockImport()
begin
  record AgreementDefBlock AgreementDefRec;
  row AgreementDefBlock AgreementDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AgreementDefRec,AgreementDefrw,1);
    AgreementDefrw.LangCode = ImportField;
    AgreementDefrw.UserGroup = ImportField;
    AgreementDefrw.SerNr = StringToLongInt(ImportField);
    AgreementDefrw.FPCode = ImportField;
    AgreementDefrw.PrintGroupCode = ImportField;
    AgreementDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(AgreementDefRec,i,AgreementDefrw);
    i = i + 1;
  end;
  BlockStore(AgreementDefRec);
  return;
end;

global
updating procedure CollectionDefBlockImport()
begin
  record CollectionDefBlock CollectionDefRec;
  row CollectionDefBlock CollectionDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CollectionDefRec,CollectionDefrw,1);
    CollectionDefrw.LangCode = ImportField;
    CollectionDefrw.UserGroup = ImportField;
    CollectionDefrw.SerNr = StringToLongInt(ImportField);
    CollectionDefrw.FPCode = ImportField;
    CollectionDefrw.PrintGroupCode = ImportField;
    CollectionDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(CollectionDefRec,i,CollectionDefrw);
    i = i + 1;
  end;
  BlockStore(CollectionDefRec);
  return;
end;

global
updating procedure AgreementDetDefBlockImport()
begin
  record AgreementDetDefBlock AgreementDetDefRec;
  row AgreementDetDefBlock AgreementDetDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AgreementDetDefRec,AgreementDetDefrw,1);
    AgreementDetDefrw.LangCode = ImportField;
    AgreementDetDefrw.UserGroup = ImportField;
    AgreementDetDefrw.SerNr = StringToLongInt(ImportField);
    AgreementDetDefrw.FPCode = ImportField;
    AgreementDetDefrw.PrintGroupCode = ImportField;
    AgreementDetDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(AgreementDetDefRec,i,AgreementDetDefrw);
    i = i + 1;
  end;
  BlockStore(AgreementDetDefRec);
  return;
end;

global
updating procedure RentResDefBlockImport()
begin
  record RentResDefBlock RentResDefRec;
  row RentResDefBlock RentResDefrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(RentResDefRec,RentResDefrw,1);
    RentResDefrw.LangCode = ImportField;
    RentResDefrw.UserGroup = ImportField;
    RentResDefrw.SerNr = StringToLongInt(ImportField);
    RentResDefrw.FPCode = ImportField;
    RentResDefrw.PrintGroupCode = ImportField;
    RentResDefrw.intdocnr = StringToLongInt(ImportField);
    MatRowPut(RentResDefRec,i,RentResDefrw);
    i = i + 1;
  end;
  BlockStore(RentResDefRec);
  return;
end;

global
updating procedure DSSeqNrBlockImport()
begin
  record SeqNrBlock SeqNrb;
  
  BlockLoad(SeqNrb);
  if (NextImportLine(false)) then begin
    SeqNrb.POSSalesVcSeqNr = StringToLongInt(ImportField);
    SeqNrb.POSSalesVcSeqNr = StringToLongInt(ImportField);
    SeqNrb.ArtUpdStockVcSeqNr = StringToLongInt(ImportField);
    SeqNrb.MixMatchVcSeqNr = StringToLongInt(ImportField);
    SeqNrb.LocalMachineVcSeqNr = StringToLongInt(ImportField);
  end;
  BlockStore(SeqNrb);
  return;
end;

global
updating procedure ReadImportTagSVOAccBlock()
begin
  record SVOAccBlock SVOAb;
  
  if (NextImportLine(false)) then begin
    SVOAb.SalesAcc = ImportField;
    SVOAb.StockAcc = ImportField;
    SVOAb.ServiceAcc = ImportField;
    SVOAb.SVOText = StringToInt(ImportField);
    SVOAb.InvoiceSVO = StringToInt(ImportField);
    SVOAb.WSHeaderObjectOnSVOIV = StringToInt(ImportField);
    SVOAb.WSUpdStockFlag = 1;
  end;
  BlockStore(SVOAb);
  return;
end;

global
updating procedure ReadImportTagHotelBlock()
begin
  record HotelBlock Hotelb;
  string 255 dummy;
  
  if (NextImportLine(false)) then begin
    Hotelb.CheckOut = StringToTime(ImportField);
    Hotelb.ResBridgeAcc = ImportField;
    Hotelb.MBarGroup = ImportField;
    Hotelb.TempBook = StringToInt(ImportField);
    Hotelb.PointSys = StringToInt(ImportField);
    Hotelb.ToResStatus = ImportField;
    Hotelb.CheckIn = StringToTime(ImportField);
    Hotelb.ArtCode = ImportField;
    Hotelb.DomainName = ImportField;
    Hotelb.TelCentrStr1 = ImportField;
    Hotelb.TelCentrStr2 = ImportField;
    Hotelb.GuestMes = ImportField;
    Hotelb.CheckinMes = ImportField;
    Hotelb.CheckoutMes = ImportField;
    Hotelb.ChOutSt = ImportField;
    Hotelb.ChInSt = ImportField;
    Hotelb.CustCat1 = ImportField;
    Hotelb.CustCat2 = ImportField;
    Hotelb.DownPercent = StringToVal(ImportField,M4Qty);
    Hotelb.OverBook = StringToInt(ImportField);
    Hotelb.DiscItem = ImportField;
    Hotelb.DefCUCode = ImportField;
    Hotelb.FromResStatus = ImportField;
    Hotelb.ConfDays = StringToLongInt(ImportField);
    Hotelb.DefSt = ImportField;
    Hotelb.DefChargeMode = StringToInt(ImportField);
    dummy = ImportField; //xDefInitialCharge
    Hotelb.NoshowStatus = ImportField;
    Hotelb.OutEventGr = ImportField;
    Hotelb.StartNewDay = StringToTime(ImportField);
    Hotelb.BlockStatus = ImportField;
    Hotelb.ForceBookOrigin = StringToInt(ImportField);
    Hotelb.DefResUsage = ImportField;
    Hotelb.SaveInShopBask = StringToInt(ImportField);
    Hotelb.GenItemToInv = ImportField;
    Hotelb.NoOfDaysToNoShow = StringToLongInt(ImportField);
    Hotelb.EndOfDay = StringToTime(ImportField);
    Hotelb.SimilarResWarn = StringToInt(ImportField);
    Hotelb.ChargeSource = StringToInt(ImportField);
    Hotelb.AutoCheckInOut = StringToInt(ImportField);
    Hotelb.PriceUpgrade = StringToInt(ImportField);
    Hotelb.DemandGuestOnRes = StringToInt(ImportField);
    if (Hotelb.DemandGuestOnRes==0) then begin
      Hotelb.DemandGuestOnRes = 1;
    end;
    Hotelb.IncludePackage = StringToInt(ImportField);
    Hotelb.InclPrelOver = StringToInt(ImportField);
    Hotelb.InclPrelAvail = StringToInt(ImportField);
    Hotelb.GroupWillNotPay = StringToInt(ImportField);
    Hotelb.StoreWithPrice = StringToInt(ImportField);
    Hotelb.DownPayDeal = ImportField;
    Hotelb.CNDCode = ImportField;
    Hotelb.ResPlanDisplay = StringToInt(ImportField);
    Hotelb.ResCodeInGrid = StringToInt(ImportField);
    Hotelb.DefCClassDCode = ImportField;
    Hotelb.RequestPrice = StringToInt(ImportField);
    Hotelb.CClassDCType = ImportField;
    Hotelb.RSCCode = ImportField;
    Hotelb.RequestGuestClass = StringToInt(ImportField);
    Hotelb.DownForMotherRsrv = StringToInt(ImportField);
    Hotelb.DownForMotherRsrvIncDaughDet = StringToInt(ImportField);
    Hotelb.RequestNrOfGuests = StringToInt(ImportField);
    Hotelb.AllotmentSt = ImportField;
    Hotelb.CClassDCTypeChild = ImportField;
    Hotelb.WebDefCust = ImportField;
    Hotelb.WebResStatus = ImportField;
    Hotelb.WebBookOrigin = ImportField;
    Hotelb.WebDefCustCat = ImportField;
    Hotelb.WebDownPayDeal = ImportField;
    Hotelb.WebCNDCode = ImportField;
    Hotelb.WebDownPercent = StringToVal(ImportField,M4Qty);
    Hotelb.WebRSCCode = ImportField;
    Hotelb.WebWaitPayStatus = ImportField;
    Hotelb.WebDeletedStatus = ImportField;
    Hotelb.WebMaxFutureDate = StringToDate(ImportField);
    Hotelb.WebAutoAllocateRoom = StringToInt(ImportField);
    Hotelb.WebDontDelete = StringToInt(ImportField);
    Hotelb.WebIncludeUnavailable = StringToInt(ImportField);
  end;
  BlockStore(Hotelb);
  return;
end;

global
updating procedure ReadImportTagRestOpenHoursBlock()
begin
  string 255 tstr;
  record RestOpenHoursVc ROHr;

  if (NextImportLine(true)) then begin end;
  ROHr.AvrTimePerPerson = StringToTime(ImportField);
  ROHr.Seats = StringToLongInt(ImportField);
  ROHr.GiveWarn = StringToInt(ImportField);
  ROHr.MonStart = StringToTime(ImportField);
  ROHr.MonEnd = StringToTime(ImportField);
  ROHr.TueStart = StringToTime(ImportField);
  ROHr.TueEnd = StringToTime(ImportField);
  ROHr.WedStart = StringToTime(ImportField);
  ROHr.WedEnd = StringToTime(ImportField);
  ROHr.ThuStart = StringToTime(ImportField);
  ROHr.ThuEnd = StringToTime(ImportField);
  ROHr.FriStart = StringToTime(ImportField);
  ROHr.FriEnd = StringToTime(ImportField);
  ROHr.SatStart = StringToTime(ImportField);
  ROHr.SatEnd = StringToTime(ImportField);
  ROHr.SunStart = StringToTime(ImportField);
  ROHr.SunEnd = StringToTime(ImportField);
  ROHr.HHMonStart = StringToTime(ImportField);
  ROHr.HHMonEnd = StringToTime(ImportField);
  RecordImportStore(ROHr,false);
  return;
end;
