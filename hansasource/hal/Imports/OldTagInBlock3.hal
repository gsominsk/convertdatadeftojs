external procedure BlockFromOldbln(Integer,var string);
external procedure FindFiscalYear(Date,var Date,var Date);

procedure VcTypeOfTSerRow(Integer stp,var string vname)
begin
  vname = "";
  switch (stp) begin
    case 1: vname = "TRVc";
    case 2: vname = "SMVc";
    case 3: vname = "TRVc";
    case 4: vname = "VIVc";
    case 5: vname = "VIVc";
    case 6: vname = "OPVc";
    case 7: vname = "TRVc";
    case 8: vname = "TRVc";
    case 9: vname = "OPVc";
    case 10: vname = "IVVc";
    case 11: vname = "IVVc";
    case 12: vname = "IPVc";
    case 13: vname = "IPVc";
    case 14: vname = "TRVc";
    case 15: vname = "TRVc";
    case 16: vname = "IVVc";
    case 17: vname = "ORVc";
    case 18: vname = "SHVc";
    case 19: vname = "PUVc";
    case 20: vname = "PUVc";
    case 21: vname = "QTVc";
    case 22: vname = "TSVc";
  end;
  return;
end;

updating procedure InsertTSRow(string vname,row IVSerBlock isrw)
begin
  Integer i,rwcnt;
  record IVSerBlock IVSerRec;
  row IVSerBlock ivserw;
  record TRSerBlock TRSerRec;
  row TRSerBlock trserw;
  record SMSerBlock SMSerRec;
  row SMSerBlock smserw;
  record VISerBlock VISerRec;
  row VISerBlock viserw;
  record OPSerBlock OPSerRec;
  row OPSerBlock opserw;
  record IPSerBlock IPSerRec;
  row IPSerBlock ipserw;
  record SHSerBlock SHSerRec;
  row SHSerBlock shserw;
  record PUSerBlock PUSerRec;
  row PUSerBlock puserw;
  record QTSerBlock QTSerRec;
  row QTSerBlock qtserw;
  record TSSerBlock TSSerRec;
  row TSSerBlock tsserw;
  record ORSerBlock ORSerRec;
  row ORSerBlock orserw;

  switch (vname) begin
    case "IVVc": 
      BlockLoad(IVSerRec);
      rwcnt = MatRowCnt(IVSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(IVSerRec,i,ivserw);
        if ((ivserw.TSerStart==isrw.TSerStart) and
          (ivserw.TSerEnd==isrw.TSerEnd) and
          (ivserw.StartDate==isrw.StartDate) and
          (ivserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;        
      end;
      MatRowPut(IVSerRec,rwcnt,isrw);
      BlockStore(IVSerRec);
    case "TRVc": 
      BlockLoad(TRSerRec);
      rwcnt = MatRowCnt(TRSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TRSerRec,i,trserw);
        if ((trserw.TSerStart==isrw.TSerStart) and
          (trserw.TSerEnd==isrw.TSerEnd) and
          (trserw.StartDate==isrw.StartDate) and
          (trserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(TRSerRec,rwcnt,isrw);
      BlockStore(TRSerRec);
    case "SMVc": 
      BlockLoad(SMSerRec);
      rwcnt = MatRowCnt(SMSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(SMSerRec,i,smserw);
        if ((smserw.TSerStart==isrw.TSerStart) and
          (smserw.TSerEnd==isrw.TSerEnd) and
          (smserw.StartDate==isrw.StartDate) and
          (smserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(SMSerRec,rwcnt,isrw);
      BlockStore(SMSerRec);
    case "VIVc": 
      BlockLoad(VISerRec);
      rwcnt = MatRowCnt(VISerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(VISerRec,i,viserw);
        if ((viserw.TSerStart==isrw.TSerStart) and
          (viserw.TSerEnd==isrw.TSerEnd) and
          (viserw.StartDate==isrw.StartDate) and
          (viserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(VISerRec,rwcnt,isrw);
      BlockStore(VISerRec);
    case "OPVc": 
      BlockLoad(OPSerRec);
      rwcnt = MatRowCnt(OPSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(OPSerRec,i,opserw);
        if ((opserw.TSerStart==isrw.TSerStart) and
          (opserw.TSerEnd==isrw.TSerEnd) and
          (opserw.StartDate==isrw.StartDate) and
          (opserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(OPSerRec,rwcnt,isrw);
      BlockStore(OPSerRec);
    case "IPVc": 
      BlockLoad(IPSerRec);
      rwcnt = MatRowCnt(IPSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(IPSerRec,i,ipserw);
        if ((ipserw.TSerStart==isrw.TSerStart) and
          (ipserw.TSerEnd==isrw.TSerEnd) and
          (ipserw.StartDate==isrw.StartDate) and
          (ipserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(IPSerRec,rwcnt,isrw);
      BlockStore(IPSerRec);
    case "ORVc": 
      BlockLoad(ORSerRec);
      rwcnt = MatRowCnt(ORSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(ORSerRec,i,orserw);
        if ((orserw.TSerStart==isrw.TSerStart) and
          (orserw.TSerEnd==isrw.TSerEnd) and
          (orserw.StartDate==isrw.StartDate) and
          (orserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(ORSerRec,rwcnt,isrw);
      BlockStore(ORSerRec);
    case "SHVc": 
      BlockLoad(SHSerRec);
      rwcnt = MatRowCnt(SHSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(SHSerRec,i,shserw);
        if ((shserw.TSerStart==isrw.TSerStart) and
          (shserw.TSerEnd==isrw.TSerEnd) and
          (shserw.StartDate==isrw.StartDate) and
          (shserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(SHSerRec,rwcnt,isrw);
      BlockStore(SHSerRec);
    case "PUVc": 
      BlockLoad(PUSerRec);
      rwcnt = MatRowCnt(PUSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(PUSerRec,i,puserw);
        if ((puserw.TSerStart==isrw.TSerStart) and
          (puserw.TSerEnd==isrw.TSerEnd) and
          (puserw.StartDate==isrw.StartDate) and
          (puserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(PUSerRec,rwcnt,isrw);
      BlockStore(PUSerRec);
    case "QTVc": 
      BlockLoad(QTSerRec);
      rwcnt = MatRowCnt(QTSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(QTSerRec,i,qtserw);
        if ((qtserw.TSerStart==isrw.TSerStart) and
          (qtserw.TSerEnd==isrw.TSerEnd) and
          (qtserw.StartDate==isrw.StartDate) and
          (qtserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(QTSerRec,rwcnt,isrw);
      BlockStore(QTSerRec);
    case "TSVc": 
      BlockLoad(TSSerRec);
      rwcnt = MatRowCnt(TSSerRec);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TSSerRec,i,tsserw);
        if ((tsserw.TSerStart==isrw.TSerStart) and
          (tsserw.TSerEnd==isrw.TSerEnd) and
          (tsserw.StartDate==isrw.StartDate) and
          (tsserw.EndDate==isrw.EndDate)) then begin goto LInsertTSRow; end;
      end;
      MatRowPut(TSSerRec,rwcnt,isrw);
      BlockStore(TSSerRec);
  end;
LInsertTSRow:;
  return;
end;

global
updating procedure ReadImportTagserier3(string thetag)
begin
  Integer i;
  row IVSerBlock ivserrw;
  Integer stp;
  LongInt dummy;
  string 255 vname;
  Date curYearstartdate,curYearenddate;
  
  i=0;
  FindFiscalYear(CurrentDate,curYearstartdate,curYearenddate);
  
//  oldSim = true;
  while (NextImportLine(false)) begin
    stp = StringToInt(ImportField);
    ivserrw.TSerStart = StringToLongInt(ImportField);
    ivserrw.TSerEnd = StringToLongInt(ImportField);
    dummy = StringToLongInt(ImportField);
    ivserrw.TSerCom = ImportField;
    ivserrw.StartDate = curYearstartdate;
    ivserrw.EndDate = curYearenddate;
    VcTypeOfTSerRow(stp,vname);
    InsertTSRow(vname,ivserrw);
    i = i + 1;
  end;
  return;
end;

updating procedure CustomsSerBlockImport()
begin
  record CustomsSerBlock CustomsSerRec;
  row CustomsSerBlock CustomsSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CustomsSerRec,CustomsSerrw,1);
    CustomsSerrw.TSerStart = StringToLongInt(ImportField);
    CustomsSerrw.TSerEnd = StringToLongInt(ImportField);
    CustomsSerrw.StartDate = StringToDate(ImportField);
    CustomsSerrw.EndDate = StringToDate(ImportField);
    CustomsSerrw.TSerCom = ImportField;
    MatRowPut(CustomsSerRec,i,CustomsSerrw);
    i = i + 1;
  end;
  BlockStore(CustomsSerRec);
  return;
end;

updating procedure OwnCheckSerBlockImport()
begin
  record OwnCheckSerBlock OwnCheckSerRec;
  row OwnCheckSerBlock OwnCheckSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(OwnCheckSerRec,OwnCheckSerrw,1);
    OwnCheckSerrw.TSerStart = StringToLongInt(ImportField);
    OwnCheckSerrw.TSerEnd = StringToLongInt(ImportField);
    OwnCheckSerrw.StartDate = StringToDate(ImportField);
    OwnCheckSerrw.EndDate = StringToDate(ImportField);
    OwnCheckSerrw.TSerCom = ImportField;
    MatRowPut(OwnCheckSerRec,i,OwnCheckSerrw);
    i = i + 1;
  end;
  BlockStore(OwnCheckSerRec);
  return;
end;

updating procedure CheckSerBlockImport()
begin
  record CheckSerBlock CheckSerRec;
  row CheckSerBlock CheckSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CheckSerRec,CheckSerrw,1);
    CheckSerrw.TSerStart = StringToLongInt(ImportField);
    CheckSerrw.TSerEnd = StringToLongInt(ImportField);
    CheckSerrw.StartDate = StringToDate(ImportField);
    CheckSerrw.EndDate = StringToDate(ImportField);
    CheckSerrw.TSerCom = ImportField;
    MatRowPut(CheckSerRec,i,CheckSerrw);
    i = i + 1;
  end;
  BlockStore(CheckSerRec);
  return;
end;

updating procedure CLInSerBlockImport()
begin
  record CLInSerBlock CLInSerRec;
  row CLInSerBlock CLInSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CLInSerRec,CLInSerrw,1);
    CLInSerrw.TSerStart = StringToLongInt(ImportField);
    CLInSerrw.TSerEnd = StringToLongInt(ImportField);
    CLInSerrw.StartDate = StringToDate(ImportField);
    CLInSerrw.EndDate = StringToDate(ImportField);
    CLInSerrw.TSerCom = ImportField;
    MatRowPut(CLInSerRec,i,CLInSerrw);
    i = i + 1;
  end;
  BlockStore(CLInSerRec);
  return;
end;

updating procedure CLOutSerBlockImport()
begin
  record CLOutSerBlock CLOutSerRec;
  row CLOutSerBlock CLOutSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CLOutSerRec,CLOutSerrw,1);
    CLOutSerrw.TSerStart = StringToLongInt(ImportField);
    CLOutSerrw.TSerEnd = StringToLongInt(ImportField);
    CLOutSerrw.StartDate = StringToDate(ImportField);
    CLOutSerrw.EndDate = StringToDate(ImportField);
    CLOutSerrw.TSerCom = ImportField;
    MatRowPut(CLOutSerRec,i,CLOutSerrw);
    i = i + 1;
  end;
  BlockStore(CLOutSerRec);
  return;
end;

updating procedure AT2TakeSerBlockImport()
begin
  record AT2TakeSerBlock AT2TakeSerRec;
  row AT2TakeSerBlock AT2TakeSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AT2TakeSerRec,AT2TakeSerrw,1);
    AT2TakeSerrw.TSerStart = StringToLongInt(ImportField);
    AT2TakeSerrw.TSerEnd = StringToLongInt(ImportField);
    AT2TakeSerrw.StartDate = StringToDate(ImportField);
    AT2TakeSerrw.EndDate = StringToDate(ImportField);
    AT2TakeSerrw.TSerCom = ImportField;
    MatRowPut(AT2TakeSerRec,i,AT2TakeSerrw);
    i = i + 1;
  end;
  BlockStore(AT2TakeSerRec);
  return;
end;

updating procedure AT2PUSerBlockImport()
begin
  record AT2PUSerBlock AT2PUSerRec;
  row AT2PUSerBlock AT2PUSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AT2PUSerRec,AT2PUSerrw,1);
    AT2PUSerrw.TSerStart = StringToLongInt(ImportField);
    AT2PUSerrw.TSerEnd = StringToLongInt(ImportField);
    AT2PUSerrw.StartDate = StringToDate(ImportField);
    AT2PUSerrw.EndDate = StringToDate(ImportField);
    AT2PUSerrw.TSerCom = ImportField;
    MatRowPut(AT2PUSerRec,i,AT2PUSerrw);
    i = i + 1;
  end;
  BlockStore(AT2PUSerRec);
  return;
end;

updating procedure AT2WrofSerBlockImport()
begin
  record AT2WrofSerBlock AT2WrofSerRec;
  row AT2WrofSerBlock AT2WrofSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AT2WrofSerRec,AT2WrofSerrw,1);
    AT2WrofSerrw.TSerStart = StringToLongInt(ImportField);
    AT2WrofSerrw.TSerEnd = StringToLongInt(ImportField);
    AT2WrofSerrw.StartDate = StringToDate(ImportField);
    AT2WrofSerrw.EndDate = StringToDate(ImportField);
    AT2WrofSerrw.TSerCom = ImportField;
    MatRowPut(AT2WrofSerRec,i,AT2WrofSerrw);
    i = i + 1;
  end;
  BlockStore(AT2WrofSerRec);
  return;
end;

updating procedure AT2DprSerBlockImport()
begin
  record AT2DprSerBlock AT2DprSerRec;
  row AT2DprSerBlock AT2DprSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AT2DprSerRec,AT2DprSerrw,1);
    AT2DprSerrw.TSerStart = StringToLongInt(ImportField);
    AT2DprSerrw.TSerEnd = StringToLongInt(ImportField);
    AT2DprSerrw.StartDate = StringToDate(ImportField);
    AT2DprSerrw.EndDate = StringToDate(ImportField);
    AT2DprSerrw.TSerCom = ImportField;
    MatRowPut(AT2DprSerRec,i,AT2DprSerrw);
    i = i + 1;
  end;
  BlockStore(AT2DprSerRec);
  return;
end;

updating procedure AT2RevSerBlockImport()
begin
  record AT2RevSerBlock AT2RevSerRec;
  row AT2RevSerBlock AT2RevSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(AT2RevSerRec,AT2RevSerrw,1);
    AT2RevSerrw.TSerStart = StringToLongInt(ImportField);
    AT2RevSerrw.TSerEnd = StringToLongInt(ImportField);
    AT2RevSerrw.StartDate = StringToDate(ImportField);
    AT2RevSerrw.EndDate = StringToDate(ImportField);
    AT2RevSerrw.TSerCom = ImportField;
    MatRowPut(AT2RevSerRec,i,AT2RevSerrw);
    i = i + 1;
  end;
  BlockStore(AT2RevSerRec);
  return;
end;

updating procedure SHSerBlockImport()
begin
  record SHSerBlock SHSerRec;
  row SHSerBlock SHSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SHSerRec,SHSerrw,1);
    SHSerrw.TSerStart = StringToLongInt(ImportField);
    SHSerrw.TSerEnd = StringToLongInt(ImportField);
    SHSerrw.StartDate = StringToDate(ImportField);
    SHSerrw.EndDate = StringToDate(ImportField);
    SHSerrw.TSerCom = ImportField;
    MatRowPut(SHSerRec,i,SHSerrw);
    i = i + 1;
  end;
  BlockStore(SHSerRec);
  return;
end;

updating procedure PUSerBlockImport()
begin
  record PUSerBlock PUSerRec;
  row PUSerBlock PUSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(PUSerRec,PUSerrw,1);
    PUSerrw.TSerStart = StringToLongInt(ImportField);
    PUSerrw.TSerEnd = StringToLongInt(ImportField);
    PUSerrw.StartDate = StringToDate(ImportField);
    PUSerrw.EndDate = StringToDate(ImportField);
    PUSerrw.TSerCom = ImportField;
    MatRowPut(PUSerRec,i,PUSerrw);
    i = i + 1;
  end;
  BlockStore(PUSerRec);
  return;
end;

updating procedure LateCostSerBlockImport()
begin
  record LateCostSerBlock LateCostSerRec;
  row LateCostSerBlock LateCostSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(LateCostSerRec,LateCostSerrw,1);
    LateCostSerrw.TSerStart = StringToLongInt(ImportField);
    LateCostSerrw.TSerEnd = StringToLongInt(ImportField);
    LateCostSerrw.StartDate = StringToDate(ImportField);
    LateCostSerrw.EndDate = StringToDate(ImportField);
    LateCostSerrw.TSerCom = ImportField;
    MatRowPut(LateCostSerRec,i,LateCostSerrw);
    i = i + 1;
  end;
  BlockStore(LateCostSerRec);
  return;
end;

updating procedure RetSerBlockImport()
begin
  record RetSerBlock RetSerRec;
  row RetSerBlock RetSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(RetSerRec,RetSerrw,1);
    RetSerrw.TSerStart = StringToLongInt(ImportField);
    RetSerrw.TSerEnd = StringToLongInt(ImportField);
    RetSerrw.StartDate = StringToDate(ImportField);
    RetSerrw.EndDate = StringToDate(ImportField);
    RetSerrw.TSerCom = ImportField;
    MatRowPut(RetSerRec,i,RetSerrw);
    i = i + 1;
  end;
  BlockStore(RetSerRec);
  return;
end;

updating procedure RetPUSerBlockImport()
begin
  record RetPUSerBlock RetPUSerRec;
  row RetPUSerBlock RetPUSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(RetPUSerRec,RetPUSerrw,1);
    RetPUSerrw.TSerStart = StringToLongInt(ImportField);
    RetPUSerrw.TSerEnd = StringToLongInt(ImportField);
    RetPUSerrw.StartDate = StringToDate(ImportField);
    RetPUSerrw.EndDate = StringToDate(ImportField);
    RetPUSerrw.TSerCom = ImportField;
    MatRowPut(RetPUSerRec,i,RetPUSerrw);
    i = i + 1;
  end;
  BlockStore(RetPUSerRec);
  return;
end;

updating procedure SDSerBlockImport()
begin
  record SDSerBlock SDSerRec;
  row SDSerBlock SDSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SDSerRec,SDSerrw,1);
    SDSerrw.TSerStart = StringToLongInt(ImportField);
    SDSerrw.TSerEnd = StringToLongInt(ImportField);
    SDSerrw.StartDate = StringToDate(ImportField);
    SDSerrw.EndDate = StringToDate(ImportField);
    SDSerrw.TSerCom = ImportField;
    MatRowPut(SDSerRec,i,SDSerrw);
    i = i + 1;
  end;
  BlockStore(SDSerRec);
  return;
end;

updating procedure StockMovSerBlockImport()
begin
  record StockMovSerBlock StockMovSerRec;
  row StockMovSerBlock StockMovSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(StockMovSerRec,StockMovSerrw,1);
    StockMovSerrw.TSerStart = StringToLongInt(ImportField);
    StockMovSerrw.TSerEnd = StringToLongInt(ImportField);
    StockMovSerrw.StartDate = StringToDate(ImportField);
    StockMovSerrw.EndDate = StringToDate(ImportField);
    StockMovSerrw.TSerCom = ImportField;
    MatRowPut(StockMovSerRec,i,StockMovSerrw);
    i = i + 1;
  end;
  BlockStore(StockMovSerRec);
  return;
end;

updating procedure StockTakeSerBlockImport()
begin
  record StockTakeSerBlock StockTakeSerRec;
  row StockTakeSerBlock StockTakeSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(StockTakeSerRec,StockTakeSerrw,1);
    StockTakeSerrw.TSerStart = StringToLongInt(ImportField);
    StockTakeSerrw.TSerEnd = StringToLongInt(ImportField);
    StockTakeSerrw.StartDate = StringToDate(ImportField);
    StockTakeSerrw.EndDate = StringToDate(ImportField);
    StockTakeSerrw.TSerCom = ImportField;
    MatRowPut(StockTakeSerRec,i,StockTakeSerrw);
    i = i + 1;
  end;
  BlockStore(StockTakeSerRec);
  return;
end;

updating procedure ExpSerBlockImport()
begin
  record ExpSerBlock ExpSerRec;
  row ExpSerBlock ExpSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ExpSerRec,ExpSerrw,1);
    ExpSerrw.TSerStart = StringToLongInt(ImportField);
    ExpSerrw.TSerEnd = StringToLongInt(ImportField);
    ExpSerrw.StartDate = StringToDate(ImportField);
    ExpSerrw.EndDate = StringToDate(ImportField);
    ExpSerrw.TSerCom = ImportField;
    MatRowPut(ExpSerRec,i,ExpSerrw);
    i = i + 1;
  end;
  BlockStore(ExpSerRec);
  return;
end;

updating procedure PPersSerBlockImport()
begin
  record PPersSerBlock PPersSerRec;
  row PPersSerBlock PPersSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(PPersSerRec,PPersSerrw,1);
    PPersSerrw.TSerStart = StringToLongInt(ImportField);
    PPersSerrw.TSerEnd = StringToLongInt(ImportField);
    PPersSerrw.StartDate = StringToDate(ImportField);
    PPersSerrw.EndDate = StringToDate(ImportField);
    PPersSerrw.TSerCom = ImportField;
    MatRowPut(PPersSerRec,i,PPersSerrw);
    i = i + 1;
  end;
  BlockStore(PPersSerRec);
  return;
end;

updating procedure WayListSerBlockImport()
begin
  record WayListSerBlock WayListSerRec;
  row WayListSerBlock WayListSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(WayListSerRec,WayListSerrw,1);
    WayListSerrw.TSerStart = StringToLongInt(ImportField);
    WayListSerrw.TSerEnd = StringToLongInt(ImportField);
    WayListSerrw.StartDate = StringToDate(ImportField);
    WayListSerrw.EndDate = StringToDate(ImportField);
    WayListSerrw.TSerCom = ImportField;
    MatRowPut(WayListSerRec,i,WayListSerrw);
    i = i + 1;
  end;
  BlockStore(WayListSerRec);
  return;
end;

updating procedure POSerBlockImport()
begin
  record POSerBlock POSerRec;
  row POSerBlock POSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(POSerRec,POSerrw,1);
    POSerrw.TSerStart = StringToLongInt(ImportField);
    POSerrw.TSerEnd = StringToLongInt(ImportField);
    POSerrw.StartDate = StringToDate(ImportField);
    POSerrw.EndDate = StringToDate(ImportField);
    POSerrw.TSerCom = ImportField;
    MatRowPut(POSerRec,i,POSerrw);
    i = i + 1;
  end;
  BlockStore(POSerRec);
  return;
end;

updating procedure POCQStatSerBlockImport()
begin
  record POCQStatSerBlock POCQStatSerRec;
  row POCQStatSerBlock POCQStatSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(POCQStatSerRec,POCQStatSerrw,1);
    POCQStatSerrw.TSerStart = StringToLongInt(ImportField);
    POCQStatSerrw.TSerEnd = StringToLongInt(ImportField);
    POCQStatSerrw.StartDate = StringToDate(ImportField);
    POCQStatSerrw.EndDate = StringToDate(ImportField);
    POCQStatSerrw.TSerCom = ImportField;
    MatRowPut(POCQStatSerRec,i,POCQStatSerrw);
    i = i + 1;
  end;
  BlockStore(POCQStatSerRec);
  return;
end;

updating procedure POQTSerBlockImport()
begin
  record POQTSerBlock POQTSerRec;
  row POQTSerBlock POQTSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(POQTSerRec,POQTSerrw,1);
    POQTSerrw.TSerStart = StringToLongInt(ImportField);
    POQTSerrw.TSerEnd = StringToLongInt(ImportField);
    POQTSerrw.StartDate = StringToDate(ImportField);
    POQTSerrw.EndDate = StringToDate(ImportField);
    POQTSerrw.TSerCom = ImportField;
    MatRowPut(POQTSerRec,i,POQTSerrw);
    i = i + 1;
  end;
  BlockStore(POQTSerRec);
  return;
end;

updating procedure SPLSerBlockImport()
begin
  record SPLSerBlock SPLSerRec;
  row SPLSerBlock SPLSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SPLSerRec,SPLSerrw,1);
    SPLSerrw.TSerStart = StringToLongInt(ImportField);
    SPLSerrw.TSerEnd = StringToLongInt(ImportField);
    SPLSerrw.StartDate = StringToDate(ImportField);
    SPLSerrw.EndDate = StringToDate(ImportField);
    SPLSerrw.TSerCom = ImportField;
    MatRowPut(SPLSerRec,i,SPLSerrw);
    i = i + 1;
  end;
  BlockStore(SPLSerRec);
  return;
end;

updating procedure ProdSerBlockImport()
begin
  record ProdSerBlock ProdSerRec;
  row ProdSerBlock ProdSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ProdSerRec,ProdSerrw,1);
    ProdSerrw.TSerStart = StringToLongInt(ImportField);
    ProdSerrw.TSerEnd = StringToLongInt(ImportField);
    ProdSerrw.StartDate = StringToDate(ImportField);
    ProdSerrw.EndDate = StringToDate(ImportField);
    ProdSerrw.TSerCom = ImportField;
    MatRowPut(ProdSerRec,i,ProdSerrw);
    i = i + 1;
  end;
  BlockStore(ProdSerRec);
  return;
end;

updating procedure OffHireSerBlockImport()
begin
  record OffHireSerBlock OffHireSerRec;
  row OffHireSerBlock OffHireSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(OffHireSerRec,OffHireSerrw,1);
    OffHireSerrw.TSerStart = StringToLongInt(ImportField);
    OffHireSerrw.TSerEnd = StringToLongInt(ImportField);
    OffHireSerrw.StartDate = StringToDate(ImportField);
    OffHireSerrw.EndDate = StringToDate(ImportField);
    OffHireSerrw.TSerCom = ImportField;
    MatRowPut(OffHireSerRec,i,OffHireSerrw);
    i = i + 1;
  end;
  BlockStore(OffHireSerRec);
  return;
end;

updating procedure DispatchSerBlockImport()
begin
  record DispatchSerBlock DispatchSerRec;
  row DispatchSerBlock DispatchSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(DispatchSerRec,DispatchSerrw,1);
    DispatchSerrw.TSerStart = StringToLongInt(ImportField);
    DispatchSerrw.TSerEnd = StringToLongInt(ImportField);
    DispatchSerrw.StartDate = StringToDate(ImportField);
    DispatchSerrw.EndDate = StringToDate(ImportField);
    DispatchSerrw.TSerCom = ImportField;
    MatRowPut(DispatchSerRec,i,DispatchSerrw);
    i = i + 1;
  end;
  BlockStore(DispatchSerRec);
  return;
end;

updating procedure INTransferSerBlockImport()
begin
  record INTransferSerBlock INTransferSerRec;
  row INTransferSerBlock INTransferSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(INTransferSerRec,INTransferSerrw,1);
    INTransferSerrw.TSerStart = StringToLongInt(ImportField);
    INTransferSerrw.TSerEnd = StringToLongInt(ImportField);
    INTransferSerrw.StartDate = StringToDate(ImportField);
    INTransferSerrw.EndDate = StringToDate(ImportField);
    INTransferSerrw.TSerCom = ImportField;
    MatRowPut(INTransferSerRec,i,INTransferSerrw);
    i = i + 1;
  end;
  BlockStore(INTransferSerRec);
  return;
end;

updating procedure QTSerBlockImport()
begin
  record QTSerBlock QTSerRec;
  row QTSerBlock QTSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(QTSerRec,QTSerrw,1);
    QTSerrw.TSerStart = StringToLongInt(ImportField);
    QTSerrw.TSerEnd = StringToLongInt(ImportField);
    QTSerrw.StartDate = StringToDate(ImportField);
    QTSerrw.EndDate = StringToDate(ImportField);
    QTSerrw.TSerCom = ImportField;
    MatRowPut(QTSerRec,i,QTSerrw);
    i = i + 1;
  end;
  BlockStore(QTSerRec);
  return;
end;

updating procedure ORSerBlockImport()
begin
  record ORSerBlock ORSerRec;
  row ORSerBlock ORSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ORSerRec,ORSerrw,1);
    ORSerrw.TSerStart = StringToLongInt(ImportField);
    ORSerrw.TSerEnd = StringToLongInt(ImportField);
    ORSerrw.StartDate = StringToDate(ImportField);
    ORSerrw.EndDate = StringToDate(ImportField);
    ORSerrw.TSerCom = ImportField;
    MatRowPut(ORSerRec,i,ORSerrw);
    i = i + 1;
  end;
  BlockStore(ORSerRec);
  return;
end;

updating procedure FEIVSerBlockImport()
begin
  record FEIVSerBlock FEIVSerRec;
  row FEIVSerBlock FEIVSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(FEIVSerRec,FEIVSerrw,1);
    FEIVSerrw.TSerStart = StringToLongInt(ImportField);
    FEIVSerrw.TSerEnd = StringToLongInt(ImportField);
    FEIVSerrw.StartDate = StringToDate(ImportField);
    FEIVSerrw.EndDate = StringToDate(ImportField);
    FEIVSerrw.TSerCom = ImportField;
    MatRowPut(FEIVSerRec,i,FEIVSerrw);
    i = i + 1;
  end;
  BlockStore(FEIVSerRec);
  return;
end;

updating procedure IVSerBlockImport()
begin
  record IVSerBlock IVSerRec;
  row IVSerBlock IVSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(IVSerRec,IVSerrw,1);
    IVSerrw.TSerStart = StringToLongInt(ImportField);
    IVSerrw.TSerEnd = StringToLongInt(ImportField);
    IVSerrw.StartDate = StringToDate(ImportField);
    IVSerrw.EndDate = StringToDate(ImportField);
    IVSerrw.TSerCom = ImportField;
    MatRowPut(IVSerRec,i,IVSerrw);
    i = i + 1;
  end;
  BlockStore(IVSerRec);
  return;
end;

updating procedure IPSerBlockImport()
begin
  record IPSerBlock IPSerRec;
  row IPSerBlock IPSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(IPSerRec,IPSerrw,1);
    IPSerrw.TSerStart = StringToLongInt(ImportField);
    IPSerrw.TSerEnd = StringToLongInt(ImportField);
    IPSerrw.StartDate = StringToDate(ImportField);
    IPSerrw.EndDate = StringToDate(ImportField);
    IPSerrw.TSerCom = ImportField;
    MatRowPut(IPSerRec,i,IPSerrw);
    i = i + 1;
  end;
  BlockStore(IPSerRec);
  return;
end;

updating procedure LetSerBlockImport()
begin
  record LetSerBlock LetSerRec;
  row LetSerBlock LetSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(LetSerRec,LetSerrw,1);
    LetSerrw.TSerStart = StringToLongInt(ImportField);
    LetSerrw.TSerEnd = StringToLongInt(ImportField);
    LetSerrw.StartDate = StringToDate(ImportField);
    LetSerrw.EndDate = StringToDate(ImportField);
    LetSerrw.TSerCom = ImportField;
    MatRowPut(LetSerRec,i,LetSerrw);
    i = i + 1;
  end;
  BlockStore(LetSerRec);
  return;
end;

updating procedure SMSerBlockImport()
begin
  record SMSerBlock SMSerRec;
  row SMSerBlock SMSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SMSerRec,SMSerrw,1);
    SMSerrw.TSerStart = StringToLongInt(ImportField);
    SMSerrw.TSerEnd = StringToLongInt(ImportField);
    SMSerrw.StartDate = StringToDate(ImportField);
    SMSerrw.EndDate = StringToDate(ImportField);
    SMSerrw.TSerCom = ImportField;
    MatRowPut(SMSerRec,i,SMSerrw);
    i = i + 1;
  end;
  BlockStore(SMSerRec);
  return;
end;

updating procedure TRSerBlockImport()
begin
  record TRSerBlock TRSerRec;
  row TRSerBlock TRSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(TRSerRec,TRSerrw,1);
    TRSerrw.TSerStart = StringToLongInt(ImportField);
    TRSerrw.TSerEnd = StringToLongInt(ImportField);
    TRSerrw.StartDate = StringToDate(ImportField);
    TRSerrw.EndDate = StringToDate(ImportField);
    TRSerrw.TSerCom = ImportField;
    MatRowPut(TRSerRec,i,TRSerrw);
    i = i + 1;
  end;
  BlockStore(TRSerRec);
  return;
end;

updating procedure FEVISerBlockImport()
begin
  record FEVISerBlock FEVISerRec;
  row FEVISerBlock FEVISerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(FEVISerRec,FEVISerrw,1);
    FEVISerrw.TSerStart = StringToLongInt(ImportField);
    FEVISerrw.TSerEnd = StringToLongInt(ImportField);
    FEVISerrw.StartDate = StringToDate(ImportField);
    FEVISerrw.EndDate = StringToDate(ImportField);
    FEVISerrw.TSerCom = ImportField;
    MatRowPut(FEVISerRec,i,FEVISerrw);
    i = i + 1;
  end;
  BlockStore(FEVISerRec);
  return;
end;

updating procedure VISerBlockImport()
begin
  record VISerBlock VISerRec;
  row VISerBlock VISerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(VISerRec,VISerrw,1);
    VISerrw.TSerStart = StringToLongInt(ImportField);
    VISerrw.TSerEnd = StringToLongInt(ImportField);
    VISerrw.StartDate = StringToDate(ImportField);
    VISerrw.EndDate = StringToDate(ImportField);
    VISerrw.TSerCom = ImportField;
    MatRowPut(VISerRec,i,VISerrw);
    i = i + 1;
  end;
  BlockStore(VISerRec);
  return;
end;

updating procedure OPSerBlockImport()
begin
  record OPSerBlock OPSerRec;
  row OPSerBlock OPSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(OPSerRec,OPSerrw,1);
    OPSerrw.TSerStart = StringToLongInt(ImportField);
    OPSerrw.TSerEnd = StringToLongInt(ImportField);
    OPSerrw.StartDate = StringToDate(ImportField);
    OPSerrw.EndDate = StringToDate(ImportField);
    OPSerrw.TSerCom = ImportField;
    MatRowPut(OPSerRec,i,OPSerrw);
    i = i + 1;
  end;
  BlockStore(OPSerRec);
  return;
end;

updating procedure PRSerBlockImport()
begin
  record PRSerBlock PRSerRec;
  row PRSerBlock PRSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(PRSerRec,PRSerrw,1);
    PRSerrw.TSerStart = StringToLongInt(ImportField);
    PRSerrw.TSerEnd = StringToLongInt(ImportField);
    PRSerrw.StartDate = StringToDate(ImportField);
    PRSerrw.EndDate = StringToDate(ImportField);
    PRSerrw.TSerCom = ImportField;
    MatRowPut(PRSerRec,i,PRSerrw);
    i = i + 1;
  end;
  BlockStore(PRSerRec);
  return;
end;

updating procedure CUSerBlockImport()
begin
  record CUSerBlock CUSerRec;
  row CUSerBlock CUSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CUSerRec,CUSerrw,1);
    CUSerrw.TSerStart = StringToLongInt(ImportField);
    CUSerrw.TSerEnd = StringToLongInt(ImportField);
    CUSerrw.StartDate = StringToDate(ImportField);
    CUSerrw.EndDate = StringToDate(ImportField);
    CUSerrw.TSerCom = ImportField;
    MatRowPut(CUSerRec,i,CUSerrw);
    i = i + 1;
  end;
  BlockStore(CUSerRec);
  return;
end;

updating procedure TSSerBlockImport()
begin
  record TSSerBlock TSSerRec;
  row TSSerBlock TSSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(TSSerRec,TSSerrw,1);
    TSSerrw.TSerStart = StringToLongInt(ImportField);
    TSSerrw.TSerEnd = StringToLongInt(ImportField);
    TSSerrw.StartDate = StringToDate(ImportField);
    TSSerrw.EndDate = StringToDate(ImportField);
    TSSerrw.TSerCom = ImportField;
    MatRowPut(TSSerRec,i,TSSerrw);
    i = i + 1;
  end;
  BlockStore(TSSerRec);
  return;
end;

updating procedure SVOSerBlockImport()
begin
  record SVOSerBlock SVOSerRec;
  row SVOSerBlock SVOSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SVOSerRec,SVOSerrw,1);
    SVOSerrw.TSerStart = StringToLongInt(ImportField);
    SVOSerrw.TSerEnd = StringToLongInt(ImportField);
    SVOSerrw.StartDate = StringToDate(ImportField);
    SVOSerrw.EndDate = StringToDate(ImportField);
    SVOSerrw.TSerCom = ImportField;
    MatRowPut(SVOSerRec,i,SVOSerrw);
    i = i + 1;
  end;
  BlockStore(SVOSerRec);
  return;
end;

updating procedure WOSerBlockImport()
begin
  record WOSerBlock WOSerRec;
  row WOSerBlock WOSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(WOSerRec,WOSerrw,1);
    WOSerrw.TSerStart = StringToLongInt(ImportField);
    WOSerrw.TSerEnd = StringToLongInt(ImportField);
    WOSerrw.StartDate = StringToDate(ImportField);
    WOSerrw.EndDate = StringToDate(ImportField);
    WOSerrw.TSerCom = ImportField;
    MatRowPut(WOSerRec,i,WOSerrw);
    i = i + 1;
  end;
  BlockStore(WOSerRec);
  return;
end;

updating procedure WSSerBlockImport()
begin
  record WSSerBlock WSSerRec;
  row WSSerBlock WSSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(WSSerRec,WSSerrw,1);
    WSSerrw.TSerStart = StringToLongInt(ImportField);
    WSSerrw.TSerEnd = StringToLongInt(ImportField);
    WSSerrw.StartDate = StringToDate(ImportField);
    WSSerrw.EndDate = StringToDate(ImportField);
    WSSerrw.TSerCom = ImportField;
    MatRowPut(WSSerRec,i,WSSerrw);
    i = i + 1;
  end;
  BlockStore(WSSerRec);
  return;
end;

updating procedure SVGMSerBlockImport()
begin
  record SVGMSerBlock SVGMSerRec;
  row SVGMSerBlock SVGMSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(SVGMSerRec,SVGMSerrw,1);
    SVGMSerrw.TSerStart = StringToLongInt(ImportField);
    SVGMSerrw.TSerEnd = StringToLongInt(ImportField);
    SVGMSerrw.StartDate = StringToDate(ImportField);
    SVGMSerrw.EndDate = StringToDate(ImportField);
    SVGMSerrw.TSerCom = ImportField;
    MatRowPut(SVGMSerRec,i,SVGMSerrw);
    i = i + 1;
  end;
  BlockStore(SVGMSerRec);
  return;
end;

updating procedure IVCashSerBlockImport()
begin
  record IVCashSerBlock IVCashSerRec;
  row IVCashSerBlock IVCashSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(IVCashSerRec,IVCashSerrw,1);
    IVCashSerrw.TSerStart = StringToLongInt(ImportField);
    IVCashSerrw.TSerEnd = StringToLongInt(ImportField);
    IVCashSerrw.StartDate = StringToDate(ImportField);
    IVCashSerrw.EndDate = StringToDate(ImportField);
    IVCashSerrw.TSerCom = ImportField;
    MatRowPut(IVCashSerRec,i,IVCashSerrw);
    i = i + 1;
  end;
  BlockStore(IVCashSerRec);
  return;
end;

updating procedure CashSerBlockImport()
begin
  record CashSerBlock CashSerRec;
  row CashSerBlock CashSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(CashSerRec,CashSerrw,1);
    CashSerrw.TSerStart = StringToLongInt(ImportField);
    CashSerrw.TSerEnd = StringToLongInt(ImportField);
    CashSerrw.StartDate = StringToDate(ImportField);
    CashSerrw.EndDate = StringToDate(ImportField);
    CashSerrw.TSerCom = ImportField;
    MatRowPut(CashSerRec,i,CashSerrw);
    i = i + 1;
  end;
  BlockStore(CashSerRec);
  return;
end;

updating procedure ResAvSerBlockImport()
begin
  record ResAvSerBlock ResAvSerRec;
  row ResAvSerBlock ResAvSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(ResAvSerRec,ResAvSerrw,1);
    ResAvSerrw.TSerStart = StringToLongInt(ImportField);
    ResAvSerrw.TSerEnd = StringToLongInt(ImportField);
    ResAvSerrw.StartDate = StringToDate(ImportField);
    ResAvSerrw.EndDate = StringToDate(ImportField);
    ResAvSerrw.TSerCom = ImportField;
    MatRowPut(ResAvSerRec,i,ResAvSerrw);
    i = i + 1;
  end;
  BlockStore(ResAvSerRec);
  return;
end;

updating procedure JobSerBlockImport()
begin
  record JobSerBlock JobSerRec;
  row JobSerBlock JobSerrw;
  Integer i;
  
  while (NextImportLine(false)) begin
    ClearRow(JobSerRec,JobSerrw,1);
    JobSerrw.TSerStart = StringToLongInt(ImportField);
    JobSerrw.TSerEnd = StringToLongInt(ImportField);
    JobSerrw.StartDate = StringToDate(ImportField);
    JobSerrw.EndDate = StringToDate(ImportField);
    JobSerrw.TSerCom = ImportField;
    MatRowPut(JobSerRec,i,JobSerrw);
    i = i + 1;
  end;
  BlockStore(JobSerRec);
  return;
end;

global
updating procedure ReadImportTagtser4(string thetag)
begin
  Integer oldbln;
  Integer i;
  string 255 bln;
  
  if (NextImportLine(true)) then begin end;
  oldbln = StringToInt(ImportField);
  if (oldbln==0) then begin goto LReadImportTagtser4; end;
  BlockFromOldbln(oldbln,bln);
  if (blank(bln)) then begin goto LReadImportTagtser4; end;

  switch (bln) begin
    case "CustomsDefBlock": CustomsSerBlockImport;
    case "OwnCheckSerBlock": OwnCheckSerBlockImport;
    case "CheckSerBlock": CheckSerBlockImport;
    case "CLInSerBlock": CLInSerBlockImport;
    case "CLOutSerBlock": CLOutSerBlockImport;
    case "AT2TakeSerBlock": AT2TakeSerBlockImport;
    case "AT2PUSerBlock": AT2PUSerBlockImport;
    case "AT2WrofSerBlock": AT2WrofSerBlockImport;
    case "AT2DprSerBlock": AT2DprSerBlockImport;
    case "AT2RevSerBlock": AT2RevSerBlockImport;
    case "SHSerBlock": SHSerBlockImport;
    case "PUSerBlock": PUSerBlockImport;
    case "LateCostSerBlock": LateCostSerBlockImport;
    case "RetSerBlock": RetSerBlockImport;
    case "RetPUSerBlock": RetPUSerBlockImport;
    case "SDSerBlock": SDSerBlockImport;
    case "StockMovSerBlock": StockMovSerBlockImport;
    case "StockTakeSerBlock": StockTakeSerBlockImport;
    case "ExpSerBlock": ExpSerBlockImport;
    case "PPersSerBlock": PPersSerBlockImport;
    case "WayListSerBlock": WayListSerBlockImport;
    case "POSerBlock": POSerBlockImport;
    case "POCQStatSerBlock": POCQStatSerBlockImport;
    case "POQTSerBlock": POQTSerBlockImport;
    case "SPLSerBlock": SPLSerBlockImport;
    case "ProdSerBlock": ProdSerBlockImport;
    case "OffHireSerBlock": OffHireSerBlockImport;
    case "DispatchSerBlock": DispatchSerBlockImport;
    case "INTransferSerBlock": INTransferSerBlockImport;
    case "QTSerBlock": QTSerBlockImport;
    case "ORSerBlock": ORSerBlockImport;
    case "FEIVSerBlock": FEIVSerBlockImport;
    case "IVSerBlock": IVSerBlockImport;
    case "IPSerBlock": IPSerBlockImport;
    case "LetSerBlock": LetSerBlockImport;
    case "SMSerBlock": SMSerBlockImport;
    case "TRSerBlock": TRSerBlockImport;
    case "FEVISerBlock": FEVISerBlockImport;
    case "VISerBlock": VISerBlockImport;
    case "OPSerBlock": OPSerBlockImport;
    case "PRSerBlock": PRSerBlockImport;
    case "CUSerBlock": CUSerBlockImport;
    case "TSSerBlock": TSSerBlockImport;
    case "SVOSerBlock": SVOSerBlockImport;
    case "WOSerBlock": WOSerBlockImport;
    case "WSSerBlock": WSSerBlockImport;
    case "SVGMSerBlock": SVGMSerBlockImport;
    case "IVCashSerBlock": IVCashSerBlockImport;
    case "CashSerBlock": CashSerBlockImport;
    case "ResAvSerBlock": ResAvSerBlockImport;
    case "JobSerBlock": JobSerBlockImport;
  end;  
LReadImportTagtser4:;  
  return;
end;
