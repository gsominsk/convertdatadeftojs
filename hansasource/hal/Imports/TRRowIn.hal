external updating function Boolean TRTestAccs(record TRVc);
external procedure TRTestVATCode(record TRVc);
external updating procedure SaveTrans(record TRVc);
external updating procedure SaveTRasSM(record TRVc);
external procedure SMSumup(var record SMVc);
external function Boolean TestOldSim(LongInt,Date);
external function Integer StrToYc(string);
external function Integer GetIntYc(Date);

function
Integer ReadTRAsRows(record TRVc TRr,LongInt transnr)
BEGIN
  row TRVc TRrw;
  string 255 tstr;
  Integer rwcnt;
  Integer yc;
  
  rwcnt = MatRowCnt(TRr);
  tstr = Left(ImportField,20);// Yc Text 
  TRr.Number = transnr;
  TRr.RegDate = StringToDate(ImportField);
  TRr.Comment = Left(ImportField,60);
  TRr.TransDate = StringToDate(ImportField);
  TRr.RefStr = Left(ImportField,20);
  if (blankdate(TRr.TransDate)) then begin
    TRr.TransDate = TRr.RegDate;
  end;  
  if (nonblank(tstr)) then begin
    yc = StrToYc(tstr);
    if (yc!=0) then begin
      TRr.IntYc = yc;
    end else begin
      TRr.IntYc = GetIntYc(TRr.TransDate);
    end;  
  end;
  ClearRow(TRr,TRrw,1);
  TRrw.stp = 1;
  TRrw.ovst = 0;
  TRrw.AccNumber = Left(ImportField,10);
  TRrw.Objects = Left(ImportField,60);
  TRrw.Comment = Left(ImportField,60);
  TRrw.VATCode = Left(ImportField,2);
  TRrw.Qty = StringToVal(ImportField,M4Qty);
  TRrw.DebVal = StringToVal(ImportField,M4Val);
  TRrw.CredVal = StringToVal(ImportField,M4Val);
  TRrw.CurDebVal = StringToVal(ImportField,M4Val);
  TRrw.CurCredVal = StringToVal(ImportField,M4Val);
  TRrw.Curncy = Left(ImportField,5);
  TRrw.FrRate = StringToVal(ImportField,M4Val);
  TRrw.ToRateB1 = StringToVal(ImportField,M4Val);
  TRrw.ToRateB2 = StringToVal(ImportField,M4Val);
  TRrw.BaseRate1 = StringToVal(ImportField,M4Val);
  TRrw.BaseRate2 = StringToVal(ImportField,M4Val);
  MatRowPut(TRr,rwcnt,TRrw);
  rwcnt = rwcnt + 1;
  ReadTRAsRows = rwcnt;
  RETURN;
END;

global
updating procedure TRRowIn()
BEGIN
  record TRVc TRr;
  Integer cnt;
  LongInt oldsernr;
  LongInt currnr;
  Integer rwcnt;
  Boolean noeofflag;
  string 255 tstr;
  
  cnt = 0;
  oldsernr = -2;
  currnr = -1;
  rwcnt = 0;
  noeofflag = true;
  RecordNew(TRr);
  while (noeofflag) begin
    tstr = ImportField;
    currnr = FirstInRange(tstr,10);
    while (oldsernr==currnr) begin
      rwcnt = ReadTRAsRows(TRr,currnr);
      if (NextImportLine(false)) then begin
        tstr = ImportField;
        currnr = FirstInRange(tstr,10);
      end else begin
        oldsernr = -2;
        noeofflag = false;
      end;
    end;
    oldsernr = currnr;
    if (rwcnt!=0) then begin
      UserTrace(TRr.Number,M4Long);
      if (TRTestAccs(TRr)) then begin end;
      TRTestVATCode(TRr);
      if (false) then begin//oldSim
        if (TestOldSim(TRr.Number,TRr.TransDate) and (TRr.IntYc<201)) then begin
          SaveTRasSM(TRr);
        end else begin
          SaveTrans(TRr);
        end;
      end else begin
        SaveTrans(TRr);
      end;
      RecordNew(TRr);
      cnt = cnt + 1;
      if (cnt>=5) then begin
//        DBFlush;
//        DBHold;
        cnt = 0;
      end;
    end;
    if (noeofflag) then begin
      rwcnt = ReadTRAsRows(TRr,currnr); 
    end;  
    noeofflag = NextImportLine(false);   
  end;
  RETURN;
END;