external function val DfncyStockWOStockReserv(string,string);

global
function LongInt DfncyStockVcRecordDefaults(var record DfncyStockVc DSr,record DfncyStockVc DS2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  DSr.TransDate = CurrentDate;
  if (SingleUserMode) then begin
    DSr.SerNr = NextSerNr("DfncyStockVc",DSr.TransDate,-1,false,"");
  end;
  DfncyStockVcRecordDefaults = res; 
  return;
end;

global
function LongInt DfncyStockVcRecordDuplicate(var record DfncyStockVc DSr,record DfncyStockVc DS2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  DSr.TransDate = CurrentDate;
  if (SingleUserMode) then begin
    DSr.SerNr = NextSerNr("DfncyStockVc",DSr.TransDate,-1,false,"");
  end;
  DfncyStockVcRecordDuplicate = res; 
  return;
end;

global
function LongInt DfncyStockVcRecordCheck(var record DfncyStockVc DSr,record DfncyStockVc DS2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  val dsq;
  
  res = 0;
  if (DSr.SerNr<=0) then begin
    DSr.SerNr = NextSerNr("DfncyStockVc",DSr.TransDate,-1,false,"");
  end;
  if (stat==Rs_update) then begin
    dsq = DfncyStockWOStockReserv(DSr.ArtCode,DSr.Location);
    if ((dsq-DS2r.Quant+DSr.Quant)>dsq) then begin
      RecordCheckError(1733,"",-1,"Quant");      
      res = -1;
      goto LDfncyStockVcRecordCheck;
    end;
  end;
LDfncyStockVcRecordCheck:;
  DfncyStockVcRecordCheck = res;
  return;
end;

global
function LongInt DfncyStockVcRecordInIndex(record DfncyStockVc DfncyStockr,string indexname)
begin
  LongInt res;
  
  res = 1;
  if (DfncyStockr.OKFlag!=0) then begin 
    if (indexname=="ActVEArt") then begin res = 0; end;
    if (indexname=="ActPONr") then begin res = 0; end;
    if (indexname=="ActArtCode") then begin res = 0; end;
    if (indexname=="ActFromSerNr") then begin res = 0; end;
  end;
  DfncyStockVcRecordInIndex = res;
  return;
end;

global
updating procedure PORemoveUpdateDfncyStock(record POVc POp)
begin
  record DfncyStockVc DSr;
  record DfncyStockVc oldDSr;
  Boolean found;

  if (RecordsInIndex("DfncyStockVc","PONr")>0) then begin
    found = true;
    DSr.PONr = POp.SerNr;
    while (LoopKey("PONr",DSr,1,found)) begin
      if (DSr.PONr!=POp.SerNr) then begin found = false; end;
      if (found) then begin      
        RecordCopy(oldDSr,DSr);
        DSr.PONr = -1;
        DSr.PORow = -1;
        DSr.OKFlag = 0;
        RecordUpdate(oldDSr,DSr,true);
      end;
    end;
  end;
  return;
end;
