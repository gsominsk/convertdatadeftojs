external function Boolean HasModPOS();
external function Integer PMCheckType(string,var string,var string);
external function Boolean GetPMRow(string,var row PMBlock);

global
function LongInt POSButtonsVcRecordDefaults(var record POSButtonsVc POSBr,record POSBVc POSB2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  POSBr.WindowClass = "NPTSIVCashDClass";
  POSBr.Page = 1;
  switch (BuildProductCode) begin
    case "StandardShop":
      POSBr.WindowClass = "NPTSIVCashDClass";
    case "StandardRestaurant":
      POSBr.WindowClass = "RestAccDClass";
    case "StandardBar":
      POSBr.WindowClass = "RestAccDClass";
    case "StandardAccounts":
      if (HasModPOS==false) then begin
        POSBr.WindowClass = "RestAccDClass";
      end;
    case "StandardAccountsMWeb":
      if (HasModPOS==false) then begin
        POSBr.WindowClass = "RestAccDClass";
      end;
    case "StandardAccountsiDream":
      if (HasModPOS==false) then begin
        POSBr.WindowClass = "RestAccDClass";
      end;
    case "StandardAccountsWebRaama":
      if (HasModPOS==false) then begin
        POSBr.WindowClass = "RestAccDClass";
      end;
  end;
  POSButtonsVcRecordDefaults = res;
  return;
end;

global
function LongInt POSButtonsVcRecordCheck(var record POSButtonsVc POSBr,record POSBVc POSB2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record INVc INr;
  Boolean checkf,check;
  Integer insertmode,updatemode;
  Integer cht;
  row POSButtonsVc POSBrw;
  Integer i,rwcnt;
  row PMBlock PMrw;
  record ModifiersVc Modifr;
  record POSButtonsVc lPOSBr;
  string 255 tstr;
  record StandProblemVc SPr;
  
  res = 0;
  insertmode = 1;
  updatemode = 2;
/*  
  if ((ProgramType==typFirstOffice) or 
      (ProgramType==typFirstOfficeSmall) or 
      (ProgramType==typFirstOfficePro) or 
      (IsBooks) then begin
    lightFlag = true;
  end;  
*/  
  if (POSBr.Page<1) then begin
    RecordCheckError(2246,"",-1,"Page");      
    res = -1; 
    goto LPOSButtonsVcRecordCheck;
  end;
  rwcnt = MatRowCnt(POSBr);

  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(POSBr,i,POSBrw);
    switch (POSBrw.ButtonType) begin
      case kPOSButtonTypeBlank:
      case kPOSButtonTypeItem:
        INr.Code = POSBrw.Code;
        if (ReadFirstMain(INr,1,true)==false) then begin
          RecordCheckError(20860,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeModifier:
        Modifr.Code = POSBrw.Code;
        if (ReadFirstMain(Modifr,1,true)==false) then begin
          RecordCheckError(1290,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeGotoPage:
        lPOSBr.WindowClass = POSBr.WindowClass;
        lPOSBr.POSButtonGroupCode = POSBr.POSButtonGroupCode;
        lPOSBr.Page = StringToInt(POSBrw.Code);
        if (ReadFirstMain(lPOSBr,3,true)==false) then begin
          RecordCheckError(1290,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeCashPayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeLoyaltyPointsPayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeCreditCardPayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeCreditCardPaymentReversal:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeDebitCardPayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeOnAccountPayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeOnHotelGuestAccount:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeGiftVoucherPayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeGiftVoucherSales:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeChequePayment:
        if (GetPMRow(POSBrw.Code,PMrw)==false) then begin 
          RecordCheckError(1101,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
      case kPOSButtonTypeReturnInvoiceNo:
        if (nonblank(POSBrw.Code)) then begin
          SPr.Code = POSBrw.Code;
          if (ReadFirstMain(SPr,1,true)==false) then begin
            RecordCheckError(1290,"",i,"Code");      
            res = -1; 
            goto LPOSButtonsVcRecordCheck;
          end;
        end;
      case kPOSButtonTypeReturnReason:
        if (nonblank(POSBrw.Code)) then begin
          SPr.Code = POSBrw.Code;
          if (ReadFirstMain(SPr,1,true)==false) then begin
            RecordCheckError(1290,"",i,"Code");      
            res = -1; 
            goto LPOSButtonsVcRecordCheck;
          end;
        end;
      case kPOSButtonTypeVoidRow:
        if (nonblank(POSBrw.Code)) then begin
          SPr.Code = POSBrw.Code;
          if (ReadFirstMain(SPr,1,true)==false) then begin
            RecordCheckError(1290,"",i,"Code");      
            res = -1; 
            goto LPOSButtonsVcRecordCheck;
          end;
        end;
/*        
zoltan doesnt like it
        cht = PMCheckType(POSBrw.Code,tstr,tstr);
        if (cht!=kPayModeTypeCheque) then begin
          RecordCheckError(24199,"",i,"Code");      
          res = -1; 
          goto LPOSButtonsVcRecordCheck;
        end;
*/        
    end;
  end;
LPOSButtonsVcRecordCheck:;
  POSButtonsVcRecordCheck = res;
  return;
end;

