global
updating function LongInt MainStockBlockCheck(var record MainStockBlock MSb,record MainStockBlock MainStock2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record LocationVc Locr;
  record DBLockBlock DBLb;
  transaction Boolean gSynchServToOfflineSettingsm;

  res = 0; 
  if (((AutoSyncing and IsLiveSyncPOS) or (gSynchServToOfflineSettingsm)) and ServerMode==false) then begin
    goto LMainStockBlockCheck;
  end;
  BlockLoad(DBLb);    
  if (nonblank(MSb.MainStock)) then begin
    Locr.Code = MSb.MainStock;
    if (ReadFirstMain(Locr,1,true)==false) then begin
      RecordCheckError(1290,": " & MSb.MainStock,-1,"MainStock");      
      res = -1;
      goto LMainStockBlockCheck;
    end;
  end;
  if (CountRecords("LocationVc")>0) then begin
    if (blank(MSb.MainStock)) then begin
      RecordCheckError(1767,"",-1,"MainStock");      
      res = -1;
      goto LMainStockBlockCheck;
    end;
  end;
  if (nonblank(MSb.DefServiceLoc)) then begin
    Locr.Code = MSb.DefServiceLoc;
    if (ReadFirstMain(Locr,1,true)==false) then begin
      RecordCheckError(1290,": " & MSb.DefServiceLoc,-1,"DefServiceLoc");      
      res = -1;
      goto LMainStockBlockCheck;
    end;
  end;
  if (nonblankdate(MSb.StockCorectAfter)) then begin
    if (MSb.StockCorectAfter<DBLb.TRLock) then begin
      RecordCheckError(20883,"",-1,"StockCorectAfter");      
      res = -1;
      goto LMainStockBlockCheck;
    end;
  end;
LMainStockBlockCheck:;
  MainStockBlockCheck = res;
  RETURN;
END;

global
updating function LongInt VARMaskBlockCheck(var record VARMaskBlock VARMaskr,record VARMaskBlock VARMask2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record LocationVc Locr;
  record MainStockBlock MSb;

  res = 0;
  if (CompanyProgramMode==kProgramModeLiveSync) then begin
    goto LMainStockBlockCheck;
  end;
  BlockLoad(MSb);
  if (blank(MSb.MainStock)) then begin
    if (CountRecords("LocationVc")>0) then begin
      RecordCheckError(1743,"",-1,"");      
      res = -1;
      goto LMainStockBlockCheck;
    end;
  end;
LMainStockBlockCheck:;
  VARMaskBlockCheck = res;
  RETURN;
END;
