global
function LongInt RebVcRecordDefaults(var record RebVc Rebr,record RebVc Reb2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
      
  Rebr.vra0 = blankval;
  Rebr.vra1 = blankval;
  Rebr.vra2 = blankval;
  Rebr.vra3 = blankval;
  Rebr.vra4 = blankval;
  Rebr.vra5 = blankval;
  Rebr.vra6 = blankval;
  Rebr.vra7 = blankval;
  Rebr.vra8 = blankval;
  Rebr.vra9 = blankval;
  Rebr.DiscPerc = blankval;
//  Rebr.StartDate = blankdate;
//  Rebr.EndDate = blankdate;
//  Rebr.Replaces = "";
  RebVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt RebVcRecordCheck(var record RebVc Rebr,record RebVc Reb2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode;
  record RebVc locRebr;
  
  res = 0;
  insertmode = 1;
  if blank(Rebr.Code) then begin
    res = -1;
    RecordCheckError(1959,"",-1,"Code");      
    goto LRebVcRecordCheck;     
  end;  
  if (stat==insertmode) then begin
     if (nonblankdate(Rebr.FromDate) or nonblankdate(Rebr.ToDate)) then begin
       if (blank(Rebr.Replaces)) then begin
         RecordCheckError(1058,"",-1,"Replaces");      
         res = -1; 
         goto LRebVcRecordCheck;     
       end;
     end;
     locRebr.Replaces = Rebr.Replaces;
     locRebr.FromDate = Rebr.FromDate;
     if (ReadLastKey("Replaces",locRebr,2,false)) then begin
       if (locRebr.Replaces==Rebr.Replaces) then begin
         if (nonblankdate(Rebr.FromDate)) then begin
           if (locRebr.FromDate!=Rebr.FromDate) then begin
             if (locRebr.ToDate!=Rebr.ToDate) then begin
               if (DateInRange(Rebr.FromDate,locRebr.FromDate,locRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"FromDate");      
                 res = -1; 
                 goto LRebVcRecordCheck;     
               end;  
             end;
           end;
           if (locRebr.FromDate==Rebr.FromDate) then begin
             RecordCheckError(2030,"",-1,"FromDate");      
             res = -1; 
             goto LRebVcRecordCheck;     
           end;           
           if (locRebr.ToDate==Rebr.ToDate) then begin
             RecordCheckError(2030,"",-1,"ToDate");      
             res = -1; 
             goto LRebVcRecordCheck;     
           end;           
         end;
       end;
     end;  
     locRebr.Replaces = Rebr.Replaces;
     locRebr.ToDate = Rebr.ToDate;
     if (ReadFirstKey("ToDate",locRebr,2,false)) then begin
       if (locRebr.Replaces==Rebr.Replaces) then begin
         if (nonblankdate(Rebr.FromDate)) then begin
           if (locRebr.FromDate!=Rebr.FromDate) then begin
             if (locRebr.ToDate!=Rebr.ToDate) then begin
               if (DateInRange(Rebr.ToDate,locRebr.FromDate,locRebr.ToDate)) then begin
                 RecordCheckError(2030,"",-1,"ToDate");      
                 res = -1; 
                 goto LRebVcRecordCheck;     
               end;  
             end;
           end;
         end;
       end;  
     end;  
  end;  
  if (nonblank(Rebr.Replaces)) then begin
    locRebr.Code = Rebr.Replaces;
    if (ReadFirstMain(locRebr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"Replaces");      
      res = -1; 
      goto LRebVcRecordCheck;     
    end;
  end else begin
    if (nonblankdate(Rebr.FromDate)) or (nonblankdate(Rebr.ToDate)) then begin
      if (blank(Rebr.Replaces)) then begin
        RecordCheckError(1058,"",-1,"Replaces");      
        res = -1; 
        goto LRebVcRecordCheck;     
      end;
    end;
  end;
LRebVcRecordCheck:;  
  RebVcRecordCheck = res;
  RETURN;
END;

global 
function Boolean RebVcRecordShouldBeSynchronised(record RebVc Rebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  RebVcRecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean RebVcRecordSync(record RebVc Rebr,string tagstr)
begin
  Boolean res;
  
  res = true;
  RebVcRecordSync = res;
  return;
end;
