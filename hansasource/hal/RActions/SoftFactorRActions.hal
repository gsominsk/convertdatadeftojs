global
function LongInt SoftFactorVcRecordDefaults(var record SoftFactorVc SoftFactorr,record SoftFactorVc SoftFactor2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Time blankt;

  SoftFactorr.UserCode = CurrentUser;
  SoftFactorr.TransDate = CurrentDate;
  SoftFactorVcRecordDefaults = res;
  RETURN;
END;

global
function LongInt SoftFactorVcRecordDuplicate(var record SoftFactorVc SoftFactorr,record SoftFactorVc SoftFactor2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Date blankd;

  SoftFactorr.UserCode = CurrentUser;
  SoftFactorr.TransDate = CurrentDate;
  SoftFactorr.Loyalty = 0;
  SoftFactorr.Attitude = 0;
  SoftFactorr.LearningCurve = 0;
  SoftFactorr.CustomerRelations = 0;
  SoftFactorr.SalesEffort = 0;
  SoftFactorr.WorkEffort = 0;
  SoftFactorr.Responsibility = 0;
  SoftFactorr.InternalTraining = 0;
  SoftFactorr.PrivateLife = 0;
  SoftFactorr.OKFlag = 0;
  SoftFactorVcRecordDuplicate = res;
  RETURN;
END;

global
function LongInt SoftFactorVcRecordCheck(var record SoftFactorVc SoftFactorr,record SoftFactorVc SoftFactor2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  if (blank(SoftFactorr.EmployeeCode)) then begin
    RecordCheckError(1058,"",-1,"EmployeeCode");
    res = -1;
    goto LSoftFactorVcRecordCheck;
  end;
  if ((SoftFactorr.Loyalty==0) or (SoftFactorr.Attitude==0) or (SoftFactorr.LearningCurve==0) or (SoftFactorr.CustomerRelations==0) or
      (SoftFactorr.SalesEffort==0) or (SoftFactorr.WorkEffort==0) or (SoftFactorr.Responsibility==0) or (SoftFactorr.InternalTraining==0) or
      (SoftFactorr.PrivateLife==0)) then begin
    RecordCheckError(20028,"",-1,"EmployeeCode");
    res = -1;
    goto LSoftFactorVcRecordCheck;
  end;
  res = 0;
LSoftFactorVcRecordCheck:;
  SoftFactorVcRecordCheck = res;
  RETURN;
END;

global
function LongInt SoftFactorGroupVcRecordCheck(var record SoftFactorGroupVc SoftFactorGroupr,record SoftFactorGroupVc SoftFactorGroup2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer rwcnt,i;
  row SoftFactorGroupVc SoftFactorGrouprw;

  if (blankdate(SoftFactorGroupr.StartDate)) then begin
    RecordCheckError(1058,"",-1,"StartDate");
    res = -1;
    goto LSoftFactorGroupVcRecordCheck;
  end;
  if (nonblankdate(SoftFactorGroupr.EndDate)) then begin
    if (SoftFactorGroupr.EndDate<SoftFactorGroupr.StartDate) then begin
      RecordCheckError(1142,"",-1,"EndDate");
      res = -1;
      goto LSoftFactorGroupVcRecordCheck;
    end;
  end;
  rwcnt = MatRowCnt(SoftFactorGroupr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SoftFactorGroupr,i,SoftFactorGrouprw);
    if (nonblankdate(SoftFactorGrouprw.StartDate)) then begin
      if ((SoftFactorGrouprw.StartDate<SoftFactorGroupr.StartDate) or (SoftFactorGrouprw.StartDate>SoftFactorGroupr.EndDate)) then begin
        RecordCheckError(1142,"",i,"StartDate");
        res = -1;
        goto LSoftFactorGroupVcRecordCheck;
      end;
      if (nonblankdate(SoftFactorGrouprw.EndDate)) then begin
        if (SoftFactorGrouprw.StartDate>SoftFactorGrouprw.EndDate) then begin
          RecordCheckError(1142,"",i,"StartDate");
          res = -1;
          goto LSoftFactorGroupVcRecordCheck;
        end;
      end;
    end;
    if (nonblankdate(SoftFactorGrouprw.EndDate)) then begin
      if ((SoftFactorGrouprw.EndDate<SoftFactorGroupr.StartDate) or (SoftFactorGrouprw.EndDate>SoftFactorGroupr.EndDate)) then begin
        RecordCheckError(1142,"",i,"EndDate");
        res = -1;
        goto LSoftFactorGroupVcRecordCheck;
      end;
    end;
  end;
  res = 0;
LSoftFactorGroupVcRecordCheck:;
  SoftFactorGroupVcRecordCheck = res;
  RETURN;
END;
