global
function LongInt AT2RevListVcRecordSave(var record AT2RevListVc AT2RevListr,record AT2RevListVc AT2RevList2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
    
  if (AT2RevListr.SerNr<=0) then begin
    AT2RevListr.SerNr = NextSerNr("AT2RevListVc",AT2RevListr.TransDate,-1,false,"");
  end;  
  AT2RevListVcRecordSave = res;
  RETURN;
END;


global
function LongInt AT2RevListVcRecordDefaults(var record AT2RevListVc AT2RevListr,record AT2RevListVc AT2RevList2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
    
  AT2RevListr.SerNr = -1;
  AT2RevListVcRecordDefaults = res; 
END;

global
function LongInt AT2RevListVcRecordCheck(var record AT2RevListVc AT2RevListr,record AT2RevListVc AT2RevList2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode,updatemode;
  record AT2RevListVc locAT2RevListr;
    
  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  if (blankdate(AT2RevListr.TransDate)) then begin
    RecordCheckError(1058,"",-1,"TransDate");      
    res = -1; 
    goto LAT2RevListVcRecordCheck;
  end;
  if (stat==insertmode) then begin
    locAT2RevListr.TransDate = AT2RevListr.TransDate;
    if (ReadFirstKey("TransDate",locAT2RevListr,1,true)) then begin
      RecordCheckError(1142," " & locAT2RevListr.SerNr,-1,"TransDate");      
      res = -1; 
      goto LAT2RevListVcRecordCheck;
    end;
  end;
LAT2RevListVcRecordCheck:;  
  AT2RevListVcRecordCheck = res;
  RETURN;
END;

