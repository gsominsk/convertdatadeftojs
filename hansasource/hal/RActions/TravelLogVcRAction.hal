global
function LongInt TravelLogVcRecordDefaults(var record TravelLogVc TravelLogr,record TravelLogVc TravelLog2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  if (SingleUserMode) then begin
    TravelLogr.SerNr = NextSerNr("TravelLogVc",CurrentDate,-1,false,"");
  end;
  
  TravelLogVcRecordDefaults = res;
  return;
end;

global
function LongInt TravelLogVcRecordDuplicate(var record TravelLogVc TravelLogr,record TravelLogVc TravelLog2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  TravelLogr.SerNr = -1;
  if (SingleUserMode) then begin
    TravelLogr.SerNr = NextSerNr("TravelLogVc",CurrentDate,-1,false,"");
  end;
  
  TravelLogVcRecordDuplicate = res;
  return;
end;

global
function LongInt TravelLogVcRecordCheck(var record TravelLogVc TravelLogr,record TravelLogVc TravelLog2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  res = 0;
  
  if (TravelLogr.SerNr==-1) then begin
    TravelLogr.SerNr = NextSerNr("TravelLogVc",CurrentDate,-1,false,"");
  end;
  
  TravelLogVcRecordCheck = res;
  return;
end;

updating procedure TravelLogVc_SaveLasts(record TravelLogVc TravelLogr)
begin
  record TravelLogBlock TravelLogRec;
  Date NullDate;
  
  BlockLoad(TravelLogRec);
  TravelLogRec.LastTravelLogNr = TravelLogr.SerNr;
  TravelLogRec.LastTravelLogDate = NullDate;
  TravelLogRec.LastCountry = "";
  BlockStore(TravelLogRec);
  
  return;
end;

global
updating function LongInt TravelLogVcRecordSaveAfter(var record TravelLogVc TravelLogr,record TravelLogVc TravelLog2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  TravelLogVc_SaveLasts(TravelLogr);
  
  TravelLogVcRecordSaveAfter = res;
  return;
end;
