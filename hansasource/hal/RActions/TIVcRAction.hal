external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure B1ToB2Val(val,val,val,var val);

procedure TIVcConvertB1ToB2Date(record TIVc TIp,string curp,Date datp)
BEGIN
  row TIVc TIrw;
  val fr,to1,to2,br1,br2,t;
  Integer rwcnt,i;
  string 20 curncy;

  curncy = curp;
  GetFullCurncyRate(curncy,datp,fr,to1,to2,br1,br2);
  rwcnt = MatRowCnt(TIp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TIp,i,TIrw);
    B1ToB2Val(TIrw.price0,br1,br2,t);
    TIrw.price0 = t;
    B1ToB2Val(TIrw.price1,br1,br2,t);
    TIrw.price1 = t;
    B1ToB2Val(TIrw.price2,br1,br2,t);
    TIrw.price2 = t;
    B1ToB2Val(TIrw.price3,br1,br2,t);
    TIrw.price3 = t;
    B1ToB2Val(TIrw.price4,br1,br2,t);
    TIrw.price4 = t;
    B1ToB2Val(TIrw.price5,br1,br2,t);
    TIrw.price5 = t;
    MatRowPut(TIp,i,TIrw);
  end;
  RETURN;
END;

global
function LongInt TIVcRecordImport(record TIVc TIr,record TIVc TI2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record ConvMasterBlock cvm;
  Boolean gBase1ToBase2;

  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    TIVcConvertB1ToB2Date(TIr,"",CurrentDate);
  end;
  TIVcRecordImport = res;
  RETURN;
END;

global
function LongInt TIVcRecordCheck(var record TIVc TIr,record TIVc TI2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode;
  record INVc INr;
  record EGVc EGr;
  record TimeClassVc TimeClassr;
  row TIVc TIrw;
  Integer i,rwcnt;

  res = 0;     
  insertmode = 1;
  if (blank(TIr.Code)) then begin
    RecordCheckError(1058,TIr.Code,-1,"Code");      
    res = -1; 
    goto LTIVcRecordCheck;
  end;
  INr.Code = TIr.Code;
  if (ReadFirstMain(INr,1,true)==false) then begin
    RecordCheckError(1233,"",-1,"ArtCode");  
    res = -1;
    goto LTIVcRecordCheck;
  end;  
  rwcnt = MatRowCnt(TIr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(TIr,i,TIrw);
    if (nonblank(TIrw.EMGroup)) then begin 
      EGr.Code = TIrw.EMGroup;
      if (ReadFirstMain(EGr,1,true)==false) then begin
        RecordCheckError(1290,"",i,"EMGroup");  
        res = -1;
        goto LTIVcRecordCheck;
      end; 
    end;
    if (nonblank(TIrw.TimeClass)) then begin 
      TimeClassr.Code = TIrw.TimeClass;
      if (ReadFirstMain(TimeClassr,1,true)==false) then begin
        RecordCheckError(1290,"",i,"TimeClass");  
        res = -1;
        goto LTIVcRecordCheck;
      end;  
    end;
  end;
LTIVcRecordCheck:;  
  TIVcRecordCheck = res;  
  RETURN;
END;