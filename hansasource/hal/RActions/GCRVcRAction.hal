external function Boolean SerNrTestGCRVc(LongInt,Date,var Boolean);

global
function LongInt GCRVcRecordCheck(var record GCRVc GCRr,record GCRVc GCR2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record GCRVc locGCRr;
  Boolean gentrans;

  res = 0;
  if (GCRr.SerNr<=0) then begin
    GCRr.SerNr = NextSerNr("GCRVc",GCRr.TransDate,-1,true,"");
  end;
  if (SerNrTestGCRVc(GCRr.SerNr,GCRr.TransDate,gentrans)==false) then begin
    RecordCheckError(1557,"",-1,"SerNr");      
    res = -1; 
    goto LGCRVcRecordCheck;
  end;
  locGCRr.SerNr = GCRr.SerNr;
  if (ReadFirstMain(locGCRr,1,true)) then begin    
    if (locGCRr.SerNr!=GCRr.SerNr) then begin
      RecordCheckError(1547,"",-1,"SerNr");   
      res = -1; 
      goto LGCRVcRecordCheck;  
    end;
  end;
  if (blankdate(GCRr.TransDate)) then begin
    RecordCheckError(1058," " & GCRr.TransDate,-1,"TransDate");
    res = -1;
    goto LGCRVcRecordCheck;
  end;   
  if (blankdate(GCRr.ExpiryDate)) then begin
    RecordCheckError(1058," " & GCRr.ExpiryDate,-1,"ExpiryDate");
    res = -1;
    goto LGCRVcRecordCheck;
  end;   
LGCRVcRecordCheck:;
  GCRVcRecordCheck = res;
  RETURN;
END;

global
function LongInt GCRVcRecordImport(var record GCRVc GCRr,record GCRVc GCR2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  if (GCRr.GCSSerNr<=0) then begin
    GCRr.GCSSerNr = GCRr.SerNr;
  end;
  GCRVcRecordImport = res;
  return;
end;

global
function LongInt GCRVcRecordDefaults(var record GCRVc GCRr,record GCRVc GCR2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  GCRr.TransDate = CurrentDate;
  if (SingleUserMode) then begin
    GCRr.SerNr = NextSerNr("GCRVc",GCRr.TransDate,-1,true,"");
  end;
  GCRVcRecordDefaults = res; 
  RETURN;
END;
