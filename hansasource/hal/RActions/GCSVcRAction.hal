global
function LongInt GCSVcRecordCheck(var record GCSVc GCSr,record GCSVc GCS2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record GCSVc locGCSr;

  res = 0;
  if (GCSr.SerNr<=0) then begin
    GCSr.SerNr = NextSerNr("GCSVc",GCSr.TransDate,-1,true,"");
  end;
  locGCSr.SerNr = GCSr.SerNr;
  if (ReadFirstMain(locGCSr,1,true)) then begin    
    if (locGCSr.SerNr!=GCSr.SerNr) then begin
      RecordCheckError(1547,"",-1,"SerNr");   
      res = -1; 
      goto LGCSVcRecordCheck;  
    end;
  end;
  if (blankdate(GCSr.TransDate)) then begin
    RecordCheckError(1058," " & GCSr.TransDate,-1,"TransDate");
    res = -1;
    goto LGCSVcRecordCheck;
  end; 
  if (blankdate(GCSr.ExpiryDate)) then begin
    RecordCheckError(1058," " & GCSr.ExpiryDate,-1,"ExpiryDate");
    res = -1;
    goto LGCSVcRecordCheck;
  end; 
LGCSVcRecordCheck:;
  GCSVcRecordCheck = res;
  RETURN;
END;

global
function LongInt GCSVcRecordInIndex(record GCSVc GCSr,string indexname)
BEGIN
  LongInt res;
  
  res = 1;
  if (GCSr.Closed!=0) then begin 
    if (indexname=="ActSerNr")  then begin res = 0; end;
    if (indexname=="ActTransDate")  then begin res = 0; end;
    if (indexname=="ActComment")  then begin res = 0; end;
  end;
  GCSVcRecordInIndex = res;
  RETURN;
END;

global
function LongInt GCSVcRecordImport(var record GCSVc GCSr,record GCSVc GCS2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  if (blank(GCSr.Balance)) then begin
    GCSr.Balance = GCSr.Amount;
  end;
  GCSVcRecordImport = res;
  return;
end;
