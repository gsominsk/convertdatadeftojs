external procedure AddLicense(string,string,Integer,Integer,string);

global
function LongInt ModuleBlockCheck(var record ModuleBlock Modb,record ModuleBlock Module2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer error;

  res = 0;    
  switch (Modb.Hardware) begin
    case 1:
      switch (Modb.OperatingSystem) begin
        case 4: error = 20000;
        case 5: error = 20000;
      end;
    case 2:
      switch (Modb.OperatingSystem) begin
        case 1: error = 20001;
        case 5: error = 20001;
      end;
    case 3:
      switch (Modb.OperatingSystem) begin
        case 1: error = 20002;
        case 5: error = 20002;
      end;
    case 4:
      switch (Modb.OperatingSystem) begin
        case 5: error = 20003;
      end;
    case 5:
      switch (Modb.OperatingSystem) begin
        case 1: error = 20004;
        case 2: error = 20004;
      end;
    case 6:
      switch (Modb.OperatingSystem) begin
        case 1: error = 20005;
        case 2: error = 20005;
        case 3: error = 20005;
        case 4: error = 20005;
        case 5: error = 20005;
      end;
  end;
  if (error!=0) then begin
    RecordCheckError(error,"",-1,"OperatingSystem");      
    res = -1;
    goto LModuleBlockCheck;
  end;
// Why this control, doesn't the above switch take care of all these combinations
// And another thing, if you have this control, you have to have other messages....
/*
  error = 0;
  switch (Modb.OperatingSystem) begin
    case 1://Mac OS
      switch (Modb.Hardware) begin
        case 2: error = 20000;
        case 3: error = 20000;
        case 4: error = 20000;
        case 5: error = 20000;
      end;
    case 2://Windows
      switch (Modb.Hardware) begin
        case 1: error = 20001;
        case 5: error = 20001;
      end;
    case 3:// Linux
      switch (Modb.Hardware) begin
//        case 5: error = 20002;
      end;
    case 4://AIX
      switch (Modb.Hardware) begin
        case 1: error = 20001;
        case 5: error = 20001;
      end;
    case 5://OS/400
      switch (Modb.Hardware) begin
        case 1: error = 20004;
        case 2: error = 20004;
        case 3: error = 20004;
      end;
    case 6://Sparc
      switch (Modb.Hardware) begin
        case 1: error = 20005;
        case 2: error = 20005;
        case 3: error = 20005;
        case 4: error = 20005;
        case 5: error = 20005;
      end;
  end;
  if (error!=0) then begin
    RecordCheckError(error,"",-1,"Hardware");      
    res = -1;
    goto LModuleBlockCheck;
  end;
*/
LModuleBlockCheck:;
/*
  if (IsStandardProduct and IsUsingActivationCodes==false) then begin
LogText(0," ModuleBlockCheck res " & res & " LicenseMode " & LicenseMode);
  end;

  if (res==0) then begin//should be in ModuleBlockUpdate but we do not have such trigger
    if (LicenseMode==kLicenseModeServer) then begin
      record ModuleBlock oldModuleb;
    
      BlockLoad(oldModuleb);
      if (Modb.NumberOfUsers!=oldModuleb.NumberOfUsers) then begin
        AddLicense("User","",Modb.NumberOfUsers-oldModuleb.NumberOfUsers,0,"");
      end;
    end;
  end;
*/  
  ModuleBlockCheck = res;
  return;
end;

global
updating function LongInt ModuleBlockImporting(var record ModuleBlock Modb,record ModuleBlock oldModb,LongInt stat,LongInt long4)
begin
  LongInt res;
  record InternetEnabOldBlock IEOb;

  res = 0;
  if (IsStandardProduct) then begin
    BlockLoad(IEOb);
    if (blank(IEOb.ControlCode) or Modb.ControlCode<IEOb.ControlCode) then begin
      IEOb.ControlCode = Modb.ControlCode;//we must do it cause ControlCode in module block is reset
      BlockStore(IEOb);
    end;
  end;
  ModuleBlockImporting = res;
  return;
end;

