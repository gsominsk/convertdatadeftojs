external procedure SwapM4Val(var val,var val);
external procedure ConvertToDualBase(var string,date,var val,var val,var val,var val,var val,var val,Boolean);

procedure WSIVVcConvertB1ToB2(record WSIVVc WSIVr,var val to1p,var val to2p,var val br1p,var val br2p)
BEGIN    
  val t;
  
  SwapM4Val(br1p,br2p);
  SwapM4Val(to1p,to2p);
  RETURN;
END;

global
function LongInt WSIVVcRecordImport(var record WSIVVc WSIVr,record WSIVVc WSIV2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  val t,fr,to1,to2,br1,br2;
  string 5 curncy;
  Boolean gToDualBase,gBase1ToBase2;
  record ConvMasterBlock cvm;

  BlockLoad(cvm);
  if (cvm.DualBaseCurrencyFlag!=0) then begin gToDualBase = true; end;
  if (gToDualBase) then begin
    curncy = WSIVr.CurncyCode;
    fr = WSIVr.FrRate;
    to1 = WSIVr.ToRateB1;
    to2 = WSIVr.ToRateB2;
    br1 = WSIVr.BaseRate1;
    br2 = WSIVr.BaseRate2;
    ConvertToDualBase(curncy,WSIVr.TransDate,fr,to1,to2,br1,br2,t,true);
    WSIVr.CurncyCode = curncy;
    WSIVr.FrRate = fr;
    WSIVr.ToRateB1 = to1;
    WSIVr.ToRateB2 = to2;
    WSIVr.BaseRate1 = br1;
    WSIVr.BaseRate2 = br2;
  end;
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    curncy = WSIVr.CurncyCode;
    to1 = WSIVr.ToRateB1;
    to2 = WSIVr.ToRateB2;
    br1 = WSIVr.BaseRate1;
    br2 = WSIVr.BaseRate2;
    WSIVVcConvertB1ToB2(WSIVr,to1,to2,br1,br2);
    WSIVr.ToRateB1 = to1;
    WSIVr.ToRateB2 = to2;
    WSIVr.BaseRate1 = br1;
    WSIVr.BaseRate2 = br2;
  end;
 
  WSIVVcRecordImport = res;
  RETURN;
END;