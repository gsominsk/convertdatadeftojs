external function Boolean VATCodeExists(string);
external function Integer SerBlockCheckOverlap(LongInt,LongInt,LongInt,LongInt);

global
updating function LongInt VATCodeControlBlockCheck(var record VATCodeControlBlock VATCCr,record VATCodeControlBlock VATCC2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row VATCodeControlBlock VATCCrw;
  record TaxTemplateVc TTr;
  record CYBlock CYb;

  BlockLoad(CYb);  
  res = 0;
  rwcnt = MatRowCnt(VATCCr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(VATCCr,i,VATCCrw);
    if (blank(VATCCrw.VATCode)) and (blank(VATCCrw.TaxTemplateCode)) and (nonblank(VATCCrw.Accounts)) then begin
      if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
        RecordCheckError(1058,"",i,"TaxTemplateCode");   
      end else begin
        RecordCheckError(1058,"",i,"VATCode");   
      end;
      res = -1;
      goto LVATCodeControlBlockCheck;        
    end;
    if (((nonblank(VATCCrw.VATCode)) or (nonblank(VATCCrw.TaxTemplateCode))) and (blank(VATCCrw.Accounts)) ) then begin
      RecordCheckError(1058,"",i,"Accounts");   
      res = -1;
      goto LVATCodeControlBlockCheck;        
    end;
    if (nonblank(VATCCrw.VATCode)) then begin
      if (VATCodeExists(VATCCrw.VATCode)==false) then begin
        RecordCheckError(1120,VATCCrw.VATCode,i,"VATCode");      
        res = -1;
        goto LVATCodeControlBlockCheck;        
      end;
    end;
    if (nonblank(VATCCrw.TaxTemplateCode)) then begin
      TTr.Code = VATCCrw.TaxTemplateCode;
      if (ReadFirstMain(TTr,1,true)==false) then begin
        RecordCheckError(1120,VATCCrw.TaxTemplateCode,i,"TaxTemplateCode");      
        res = -1; 
        goto LVATCodeControlBlockCheck;        
      end;
    end;
  end;  
LVATCodeControlBlockCheck:;  
  VATCodeControlBlockCheck = res;
  return;
end;
