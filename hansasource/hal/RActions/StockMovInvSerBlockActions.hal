external function Integer SerBlockCheckOverlap(LongInt,LongInt,LongInt,LongInt);

global
updating function LongInt StockMovInvSerBlockCheck(var record StockMovInvSerBlock StockMovInvSerr,record StockMovInvSerBlock StockMovInvSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row StockMovInvSerBlock StockMovInvSerrw;
  row StockMovInvSerBlock StockMovInvSer2rw;
  
  res = 0;
  rwcnt = MatRowCnt(StockMovInvSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(StockMovInvSerr,i,StockMovInvSerrw);
    if (StockMovInvSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LStockMovInvSerBlockCheck;        
    end;
    if (StockMovInvSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LStockMovInvSerBlockCheck;        
    end;
    if ((nonblankdate(StockMovInvSerrw.StartDate)) and (nonblankdate(StockMovInvSerrw.EndDate))) then begin
      if (StockMovInvSerrw.StartDate>StockMovInvSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LStockMovInvSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(StockMovInvSerr,j,StockMovInvSer2rw);
      res = SerBlockCheckOverlap(StockMovInvSerrw.TSerStart,StockMovInvSerrw.TSerEnd,StockMovInvSer2rw.TSerStart,StockMovInvSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LStockMovInvSerBlockCheck;        
      end;
    end;        
  end;  
LStockMovInvSerBlockCheck:;  
  StockMovInvSerBlockCheck = res;
  return;
end;
