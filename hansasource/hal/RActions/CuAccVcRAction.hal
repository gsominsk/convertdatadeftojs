global
function LongInt CuAccVcRecordDefaults(var record CuAccVc CuAccr,record CuAccVc CuAcc2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  CuAccr.Closed = 0;
  CuAccr.Limit = blankval;
  CuAccr.ExtraLimit = blankval;
  CuAccr.InstNr = blankval;
  CuAccVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt CuAccVcRecordDuplicate(var record CuAccVc CuAccr,record CuAccVc CuAcc2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer i,rwcnt;
  row CuAccVc CuAccrw;

  CuAccr.Closed = 0;
  CuAccr.Limit = blankval;
  CuAccr.ExtraLimit = blankval;
  CuAccr.InstNr = blankval;
  rwcnt = MatRowCnt(CuAccr);
  for (i=rwcnt-1;i>=0;i=i-1) begin
    MatRowGet(CuAccr,i,cuaccrw);
    MatRowDelete(CuAccr,i);
    i=i-1;
  end;  
  CuAccVcRecordDuplicate = res; 
  RETURN;
END;

//    case FAOnWCheck:  *(Integer*)ap5 = WCheckCuAccD((CuAccView*)ap1,(CuAccView*)ap2,*(Integer*)ap3); break;
