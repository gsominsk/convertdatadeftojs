global 
function Boolean DocVcRecordShouldBeSynchronised(record DocVc Docr,string tagstr)
begin
  Boolean res;
  
  res = true;
  DocVcRecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean DocVcRecordSync(record DocVc Docr,string tagstr)
begin
  Boolean res;
  
  res = true;
  DocVcRecordSync = res;
  return;
end;

/*
function integer Max(integer a,integer b)
begin
  integer res;
  
  if (a>=b) then begin
    res = a;
  end else begin
    res = b;
  end;
  Max = res;
  return;
end;

function integer Min(integer a,integer b)
begin
  integer res;
  
  if (a<=b) then begin
    res = a;
  end else begin
    res = b;
  end;
  Min = res;
  return;
end;

function Boolean M4PtInRect(Integer h,Integer v,Integer xpos,Integer ypos,Integer unitWidth,Integer unitHeight)
begin
  Boolean res;
  Integer l,r,t,b;

  t = MIN(ypos,unitHeight);
  b = MAX(ypos,unitHeight);

  l = MIN(xpos,unitWidth);
  r = MAX(xpos,unitWidth);
  if ((v>=t) and (v<=b) and (h>=l) and (h<=r)) then begin
    res = true;
  end;
  M4PtInRect = res;
  return;
end;
*/

function Boolean RectInRect(Integer xpos1,Integer ypos1,Integer xpos,Integer ypos,Integer unitWidth,Integer unitHeight,Integer unitWidth1,Integer unitHeight1)
begin
  Boolean res;
  
  res = true;
  if (unitWidth<xpos1 or unitWidth1<xpos or unitHeight<ypos1 or unitHeight1<ypos) then begin 
    res = false;
  end;
  RectInRect = res;
  return;
end;

function Integer FieldsOverlap(record DocVc Docr,row DocVc testfDocrw)
begin
  row DocVc Docrw;
  Integer i,rwcnt;
  Integer res;
  Boolean check;

  rwcnt = MatRowCnt(Docr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docr,i,Docrw);
    if (Docrw.fieldSetNr!=testfDocrw.fieldSetNr) then begin
      check = false;
      if (HasLocalization("PRT") and (Docrw.unitType==1 or Docrw.unitType==5)) then begin
        switch (testfDocrw.fieldSetNr) begin
          case F_TRAININGDOCUMENT:
            check = true;
          case F_EGENADRESS2:
            check = true;
          case F_DOCTYPE:
            check = true;
          case F_OFFICIALSERNO:
            check = true;
          case F_FAKTURADATUM:
            check = true;
          case F_ADRESS:
            check = true;
          case F_VILLKOR:
            check = true;
          case F_SAFTHASHCONTROL:
            check = true;
          case F_KUNDMOMSNR:
            check = true;
        end;
      end;
      if ((Docrw.fieldSetNr!=0) and (testfDocrw.fieldSetNr!=0)) or (check) then begin
        if (RectInRect(testfDocrw.xpos,testfDocrw.ypos,Docrw.xpos,Docrw.ypos,Docrw.unitWidth,Docrw.unitHeight,testfDocrw.unitWidth,testfDocrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
/*      
        if (M4PtInRect(testfDocrw.xpos,testfDocrw.ypos,Docrw.xpos,Docrw.ypos,Docrw.unitWidth,Docrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
        if (M4PtInRect(testfDocrw.unitWidth,testfDocrw.unitHeight,Docrw.xpos,Docrw.ypos,Docrw.unitWidth,Docrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
        if (M4PtInRect(testfDocrw.xpos,testfDocrw.unitHeight,Docrw.xpos,Docrw.ypos,Docrw.unitWidth,Docrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
        if (M4PtInRect(testfDocrw.unitWidth,testfDocrw.ypos,Docrw.xpos,Docrw.ypos,Docrw.unitWidth,Docrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;

        
        if (M4PtInRect(Docrw.xpos,Docrw.ypos,testfDocrw.xpos,testfDocrw.ypos,testfDocrw.unitWidth,testfDocrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
        if (M4PtInRect(Docrw.unitWidth,Docrw.unitHeight,testfDocrw.xpos,testfDocrw.ypos,testfDocrw.unitWidth,testfDocrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
        if (M4PtInRect(Docrw.xpos,Docrw.unitHeight,testfDocrw.xpos,testfDocrw.ypos,testfDocrw.unitWidth,testfDocrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
        if (M4PtInRect(Docrw.unitWidth,Docrw.ypos,testfDocrw.xpos,testfDocrw.ypos,testfDocrw.unitWidth,testfDocrw.unitHeight)) then begin
          res = 23402;
          goto LFieldsOverlap;
        end;
*/        
      end;
    end;
  end;
LFieldsOverlap:;  
  FieldsOverlap = res;
  return;
end;

global
function LongInt DocVcRecordCheck(var record DocVc Docr,record DocVc Doc2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  Integer i,rwcnt;
  row DocVc Docrw;
  record ManFormFieldBlock MFFb;
  row ManFormFieldBlock MFFbrw;
  Integer ffi,ffrwcnt;
  Integer errcode;
  Boolean testf;
  record StyleVc Styler;
  
  res = 0;
  if blank(Docr.Code) then begin
     res = -1;
     RecordCheckError(1959,"",-1,"Code");      
  end;  
  rwcnt = MatRowCnt(Docr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docr,i,Docrw);
    switch (Docrw.unitType) begin
      case 4:
       if (IsSyncing==false) then begin
       if (Docrw.formatNr>0) then begin
         if (Docrw.wordWrap!=0) then begin
           MessageBox(20499," " & StringFromSet(102,Docrw.fieldSetNr));
//           RecordCheckError(20499," " & StringFromSet(102,Docrw.fieldSetNr),i,"formatNr");      
//           res = -1;
//           goto LDocVcRecordCheck;
         end;
       end;
       end;
    end;
  end;
  BlockLoad(MFFb);
  ffrwcnt = MatRowCnt(MFFb);
  for (ffi=0;ffi<ffrwcnt;ffi=ffi+1) begin
    MatRowGet(MFFb,ffi,MFFbrw);
    if (MFFbrw.DocType==Docr.DocType) or (MFFbrw.DocType==0) then begin
      testf = true;
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Docr,i,Docrw);
        if (MFFbrw.fieldSetNr==Docrw.fieldSetNr) and ((MFFbrw.DocType==Docr.DocType) or (MFFbrw.DocType==0)) then begin
          testf = false;
          errcode = FieldsOverlap(Docr,Docrw);
          if (errcode!=0) then begin
            RecordCheckError(errcode," " & StringFromSet(102,MFFbrw.fieldSetNr),-1,"DocType");      
            res = -1;
            goto LDocVcRecordCheck;
          end;
        end;
      end;    
      if (testf) then begin
        RecordCheckError(23400," " & StringFromSet(102,MFFbrw.fieldSetNr),-1,"DocType");      
        res = -1;
        goto LDocVcRecordCheck;
      end;
    end;
    if (HasLocalization("PRT")) then begin
      switch (Docrw.fieldSetNr) begin
        case F_DOCTYPE:
          Styler.Code = Docrw.unitStyle;
          if (ReadFirstMain(Styler,1,true)) then begin
            if (Styler.MacSize<12) or (Styler.WinSize<12) then begin
              RecordCheckError(23303," " & StringFromSet(102,MFFbrw.fieldSetNr),-1,"DocType");      
              res = -1;
              goto LDocVcRecordCheck;
            end;
          end else begin
            RecordCheckError(1290," " & StringFromSet(102,MFFbrw.fieldSetNr),-1,"DocType");      
            res = -1;
            goto LDocVcRecordCheck;
          end;
        case F_VALIDINVOICE:        
          Styler.Code = Docrw.unitStyle;
          if (ReadFirstMain(Styler,1,true)) then begin
            if (Styler.MacSize<12) or (Styler.WinSize<12) then begin
              RecordCheckError(23303," " & StringFromSet(102,MFFbrw.fieldSetNr),-1,"DocType");      
              res = -1;
              goto LDocVcRecordCheck;
            end;
          end else begin
            RecordCheckError(1290," " & StringFromSet(102,MFFbrw.fieldSetNr),-1,"DocType");      
            res = -1;
            goto LDocVcRecordCheck;
          end;
      end;
    end;
  end;
  
/*  
not in this place
  rwcnt = MatRowCnt(Docr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docr,i,Docrw);
    if (Docrw.xpos<=27) then begin
      RecordCheckError(20557,"",i,"xpos");      
      res = -1;
      goto LDocVcRecordCheck;
    end;
  end;
*/  
LDocVcRecordCheck:;  
  DocVcRecordCheck = res;
  return;
end;
