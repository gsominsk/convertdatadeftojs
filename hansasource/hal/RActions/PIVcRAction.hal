external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external procedure GetSalesGroup(string,var string);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure B1ToB2Val(val,val,val,var val);
 
procedure PIVcConvertB1ToB2Date(record PIVc PIp,string curp,Date datp)
BEGIN
  val fr,to1,to2,br1,br2,t;
  string 20 curncy;

  curncy = curp;
  GetFullCurncyRate(curncy,datp,fr,to1,to2,br1,br2);
  B1ToB2Val(PIp.PurPrice,br1,br2,t);
  PIp.PurPrice = t;
  RETURN;
END;
 
global
function LongInt PIVcRecordImport(var record PIVc PIr,record PIVc PI2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Boolean gBase1ToBase2,testf;
  record ConvMasterBlock cvm;
  record BaseCurBlock bcur;
      
  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    testf = true;
    BlockLoad(bcur);
    if (blank(PIr.CurncyCode)) then begin
      PIVcConvertB1ToB2Date(PIr,"",CurrentDate);
    end;
  end;
  PIVcRecordImport = res;
  RETURN;
END;

global
function LongInt PIVcRecordDefaults(var record PIVc PIr,record PIVc PI2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 255 tstr;

  PIr.PlannedDelDays = blankval;
  PIr.SalesMan = CurrentUser;
  GetSalesGroup(PIr.SalesMan,tstr);
  PIr.SalesGroup = tstr;
  PIr.NormPOQty = 1;
  PIr.MinPOQty = 1;
  PIVcRecordDefaults = res;
  RETURN;
END;

global
function LongInt PIVcRecordCheck(record PIVc PIr,record PIVc PI2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record PIVc locPIr;
  record INVc INr;
  Integer insertmode,updatemode;
  
  res = 0;
  insertmode = 1;
  updatemode = 2;
  if (PIr.DefaultChoice!=0) then begin
    if (blank(PIr.Location)) then begin
      locPIr.DefaultChoice = 1;
      locPIr.ItemCode = PIr.ItemCode;
      if (ReadFirstKey("DefaultChoice",locPIr,2,true)) then begin
        if ((locPIr.ItemCode==PI2r.ItemCode) and (locPIr.VECode!=PI2r.VECode)) then begin
          RecordCheckError(1933," " & PIr.ItemCode,-1,"ItemCode");      
          res = -1; 
          goto LPIVcRecordCheck;
        end;
      end;
    end else begin
      locPIr.DefaultChoice = 1;
      locPIr.ItemCode = PIr.ItemCode;
      locPIr.Location = PIr.Location;
      if (ReadFirstKey("DefaultChoice",locPIr,3,true)) then begin
        if ((locPIr.ItemCode==PI2r.ItemCode) and (locPIr.Location==PI2r.Location) and (locPIr.VECode!=PI2r.VECode)) then begin
          RecordCheckError(1933," " & PIr.ItemCode,-1,"ItemCode");      
          res = -1; 
          goto LPIVcRecordCheck;
        end;
      end;
    end;
  end;
  INr.Code = PIr.ItemCode;
  if (ReadFIrstMain(INr,1,true)==false) then begin
    if (ReadFirstItem(PIr.ItemCode,INr,true,true)==false) then begin
      RecordCheckError(1290," " & PIr.ItemCode,-1,"ItemCode");      
      res = -1; 
      goto LPIVcRecordCheck;
    end;
  end;
LPIVcRecordCheck:;
  PIVcRecordCheck = res;
  RETURN;
END;
