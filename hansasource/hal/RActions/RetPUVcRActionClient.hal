remote updating procedure RetPUVcRecordUpdateClientRemote(record RetPUVc,record RetPUVc,string);
external procedure ShowUnOkWarn(string,Integer);

global
function LongInt RetPUVcRecordDefaultsClient(LongInt wn,var record RetPUVc RetPUr,record RetPUVc RetPU2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record LocalMachineBlock LMb;

  BlockLoad(LMb);  
  if (blank(RetPUr.Location)) then begin
    RetPUr.Location = LMb.DefLocation;
  end;
  RetPUVcRecordDefaultsClient = res;
  return;
end;

global
function LongInt RetPUVcRecordSaveClient(LongInt wn,var record RetPUVc RetPUr,record RetPUVc RetPU2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  ShowUnOkWarn("RetPUVc",RetPUr.OKFlag);
  
  RetPUVcRecordSaveClient = res;
  return;
end;

global
updating function LongInt RetPUVcRecordUpdateClient(LongInt wn,var record RetPUVc RetPUr,record RetPUVc RetPU2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record POSettingBlock POSb;
  record VIVc VIr;
  Integer nwn;
  
  BlockLoad(POSb);
  if (POSb.CreateVIonRetPUOK!=0) then begin
    if ((RetPU2r.OKFlag==0) and (RetPUr.OKFlag!=0)) then begin
      if (RetPUr.PONr>0) then begin
        VIr.POSerNr = RetPUr.PONr;
        if (ReadLastKey("POSerNr",VIr,1,false)) then begin
          nwn = OpenWindow("VIDClass",0,0,"","",VIr);
        end;
      end else begin
        VIr.SerNr = 3000000000;
        if (ReadLastKey("SerNr",VIr,1,false)) then begin
          nwn = OpenWindow("VIDClass",0,0,"","",VIr);
        end;
      end;
    end;  
  end;
  if ((RetPUr.OKFlag!=0) and (RetPU2r.OKFlag==0)) then begin
    RetPUVcRecordUpdateClientRemote(RetPUr,RetPU2r,RetPUr.TaxAdminServSeal);
  end;
  if ((RetPUr.OKFlag!=0) and (RetPU2r.OKFlag!=0)) then begin
    RetPUVcRecordUpdateClientRemote(RetPUr,RetPU2r,RetPUr.TaxAdminServSeal);
  end;
  ShowUnOkWarn("RetPUVc",RetPUr.OKFlag);
  RetPUVcRecordUpdateClient = res;
  return;
end;
