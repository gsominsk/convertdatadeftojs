external function Boolean FindUserInMailbox(string,var string,var LongInt);

updating procedure CopyTemplateFilesToEMailQuer(record EMailQueVc EMailQuer)
begin
  Integer notenr;
  record RLinkVc RLinkr;
  record Attach2Vc Attachr;
  record HtmlTemplateVc HtmlTemplater;
  
  if (EMailQuer.HtmlFlag==0) then begin goto LCopyTemplateFilesToEMailQuer; end;
  if (blank(EMailQuer.HtmlTemplate)) then begin goto LCopyTemplateFilesToEMailQuer; end;
  notenr = 1;
  
  HtmlTemplater.Code = EMailQuer.HtmlTemplate;
  if (ReadFirstMain(HtmlTemplater,1,true)) then begin
    while (ReadRecordLink(HtmlTemplater,notenr,Attachr,RLinkr)) begin
      if (Attachr.FileName!="body.html") then begin
        CreateRecordLink(EMailQuer,CurrentCompany,Attachr,CurrentCompany);
      end;
      notenr = notenr + 1;
    end;
  end;
  
LCopyTemplateFilesToEMailQuer:;
  RETURN;
end;

updating procedure CopySignatureFilesToEMailQuer(record ConfSignVc ConfSignr,record EMailQueVc EMailQuer)
begin
  Integer notenr;
  record RLinkVc RLinkr;
  record Attach2Vc Attachr;
  
  if (EMailQuer.HtmlFlag==0) then begin goto LCopySignatureFilesToEMailQuer; end;

  notenr = 1;
  while (ReadRecordLink(ConfSignr,notenr,Attachr,RLinkr)) begin
    if (Attachr.FileName!="body.html") then begin
      CreateRecordLink(EMailQuer,CurrentCompany,Attachr,CurrentCompany);
    end;
    notenr = notenr + 1;
  end;
  
LCopySignatureFilesToEMailQuer:;
  RETURN;
end;


function Boolean IsHtmlMail(var record EMailQueVc EMailQuer,var record Attach2Vc Attach2r)
begin
  Boolean res;
  Integer attachnr;
  record MailVc Mailr;
  record RLinkVc RLr;
  string 255 tstr;

  res = false;
  
  if (EMailQuer.FileName!="MailVc") then begin goto LIsHtmlMail; end;

  if (EMailQuer.HtmlFlag==0) then begin goto LIsHtmlMail; end;
  
  Mailr.SerNr = EMailQuer.OrgSerNr;
  if (!ReadFirstMain(Mailr,1,true)) then begin goto LIsHtmlMail; end;
    
  attachnr = 1;
  while (ReadRecordLink(Mailr,attachnr,Attach2r,RLr)) begin
    if (ReadFirstMain(Attach2r,1,true)) then begin
      if (Attach2r.FileName=="body.html") then begin
        res = true;
        goto LIsHtmlMail;
      end;
    end;
    attachnr = attachnr + 1;
  end;
  
LIsHtmlMail:;
  IsHtmlMail = res;
  RETURN;
end;

updating procedure AddSignature(var record EMailQueVc EMailQuep)
begin
  record ConfSignVc csp;
  record Attach2Vc Attach2r;
  record MailVc Mailr;
  row EMailQueVc emarw;
  string 255 tstr;
  Integer i,rwcnt,cscnt;
  LongInt l;
  Integer line;
  Boolean htmlmailf;

  rwcnt = MatRowCnt(EMailQuep);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(EMailQuep,i,emarw);
    if (emarw.RowTyp==1) then begin
      if (FindUserInMailbox(emarw.AddrCode,tstr,l)) then begin
        csp.SerNr = l;
        if (ReadFirstMain(csp,1,true)) then begin
          htmlmailf = IsHtmlMail(EMailQuep,Attach2r);
          if (htmlmailf==false and csp.HtmlFlag!=0) then begin
            AddCRToText(EMailQuep);
            AddHtmlRecordToText(csp,EMailQuep);
          end else begin
            if (htmlmailf==true) then begin
              // Different from plaintext mails - we add to the original mail body instead of the emailque body
              Mailr.SerNr = EMailQuep.OrgSerNr; 
              if (ReadFirstMain(Mailr,1,true)) then begin 
                if (csp.HtmlFlag==0) then begin
                  AddToHtmlRecord(csp,false,Mailr,true,true);
                end else begin
                  AddToHtmlRecord(csp,true,Mailr,true,true);
                end;
              end;
            end else begin
              cscnt = SizeTextCnt(csp);
              AddCRToText(EMailQuep);
              while (i<cscnt) begin
                tstr = StringFromText(csp,i,255);
                i = i + len(tstr);
                if (len(tstr)==0) then begin
                  i = i + 1;
                end;
                AddToText(tstr,EMailQuep);
              end;
            end;
          end;
/*
          AddCRToText(EMailQuep);
          line = LineTextCnt(EMailQuep);//this is the only place addsignature might fail
          cscnt = LineTextCnt(csp);
          for (i=0;i<cscnt;i=i+1) begin
            tstr = LineTextGet(csp,i);
//            AddToText(tstr,EMailQuep);
            LineTextPut(EMailQuep,line,tstr);
            line = line + 1;
          end;  
*/
        end;
        goto LAddSignature;
      end;          
    end;
  end;
LAddSignature:;
  return;
end;

global
updating function LongInt EMailQueVcRecordSave(var record EMailQueVc EMailQuer,record EMailQueVc EMailQue2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Date blankd;

  EMailQuer.SerNr = NextSerNr("EMailQueVc",CurrentDate,-1,false,"");
//The problem is that the entire text gets replaced with the Signature.
// I just connected it back, lets hope it works this time...
  AddSignature(EMailQuer);
  CopyTemplateFilesToEMailQuer(EMailQuer);
  EMailQueVcRecordSave = res; 
  RETURN;
END;

global
updating function LongInt FaxQueVcRecordRemove(var record FaxQueVc FaxQuer,record FaxQueVc FaxQue2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  SegmentDelete(FaxQuer.SegNr);
  FaxQueVcRecordRemove = res;  
  RETURN;
end;

