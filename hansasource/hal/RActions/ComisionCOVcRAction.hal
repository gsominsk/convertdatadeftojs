external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);

global
function LongInt ComisionCOVcRecordDefaults(var record ComisionCOVc CCOr,record ComisionCOVc CCO2r,LongInt long3,LongInt long4)
begin
  record DepVc Depr;
  record UserVc USr;
  LongInt res;

  CCOr.SerNr = -1;
  if (SingleUserMode) then begin
    CCOr.SerNr = NextSerNr("ComisionCOVc",CCOr.CreationDate,-1,false,"");
  end;
  ComisionCOVcRecordDefaults = res;  
  RETURN;
END;

global
function LongInt ComisionCOVcRecordDuplicate(var record ComisionCOVc CCOr,record ComisionCOVc CCO2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  row ComisionCOVc CCOrw;
  Integer rwcnt,i;
  
  CCOr.SerNr= -1;  
  CCOr.CreationDate = CurrentDate;
  if (SingleUserMode) then begin
    CCOr.SerNr = NextSerNr("ComisionCOVc",CCOr.CreationDate,-1,false,"");
  end;
  ComisionCOVcRecordDuplicate = res;  
  RETURN;
END;
 
global
function LongInt ComisionCOVcRecordRemoveTest(var record ComisionCOVc CCOr,record ComisionCOVc CCO2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;
  record ComisionCOVc locCCOr;

  ComisionCOVcRecordRemoveTest = res; 
  RETURN;
END;

global
function LongInt ComisionCOVcRecordCheck(record ComisionCOVc CCOr,record ComisionCOVc CCO2r,LongInt stat,LongInt check)
BEGIN
  LongInt res;
  Integer insertmode,updatemode;
  record ComisionCOVc lCCOr;
  Boolean gentrans;
  Integer i,rwcnt;
  record INVc INr;
  record ITVc ITr;
  record CUVc CUr;
  row ComisionCOVc CCOrw;
  
  res = 0;
  insertmode = 1;
  updatemode = 2;
  if (CCOr.SerNr<=0) then begin
    CCOr.SerNr = NextSerNr("ComisionCOVc",CCOr.CreationDate,-1,false,"");
  end;
  if ((stat==insertmode) or (CCOr.SerNr!=CCO2r.SerNr)) then begin
    lCCOr.SerNr = CCOr.SerNr;
    if (ReadFirstMain(lCCOr,1,true)) then begin
      RecordCheckError(1547,"",-1,"SerNr");      
      res = -1;
      goto LComisionCOVcRecordCheck;
    end;
/*    
    if (SerNrTestComisionCOVc(CCOr.SerNr,CCOr.CreationDate,gentrans)==false) then begin
      RecordCheckError(1557,"",-1,"SerNr");      
      res = -1;
      goto LComisionCOVcRecordCheck;
    end;
*/    
  end;  
  if (blank(CCOr.CustCode)) then begin
    RecordCheckError(1058,"",-1,"CustCode");      
    res = -1; 
    goto LComisionCOVcRecordCheck;
  end;
  CUr.Code = CCOr.CustCode;
  if (ReadFirstMain(CUr,1,true)==false) then begin 
    RecordCheckError(1058,"",-1,"CustCode");      
    res = -1; 
    goto LComisionCOVcRecordCheck;
  end;
  rwcnt = MatRowCnt(CCOr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CCOr,i,CCOrw);
    switch (CCOrw.CodeType) begin
      case 0:
        if (nonblank(CCOrw.ArtCode)) then begin
          ITr.Code = CCOrw.ArtCode;
          if (ReadFirstMain(ITr,1,true)==false) then begin
            RecordCheckError(1120,ITr.Code,i,"ArtCode");      
            res = -1; 
            goto LComisionCOVcRecordCheck;
          end;
        end;
      case 1:
        if (nonblank(CCOrw.ArtCode)) then begin
          if (ReadFirstItem(CCOrw.ArtCode,INr,true,false)==false) then begin
            RecordCheckError(1120,CCOrw.ArtCode,i,"ArtCode");      
            res = -1; 
            goto LComisionCOVcRecordCheck;
          end;
          if (INr.Terminated!=0) then begin
            RecordCheckError(1266,CCOrw.ArtCode,i,"ArtCode");      
            res = -1; 
            goto LComisionCOVcRecordCheck;
          end;
        end;
    end;
  end;
LComisionCOVcRecordCheck:;  
  ComisionCOVcRecordCheck = res; 
  RETURN;
END;
