
function Boolean HRMCOExists(LongInt conr,string employee)
begin
  Boolean res,found,testf;
  record HRMCOVc HRMCOr;

  found = true;
  HRMCOr.Employee = employee;
  while (LoopKey("Employee",HRMCOr,1,found)) begin
    if (HRMCOr.Employee!=employee) then begin found = false; end;
    if (found) then begin
      testf = true;
      if (HRMCOr.OKFlag==0) then begin testf = false; end;
      if (HRMCOr.SerNr==conr) then begin testf = false; end;
      if (testf) then begin
        res = true;
        found = false;
      end;
    end;
  end;
  HRMCOExists = res;
  return;
end;

global
updating function LongInt HRMCOVcRecordCheck(record HRMCOVc HRMCOr,record HRMCOVc HRMCO2r,LongInt stat,LongInt check)
begin
  LongInt oldnr;
  LongInt res;
  record CUVc CUr;

  res = 0;
  oldnr = HRMCOr.SerNr;  
  if (HRMCOr.SerNr<=0) then begin
    HRMCOr.SerNr = NextSerNr("HRMCOVc",HRMCOr.TransDate,-1,false,"");
  end;
  if (UserCanAction("HRMCOOK",true)==false) then begin
    if (HRMCOr.OKFlag!=0) then begin
      RecordCheckError(1274,StringFromStringSet(3,"HRMCOOK"),-1,"SerNr");      
      res = -1; 
      goto LHRMCOVcRecordCheck;
    end;
  end;
  switch (stat) begin
    case Rs_update:
      if (HRMCO2r.TerminatedFlag==0) and (HRMCOr.TerminatedFlag!=0) then begin
        if (HRMCOr.Reason<=0) then begin
          RecordCheckError(1058,"",-1,"Reason");      
          res = -1;
          goto LHRMCOVcRecordCheck;
        end;
        if (blankdate(HRMCOr.EndDate)) then begin
          RecordCheckError(1058,"",-1,"EndDate");      
          res = -1;
          goto LHRMCOVcRecordCheck;
        end;
        if (blank(HRMCOr.ReasonDetails)) then begin
          RecordCheckError(1058,"",-1,"ReasonDetails");      
          res = -1;
          goto LHRMCOVcRecordCheck;
        end;
      end;
  end;
  
  CUr.Code = HRMCOr.Employee;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    RecordCheckError(1120,HRMCOr.Employee,-1,"Employee");      
    res = -1;
    goto LHRMCOVcRecordCheck;
  end;
  if (CUr.EmployeeType==0) then begin
    RecordCheckError(1120,HRMCOr.Employee,-1,"Employee");      
    res = -1; 
    goto LHRMCOVcRecordCheck;
  end;
  if (CUr.blockedFlag!=0) then begin
    RecordCheckError(1265,HRMCOr.Employee,-1,"Employee");      
    res = -1;
    goto LHRMCOVcRecordCheck;
  end;
  if (HRMCOExists(HRMCOr.SerNr,HRMCOr.Employee)) then begin
    RecordCheckError(26124,"",-1,"Employee");      
    res = -1;
    goto LHRMCOVcRecordCheck;
  end;
LHRMCOVcRecordCheck:;  
  if (res!=0) then begin HRMCOr.SerNr = oldnr; end;
  HRMCOVcRecordCheck = res;
  return;
end;

global
function LongInt HRMCOVcRecordDefaults(var record HRMCOVc HRMCOr,record HRMCOVc HRMCO2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  HRMCOr.SerNr = -1;
  HRMCOr.TransDate = CurrentDate;
  HRMCOVcRecordDefaults = res; 
  return;
end;

global
function LongInt HRMCOVcRecordDuplicate(var record HRMCOVc HRMCOr,record HRMCOVc HRMCO2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  HRMCOr.SerNr = -1;
  HRMCOr.TerminatedFlag = 0;
  HRMCOr.OKFlag = 0;
  HRMCOr.TransDate = CurrentDate;
  HRMCOVcRecordDuplicate = res; 
  return;
end;

global
function LongInt HRMCOVcRecordInIndex(record HRMCOVc HRMCOr,string indexname)
begin
  LongInt res;
  
  res = 1;
  if (HRMCOr.TerminatedFlag!=0) then begin 
    if (indexname=="ActClass") then begin res = 0; end;
  end;
  HRMCOVcRecordInIndex = res;
  return;
end;

global
function LongInt HRMCOVcRecordRemoveTest(var record HRMCOVc HRMCOr,record HRMCOVc HRMCO2r,LongInt long3,LongInt long4)
begin
  LongInt res;

  res = 1;
  if (HRMCOr.OKFlag!=0) then begin
    res = 0;
  end;
  HRMCOVcRecordRemoveTest = res; 
  return;
end;
