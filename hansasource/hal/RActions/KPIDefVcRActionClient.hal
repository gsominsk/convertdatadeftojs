external function Boolean HasKPIs();
external function string 255 KPIRowTrend(var record KPIDefVc);
remote procedure MasterWClassOnOpenRemote(string,var Array record KPIDefVc,var Integer);

global
function LongInt KPIDefVcRecordSaveClient(LongInt wn,var record KPIDefVc KPIDefp,record KPIDefVc KPIDef2p,LongInt stat,LongInt long4)
begin
  LongInt res;

  UpdateBrowses("KPIDefVc");
  KPIDefVcRecordSaveClient = res;
  return;
end;

global
function LongInt KPIDefVcRecordUpdateClient(LongInt wn,var record KPIDefVc KPIDefp,record KPIDefVc KPIDef2p,LongInt stat,LongInt long4)
begin
  LongInt res;

  UpdateBrowses("KPIDefVc");
// this UpdateBrowses is called from StoreOneCalculatedKPI (when doing RecordUpdate(oldKPIr,KPIr,true);)
// which results in flickering of KPI browse in Mater control cause of KPIDefVcRecordUpdateClient
  KPIDefVcRecordUpdateClient = res;
  return;
end;

global
procedure MasterWClassMetroKPIsUpdate(Integer wn)
begin
  record KPIDefVc KPIr; 
  Array record KPIDefVc aKPIr;
  Array string 255 amodule;
  Integer i,acnt;

  if (GuiType==kGuiMetro and IsStandardProduct and wn>0) then begin
    ClearStringList(wn);
    MasterWClassOnOpenRemote(CurrentModule,aKPIr,acnt);
    for (i=0;i<acnt;i=i+1) begin
      KPIr = aKPIr[i];
      AddListRow(wn,"MetroKPIs",1,KPIr.Type,0);
      AddListData(wn,"MetroKPIs","KPIName",KPIr.OwnTitle);
      AddListData(wn,"MetroKPIs","KPIRowPrevText",KPIr.Previous);
      AddListData(wn,"MetroKPIs","KPIRowCurText",KPIr.Current);
      AddListData(wn,"MetroKPIs","KPIRowTrend",KPIRowTrend(KPIr));
    end;
  end;
  return;
end;
      
global
procedure UpdateMasterWClassOnKPIs(string arg)
begin
  if (HasKPIs) then begin
    UpdateBrowses("KPIDefVc");
  end else begin
    if (IsStandardProduct and GuiType==kGuiMetro) then begin
      UpdateBrowses("KPIDefVc");
//      MasterWClassMetroKPIsUpdate(FindWindow("MasterWClass"));
    end;
  end;

  return;
end;
