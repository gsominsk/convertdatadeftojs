external procedure ExtractObj(string,var Integer,var string);

/*
procedure ActivityExists(record AcceptanceRulesVc Acptr,vector Boolean vacctype)
begin
  record ActVc Actr;
  Boolean res,found;
  
  found = true;
  Actr.OKFlag = 1;
  Actr.TodoFlag = kTodoFlagApproval;
  while (LoopKey("OKFlagUserMain",Actr,2,found)) begin
    if (Actr.OKFlag!=0) then begin found = false;
    if (Actr.TodoFlag!=kTodoFlagApproval) then begin found = false;
    if (found) then begin
      if (Actr.ActResult==Acptr.AcceptedActType) then begin vacctype["accepted"] = true; end;
      if (Actr.ActResult==Acptr.RejectedActType) then begin vacctype["rejected"] = true; end;
      if (Actr.ActResult==Acptr.NotNeededActType) then begin vacctype["notneeded"] = true; end;
      if (Actr.ActResult==Acptr.CancelledActType) then begin vacctype["cancelled"] = true; end;
    end;
  end;
  ActivityExists = res;
  return;
end;
*/

global
function LongInt AcceptanceRulesVcRecordCheck(var record AcceptanceRulesVc Acptr,record AcceptanceRulesVc Acpt2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record LTxtVc LTxtr;
  record ActTypeVc ActTyper;
  record UserVc Userr;
  row AcceptanceRulesVc Acptrw;
  Integer i,rwcnt,pos;
  string 255 tstr;

  res = 0;
  if (nonblank(Acptr.StdTxt)) then begin
    LTxtr.Code = Acptr.StdTxt;
    if (ReadFirstMain(LTxtr,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"StdTxt");      
      res = -1; 
      goto LAcceptanceRulesVcRecordCheck;
    end;
  end;
/*
  if (RecordValid(Acpt2r)) then begin
    if (nonblank(Acpt2r.AcceptanceActType)) then begin
      if (ActivityExists(Acpt2r.AcceptanceActType)) then begin
        RecordCheckError(1067,"",-1,"AcceptanceActType");      
        res = -1; 
        goto LAcceptanceRulesVcRecordCheck;
      end;
    end;
  end;
*/
  if (nonblank(Acptr.AcceptanceActType)) then begin
    ActTyper.Code = Acptr.AcceptanceActType;
    if (ReadFirstMain(ActTyper,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"AcceptanceActType");      
      res = -1; 
      goto LAcceptanceRulesVcRecordCheck;
    end;
  end;
  if (nonblank(Acptr.AcceptedActType)) then begin
    ActTyper.Code = Acptr.AcceptedActType;
    if (ReadFirstMain(ActTyper,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"AcceptedActType");      
      res = -1; 
      goto LAcceptanceRulesVcRecordCheck;
    end;
  end;
  if (nonblank(Acptr.RejectedActType)) then begin
    ActTyper.Code = Acptr.RejectedActType;
    if (ReadFirstMain(ActTyper,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"RejectedActType");      
      res = -1; 
      goto LAcceptanceRulesVcRecordCheck;
    end;
  end;
  if (nonblank(Acptr.NotNeededActType)) then begin
    ActTyper.Code = Acptr.NotNeededActType;
    if (ReadFirstMain(ActTyper,1,true)==false) then begin
      RecordCheckError(1290,"",-1,"NotNeededActType");      
      res = -1; 
      goto LAcceptanceRulesVcRecordCheck;
    end;
  end;
  rwcnt = MatRowCnt(Acptr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Acptr,i,Acptrw);
    if (Acptrw.AcceptanceType!=kAcceptanceTypeNone) then begin
      if (Acptrw.ActionResult==kAcceptanceTypeResultNone) then begin
        RecordCheckError(22405,"",i,"ActionResult");      
        res = -1; 
        goto LAcceptanceRulesVcRecordCheck;
      end;
    end;
    if (nonblank(Acptrw.AcceptanceBy)) then begin
      pos = 0;
      ExtractObj(Acptrw.AcceptanceBy,pos,tstr);
      while (nonblank(tstr)) begin
        Userr.Code = tstr;
        if (ReadFirstMain(Userr,1,true)==false) then begin
          RecordCheckError(1290," " & tstr,i,"AcceptanceBy");      
          res = -1; 
          goto LAcceptanceRulesVcRecordCheck;
        end;
        ExtractObj(Acptrw.AcceptanceBy,pos,tstr);
      end;  
    end;
    if (nonblank(Acptrw.FYIPersons)) then begin
      pos = 0;
      ExtractObj(Acptrw.FYIPersons,pos,tstr);
      while (nonblank(tstr)) begin
        Userr.Code = tstr;
        if (ReadFirstMain(Userr,1,true)==false) then begin
          RecordCheckError(1290," " & tstr,i,"FYIPersons");      
          res = -1; 
          goto LAcceptanceRulesVcRecordCheck;
        end;
        ExtractObj(Acptrw.FYIPersons,pos,tstr);
      end;  
    end;
  end;
LAcceptanceRulesVcRecordCheck:; 
  AcceptanceRulesVcRecordCheck = res;
  return;
end;
