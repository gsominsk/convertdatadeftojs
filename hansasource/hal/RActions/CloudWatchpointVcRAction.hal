external function LongInt TimeToSeconds2(Time);

global
function LongInt CloudWatchpointVcRecordCheck(var record CloudWatchpointVc CWr,record CloudWatchpointVc CW2r,LongInt stat,LongInt long4)
begin
  LongInt res,oldnr;
  string 20 phone;
  integer i,rwcnt;
  record BARulesBlock BAbl;
  row CloudWatchpointVc CWrw;
  record CUVc CUr;

  res = 0;
  oldnr = CWr.SerNr; 
  
  if (CWr.SerNr<=0) then begin
    CWr.SerNr = NextSerNr("CloudWatchpointVc",CurrentDate,-1,false,"");
  end;  

  if (CWr.Closed!=0) then begin
    goto LCloudWatchpointVcRecordCheck;;
  end;

  if (blank(CWr.StdTxt)) then begin
    RecordCheckError(1058,"",-1,"StdTxt");
    res = - 1;
    goto LCloudWatchpointVcRecordCheck;
  end;
  if (blank(CWr.RepeatInterval)) then begin
    RecordCheckError(1058,"",-1,"RepeatInterval");
    res = - 1;
    goto LCloudWatchpointVcRecordCheck;
  end;
  if (blank(CWr.Controller) and blankUUID(CWr.RemoteCloudServer) and CWr.AllControllers==0 and CWr.AllRemoteCloudServers==0) then begin
    RecordCheckError(38332,"",-1,"ServerName");//TODO::Change message number
    res = - 1;
    goto LCloudWatchpointVcRecordCheck;
  end;

  BlockLoad(BAbl);
  if (BAbl.SMS!=1 or blank(BAbl.SystemMobile)) then begin
    RecordCheckError(38331,"",-1,"SerNr");//TODO::Change message number
    res = - 1;
    goto LCloudWatchpointVcRecordCheck;
  end;

  rwcnt = MatRowCnt(CWr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(CWr,i,CWrw);
    phone = CWrw.Mobile;
    if (blank(phone)) then begin
      CUr.Code = CWrw.ContactCode;
      if (ReadFirstMain(CUr,1,true)) then begin
        phone = CUr.Mobile;
      end;
    end;
    if (blank(phone)) then begin
      RecordCheckError(1058,"",0,"Mobile");
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
    if (BAbl.SystemMobile==phone) then begin
      RecordCheckError(38333,"",i,"Mobile");
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
  end;
  if (rwcnt==0) then begin
    RecordCheckError(1058,"",0,"Mobile");
    res = - 1;
    goto LCloudWatchpointVcRecordCheck;
  end;

  if (CWr.Watchpoint==kWatchpointDiskspaceLow) then begin
    if (CWr.AllRemoteCloudServers==1 or !blankUUID(CWr.RemoteCloudServer)) then begin
      RecordCheckError(38336,"",-1,"SerNr");
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
  end;
  if (CWr.Watchpoint==kWatchpointDiskspaceLow or CWr.Watchpoint==kWatchpointNotResponding) then begin
    if (blank(CWr.WatchpointParam)) then begin
      RecordCheckError(1058,"",-1,"WatchpointParam");
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
  end;
  if (blank(CWr.SMSInterval)) then begin
    RecordCheckError(1058,"",-1,"SMSInterval");
    res = - 1;
    goto LCloudWatchpointVcRecordCheck;
  end;

/*
  if (CWr.Watchpoint==kWatchpointNotRunning or
      CWr.Watchpoint==kWatchpointNotResponding or
      CWr.Watchpoint==kWatchpointIntentionallyNotRunning) then begin
    if (CWr.AllRemoteCloudServers!=0 and !blankUUID(CWr.RemoteCloudServer) or CWr.AllControllers!=0) then begin
      RecordCheckError(38334,"",-1,"ServerName");//TODO::Change message
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
    if (CWr.AllRemoteCloudServers==0 and blankUUID(CWr.RemoteCloudServer)) then begin
      RecordCheckError(1058,"",-1,"ServerName");
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
  end;
*/

  if (CWr.Watchpoint==kWatchpointNotResponding) then begin
    if (TimeToSeconds2(CWr.RepeatInterval)>TimeToSeconds2(StringToTime(CWr.WatchpointParam))) then begin
      RecordCheckError(38335,"",-1,"RepeatInterval");
      res = - 1;
      goto LCloudWatchpointVcRecordCheck;
    end;
  end;


LCloudWatchpointVcRecordCheck:;
  if (res!=0) then begin
    CWr.SerNr = oldnr;
  end;  
  CloudWatchpointVcRecordCheck = res;  
  return;
end;  

global
function LongInt CloudWatchpointVcRecordDuplicate(var record CloudWatchpointVc CWr,record CloudWatchpointVc CW2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  res = 0;
  CWr.SerNr = -1;

  CloudWatchpointVcRecordDuplicate = res;
  return;
end;

global
function LongInt CloudWatchpointVcRecordInIndex(record CloudWatchpointVc CWr,string indexname)
begin
  LongInt res;
  
  res = 1;
  if (CWr.Closed!=0) then begin 
    if (indexname=="ActSerNr") then begin res = 0; end;
  end;
  CloudWatchpointVcRecordInIndex = res;
  return;
end;  

global
function LongInt SWMVcRecordCheck(var record SWMVc SWMr,record SWMVc SWM2r,LongInt stat,LongInt long4)
begin
  LongInt res,oldnr;

  res = 0;
  oldnr = SWMr.SerNr; 
  
  if (SWMr.SerNr<=0) then begin
    SWMr.SerNr = NextSerNr("SWMVc",CurrentDate,-1,false,"");
  end;  
LSWMVcRecordCheck:;
  if (res!=0) then begin
    SWMr.SerNr = oldnr;
  end;  
  SWMVcRecordCheck = res;  
  return;
end;  

global
function LongInt SWMVcRecordSave(var record SWMVc SWMr,record SWMVc SWM2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  SWMr.TransDate = CurrentDate;
  SWMr.TransTime = CurrentTime;
  SWMVcRecordSave = res;  
  return;
end;  

