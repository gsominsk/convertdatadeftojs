global
function LongInt RsrtEventScheduleVcRecordDefaults(record RsrtEventScheduleVc RsrtEventScheduler,record RsrtEventScheduleVc RsrtEventSchedule2r,LongInt stat,LongInt long4)
begin
  LongInt res;
      
  res = 0;
  if (SingleUserMode) then begin
    RsrtEventScheduler.SerNr = NextSerNr("RsrtEventScheduleVc",RsrtEventScheduler.StartDate,-1,false,"");
  end;
  RsrtEventScheduleVcRecordDefaults = res;
  return;
end;  

global
function LongInt RsrtEventScheduleVcRecordDuplicate(record RsrtEventScheduleVc RsrtEventScheduler,record RsrtEventScheduleVc RsrtEventSchedule2r,LongInt stat,LongInt long4)
begin
  LongInt res;
      
  res = 0;
  if (SingleUserMode) then begin
    RsrtEventScheduler.SerNr = NextSerNr("RsrtEventScheduleVc",RsrtEventScheduler.StartDate,-1,false,"");
  end;
  RsrtEventScheduleVcRecordDuplicate = res;
  return;
end;

global
function LongInt RsrtEventScheduleVcRecordCheck(record RsrtEventScheduleVc RsrtEventScheduler,record RsrtEventScheduleVc RsrtEventSchedule2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record ResLocVc RLr;
  record RsrtEventTypeVc RETr;
  record ResVc Resr;
      
  res = 0;
  if (RsrtEventScheduler.SerNr<=0) then begin
    RsrtEventScheduler.SerNr = NextSerNr("RsrtEventScheduleVc",RsrtEventScheduler.StartDate,-1,false,"");
  end;
  if (nonblank(RsrtEventScheduler.EventType)) then begin
    RETr.Code = RsrtEventScheduler.EventType;
    if (ReadFirstMain(RETr,1,true)==false) then begin
      RecordCheckError(1120,"",-1,"EventType");      
      res = -1; 
      goto LRsrtEventScheduleVcRecordCheck;
    end;
  end;
  if (nonblank(RsrtEventScheduler.ResLoc)) then begin
    RLr.Code = RsrtEventScheduler.ResLoc;
    if (ReadFirstMain(RLr,1,true)==false) then begin
      RecordCheckError(1120,"",-1,"ResLoc");      
      res = -1; 
      goto LRsrtEventScheduleVcRecordCheck;
    end;
  end;
  if (nonblank(RsrtEventScheduler.ResCode)) then begin
    Resr.Code = RsrtEventScheduler.ResCode;
    if (ReadFirstMain(Resr,1,true)==false) then begin
      RecordCheckError(1120,"",-1,"ResCode");      
      res = -1; 
      goto LRsrtEventScheduleVcRecordCheck;
    end;
  end;
LRsrtEventScheduleVcRecordCheck:;  
  RsrtEventScheduleVcRecordCheck = res;
  return;
end;  

global
function LongInt RsrtEventScheduleVcRecordInIndex(record RsrtEventScheduleVc RESr,string indexname)
begin
  LongInt res;
  
  res = 1;
  if (RESr.Closed!=0) then begin 
    if (indexname=="ActResLocET") then begin res = 0; end;
    if (indexname=="ActEventType") then begin res = 0; end;
    if (indexname=="ActComment") then begin res = 0; end;
    if (indexname=="ActResCode") then begin res = 0; end;
  end;
  RsrtEventScheduleVcRecordInIndex = res;
  return;
end;  
