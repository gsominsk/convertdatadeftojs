global
function LongInt PosVcRecordInIndex(record POSVc POSr,string indexname)
BEGIN
  LongInt res;
  
  res = 1;
  if ((POSr.Status!=0) or (POSr.Closed!=0)) then begin 
    if (indexname=="ActMainKey")  then begin res = 0; end;
    if (indexname=="ActComment")  then begin res = 0; end;
    if (indexname=="ActLocation")  then begin res = 0; end;
    if (indexname=="ActLocArea")  then begin res = 0; end;
    if (indexname=="ActHeight")  then begin res = 0; end;
  end;
  if ((POSr.Status!=1) or (POSr.Closed!=0)) then begin 
    if (indexname=="UsedMainKey")  then begin res = 0; end;
    if (indexname=="UsedComment")  then begin res = 0; end;
    if (indexname=="UsedLocation")  then begin res = 0; end;
    if (indexname=="UsedLocArea")  then begin res = 0; end;
    if (indexname=="UsedHeight")  then begin res = 0; end;
  end;

  PosVcRecordInIndex = res;
  RETURN;
END;

global
function LongInt PosVcRecordDuplicate(var record PosVc Posr,record PosVc Pos2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  Posr.Code = "";
  Posr.Status = 0;
  Posr.Closed = 0;
  PosVcRecordDuplicate = res;
  RETURN;
END;

global
function LongInt PosVcRecordCheck(var record PosVc Posr,record PosVc Pos2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 255 tstr;
  record PosVc lPosr;
  Integer insertmode;
  record LocAreaVc LocArear;

  res = 0;     
  insertmode = 1;

  if (blank(Posr.Code)) then begin
    RecordCheckError(1058,"",-1,"Code");      
    res = -1; 
    goto LPosVcRecordCheck;
  end;
  if (blank(Posr.Location)) then begin
    RecordCheckError(1058,"",-1,"Location");      
    res = -1; 
    goto LPosVcRecordCheck;
  end;
  LocArear.Code = Posr.LocArea;
  if (ReadFirstMain(LocArear,1,true)) then begin
    if (LocArear.DemandPickOrder!=0) then begin
      if (Posr.PickOrder<0) then begin
        RecordCheckError(1058,"",-1,"PickOrder");      
        res = -1; 
        goto LPosVcRecordCheck;
      end;
    end;
  end;
  if (stat==insertmode) then begin
    lPosr.Code = Posr.Code;
    lPosr.Location = Posr.Location;
    if (ReadFirstKey("Location",lPosr,2,true)) then begin
      RecordCheckError(1547,"",-1,"Location");      
      res = -1; 
      goto LPosVcRecordCheck;
    end;
    if (nonblank(Posr.LocArea)) then begin
      lPosr.Code = Posr.Code;
      lPosr.LocArea = Posr.LocArea;
      if (ReadFirstKey("LocArea",lPosr,3,true)) then begin
        RecordCheckError(1547,"",-1,"LocArea");      
        res = -1; 
        goto LPosVcRecordCheck;
      end;
    end;
  end;
LPosVcRecordCheck:;
  PosVcRecordCheck = res;
  RETURN;
END;

global
updating function LongInt PosVcRecordUpdateAfter(var record PosVc Posr,record PosVc Pos2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record PISVc PISr;
  record PISVc oldPISr;
  Boolean TrHs;

  if (Posr.PickOrder!=Pos2r.PickOrder) then begin
/*maybe maintanance?*/  
    TrHs = true;
    PISr.Position = Posr.Code;
    while (LoopKey("Position",PISr,1,TrHs)) begin
      if (PISr.Position!=Posr.Code) then begin
        TrHs = false;
      end;
      if (TrHs) then begin
        RecordCopy(oldPISr,PISr);
        PISr.PickOrder = Posr.PickOrder;
        if (RecordUpdate(oldPISr,PISr,false)) then begin end;
      end;
    end;
  end;
  PosVcRecordUpdateAfter = res;
  RETURN;
END;

global
function LongInt PosVcRecordRemoveTest(var record PosVc Posr,record PosVc Pos2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;
  
  res = 1;
  if (Posr.Status!=0) then begin
    if (long3>0) then begin
      MessageBox(22055,"");
    end;
    res = 0;
    goto LPosVcRecordRemoveTest;  
  end;
LPosVcRecordRemoveTest:;
  PosVcRecordRemoveTest = res; 
  RETURN;
END;
