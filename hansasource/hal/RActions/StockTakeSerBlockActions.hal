external function Integer SerBlockCheckOverlap(LongInt,LongInt,LongInt,LongInt);

global
updating function LongInt StockTakeSerBlockCheck(var record StockTakeSerBlock StockTakeSerr,record StockTakeSerBlock StockTakeSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row StockTakeSerBlock StockTakeSerrw;
  row StockTakeSerBlock StockTakeSer2rw;
  
  res = 0;
  rwcnt = MatRowCnt(StockTakeSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(StockTakeSerr,i,StockTakeSerrw);
    if (StockTakeSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LStockTakeSerBlockCheck;        
    end;
    if (StockTakeSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LStockTakeSerBlockCheck;        
    end;
    if ((nonblankdate(StockTakeSerrw.StartDate)) and (nonblankdate(StockTakeSerrw.EndDate))) then begin
      if (StockTakeSerrw.StartDate>StockTakeSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LStockTakeSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(StockTakeSerr,j,StockTakeSer2rw);
      res = SerBlockCheckOverlap(StockTakeSerrw.TSerStart,StockTakeSerrw.TSerEnd,StockTakeSer2rw.TSerStart,StockTakeSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LStockTakeSerBlockCheck;        
      end;
    end;        
  end;  
LStockTakeSerBlockCheck:;  
  StockTakeSerBlockCheck = res;
  return;
end;
