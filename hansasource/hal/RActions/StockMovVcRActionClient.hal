remote updating procedure StockMovVcRecordUpdateClientRemote(record StockMovVc,record StockMovVc,string);
external procedure ShowUnOkWarn(string,Integer);

procedure PrintPalletLabels(record StockMovVc StockMovp)
BEGIN
  record RcVc RepSpec;
  string 255 location;
  record LocationVc Locr;

  if (StockMovp.OKFlag!=0) and (StockMovp.ProdSerNr!=0) and (StockMovp.FileName=="StockMovVc") then begin
    Locr.Code = StockMovp.ToLocation;
    ReadFirstMain(Locr,1,true);
    if (Locr.RequirePos!=0) then begin
      RepSpec.f3 = StockMovp.SerNr;
      RepSpec.Media = mtPrinter;
      RepSpec.repname = "PalletLabForm";
      RunReport(RepSpec,0);
    end;
  end;
  RETURN;
END;

global
updating function LongInt StockMovVcRecordSaveClient(LongInt wn,var record StockMovVc StockMovp,record StockMovVc StockMov2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AAb;

  BlockLoad(AAb);
  if (AAb.ProdPalletLabelPrinting!=0) then begin
    PrintPalletLabels(StockMovp);
  end;      
  ShowUnOkWarn("StockMovVc",StockMovp.OKFlag);
  res = 1;
  StockMovVcRecordSaveClient = res;
  RETURN;
END;

global
updating function LongInt StockMovVcRecordUpdateClient(LongInt wn,var record StockMovVc StockMovp,record StockMovVc StockMov2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AAb;

  BlockLoad(AAb);
  if (AAb.ProdPalletLabelPrinting!=0) then begin
    PrintPalletLabels(StockMovp);
  end;      
  if ((StockMovp.OKFlag!=0) and (StockMov2p.OKFlag==0)) then begin
    StockMovVcRecordUpdateClientRemote(StockMovp,StockMov2p,StockMovp.TaxAdminServSeal);
  end;
  if ((StockMovp.OKFlag!=0) and (StockMov2p.OKFlag!=0)) then begin
    StockMovVcRecordUpdateClientRemote(StockMovp,StockMov2p,StockMovp.TaxAdminServSeal);
  end;
  ShowUnOkWarn("StockMovVc",StockMovp.OKFlag);
  res = 1;
  StockMovVcRecordUpdateClient = res;
  RETURN;
END;

global
function LongInt StockMovVcRecordDefaultsClient(LongInt wn,var record StockMovVc StockMovr,record StockMovVc StockMov2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record LocalMachineBlock LMb;

  BlockLoad(LMb);  
  StockMovr.BranchID = LMb.BranchID;
  StockMovVcRecordDefaultsClient = res;
  return;
end;

global
function LongInt StockMovVcRecordDuplicateClient(LongInt wn,var record StockMovVc StockMovr,record StockMovVc StockMov2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record LocalMachineBlock LMb;

  BlockLoad(LMb);  
  StockMovr.BranchID = LMb.BranchID;
  StockMovVcRecordDuplicateClient = res;
  RETURN;
END;
