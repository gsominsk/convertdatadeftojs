external updating procedure TravelLogDayVc_SaveLasts(var record TravelLogDayVc);
external procedure TravelLogDayVc_CalcSum(var record TravelLogDayVc);

global
function LongInt TravelLogDayVcRecordDefaults(var record TravelLogDayVc TravelLogDayr,record TravelLogDayVc TravelLogDay2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record TravelLogBlock TravelLogRec;
  
  BlockLoad(TravelLogRec);
  TravelLogDayr.TravelLogNr = TravelLogRec.LastTravelLogNr;
  if (NonBlankDate(TravelLogRec.LastTravelLogDate)) then begin
    TravelLogDayr.TravelLogDate = AddDay(TravelLogRec.LastTravelLogDate,1);
  end else begin
    TravelLogDayr.TravelLogDate = CurrentDate;
  end;
  TravelLogDayr.CountryCode = TravelLogRec.LastCountry;
  TravelLogDayVc_CalcSum(TravelLogDayr);
  
  TravelLogDayVcRecordDefaults = res;
  return;
end;

global
function LongInt TravelLogDayVcRecordDuplicate(var record TravelLogDayVc TravelLogDayr,record TravelLogDayVc TravelLogDay2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  TravelLogDayVc_CalcSum(TravelLogDayr);
  
  TravelLogDayVcRecordDuplicate = res;
  return;
end;

global
function LongInt TravelLogDayVcRecordCheck(var record TravelLogDayVc TravelLogDayr,record TravelLogDayVc TravelLogDay2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  res = 0;
  
  if (TravelLogDayr.TravelLogNr==-1) then begin
    RecordCheckError(1058,"",-1,"TravelLogNr");
    res = -1;
    goto LTravelLogDayVcRecordCheck;
  end;
  
  if (BlankDate(TravelLogDayr.TravelLogDate)) then begin
    RecordCheckError(1058,"",-1,"TravelLogDate");
    res = -1;
    goto LTravelLogDayVcRecordCheck;
  end;
  
  if (Blank(TravelLogDayr.CountryCode)) then begin
    RecordCheckError(1058,"",-1,"CountryCode");
    res = -1;
    goto LTravelLogDayVcRecordCheck;
  end;
  
LTravelLogDayVcRecordCheck:;
  TravelLogDayVcRecordCheck = res;
  return;
end;

global
updating function LongInt TravelLogDayVcRecordSaveAfter(var record TravelLogDayVc TravelLogDayr,record TravelLogDayVc TravelLogDay2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  TravelLogDayVc_SaveLasts(TravelLogDayr);
  
  TravelLogDayVcRecordSaveAfter = res;
  return;
end;

global
updating function LongInt TravelLogDayVcRecordUpdateAfter(var record TravelLogDayVc TravelLogDayr,record TravelLogDayVc TravelLogDay2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  TravelLogDayVc_SaveLasts(TravelLogDayr);
  
  TravelLogDayVcRecordUpdateAfter = res;
  return;
end;
