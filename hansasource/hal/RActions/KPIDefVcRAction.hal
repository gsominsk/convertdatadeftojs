external procedure RecalculateKPIs(string);

global
function LongInt KPIDefVcRecordDefaults(var record KPIDefVc KPIDefr,record KPIDefVc KPIDef2r,LongInt long3,LongInt long4)
begin
  LongInt res;

  if (SingleUserMode) then begin
    KPIDefr.SerNr = NextSerNr("KPIDefVc",CurrentDate,-1,false,"");
  end;
  KPIDefVcRecordDefaults = res; 
  return;
end;

global
function LongInt KPIDefVcRecordDuplicate(var record KPIDefVc KPIDefr,record KPIDefVc KPIDef2r,LongInt long3,LongInt long4)
begin
  LongInt res;

  KPIDefr.SerNr = -1;
  if (SingleUserMode) then begin
    KPIDefr.SerNr = NextSerNr("KPIDefVc",CurrentDate,-1,false,"");
  end;
  KPIDefVcRecordDuplicate = res; 
  return;
end;

global
function LongInt KPIDefVcRecordCheck(var record KPIDefVc KPIDefr,record KPIDefVc KPIDef2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  res = 0;
  if (KPIDefr.SerNr<=0) then begin
    KPIDefr.SerNr = NextSerNr("KPIDefVc",CurrentDate,-1,false,"");
  end;
  KPIDefVcRecordCheck = res; 
  return;
end;

global
updating function LongInt KPIDefVcRecordSave(var record KPIDefVc KPIDefr,record KPIDefVc KPIDef2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  //val blankval;
  date blkdate;
  time blktime;
  Time t;
  
  blankdate(blkdate);
  blanktime(blktime);
  
  KPIDefr.Status = kKPIStatusInvalid;
  KPIDefr.Current = blankval;
  KPIDefr.Previous = blankval;
  KPIDefr.LastCalcDate = blkdate;
  KPIDefr.LastCalcTime = blktime;
  
  t = CurrentTime;
  t.second = t.second + 3;
  NewTimedTask2("RecalculateKPIsStartup","Recalculate KPIs Rates","RecalculateKPIs","newkpi",CurrentDate,t,"","");  
  KPIDefVcRecordSave = res;  
  return;
end;

global
updating function LongInt KPIDefVcRecordUpdate(var record KPIDefVc KPIDefr,record KPIDefVc KPIDef2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  Time t;

/*
should be waction
  //val blankval;
  date blkdate;
  time blktime;
  
  blankdate(blkdate);
  blanktime(blktime);
  
  KPIDefr.Status = kKPIStatusInvalid;
  KPIDefr.Current = blankval;
  KPIDefr.Previous = blankval;
  KPIDefr.LastCalcDate = blkdate;
  KPIDefr.LastCalcTime = blktime;
  
*/

  t = CurrentTime;
  t.second = t.second + 3;
  NewTimedTask2("RecalculateKPIsStartup","Recalculate KPIs Rates","RecalculateKPIs","updatekpi",CurrentDate,t,"","");  
  KPIDefVcRecordUpdate = res;  
  return;
end;

global
function LongInt KPIDefVcRecordProtectFields(var record KPIDefVc KPIDefr,record KPIDefVc KPIDef2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  KPIDef2r.Current = KPIDefr.Current;
  KPIDef2r.Previous = KPIDefr.Previous;
  KPIDef2r.Status = KPIDefr.Status;
  KPIDef2r.LastCalcDate = KPIDefr.LastCalcDate;
  KPIDef2r.LastCalcTime = KPIDefr.LastCalcTime;
  KPIDefVcRecordProtectFields = res;
  return;
end;
