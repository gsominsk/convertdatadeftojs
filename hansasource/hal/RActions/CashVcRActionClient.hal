remote procedure PrintPOSNETProtocolCashEvent_TCP(var record CashVc,record LSerialPortDeviceVc);
external procedure CHDFMPOSCashEvent(record CashVc,record LSerialPortDeviceVc);
external procedure PrintPOSNETProtocolCashEvent(var record CashVc,record LSerialPortDeviceVc);
external procedure PrintST05CashEvent(var record CashVc,record LSerialPortDeviceVc);
external procedure PrintFB05CashEvent(var record CashVc,record LSerialPortDeviceVc);
external procedure PrintFB15CashEvent(var record CashVc,record LSerialPortDeviceVc);
external procedure PrintFB15CashEventdll(var record CashVc,record LSerialPortDeviceVc);
external procedure PrintFM32CashEventdll(var record CashVc,record LSerialPortDeviceVc);
external function Boolean FindLocalSerialPortDevice(Integer,LongInt,string,var record LSerialPortDeviceVc);
external procedure PMsg_CashEvent(record LSerialPortDeviceVc,var record CashVc);
external procedure BematechMP2100CashEvent(record CashVc,record LSerialPortDeviceVc);

global
procedure CashVc_PrintToFiscalPrinter(var record CashVc Cashr,Boolean forceprintf)
BEGIN
  record CashPrintBlock CPb;
  record LocalMachineBlock LMb;
  record LSerialPortDeviceVc LSPDr;
    
  BlockLoad(LMb);  
  if (FindLocalSerialPortDevice(kSerialPortDeviceClassFiscalPrinter,-1,LMb.LocalMachineCode,LSPDr)==false) then begin  
    goto LCashVc_PrintToFiscalPrinter;
  end;
  if ((Cashr.OKFlag!=0) or (forceprintf)) then begin
    switch (LSPDr.Printer) begin
      case kSerialPortDeviceModelFiscPrinterPOSNET:
        PrintPOSNETProtocolCashEvent(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterPOSNETTCPIP:
        PrintPOSNETProtocolCashEvent_TCP(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterPOSNETwVATNr:
        PrintPOSNETProtocolCashEvent(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterFB05:
        PrintFB05CashEvent(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterFB15:
        PrintFB15CashEvent(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterFB15dll:
        PrintFB15CashEventdll(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterFM32DLL:
        PrintFM32CashEventdll(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterST05:
        PrintST05CashEvent(Cashr,LSPDr);
      case kSerialPortDeviceModelVirtualFiscPrinterCHDFMPOS:
        CHDFMPOSCashEvent(Cashr,LSPDr);
      case kSerialPortDeviceModelFiscPrinterFPRINT02K:
        PMsg_CashEvent(LSPDr,Cashr);
      case kSerialPortDeviceModelFiscPrinterBematechMP2100:
        BematechMP2100CashEvent(Cashr,LSPDr);
    end;
  end;
LCashVc_PrintToFiscalPrinter:;  
  return;
end;

procedure CashVc_SendToSerialPortDevices(Integer type,LongInt stat,record CashVc Cashr,record CashVc Cash2r)
begin
  Boolean printf,testf;
  
  switch (type) begin
    case kSerialPortDeviceClassReceiptPrinter:
      switch (stat) begin
        case Rs_insert:
          if (Cashr.OKFlag!=0) then begin
            printf = true;
          end;
        case Rs_update:
          if ((Cash2r.Invalid==0) and (Cashr.Invalid==0)) then begin
            if ((Cash2r.OKFlag==0) and (Cashr.OKFlag!=0)) then begin
              printf = true;
            end;
          end;
      end;
    case kSerialPortDeviceClassFiscalPrinter:
      switch (stat) begin
        case Rs_insert:
          if (Cashr.OKFlag!=0) then begin
            printf = true;
          end;
        case Rs_update:
          if ((Cash2r.Invalid==0) and (Cashr.Invalid==0)) then begin
            if ((Cash2r.OKFlag==0) and (Cashr.OKFlag!=0)) then begin
              printf = true;
            end;
          end;
      end;
    case kSerialPortDeviceClassFiscalControlUnit:
      switch (stat) begin
        case Rs_insert:
          testf = true;
          if (Cashr.OKFlag==0) then begin testf = false; end;          
          if (testf) then begin
            printf = true;
          end;
        case Rs_update:
          testf = true;
          if ((Cash2r.Invalid!=0) or (Cashr.Invalid!=0)) then begin testf = false; end;          
          if ((Cash2r.OKFlag!=0) or (Cashr.OKFlag==0)) then begin testf = false; end;          
          if (testf) then begin
            printf = true;
          end;
      end;
  end;
  if (printf) then begin
    switch (type) begin
      case kSerialPortDeviceClassReceiptPrinter:
      case kSerialPortDeviceClassFiscalPrinter:
        CashVc_PrintToFiscalPrinter(Cashr,false);
      case kSerialPortDeviceClassFiscalControlUnit:
    end;
  end;
  return;
end;

global
function LongInt CashVcRecordUpdateClient(LongInt wn,var record CashVc Cashp,record CashVc Cash2p,LongInt stat,LongInt long4)
begin
  LongInt res;

  CashVc_SendToSerialPortDevices(kSerialPortDeviceClassFiscalPrinter,Rs_update,Cashp,Cash2p);
  CashVcRecordUpdateClient = res;
  return;
end;

global
function LongInt CashVcRecordSaveClient(LongInt wn,var record CashVc Cashp,record CashVc Cash2p,LongInt stat,LongInt long4)
begin
  LongInt res;

  CashVc_SendToSerialPortDevices(kSerialPortDeviceClassFiscalPrinter,Rs_insert,Cashp,Cash2p);
  CashVcRecordSaveClient = res;
  return;
end;
