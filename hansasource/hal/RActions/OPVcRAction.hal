external function LongInt ValidOPDataForVATLaw(Integer,record OPVc,Integer,var LongInt,var string,var LongInt,var string);
external function roundmode SetRoundModeD(Integer);
external function Boolean HasPLIntegratedWithNL();
external function Boolean HasIntegratedNL();
external procedure OPVc_PasteBankCurncy(var record OPVc,Integer);
external function Boolean AcceptanceRulesExists(Integer,string);
external function string 255 GetSupplierOnAccountAC(string);
external procedure WarnFutureDate(Boolean,Date);
external function Boolean DisallowFutureDateCheck(Boolean,Date,string,Integer);
external updating procedure AddTTrans_OPVc(record TRVc,record OPVc);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external function Integer MakeTransFromOP(record TRVc,record OPVc,Boolean);
external function Integer IsUnOKAllowed_OPVc(record OPVc );
external procedure PastePMInOP(var record OPVc);
external procedure AddOPRoundOffToRows(record OPVc,record APAccBlock);
external function string 255 CheckTrans(var record TRVc,Integer,Boolean);
external updating procedure SaveTrans(record TRVc);
external function Integer GetCheck(string,string,LongInt,var string,var string,var string,var val,var Date,var Date);
external function Integer CheckObjs(string,string,var string);
external function Boolean GetPMRow(string,var row PMBlock);
external function Boolean CheckCurncy(string,string);
external function Boolean CurncyCodeRegistered(string);
external function Boolean PayModeAccIsClosed(string);
external function Boolean GetPMgentrans(string);
external function Integer PMCheckType(string,var string,var string);
external function Boolean Date2Test(string,Date,string,Integer);
external function Boolean SerNrTestOPVc(LongInt,Date,var Boolean);
external function Integer CashSerNumberTest(string,val,string,LongInt,var Boolean);
external function LongInt GetCurUserLastNr(string);
external procedure CurValToOtherCur(Date,string,val,string,var val,roundmode);

function Boolean PrepaymentNumberUsed(LongInt skipopsernr,LongInt prepaynr)
begin
  Boolean res;
  Boolean found;
  string 255 keystr;
  record OPVc OPr;
  
  found = true;
  keystr = "PrepayNr:" & prepaynr;
  while (LoopKey(keystr,OPr,1,found)) begin
    if (found) then begin
      if (OPr.SerNr!=skipopsernr) then begin
        if (OPr.OrderedFlag!=0) then begin
          res = true;
          goto LPrepaymentNumberUsed;
        end;
      end;
    end;
  end;
LPrepaymentNumberUsed:;  
  PrepaymentNumberUsed = res;
  return;
end;

function Integer CorrectPayModeBank(record OPVc OPr,row OPVc curOPrw,Integer rownr,var string gotofield)
begin
  Integer res;
  Integer i;
  row OPVc OPrw;
  row PMBlock PMrw;
  record BankVc Bankr;
  record BankVc CurBankr;
  string 255 curpaymode;
  
  res = 0;
  curpaymode = curOPrw.PayMode;
  if (blank(curpaymode)) then begin
    curpaymode = OPr.PayMode;
  end;
  if (GetPMRow(curpaymode,PMrw)) then begin end;
  if (nonblank(PMrw.BankCode)) then begin
    CurBankr.Code = PMrw.BankCode;
    if (ReadFirstMain(CurBankr,1,true)) then begin end;
  end;
  switch (CurBankr.Bank) begin
    case 80://SEB
      if (OPr.ForeignPayment!=0) then begin
        if (OPr.PayperSupplier==2) then begin
          res = 20419;
          gotofield = "PayMode";
          goto LCorrectPayModeBank;
        end;
      end;
  end;
  for (i=0;i<rownr;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if (nonblank(OPrw.PayMode)) then begin
      if (GetPMRow(OPr.PayMode,PMrw)) then begin end;
    end else begin
      if (GetPMRow(OPr.PayMode,PMrw)) then begin end;
    end;
    if (nonblank(PMrw.BankCode)) then begin
      Bankr.Code = PMrw.BankCode;
      if (ReadFirstMain(Bankr,1,true)) then begin
        if (CurBankr.Bank!=Bankr.Bank) then begin
          res = 20769;
          gotofield = "PayMode";
        end else begin
        /*Ervin says no needs
          if (curOPrw.BankCurncy==OPrw.BankCurncy) then begin
            if (curOPrw.BankVal==OPrw.BankVal) then begin
              if (curOPrw.BankRefStr==OPrw.BankRefStr) then begin
                res = 20420;
                gotofield = "BankRefStr";
              end;
            end;
          end;
        */
        end;
      end;
    end;
  end;
LCorrectPayModeBank:;  
  CorrectPayModeBank = res;
  return;
end;

function Boolean CheckIfPrepaymentError(record OPPVc OPPr,row OPVc OPrw,Date td)
BEGIN
  Boolean res;
  record BaseCurBlock BCb;
  val opfr,opto1,opto2,opbr1,opbr2;
  val ppfr,ppto1,ppto2,ppbr1,ppbr2;
  val preprate,oprate;
 
  if (OPPr.CurncyCode!=OPrw.PInvCurncy) then begin
    res = true;
  end;
  if (!res) then begin
    BlockLoad(BCb);
    if (OPrw.BankCurncy==BCb.BaseCur1) then begin
      oprate = OPPr.PPVal/OPPr.BookRVal;
      preprate = OPrw.PInvVal/OPrw.BankVal;
      if (oprate!=preprate) then begin
        res = true;
      end;
    end else begin
      GetFullCurncyRate(OPrw.PInvCurncy,td,opfr,opto1,opto2,opbr1,opbr2);
      GetFullCurncyRate(OPPr.CurncyCode,OPPr.PayDate,ppfr,ppto1,ppto2,ppbr1,ppbr2);
      if (opto1!=ppto1) or (opto2!=ppto2) then begin
        res = true;
      end;
    end;
  end;
  CheckIfPrepaymentError = res;
  RETURN;
END;

global
updating function LongInt ValidatePaymentRecord(record OPVc OPp,record OPVc OP2p,LongInt stat,LongInt long4,Boolean disperrf)
BEGIN
  LongInt res;
  record MainCLBlock MainCLRec;
  record APAccBlock APAccRec;
  record AccBlock ARAccRec;
  record SRBlock SRRec;
  record OPTBlock OPtr;
  record APPayHistVc APHistr;
  record OPrsVc OPrsr;
  record OwnCheckVc OwnCheckr;
  record CheckVc Checkr;
  record OPPVc OPPr;
  record VIVc VIr;
  record APVc APr;
  record CUVc VEr;  
  record POVc POr;
  record TRVc gTRp;
  row OPVc OP2rw;
  row OPVc OPrw;  
  Integer cashres;
  Integer i,j,rwcnt;
  Integer cht,gchk;
  LongInt oldnr,newnr;
  Boolean transf,orderedf,gentrans,testf,check,unokf,holdf,invalidatingf;
  val amount,amount2,temp,t;
  string 20 curncy;
  string 2 pmmode;
  string 10 pmacc;
  Integer insertmode,updatemode;
  LongInt errcode,errorrow;
  string 255 tstr,pmobjstr,errstr,gotofield;
  Date td,regdate;
  row PMBlock pmrw;  
  Integer koef;
  record BaseCurBlock BCb;

  res = 0;
  if (long4>0) then begin
    check = true;
  end else begin
    check = false;
  end;
  oldnr = OPp.SerNr;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update    
  if (OPp.DoneFlag==0) then begin
    if (stat==updatemode) then begin
      if (OP2p.DoneFlag==1) then begin unokf = true; end;
    end;
    if (OPp.OrderedFlag==0) then begin
      if (stat==updatemode) then begin
        if (OP2p.OrderedFlag==1) then begin unokf = true; end;
      end;
    end;
  end;
  if ((OP2p.Invalid==0) and (OPp.Invalid!=0)) then begin
    invalidatingf = true;
  end;
  if (unokf) then begin
    errcode = IsUnOKAllowed_OPVc(OPp);
    if (errcode!=0) then begin
      if (disperrf) then begin
        RecordCheckError(errcode,"",-1,"TransDate");      
      end;
      res = errcode; 
    end;    
    goto LOPVcRecordCheck;
  end;
  if (stat==updatemode) then begin
    if (OPp.SerNr<=0) and (OP2p.SentFlag==0) then begin
      OPp.SerNr = OP2p.SerNr;
    end;
  end;  
  
  BlockLoad(APAccRec);
  BlockLoad(ARAccRec);
  BlockLoad(OPtr);
  BlockLoad(SRRec);
  BlockLoad(MainCLRec);
  BlockLoad(BCb);
  gentrans = true;
  if (OPp.SerNr<=0) then begin
    newnr = GetCurUserLastNr("OPVc");
    if (newnr==-1) then begin
      newnr = SRRec.LastOPNr;
    end;
    OPp.SerNr = NextSerNr("OPVc",OPp.TransDate,newnr,false,"");
  end;
  cashres = CashSerNumberTest(OPp.PayMode,OPp.CurPayVal,"OPVc",OPp.SerNr,gentrans);
  if (cashres==99) then begin 
    res = -1; 
    goto LOPVcRecordCheck; 
  end;
  if (cashres==12) then begin
    goto L12;
  end;
  if (SerNrTestOPVc(OPp.SerNr,OPp.TransDate,gentrans)==false) then begin
    if (check) then begin
      if (disperrf) then begin
        RecordCheckError(1557,"",-1,"SerNr");      
      end;
      res = 1557; 
      goto LOPVcRecordCheck;    
    end;    
  end;    
L12:;
  if ((OPp.OrderedFlag==0) and (OPp.DoneFlag!=0)) then begin
    if (disperrf) then begin
      RecordCheckError(1202,"",-1,"SerNr");      
    end;
    res = 1202; 
    goto LOPVcRecordCheck;
  end;
  if (OPp.RejectedFlag!=0) then begin
    if (OPp.OrderedFlag==0) then begin
      if (disperrf) then begin
        RecordCheckError(1202,"",-1,"SerNr");      
      end;
      res = 1202; 
      goto LOPVcRecordCheck;
    end;
  end;
  if (blankdate(OPp.PayDate)) then begin
    if (disperrf) then begin
      RecordCheckError(1053,"",-1,"PayDate");      
    end;
    res = 1053; 
    goto LOPVcRecordCheck;
  end;
  if (blankdate(OPp.TransDate)) then begin
    if (disperrf) then begin
      RecordCheckError(1053,"",-1,"TransDate");      
    end;
    res = 1053; 
    goto LOPVcRecordCheck;
  end;  
  if (Date2Test("OPVc",OPp.TransDate,"TransDate",-1)==false) then begin
    res = -1;
    goto LOPVcRecordCheck;
  end;
/*  
  if (DisallowFutureDateCheck(true,OPp.TransDate,"TransDate",-1)) then begin
    res = -1;
    goto LOPVcRecordCheck;
  end;
*/  
  if (blank(OPp.PayMode)) then begin
    if (disperrf) then begin
      RecordCheckError(1207,"",-1,"PayMode");      
    end;
    res = 1207; 
    goto LOPVcRecordCheck;
  end;
  if (MainCLRec.CashCollection!=0) then begin
    if (MainCLRec.PMControl!=0) then begin
      if (PMCheckType(OPp.PayMode,tstr,tstr)==5) then begin
        if (GetPMgentrans(OPp.PayMode)) then begin
          if (disperrf) then begin
            RecordCheckError(1277,"",-1,"PayMode");      
          end;
          res = 1277; 
          goto LOPVcRecordCheck;        
        end;
      end;
    end;
  end;  
  if (check) then begin
  if (UserCanAction("AllowNegOP",true)==false) then begin
    if (OPp.CurPayVal<0) then begin
      RecordCheckError(20114,"",-1,"CurPayVal");      
      res = -1;
      goto LOPVcRecordCheck;
    end;
  end;
  end;

  rwcnt = MatRowCnt(OPp);
  if (rwcnt==0) then begin
    if (disperrf) then begin
      RecordCheckError(1030,"",0,"VISerNr");      
    end;
    res = 1030; 
    goto LOPVcRecordCheck;
  end;
  testf = false;
/*I think it is not necessery
  if (SupportTempBook(OPp,OPVc)) then begin
  if (OPp.OrderedFlag==1) then begin
    if (OP2p==NIL) then begin
      testf = true;
    end else begin
      if (OP2p.OrderedFlag==0) then 
        testf = true;
    end;
    if (testf) then begin
      if (blankstrp(OPp.PayNumber)) then begin
        res = SetEFErr(1058,NIL,offset(OPView,PayNumber));
        goto LOPVcRecordCheck;
      end;
    end;
  end;
  end; 
*/
  
  if (check) then begin
  if (OPtr.NoMixCurOP==1) then begin
    curncy = "";
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(OPp,i,OPrw);
      if (i==0) then begin
        curncy = OPrw.RecCurncy;
      end;
      if (curncy!=OPrw.RecCurncy) then begin
        if (disperrf) then begin
          RecordCheckError(1584,"",-1,"SerNr");      
        end;
        res = 1584; 
        goto LOPVcRecordCheck;
      end;
    end;
  end;
  if (PayModeAccIsClosed(OPp.PayMode)) then begin
    if (disperrf) then begin
      RecordCheckError(1258,OPp.PayMode,-1,"PayMode");      
    end;
    res = 1258; 
    goto LOPVcRecordCheck;
  end;
  if (OPp.OrderedFlag==0 or stat==insertmode) then begin
    AddOPRoundOffToRows(OPp,APAccRec);
  end;
  end;
  if (OPp.DoneFlag!=0) then begin
    transf = false;
    if (OPp.DoneFlag==1) then begin
      if (stat==insertmode) then begin transf = true; end;
      if (stat==updatemode) then begin
        if (OP2p.DoneFlag==0) then begin transf = true; end;
      end;
    end;
    if (OPp.OrderedFlag==1) then begin
      if (stat==insertmode) then begin transf = true; end;
      if (stat==updatemode) then begin
        if (OP2p.OrderedFlag==0) then begin transf = true; end;
      end;
    end;
    if (OPp.RejectedFlag==1) then begin
      if (stat==insertmode) then begin transf = true; end;
      if (stat==updatemode) then begin
        if (OP2p.RejectedFlag==0) then begin transf = true; end;
      end;
    end;
    if (transf) then begin
      if (UserCanAction("OPOK",true)==false) then begin
        if (disperrf) then begin
          RecordCheckError(1274,StringFromStringSet(3,"OPOK"),-1,"SerNr");      
        end;
        res = 1274; 
        goto LOPVcRecordCheck;
      end;
    end;  
  end;
  if (check==false) then begin
    goto LOPVcRecordCheck_GenTrans;
  end;
  if (invalidatingf) then begin
    if (transf) then begin
      if (disperrf) then begin
        RecordCheckError(20576,"",-1,"SerNr");      
      end;
      res = 20576; 
      goto LOPVcRecordCheck;
    end;
  end;
  if (OPp.OrderedFlag!=0) then begin
    orderedf = false;
    switch (stat) begin
      case Rs_insert: orderedf = true;
      case Rs_update:
        if (OP2p.OrderedFlag==0) then begin orderedf = true; end;
    end;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OPp,i,OPrw);
    if (UserCanAction("AllowNegOP",true)==false) then begin
      if (OPrw.RecVal<0) then begin
        RecordCheckError(20114,"",i,"RecVal");      
        res = -1;
        goto LOPVcRecordCheck;
      end;
    end;
    if (CurncyCodeRegistered(OPrw.BankCurncy)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1582,"",i,"BankCurncy");      
      end;
      res = 1582; 
      goto LOPVcRecordCheck;
    end;
    if (CurncyCodeRegistered(OPrw.PInvCurncy)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1582,"",i,"PInvCurncy");      
      end;
      res = 1582; 
      goto LOPVcRecordCheck;
    end;
    if (CurncyCodeRegistered(OPrw.RecCurncy)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1582,"",i,"RecCurncy");      
      end;
      res = 1582; 
      goto LOPVcRecordCheck;
    end;
    if (ARAccRec.DemandPPNo!=0) then begin
      if ((OPrw.PrepayNr!=-1) and (OPrw.VISerNr!=-1)) then begin
        if (disperrf) then begin
          RecordCheckError(20059,"",i,"PrepayNr");      
        end;
        res = 20059; 
        goto LOPVcRecordCheck;
      end;
    end;
    if (OPrw.stp==kPaymentRowTypeBankFee) then begin
      if (OPrw.BankVal==0) then begin
        if (OPrw.RecVal!=0) then begin
          if (disperrf) then begin
            RecordCheckError(1854,"",i,"BankVal");      
          end;
          res = 1854; 
          goto LOPVcRecordCheck;
        end;
      end;
      if (OPrw.PrepayNr!=-1) then begin
        if (disperrf) then begin
          RecordCheckError(1209,"",i,"VISerNr");      
        end;
        res = 1209; 
        goto LOPVcRecordCheck;
      end;
    end;
    errcode = CorrectPayModeBank(OPp,OPrw,i,gotofield);
    if (errcode!=0) then begin
      if (disperrf) then begin
        RecordCheckError(errcode,"",i,gotofield);      
      end;
      res = errcode; 
      goto LOPVcRecordCheck;
    end;

    if ((OPrw.stp==kPaymentRowTypeNormal) or (OPrw.stp==kPaymentRowTypeSettlementDiscount)) then begin
      res = ValidOPDataForVATLaw(stat,OPp,i,errcode,errstr,errorrow,tstr);
      if (res!=0) then begin
        RecordCheckError(errcode,"",errorrow,tstr);
        res = -1;
        goto LOPVcRecordCheck;
      end;
        if (PayModeAccIsClosed(OPrw.PayMode)) then begin
          if (disperrf) then begin
            RecordCheckError(1258,OPrw.PayMode,i,"PayMode");      
          end;
          res = 1258; 
          goto LOPVcRecordCheck;
        end;
        if (OPrw.RecVal!=0) then begin
          if (OPrw.BankVal==0) then begin
            if (disperrf) then begin
              RecordCheckError(1854,"",i,"BankVal");      
            end;
            res = 1854; 
            goto LOPVcRecordCheck;
          end;
        end;
        errcode = CheckObjs(OPrw.APAcc,OPrw.Objects,errstr);
        if (errcode!=0) then begin
          if (disperrf) then begin
            RecordCheckError(errcode,errstr,i,"Objects");      
          end;
          res = errcode; 
          goto LOPVcRecordCheck;
        end;
        pmmode = OPrw.PayMode;
        if (blank(pmmode)) then begin
          pmmode = OPp.PayMode;
        end;
        if (GetPMRow(pmmode,pmrw)) then begin         
          pmacc = pmrw.AccNr;
          pmobjstr = pmrw.Objects;        
/*                 
we don't have to check pmobject since it goes to diffrent account then OPrw.Object
          tstr = pmobjstr;
          if (nonblank(tstr)) then begin
            tstr = tstr & ",";
          end;
          tstr = tstr & OPrw.Objects;
*/          
          errcode = CheckObjs(pmacc,OPrw.Objects,errstr);
          if (errcode!=0) then begin
            if (disperrf) then begin
              RecordCheckError(errcode,errstr,i,"Objects");      
            end;
            res = errcode; 
            goto LOPVcRecordCheck;
          end;  
          if (OPrw.B1BankVal==0) then begin
            if (pmrw.ForceBankVals>0) then begin
              if (disperrf) then begin
                RecordCheckError(1058,"",i,"B1BankVal");      
              end;
              res = 1058; 
              goto LOPVcRecordCheck;              
            end;
          end;
          if (OPrw.B2BankVal==0) then begin
            if (pmrw.ForceBankVals==2) then begin
              if (disperrf) then begin
                RecordCheckError(1058,"",i,"B2BankVal");      
              end;
              res = 1058; 
              goto LOPVcRecordCheck;              
            end;
          end;          
//          if (OPrw.VISerNr>0) and (OPp.OrderedFlag!=0) and
          if (OPrw.VISerNr>0) and
            (APAccRec.NoOverPayVI==1) then begin
            testf = true;
            if (stat==updatemode) then begin
              if (OP2p.OrderedFlag==1) then begin
                testf = false;
              end;
            end;
            if (testf) then begin
              amount = OPrw.RecVal;
              for (j=0;j<i;j=j+1) begin
                MatRowGet(OPp,j,OP2rw);
                if (OP2rw.VISerNr==OPrw.VISerNr) then begin
                  if (OPrw.RecCurncy==OP2rw.RecCurncy) then begin
                    t = OP2rw.RecVal;
                  end else begin
                    CurValToOtherCur(OPp.TransDate,OP2rw.RecCurncy,OP2rw.RecVal,OPrw.RecCurncy,t,DefaultCurRoundOff);
                  end;
                  amount = amount + t;
                end;
              end;
              koef = 1;

              APr.SerNr = OPrw.VISerNr;
              t = blankval;
              if (ReadFirstMain(APr,1,true)) then begin end;
                if (APr.CurncyCode==OPrw.RecCurncy) then begin
                  t = APr.RVal;
                end else begin
                  CurValToOtherCur(OPp.TransDate,APr.CurncyCode,APr.RVal,OPrw.RecCurncy,t,DefaultCurRoundOff);
                end;
                if ((t<0) and (amount<0)) then begin
                  koef = -1;
                end;
              end;
              if ((t*koef) < (Round(amount,SetRoundModeD(2))*koef)) then begin
                tstr = " " & amount & USetStr(20061);
                tstr = tstr & " " & t;
                tstr = tstr & USetStr(20064) & " " & (amount-t) & USetStr(20063);
                if (disperrf) then begin
                  RecordCheckError(20065,tstr,i,"Sum");      
                end;
                res = 20065; 
                goto LOPVcRecordCheck;  
              end;      
            end;
          end else begin
            if (OPrw.PrepayNr<0) then begin
              if (OPrw.RecCurncy!=BCb.BaseCur1) then begin
                RecordCheckError(1582,"",i,"RecCurncy");      
                res = -1; 
                goto LOPVcRecordCheck;
              end;
            end;
          end;
          if (HasLocalization("LVA,RUS")) then begin
            if (APAccRec.OPBookVAT!=0) then begin
              if (blank(OPrw.VATCode)) then begin
                if (disperrf) then begin
                  RecordCheckError(1058,"",i,"VATCode");      
                end;
                res = 1058; 
                goto LOPVcRecordCheck;
              end;
              if (blank(OPrw.VATVal)) then begin
                if (disperrf) then begin
                  RecordCheckError(1058,"",i,"VATCode");      
                end;
                res = 1058; 
                goto LOPVcRecordCheck;
              end;
            end;
          end;

        VEr.Code = OPrw.VECode;
        if (ReadFirstMain(VEr,1,true)==false) then begin
          if (disperrf) then begin
            RecordCheckError(1120,OPrw.VECode,i,"VECode");      
          end;
          res = 1120; 
          goto LOPVcRecordCheck;
        end;
        if (nonblank(OPrw.PayMode)) then begin
          if (CheckCurncy(OPrw.PayMode,OPrw.BankCurncy)==false) then begin
            if (disperrf) then begin
              RecordCheckError(1425,"",i,"PayMode");      
            end;
            res = 1425; 
            goto LOPVcRecordCheck;
          end;
        end else begin
          if (nonblank(OPp.PayMode)) then begin
            if (CheckCurncy(OPp.PayMode,OPrw.BankCurncy)==false) then begin
              if (disperrf) then begin
                RecordCheckError(1425,"",-1,"PayMode");      
              end;
              res = 1425; 
              goto LOPVcRecordCheck;
            end;
          end;
        end;
        if ((OPrw.VISerNr!=-1) or (OPrw.stp==kPaymentRowTypeSettlementDiscount)) then begin
          if (OPrw.PrepayNr!=-1) then begin
            if (disperrf) then begin
              RecordCheckError(1209,"",i,"VISerNr");      
            end;
            res = 1209; 
            goto LOPVcRecordCheck;
          end;
          if (CurncyCodeRegistered(OPrw.PInvCurncy)==false) then begin
            if (disperrf) then begin
              RecordCheckError(1582,"",i,"PInvCurncy");      
            end;
            res = 1582; 
            goto LOPVcRecordCheck;
          end;
          VIr.SerNr = OPrw.VISerNr;
          if (ReadFirstMain(VIr,1,true)==false) then begin            
            OPrsr.VINr = OPrw.VISerNr;
            if (ReadFirstKey("VIKey",OPrsr,1,true)==true) then begin
               goto L11;
            end;
            APr.SerNr = OPrw.VISerNr;
            if (ReadFirstMain(APr,1,true)==false) then begin
              if (disperrf) then begin
                RecordCheckError(1209,"",i,"VISerNr");      
              end;
              res = 1209; 
              goto LOPVcRecordCheck;
            end;
          end else begin
            holdf = true;
            if (OPp.DoneFlag==1) then begin
              if (stat==updatemode) then begin
                if (OP2p.OrderedFlag!=0) then begin
                  if (OP2p.DoneFlag==0) then begin holdf = false; end;
                end;
              end;
            end;
            if (stat==updatemode) then begin
              if (OP2p.OrderedFlag!=0 and OPp.OrderedFlag!=0) then begin
                if (OP2p.DoneFlag==0) then begin holdf = false; end;
              end;
            end;               
            if (VIr.HoldSum!=0) and (holdf) then begin
              APr.SerNr = OPrw.VISerNr;
              if (ReadFirstMain(APr,1,true)) then begin
                t = APr.RVal - OPrw.RecVal;
                if (t<VIr.HoldSum) then begin
                  if (disperrf) then begin
                    RecordCheckError(2077,"",i,"VISerNr");      
                  end;
                  res = 2077; 
                  goto LOPVcRecordCheck;
                end;
              end;
            end;
            if (OPrw.stp==kPaymentRowTypeNormal) then begin 
              if (APAccRec.OPbeforeVIDate==0) then begin
                if (OPp.TransDate<VIr.InvDate) then begin 
                  if (disperrf) then begin
                    RecordCheckError(20852,"",i,"TransDate");      
                  end;
                  res = 20852; 
                  goto LOPVcRecordCheck;
                end;
                if (OPp.TransDate<VIr.TransDate) then begin 
                  if (disperrf) then begin
                    RecordCheckError(20852,"",i,"TransDate");      
                  end;
                  res = 20852; 
                  goto LOPVcRecordCheck;
                end;
              end;
              if (OPrw.VECode!=VIr.VECode) then begin
                if (disperrf) then begin
                  RecordCheckError(1215,"",i,"VECode");      
                end;
                res = 1215; 
                goto LOPVcRecordCheck;
              end;
            end;
            if (VIr.Invalid!=0) then begin
              if (disperrf) then begin
                RecordCheckError(1282,"",i,"VISerNr");      
              end;
              res = 1282; 
              goto LOPVcRecordCheck;
            end;
            if (VIr.Closed!=0) then begin
              if (disperrf) then begin
                RecordCheckError(1224,"",i,"VISerNr");      
              end;
              res = 1224; 
              goto LOPVcRecordCheck;
            end;
            if (VIr.OKFlag==0) then begin
              if (disperrf) then begin
                RecordCheckError(20073,"",i,"VISerNr");      
              end;
              res = 20073; 
              goto LOPVcRecordCheck;
            end;
          end;
L11:;   
        end else begin
          if (VEr.OnAccount==0) then begin
            if (disperrf) then begin
              RecordCheckError(1131,"",i,"VISerNr");      
            end;
            res = 1131; 
            goto LOPVcRecordCheck;
          end;
          if ((OPrw.PrepayNr==-1) and (ARAccRec.DemandPPNo==1)) then begin
            if (disperrf) then begin
              RecordCheckError(1289,"",i,"PrepayNr");      
            end;
            res = 1289; 
            goto LOPVcRecordCheck;
          end; 
          if (OPrw.PrepayNr!=-1) and (invalidatingf==false) then begin
            if (UserCanAction("DisallowPrepToNotOKPO",false)) then begin
              if (OPrw.OrderNr>0) then begin
                POr.SerNr = OPrw.OrderNr;
                if (ReadFirstMain(POr,1,true)) then begin
                  if (POr.OKFlag==0) then begin
                    if (disperrf) then begin
                      RecordCheckError(20072,"",i,"OrderNr");      
                    end;
                    res = 20072;
                    goto LOPVcRecordCheck;
                  end;
                end;
              end;
            end;
            if (APAccRec.ForceUniquePP!=0) then begin
              if (OPrw.RecVal>0) then begin
                if (PrepaymentNumberUsed(OPp.SerNr,OPrw.PrepayNr)) then begin
                  if (disperrf) then begin
                    RecordCheckError(20057,"",i,"PrepayNr");      
                  end;
                  res = 20057; 
                  goto LOPVcRecordCheck;
                end;
              end;
            end;
            APHistr.VEPNr = OPrw.PrepayNr;
            APHistr.FileName = "OPVc";
            if (ReadFirstMain(APHistr,2,true)==true) then begin
              if (APAccRec.ForceUniquePP!=0) then begin
                temp = blankval;
                OPPr.SerNr = APHistr.VEPNr;
                if (ReadFirstMain(OPPr,1,true)==true) then begin
                  temp = OPPr.PPVal;
                end;
                temp = temp + OPrw.RecVal;
                if (temp!=0) and (OPrw.RecVal>0) then begin
                  if (disperrf) then begin
                    RecordCheckError(20057,"",i,"PrepayNr");      
                  end;
                  res = 20057; 
                  goto LOPVcRecordCheck;
                end;
              end;
              if (APHistr.VECode!=OPrw.VECode) then begin
                if (disperrf) then begin
                  RecordCheckError(1215,"",i,"PrepayNr");      
                end;
                res = 1215; 
                goto LOPVcRecordCheck;
              end;
              if (APHistr.CurncyCode!=OPrw.RecCurncy) then begin
                if (disperrf) then begin
                  RecordCheckError(1217,"",i,"PrepayNr");      
                end;
                res = 1217; 
                goto LOPVcRecordCheck;
              end;
            end;

            OPPr.SerNr = OPrw.PrepayNr;
            if (ReadFirstMain(OPPr,1,true)) then begin
              if (OPrw.PInvVal>0) then begin
                if (OPPr.PayDate!=OPp.TransDate) then begin
                  if (disperrf) then begin
                    RecordCheckError(20853,"",i,"TransNr");      
                  end;
                  res = 20853; 
                  goto LOPVcRecordCheck;
                end;
              end else begin
                if (-OPrw.PInvVal>OPPr.PPVal) then begin
                  if (disperrf) then begin
                    RecordCheckError(1254,"",i,"TransNr");      
                  end;
                  res = 1254; 
                  goto LOPVcRecordCheck;
                end;
              end;
              if (CheckIfPrepaymentError(OPPr,OPrw,OPp.TransDate)) then begin
                if (OPPr.PayDate!=OPp.TransDate) and (OPrw.BankVal>0) then begin
                  if (disperrf) then begin
                    RecordCheckError(20405,"",i,"PrepayNr");      
                  end;
                  res = 20405; 
                  goto LOPVcRecordCheck;
                end;
              end;
              if (OPrw.RecVal<0) then begin
                amount = OPrw.RecVal;
                for (j=0;j<i;j=j+1) begin
                  MatRowGet(OPp,j,OP2rw);
                  if (OP2rw.PrepayNr==OPrw.PrepayNr) then begin
                    amount = amount + OP2rw.RecVal;
                  end;
                end;
                if (-amount>OPPr.PPVal) then begin
                  if (disperrf) then begin
                    RecordCheckError(1254,"",i,"PrepayNr");      
                  end;
                  res = 1254; 
                  goto LOPVcRecordCheck;
                end;
              end;
            end else begin
              if (OPrw.RecVal<0) then begin
                if (disperrf) then begin
                  RecordCheckError(20403,"",i,"PrepayNr");      
                end;
                res = 20403; 
                goto LOPVcRecordCheck;
              end;
            end;
          end;
          if ((OPrw.PrepayNr!=-1) and (OPrw.VISerNr==-1)) then begin
            for (j=0;j<i;j=j+1) begin
              MatRowGet(OPp,j,OP2rw);
              if ((OP2rw.PrepayNr!=-1) and (OP2rw.VISerNr==-1) and (OP2rw.PrepayNr==OPrw.PrepayNr)) then begin
                if (OP2rw.VECode!=OPrw.VECode) then begin
                  if (disperrf) then begin
                    RecordCheckError(1215,"",i,"PrepayNr");      
                  end;
                  res = 1215; 
                  goto LOPVcRecordCheck;
                end;                
                if (APAccRec.ForceUniquePP!=0) then begin
                  if (disperrf) then begin
                    RecordCheckError(20057,"",i,"PrepayNr");      
                  end;
                  res = 20057; 
                  goto LOPVcRecordCheck;
                end;                            
              end;
            end;
          end;
          if (VEr.VEType==0) then begin
            if (disperrf) then begin
              RecordCheckError(1120,OPrw.VECode,i,"VECode");      
            end;
            res = 1120; 
            goto LOPVcRecordCheck;
          end;
          if (VEr.OnAccount==0) then begin
            if (disperrf) then begin
              RecordCheckError(1200,"",i,"VECode");      
            end;
            res = 1200; 
            goto LOPVcRecordCheck;
          end;
          if (nonblank(VEr.VECurncyCode)) then begin
            if (VEr.VECurncyCode!=OPrw.PInvCurncy) then begin
              if (disperrf) then begin
                RecordCheckError(1217,"",i,"VECode");      
              end;
              res = 1217; 
              goto LOPVcRecordCheck;
            end;
          end;
        end;
        if (nonblank(OPrw.PayMode)) then begin
          cht = PMCheckType(OPrw.PayMode,tstr,tstr);
        end else begin
          cht = PMCheckType(OPp.PayMode,tstr,tstr);
        end;        
        switch (cht) begin
          case 1:
            if (OPrw.ChequeNr!=-1) then begin                
              Checkr.SerNr = OPrw.ChequeNr;
              if (ReadFirstMain(Checkr,1,true)==false) then begin
                if (disperrf) then begin
                  RecordCheckError(1279,"",i,"ChequeNr");      
                end;
                res = 1279; 
                goto LOPVcRecordCheck;
              end else begin
                if ((Checkr.Openf!=1) and (OPrw.RecVal>0)) then begin
                  if (disperrf) then begin
                    RecordCheckError(1292,"",i,"ChequeNr");      
                  end;
                  res = 1292; 
                  goto LOPVcRecordCheck;
                end;
              end;
            end else begin
              if (transf or orderedf) then begin
                if (disperrf) then begin
                  RecordCheckError(1854,"",i,"ChequeNr");      
                end;
                res = 1854; 
                goto LOPVcRecordCheck;                
              end;
            end;
          case 2:
            if (OPrw.ChequeNr!=-1) then begin              
              OwnCheckr.SerNr = OPrw.ChequeNr;
              if (ReadFirstMain(OwnCheckr,1,true)==false) then begin
                if (disperrf) then begin
                  RecordCheckError(1279,"",i,"ChequeNr");
                end;
                res = 1279; 
                goto LOPVcRecordCheck;
              end else begin
                if (OwnCheckr.Openf!=0) then begin
                  if (disperrf) then begin
                    RecordCheckError(1292,"",i,"ChequeNr");      
                  end;
                  res = 1292; 
                  goto LOPVcRecordCheck;
                end;
                if (blank(OwnCheckr.VECode)) then begin
                  if (disperrf) then begin
                    RecordCheckError(20875,"",i,"ChequeNr");      
                  end;
                  res = 20875; 
                  goto LOPVcRecordCheck;
                end;
              end;
            end else begin
              if (transf or orderedf) then begin
                if (disperrf) then begin
                  RecordCheckError(1854,"",i,"ChequeNr");      
                end;
                res = 1854; 
                goto LOPVcRecordCheck;
              end;
            end;
        end;
        gchk = GetCheck(OPp.PayMode,OPrw.PayMode,OPrw.ChequeNr,tstr,tstr,tstr,amount,td,regdate);
        if (gchk==1 or gchk==2) then begin
          if (transf or orderedf) then begin
            temp = blankval;
            for (j=0; j<rwcnt; j=j+1) begin
              MatRowGet(OPp,j,OP2rw);
              if (OP2rw.ChequeNr==OPrw.ChequeNr) then begin
                if (gchk==GetCheck(OPp.PayMode,OP2rw.PayMode,OP2rw.ChequeNr,tstr,tstr,tstr,amount2,td,regdate)) then begin
                  temp = temp + OP2rw.RecVal;
                end;
              end;
            end;
            if (temp<0) then begin temp = -1*temp; end;
            if (temp!=amount) then begin
              if (disperrf) then begin
                RecordCheckError(1280,"",i,"ChequeNr");      
              end;
              res = 1280; 
              goto LOPVcRecordCheck;
            end;
          end;
        end;
        if (blank(OPrw.BankVal)) then begin
          if (disperrf) then begin
            RecordCheckError(1210,"",i,"RecVal");      
          end;
          res = 1210; 
          goto LOPVcRecordCheck;
        end;
    end;    
  end;
  if ((stat==updatemode) and(OPp.OrderedFlag==1) and (OP2p.OrderedFlag==0)) or
    ((stat==insertmode) and (OPp.OrderedFlag==1)) then begin
    if (UserCanAction("OPOrder",true)==false) then begin
      if (disperrf) then begin
        RecordCheckError(1274,StringFromStringSet(3,"OPOrder"),-1,"SerNr");
      end;
      res = 1274; 
      goto LOPVcRecordCheck;
    end;
  end;
//  if ((OPp.DoneFlag!=0) or (OPp.OrderedFlag!=0) or (OPp.RejectedFlag!=0)) then begin
LOPVcRecordCheck_GenTrans:;
  if (OPp.DoneFlag!=0) then begin
    if (gentrans==false) then begin transf = false; end;
    if (IsStandardProduct) then begin
      transf = HasIntegratedNL and transf;
    end;
    if (transf) then begin
      if (stat==insertmode) then begin
        errcode = MakeTransFromOP(gTRp,OPp,false);
      end else begin
        errcode = MakeTransFromOP(gTRp,OPp,false);
      end;
      if (errcode!=0) then begin
        if (disperrf) then begin
          RecordCheckError(errcode,"",-1,"SerNr");      
        end;
        res = errcode; 
        goto LOPVcRecordCheck;
      end;
      if ((gTRp.Number>0) and (gTRp.IntYc==OPYc)) then begin
        tstr = CheckTrans(gTRp,2,true);
        if (nonblank(tstr)) then begin
          if (disperrf) then begin
            RecordCheckError(1085,tstr,-1,"SerNr");      
          end;
          res = 1085;
          goto LOPVcRecordCheck;
        end;
        if (disperrf) then begin
          SaveTrans(gTRp);
          AddTTrans_OPVc(gTRp,OPp);
        end;
      end;      
    end;
  end;
LOPVcRecordCheck:;
  if (res!=0) then begin
    OPp.SerNr = oldnr;
  end;
  ValidatePaymentRecord = res;
  return;
end;

global
updating function LongInt OPVcRecordCheck(record OPVc OPp,record OPVc OP2p,LongInt stat,LongInt check)
begin
  LongInt res;
  LongInt oldnr,newnr;

  res = 0;
  if (ValidatePaymentRecord(OPp,OP2p,stat,check,true)!=0) then begin
    res = -1;
  end;
  OPVcRecordCheck = res;
  return;
end;

global
function LongInt OPVcRecordDefaults(var record OPVc OPr,record OPVc OP2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record APAccBlock APAccRec;
  record OPTBlock OPTb;
  
  OPr.SerNr = -1;
  BlockLoad(APAccRec);
  BlockLoad(OPTb);
  OPr.APonTR = APAccRec.APonTR;
  OPr.RegDate = CurrentDate;
  OPr.TransDate = CurrentDate;
  if (SingleUserMode) then begin
    OPr.SerNr = NextSerNr("OPVc",OPr.TransDate,-1,false,"");
  end;
  OPr.OrderedFlag = 0;
  OPr.DoneFlag = 0;
  OPr.SentFlag = 0;
  OPr.StatFlag = 0;
  OPr.Bankfees = OPTb.Bankfees;
  OPr.PayMode = "";
  PastePMInOP(OPr);
  OPVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt OPVcRecordDuplicate(var record OPVc OPr,record OPVc OP2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 255 BankName;
  Integer i,rwcnt;
  row OPVc OPrw;
  
  OPr.SerNr = -1;
  OPr.RegDate = CurrentDate;
  if (SingleUserMode) then begin
    OPr.SerNr = NextSerNr("OPVc",OPr.TransDate,-1,false,"");
  end;
  OPr.OrderedFlag = 0;
  OPr.DoneFlag = 0;
  OPr.SentFlag = 0;
  OPr.StatFlag = 0;
  OPr.RejectedFlag = 0;
  OPr.ExportedFlag = 0;
  OPr.Invalid = 0;
  BankName = OPr.BankName;
  PastePMInOP(OPr);
  OPr.BankName = BankName;
  OPr.AcceptanceBy = "";
  OPr.AcceptanceFYI = "";
  WarnFutureDate(true,OPr.TransDate);
/*
why changing that on Duplicate ?   
  rwcnt = MatRowCnt(OPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    GetFullCurncyRate(OPrw.RecCurncy,OPr.TransDate,OPrw.FrRateBankVal,OPrw.ToRateB1BankVal,OPrw.ToRateB2BankVal,OPrw.BaseRate1BankVal,OPrw.BaseRate2BankVal); 
    MatRowPut(OPr,i,OPrw);
    OPVc_PasteBankCurncy(OPr,i);
  end;
*/  
  OPVcRecordDuplicate = res; 
  RETURN;
END;
