external function Integer FEIVFormRowFields(Integer);
external function Integer InvoiceRowFields(Integer);
external function Integer ActFormRowFields(Integer);
external function Integer AT2MovFormRowFields(Integer);
external function Integer AT2RevFormRowFields(Integer);
external function Integer AT2TakeFormRowFields(Integer);
external function Integer AT2WrofFormRowFields(Integer);
external function Integer BPChangeFormRowFields(Integer);
external function Integer CLInFormRowFields(Integer);
external function Integer CLIn1FormRowFields(Integer);
external function Integer CLIn2FormRowFields(Integer);
external function Integer CLInColFormRowFields(Integer);
external function Integer CLOutColFormRowFields(Integer);
external function Integer CLOutFormRowFields(Integer);
external function Integer ContQuoteFormRowFields(Integer);
external function Integer ContractFormRowFields(Integer);
external function Integer InsuranceFormRowFields(Integer);
external function Integer TransNotFormRowFields(Integer);
external function Integer ContSalesFormRowFields(Integer);
external function Integer ContDeliveryFormRowFields(Integer);
external function Integer CustomsFormRowFields(Integer);
external function Integer ExcurDocFormRowFields(Integer);
external function Integer ExpFormRowFields(Integer);
external function Integer IntORFormRowFields(Integer);
external function Integer InvCashFormRowFields(Integer);
external function Integer IPDFormRowFields(Integer);
external function Integer JobFormRowFields(Integer);
external function Integer MailFormRowFields(Integer);
external function Integer LetFormRowFields(Integer);
external function Integer OrdFormRowFields(Integer);
external function Integer PersPayFormRowFields(Integer);
external function Integer POFormRowFields(Integer);
external function Integer ProjectInfoFormRowFields(Integer);
external function Integer PurchaseFormRowFields(Integer);
external function Integer QTFormRowFields(Integer);
external function Integer SDFormRowFields(Integer);
external function Integer SVOFormRowFields(Integer);
external function Integer SVGMFormRowFields(Integer);
external function Integer ARSFormRowFields(Integer);
external function Integer TimeSheetFormRowFields(Integer);
external function Integer WayListFormRowFields(Integer);
external function Integer WOrdFormRowFields(Integer);
external function Integer ShFormRowFields(Integer);
external function Integer StockMovFormRowFields(Integer);
external function Integer TBBudgetFormRowFields(Integer);

function Integer OldFormMatField(string formtype,Integer fieldSetNr)
BEGIN
  Integer res;
  
  switch (formtype) begin
    case "ActForm": res = ActFormRowFields(fieldSetNr);
    case "AT2MovForm": res = AT2MovFormRowFields(fieldSetNr);
    case "AT2RevForm": res = AT2RevFormRowFields(fieldSetNr);
    case "AT2TakeForm": res = AT2TakeFormRowFields(fieldSetNr);
    case "AT2WrofForm": res = AT2WrofFormRowFields(fieldSetNr);
    case "BPChangeForm": res = BPChangeFormRowFields(fieldSetNr);
    case "CLInForm": res = CLInFormRowFields(fieldSetNr);
    case "CLIn1Form": res = CLIn1FormRowFields(fieldSetNr);
    case "CLIn2Form": res = CLIn2FormRowFields(fieldSetNr);
    case "CLInColForm": res = CLInColFormRowFields(fieldSetNr);
    case "CLOutColForm": res = CLOutColFormRowFields(fieldSetNr);
    case "CLOutForm": res = CLOutFormRowFields(fieldSetNr);
    case "ContQuoteForm": res = ContQuoteFormRowFields(fieldSetNr);
    case "CreditQueryForm": res = ContQuoteFormRowFields(fieldSetNr);
    case "ContractForm": res = ContractFormRowFields(fieldSetNr);
    case "InsuranceForm": res = InsuranceFormRowFields(fieldSetNr);
    case "TransNotForm": res = TransNotFormRowFields(fieldSetNr);
    case "ContSalesForm": res = ContSalesFormRowFields(fieldSetNr);
    case "ContDeliveryForm": res = ContDeliveryFormRowFields(fieldSetNr);
    case "CustomsForm": res = CustomsFormRowFields(fieldSetNr);
    case "ExcurDocForm": res = ExcurDocFormRowFields(fieldSetNr);
    case "ExpForm": res = ExpFormRowFields(fieldSetNr);
    case "FEIVForm": res = FEIVFormRowFields(fieldSetNr);
    case "IntORForm": res = IntORFormRowFields(fieldSetNr);
    case "InvCashForm": res = InvCashFormRowFields(fieldSetNr);
    case "InvForm": res = InvoiceRowFields(fieldSetNr);
    case "Inv1Form": res = InvoiceRowFields(fieldSetNr);
    case "Inv2Form": res = InvoiceRowFields(fieldSetNr);
    case "Inv3Form": res = InvoiceRowFields(fieldSetNr);
    case "CashInvForm": res = InvoiceRowFields(fieldSetNr);
    case "CashInvRecPRTForm": res = InvoiceRowFields(fieldSetNr);
    case "CredInvForm": res = InvoiceRowFields(fieldSetNr);
    case "IIInvForm": res = InvoiceRowFields(fieldSetNr);
    case "ProjInvForm": res = InvoiceRowFields(fieldSetNr);
    case "IPDForm": res = IPDFormRowFields(fieldSetNr);
    case "JobForm": res = JobFormRowFields(fieldSetNr);
    case "MailForm": res = MailFormRowFields(fieldSetNr);
    case "LetForm": res = LetFormRowFields(fieldSetNr);
    case "OrdForm": res = OrdFormRowFields(fieldSetNr);
    case "PersPayForm": res = PersPayFormRowFields(fieldSetNr);
    case "POForm": res = POFormRowFields(fieldSetNr);
    case "ProjectInfoForm": res = ProjectInfoFormRowFields(fieldSetNr);
    case "PurchaseForm": res = PurchaseFormRowFields(fieldSetNr);
    case "QTForm": res = QTFormRowFields(fieldSetNr);
    case "SDForm": res = SDFormRowFields(fieldSetNr);
    case "SVOForm": res = SVOFormRowFields(fieldSetNr);
    case "SVGMForm": res = SVGMFormRowFields(fieldSetNr);
    case "ARSForm": res = ARSFormRowFields(fieldSetNr);
    case "DebtorLetForm": res = ARSFormRowFields(fieldSetNr);
    case "APSForm": res = ARSFormRowFields(fieldSetNr);
    case "CuPerForm": res = ARSFormRowFields(fieldSetNr);
    case "TimeSheetForm": res = TimeSheetFormRowFields(fieldSetNr);
    case "WayListForm": res = WayListFormRowFields(fieldSetNr);
    case "WOrdForm": res = WOrdFormRowFields(fieldSetNr);
    case "Sh1Form": res = ShFormRowFields(fieldSetNr);
    case "Sh2Form": res = ShFormRowFields(fieldSetNr);
    case "Sh3Form": res = ShFormRowFields(fieldSetNr);
    case "RetForm": res = ShFormRowFields(fieldSetNr);
    case "StockMovForm": res = StockMovFormRowFields(fieldSetNr);
    case "TBBudgetForm": res = TBBudgetFormRowFields(fieldSetNr);
  end;
  OldFormMatField = res;
  RETURN;
END;

procedure SetFormRowFields(var record DocVc Docp,string formtype)
BEGIN
  row DocVc Docrw;
  Integer i,rwcnt;

  rwcnt = MatRowCnt(Docp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Docp,i,Docrw);
    if (Docrw.formatNr==0) and (Docrw.unitType!=6) then begin
      Docrw.formatNr = OldFormMatField(formtype,Docrw.fieldSetNr);
      MatRowPut(Docp,i,Docrw);
    end;
  end;
  RETURN;
END;

procedure ChangeFormFields(var record DocVc Docp)
begin
  row DocVc Docrw;
  Integer i,rwcnt;

  switch (Docp.DocType) begin
    case APSFORMPS: 
      rwcnt = MatRowCnt(Docp);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Docp,i,Docrw);
        switch (Docrw.fieldSetNr) begin
          case F_KUNDNR: Docrw.fieldSetNr = F_LEVERANTOR;
          case F_KUNDNAMN: Docrw.fieldSetNr = F_LEVNAMN;
          case F_KUNDFAX: Docrw.fieldSetNr = F_LEVFAX;
          case F_KUNDTEL: Docrw.fieldSetNr = F_LEVPHONE;
          case F_KUNDMOMSNR: Docrw.fieldSetNr = F_LEVVATNR;
          case F_REGNUMBER1: Docrw.fieldSetNr = F_VEREGNUMBER1;
          case F_REGNUMBER2: Docrw.fieldSetNr = F_VEREGNUMBER2;
        end;
        MatRowPut(Docp,i,Docrw);
      end;
  end;    
  return;
end;

global
updating function LongInt DocVcRecordImport(var record DocVc Docp,record DocVc Doc2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 255 formn;

  switch (Docp.DocType) begin
    case OPDFORMPS: formn = "OPDForm";
    case INV1FORMPS: formn = "InvForm";
    case INV2FORMPS: formn = "InvForm";
    case INV3FORMPS: formn = "InvForm";
    case INVFORMPS: formn = "InvForm";
    case REMFORMPS: formn = "RemForm";
    case OR2FORMPS: formn = "Or2Form";
    case ORDFORMPS: formn = "OrdForm";
    case POFORMPS: formn = "POForm";
    case QTFORMPS: formn = "QTForm";
    case CUPERFORMPS: formn = "CuPerForm";
    case ARSFORMPS: formn = "ARSForm";    
    case SH3FORMPS: formn = "Sh3Form";
    case SH2FORMPS: formn = "Sh2Form";
    case SH1FORMPS: formn = "Sh1Form";
    case STOCKMOVFORMPS: formn = "StockMovForm";
    case ITEMLABELFORMPS: formn = "ItemLabelForm";
    case PURCHASEFORMPS: formn = "PurchaseForm";
    case PULABFORMPS: formn = "PULabForm";
    case PROJECTFORMPS: formn = "ProjectForm";
    case PRODORDERFORMPS: formn = "ProdOrderForm";
    case ATLABFORMPS: formn = "";
    case ADRLABFORMPS: formn = "AdrLabForm";
    case TIMESHEETFORMPS: formn = "TimeSheetForm";
    case CONTRACTFORMPS: formn = "ContractForm";
    case CLINFORMPS: formn = "CLInForm";
    case CLOUTFORMPS: formn = "CLOutForm";
    case INKASSOFORMPS: formn = "";
    case PERSPAYFORMPS: formn = "PersPayForm";
    case SDFORMPS: formn = "SDForm";
    case LETFORMPS: formn = "LetForm";
    case ACTFORMPS: formn = "ActForm";
    case STRFORMPS: formn = "";
    case SORFORMPS: formn = "";
    case CONTTRANSFERFORMPS: formn = "TransNotForm";
    case CONTQUOTEFORMPS: formn = "ContQuoteForm";
    case CONTCREDITFORMPS: formn = "CreditQueryForm";
    case CONTDELIVERYFORMPS: formn = "ContDeliveryForm";
    case CONTINSURANCEFORMPS: formn = "InsuranceForm";
    case CONTSALESFORMPS: formn = "ContSalesForm";
    case PFFORMPS: formn = "";
    case SVOFORMPS: formn = "SVOForm";
    case HWCONTRACTFORMPS: formn = "HWContractForm";
    case WSFORMPS: formn = "WSForm";
    case WOFORMPS: formn = "WOrdForm";
    case TBBUDGETFORMPS: formn = "TBBudgetForm";
    case EXPGETFORMPS: formn = "ExpForm";
    case IPDFORMPS: formn = "IPDForm";
    case VATREPFORMPS: formn = "VATRepForm";
    case PROJECTINFOFORMPS: formn = "ProjectInfoForm";
    case ARDFORMPS: formn = "ARSForm";
    case JOBFORMPS: formn = "";
    case PLACELABFORMPS: formn = "SVOForm";
    case OWNCHECKFORMPS: formn = "";
    case RESLETFORMPS: formn = "";
    case PLACELETFORMPS: formn = "SVOForm";
    case INTRASTATFORMPS: formn = "InStaForm";
    case CLIN1FORMPS: formn = "CLIn1Form";
    case CLIN2FORMPS: formn = "CLIn2Form";
    case CLOUT1FORMPS: formn = "CLOut1Form";
    case CLOUT2FORMPS: formn = "CLOut2Form";
    case CLOUT3FORMPS: formn = "CLOut3Form";
    case MAILFORMPS: formn = "MailForm";
    case OP2DFORMPS: formn = "OP2DForm";
    case CUSTOMSFORMPS: formn = "CustomsForm";
    case CONTLABFORMPS: formn = "ContLabForm";
    case BUDGETQTFORMPS: formn = "";
    case BPCHANGEFORMPS: formn = "BPChangeForm";
    case AT2REVFORMPS: formn = "AT2RevForm";
    case AT2PUFORMPS: formn = "AT2PUForm";
    case AT2MOVFORMPS: formn = "AT2TakeForm";
    case AT2RESPFORMPS: formn = "AT2TakeForm";
    case AT2WROFFORMPS: formn = "AT2WrofForm";
    case AT2DPRFORMPS: formn = "AT2DprForm";
    case AT2TAKEFORMPS: formn = "AT2TakeForm";
    case POQTFORMPS: formn = "POQTForm";
    case INTORFORMPS: formn = "IntORForm";
    case RETFORMPS: formn = "RetForm";
    case CASHINVFORMPS: formn = "CashInvForm";
    case CASHINVRECPRTFORMPS: formn = "CashInvRecPRTForm";
    case INTRASTATPUFORMPS: formn = "InStaPuForm";
    case AT2FORMPS: formn = "AT2Form";
    case VIFORMPS: formn = "VIForm";
    case APSFORMPS: 
      formn = "APSForm";
      ChangeFormFields(Docp);
    case CLINCOLFOMRPS: formn = "CLInColForm";
    case CLOUTCOLFOMRPS: formn = "CLOutColForm";
    case PRELPUFORMPS: formn = "PrelPUForm";
    case WAYLISTFORMPS: formn = "WayListForm";
    case RENTRESFORMPS: formn = "RentResForm";
    case AGREEMENTFORMPS: formn = "AgreementForm";
    case DETAGREEMENTFORMPS: formn = "";
    case COLLECTIONFORMPS: formn = "CollectionForm";
    case INTMOVEMENTFORMPS: formn = "";
    case STOCKTRFORMPS: formn = "";
    case ITEMSINFORMPS: formn = "";
    case ITEMSOUTFORMPS: formn = "";
    case FEIVFORMPS: formn = "FEIVForm";
    case PRODLABELFORMPS: formn = "ProdLabelForm";
    case PRODORDER2FORMPS: formn = "ProdOrderForm";
    case RESTACCFORMPS: formn = "RestAccForm";
    case IVCASHFORMPS: formn = "InvCashForm";
    case TRANSFERFORMPS: formn = "TransferDocForm";    
    case INTIVFORMPS: formn = "IntIVForm";    
    case INTRASTATVIFORMPS: formn = "InStaPuForm";
    case PRODORDFORMPS: formn = "ProdOrderForm";
    case POREMFORMPS: formn = "PORemForm";
    case RETPUFORMPS: formn = "RetPurchaseForm";
    case VATIVFORMPS: formn = "VATIVForm";
    case VATVIFORMPS: formn = "VATVIForm";
    case TAXREPFORMPS: formn = "TaxRepForm";
    case ROUTINGPRFORMPS: formn = "RoutingPrForm";
    case ROUTINGPRORDFORMPS: formn = "RoutingPrOrdForm";
    case BATCHDEPFORMPS: formn = "BatchDepForm";
    case STOCKMOVINVFORMPS: formn = "StockMovInvForm";
  end;
  SetFormRowFields(Docp,formn);
  DocVcRecordImport = res;
  RETURN;
END;
