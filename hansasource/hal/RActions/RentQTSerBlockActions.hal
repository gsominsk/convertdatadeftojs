external function Integer SerBlockCheckOverlap(LongInt,LongInt,LongInt,LongInt);

global
updating function LongInt RentAgrSerBlockCheck(var record RentAgrSerBlock RentAgrSerr,record RentAgrSerBlock RentAgrSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row RentAgrSerBlock RentAgrSerrw;
  row RentAgrSerBlock RentAgrSer2rw;
  
  res = 0;
  rwcnt = MatRowCnt(RentAgrSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(RentAgrSerr,i,RentAgrSerrw);
    if (RentAgrSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LRentAgrSerBlockCheck;        
    end;
    if (RentAgrSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LRentAgrSerBlockCheck;        
    end;
    if ((nonblankdate(RentAgrSerrw.StartDate)) and (nonblankdate(RentAgrSerrw.EndDate))) then begin
      if (RentAgrSerrw.StartDate>RentAgrSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LRentAgrSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(RentAgrSerr,j,RentAgrSer2rw);
      res = SerBlockCheckOverlap(RentAgrSerrw.TSerStart,RentAgrSerrw.TSerEnd,RentAgrSer2rw.TSerStart,RentAgrSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LRentAgrSerBlockCheck;        
      end;
    end;        
  end;  
LRentAgrSerBlockCheck:;  
  RentAgrSerBlockCheck = res;
  return;
end;

global
updating function LongInt RentQTSerBlockCheck(var record RentQTSerBlock RentQTSerr,record RentQTSerBlock RentQTSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row RentQTSerBlock RentQTSerrw;
  row RentQTSerBlock RentQTSer2rw;
  
  res = 0;
  rwcnt = MatRowCnt(RentQTSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(RentQTSerr,i,RentQTSerrw);
    if (RentQTSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LRentQTSerBlockCheck;        
    end;
    if (RentQTSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LRentQTSerBlockCheck;        
    end;
    if ((nonblankdate(RentQTSerrw.StartDate)) and (nonblankdate(RentQTSerrw.EndDate))) then begin
      if (RentQTSerrw.StartDate>RentQTSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LRentQTSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(RentQTSerr,j,RentQTSer2rw);
      res = SerBlockCheckOverlap(RentQTSerrw.TSerStart,RentQTSerrw.TSerEnd,RentQTSer2rw.TSerStart,RentQTSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LRentQTSerBlockCheck;        
      end;
    end;        
  end;  
LRentQTSerBlockCheck:;  
  RentQTSerBlockCheck = res;
  return;
end;

global
updating function LongInt RentResSerBlockCheck(var record RentResSerBlock RentResSerr,record RentResSerBlock RentResSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row RentResSerBlock RentResSerrw;
  row RentResSerBlock RentResSer2rw;
  
  res = 0;
  rwcnt = MatRowCnt(RentResSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(RentResSerr,i,RentResSerrw);
    if (RentResSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LRentResSerBlockCheck;        
    end;
    if (RentResSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LRentResSerBlockCheck;        
    end;
    if ((nonblankdate(RentResSerrw.StartDate)) and (nonblankdate(RentResSerrw.EndDate))) then begin
      if (RentResSerrw.StartDate>RentResSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LRentResSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(RentResSerr,j,RentResSer2rw);
      res = SerBlockCheckOverlap(RentResSerrw.TSerStart,RentResSerrw.TSerEnd,RentResSer2rw.TSerStart,RentResSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LRentResSerBlockCheck;        
      end;
    end;        
  end;  
LRentResSerBlockCheck:;  
  RentResSerBlockCheck = res;
  return;
end;
