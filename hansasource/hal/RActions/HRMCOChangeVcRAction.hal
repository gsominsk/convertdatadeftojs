global
updating function LongInt HRMCOChangeVcRecordCheck(record HRMCOChangeVc HRMCOChanger,record HRMCOChangeVc HRMCOChange2r,LongInt stat,LongInt check)
begin
  LongInt oldnr;
  LongInt res;
  record CUVc CUr;

  res = 0;
  oldnr = HRMCOChanger.SerNr;
  if (HRMCOChanger.SerNr<=0) then begin
    HRMCOChanger.SerNr = NextSerNr("HRMCOChangeVc",HRMCOChanger.TransDate,-1,false,"");
  end;
  if (UserCanAction("HRMCOChangeOK",true)==false) then begin
    if (HRMCOChanger.OKFlag!=0) then begin
      RecordCheckError(1274,StringFromStringSet(3,"HRMCOChangeOK"),-1,"SerNr");      
      res = -1; 
      goto LHRMCOChangeVcRecordCheck;
    end;
  end;
  CUr.Code = HRMCOChanger.Employee;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    RecordCheckError(1120,HRMCOChanger.Employee,-1,"Employee");      
    res = -1;
    goto LHRMCOChangeVcRecordCheck;
  end;
  if (CUr.EmployeeType==0) then begin
    RecordCheckError(1120,HRMCOChanger.Employee,-1,"Employee");      
    res = -1; 
    goto LHRMCOChangeVcRecordCheck;
  end;
  if (CUr.blockedFlag!=0) then begin
    RecordCheckError(1265,HRMCOChanger.Employee,-1,"Employee");      
    res = -1;
    goto LHRMCOChangeVcRecordCheck;
  end;
LHRMCOChangeVcRecordCheck:;  
  if (res!=0) then begin HRMCOChanger.SerNr = oldnr; end;
  HRMCOChangeVcRecordCheck = res;
  return;
end;

global
function LongInt HRMCOChangeVcRecordDefaults(var record HRMCOChangeVc HRMCOChanger,record HRMCOChangeVc HRMCOChange2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  HRMCOChanger.SerNr = -1;
  HRMCOChanger.TransDate = CurrentDate;
  HRMCOChangeVcRecordDefaults = res; 
  return;
end;

global
function LongInt HRMCOChangeVcRecordInIndex(record HRMCOChangeVc HRMCOChanger,string indexname)
begin
  LongInt res;
  
  res = 1;
  if (HRMCOChanger.TerminatedFlag!=0) then begin 
    if (indexname=="ActClass") then begin res = 0; end;
  end;
  HRMCOChangeVcRecordInIndex = res;
  return;
end;

global
function LongInt HRMCOChangeVcRecordUpdateClient(LongInt wn,var record HRMCOChangeVc HRMCOChangep,record HRMCOChangeVc HRMCOChange2p,LongInt stat,LongInt long4)
begin
  LongInt res;

  UpdateBrowses("HRMCOChangeVc");
  HRMCOChangeVcRecordUpdateClient = res;
  return;
end;

/*
design change  
updating procedure UpdateHRMCO(record HRMCOChangeVc HRMCOChanger)
begin
  record HRMCOVc HRMCOr;
  record HRMCOVc oldHRMCOr;
  
  HRMCOr.SerNr = HRMCOChanger.HRMCOSerNr;
  if (ReadFirstMain(HRMCOr,1,true)) then begin
    RecordCopy(oldHRMCOr,HRMCOr);
    HRMCOr.Name = HRMCOChanger.Name;
    HRMCOr.Class = HRMCOChanger.Class;
    HRMCOr.JobTitle = HRMCOChanger.JobTitle;
    HRMCOr.SalaryType = HRMCOChanger.SalaryType;
    HRMCOr.GrossSalary = HRMCOChanger.GrossSalary;
    HRMCOr.CurncyCode = HRMCOChanger.CurncyCode;
    HRMCOr.DepCode = HRMCOChanger.DepCode;
    HRMCOr.DepCode = HRMCOChanger.DepCode;
    HRMCOr.LeaveScheme = HRMCOChanger.LeaveScheme;
    HRMCOr.Reason = HRMCOChanger.Reason;
    RecordUpdate(oldHRMCOr,HRMCOr,false);
  end;
  return;
end;
*/

global
updating function LongInt HRMCOChangeVcRecordUpdateAfter(var record HRMCOChangeVc HRMCOChanger,record HRMCOChangeVc HRMCOChange2r,LongInt stat,LongInt long4)
begin
  LongInt res;

/*
design change  
  if ((HRMCOChanger.OKFlag!=0) and (HRMCOChange2r.OKFlag==0)) then begin
    UpdateHRMCO(HRMCOChanger);
  end;
*/  
  HRMCOChangeVcRecordUpdateAfter = res;
  return;
end;

global
function LongInt HRMCOChangeVcRecordRemoveTest(var record HRMCOChangeVc HRMCOCr,record HRMCOChangeVc HRMCOC2r,LongInt long3,LongInt long4)
begin
  LongInt res;

  res = 1;
  if (HRMCOCr.OKFlag!=0) then begin
    res = 0;
  end;
  HRMCOChangeVcRecordRemoveTest = res; 
  return;
end;
