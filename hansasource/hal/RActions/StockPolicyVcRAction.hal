external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);

function Boolean CheckIfStockPolicyExists(record StockPolicyVc SPp)
begin
  Boolean res;
  record StockPolicyVc SPr;
  Boolean found,testf;
  Integer segs;
  string 255 ckey;
  
  segs = 2;
  ckey = "ItemStartDate";
  if (nonblank(SPp.Class)) then begin
    SPr.Class = SPp.Class;
    segs = 3;
    ckey = "ItemClass";
  end;
  found = true;
  SPr.ArtCode = SPp.ArtCode;
  SPr.StartDate = SPp.StartDate;
  while (LoopKey(ckey,SPr,segs,found)) begin
    if (SPr.ArtCode!=SPp.ArtCode) then begin 
      found = false;
    end;
    if (nonblank(SPp.Class)) then begin
      if (SPr.Class!=SPp.Class) then begin 
        found = false;
      end;
    end;
    if (SPr.StartDate>SPp.EndDate) then begin 
      found = false;
    end;
    testf = found;
    if (SPr.EndDate<SPp.StartDate) then begin  testf = false; end;
    if (SPr.SerNr==SPp.SerNr) then begin testf = false; end;
    if (SPr.OKFlag==0) then begin testf = false; end;
    if (testf) then begin
      res = true;
    end;
  end;
  ResetLoop(SPr);

  segs = 2;
  ckey = "ItemEndDate";
  if (nonblank(SPp.Class)) then begin
    SPr.Class = SPp.Class;
    segs = 3;
    ckey = "ItemClassEndDate";
  end;
  found = true;
  SPr.ArtCode = SPp.ArtCode;
  SPr.EndDate = SPp.StartDate;
  while (LoopKey(ckey,SPr,segs,found)) begin
    if (SPr.ArtCode!=SPp.ArtCode) then begin 
      found = false;
    end;
    if (nonblank(SPp.Class)) then begin
      if (SPr.Class!=SPp.Class) then begin 
        found = false;
      end;
    end;
    testf = found;
    if (DateInRange(SPp.StartDate,SPr.StartDate,SPr.EndDate)==false) then begin
      if (DateInRange(SPp.EndDate,SPr.StartDate,SPr.EndDate)==false) then begin
        testf = false;
      end;
    end;
    if (SPr.SerNr==SPp.SerNr) then begin testf = false; end;
    if (testf) then begin
      res = true;
    end;
  end;
  CheckIfStockPolicyExists = res;
  return;
end;

global
function LongInt StockPolicyVcRecordDefaults(var record StockPolicyVc SPr,record StockPolicyVc SP2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  SPr.SerNr = -1;
  StockPolicyVcRecordDefaults = res; 
  return;
end;

global
function LongInt StockPolicyVcRecordDuplicate(var record StockPolicyVc SPr,record StockPolicyVc SP2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  SPr.SerNr = -1;
  SPr.OKFlag = 0;
  StockPolicyVcRecordDuplicate = res; 
  return;
end;

global
function LongInt StockPolicyVcRecordCheck(var record StockPolicyVc SPp,record StockPolicyVc SP2p,LongInt stat,LongInt check)
begin
  LongInt res;
  record INVc INr;
  Integer insertmode,updatemode;
  Boolean transf;
  
  res = 0;
  insertmode = 1;//Rs_insert
  updatemode = 2;//Rs_update
  if (SPp.SerNr<=0) then begin
    SPp.SerNr = NextSerNr("StockPolicyVc",SPp.StartDate,-1,false,"");
  end;
  if (SPp.OKFlag==1) then begin
    if (stat==insertmode) then begin transf = true; end;
    if (stat==updatemode) then begin
      if (SP2p.OKFlag==0) then begin transf = true; end;
    end;
  end;
  if (transf) then begin
    if (UserCanAction("StockPolicyOK",true)==false) then begin
      RecordCheckError(1274,StringFromStringSet(3,"StockPolicyOK"),-1,"SerNr");      
      res = -1; 
      goto LStockPolicyVcRecordCheck;
    end;
  end;  
  if (SPp.StartDate>SPp.EndDate) then begin 
    RecordCheckError(2246,"",-1,"StartDate");      
    res = -1; 
    goto LStockPolicyVcRecordCheck;
  end;
  if (ReadFirstItem(SPp.ArtCode,INr,false,false)==false) then begin
    RecordCheckError(1290,"",-1,"ArtCode");      
    res = -1; 
    goto LStockPolicyVcRecordCheck;
  end;
  if (CheckIfStockPolicyExists(SPp)) then begin
    RecordCheckError(1547,"",-1,"StartDate");      
    res = -1; 
    goto LStockPolicyVcRecordCheck;
  end;
  if (SPp.MinDays>SPp.MaxDays) then begin
    RecordCheckError(2246,"",-1,"MinDays");      
    res = -1; 
    goto LStockPolicyVcRecordCheck;
  end;
LStockPolicyVcRecordCheck:;
  StockPolicyVcRecordCheck = res;
  return;
end;


global
function LongInt StockPolicyVcRecordSave(var record StockPolicyVc StockPolicyr,record StockPolicyVc StockPolicy2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  StockPolicyr.DateChanged = CurrentDate;
  StockPolicyVcRecordSave = res;
  RETURN;
END;

global
function LongInt StockPolicyVcRecordUpdate(var record StockPolicyVc StockPolicyr,record StockPolicyVc StockPolicy2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  StockPolicyr.DateChanged = CurrentDate;
  StockPolicyVcRecordUpdate = res;
  RETURN;
END;

