external procedure GetMaxMinRate(string,var val,var val,var val,var val,var val,var val);
external function Boolean UseOldRate(record BaseCurBlock);
external procedure SwapM4Val(var val,var val);

global
function LongInt ERVcRecordDefaults(var record ERVc ERr,record ERVc ER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  ERr.Date = CurrentDate;
  ERr.FrRate = blankval;
  ERr.ToRate1 = blankval;
  ERr.ToRate2 = blankval;
  ERVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt ERVcRecordDuplicate(var record ERVc ERr,record ERVc ER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  ERr.Date = CurrentDate;
  ERVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt ERVcRecordRemoveTest(var record ERVc ERr,record ERVc ER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  res = 1;
  if (ERr.Date!=CurrentDate) then begin
    res = 0;
  end;
  ERVcRecordRemoveTest = res; 
  RETURN;
END;

global
function LongInt ERVcRecordImport(var record ERVc ERr,record ERVc ER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Boolean gBase1ToBase2;
  record ConvMasterBlock cvm;
  val to1,to2;
      
  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    to1 = ERr.ToRate1;
    to2 = ERr.ToRate2;
    SwapM4Val(to1,to2);
    ERr.ToRate1 = to1;
    ERr.ToRate2 = to2;
  end;
  ERVcRecordImport = res;
  RETURN;
END;

global
function LongInt ERVcRecordCheck(var record ERVc ERr,record ERVc ER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record CurncyCodeVc ccr;
  val maxfr,maxto1,maxto2;
  val minfr,minto1,minto2;
  record BaseCurBlock bascur;
  Boolean oldrate;
       
  res = 0;     
  BlockLoad(bascur);  
  oldrate = UseOldRate(bascur);
  ccr.CurncyCode = ERr.CurncyCode;
  if (ReadFirstMain(ccr,1,true)==false) then begin
    RecordCheckError(1260,"",-1,"CurncyCode");      
    res = -1; 
    goto LERVcRecordCheck;
  end;
  if (blankdate(ERr.Date)) then begin
    RecordCheckError(1058,"",-1,"Date");      
    res = -1; 
    goto LERVcRecordCheck;
  end;
  if (oldrate==false) then begin
    if (ERr.FrRate==0) then begin
      RecordCheckError(1058,"",-1,"FrRate");      
      res = -1; 
      goto LERVcRecordCheck;
    end;
  end;
  if ((ERr.ToRate1!=0) and (ERr.ToRate2!=0)) then begin
    RecordCheckError(1259,"",-1,"ToRate1");      
    res = -1; 
    goto LERVcRecordCheck;
  end;
  if ((ERr.ToRate1==0) and (ERr.ToRate2==0)) then begin
    RecordCheckError(1264,"",-1,"ToRate1");      
    res = -1; 
    goto LERVcRecordCheck;
  end;
  GetMaxMinRate(ccr.CurncyCode,maxfr,maxto1,maxto2,minfr,minto1,minto2);
//  if (oldrate==false) then begin//Why ? 
    if (maxfr!=0) then begin
      if (ERr.FrRate>maxfr) then begin
        RecordCheckError(1261,"",-1,"FrRate");      
        res = -1; 
        goto LERVcRecordCheck;
      end;
    end;
    if (minfr!=0) then begin
      if (ERr.FrRate<minfr) then begin
        RecordCheckError(1262,"",-1,"FrRate");      
        res = -1; 
        goto LERVcRecordCheck;
      end;
    end;
//  end;
  if (ERr.ToRate1!=0) then begin
    if (bascur.NotBase1!=0) then begin
      RecordCheckError(1263,"",-1,"ToRate1");      
      res = -1; 
      goto LERVcRecordCheck;
    end;
    if (maxto1!=0) then begin
      if (ERr.ToRate1>maxto1) then begin
        RecordCheckError(1261,"",-1,"ToRate1");      
        res = -1; 
        goto LERVcRecordCheck;
      end;
    end;
    if (minto1!=0) then begin
      if (ERr.ToRate1<minto1) then begin
        RecordCheckError(1262,"",-1,"ToRate1");      
        res = -1; 
        goto LERVcRecordCheck;
      end;
    end;
  end;
  if (ERr.ToRate2!=0) then begin
    if (oldrate) then begin
      RecordCheckError(1263,"",-1,"ToRate2");      
      res = -1; 
      goto LERVcRecordCheck;
    end else begin
      if (bascur.NotBase2!=0) then begin
        RecordCheckError(1263,"",-1,"ToRate2");      
        res = -1; 
        goto LERVcRecordCheck;
      end;
      if (maxto2!=0) then begin
        if (ERr.ToRate2>maxto2) then begin
          RecordCheckError(1261,"",-1,"ToRate2");      
          res = -1; 
          goto LERVcRecordCheck;
        end;
      end;
      if (minto2!=0) then begin
        if (ERr.ToRate2<minto2) then begin
          RecordCheckError(1262,"",-1,"ToRate2");      
          res = -1; 
          goto LERVcRecordCheck;
        end;
      end;
    end;
  end;
LERVcRecordCheck:;
  ERVcRecordCheck = res;
  RETURN;
END;

global
function LongInt BaseERVcRecordCheck(var record BaseERVc BaseERr,record BaseERVc BaseER2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record CurncyCodeVc b1ccr;
  record CurncyCodeVc b2ccr;
  record BaseCurBlock BCb;
  val maxb1fr,maxb1to1,maxb1to2;
  val minb1fr,minb1to1,minb1to2;
  val maxb2fr,maxb2to1,maxb2to2;
  val minb2fr,minb2to1,minb2to2;
  
  BlockLoad(BCb);
  res = 0;
  b1ccr.CurncyCode = BCb.BaseCur1;
  if (ReadFirstMain(b1ccr,1,true)==false) then begin
    RecordCheckError(1260,"",-1,"Rate1");      
    res = -1; 
    goto LBaseERVcRecordCheck;
  end;
  b2ccr.CurncyCode = BCb.BaseCur2;
  if (ReadFirstMain(b2ccr,1,true)==false) then begin
    RecordCheckError(1260,"",-1,"Rate2");      
    res = -1; 
    goto LBaseERVcRecordCheck;
  end;
  GetMaxMinRate(b1ccr.CurncyCode,maxb1fr,maxb1to1,maxb1to2,minb1fr,minb1to1,minb1to2);
  
  if (maxb1fr!=0) then begin
    if (BaseERr.Rate1>maxb1fr) then begin
      RecordCheckError(1261,"",-1,"Rate1");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
  if (minb1fr!=0) then begin
    if (BaseERr.Rate1<minb1fr) then begin
      RecordCheckError(1262,"",-1,"Rate1");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
/*  
  if (maxb1to1!=0) then begin
    if (BaseERr.Rate1>maxb1to1) then begin
      RecordCheckError(1261,"",-1,"ToRate1");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
  if (minb1to1!=0) then begin
    if (BaseERr.Rate1<minb1to1) then begin
      RecordCheckError(1262,"",-1,"ToRate1");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
   if (maxb1to2!=0) then begin
    if (BaseERr.Rate1>maxb1to2) then begin
      RecordCheckError(1261,"",-1,"ToRate2");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
  if (minb1to2!=0) then begin
    if (BaseERr.Rate1<minb1to2) then begin
      RecordCheckError(1262,"",-1,"ToRate2");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
*/
  GetMaxMinRate(b2ccr.CurncyCode,maxb2fr,maxb2to1,maxb2to2,minb2fr,minb2to1,minb2to2);
  
  if (maxb2fr!=0) then begin
    if (BaseERr.Rate2>maxb2fr) then begin
      RecordCheckError(1261,"",-1,"Rate2");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
  if (minb2fr!=0) then begin
    if (BaseERr.Rate2<minb2fr) then begin
      RecordCheckError(1262,"",-1,"Rate2");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
/*  
  if (maxb2to1!=0) then begin
    if (BaseERr.Rate1>maxb2to1) then begin
      RecordCheckError(1261,"",-1,"ToRate1");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
  if (minb2to1!=0) then begin
    if (BaseERr.Rate1<minb2to1) then begin
      RecordCheckError(1262,"",-1,"ToRate1");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
   if (maxb2to2!=0) then begin
    if (BaseERr.Rate1>maxb2to2) then begin
      RecordCheckError(1261,"",-1,"ToRate2");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
  if (minb2to2!=0) then begin
    if (BaseERr.Rate1<minb2to2) then begin
      RecordCheckError(1262,"",-1,"ToRate2");      
      res = -1; 
      goto LBaseERVcRecordCheck;
    end;
  end;
*/
 
LBaseERVcRecordCheck:;
  BaseERVcRecordCheck = res;
  return;
end;
