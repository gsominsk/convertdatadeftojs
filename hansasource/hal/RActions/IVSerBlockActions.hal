global
function Integer SerBlockCheckOverlap(LongInt TSerStart,LongInt TSerEnd,LongInt TSerStart2,LongInt TSerEnd2)
begin
  Integer res;
  
  if ((TSerStart>=TSerStart2) and (TSerStart<=TSerEnd2)) then begin
    res = 1564;
    goto LSerBlockCheckOverlap;        
  end;
  if ((TSerEnd>=TSerStart2) and (TSerEnd<=TSerEnd2)) then begin
    res = 1564;
    goto LSerBlockCheckOverlap;        
  end;
  if ((TSerStart<=TSerStart2) and (TSerEnd>=TSerEnd2)) then begin
    res = 1564;
    goto LSerBlockCheckOverlap;        
  end;
LSerBlockCheckOverlap:;  
  SerBlockCheckOverlap = res;
  return;
end;

global
updating function LongInt IVSerBlockCheck(var record IVSerBlock IVSerr,record IVSerBlock IVSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row IVSerBlock IVSerrw;
  row IVSerBlock IVSer2rw;
  record MainCLBlock MainCLRec;
  record PMBlock PMRec;
  row PMBlock PMrw;  
  record AccBlock ARb;
  record IVVc IVr;
  record IVSerBlock oldIVSerr;
  Integer oldrwcnt;
  LongInt oldtserstart;
  
//IVSer2r  is nil
  res = 0;
  BlockLoad(oldIVSerr);
  BlockLoad(PMRec);
  BlockLoad(MainCLRec);
  BlockLoad(ARb);
  pmrwcnt = MatRowCnt(PMRec);
  rwcnt = MatRowCnt(IVSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(IVSerr,i,IVSerrw);
    if ((ARb.ChronologyforInvNo!=0)) then begin//update
      oldtserstart = -1;
      oldrwcnt = MatRowCnt(oldIVSerr);
      ClearRow(oldIVSerr,IVSer2rw,1);
      if (i<oldrwcnt) then begin
        MatRowGet(oldIVSerr,i,IVSer2rw);
        oldtserstart = IVSer2rw.TSerStart;
      end;
      if (oldtserstart!=IVSerrw.TSerStart) and (oldtserstart!=-1) then begin
        if (IVSerrw.TSerStart!=-1) then begin
          IVr.SerNr = IVSerrw.TSerEnd;
          if (ReadLastMain(IVr,1,false)) then begin
            if (DateInRange(IVr.TransDate,IVSerrw.StartDate,IVSerrw.EndDate)) then begin
              if (IVr.SerNr>oldtserstart) then begin
                IVSerrw.TSerStart = oldtserstart;
                MatRowPut(IVSerr,i,IVSerrw);
                RecordCheckError(1067,"",i,"TSerStart");   
                res = -1;
                goto LIVSerBlockCheck;
              end;
            end;
          end;
        end;
      end;
    end;
    
    if (IVSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LIVSerBlockCheck;        
    end;
    if (IVSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LIVSerBlockCheck;        
    end;
    if ((nonblankdate(IVSerrw.StartDate)) and (nonblankdate(IVSerrw.EndDate))) then begin
      if (IVSerrw.StartDate>IVSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LIVSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(IVSerr,j,IVSer2rw);
      res = SerBlockCheckOverlap(IVSerrw.TSerStart,IVSerrw.TSerEnd,IVSer2rw.TSerStart,IVSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LIVSerBlockCheck;        
      end;
    end;    
    if (MainCLRec.CommonNoSer!=0) then begin
      for (j=0; j<pmrwcnt;j=j+1) begin
        MatRowGet(PMRec,j,PMrw);
        if ((IVSerrw.TSerStart>=PMrw.TSerStartIn) and (IVSerrw.TSerStart<=PMrw.TSerEndIn)) then begin
          RecordCheckError(1564,"",i,"TSerStart");   
          res = -1;
          goto LIVSerBlockCheck;        
        end;
        if ((IVSerrw.TSerEnd>=PMrw.TSerStartIn) and (IVSerrw.TSerEnd<=PMrw.TSerEndIn)) then begin
          RecordCheckError(1564,"",i,"TSerEnd");   
          res = -1;
          goto LIVSerBlockCheck;        
        end;
        if ((IVSerrw.TSerStart>=PMrw.TSerStartOut) and (IVSerrw.TSerStart<=PMrw.TSerEndOut)) then begin
          RecordCheckError(1564,"",i,"TSerStart");   
          res = -1;
          goto LIVSerBlockCheck;        
        end;
        if ((IVSerrw.TSerEnd>=PMrw.TSerStartOut) and (IVSerrw.TSerEnd<=PMrw.TSerEndOut)) then begin
          RecordCheckError(1564,"",i,"TSerEnd");   
          res = -1;
          goto LIVSerBlockCheck;        
        end;        
      end;      
    end;  
  end;  
LIVSerBlockCheck:;  
  IVSerBlockCheck = res;
  return;
end;

