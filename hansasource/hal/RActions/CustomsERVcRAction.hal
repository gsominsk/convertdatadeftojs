external function Boolean UseOldRate(record BaseCurBlock);
external procedure SwapM4Val(var val,var val);

global
function LongInt CustomsERVcRecordDefaults(var record CustomsERVc CustomsERr,record CustomsERVc CustomsER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  CustomsERr.Date = CurrentDate;
  CustomsERr.FrRate = blankval;
  CustomsERr.ToRate1 = blankval;
  CustomsERr.ToRate2 = blankval;
  CustomsERVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt CustomsERVcRecordDuplicate(var record CustomsERVc CustomsERr,record CustomsERVc CustomsER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  CustomsERr.Date = CurrentDate;
  CustomsERVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt CustomsERVcRecordImport(var record CustomsERVc CustomsERr,record CustomsERVc CustomsER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Boolean gBase1ToBase2;
  record ConvMasterBlock cvm;
  val to1,to2;
      
  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    to1 = CustomsERr.ToRate1;
    to2 = CustomsERr.ToRate2;
    SwapM4Val(to1,to2);
    CustomsERr.ToRate1 = to1;
    CustomsERr.ToRate2 = to2;
  end;
  CustomsERVcRecordImport = res;
  RETURN;
END;

global
procedure GetMaxMinRate(string curcode,var val maxfr,var val maxto1,var val maxto2,var val minfr,var val minto1,var val minto2)
BEGIN
  record CurncyCodeVc ccr;

  maxfr = blankval;
  maxto1 = blankval;
  maxto2 = blankval;
  minfr = blankval;
  minto1 = blankval;
  minto2 = blankval;
  ccr.CurncyCode = curcode;
  if (ReadFirstMain(ccr,1,true)) then begin
    maxfr = ccr.MaxFrom;
    maxto1 = ccr.MaxTo1;
    maxto2 = ccr.MaxTo2;
    minfr = ccr.MinFrom;
    minto1 = ccr.MinTo1;
    minto2 = ccr.MinTo2;
  end;
  RETURN;
END;

global
updating function LongInt CustomsERVcRecordCheck(var record CustomsERVc CustomsERr,record CustomsERVc CustomsER2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record CurncyCodeVc ccr;
  val maxfr,maxto1,maxto2;
  val minfr,minto1,minto2;
  record BaseCurBlock bascur;
  Boolean oldrate;
       
  res = 0;     
  BlockLoad(bascur);  
  oldrate = UseOldRate(bascur);
  ccr.CurncyCode = CustomsERr.CurncyCode;
  if (ReadFirstMain(ccr,1,true)==false) then begin
    RecordCheckError(1260,"",-1,"CurncyCode");      
    res = -1; 
    goto LCustomsERVcRecordCheck;
  end;
  if (blankdate(CustomsERr.Date)) then begin
    RecordCheckError(1058,"",-1,"Date");      
    res = -1; 
    goto LCustomsERVcRecordCheck;
  end;
  if (oldrate==false) then begin
    if (CustomsERr.FrRate==0) then begin
      RecordCheckError(1058,"",-1,"FrRate");      
      res = -1; 
      goto LCustomsERVcRecordCheck;
    end;
  end;
  if ((CustomsERr.ToRate1!=0) and (CustomsERr.ToRate2!=0)) then begin
    RecordCheckError(1259,"",-1,"ToRate1");      
    res = -1; 
    goto LCustomsERVcRecordCheck;
  end;
  if ((CustomsERr.ToRate1==0) and (CustomsERr.ToRate2==0)) then begin
    RecordCheckError(1264,"",-1,"ToRate1");      
    res = -1; 
    goto LCustomsERVcRecordCheck;
  end;
  GetMaxMinRate(ccr.CurncyCode,maxfr,maxto1,maxto2,minfr,minto1,minto2);
  if (oldrate==false) then begin
    if (maxfr!=0) then begin
      if (CustomsERr.FrRate>maxfr) then begin
        RecordCheckError(1261,"",-1,"FrRate");      
        res = -1; 
        goto LCustomsERVcRecordCheck;
      end;
    end;
    if (minfr!=0) then begin
      if (CustomsERr.FrRate<minfr) then begin
        RecordCheckError(1262,"",-1,"FrRate");      
        res = -1; 
        goto LCustomsERVcRecordCheck;
      end;
    end;
  end;
  if (CustomsERr.ToRate1!=0) then begin
    if (bascur.NotBase1!=0) then begin
      RecordCheckError(1263,"",-1,"ToRate1");      
      res = -1; 
      goto LCustomsERVcRecordCheck;
    end;
    if (maxto1!=0) then begin
      if (CustomsERr.ToRate1>maxto1) then begin
        RecordCheckError(1261,"",-1,"ToRate1");      
        res = -1; 
        goto LCustomsERVcRecordCheck;
      end;
    end;
    if (minto1!=0) then begin
      if (CustomsERr.ToRate1<minto1) then begin
        RecordCheckError(1262,"",-1,"ToRate1");      
        res = -1; 
        goto LCustomsERVcRecordCheck;
      end;
    end;
  end;
  if (CustomsERr.ToRate2!=0) then begin
    if (oldrate) then begin
      RecordCheckError(1263,"",-1,"ToRate2");      
      res = -1; 
      goto LCustomsERVcRecordCheck;
    end else begin
      if (bascur.NotBase2!=0) then begin
        RecordCheckError(1263,"",-1,"ToRate2");      
        res = -1; 
        goto LCustomsERVcRecordCheck;
      end;
      if (maxto2!=0) then begin
        if (CustomsERr.ToRate2>maxto2) then begin
          RecordCheckError(1261,"",-1,"ToRate2");      
          res = -1; 
          goto LCustomsERVcRecordCheck;
        end;
      end;
      if (minto2!=0) then begin
        if (CustomsERr.ToRate2<minto2) then begin
          RecordCheckError(1262,"",-1,"ToRate2");      
          res = -1; 
          goto LCustomsERVcRecordCheck;
        end;
      end;
    end;
  end;
LCustomsERVcRecordCheck:;
  CustomsERVcRecordCheck = res;
  RETURN;
END;
