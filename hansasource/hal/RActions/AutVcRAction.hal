external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure B1ToB2Val(val,val,val,var val);
external function Boolean VATCodeExists(string);
external function Boolean CodeTest(string);

global
function LongInt AutVcRecordCheck(var record AutVc Autr,record AutVc Aut2r,LongInt stat,LongInt long4)
BEGIN
  record AccVc Accr;
  record AutSimPerVc AutSimr;
  row AutVc Autrw;
  Integer res;
  Integer rwcnt;
  Integer i;

  res = 0;
  rwcnt = MatRowCnt(Autr);
  if (blank(Autr.Code)) then begin
    RecordCheckError(1058,"",-1,"Code");  
    res = -1;
    goto LAutSimPerVcRecordCheck;
  end;
  if (CodeTest(Autr.Code)==false) then begin
    RecordCheckError(1059,"",-1,"Code");  
    res = -1;
    goto LAutSimPerVcRecordCheck;
  end;
  AutSimr.Code = Autr.Code;
  if (ReadFirstMain(AutSimr,1,true)) then begin
    RecordCheckError(1297,"",-1,"Code");  
    res = -1;
    goto LAutSimPerVcRecordCheck;
  end;
  for (i = 0 ; i<rwcnt;i=i+1) begin
    MatRowGet(Autr,i,Autrw);
    if (nonblank(Autrw.AccNumber)) then begin
      if ((Autrw.AccNumber!="!") and (Autrw.AccNumber!="#")) then begin
        Accr.AccNumber = Autrw.AccNumber;
        if (ReadFirstMain(Accr,1,true)==false) then begin
          RecordCheckError(1007,"",i,"AccNumber");  
          res = -1;
          goto LAutSimPerVcRecordCheck;
        end;
      end;
    end;
    if (nonblank(Autrw.VATCode)) then begin
      if ((Autrw.AccNumber!="!") and (Autrw.AccNumber!="#")) then begin
        if (VATCodeExists(Autrw.VATCode)==false) then begin
          RecordCheckError(1120,"",i,"VATCode");  
          res = -1;
          goto LAutSimPerVcRecordCheck;
        end;
      end;
    end;
  end;
LAutSimPerVcRecordCheck:;      
  AutVcRecordCheck = res;
  return;
END;

procedure AutVcConvertB1ToB2Date(record AutVc Autp,Date datp)
begin
  val fr,to1,to2,br1,br2,t;
  string 20 curncy;
  row AutVc Autrw;
  Integer i,rwcnt;
  val v;
  Boolean testf;

  GetFullCurncyRate(curncy,datp,fr,to1,to2,br1,br2);
  rwcnt = MatRowCnt(Autp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Autp,i,Autrw);
    testf = false;
    if (Mid(Autrw.dstr,len(Autrw.dstr)-1,1)!="%") then begin
      v = StringToVal(Autrw.dstr,M4Val);
      B1ToB2Val(v,br1,br2,v);
      Autrw.dstr = v;
      testf = true;
    end;
    if (Mid(Autrw.cstr,len(Autrw.cstr)-1,1)!="%") then begin
      v = StringToVal(Autrw.cstr,M4Val);
      B1ToB2Val(v,br1,br2,v);
      Autrw.cstr = v;
      testf = true;
    end;   
    if (testf) then begin 
      MatRowPut(Autp,i,Autrw);
    end;
  end;
  return;
end;
 
global
function LongInt AutVcRecordImport(var record AutVc Autr,record AutVc Aut2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  Boolean gBase1ToBase2;
  record ConvMasterBlock cvm;
      
  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    AutVcConvertB1ToB2Date(Autr,CurrentDate);
  end;
  AutVcRecordImport = res;
  return;
end;
