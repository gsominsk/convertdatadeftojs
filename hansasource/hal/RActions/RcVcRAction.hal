global
function LongInt RcVcRecordDefaults(var record RcVc Rcr,record RcVc Rc2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  if (SingleUserMode) then begin
    Rcr.SerNr = NextSerNr("RcVc",CurrentDate,-1,false,"");
  end;
  RcVcRecordDefaults = res;  
  return;
end;

global
function LongInt RcVcRecordDuplicate(var record RcVc Rcr,record RcVc Rc2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  if (SingleUserMode) then begin
    Rcr.SerNr = NextSerNr("RcVc",CurrentDate,-1,false,"");
  end;
  RcVcRecordDuplicate = res;  
  return;
end;

global
function LongInt RcVcRecordCheck(var record RcVc Rcr,record RcVc Rc2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  res = 0;
  if (Rcr.SerNr<=0) then begin
    Rcr.SerNr = NextSerNr("RcVc",CurrentDate,-1,false,"");
  end;
LRcVcRecordCheck:;
  RcVcRecordCheck = res;  
  return;
end;

global
updating function LongInt RcVcRecordSaveAfter(var record RcVc Rcr,record RcVc Rc2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record ReportSetVc RSr;

  RSr.Code = Rcr.ReportSet;
  ReadFirstMain(RSr,1,true)
  CreateRecordLink(RSr,CurrentCompany,Rcr,CurrentCompany);  
  CreateRecordLink(Rcr,CurrentCompany,RSr,CurrentCompany);  
  RcVcRecordSaveAfter = res;
  return;
end;
