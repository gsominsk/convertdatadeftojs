
global
function LongInt AuthCustVcRecordDefaults(var record AuthCustVc AuthCustr,record AuthCustVc AuthCust2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  val blval;

  AuthCustr.startDate = CurrentDate;
  AuthCustr.MaxSales = blval;
  AuthCustr.MaxCost = blval;
  AuthCustr.MaxUnits = blval;
  AuthCustVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt AuthCustVcRecordDuplicate(var record AuthCustVc AuthCustr,record AuthCustVc AuthCust2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Date bldat;

  AuthCustr.startDate = CurrentDate;
  AuthCustr.endDate = bldat;
  AuthCustr.SignedDate = bldat;
  AuthCustr.OurContact = "";
  AuthCustr.OKFlag = 0;
  AuthCustVcRecordDuplicate = res; 
  RETURN;
END;
/*
global
function LongInt AuthCustVcRecordRemoveTest(var record AuthCustVc AuthCustr,record AuthCustVc AuthCust2r,LongInt long3,LongInt long4)
BEGIN
  LongInt res;

  res = 1;
  if (AuthCustr.OKFlag!=0) then begin
    res = 0;
  end;
LAuthCustVcRecordRemoveTest:;
  AuthCustVcRecordRemoveTest = res; 
  RETURN;
END;
*/
global
updating function LongInt AuthCustVcRecordCheck(var record AuthCustVc AuthCustr,record AuthCustVc AuthCust2r,LongInt stat,LongInt long4)
BEGIN
  record CUVc CUr;
  LongInt res;

  res = 0;     
  if (blank(AuthCustr.CustCode)) then begin
    RecordCheckError(1125,"",-1,"CustCode");      
    res = -1; 
    goto LAuthCustVcRecordCheck;
  end;
  CUr.Code = AuthCustr.CustCode;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    RecordCheckError(1120,AuthCustr.CustCode,-1,"CustCode");      
    res = -1; 
    goto LAuthCustVcRecordCheck;
  end;
  if (AuthCustr.startDate>=AuthCustr.endDate) then begin
    RecordCheckError(20851,AuthCustr.endDate,-1,"endDate");      
    res = -1; 
    goto LAuthCustVcRecordCheck;
  end;
  if ((AuthCustr.OKFlag!=0) and (AuthCust2r.OKFlag==0)) then begin
    if (blankdate(AuthCustr.SignedDate)) then begin
      RecordCheckError(1058,AuthCustr.SignedDate,-1,"SignedDate");      
      res = -1; 
      goto LAuthCustVcRecordCheck;
    end;
    if (blankdate(AuthCustr.startDate)) then begin
      RecordCheckError(1058,AuthCustr.startDate,-1,"startDate");      
      res = -1; 
      goto LAuthCustVcRecordCheck;
    end;
    if (blankdate(AuthCustr.endDate)) then begin
      RecordCheckError(1058,AuthCustr.endDate,-1,"endDate");      
      res = -1; 
      goto LAuthCustVcRecordCheck;
    end;
    if (blank(AuthCustr.ClientContact)) then begin
      RecordCheckError(1058,AuthCustr.ClientContact,-1,"ClientContact");      
      res = -1; 
      goto LAuthCustVcRecordCheck;
    end;
  end;
LAuthCustVcRecordCheck:;
  AuthCustVcRecordCheck = res;
  RETURN;
END;
