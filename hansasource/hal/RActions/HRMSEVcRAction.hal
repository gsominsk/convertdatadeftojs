//external function Boolean RemotePopulateSkill(var record HRMSEVc,string);
external function Boolean IsUnOKAllowed(string,Date);

global
updating function LongInt HRMSEVcRecordCheck(record HRMSEVc HRMSEr,record HRMSEVc HRMSE2r,LongInt stat,LongInt check)
begin
  LongInt oldnr;
  LongInt res;
  record CUVc CUr;
  record UserVc Userr;
  row HRMSEVc HRMSErw;
  Integer i,rwcnt;
  record HRMSkillVc HRMSr;
  record HRMRatingVc HRMRr;
  Boolean transf,unokf;

  res = 0;
  oldnr = HRMSEr.SerNr;
  transf = false;
  if (HRMSEr.OKFlag==1) then begin
    if (stat==Rs_insert) then begin transf = true; end;
    if (stat==Rs_update) then begin
      if (HRMSE2r.OKFlag==0) then begin transf = true; end;
    end;
  end;
  if (HRMSEr.OKFlag==0) then begin//unok
    if (stat==Rs_update) then begin
      if (HRMSE2r.OKFlag==1) then begin unokf = true; end;
    end;
  end;
  if (unokf) then begin
    if (IsUnOKAllowed("HRMSEVc",HRMSEr.TransDate)==false) then begin
      RecordCheckError(1046,"",-1,"TransDate");      
      res = -1; 
    end;    
    goto LHRMSEVcRecordCheck;
  end;

  if (HRMSEr.SerNr<=0) then begin
    HRMSEr.SerNr = NextSerNr("HRMSEVc",HRMSEr.TransDate,-1,false,"");
  end;
  CUr.Code = HRMSEr.Employee;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    RecordCheckError(1120,HRMSEr.Employee,-1,"Employee");      
    res = -1;
    goto LHRMSEVcRecordCheck;
  end;
  if (CUr.blockedFlag!=0) then begin
    RecordCheckError(1265,HRMSEr.Employee,-1,"Employee");      
    res = -1;
    goto LHRMSEVcRecordCheck;
  end;
  Userr.Code = HRMSEr.Superior;
  if (ReadFirstMain(Userr,1,true)==false) then begin
    RecordCheckError(1120,HRMSEr.Superior,-1,"Superior");      
    res = -1;
    goto LHRMSEVcRecordCheck;
  end;
  if (transf) then begin
    if (UserCanAction("HRMSEOK",true)==false) then begin
      RecordCheckError(1274,StringFromStringSet(3,"HRMSEOK"),-1,"SerNr");      
      res = -1; 
      goto LHRMSEVcRecordCheck;
    end;
  end;  

  rwcnt = MatRowCnt(HRMSEr);
  if (transf) then begin
    if (rwcnt==0) then begin
      RecordCheckError(1030,"",0,"ArtCode");      
      res = -1;
      goto LHRMSEVcRecordCheck;
    end;
  end;
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(HRMSEr,i,HRMSErw);
    if (blank(HRMSErw.Skill)) then begin
      RecordCheckError(1058,HRMSErw.Skill,i,"Skill");      
      res = -1;
      goto LHRMSEVcRecordCheck;
    end;
    HRMSr.Code = HRMSErw.Skill;
    if (ReadFirstMain(HRMSr,1,true)==false) then begin
      RecordCheckError(1120,HRMSErw.Skill,i,"Skill");      
      res = -1;
      goto LHRMSEVcRecordCheck;
    end;
    HRMRr.Code = HRMSErw.Rating;
    if (ReadFirstMain(HRMSr,1,true)==false) then begin
      RecordCheckError(1120,HRMSErw.Rating,i,"Rating");      
      res = -1;
      goto LHRMSEVcRecordCheck;
    end;
  end;
LHRMSEVcRecordCheck:;  
  if (res!=0) then begin HRMSEr.SerNr = oldnr; end;
  HRMSEVcRecordCheck = res;
  return;
end;

global
function LongInt HRMSEVcRecordDefaults(var record HRMSEVc HRMSEr,record HRMSEVc HRMSE2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  Boolean testf;

  HRMSEr.SerNr = -1;
  HRMSEr.TransDate = CurrentDate;
//UserRegisterAccess does not work on server side. Moved this code to RecordDefaultClient in : hal/RActions/HRMSEVcRActionClient.hal
//  if (UserRegisterAccess("HRMSEVc")==kAccessLevelBrowseNew) then begin 
//    testf = RemotePopulateSkill(HRMSEr,CurrentUser);
//  end;
  HRMSEVcRecordDefaults = res; 
  return;
end;

global
function LongInt DoHRMSEVcRecordDuplicate(var record HRMSEVc HRMSEr,record HRMSEVc HRMSE2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  HRMSEr.SerNr = -1;
  HRMSEr.OKFlag = 0;
  DoHRMSEVcRecordDuplicate = res; 
  return;
end;

global
function LongInt HRMSEVcRecordDuplicate(var record HRMSEVc HRMSEr,record HRMSEVc HRMSE2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  res = DoHRMSEVcRecordDuplicate(HRMSEr, HRMSE2r,stat,long4);
  HRMSEVcRecordDuplicate = res; 
  return;
end;
