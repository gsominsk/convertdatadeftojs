/*
external procedure NextM4Number(string,var string);

function Boolean GetNextSiteNr(var string siteno)
BEGIN
  Boolean res;
  record SiteVc Siter;
  record SRBlock SRRec;

  BlockLoad(SRRec);
  NextM4Number(SRRec.LastSiteCode,siteno);
  if (nonblank(siteno)) then begin
    Siter.Code = siteno;
    if (ReadFirstMain(Siter,1,true)==false) then begin
      SRRec.LastSiteCode = siteno;
    end else begin
      Siter.Code = "";
      if (ReadLastMain(Siter,1,false)) then begin
        NextM4Number(Siter.Code,siteno);
        if (nonblank(siteno)) then begin
          SRRec.LastSiteCode = siteno; 
        end else begin
          siteno = "1";
        end;
      end;
    end;
  end;
  GetNextSiteNr = res;
  RETURN;
END;

global
function LongInt SiteVcRecordDefaults(var record SiteVc Siter,record SiteVc Site2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 255 tstr;
  record RentInvoiceBlock RIr;
  
  BlockLoad(RIr);
  if (SingleUserMode) then begin
    if (GetNextSiteNr(tstr)) then begin end;
    Siter.Code = tstr;
  end else begin
    Siter.Code = "";
  end;
  Siter.InvoiceBase = RIr.InvoiceBase;
  Siter.IncludeOriginalItem = RIr.IncludeOriginalItem;
  Siter.IncludePeriod = RIr.IncludePeriod;
  Siter.AddEmptyLine = RIr.AddEmptyLine;
  Siter.UseAsQty = RIr.UseAsQty;
  Siter.GroupInvoice = RIr.GroupInvoice;
  Siter.IncludeSite = RIr.IncludeSite;
  Siter.InclCustOrdNr = RIr.InclCustOrdNr;
  Siter.InclRentResNo = RIR.InclRentResNo;
  SiteVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt SiteVcRecordDuplicate(var record SiteVc Siter,record SiteVc Site2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 255 tstr;

  if (SingleUserMode) then begin
    if (GetNextSiteNr(tstr)) then begin end;
    Siter.Code = tstr;
  end else begin
    Siter.Code = "";
  end;  
  SiteVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt SiteVcRecordCheck(var record SiteVc Siter,record SiteVc Site2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  string 200 tstr;
  record SiteVc lSiter
    
  res = 0;     
  if (blank(Siter.Code)) then begin
    tstr = "";
    if (GetNextSiteNr(tstr)) then begin end;
    Siter.Code = tstr;
    lSiter.Code = Siter.Code;
    if (ReadFirstMain(lSiter,1,true)) then begin
      RecordCheckError(1547,Siter.Code,-1,"Code");      
      res = -1; 
      goto LSiteVcRecordCheck;
    end;
  end;
LSiteVcRecordCheck:;  
  SiteVcRecordCheck = res;
  RETURN;
END;

global
updating function LongInt SiteVcRecordSaveAfter(var record SiteVc Siter,record SiteVc Site2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record SRBlock SRRec;

  BlockLoad(SRRec);
  SRRec.LastSiteCode = Siter.Code;
  BlockStore(SRRec);
  SiteVcRecordSaveAfter = res;
  RETURN;
END;

*/

global
updating function LongInt SiteVcRecordImport(var record SiteVc Siter,record SiteVc Site2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record DelAddrVc DelAddrr;

  RecordNew(DelAddrr);
  DelAddrr.DelCode = Siter.Code;
  DelAddrr.Comment = Siter.Comment;
  DelAddrr.DelAddr0 = Siter.Addr0;
  DelAddrr.DelAddr1 = Siter.Addr1;
  DelAddrr.DelAddr2 = Siter.Addr2;
  DelAddrr.DelAddr3 = Siter.Addr3;
  DelAddrr.DelAddr4 = Siter.Addr4;
  DelAddrr.Contact = Siter.Contact;
  DelAddrr.Phone = Siter.Phone;
  DelAddrr.Fax = Siter.Fax;
  DelAddrr.Email = Siter.Email;
  DelAddrr.PriceList = Siter.PriceList;
  DelAddrr.InvoiceBase = Siter.InvoiceBase;
  DelAddrr.IncludeOriginalItem = Siter.IncludeOriginalItem;
  DelAddrr.IncludePeriod = Siter.IncludePeriod;
  DelAddrr.AddEmptyLine = Siter.AddEmptyLine;
  DelAddrr.UseAsQty = Siter.UseAsQty;
  DelAddrr.GroupInvoice = Siter.GroupInvoice;
  DelAddrr.IncludeSite = Siter.IncludeSite;
  DelAddrr.InclCustOrdNr = Siter.InclCustOrdNr;
  DelAddrr.InclRentResNo = Siter.InclRentResNo;
  DelAddrr.OnePerReservation = Siter.OnePerReservation;
  if (RecordInsert(DelAddrr,false)) then begin
  end;
  SiteVcRecordImport = res;
  return;
end;

global
updating function LongInt SiteVcRecordImportAfter(var record SiteVc Siter,record SiteVc Site2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  RecordDelete(Siter);
  SiteVcRecordImportAfter = res;
  return;
end;

