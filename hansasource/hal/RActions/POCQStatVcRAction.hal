external function Integer CheckObjs(string,string,var string);
external function Boolean CorrectM4ValProc(val);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);
external procedure GetSalesGroup(string,var string);

global
function LongInt POCQStatVcRecordDefaults(var record POCQStatVc POCQStatr,record POCQStatVc POCQStat2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
 
  POCQStatr.SerNr = -1;
  POCQStatr.OKFlag = 0;
  POCQStatr.Closed = 0;
  POCQStatr.Sum = blankval;  
  if (SingleUserMode) then begin
    POCQStatr.SerNr = NextSerNr("POCQStatVc",CurrentDate,-1,false,"");
  end;  
  POCQStatVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt POCQStatVcRecordDuplicate(var record POCQStatVc POCQStatr,record POCQStatVc POCQStat2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  POCQStatr.SerNr = -1;
  POCQStatr.OKFlag = 0;
  POCQStatr.Closed = 0;
  POCQStatr.Sum = blankval;  
  if (SingleUserMode) then begin
    POCQStatr.SerNr = NextSerNr("POCQStatVc",CurrentDate,-1,false,"");
  end;  
  POCQStatVcRecordDuplicate = res; 
  RETURN;
END;


function Boolean CheckPOClass(string poclass)
BEGIN
  Boolean res;
  record POrderClassVc POClasr;
  
  res = true;
  POClasr.Code = poclass;
  if (ReadFirstMain(POClasr,1,true)==false) then begin
    res = false;
  end;  
  CheckPOClass = res;
  RETURN;
END;

function Boolean CheckTender(string tender)
BEGIN
  Boolean res;
  record TenderVc Tenderr;
  
  res = true;
  Tenderr.Code = tender;
  if (ReadFirstMain(Tenderr,1,true)==false) then begin
    res = false;
  end;  
  CheckTender = res;
  RETURN;
END;

global
function LongInt POCQStatVcRecordCheck(var record POCQStatVc POCQStatr,record POCQStatVc POCQStat2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer insertmode,updatemode;
  LongInt oldnr;
  Boolean gentrans,found;
  record CUVc VEr;
  record UserVc Userr;
  Integer errcode;
  string 255 errstr;
  
  res = 0;
  insertmode = 1;
  updatemode = 2;

  oldnr = POCQStatr.SerNr;
  if (POCQStatr.SerNr<=0) then begin
    POCQStatr.SerNr = NextSerNr("POCQStatVc",CurrentDate,-1,false,"");
  end;
  errcode = CheckObjs("",POCQStatr.Object,errstr);
  if (errcode!=0) then begin
    RecordCheckError(errcode,errstr,-1,"Object");      
    res = -1; 
    goto LPOCQStatVcRecordCheck;
  end;
  if (nonblank(POCQStatr.Person)) then begin
    Userr.Code = POCQStatr.Person;
    if (ReadFirstMain(Userr,1,true)==false) then begin
      RecordCheckError(1120,"",-1,"Person");      
      res = -1; 
      goto LPOCQStatVcRecordCheck;
    end;
  end;  
  VEr.Code = POCQStatr.VECode;
  if (ReadFirstMain(VEr,1,true)==false) then begin
    RecordCheckError(1120,POCQStatr.VECode,-1,"VECode");      
    res = -1; 
    goto LPOCQStatVcRecordCheck;
  end;
  if (nonblank(POCQStatr.POClass)) then begin
    if (CheckPOClass(POCQStatr.POClass)==false) then begin
      RecordCheckError(1120,POCQStatr.POClass,-1,"POClass");      
      res = -1; 
      goto LPOCQStatVcRecordCheck;
    end;
  end;  
  if (nonblank(POCQStatr.Tender)) then begin
    if (CheckTender(POCQStatr.Tender)==false) then begin
      RecordCheckError(1120,POCQStatr.Tender,-1,"Tender");      
      res = -1; 
      goto LPOCQStatVcRecordCheck;
    end;  
  end;  
LPOCQStatVcRecordCheck:;
  if (res!=0) then begin POCQStatr.SerNr = oldnr; end;
  POCQStatVcRecordCheck = res;
  RETURN;
END;
