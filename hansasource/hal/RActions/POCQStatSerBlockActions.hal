external function Integer SerBlockCheckOverlap(LongInt,LongInt,LongInt,LongInt);

global
updating function LongInt POCQStatSerBlockCheck(var record POCQStatSerBlock POCQStatSerr,record POCQStatSerBlock POCQStatSer2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Integer j,i,rwcnt,pmrwcnt;
  row POCQStatSerBlock POCQStatSerrw;
  row POCQStatSerBlock POCQStatSer2rw;
  
  res = 0;
  rwcnt = MatRowCnt(POCQStatSerr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(POCQStatSerr,i,POCQStatSerrw);
    if (POCQStatSerrw.TSerStart<=0) then begin
      RecordCheckError(2210,"",i,"TSerStart");   
      res = -1;
      goto LPOCQStatSerBlockCheck;        
    end;
    if (POCQStatSerrw.TSerEnd<=0) then begin
      RecordCheckError(2210,"",i,"TSerEnd");   
      res = -1;
      goto LPOCQStatSerBlockCheck;        
    end;
    if ((nonblankdate(POCQStatSerrw.StartDate)) and (nonblankdate(POCQStatSerrw.EndDate))) then begin
      if (POCQStatSerrw.StartDate>POCQStatSerrw.EndDate) then begin
        RecordCheckError(20851,"",i,"EndDate");   
        res = -1;
        goto LPOCQStatSerBlockCheck;        
      end;
    end;
    for (j=0;j<i;j=j+1) begin
      MatRowGet(POCQStatSerr,j,POCQStatSer2rw);
      res = SerBlockCheckOverlap(POCQStatSerrw.TSerStart,POCQStatSerrw.TSerEnd,POCQStatSer2rw.TSerStart,POCQStatSer2rw.TSerEnd);      
      if (res!=0) then begin
        RecordCheckError(res,"",i,"TSerStart");   
        res = -1;
        goto LPOCQStatSerBlockCheck;        
      end;
    end;        
  end;  
LPOCQStatSerBlockCheck:;  
  POCQStatSerBlockCheck = res;
  return;
end;
