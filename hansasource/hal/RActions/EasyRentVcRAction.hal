external procedure SwapM4Val(var val,var val);
external procedure ConvertToDualBase(var string,date,var val,var val,var val,var val,var val,var val,Boolean);

procedure EasyRentVcConvertB1ToB2(record EasyRentVc EasyRentr,var val to1p,var val to2p,var val br1p,var val br2p)
BEGIN    
  val t;
  
  SwapM4Val(br1p,br2p);
  SwapM4Val(to1p,to2p);
  RETURN;
END;

global
function LongInt EasyRentVcRecordImport(var record EasyRentVc EasyRentr,record EasyRentVc EasyRent2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  val t,fr,to1,to2,br1,br2;
  string 5 curncy;
  Boolean gToDualBase,gBase1ToBase2;
  record ConvMasterBlock cvm;
  record AccBlock Accb;

  BlockLoad(cvm);
  BlockLoad(Accb);
  if (cvm.DualBaseCurrencyFlag!=0) then begin gToDualBase = true; end;
  if (gToDualBase) then begin
    curncy = EasyRentr.CurncyCode;
    fr = EasyRentr.FrRate;
    to1 = EasyRentr.ToRateB1;
    to2 = EasyRentr.ToRateB2;
    br1 = EasyRentr.BaseRate1;
    br2 = EasyRentr.BaseRate2;
    ConvertToDualBase(curncy,EasyRentr.TransDate,fr,to1,to2,br1,br2,t,true);
    EasyRentr.CurncyCode = curncy;
    EasyRentr.FrRate = fr;
    EasyRentr.ToRateB1 = to1;
    EasyRentr.ToRateB2 = to2;
    EasyRentr.BaseRate1 = br1;
    EasyRentr.BaseRate2 = br2;
  end;
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    curncy = EasyRentr.CurncyCode;
    to1 = EasyRentr.ToRateB1;
    to2 = EasyRentr.ToRateB2;
    br1 = EasyRentr.BaseRate1;
    br2 = EasyRentr.BaseRate2;
    EasyRentVcConvertB1ToB2(EasyRentr,to1,to2,br1,br2);
    EasyRentr.ToRateB1 = to1;
    EasyRentr.ToRateB2 = to2;
    EasyRentr.BaseRate1 = br1;
    EasyRentr.BaseRate2 = br2;
  end;
  if (EasyRentr.NoTAXonVAT==-1) then begin
    EasyRentr.NoTAXonVAT = Accb.NoTAXonVAT;
  end;
  EasyRentVcRecordImport = res;
  RETURN;
END;