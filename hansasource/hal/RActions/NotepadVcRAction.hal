procedure SetNotepadComment(record NotepadVc Notepadr)
BEGIN
  RETURN;
END;

global
function LongInt NotepadVcRecordDefaults(var record NotepadVc Notepadr,record NotepadVc Notepad2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Time blankt;
  
  Notepadr.SerNr = -1;
  NotepadVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt NotepadVcRecordDuplicate(var record NotepadVc Notepadr,record NotepadVc Notepad2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Time blankt;
  
  Notepadr.SerNr = -1;
  NotepadVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt NotepadVcRecordSave(var record NotepadVc Notepadr,record NotepadVc Notepad2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Date blankd;

  Notepadr.SerNr = NextSerNr("NotepadVc",CurrentDate,-1,false,"");
  SetNotepadComment(Notepadr);
  NotepadVcRecordSave = res; 
  RETURN;
END;

global
updating function LongInt NotepadVcRecordSaveAfter(var record NotepadVc Notepadr,record NotepadVc Notepad2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  if (nonblank(Notepadr.FromRecidStr)) then begin
    CreateArchiveLink(Notepadr.FromRecidStr,Notepadr,Notepadr.CompanyNr,"");  
  end;
  NotepadVcRecordSaveAfter = res; 
  RETURN;
END;

global
function LongInt NotepadVcRecordUpdate(var record NotepadVc Notepadr,record NotepadVc Notepad2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Date blankd;

  SetNotepadComment(Notepadr);
  NotepadVcRecordUpdate = res; 
  RETURN;
END;
/*
should we check sernr
*/

global
function LongInt ActionVcRecordSave(var record ActionVc Actionr,record ActionVc Action2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  Date blankd;

  Actionr.SerNr = NextSerNr("ActionVc",CurrentDate,-1,false,"");
  Actionr.TransTime = CurrentTime;
  Actionr.TransDate = CurrentDate;
  Actionr.FromUser = CurrentUser;
  ActionVcRecordSave = res; 
  RETURN;
END;

