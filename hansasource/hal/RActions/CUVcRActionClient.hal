remote function Boolean PasteCustInInv(var record IVVc);
external procedure IVCashDClass_RefreshStringList(Integer,record IVCashVc);
remote function Boolean PasteCustInCashInv(var record IVCashVc,string,string,var string);
external function Boolean HasModSL();

global
function LongInt CUVcRecordDefaultsClient(LongInt wn,var record CUVc CUr,record CUVc CU2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  Boolean treatedf;

  if (TestModule("modPL") or TestModule("modPO") or TestModule("modAT2") or TestModule("modIN")) then begin
    CUr.CUType = 0;
    CUr.VEType = 1;
    treatedf = true;
  end;
  if (TestModule("modHRM")) then begin
    CUr.EmployeeType = 1;
    CUr.CUType = 0;
    treatedf = true;
  end;
  if (treatedf==false) then begin
    CUr.CUType = 1;
    CUr.VEType = 0;
  end;
  if (TestModule("modHotel")) then begin
    CUr.GuestType = 1;
  end;
  if (TestModule("modHTS")) or  (TestModule("modSY")) then begin
    CUr.CUType = 0;
    CUr.VEType = 0;
    CUr.DealerType = 0;
    CUr.GuestType = 0;
    CUr.EmployeeType = 0;
    CUr.CustCat = "";
  end;
  if (IsStandardProduct or IsSberbankProduct) and (HasModSL==false) then begin
    CUr.CUType = 1;
  end;
  if (BuildProductCode=="StandardHotel") then begin
    CUr.CustCat = "";
    CUr.GuestType = 1;
    CUr.CUType = 1;
  end;  
  if (GetWindowClass(wn)=="CULeadDClass") then begin
    CUr.CUType = 0;
    CUr.LeadType = 1;
  end;
  CUVcRecordDefaultsClient = res; 
  return;
end;

global
function LongInt CUVcRecordSaveClient(LongInt wn,var record CUVc CUr,record CUVc CU2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  string 255 OperationMenuAction;
  Integer mwn,rwcnt;

  OperationMenuAction = GetWindowString(wn,"OperationMenuAction");
  switch (OperationMenuAction) begin
    case "AddContact":
      mwn = MotherWindow(wn);
      if (mwn>0) then begin
        switch (GetWindowFileName(mwn)) begin
          case "IVVc": begin
            record IVVc IVr;
            
            DeselectWindow(mwn,true);
            GetWindowRecord(mwn,IVr);
            WindowFieldGoto(mwn,IVr,-1,"CustCode",true);
          end;
          case "ORVc": begin
            record ORVc ORr;
            
            DeselectWindow(mwn,true);
            GetWindowRecord(mwn,ORr);
            rwcnt = MatRowCnt(ORr);
            WindowFieldGoto(mwn,ORr,-1,"CustCode",true);
          end;
          case "QTVc": begin
            record QTVc QTr;
            
            DeselectWindow(mwn,true);
            GetWindowRecord(mwn,QTr);
            WindowFieldGoto(mwn,QTr,-1,"CustCode",true);
          end;
          case "OYVc": begin
            record OYVc OYr;
            
            DeselectWindow(mwn,true);
            GetWindowRecord(mwn,OYr);
            WindowFieldGoto(mwn,OYr,-1,"CustCode",true);
          end;
        end;
        PasteString(mwn,CUr.Code);
        KeypadEnter(mwn);
      end;
  end;  
  CUVcRecordSaveClient = res;
  return;
end;

global
function LongInt CUVcRecordUpdateClient(LongInt wn,var record CUVc CUp,record CUVc CU2p,LongInt stat,LongInt long4)
begin
  LongInt res;
  Integer mwn;
  record IVVc IVr;
  record IVCashVc IVCashr;
  string 255 warning;

  UpdateBrowses("ContactRelVc");
  mwn = MotherWindow(wn);
  switch (GetWindowClass(mwn)) begin
    case "IVDClass":
      if (TouchScreenInterface) then begin
        GetWindowRecord(mwn,IVr);
        if (PasteCustInInv(IVr)) then begin
          PutWindowRecord(mwn,IVr);
  //        IVDClass_RefreshStringList(mwn,IVr);
          ReRunWindowDef(mwn);
        end;    
      end;    
    case "NPTSIVCashDClass":
      GetWindowRecord(mwn,IVCashr);
      if (PasteCustInCashInv(IVCashr,"","",warning)) then begin
        PutWindowRecord(mwn,IVCashr);
//        IVCashDClass_RefreshStringList(mwn,IVCashr);
        ReRunWindowDef(mwn);
      end;      
  end;
  CUVcRecordUpdateClient = res;
  return;
end;
