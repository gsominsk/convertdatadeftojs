external procedure B1ToB2Val(val,val,val,var val);
external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);

global
function LongInt CreditLimitVcRecordImport(var record CreditLimitVc CLr,record CreditLimitVc CL2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  Boolean gBase1ToBase2;
  record ConvMasterBlock cvm;
  val t,fr,to1,to2,br1,br2;
  string 5 curncy;
      
  BlockLoad(cvm);
  if (cvm.Base1ToBase2Flag!=0) then begin gBase1ToBase2 = true; end;
  if (gBase1ToBase2) then begin
    GetFullCurncyRate(curncy,CurrentDate,fr,to1,to2,br1,br2);
    B1ToB2Val(CLr.CreditLimit,br1,br2,t);
    CLr.CreditLimit = t;
    B1ToB2Val(CLr.VECreditLimit,br1,br2,t);
    CLr.VECreditLimit = t;
  end;
  CreditLimitVcRecordImport = res;
  return;
end;

global
function LongInt CreditLimitVcRecordDuplicate(var record CreditLimitVc CLr,record CreditLimitVc CL2r,LongInt stat,LongInt long4)
begin
  LongInt res;

  CLr.SerNr = -1;
  CreditLimitVcRecordDuplicate = res;
  return;
end;

global
function LongInt CreditLimitVcRecordCheck(var record CreditLimitVc CLr,record CreditLimitVc CL2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record CreditLimitVc locCLr;
  
  res = 0;
  if (CLr.SerNr<=0) then begin
    CLr.SerNr = NextSerNr("CreditLimitVc",CurrentDate,-1,false,"");
  end;
  if (blankdate(CLr.CreditLimitDate) and blankdate(CLr.VECreditLimitDate)) then begin
    RecordCheckError(1058,"",-1,"CreditLimitDate");      
    res = -1; 
    goto LCreditLimitVcRecordCheck;
  end;  
  if (nonblankdate(CLr.CreditLimitDate)) then begin
    locCLr.CustCode = CLr.CustCode;
    locCLr.CreditLimitDate = CLr.CreditLimitDate;
    if (ReadFirstKey("CreditLimitDate",locCLr,2,true)) then begin
      if (locCLr.SerNr!=CLr.SerNr) then begin
        RecordCheckError(1547," " & locCLr.CreditLimitDate,-1,"CreditLimitDate");      
        res = -1; 
        goto LCreditLimitVcRecordCheck;
      end;
    end;
  end;
  if (nonblankdate(CLr.VECreditLimitDate)) then begin
    locCLr.CustCode = CLr.CustCode;
    locCLr.VECreditLimitDate = CLr.VECreditLimitDate;
    if (ReadFirstKey("VECreditLimitDate",locCLr,2,true)) then begin
      if (locCLr.SerNr!=CLr.SerNr) then begin
        RecordCheckError(1547," " & locCLr.VECreditLimitDate,-1,"VECreditLimitDate");      
        res = -1; 
        goto LCreditLimitVcRecordCheck;
      end;
    end;
  end;
LCreditLimitVcRecordCheck:;  
  CreditLimitVcRecordCheck = res;
  return;
end;
