external function Boolean VATAccIsClosed(string,var string,Integer);
external function Boolean IsVATCodeDefined(string);
external procedure GetAccBalance(string,string,Date,record ObjBalVc,Integer,Integer,Integer,string,Integer,var val);
external function Boolean GetObjBal(string,string,var record ObjBalVc);

global
function LongInt AccVcRecordInIndex(record AccVc Accr,string indexname)
BEGIN
  LongInt res;
  
  res = 1;
  if ((Accr.blockedFlag!=0) or (Accr.GroupAcc!=0)) then begin 
    if (indexname=="ActAccNumber")  then begin res = 0; end;
    if (indexname=="ActComment")  then begin res = 0; end;
  end;
  if ((Accr.blockedFlag!=0) or (Accr.GroupAcc==0)) then begin 
    if (indexname=="GroupAccNumber")  then begin res = 0; end;
    if (indexname=="GroupComment")  then begin res = 0; end;
  end;
  AccVcRecordInIndex = res;
  RETURN;
END;

global
function LongInt AccVcRecordDefaults(var record AccVc Accr,record AccVc Acc2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  Accr.NVD = 1;
  Accr.NVC = 1;
  Accr.blockedFlag = 0;
  Accr.GroupAcc = 0;
  AccVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt AccVcRecordDuplicate(var record AccVc Accr,record AccVc Acc2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  AccVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt AccVcRecordRemoveTest(var record AccVc Accr,record AccVc Acc2r,LongInt long3,LongInt globalf)
BEGIN
  LongInt res;
  record ObjBalVc ObjBalr;

  res = 1;
  if (globalf==1) then begin
    if (UserCanAction("DeleteSharedRecord",false)==false) then begin
      MessageBox(1274,StringFromStringSet(3,"DeleteSharedRecord"));
      res = 0;
      goto LAccVcRecordRemoveTest;
    end;
  end;
  ObjBalr.AccNumber = Accr.AccNumber;
  ObjBalr.Object = "";
  if (ReadFirstMain(ObjBalr,2,true)) then begin
    if (long3>0) then begin
      MessageBox(1039,"");
    end;
    res = 0;
  end;
LAccVcRecordRemoveTest:;
  AccVcRecordRemoveTest = res; 
  RETURN;
END;

function Integer AccTest(string tstr)
begin
  Integer res;
  Integer i;

  res = 0;
  for (i=0; i<=len(tstr);i=i+1) begin
    if ((Mid(tstr,i,1)=="-") or (Mid(tstr,i,1)=="+")) then begin res = 1066; end;
    if ((Mid(tstr,i,1)==".") or (Mid(tstr,i,1)=="*")) then begin res = 1066; end;
  end;
  if (res==0) then begin
    if (HasLocalization("PRT")) then begin
      if (StringToLongInt(Left(tstr,1))<1) or (StringToLongInt(Left(tstr,1))>8) then begin//899999999
        res = 21400;
      end;
    end;
  end;
  AccTest = res;
  return;
end;

global
function LongInt AccVcRecordCheck(var record AccVc Accr,record AccVc Acc2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record ObjBalVc ObjBalr;
  string 255 tstr;
  val v;
  record TaxTemplateVc TTr;
  Integer errcode;

  res = 0;
  if (HasLocalization("BRA")) then begin
    if (len(Accr.AccNumber)<1) then begin
      RecordCheckError(1031,"",-1,"AccNumber");      
      res = -1; 
      goto LAccVcRecordCheck;
    end;
  end else begin
    if (len(Accr.AccNumber)<2) then begin
      RecordCheckError(1031,"",-1,"AccNumber");      
      res = -1; 
      goto LAccVcRecordCheck;
    end;
  end;
  errcode = AccTest(Accr.AccNumber);
  if (errcode!=0) then begin
    RecordCheckError(errcode,"",-1,"AccNumber");      
    res = -1; 
    goto LAccVcRecordCheck;
  end;
  if ((Accr.GroupAcc!=0) and (Acc2r.GroupAcc==0)) then begin
    if (GetObjBal(Accr.AccNumber,"",ObjBalr)) then begin end;
    GetAccBalance(Accr.AccNumber,"",CurrentDate,ObjBalr,0,0,0,"",0,v);
    if (v!=0) then begin
      RecordCheckError(22051,"",-1,"AccNumber");      
      res = -1; 
      goto LAccVcRecordCheck;
    end;
  end;      
  if (nonblank(Accr.VATCode)) then begin
    if (IsVATCodeDefined(Accr.VATCode)==false) then begin
      RecordCheckError(1951,"",-1,"VATCode");      
      res = -1;
      goto LAccVcRecordCheck;
    end;
    if (VATAccIsClosed(Accr.VATCode,tstr,1)) then begin
      RecordCheckError(1258,tstr,-1,"VATCode");      
      res = -1; 
      goto LAccVcRecordCheck;
    end;
  end;
  if (nonblank(Accr.TaxTemplateCode)) then begin
    TTr.Code = Accr.TaxTemplateCode;
    if (ReadFirstMain(TTr,1,true)==false) then begin
      RecordCheckError(1120,Accr.TaxTemplateCode,-1,"TaxTemplateCode");      
      res = -1; 
      goto LAccVcRecordCheck;
    end;
  end;

LAccVcRecordCheck:; 
  AccVcRecordCheck = res;
  RETURN;
END;

global 
function Boolean AccVcRecordShouldBeSynchronised(record AccVc Accr,string tagstr)
begin
  Boolean res;
  
  res = true;
  AccVcrecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean AccVcRecordSync(record AccVc Accr,string tagstr)
begin
  Boolean res;
  
  res = true;
  AccVcRecordSync = res;
  return;
end;
