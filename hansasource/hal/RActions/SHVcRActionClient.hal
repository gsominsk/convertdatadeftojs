remote updating procedure SHVcRecordUpdateClientRemote(record SHVc,record SHVc,string);
external updating procedure RecordActionSH_rlFLabLPrint(var record SHVc);
external updating procedure RecordActionSH_Print(var record SHVc,string,Boolean,Integer);
external procedure ShowUnOkWarn(string,Integer);

procedure PrintSHPositions(record SHVc SHp)
BEGIN
  record RcVc RepSpec;
  record MainStockBlock MainStockRec;
  Boolean testf;
  string 255 location;
  record LocationVc Locr;
  
  BlockLoad(MainStockRec);
  testf = true;
  location = SHp.Location;
  if (blank(SHp.Location)) then begin
    location = MainStockRec.MainStock;
  end;
  Locr.Code = location;
  ReadFirstMain(Locr,1,true);
  if (Locr.RequirePos==0) then begin testf = false; end;
  if (testf) then begin
    RepSpec.f1 = SHp.SerNr;
    RepSpec.Media = mtScreen;
    RepSpec.flags[1] = 1;
    RepSpec.flags[0] = 1;
    RepSpec.repname = "PositionsForSHRn";
    RunReport(RepSpec,0);
  end;
  RETURN;
END;

global
updating function LongInt SHVcRecordSaveClient(LongInt wn,var record SHVc SHp,record SHVc SH2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AAb;

  if (SHp.OKFlag!=0) then begin
    BlockLoad(AAb);
    if (AAb.ShipPrinting!=0) then begin
      RecordActionSH_Print(SHp,"",false,0);
    end;
    if (AAb.FreightPrinting>0) then begin
      RecordActionSH_rlFLabLPrint(SHp);
    end;
    PrintSHPositions(SHp);
  end;
  ShowUnOkWarn("SHVc",SHp.OKFlag);
  res = 1;
  SHVcRecordSaveClient = res;
  RETURN;
END;

global
updating function LongInt SHVcRecordUpdateClient(LongInt wn,var record SHVc SHp,record SHVc SH2p,LongInt stat,LongInt long4)
BEGIN
  LongInt res;
  record AutoActionBlock AAb;
  record OrdSettBlock OSb;
  record IVVc IVr;
  Integer nwn;

  if ((SHp.OKFlag!=0) and (SH2p.OKFlag==0)) then begin
    BlockLoad(OSb);
    BlockLoad(AAb);
    if (AAb.ShipPrinting!=0) then begin
      RecordActionSH_Print(SHp,"",false,0);
    end;
    if (AAb.FreightPrinting!=0) then begin
      RecordActionSH_rlFLabLPrint(SHp);
    end;
    PrintSHPositions(SHp);
    SHVcRecordUpdateClientRemote(SHp,SH2p,SHp.TaxAdminServSeal);
    if (OSb.CreateIVonSHOK!=0) then begin
      IVr.OrderNr = SHp.OrderNr;
      if (ReadLastKey("OrderNr",IVr,1,true)) then begin
        nwn = OpenWindow("IVDClass",0,0,"","",IVr);
      end;
    end;
  end;
  if ((SHp.OKFlag!=0) and (SH2p.OKFlag!=0)) then begin
    SHVcRecordUpdateClientRemote(SHp,SH2p,SHp.TaxAdminServSeal);
  end;

  ShowUnOkWarn("SHVc",SHp.OKFlag);
  res = 1;
  SHVcRecordUpdateClient = res;
  RETURN;
END;

global
function LongInt SHVcRecordDefaultsClient(LongInt wn,var record SHVc SHr,record SHVc SH2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record LocalMachineBlock LMb;

  BlockLoad(LMb);  
  SHr.BranchID = LMb.BranchID;
  SHVcRecordDefaultsClient = res;
  return;
end;

global
function LongInt SHVcRecordDuplicateClient(LongInt wn,var record SHVc SHr,record SHVc SH2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  record LocalMachineBlock LMb;

  BlockLoad(LMb);  
  SHr.BranchID = LMb.BranchID;
  SHVcRecordDuplicateClient = res;
  RETURN;
END;
