
global
function LongInt TAccGroupVcRecordDefaults(var record TAccGroupVc TAccGroupr,record TAccGroupVc TAccGroup2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  TAccGroupVcRecordDefaults = res; 
  RETURN;
END;

global
function LongInt TAccGroupVcRecordDuplicate(var record TAccGroupVc TAccGroupr,record TAccGroupVc TAccGroup2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  TAccGroupVcRecordDuplicate = res; 
  RETURN;
END;

global
function LongInt TAccGroupVcRecordRemoveTest(var record TAccGroupVc TAccGroupr,record TAccGroupVc TAccGroup2r,LongInt long3,LongInt globalf)
BEGIN
  LongInt res;
  record TAccVc TAccr;

  res = 1;
  if (globalf==1) then begin
    if (UserCanAction("DeleteSharedRecord",false)==false) then begin
      MessageBox(1274,StringFromStringSet(3,"DeleteSharedRecord"));
      res = 0;
      goto LTAccGroupVcRecordRemoveTest;
    end;
  end;
  TAccr.Group = TAccGroupr.Code;
  if (ReadFirstKey("Group",TAccr,1,true)) then begin
    if (long3>0) then begin
      MessageBox(1039," " & TAccr.Group);
    end;
    res = 0;
  end;
LTAccGroupVcRecordRemoveTest:;
  TAccGroupVcRecordRemoveTest = res; 
  RETURN;
END;

global
function LongInt TAccGroupVcRecordCheck(var record TAccGroupVc TAccGroupr,record TAccGroupVc TAccGroup2r,LongInt stat,LongInt long4)
BEGIN
  LongInt res;

  res = 0;
  if (blank(TAccGroupr.Code)) then begin
    RecordCheckError(1120,"",-1,"Code");      
    res = -1; 
    goto LTAccGroupVcRecordCheck;
  end;  
LTAccGroupVcRecordCheck:; 
  TAccGroupVcRecordCheck = res;
  RETURN;
END;

global 
function Boolean TAccGroupVcRecordShouldBeSynchronised(record TAccGroupVc TAccGroupr,string tagstr)
begin
  Boolean res;
  
  res = true;
  TAccGroupVcrecordShouldBeSynchronised = res;
  return;
end;

global 
function Boolean TAccGroupVcRecordSync(record TAccGroupVc TAccGroupr,string tagstr)
begin
  Boolean res;
  
  res = true;
  TAccGroupVcRecordSync = res;
  return;
end;
