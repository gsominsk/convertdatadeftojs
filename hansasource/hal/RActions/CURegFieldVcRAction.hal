external procedure CURegFieldVc_PasteFieldType(var record CURegFieldVc);
external function Boolean CURegFieldVc_FieldTypeIsClassification(record CURegFieldVc);

global
function LongInt CURegFieldVcRecordDefaults(var record CURegFieldVc CURegFieldr,record CURegFieldVc CURegField2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  if (SingleUserMode) then begin
    CURegFieldr.SerNr = NextSerNr("CURegFieldVc",CurrentDate,-1,false,"");
  end;
  CURegFieldVc_PasteFieldType(CURegFieldr);
  
  CURegFieldVcRecordDefaults = res;
  return;
end;

global
function LongInt CURegFieldVcRecordDuplicate(var record CURegFieldVc CURegFieldr,record CURegFieldVc CURegField2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  
  CURegFieldr.SerNr = -1;
  if (SingleUserMode) then begin
    CURegFieldr.SerNr = NextSerNr("CURegFieldVc",CurrentDate,-1,false,"");
  end;
  
  CURegFieldVcRecordDuplicate = res;
  return;
end;

global
function LongInt CURegFieldVcRecordCheck(var record CURegFieldVc CURegFieldr,record CURegFieldVc CURegField2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record CTypeVc CTyper;
  
  res = 0;
  if (CURegFieldr.SerNr==-1) then begin
    CURegFieldr.SerNr = NextSerNr("CURegFieldVc",CurrentDate,-1,false,"");
  end;
  if (CURegFieldVc_FieldTypeIsClassification(CURegFieldr)) then begin
    if (blank(CURegFieldr.Param)) then begin
      RecordCheckError(1058,"",-1,"Param");
      res = -1;
      goto LCURegFieldVcRecordCheck;
    end;
    CTyper.Code = CURegFieldr.Param;
    if (!ReadFirstMain(CTyper,1,true)) then begin
      RecordCheckError(1120,CURegFieldr.Param,-1,"Param");
      res = -1;
      goto LCURegFieldVcRecordCheck;
    end;
  end;
  
LCURegFieldVcRecordCheck:;
  CURegFieldVcRecordCheck = res;
  return;
end;
