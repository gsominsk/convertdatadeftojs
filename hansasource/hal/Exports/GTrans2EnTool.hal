external procedure ExpBackupString(string);
external procedure OutRegisterTag(string);

global
procedure TransExportExpVc(record RcVc RepSpec)
begin 
  Boolean found;
  record ExpVc Expr;
  string 255 ckey;
  Boolean first,testf;
  LongInt afr,ato;
  Boolean TrHs,first1;
  
  first = true;
  Expr.TransDate = RepSpec.sStartDate;
  Expr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,Expr,1,found)) begin
    testf = false;
    if (Expr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (Expr.OKFlag!=-1) then begin
        testf = false;
        if (Expr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
            if nonblank(RepSpec.f1) then begin
              afr = FirstInRange(RepSpec.f1,10);
              ato = LastInRange(RepSpec.f1,10);
              if ((Expr.SerNr>ato) or (Expr.SerNr<afr)) then begin
                testf = false;
              end;              
            end;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
            if nonblank(RepSpec.f1) then begin
              afr = FirstInRange(RepSpec.f1,10);
              ato = LastInRange(RepSpec.f1,10);
              if ((Expr.SerNr>ato) or (Expr.SerNr<afr)) then begin
	      	    testf = false;
              end;
            end;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("ExpVc");
        first = false;
        NewLine;
      end;
     
      ExportRecord(Expr);
      NewLine;
      UserTrace(Expr.SerNr,M4Long);
    end;
  end;
  NewLine;
  return;
end;

global
procedure TransExportCheckVc(record RcVc RepSpec)
begin 
  Boolean found;
  record CheckVc Checkr;
  string 255 ckey;
  Boolean first,testf;
  LongInt afr,ato;
  Boolean TrHs,first1;
  
  first = true;
  Checkr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,Checkr,1,found)) begin
    testf = false;
    if (Checkr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = false;
      if (Checkr.Openf==0) then begin
        if (RepSpec.UsedOnly==1) then begin
          testf = true;
          if nonblank(RepSpec.f1) then begin
            afr = FirstInRange(RepSpec.f1,10);
            ato = LastInRange(RepSpec.f1,10);
            if ((Checkr.SerNr>ato) or (Checkr.SerNr<afr)) then begin
              testf = false;
            end;              
          end;
        end;  
      end else begin
        if (RepSpec.OKmode==1) then begin
          testf = true;
          if nonblank(RepSpec.f1) then begin
            afr = FirstInRange(RepSpec.f1,10);
            ato = LastInRange(RepSpec.f1,10);
            if ((Checkr.SerNr>ato) or (Checkr.SerNr<afr)) then begin
      	    testf = false;
            end;
          end;
        end;  
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("CheckVc");
        first = false;
        NewLine;
      end;
     
      ExportRecord(Checkr);
      NewLine;
      UserTrace(Checkr.SerNr,M4Long);
    end;
  end;
  NewLine;
  return;
end;

global
procedure TransExportOwnCheckVc(record RcVc RepSpec)
begin 
  Boolean found;
  record OwnCheckVc OwnCheckr;
  string 255 ckey;
  Boolean first,testf;
  LongInt afr,ato;
  Boolean TrHs,first1;
  
  first = true;
  OwnCheckr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,OwnCheckr,1,found)) begin
    testf = false;
    if (OwnCheckr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = false;
      if (OwnCheckr.Openf==0) then begin
        if (RepSpec.UsedOnly==1) then begin
          testf = true;
          if nonblank(RepSpec.f1) then begin
            afr = FirstInRange(RepSpec.f1,10);
            ato = LastInRange(RepSpec.f1,10);
            if ((OwnCheckr.SerNr>ato) or (OwnCheckr.SerNr<afr)) then begin
              testf = false;
            end;              
          end;
        end;  
      end else begin
        if (RepSpec.OKmode==1) then begin
          testf = true;
          if nonblank(RepSpec.f1) then begin
            afr = FirstInRange(RepSpec.f1,10);
            ato = LastInRange(RepSpec.f1,10);
            if ((OwnCheckr.SerNr>ato) or (OwnCheckr.SerNr<afr)) then begin
      	    testf = false;
            end;
          end;
        end;  
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("OwnCheckVc");
        first = false;
        NewLine;
      end;
     
      ExportRecord(OwnCheckr);
      NewLine;
      UserTrace(OwnCheckr.SerNr,M4Long);
    end;
  end;
  NewLine;
  return;
end;
