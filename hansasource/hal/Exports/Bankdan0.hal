external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure M4PadString(string,Integer,string,Boolean,var string);
external procedure M4WriteDanStr(string,Integer,Boolean);
external procedure CalcNorCheck(var string,Boolean);
external procedure StringToDanEBDIC(string,var string);


procedure CreateDanishCheckCiffer(string instr,var string res)
BEGIN
  string 255 tstr,t2;

  tstr = instr;
  M4PadString(tstr,14,"0",true,t2);  
  CalcNorCheck(t2,true);
  res = t2;
  RETURN;
END;


global
procedure BankExpDanish0(record OPVc OPr)
BEGIN
  Integer i,j,rwcnt;
  row OPVc OPrw;
  row OPVc OP2rw;  
  record VIVc VIr;
  record CUVc VEr;
  record BankVc BKr;
  string 255 tstr,t2;
  Boolean VEf,BKf,testf;
  val t,totsum;
  record CYBlock CompYear;
  record BankFileBlock bfr;

  BlockLoad(bfr);
  BlockLoad(CompYear);
//  CreateFile(OPTr.ExpPath & GetSpecStr("MICROBANKER")); // Write this in HAL

  rwcnt = MatRowCnt(OPr);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if (OPrw.ovst<>0) then begin goto L88; end;
    if (blank(OPrw.BankAcc)) then begin goto L88; end;    
    VIr.SerNr = OPrw.VISerNr;
    if (ReadFirstMain(VIr,1,true)==false) then begin goto L88; end;
    if (VIr.InvType==kInvoiceTypeNormalSpecialSales) then begin VIr.InvType = kInvoiceTypeNormal; end;
    if (VIr.InvType==kInvoiceTypeCreditSpecialSales) then begin VIr.InvType = kInvoiceTypeCredit; end;
    if ((VIr.InvType<kInvoiceTypeNormal) or (VIr.InvType>kInvoiceTypeCredit)) then begin VIr.InvType = kInvoiceTypeNormal; end;

    if ((VIr.InvType==kInvoiceTypeNormal) and (VIr.PayVal<0)) then begin
      VIr.InvType = kInvoiceTypeCredit; 
    end;
    VEr.Code = VIr.VECode;
    VEf = ReadFirstMain(VEr,1,true);
    begin
      testf = true;
      if (VIr.Invalid<>0) then begin testf = false; end;
      if (testf) then begin
        totsum = 0;
        for (j=i;j<rwcnt;j=j+1) begin          
          MatRowGet(OPr,j,OP2rw);
          if (OP2rw.VECode==OPrw.VECode) then begin
            totsum = totsum + OP2rw.PInvVal;
          end;
        end;
        if (totsum<0) then begin goto L77; end;
        
        BKr.Code = VEr.AccOperator; 
        BKf = ReadFirstMain(BKr,1,true);        
        if (len(OPrw.BankAcc)>2) then begin
          tstr = "ERH350";
          M4WriteDanStr(tstr,6,false);
          tstr = StripNonDigits(OPr.BankAcc);          
          M4WriteDanStr(tstr,14,false);
          StringToDanEBDIC(OPr.PayNumber,tstr);
          M4WriteDanStr(tstr,20,false);
          tstr = StripNonDigits(OPrw.BankAcc);          
          M4WriteDanStr(tstr,14,false);
          StringToDanEBDIC(VEr.Name,tstr);
          M4WriteDanStr(tstr,35,false);
          t = MulWithRateToBase1(OPrw.PInvCurncy,OPr.TransDate,OPrw.PInvVal,DefaultCurRoundOff);
          tstr = t;
          M4WriteDanStr(tstr,12,false);
          tstr = DateToString(OPr.PayDate,"DDMMYY");
          M4WriteDanStr(tstr,6,false);
          tstr = "0027";
          M4WriteDanStr(tstr,20,false);
          tstr = "2";
          M4WriteDanStr(tstr,2,true);
          NewLine;
        end else begin
          tstr = "ERH351";
          M4WriteDanStr(tstr,6,false);
          tstr = StripNonDigits(OPr.BankAcc);                    
          M4WriteDanStr(tstr,14,false);
          StringToDanEBDIC(OPr.PayNumber,tstr);
          M4WriteDanStr(tstr,20,false);
          tstr = StripNonDigits(VEr.RegNr2);                    
          M4WriteDanStr(tstr,14,false);
          StringToDanEBDIC(VEr.Name,tstr);
          M4WriteDanStr(tstr,35,false);
          t = MulWithRateToBase1(OPrw.PInvCurncy,OPr.TransDate,OPrw.PInvVal,DefaultCurRoundOff);          
          tstr = t;
          M4WriteDanStr(tstr,12,false);
          tstr = DateToString(OPr.PayDate,"DDMMYY");         
          M4WriteDanStr(tstr,6,false);
          tstr = OPrw.BankAcc;
          tstr = Left(tstr,2);
          CreateDanishCheckCiffer(VIr.InvoiceNr,tstr); 
          tstr = tstr & t2; 
          M4WriteDanStr(tstr,17,false); 
          tstr = "2";
          M4WriteDanStr(tstr,2,true);
          NewLine;
        end;  
L77:;      
      end;
    end;    
L88:;
  end;
L99:;  
//  UserTrace(OPr.SerNr,M4Long);
  RETURN;
END;
