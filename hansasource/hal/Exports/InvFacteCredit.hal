external function val FindVAT(string,val,Integer,Integer);
external procedure CreateKIDCode(string,LongInt,var string);
external procedure FinnishBankVal(var string,val);

procedure SplitAddress(string addr,var string pnr,var string town)
BEGIN
  string 255 t2,tstr;
  Integer i,cp;
  string 1 ch;

  pnr = "";
  tstr = addr;
  cp = 0;
  for (i=0;i<=len(tstr);i=i+1) begin
    ch = Mid(tstr,i,1);  
    if (ch==" ") then begin
      cp = i;
      goto L22;
    end;
  end;
L22:;
  if (cp>0) then begin
    t2 = Left(tstr,cp);
  end else begin
    t2 = " ";
  end;  
  pnr = t2;
  tstr = addr;
  t2 = Right (tstr,len(tstr)-(cp));
  town = t2;
  RETURN;
END;

procedure ExportTAB()
BEGIN
  ExportPadString(chr(9),1," ",false);
  RETURN;
END;

procedure M4WriteStrMax(string instr,Integer maxchars,string padstr,Boolean padright,Boolean tabf)
BEGIN
  string 255 tstr;
  Integer l;
  
  if (len(instr)<maxchars) then begin
    l = len(instr);
  end else begin
    l = maxchars;
  end;
  tstr = Left(instr,l);
  ExportPadString(tstr,l,padstr,padright);
  if (tabf) then begin
    ExportTAB;
  end;
  RETURN;
END;

procedure ExpFactIVeCredit(record IVVc IVp,record FactoringBlock factp)
BEGIN
  record CUVc CUr;
  row IVVc IVrw;
  string 255 tstr,t2;
  Integer i,rwcnt;
  val t;

  CUr.Code = IVp.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
  end;
  M4WriteStrMax("20",2," ",true,true);
  M4WriteStrMax(IVp.SerNr,len(IVp.SerNr),"0",true,true);
  M4WriteStrMax(IVp.CustCode,10,"0",true,true);
  M4WriteStrMax(factp.User,3," ",false,true);
  tstr = ValToString(IVp.Sum4,M4Val,"",",",0);
  M4WriteStrMax(tstr,len(tstr),"0",true,true);
  tstr = ValToString(IVp.FrPrice,M4Val,"",",",0);
  M4WriteStrMax(tstr,len(tstr),"0",true,true);
  M4WriteStrMax("",0,"0",true,true);
  tstr = ValToString(IVp.Sum1,M4Val,"",",",0);
  M4WriteStrMax(tstr,len(tstr),"0",true,true);
  M4WriteStrMax(IVp.CurncyCode,3," ",false,true);
  CreateKIDCode(IVp.CustCode,IVp.SerNr,tstr);
  M4WriteStrMax(tstr,12,"0",true,true);
  if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin
    tstr = "K";
  end else begin
    tstr = "F";
  end;
  M4WriteStrMax(tstr,1," ",false,true);
  M4WriteStrMax(IVp.Addr0,50," ",false,true);
  M4WriteStrMax(IVp.Addr1,50," ",false,true);
  M4WriteStrMax(IVp.Addr2,50," ",false,true);
  SplitAddress(IVp.Addr3,tstr,t2);
  M4WriteStrMax(tstr,6,"0",true,true);
  M4WriteStrMax(t2,50," ",false,true);  
  M4WriteStrMax(CUr.CountryCode,2," ",false,true);
  M4WriteStrMax(IVp.OurContact,20," ",false,true);
  tstr = DateToString(IVp.InvDate,"DD.MM.YYYY");
  M4WriteStrMax(tstr,10," ",false,true);
  tstr = DateToString(IVp.PayDate,"DD.MM.YYYY");
  M4WriteStrMax(tstr,10," ",false,true);
  if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin
    M4WriteStrMax(IVp.CredInv,len(IVp.CredInv),"0",true,true);
  end;
  M4WriteStrMax(CUr.VATNr,len(CUr.VATNr),"0",true,true);
  M4WriteStrMax("0",1,"0",true,false);
  NewLine;
   
  rwcnt = MatRowCnt(IVp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    switch (IVrw.stp) begin
      case kInvoiceRowTypeStructuredItemComponent:
        goto LkInvoiceRowTypeNormal;
      case kInvoiceRowTypeNormal:
LkInvoiceRowTypeNormal:;      
        M4WriteStrMax("21",2,"0",true,true);
        M4WriteStrMax(factp.User,3," ",false,true);
        M4WriteStrMax(IVp.SerNr,len(IVp.SerNr),"0",true,true);
        tstr = i+1;
        M4WriteStrMax(tstr,len(tstr)," ",false,true);
        M4WriteStrMax(IVp.CustCode,10,"0",true,true);
        M4WriteStrMax(IVrw.ArtCode,20," ",false,true);
        tstr = ValToString(IVrw.Quant,M4Qty,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        tstr = ValToString(IVrw.Price,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        tstr = ValToString(IVrw.vRebate,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        tstr = ValToString(IVrw.Sum,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        t = FindVAT(IVrw.VATCode,IVrw.Sum,IVp.InclVAT,IVp.NoTAXonVAT);
        tstr = ValToString(t,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        M4WriteStrMax(IVrw.Spec,40," ",false,false);
        NewLine;
      case kInvoiceRowTypeVoid:
        M4WriteStrMax("21",2,"0",true,true);
        M4WriteStrMax(factp.User,3," ",false,true);
        M4WriteStrMax(IVp.SerNr,len(IVp.SerNr),"0",true,true);
        tstr = i+1;
        M4WriteStrMax(tstr,len(tstr)," ",false,true);
        M4WriteStrMax(IVp.CustCode,10,"0",true,true);
        M4WriteStrMax(IVrw.ArtCode,20," ",false,true);
        tstr = ValToString(-IVrw.Quant,M4Qty,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        tstr = ValToString(IVrw.Price,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        tstr = ValToString(IVrw.vRebate,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        tstr = ValToString(-IVrw.Sum,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        t = FindVAT(IVrw.VATCode,-IVrw.Sum,IVp.InclVAT,IVp.NoTAXonVAT);
        tstr = ValToString(t,M4Val,"",",",0);
        M4WriteStrMax(tstr,len(tstr),"0",true,true);
        M4WriteStrMax(IVrw.Spec,40," ",false,false);
        NewLine;
    end;
  end;

  RETURN;
END;

procedure ExpFactCUeCredit(record IVVc IVp,record FactoringBlock factp)
BEGIN
  record CUVc CUr;
  string 255 tstr,t2;
  
  CUr.Code = IVp.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    M4WriteStrMax("10",2,"0",true,true);
    M4WriteStrMax(IVp.CustCode,10,"0",true,true);
    M4WriteStrMax(CUr.Name,50," ",false,true);
    M4WriteStrMax(CUr.InvAddr0,50," ",false,true);
    M4WriteStrMax(CUr.InvAddr1,50," ",false,true);
    SplitAddress(CUr.InvAddr2,tstr,t2);
    M4WriteStrMax(tstr,6,"0",true,true);
    M4WriteStrMax(t2,50," ",false,true);
    M4WriteStrMax(CUr.CountryCode,2," ",false,true);
    ExportTAB;
    ExportTAB;
    M4WriteStrMax(CUr.Phone,14," ",false,true);
    M4WriteStrMax(CUr.Fax,14," ",false,true);
    M4WriteStrMax(CUr.VATNr,len(CUr.VATNr),"0",true,true);
    M4WriteStrMax("0",1,"0",true,true);
    M4WriteStrMax(factp.User,3,"0",true,false);
    NewLine;
  end;
  RETURN;
END;

global
procedure ExportInveCredit(var record RcVc RepSpec,var record FactoringBlock factp)
BEGIN
  record IVVc IVr;
  Boolean TrHs,testf;
  string 20 fromcust,tocust;
  LongInt cnt;

  cnt = 0; 
  RepSpec.long1 = FirstInRange(RepSpec.f1,10);
  RepSpec.long2 = LastInRange(RepSpec.f1,10);
  fromcust = FirstInRange(RepSpec.f2,20);
  tocust = LastInRange(RepSpec.f2,20);  
  IVr.SerNr = RepSpec.long1;
  IVr.InvDate = RepSpec.sStartDate;
  TrHs = true;
  if (RepSpec.flags[1]==0) then begin
    while (LoopKey("InvDate",IVr,2,TrHs)) begin
      if (IVr.TransDate>RepSpec.sEndDate) then begin TrHs = false; end;
      if (TrHs) then begin
        testf = true;
        if (nonblank(RepSpec.f1)) then begin
          if (IVr.SerNr>RepSpec.long2) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.f1)) then begin
          if (IVr.SerNr<RepSpec.long1) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.f2)) then begin
          if ((IVr.CustCode<fromcust) or (IVr.CustCode>tocust)) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.ObjStr)) then begin
          if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.CurncyCode)) then begin
          if (IVr.CurncyCode!=RepSpec.CurncyCode) then begin testf = false; end;
        end;  
        if (testf) then begin
          ExpFactCUeCredit(IVr,factp);
          UserTrace(IVr.CustCode,M4Str);
        end;
      end;
    end;
  end;
  if (RepSpec.flags[1]==1) then begin//all in one      
    IVr.SerNr = RepSpec.long1;
    IVr.InvDate = RepSpec.sStartDate;
    TrHs = true;
    while (LoopKey("InvDate",IVr,2,TrHs)) begin
      if (IVr.TransDate>RepSpec.sEndDate) then begin TrHs = false; end;
      if (TrHs) then begin
        testf = true;
        if (nonblank(RepSpec.f1)) then begin
          if (IVr.SerNr>RepSpec.long2) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.f1)) then begin
          if (IVr.SerNr<RepSpec.long1) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.f2)) then begin
          if ((IVr.CustCode<fromcust) or (IVr.CustCode>tocust)) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.ObjStr)) then begin
          if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
        end;  
        if (nonblank(RepSpec.CurncyCode)) then begin
          if (IVr.CurncyCode!=RepSpec.CurncyCode) then begin testf = false; end;
        end;
        if (IVr.OKFlag==0) then begin testf = false; end;
        if (IVr.Invalid!=0) then begin testf = false; end;
        if (IVr.InvType==kInvoiceTypeCash) then begin testf = false; end;
        if (testf) then begin
          ExpFactIVeCredit(IVr,factp);
          UserTrace(IVr.SerNr,M4Long);
        end;
      end;
    end;
    factp.LastSerNr = factp.LastSerNr + 1;
    factp.LastDate = CurrentDate;
  end;
  RETURN;
END;