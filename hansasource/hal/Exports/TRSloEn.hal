external procedure NewLineExport();

function Boolean FBExists(Date td,string accnumber)
begin
  Boolean res,found;
  record MainVc mainr;
  
  found = true;
  mainr.AccNumber = accnumber;
  mainr.TransDate = td;
  while (LoopKey("MainKey",mainr,2,found)) begin
    if (mainr.AccNumber!=accnumber) then begin found = false; end;  
    if (mainr.TransDate!=td) then begin found = false; end;  
    if (found) then begin
      if (mainr.FileName=="FBVc") then begin
        res = true;
        found = false;
      end;
    end;
  end;
  FBExists = res;
  return;
end;

global
procedure TRSloEn(record RcVc RepSpec)
begin
  Boolean found,testf;
  record AccVc Accr;
  record MainVc mainr;
  record TRVc TRr;
  row TRVc TRrw;
  Integer i,rwcnt;
  string 255 tstr;
    
  if (SetExportCodePage("CP1250")== false) then begin end;
  ExportPadString(USetStr(18050),10," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18051),50," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18052),8," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18053),8," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18054),30," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18055),3," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18056),50," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18057),16," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18058),16," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(USetStr(18059),160," ",false);
  NewLineExport;
  
  found = true;
  mainr.TransDate = RepSpec.sStartDate;
  while (LoopKey("TransDate",mainr,1,found)) begin
    if (mainr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      switch (mainr.FileName) begin
        case "TRVc":
          TRr.Number = mainr.TransNr;
          TRr.IntYc = mainr.IntYc;
          if (ReadFirstMain(TRr,0,true)) then begin
            if (mainr.TransDate==TRr.TransDate) then begin
              rwcnt = MatRowCnt(TRr);
              for (i=0;i<rwcnt;i=i+1) begin
                MatRowGet(TRr,i,TRrw);
                testf = true;
                if (TRrw.stp!=1) then begin testf = false; end;
                if (TRrw.ovst!=0) then begin testf = false; end;
                if (testf) then begin
                  Accr.AccNumber = TRrw.AccNumber;
                  ReadFirstMain(Accr,1,true);
                  ExportPadString(TRrw.AccNumber,10," ",false);
                  ExportPadString(";",1," ",false);
                  ExportPadString(Accr.Comment,50," ",false);
                  ExportPadString(";",1," ",false);
                  ExportPadString(DateToString(TRr.TransDate,"DDMMYYY"),8," ",false);
                  ExportPadString(";",1," ",false);
                  ExportPadString(DateToString(TRr.TransDate,"DDMMYYY"),8," ",false);
                  ExportPadString(";",1," ",false);
                  ExportPadString(TRr.Number,30," ",false);
                  ExportPadString(";",1," ",false);
                  tstr = "";
                  if (Left(TRr.RefStr,3)=="OTV") or (Left(TRr.RefStr,3)=="ZAK") then begin
                    tstr = TRr.RefStr;
                  end;
                  if (blank(tstr)) then begin
                    if (FBExists(mainr.TransDate,TRrw.AccNumber)) then begin
                      tstr = "OTV";
                    end;
                  end;
                  ExportPadString(tstr,3," ",false);
                  ExportPadString(";",1," ",false);
                  ExportPadString(TRrw.Comment,50," ",false);
                  ExportPadString(";",1," ",false);
                  ExportPadString(ValToString(TRrw.DebVal,M4Val,"",",",0),16," ",true);
                  ExportPadString(";",1," ",false);
                  ExportPadString(ValToString(TRrw.CredVal,M4Val,"",",",0),16," ",true);
                  ExportPadString(";",1," ",false);
                  ExportPadString(TRr.Comment,160," ",false);
                  NewLineExport;
                end;
              end;
            end;
          end;
      end;
    end;
  end;
  return;
end;