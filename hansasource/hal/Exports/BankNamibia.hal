procedure SumPayment(record OPVc OPr,var Array String supplier,var Array String custBranchCode,var Array String custBankAcc,var Array Val value,var Array Date lastDate,var Array LongInt lastNr,var Integer Cnt)
begin
  Record CUVc VEr;
  Integer i;
  Boolean found;
  Row OPVc OPrw;
  
  if(OPr.CurPayVal <> 0) then begin
    MatRowGet(OPr,0,OPrw);
    if(Cnt==(-1)) then begin
     goto LCreateNew;
    end;
    found = false;
    for(i=0;i<=Cnt;i=i+1) begin
      if(supplier[i] == OPrw.VECode) then begin
        value[i] = value[i] + OPr.CurPayVal;
        lastDate[i] = OPr.PayDate;
        lastNr[i] = OPr.SerNr;
        found = true;
        i = Cnt+1;
      end;
    end;
    if(!found) then begin
      LCreateNew:;
      supplier[Cnt+1] = OPrw.VECode;
      VEr.Code = OPrw.VECode;

      if(ReadFirstMain(VEr,1,true)) then begin
        custBranchCode[cnt+1] = VEr.SortCode;
        custBankAcc[cnt+1] = VEr.BankAccount;
        value[cnt+1] = OPr.CurPayVal;
        lastDate[cnt+1] = OPr.PayDate;
        lastNr[cnt+1] = OPr.SerNr;
        Cnt = Cnt + 1;
      end;
    end;
  end;
  return;
end;


function String 11 PadUpValue(Val amnt,Integer Cnt)
begin
  String 11 Amount;
  Integer lescnt,k;
  
  Amount = ValToString(amnt,M4Val,"","",0);
  lescnt = 11-len(Amount);
  for(k=0;k<lescnt;k=k+1) begin
    Amount = "0" & Amount;
  end;
  PadUpValue = Amount;
  return;
end;

function String 6 PadUpNumber(Integer Num, Integer toSize)
begin
  Integer toPad,i;
  String 6 PadMe;
  
  PadMe = Num;
  PadUpNumber = PadMe;
  return;
end;


function String 30 PadUpString(String PadStr, Integer toSize)
begin
  Integer toPad,i;
  String 30 PadMe;
  
  PadMe = PadStr;
  toPad = 0;
  if(len(PadMe) < toSize) then begin
    toPad = toSize - len(PadMe);
    for(i=0;i<toPad;i=i+1) begin
      PadMe = "0" & PadMe;
    end;
  end;
  PadUpString = PadMe;
  return;
end;


global
procedure BankNamibia(record RcVc RepSpec)
begin
  Longint fromart,toart;
  Integer recCnt,cnt,i,j,maincnt,updatecnt;        
  Record OPVc OPr,OldOPr;
  Record CYBlock CYr;
  Record CUVc VEr;
  Boolean TrHs,testf;
  Array String 30 Supplier;
  Array String 6 OwnBranchCode;
  Array String 11 OwnBankAcc;
  Array String 6 PaymentNumber;
  Array String 6 CustBranchCode;
  Array String 11 CustBankAcc;
  Array Val Value;
  Array Date LastDate;
  Array String 30 Reference;
  Array String 30 OwnAccName;
  Array LongInt LastNr;
  Array Integer UpdateArray;
  
  String 30 pnumber;
  String 30 accname;
  String 255 outstr;

  updatecnt = -1;
  cnt = -1;
  BlockLoad(CYr);
  if(nonblank(RepSpec.f1)) then begin
    ExportPadString("020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",180," ",false);
    NewLine;
    ExportPadString("040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",180," ",false);
    NewLine;
    fromart = FirstTransInRange(RepSpec.f1);
    toart = LastTransInRange(RepSpec.f1);
    OPr.SerNr = fromart;
    TrHs = true;
    while(LoopMain(OPr,1,TrHs)) begin
      testf = true;
      if(OPr.SerNr > toart) then begin
        TrHs = false;
        goto LOPrLoopEnd;
      end;
      if(OPr.OrderedFlag<>1) then begin
        testf = false;
      end;
      if(testf) then begin
        SumPayment(OPr,Supplier,CustBranchCode,CustBankAcc,Value,LastDate,LastNr,cnt);
      end;
      LOPrLoopEnd:;
    end;
    if(cnt >= 0) then begin
      for(i=0;i<=cnt;i=i+1) begin
        if(Value[i] > 0) then begin
          UpdateArray[updatecnt+1] = i;
          updatecnt = updatecnt + 1;
          VEr.Code = Supplier[i];
          if(ReadFirstMain(VEr,1,true)) then begin
          end;
          ExportPadString("10",2,"0",false);
          ExportPadString(CYr.Bank2,6,"0",true);
          ExportPadString(CYr.Bank1,11,"0",true);
          ExportPadString("0000",4,"0",false); 
          ExportPadString(ValToString((updatecnt+1), M40Val,"","",0),6,"0",true);
          ExportPadString(CustBranchCode[i],6,"0",true);
          ExportPadString(CustBankAcc[i],11,"0",true); 
          ExportPadString("0",1,"0",true);
          ExportPadString((PadUpValue(Value[i],11)),11,"0",true);
          ExportPadString(DateToString(LastDate[i],"YYMMDD"),6,"0",true);
          ExportPadString("000000",6,"0",true);
          ExportPadString(CYr.CompName,30," ",false);
          ExportPadString(ValToString(LastNr[i],M40Val,"","",0) & " - " & VEr.Name,30," ",false);
          ExportPadString("00000000000000000000000000000000000000000000000000",50,"0",true);
          NewLine;
        end;
      end;
    end;
  end;
  ExportPadString("920000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",180," ",false);
  NewLine;
  ExportPadString("940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",180," ",false);
  NewLine; 
  return;
end;

    
 