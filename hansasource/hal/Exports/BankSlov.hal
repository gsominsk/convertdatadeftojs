external procedure NewLineExport();

procedure FileTotals(record RcVc RepSpec,var LongInt rowcnt,var val totpayval)
BEGIN
  Boolean foundf,testf;
  record OPVc OPr;
  row OPVc OPrw;
  Integer i,rwcnt;
  Integer keys;
  string 40 ckey;
  LongInt afr,ato;
  
  totpayval = 0;
  rowcnt = 0;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  foundf = true;
  if (RepSpec.OnlyUnprntd==0) then begin
    OPr.SentFlag = 0;
    OPr.SerNr = afr;
    keys = 2;
    ckey = "SentFlag";
  end else begin
    OPr.SerNr = afr;
    keys = 1;
    ckey = "SerNr";
  end;
  while (LoopKey(ckey,OPr,keys,foundf)) begin
    if (RepSpec.OnlyUnprntd==0) then begin
      if (OPr.SentFlag==1) then begin
        foundf = false;
      end;
    end;
    if (ato<>-1) then begin
      if (OPr.SerNr>ato) then begin
        foundf = false;
      end;
    end;
    testf = true;
    if (RepSpec.OnlyUnprntd==0) then begin
      if (OPr.DoneFlag==1) then begin 
        testf = false;
      end;
    end;
    if (OPr.OrderedFlag==0) then begin 
      testf = false;
    end;
    if (DateInRange(OPr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
      testf = false;
    end;
    if (foundf==false) then begin
      testf = false;
    end;
    if (testf) then begin
      rwcnt = MatRowCnt(OPr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(OPr,i,OPrw);
        if (OPrw.VISerNr>0) then begin
          rowcnt = rowcnt + 1;
          totpayval = totpayval + OPrw.BankVal;
        end;
      end;
    end;
  end;
  RETURN;
END;

global
procedure BankExpSloveniaHeader(record RcVc RepSpec)
BEGIN
  record CYBlock CYb;
  LongInt rowcnt;
  val totpayval;

  BlockLoad(CYb);  
  ExportPadString(StripNonDigits(CYb.Bank1),18," ",false); 
  ExportPadString(CYb.CompName,35," ",false); 
  ExportPadString(CYb.Addr1,10," ",false); 
  ExportPadString(DateToString(CurrentDate,"DDMMYY"),6," ",false); //ExportPadString(DateToString(OPr.PayDate,"DDMMYY"),6," ",false); 
  ExportPadString("650",3," ",false); 
  ExportPadString("016",3," ",false); 
  ExportPadString("",104," ",false); 
  ExportPadString("0",1," ",false); 
  NewLineExport;
          
  FileTotals(RepSpec,rowcnt,totpayval);
  ExportPadString(StripNonDigits(CYb.Bank1),18," ",false); 
  ExportPadString(CYb.CompName,35," ",false); 
  ExportPadString(CYb.Addr1,10," ",false);
  ExportPadString(ValToString(totpayval,M4Val,"","",0),15,"0",true); 
  ExportPadString(rowcnt,5,"0",true); 
  ExportPadString("1",1," ",false); 
  ExportPadString("1",1," ",false); 
  ExportPadString(" ",89," ",false); 
  ExportPadString(" ",3," ",false); 
  ExportPadString(" ",2," ",false); 
  ExportPadString("9",1," ",false);   
  NewLineExport;
  RETURN;
END;

global
procedure BankExpSlovenia(record OPVc OPr)
BEGIN
  row OPVc OPrw;
  Integer i,rwcnt;
  record CUVc VEr;
  LongInt nr;

  rwcnt = MatRowCnt(OPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
//    if (OPrw.VISerNr>0) then begin
    if (true) then begin
      VEr.Code = OPrw.VECode;
      if (ReadFirstMain(VEr,1,true)) then begin end;
      ExportPadString(StripNonDigits(VEr.BankAccount),18," ",false); 
      ExportPadString(VEr.Name,35," ",false); 
      ExportPadString(VEr.InvAddr2,10," ",false);
      ExportPadString("0",1," ",false);
      nr = OPrw.VISerNr;
      if (nr<=0) then begin
        nr = OPrw.PrepayNr;
      end;
      if (nr<=0) then begin
        nr = OPr.SerNr;
      end;
      ExportPadString("00" & OPrw.VECode & "-" & nr,24," ",false);
      ExportPadString(OPrw.Comment,36," ",false);
      ExportPadString(" ",5," ",false);
      ExportPadString("A3011",6," ",false);
      ExportPadString(ValToString(OPrw.BankVal,M4Val,"","",0),13,"0",true); 
      if (blank(OPrw.rkPayNumber)) then begin
        ExportPadString("99",24," ",false);
      end else begin
        ExportPadString("" & OPrw.rkPayNumber,26," ",false);
      end;
      ExportPadString(" ",7," ",false);
      ExportPadString("1",1," ",false);
      NewLineExport;      
    end;
  end;
  RETURN;
END;
