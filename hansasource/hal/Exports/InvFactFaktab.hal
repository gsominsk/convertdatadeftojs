external procedure NewLineExport();
external function Boolean GetFirstItem(var string,var record INVc);
external procedure FinnishBankVal(var string,val);
external procedure RemoveCharacterFromString(var string,string);

procedure SplitAddress(string addr,var string pnr,var string town)
BEGIN
  string 255 t2,tstr;
  Integer i,cp;
  string 1 ch;
  Integer tstrlen;

  pnr = "";
  tstr = addr;
  tstrlen = len(tstr);
  cp = 0;
  for (i=1;i<=tstrlen;i=i+1) begin
    ch = Mid(tstr,i,1);  
    if ((i==1) and (ch>"9") and (tstrlen>3)) then begin
      if (Mid(tstr,i+2,1)=="-") then begin
        i = 4;
        ch = Mid(tstr,i,1);
      end;
    end;
    if (ch>"9") then begin
      cp = i-1;
      goto L22;
    end;
  end;
L22:;
  if (cp>0) then begin
    t2 = Left(tstr,cp);
  end else begin
    t2 = " ";
  end;  
  pnr = t2;
  tstr = addr;
  t2 = Right (tstr,len(tstr)-(cp));
  while((Len(t2)>0) and (Left(t2,1)==" ")) begin
    t2 = Right(t2,len(t2)-1);
  end;
  town = t2;
  RETURN;
END;


procedure InvFaktabMainRecord(record FactoringBlock factp,record CYBlock CompYearp,var Integer cntp)
BEGIN
  string 255 tstr,t2;

  ExportPadString("H",1,"0",true);
  ExportPadString(factp.User,4,"0",true);
  ExportPadString(UpperCase(CompYearp.CompName),40," ",true);
  tstr = DateToString(CurrentDate,"YYMMDD");      
  ExportPadString(tstr,6," ",true);
  tstr = CurrentTime;
  t2 = Left(tstr,5);
  RemoveCharacterFromString(t2,":");
  ExportPadString(t2,4," ",true); 
  NewLineExport;
  cntp = cntp + 1;
  RETURN;
END;

procedure InvFaktabEndRecord(record FactoringBlock factp,record CYBlock CompYearp,Integer cntp,Integer kcntp,val totivsump,val totivvatsump)
BEGIN
  string 255 tstr;

  ExportPadString("S",1," ",true);
  ExportPadString(cntp,8," ",true);
  ExportPadString(kcntp,8," ",true);
  tstr = ValToString(totivsump,M4Val,"",".",0);    
  ExportPadString(tstr,13," ",true);
  tstr = ValToString(totivvatsump,M4Val,"",".",0);    
  ExportPadString(tstr,13," ",true);
  RETURN;
END;

procedure ExportFaktabInv(record RcVc RepSpec,record IVVc IVp,record FactoringBlock factp,record CYBlock CompYearp,var Integer cntp,var Integer kcntp)
BEGIN
  record INVc INr;
  row IVVc IVrw;
  string 255 tstr,t2;
  Integer i,rwcnt;

  ExportPadString("K",1,"0",true);
  ExportPadString("",15," ",false); 
  ExportPadString(UpperCase(IVp.Addr0),35," ",false);
  ExportPadString(UpperCase(IVp.VATNr),11," ",false);
  ExportPadString(UpperCase(IVp.Phone),14," ",false);
  NewLineExport;
  kcntp = kcntp + 1;
  cntp = cntp + 1;
  ExportPadString("A",1,"0",true);
  ExportPadString(UpperCase(IVp.Addr1),25," ",false);
  ExportPadString("",25," ",true);
  SplitAddress(IVp.Addr2,tstr,t2);
  ExportPadString(UpperCase(tstr),9," ",false);
  ExportPadString(UpperCase(t2),20," ",false);
  ExportPadString(UpperCase(IVp.ShipAddr0),25," ",false);
  ExportPadString(UpperCase(IVp.ShipAddr1),25," ",false);
  ExportPadString("",25," ",true);
  SplitAddress(IVp.ShipAddr2,tstr,t2);
  ExportPadString(UpperCase(t2),20," ",false);
  ExportPadString(UpperCase(tstr),9," ",false);
  cntp = cntp + 1;
  NewLineExport;
  ExportPadString("R",1,"0",true);
  ExportPadString(UpperCase(IVp.ClientContact),25," ",false);
  ExportPadString("",2," ",true);
  ExportPadString("",25," ",true);
  cntp = cntp + 1;
  NewLineExport;
  rwcnt = MatRowCnt(IVp);
  for (i=0 ; i<rwcnt;i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    ExportPadString("F",1," ",true);
    if (i==0) then begin
      tstr = ValToString(IVp.Sum4,M4Val,"",".",0);    
      ExportPadString(tstr,13," ",true);
      tstr = ValToString(IVp.Sum3,M4Val,"",".",0);    
      ExportPadString(tstr,13," ",true);
    end else begin
      ExportPadString("",13," ",true);        
      ExportPadString("",13," ",true);        
    end;
    ExportPadString(UpperCase(IVrw.Spec),74," ",false);
    if (GetFirstItem(IVrw.ArtCode,INr)) then begin
    end;
    ExportPadString(UpperCase(INr.AlternativeCode),5," ",true);
    if (i==0) then begin
      if (IVrw.stp==6) then begin
        FinnishBankVal(tstr,IVrw.Sum);
        ExportPadString(tstr,13," ",true);        
        FinnishBankVal(tstr,IVrw.Price);
        ExportPadString(tstr,13," ",true);        
      end else begin
        ExportPadString("",13," ",true);        
        ExportPadString("",13," ",true);        
      end;
      ExportPadString(IVp.SerNr,20," ",true); 
      tstr = DateToString(IVp.PayDate,"YYMMDD");      
      ExportPadString(tstr,6," ",true);
    end;
    NewLineExport;
    cntp = cntp + 1;
  end;
  RETURN;
END;

global
procedure ExportInvFaktab(record RcVc RepSpec,var record FactoringBlock factp)
BEGIN
  record IVVc IVr;
  Boolean TrHs,testf;
  string 20 fromcust,tocust;
  Integer cnt,kcnt;
  val totivsum,totivvatsum;
  Boolean exported;
  record CYBlock CompYear;

  cnt = 1;
  BlockLoad(CompYear);  
  InvFaktabMainRecord(factp,CompYear,cnt);
  RepSpec.long1 = FirstInRange(RepSpec.f1,10);
  RepSpec.long2 = LastInRange(RepSpec.f1,10);
  fromcust = FirstInRange(RepSpec.f2,20);
  tocust = LastInRange(RepSpec.f2,20);  
  IVr.SerNr = RepSpec.long1;
  IVr.InvDate = RepSpec.sStartDate;
  TrHs = true;
  while (LoopKey("InvDate",IVr,2,TrHs)) begin
    if (IVr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;  
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f1)) then begin
        if (IVr.SerNr>RepSpec.long2) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.f1)) then begin
        if (IVr.SerNr<RepSpec.long1) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.f2)) then begin
        if ((IVr.CustCode<fromcust) or (IVr.CustCode>tocust)) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.CurncyCode)) then begin
        if (IVr.CurncyCode!=RepSpec.CurncyCode) then begin testf = false; end;
      end;
      if (IVr.OKFlag==0) then begin testf = false; end;
      if (IVr.Invalid!=0) then begin testf = false; end;
      if (IVr.InvType==kInvoiceTypeCash) then begin testf = false; end;
      if (testf) then begin
        ExportFaktabInv(RepSpec,IVr,factp,CompYear,cnt,kcnt);
        totivsum = totivsum + IVr.Sum4;
        totivvatsum = totivvatsum + IVr.Sum3;
        UserTrace(IVr.SerNr,M4Long);
        exported = true;
      end;
    end;
  end;
  InvFaktabEndRecord(factp,CompYear,cnt,kcnt,totivsum,totivvatsum);
  if (exported) then begin
    factp.LastSerNr = factp.LastSerNr + 1;
    factp.LastDate = CurrentDate;
  end;
  RETURN;
END;