external function roundmode GetVATRoundModeRB();
external function roundmode DefaultRoundMode();
// Latvija - Solo

#ifdef HAL

//-----------------------------
procedure TwoStringFromOne(string str,var string str1, var string str2)
begin
integer i,ln;
boolean fo;

ln=len(str);
fo=false;
for (i=0;i<ln;i=i+1) begin
   if (mid(str,i,1)=="/") then begin
	str1=left(str,i);
	str2=right(str,(ln-i-1));
	fo=true;i=ln;	
   end;
end;
if (fo==false) then begin
   str1=str;str2="";	
end;
return;
end;
//-----------------------------

Procedure SelectNumber(string str,var string ret)
Begin
integer fp,i,l;
l=len(str);
fp=0;
for (i=0;i<l;i=i+1) begin
	if (mid(str,i,1)==",") then begin
		fp=i;
		i=l;
	end;
end;
if (fp==0) then begin
	ret=str;
end else begin	 
	ret=mid(str,0,fp);
end;	
Return;
End;


//--------------------------------------
global
procedure BankExpLatvia1Begin(record BankFileBlock BFB)  //  Latvija - Solo - header
begin
string 255 tstr;

    ExportPadString("{1:F01NDEAFIHHAXXX          }{2:I101NDEALV2XXXXXN}{4:",53," ",false);//Header
    NewLine;
   //Common information
    ExportPadString(":20:",4," ",false);NewLine;//Sender reference
    tstr="";
    ExportPadString(":21R:"&tstr,16," ",false);NewLine;//Customer code from Merita
    //Ordering customer - 50H
    ExportPadString(":52A:NDEALV2X",13," ",false);NewLine;//Account servicing Institution
    tstr=DateToString(CurrentDate,"YYMMDD");
    ExportPadString(":30:"&tstr,10," ",false);Newline;//current date
    return;
end;

//--------------------------------------
global
procedure BankExpLatvia1aBegin(record BankFileBlock BFB)  //  Latvija - Merita-currency -header
begin
string 255 tstr;

    //BatchRecord
    ExportPadString("2499",4," ",false);//Application code
    ExportPadString("0",1," ",false);//Record code
    ExportPadString("0",1," ",false);//Transaction type
    tstr=BFB.ContractNumer;    //-   ????????
    ExportPadString(tstr,7," ",false);//Service number 
    tstr=DateToString(CurrentDate,"YYMMDD")&StripNonDigits(currenttime);
    ExportPadString(tstr,10," ",false);//Creation time
    ExportPadString("",10,"0",true);//Remitter's business code
    ExportPadString("",167," ",false);//Reserved 867
    ExportPadString("",250," ",false);//Reserved
    ExportPadString("",250," ",false);//Reserved
    ExportPadString("",200," ",false);//Reserved

    NewLine;
    
    return;
end;

//--------------------------------------
global
procedure BankExpLatvia1End(Integer a)  //  Latvija - Merita - footer
begin
ExportPadString("-}",2," ",false);
return;
end;
//--------------------------------------
global
procedure BankExpLatvia1aEnd(Integer a)  //  Latvija - Merita-currency - footer
begin
string 20 tstr;
//summary record
ExportPadString("2499",4," ",false);//Applicaton code
ExportPadString("9",1," ",false);//Record code
ExportPadString("0",1," ",false);//Transaction type
tstr=ValToString(a/100.00,M4Val,"","",0);
ExportPadString(tstr,7,"0",true);//Number of payment
ExportPadString("",187," ",false);//Reserved 887
ExportPadString("",250," ",false);//Reserved
ExportPadString("",250," ",false);//Reserved
ExportPadString("",200," ",false);//Reserved
newline;
return;
end;

//--------------------------------------
global
procedure BankExpLatvia1(record OPVc OPr,integer expdate)  //  Latvija - Merita
begin

record BankVc Bankr;
record CUVc Ver;
record CYBlock CY;
string 255 outstr,BankComment,tstr;
string 1 emptystr;
string 20 FirstVECode;
string 20 ckey,acc1,subacc2;
Boolean testf,TrHs, first,tv,foundf;
row OPVc OPrws;
integer rwc,i;
val totsum, totvat;

BlockLoad(CY);

   	testf = true;
    totsum = 0;
    totvat=0; 
    BankComment = "";
    FirstVECode = "";
    first = true;
   		    rwc=MatRowCnt(OPr); 		
   		    for (i=0; i<rwc; i=i+1) begin
   			    MatRowGet(OPr,i,OPrws);
                if ((OPrws.stp == 1) and (OPrws.ovst == 0)) then begin
                    if first then begin
                        FirstVECode = OPrws.VECode;
                        first = false;
                    end;
                    if (FirstVECode == OPrws.VECode) then begin
                       totsum = totsum + Round(OPrws.RecVal,DefaultRoundMode);
                       totvat = totvat + Round(OPrws.VATVal,DefaultRoundMode);
                       SelectNumber(OPrws.Comment,outstr);
                       BankComment = BankComment & outstr & ",";
                    end;
                end;
   		    end;
            if (expdate == 0) then begin
               outstr = DateToString(OPr.PayDate,"YYYYMMDD");
              end else begin
               outstr = DateToString(OPr.TransDate,"YYYYMMDD");
            end;

   			MatRowGet(OPr,0,OPrws);
   
           Ver.Code = OPrws.VECode;
           tv = ReadFirstMain(Ver,1,true);
           Bankr.Code=Ver.AccOperator;
           tv = ReadFirstMain(Bankr,1,true);

           tstr=DateToString(OPr.PayDate,"YYMMDD")&"/"&OPr.SerNr;
           ExportPadString(":21:"&tstr,20," ",false);NewLine;//date+number
     
           tstr=OPrws.RecCurncy &  ValToString(totsum,M4Val,"",",",0); 
           ExportPadString(":32B:"&tstr,23," ",false);NewLine;//currency + amount

           tstr="/"&OPr.BankAcc;
           ExportPadString(":50H:"&tstr,34," ",false);NewLine;//account name
           tstr=CY.CompName;   
           ExportPadString(tstr,35," ",false);NewLine;//customer name
        //   tstr=CY.Addr0;
           ExportPadString(tstr,35," ",false);NewLine;//address
     
           tstr=Bankr.SWIFT; 
           ExportPadString(":57A:"&tstr,16," ",false);NewLine;//SWIFT
           TwoStringFromOne(OPrws.BankAcc,acc1,subacc2);
           tstr="/"&acc1;
           ExportPadString(":59:"&tstr,34," ",false);NewLine;//beneficiar account
           tstr=Ver.Name;
           ExportPadString(tstr,35," ",false);NewLine;//beneficiar name
           tstr="/ID/"&Ver.VATNr;
           ExportPadString(tstr,17," ",false);NewLine;//beneficiar id
           if (subacc2<>"") then begin
             tstr="/SUB/"&subacc2;
             ExportPadString(tstr,16," ",false);NewLine;//beneficiar subaccount
           end;
           //   ExportPadString(tstr,16," ",false);NewLine;//budget income code

           tstr=Left(BankComment,35);
           ExportPadString(":70:"&tstr,39," ",false);NewLine;//remark
           if (len(BankComment)>35) then begin 
	            tstr=Right(BankComment,len(BankComment)-35);
             ExportPadString(tstr,35," ",false);NewLine;//remark
           end;   
           if (len(BankComment)>70) then begin 
	            tstr=Right(BankComment,len(BankComment)-70);
             ExportPadString(tstr,35," ",false);NewLine;//remark
           end;  
           if (totvat>0) then begin 
		           	tstr="t.sk. PVN 18% ";
		           	tstr=tstr & totvat & OPr.PayCurCode;
              ExportPadString(tstr,35," ",false);NewLine;//VAT string
		         end;
     //      if (OPrws.RecCurncy<>OPrws.BankCurncy) then begin
    	//     tstr=OPrws.RecCurncy & ValToString(OPrws.RecVal,M4Val,"",","); 
     //	     ExportPadString(":33B:"&tstr,23," ",false);NewLine;// original currency/amount
     //      end;

           ExportPadString(":71A:BEN",8," ",false);NewLine;//special code

return;
end;


//--------------------------------------
global
procedure BankExpLatvia1a(record OPVc OPr,integer whopay)  //  Latvija - Solo -currency
begin

record BankVc Bankr;
record CUVc Ver;
record CYBlock CY;
string 255 outstr,BankComment,tstr;
string 1 emptystr;
string 20 FirstVECode;
string 20 ckey,acc1,subacc2;
Boolean testf,TrHs, first,tv,foundf;
row OPVc OPrws;
integer rwc,i;
val totsum, totvat;
Integer expdate;

BlockLoad(CY);

   	testf = true;
    totsum = 0;
    totvat=0; 
    BankComment = "";
    FirstVECode = "";
    first = true;
   		    rwc=MatRowCnt(OPr); 		
   		    for (i=0; i<rwc; i=i+1) begin
   			    MatRowGet(OPr,i,OPrws);
                if ((OPrws.stp == 1) and (OPrws.ovst == 0)) then begin
                    if first then begin
                        FirstVECode = OPrws.VECode;
                        first = false;
                    end;
                    if (FirstVECode == OPrws.VECode) then begin
                       totsum = totsum + Round(OPrws.RecVal,DefaultRoundMode);
                       totvat = totvat + Round(OPrws.VATVal,GetVATRoundModeRB);
                       SelectNumber(OPrws.Comment,outstr);
                       BankComment = BankComment & outstr & ",";
                    end;
                end;
   		    end;
            if (expdate == 0) then begin// it has always been zero so far
               outstr = DateToString(OPr.PayDate,"YYMMDD");
              end else begin
               outstr = DateToString(OPr.TransDate,"YYMMDD");
            end;

   			MatRowGet(OPr,0,OPrws);
   
           Ver.Code = OPrws.VECode;
           tv = ReadFirstMain(Ver,1,true);
           Bankr.Code=Ver.AccOperator;
           tv = ReadFirstMain(Bankr,1,true);
           
           ExportPadString("2499",4," ",false);//1-Application code
           ExportPadString("1",1," ",false);//2-Record code
           ExportPadString("0",1," ",false);//3-Transaction type
           tstr=Ver.Name;
           ExportPadString(tstr,35," ",false);//4-Beneficiary name and address
           tstr=Ver.InvAddr0;
           ExportPadString(tstr,35," ",false);//4-Beneficiary name and address
           tstr=Ver.VATNr;
           ExportPadString(tstr,70," ",false);//4-Beneficiary name and address
           tstr=Bankr.SWIFT; 
           ExportPadString(tstr,11," ",false);//5-SWIFT code
           tstr=Bankr.Name;
           ExportPadString(tstr,70," ",false);//5.1-Name and address of beneficiary's bank
           tstr=Bankr.Address0;
           ExportPadString(tstr,70," ",false);//5.1-Name and address of beneficiary's bank
           TwoStringFromOne(OPrws.BankAcc,acc1,subacc2);
           tstr=acc1;
           ExportPadString(tstr,35," ",false);//6-Beneficiary's account number
           tstr=BankComment;
           ExportPadString(tstr,140," ",false);//7 -Notice to beneficiary
           tstr=ValToString(totsum,M4Val,"","",0); 
           ExportPadString(tstr,15,"0",true);//8-amount of payment in foreign currency
           ExportPadString(" ",1," ",false);//9-reserved
           tstr=OPrws.RecCurncy;
           ExportPadString(tstr,3," ",false);//10-currency code
           ExportPadString("",9,"0",false);//11-Rate
           tstr="";
           ExportPadString(tstr,15,"0",true);//12-Payment countervalue ??????
           tstr=Ver.CountryCode;
           if (tstr=="") then begin tstr="LV"; end;
           ExportPadString(tstr,2," ",false);//13-Beneficiary country
           ExportPadString("",35," ",false);//14-National clearing code
           ExportPadString("",6," ",false);//15-Reserved
           ExportPadString("K",1," ",false);//16-Payment type
           ExportPadString("V",1,"V",false);//17-Service charge
           ExportPadString("",13," ",false);//18-20-Reserved 
           ExportPadString("",20," ",false);//21-Reference domestic
           ExportPadString("",1," ",false);//22-Reserved
           ExportPadString("0",1," ",false);//23-Feedback currency unit 0/1 ????
           ExportPadString("",1," ",false);//24-reserved
           ExportPadString("",13,"0",true);//25-Euro rate of payment???
           ExportPadString("",13,"0",true);//26-Euro rate of debit????
           ExportPadString("",15," ",false);//27-reserved
           tstr=outstr;
           ExportPadString(tstr,6," ",false);//28-Debit date
           ExportPadString("",5," ",false);//29-Reserved
           ExportPadString("",15,"0",true);//30-countervalue of debit
           tstr=ValToString(totsum,M4Val,"","",0);
           ExportPadString(tstr,15,"0",true);//31-Debit amount in foreign currency
           ExportPadString(tstr,50," ",false);//32-Customer's own information
           ExportPadString("",9," ",false);//33-Reserved
           ExportPadString("",15," ",false);//34-Reserved
           ExportPadString("",1," ",false);//35-Reserved
           tstr=outstr;
           ExportPadString(tstr,6," ",false);//36.1-payment processing date
           ExportPadString("",8," ",false);//36.2-Reserved
           ExportPadString("",14," ",false);//37-Reserved
           ExportPadString("",1," ",false);//38-Reserved
           ExportPadString("",14," ",false);//39-time of reception of payment
           ExportPadString("",14," ",false);//40-Reserved
           ExportPadString("",19," ",false);//41-Reserved
           ExportPadString("",19," ",false);//42-Reserved
           ExportPadString("",1," ",false);//43-Reserved
           ExportPadString("",6," ",false);//44-forward/foreign currency deal reference
           ExportPadString("",12," ",false);//45-cross rate issued by the bank
           ExportPadString("",1," ",false);//45.1-Reserved
           tstr=OPr.BankAcc;
           ExportPadString(tstr,14," ",false);//46.1-Account for debeted
           tstr=OPr.PayCurCode;
           ExportPadString("",3," ",false);//46.2-Currency code of the account to be debited
           ExportPadString("",9,"0",false);//47-Debit exchange rate
           ExportPadString("",25," ",false);//48-filling code/reason for rejection
         
           
           
           NewLine;
           
       


return;
end;

#endif
