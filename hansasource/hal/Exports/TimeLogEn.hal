external procedure NewLineExport();

global
updating procedure TimeLogEn(record RcVc RepSpec)
begin
  record TLSettingBlock TLSb;
  record ActVc TLActr;
  row ActVc TLActrw;
  Boolean found;
  
  BlockLoad(TLSb);
  TLSb.ExportFileName = RepSpec.f1;
  BlockStore(TLSb);
  
  CreateFile(RepSpec.f1);
  ExportString(USetStr(18650));
  ExportString(USetStr(18651));
  ExportString(USetStr(18652));
  ExportString(USetStr(18653));
  ExportString(USetStr(18654));
  ExportString(USetStr(18655));
  ExportString(USetStr(18656));
  ExportString(USetStr(18657));
  ExportString(USetStr(18658));
  ExportString(USetStr(18659));
//  ExportString(USetStr(18660));
  ExportString(USetStr(18661));
  ExportString(USetStr(18662));
//  ExportString(USetStr(18663));
  ExportString(USetStr(18664));
  ExportString(USetStr(18665));
  ExportString(USetStr(18666));
  ExportString(USetStr(18667));
  NewLineExport;
  
  TLActr.TransDate = RepSpec.sStartDate;
  found = true;
  
  while (LoopKey("TransDate", TLActr,1,found)) begin
    if (DateInRange(TLActr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin
      found = false;
    end;
    if (found) then begin      
      ExportLongint(TLActr.SerNr);
      ExportString(TLActr.MainPersons);
      ExportString(TLSb.UserName);
      ExportString(TLActr.Comment);
      ExportDate(TLActr.TransDate);
      ExportDate(TLActr.EndDate);
      ExportString(TLActr.StartTime);
      ExportString(TLActr.EndTime);
      ExportString(TLActr.CostTime);
      ExportString(TLActr.PRCode);
//      ExportString(TLActr.PRName);
      ExportString(TLActr.ActType);
      ExportString(TLActr.ActResult);
//      ExportString(TLActr.Type);
      ExportString(TLActr.OKFlag);
      ExportString(TLActr.Invalid);      
      if (MatRowCnt(TLActr)>0) then begin
        MatRowGet(TLActr,0,TLActrw);
        ExportString(TLActrw.TextCode);
        ExportString(TLActrw.Text);
      end;
      NewLineExport;
    end;
  end; 
  CloseFile;  
  return;
end;
