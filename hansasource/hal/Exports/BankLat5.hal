external procedure NewLineExport();external function roundmode DefaultRoundMode();external procedure ConvertStrToXMLStr(string,var string);external procedure GetBaseCurncy(Integer,var string);function boolean SupplierPaymentsAdded(array string avecodes,var Integer size,string vecode,var string rcode)begin  integer i;  boolean foundf;  for (i=0;i<size;i=i+1) begin    if (avecodes[i]==vecode) then begin      foundf = true;      i = size;    end;  end;      if (!foundf) then begin    rcode = vecode;    avecodes[size] = vecode;    size = size + 1;  end;  SupplierPaymentsAdded = foundf;  return;end;procedure ExportSingleLine(string tstr,boolean nlinef)begin  ExportPadString(tstr,BytesInString(tstr),"",false);  if (nlinef) then begin    NewLineExport;  end;  return;end;globalprocedure BankExpLatvian_FidaVista_Header(record RcVc RepSpec)begin  string 255 tstr;  record CYBlock CYbl;    BlockLoad(CYBl);    tstr = "<?xml version=""1.0"" encoding=""UTF-8"" ?>";  ExportSingleLine(tstr,true);  tstr = "<FIDAVISTA xmlns=""http://www.bankasoc.lv/fidavista/fidavista0101.xsd"">";  ExportSingleLine(tstr,true);  ExportSingleLine("<Header>",true);  ConvertStrToXMLStr(DateToString(CurrentDate,"YYYYMMDD") & StripNonDigits(CurrentTime) & "000",tstr);  ExportSingleLine("<Timestamp>",false);  ExportSingleLine(tstr,false);  ExportSingleLine("</Timestamp>",true);  ExportSingleLine("<From>",false);  ConvertStrToXMLStr(CYbl.CompName,tstr);  ExportSingleLine(tstr,false);  ExportSingleLine("</From>",true);  ExportSingleLine("</Header>",true);  return;end;globalprocedure BankExpLatvian_FidaVista_Footer()begin  ExportSingleLine("</FIDAVISTA>",true);  return;end;globalprocedure BankExpLatvian_FidaVista_Payments(record RcVc RepSpec,record OPVc OPr)begin  record BankVc Bankr;  record CUVc Ver;  record CYBlock CY;  record PMBlock PMRec;  row PMBlock PMrw;  string 255 outstr,BankComment,tstr2,fName;  string 1 emptystr;  string 20 vecode;  integer rwc,vecnt,rwcntpm,i,s,j;  val totsum, totvat;  integer expdate,wn;  string 20 ckey;  LongInt afr,ato;  Integer keys;  string 1 nc;  array string 200 aVECode;  row OPVc OPrw,OP2rw;  record VIVc VIr;  record POVc POr;  string 10 bc;  integer size;  boolean multlist;  string 255 tlist,paymode;  boolean testf2;    rwc = MatRowCnt(OPr);  for (i=0;i<rwc;i=i+1) begin    MatRowGet(OPr,i,OPrw);    testf2 = true;    paymode = OPrw.PayMode;    if (blank(paymode)) then begin      paymode = OPr.PayMode;    end;    if (nonblank(RepSpec.FirstAcc)) then begin      if (paymode!=RepSpec.FirstAcc) then begin testf2 = false; end;    end;    if (OPrw.ovst!=0) then begin testf2 = false; end;    if (testf2) then begin    if (SupplierPaymentsAdded(aVECode,vecnt,OPrw.VECode,vecode)==false) then begin      totsum = 0;      totvat = 0;      BankComment = "";      if (testf2) then begin        for (s=0;s<rwc;s=s+1) begin          MatRowGet(OPr,s,OP2rw);          if (vecode==OP2rw.VECode and OP2rw.ovst==0) then begin            totsum = totsum + Round(OP2rw.RecVal,DefaultRoundMode);            outstr = OP2rw.VISerNr;            if ((BytesInString(BankComment)+BytesInString(outstr))<=140) then begin              BankComment = BankComment & outstr & ",";            end;          end;        end;        ExportSingleLine("<Payment>",true);        MatRowGet(OPr,i,OPrw);        ExportSingleLine("<DocNo>",false);        if (vecnt==1) then begin          ConvertStrToXMLStr(OPr.SerNr,outstr);        end else begin          ConvertStrToXMLStr(OPr.SerNr,outstr);        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</DocNo>",true);        ExportSingleLine("<RegDate>",false);        ConvertStrToXMLStr(DateToString(OPr.PayDate,"YYYY-MM-DD"),outstr);        ExportSingleLine(outstr,false);        ExportSingleLine("</RegDate>",true);        ExportSingleLine("<TaxPmtFlg>",false);        ExportSingleLine("N",false);        ExportSingleLine("</TaxPmtFlg>",true);        ExportSingleLine("<Ccy>",false);        if (blank(OPr.PayCurCode)) then begin          outstr = bc;        end else begin          ConvertStrToXMLStr(OPr.PayCurCode,outstr);        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</Ccy>",true);        ExportSingleLine("<PmtInfo>",false);        outstr = "";        multlist = false;        tlist = "";        for(s=0;s<rwc;s=s+1) begin          MatRowGet(OPr,s,OP2rw);          if (vecode==OP2rw.VECode and OP2rw.ovst==0) then begin            if (OP2rw.VISerNr>-1) then begin              if (nonblank(tlist)) then begin                tlist = tlist & ",";                multlist = true;              end;              tlist = tlist & OP2rw.VISerNr;            end;            if (OP2rw.OrderNr!=-1) then begin              POr.SerNr = OP2rw.OrderNr;              if (ReadFirstMain(POr,1,true)) then begin end;              if (nonblank(outstr)) then begin                outstr = outstr & "," & POr.OrdNr;              end else begin                outstr = POr.OrdNr;              end;            end;            if (nonblank(OP2rw.BankRefStr) and OP2rw.VISerNr <> -1) then begin              if (nonblank(outstr)) then begin                if (nonblank(VIr.InvoiceNr)) then begin                  outstr = outstr & "," & VIr.InvoiceNr;                end else begin                  outstr = outstr & "," &  OP2rw.BankRefStr;                end;              end else begin                outstr = OP2rw.BankRefStr;              end;            end;            if (OP2rw.VISerNr==-1 and OP2rw.OrderNr==-1) then begin              if (blank(outstr)) then begin                outstr = USetStr(16492) & " " & OP2rw.PrepayNr;              end else begin                outstr = outstr & ", " & USetStr(16492) & " " & OP2rw.PrepayNr;              end;            end;          end;        end;        if (blank(outstr) and nonblank(tlist)) then begin          if (multlist) then begin            outstr = UsetStr(12796) & " " & tlist & " " & USetStr(10071);          end else begin            outstr = UsetStr(8102) & " " & tlist & " " & USetStr(10071);          end;        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</PmtInfo>",true);             ExportSingleLine("<PayLegalId>",false);        ConvertStrToXMLStr(CY.VATNr,outstr);        ExportSingleLine(outstr,false);        ExportSingleLine("</PayLegalId>",true);             ExportSingleLine("<PayAccNo>",false);        BlockLoad(PMRec);        rwcntpm = MatRowCnt(PMRec);        for (s=0;s<rwcntpm;s=s+1) begin          MatRowGet(PMRec,s,PMrw);          if (PMrw.Code==OPr.PayMode) then begin            ConvertStrToXMLStr(PMrw.BankNr,outstr);            goto LGetPMBankAccName;          end;        end;  LGetPMBankAccName:;        ExportSingleLine(outstr,false);        ExportSingleLine("</PayAccNo>",true);             ExportSingleLine("<DebitCcy>",false);        if (blank(OPr.PayCurCode)) then begin          outstr = bc;        end else begin          ConvertStrToXMLStr(OPr.PayCurCode,outstr);        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</DebitCcy>",true);             ExportSingleLine("<BenSet>",true);             ExportSingleLine("<Priority>",false);        if (RepSpec.flags[3]==0) then begin          outstr = "N";        end;        if (RepSpec.flags[3]==1) then begin          outstr = "U";        end;        if (RepSpec.flags[3]==2) then begin          outstr = "X";        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</Priority>",true);             ExportSingleLine("<Comm>",false);        if (RepSpec.flags[4]==0) then begin          outstr = "OUR";        end;        if (RepSpec.flags[4]==1) then begin          outstr = "BEN";        end;        if (RepSpec.flags[4]==2) then begin          outstr = "SHA";        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</Comm>",true);             ExportSingleLine("<Amt>",false);        ConvertStrToXMLStr(ValToString(totsum,M4Val,"",".",0),outstr);        ExportSingleLine(outstr,false);        ExportSingleLine("</Amt>",true);             ExportSingleLine("<BenAccNo>",false);        ConvertStrToXMLStr(OPrw.BankAcc,outstr);        ExportSingleLine(outstr,false);        ExportSingleLine("</BenAccNo>",true);             Ver.Code = OPrw.VECode;        if (ReadFirstMain(Ver,1,true)==true) then begin end;        Bankr.Code = Ver.AccOperator;        if (ReadFirstMain(Bankr,1,true)==true) then begin end;             ExportSingleLine("<BenName>",false);        ConvertStrToXMLStr(Ver.Name,outstr);        if(BytesInString(outstr) <=105) then begin          ExportSingleLine(outstr,false);        end else begin          ExportSingleLine(left(outstr,105),false);        end;        ExportSingleLine("</BenName>",true);             ExportSingleLine("<BenLegalId>",false);        if (nonblank(Ver.RegNr1)) then begin          ConvertStrToXMLStr(Ver.RegNr1,outstr);        end else begin          ConvertStrToXMLStr(Ver.VATNr,outstr);        end;        ExportSingleLine(outstr,false);        ExportSingleLine("</BenLegalId>",true);        ExportSingleLine("<BenAddress>",false);        ConvertStrToXMLStr(Ver.InvAddr0,outstr);        if (BytesInString(outstr)<=70) then begin          ExportSingleLine(outstr,false);        end else begin          ExportSingleLine(left(outstr,70),false);        end;        ExportSingleLine("</BenAddress>",true);             ExportSingleLine("<BenCountry>",false);        ConvertStrToXMLStr(Ver.CountryCode,outstr);        if (outstr=="") then begin outstr = CY.CountryCode; end;        ExportSingleLine(outstr,false);        ExportSingleLine("</BenCountry>",true);             ExportSingleLine("<BBName>",false);        ConvertStrToXMLStr(Bankr.Name,outstr);        ExportSingleLine(outstr,false);        ExportSingleLine("</BBName>",true);             ExportSingleLine("<BBAddress>",false);        ConvertStrToXMLStr(Bankr.Address0,outstr);        if(BytesInString(outstr) <= 70) then begin          ExportSingleLine(outstr,false);        end else begin          ExportSingleLine(left(outstr,70),false);        end;        ExportSingleLine("</BBAddress>",true);             ExportSingleLine("<BBSwift>",false);        ConvertStrToXMLStr(Bankr.SWIFT,outstr);        ExportSingleLine(outstr,false);        ExportSingleLine("</BBSwift>",true);             ExportSingleLine("</BenSet>",true);        ExportSingleLine("</Payment>",true);      end;    end;    end;  end;  return;end;