
function 
Boolean OrdRowMatchFlags(val qty,val ord2,val invd, Integer notship, Integer partship, Integer notinvd, var val t)
begin
  Boolean testf,L99f;
  val temp;

  L99f = false;
  testf = false;
  temp = qty - ord2;
  if ((notinvd==1) and (partship==0) and (notship==0)) then begin
   if (ord2==0) then begin
    L99f = true;
   end;
     if (L99f==false) then begin
       if (invd<>0) then begin
      temp = ord2 - invd;
      if (temp==0) then begin
        L99f = true;
      end;
     end;
     end;
  end;
  if (L99f==false) then begin
    if (notship==1) then begin
     if (ord2<>0) then begin
        if (partship==0) then begin
        L99f = true;
      end;
     end;
    end;
    if (L99f==false) then begin
      if (partship==1) then begin
       if (ord2==0) then begin
        if (notship==0) then begin
          L99f = true;
        end;
       end else begin
        if (temp==0) then begin
          L99f = true;
        end;
       end;
      end;
    end;
  end;
  if (L99f==false) then begin
    testf = true;
  end;

  t = temp;
  OrdRowMatchFlags = testf;
  return;
end; 

function Boolean OutOrdRows(record RcVc RepSpec,record ORVc ORp,Integer notship,Integer partship,Integer notinvd)
begin
  Integer i,rwcnt;
  string 255 tstr,tstr1;
  String 10 unitt;
  record INVc INDr;
  record SysFormatBlock SysFormatRec;
  Row ORVc ORrw;
  row INVc inrw;
  val t;
  Integer j,inrows;
  Boolean res,testf;
  
  
  BlockLoad(SysFormatRec);
  res = true;
  if (RepSpec.ArtMode==0) then begin
  res = false;
  rwcnt = MatRowCnt(ORp);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    testf = true;
    MatRowGet(ORp,i,ORrw);
    if (OrdRowMatchFlags(ORrw.Quant,ORrw.Shipd2,ORrw.Invd,RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4],t)==false) then begin 
        testf = false; 
      end;
    if nonblank(RepSpec.f3) then begin
      if (RepSpec.f3<>ORrw.ArtCode) then begin testf = false; end;
    end;
      INDr.Code=ORrw.ArtCode;
    if ReadFirstMain(INDr,1,true) then begin
    tstr = INDr.Group;
      unitt = INDr.Unittext;
    end;
    if nonblank(RepSpec.AccStr) then begin
      if (RepSpec.AccStr<>tstr) then begin testf = false; end;
    end;
    if (testf) then begin
      ExportLongInt(ORp.SerNr);
       ExportDate(ORp.OrdDate);
       if (BlankDate(ORrw.PlanShipRow)) then begin
         ExportString(ORp.PlanShip);
       end else begin
         ExportDate(ORrw.PlanShipRow);
       end;
       ExportString(ORp.CustCode);
       ExportString(ORp.Addr0);
       ExportString(ORp.SalesMan);
       ExportString(ORp.OrderClass);
       ExportString(ORrw.ArtCode);
       ExportString(tstr);
       tstr1 = ValToString(ORrw.Quant,M4Qty,"",SysFormatRec.decimalPt,0);
       ExportString(tstr1);
       tstr1 = ValToString(t,M4Val,"",SysFormatRec.decimalPt,0);
       ExportString(tstr1);
       ExportString(ORrw.Spec);
       tstr1 = ValToString(ORrw.Price,M4Val,"",SysFormatRec.decimalPt,0);
       ExportString(tstr1);
       tstr1 = ValToString(ORrw.Sum,M4Val,"",SysFormatRec.decimalPt,0);
       ExportString(tstr1);
       tstr1 = ValToString(ORrw.vRebate,M41Val,"",SysFormatRec.decimalPt,0);
       ExportString(tstr1);
       ExportString(ORrw.SalesAcc);
       tstr1 = ValToString(ORrw.rowGP,M4Val,"",SysFormatRec.decimalPt,0);
       ExportString(tstr1);
       ExportString(ORrw.VATCode);
       ExportString(unitt);
       res = true;
       NewLine;
      end;
    end;
  end;
  if  (RepSpec.ArtMode==2) then begin/* export for diagonal */
   rwcnt = MatRowCnt(ORp);
   for (i = 0 ; i<rwcnt ;i=i+1) begin
     testf = true;
     MatRowGet(ORp,i,ORrw);
     if nonblank(RepSpec.f3) then begin
      if (RepSpec.f3<>ORrw.ArtCode) then begin testf = false; end;
        end;
      INDr.Code = ORrw.ArtCode;
     if ReadFirstMain(INDr,1,true) then begin
      tstr = INDr.Group;
     end;
       if nonblank(RepSpec.AccStr) then begin
      if (RepSpec.AccStr<>tstr) then begin testf = false; end;
     end;
     if (testf) then begin
        tstr = ORrw.ArtCode;
       tstr = tstr & ":";
       tstr = tstr & ORrw.Spec;
       ExportString(tstr);
        NewLine;
      end;
  end;
  NewLine;
  end;
  if  (RepSpec.ArtMode==1) then begin  /*this option only used for Iceland */
   rwcnt = MatRowCnt(ORp);
    for (i = 0 ; i<rwcnt ;i=i+1) begin
      testf = true;
     MatRowGet(ORp,i,ORrw);
     if (nonblank(RepSpec.f3)) then begin
      if (RepSpec.f3==ORrw.ArtCode) then begin testf = false; end;
     end;
     tstr="";
     INDr.Code = ORrw.ArtCode;
     if (ReadFirstMain(INDr,1,true)) then begin
        inrows = MatRowCnt(INDr);
        for (j=0;j<inrows;j=j+1) begin
           MatRowGet(INDr,j,inrw);
           if (inrw.LangCode=="RUV") then begin
             tstr = inrw.Text;
           end;
        end;
     end;
     if nonblank(tstr) then begin  testf = false; end;
     if (testf) then begin
       ExportString(ORp.ShipAddr0);
       ExportString(ORp.ShipAddr1);
       ExportString(ORp.ShipAddr2);
       ExportString(ORp.ShipAddr3);
       ExportLongInt(ORp.SerNr);
       ExportDate(ORp.OrdDate);
       ExportString(ORp.CustCode);
       ExportString(ORp.Addr0);
       ExportString(ORp.SalesMan);
       ExportString(ORrw.ArtCode);
       ExportString(ORrw.Spec);
       ExportString(tstr);
       NewLine;
       end;
  end;
  end;
  OutOrdRows = res;
  return;
end;

global
procedure OrdRowEn(record RcVc RepSpec)
begin
  Record ORVc MR;
  Boolean TrHs;
  string 30 fromcust,tocust;
  integer frorder,toorder;
  Boolean testf;
  string 255 ckey;
  LongInt long1,long2;
  
  long1 = FirstInRange(RepSpec.f1,20);
  long2 = LastInRange(RepSpec.f1,20);
  
  fromcust = FirstInRange(RepSpec.f2,30);
  tocust   = LastInRange(RepSpec.f2,30);

  if RepSpec.flags[6]==0 then begin
    ckey = "SerNr";
  end;
  if RepSpec.flags[6]==1 then begin
    ckey = "OrderClass";
  end;
  MR.SerNr = long1;
  MR.OrderClass="";

  TrHs = true;
  while LoopKey(ckey,MR,1,TrHs) begin
   TrHs = true;
   if (TrHs) then begin
      if (RepSpec.ArtMode==0) then begin
        testf = true;
      end else begin
        testf = false;
      end;
      if (long2<>-1) then begin
       if (MR.SerNr<=long2) then begin testf = true; end;
      end;
      if (RepSpec.flags[2]==1) then begin /* Not Shipped */
       if (MR.ShipFlag==0) then begin testf = true; end;
      end;
      if (RepSpec.flags[3]==1) then begin /* Part Shipped */
       if ((MR.ShipFlag==0) and ((MR.InvFlag==0) or (MR.InvFlag==2))) then begin
        testf = true;
       end;
      end;
      if (RepSpec.flags[4]==1) then begin /* Not Invoiced */
       if ((MR.InvFlag==0) or (MR.InvFlag==1)) then begin testf = true; end;
      end;
      if (RepSpec.flags[5]==1) then begin /* All */
       testf = true;
      end;

    if (RepSpec.flags[6]==0) then begin
      if (long2<>-1) then begin
        if (MR.SerNr>long2) then begin TrHs = false; end;
      end;
    end;
    if (RepSpec.flags[6]==1) then begin
       if (long2<>-1) then begin
        if (MR.SerNr>long2) then begin testf = false; end;
       end;
       if (long1<>-1) then begin
        if (MR.SerNr<long1) then begin testf = false; end;
       end;
    end;
   end;
   if (testf) then begin
    if (SetInSet(RepSpec.ObjStr,MR.Objects)==false) then begin testf = false; end;
   end;
   if (TrHs==false) then begin testf = false; end;
   if (nonblank(RepSpec.f2)) then begin
    if ((MR.CustCode<fromcust) or (MR.CustCode>tocust)) then begin testf = false; end;
   end;
   if (DateInRange(MR.OrdDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
   if (testf) then begin
    if (RepSpec.flags[5]==1) then begin
       testf = OutOrdRows(RepSpec,MR,0,0,0);
    end else begin
       testf = OutOrdRows(RepSpec,MR,RepSpec.flags[2],RepSpec.flags[3],RepSpec.flags[4]);
    end;
    if (testf) then begin
      UserTrace(MR.SerNr,0);
    end;
   end;
  end;
  NewLine;
  return;
end;
