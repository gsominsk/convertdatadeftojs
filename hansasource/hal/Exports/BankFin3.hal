/* Bankfile for Finland */
/* Foreign Currency Payments, LUM2 nk*/
/* This code has never been used. There is another function called BankExpFinland21 that does pretty much the same thing */
/* and it is activated when someone checks the Foregign Country payment checkbox, this was made as a seperate bank file type, which is wrong... */

/* #######NOT USED####### */


external procedure DblDigit(var string,Integer);
 
global
updating procedure BankExpFinland3(record OPVc OPr,Integer today,String curnc,integer ptype,integer whopays)
begin
  record VIVc VIr;
  record CYBlock CompYear;
  record CUVc VEr;
  row OPVc OPrw;
  string 50 tstr;
  string 2 tstr1;
  val temp;
  Integer i,rwcnt;
  Integer rowcount;
  Integer rowtype;
  Boolean testf;
  Boolean VEf;
  LongInt totpaym;
  val totam;

  Integer cnt;

  string 255 benef;
  record BankVc Bankr;
   
  BlockLoad(CompYear);
  totpaym = 0; 
  totam = 0;
  //6.3.1 Batch record
  //Application code
  ExportPadString("LUM2",4," ",true);

  //Record code
  ExportPadString("0",1," ",true);
  
  //File type
  ExportPadString("0",1," ",true);
  
  //Reserved for further use
  ExportPadString("",1," ",true);
  
  //Remitter«s tax number
  ExportPadString(CompYear.VATNr,11,"0",true);
  
  //Supplemen.customer code
  ExportPadString("",5," ",true);
  
  //Reserved for further use
  ExportPadString("",2," ",true);
  
  //Acceptance code
  ExportPadString("0",1," ",true);
  
  //Creation time and date
  if (today==1) then begin
    tstr = DateToString(OPr.TransDate,"YYMMDD");
  end else begin
    tstr = DateToString(CurrentDate,"YYMMDD");
  end;
  DblDigit(tstr1,GetHour(CurrentTime));
  tstr = tstr & tstr1;
  DblDigit(tstr1,GetMinute(CurrentTime));
  tstr = tstr & tstr1;

  ExportPadString(tstr,10," ",true);

  ExportPadString(DateToString(OPr.TransDate,"YYYYMMDD"),8," ",true);
 
  //Reserved for further use
  ExportPadString("",6," ",true);
  
  //Debit date
  ExportPadString(DateToString(OPr.TransDate,"YYYYMMDD"),8," ",true);
  
  ExportPadString("",242," ",true);
  ExportPadString("",200," ",true);
  ExportPadString("",100," ",true);
  NewLine;
  rwcnt = MatRowCnt(OPr);  
  for (i = 0; i<rwcnt; i=i+1) begin
   
    MatRowGet(OPr,i,OPrw);
    testf = true;
    if ((OPrw.ovst!=0) or (OPrw.stp!=1)) then begin
      testf = false;
    end;
    
    VIr.SerNr = OPrw.VISerNr;
    if (ReadFirstMain(VIr,1,true)==false) then begin
      testf = false;
    end else begin
     if (VIr.Invalid<>0) then begin 
      	testf = false;
     end;
    end;
    
    if testf then begin
      VEr.Code = VIr.VECode;
      if  (ReadFirstMain(VEr,1,true) == false) then begin
      		testf = false;
      end;
    end;   
    
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true) == false) then begin
      		testf = false;
    end; 
  
    //6.3.2 Paymnet record 
    if (testf) then begin  
      ExportPadString("LUM2",4," ",true);
      ExportPadString("1",1," ",true);
      ExportPadString("0",1," ",true);
      
      //Name and address of beneficiary
      benef = Left(VIr.VEName,35);
      ExportPadString(benef,35," ",false);
      
      benef = Left(VEr.InvAddr0,35);
      ExportPadString(benef,35," ",false);
      
      benef = Left(VEr.InvAddr1,35);
      ExportPadString(benef,35," ",false);
      
      benef = Left(VEr.InvAddr2,35);
      ExportPadString(benef,35," ",false);
      
      //Country Code
      ExportPadString(Left(VEr.CountryCode,2),2," ",false);
      
      //the beneficiary bank's SWIFT code
      ExportPadString(Bankr.SWIFT,11," ",false);
      
      //the beneficiary bank's name and address
      benef = Left(Bankr.Name,35);
      ExportPadString(benef,35," ",false);
        
      benef = Left(Bankr.Address0,35);
      ExportPadString(benef,35," ",false);
      
      benef = Left(Bankr.Address1,35);
      ExportPadString(benef,35," ",false);
        
      benef = Left(Bankr.Address2,35);
      ExportPadString(benef,35," ",false);
   
      //Ben.accounts number
      ExportPadString(OPrw.BankAcc,34," ",false);//34
    
      //Reason for paymnet, notified to beneficiary
      ExportPadString(VIr.InvoiceNr,140," ",true);

      //Foreign currency amount of payment 
      if (OPrw.RecVal < 0) then begin
        temp = 0 - OPrw.RecVal;
      end else begin
        temp = OPrw.RecVal;
      end;
      totam = totam + temp;
      ExportPadString(ValToString(temp,M4Val,"","",0),15,"0",true); 
      //Payment currency 
      ExportPadString(OPrw.RecCurncy,3," ",true);

      //Reserved for further use
      ExportPadString("",3," ",true);

      //Exchange rate agreement number
      ExportPadString("",14," ",true);      
                   
      //Payment type 
      if (ptype == 0)then begin
      	//Payment order
      	ExportPadString("M",1," ",true);
      end else begin
      	//Urgent paymnet order
      	ExportPadString("P",1," ",true);
      end;
     
      //Service fee: J or T
      if (whopays == 1) then begin
      	ExportPadString("J",1," ",true);
      end;
      if (whopays == 0) then begin
      	ExportPadString("T",1," ",true);
      end;
      	 
      //Debit date
      ExportPadString(DateToString(OPr.TransDate,"DDMMYYYY"),8," ",false);
      
      //Countervalue 
       if (OPrw.BankVal < 0) then begin
        temp = 0 - OPrw.BankVal;
      end else begin
        temp = OPrw.BankVal;
      end;
      ExportPadString(ValToString(temp,M4Val,"","",0),15,"0",true); 

      //Payment rate 
      ExportPadString("",11," ",true);
       
      //Account to be debited
      ExportPadString(ConvertSpecStr(OPr.BankAcc,"FINBANKACC"),14," ",true);
      
      //Currency of account to be debited
      ExportPadString(OPrw.BankCurncy,3," ",true);

      ExportPadString("",15," ",true); 
      ExportPadString("",20," ",true);
      ExportPadString("",1," ",true);
      ExportPadString("",3," ",true);
      NewLine; 
      totpaym = totpaym + 1;
   
    end;
  end;  
  //Third record
  ExportPadString("LUM2",4," ",true);
  ExportPadString("9",1," ",true);
  ExportPadString("0",1," ",true);
  ExportPadString(" ",1," ",false);
  ExportPadString(CompYear.VATNr,11,"0",true);
  ExportPadString(" ",5," ",false);
  ExportPadString(" ",2," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(totpaym,5,"0",true);
  ExportPadString(" ",5," ",false);
  ExportPadString(ValToString(totam,M4Val,"","",0),15,"0",true); 
  ExportPadString(" ",249," ",true);
  ExportPadString(" ",200," ",true);
  ExportPadString(" ",100," ",true);
 
  NewLine;
  
  return;
end;


