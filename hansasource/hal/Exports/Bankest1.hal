/* Bankfile for Estonia (TeleHansa) */

global
procedure BankExpEstonia1(record OPVc OPr,integer speedf,integer whichbank,integer wk,integer koond)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record PMBlock PMBlk;
  row PMBlock PMBlkrw;
  record CUVc VEr;
  record VIVc VIr;
  row OPVc OPrw;
  Integer i,rwcnt,j,rwcnt1;
  Integer nr;
  string 200 tstr;
  boolean found,foundt;
  boolean all;
  string 20 suppl;
  val koondval;
  array string 20 vendor;
  array integer rownr;
  array val payval;
  array string 82 comment;
  integer k,t,x;
  boolean ftest; 
  string 255 suplinv;
  
  BlockLoad(CompYear);
  BlockLoad(PMBlk);
  rwcnt = MatRowCnt(OPr);
  //normal  
  if (koond == 0) or (rwcnt <= 1) then begin 
    for (i = 0; i<rwcnt;i=i+1) begin
      MatRowGet(OPr,i,OPrw);
      if ((OPrw.stp==1) and (OPrw.ovst==0)) then begin
        VEr.Code = OPrw.VECode;
        found = ReadFirstMain(VEr,1,true);
        if nonblank(VEr.VEInvoiceToCode) then begin
          VEr.Code = VEr.VEInvoiceToCode;
          found = ReadFirstMain(VEr,1,true);
        end;
        ExportPadString("MKU",4," ",false);
/* Opkod */
        ExportPadString(speedf,3," ",false);
/* Bank */
        rwcnt1 = MatRowCnt(PMBlk);
        for(j=0;j<rwcnt1;j=j+1) begin
          MatRowGet(PMBlk,j,PMBlkrw);
          if OPr.PayMode == PMBlkrw.Code then begin
            if nonblank(PMBlkrw.BankName) then begin
              ExportPadString(PMBlkrw.BankName,3," ",true);
            end else begin
              ExportPadString(CompYear.BankCode,3," ",true);
            end;
          end;
        end;
/* Account */
        ExportPadString(OPr.BankAcc,16," ",false);
/* Supplier Bank */
        ExportPadString(VEr.AccOperator,3," ",true);
/* Supplier Account */
        if (nonblank(OPrw.BankAcc)) then begin
          tstr = OPrw.BankAcc;
        end else begin
          tstr = VEr.BankAccount;
        end;
        ExportPadString(tstr,16," ",false);    
/* Ref.nr */
        ExportPadString(VEr.VATNr,11," ",false);
/* C-code */
        ExportPadString(VEr.Name,30," ",false);
/* Amount */
        ExportPadString(ValToString(OPrw.RecVal,M4Val,"","",0),12," ",true);
/* Value Date */
        ExportPadString(DateToString(OPr.TransDate,"YYMMDD"),6," ",true);
/* Number */
        ExportPadString(OPr.SerNr,5," ",false);
/* Date */
        ExportPadString(DateToString(OPr.PayDate,"YYMMDD"),6," ",true);
/* Comment */
        ExportPadString(OPrw.Comment,70," ",false);
/* Currency */
        ExportPadString("EEK",3," ",false);
/* Bank reference nr*/        
//   ExportPadString(OPrw.BankRefStr,50," ",true);
/*Reference*/
        VIr.SerNr = OPrw.VISerNr;
        found = ReadFirstMain(VIr,1,true);
        ExportPadString(VIr.RefStr,20," ",true);
/* Riigikassa reference nr*/        
//tsp   ExportPadString(OPrw.rkPayNumber,20," ",true);
      	NewLine;
      	NewLine;      
      end;
    end;
    UserTrace("" & OPr.SerNr,2);
  end;
  if (koond == 1) and (rwcnt > 1) then begin
    //one payment per supplier
    k = 0;
    for (i = 0; i<rwcnt; i = i + 1) begin
      MatRowGet(OPr,i,OPrw);
      VIr.SerNr = OPrw.VISerNr;
      if ReadFirstMain(VIr,1,true) then begin
      	suplinv = VIr.InvoiceNr;
      end else begin
        suplinv = OPrw.VISerNr;
      end;

      if ReadFirstMain(VEr,1,true) then begin end;

      if ((OPrw.stp==1) and (OPrw.ovst==0)) then begin
        if (k == 0) then begin
          vendor[k] = OPrw.VECode;
          rownr[k] = i;
          payval[k] = OPrw.RecVal;
          if (OPrw.VISerNr<>-1) then begin
            comment[k] = "Arve Nr " &  suplinv;
          end;  
          k = 1;
        end else begin
          ftest = false;
          for (t = 0; t<k; t = t + 1) begin
            if (vendor[t] == OPrw.VECode) then begin
              payval[t] = payval[t] + OPrw.RecVal;
              if (OPrw.VISerNr<>-1) then begin
                comment[t] = comment[t] & "," &  suplinv;
              end;  
              ftest = true;
            end;
          end;
          if (ftest == false) then begin
            vendor[k] = OPrw.VECode;
            rownr[k] = i;
            payval[k] = OPrw.RecVal;
            if (OPrw.VISerNr<>-1) then begin
              comment[k] = "Arve Nr " &  suplinv;
            end;  
            k = k + 1;
          end;
        end;
      end;
    end;  
    for (t = 0; t<k; t = t + 1) begin
      VEr.Code = vendor[t];
      foundt = ReadFirstMain(VEr,1,true);
      if nonblank(VEr.VEInvoiceToCode) then begin
        VEr.Code = VEr.VEInvoiceToCode;
        foundt = ReadFirstMain(VEr,1,true);
      end;
      MatRowGet(OPr,rownr[t],OPrw);
      //koond
      ExportPadString("MKU",4," ",false);
/* Opkod */
      ExportPadString(speedf,3," ",false);
/* Bank */
      rwcnt1 = MatRowCnt(PMBlk);
      for(j=0;j<rwcnt1;j=j+1) begin
        MatRowGet(PMBlk,j,PMBlkrw);
        if OPr.PayMode == PMBlkrw.Code then begin
          if nonblank(PMBlkrw.BankName) then begin
            ExportPadString(PMBlkrw.BankName,3," ",true);
          end else begin
            ExportPadString(CompYear.BankCode,3," ",true);
          end;
        end;
      end;
/* Account */
      ExportPadString(OPr.BankAcc,16," ",false);
/* Supplier Bank */
      ExportPadString(VEr.AccOperator,3," ",true);
/* Supplier Account */
      if (nonblank(OPrw.BankAcc)) then begin
        tstr = OPrw.BankAcc;
      end else begin
        tstr = VEr.BankAccount;
      end;
      ExportPadString(tstr,16," ",false);    
/* Ref.nr */
      ExportPadString(VEr.VATNr,11," ",false);
/* C-code */
      ExportPadString(VEr.Name,30," ",false);
/* Amount */
      ExportPadString(ValToString(payval[t],M4Val,"","",0),12," ",true);
/* Value Date */
      ExportPadString(DateToString(OPr.TransDate,"YYMMDD"),6," ",true);
/* Number */
      ExportPadString(OPr.SerNr,5," ",false);
/* Date */
      ExportPadString(DateToString(OPr.PayDate,"YYMMDD"),6," ",true);
/* Comment */
      ExportPadString(comment[t],70," ",false);
/* Currency */
      ExportPadString("EEK",3," ",false);
/* Bank reference nr*/        
//tsp	ExportPadString(OPrw.BankRefStr,50," ",true);
/*Reference*/
      VIr.SerNr = OPrw.VISerNr;
      found = ReadFirstMain(VIr,1,true);
      ExportPadString(VIr.RefStr,20," ",true);
/* Riigikassa reference nr*/        
//tsp	ExportPadString(OPrw.rkPayNumber,20," ",true);
      NewLine;
      NewLine;      
    end;
    UserTrace("" & OPr.SerNr,2);
  end;

      
  return;
end;
