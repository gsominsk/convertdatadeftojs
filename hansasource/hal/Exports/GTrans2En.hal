external procedure TransExportOwnCheckVc(record RcVc);
external procedure TransExportCheckVc(record RcVc);
external procedure TransExportExpVc(record RcVc);
external function Boolean CanRegisterOnMedia(string,Integer);
external procedure ExpBackupString(string);
external procedure OutRegisterTag(string);

procedure TransExportChqDepVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record ChqDepVc ChqDepr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  ChqDepr.TransDate = RepSpec.sStartDate;
  ChqDepr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,ChqDepr,1,found)) begin
    testf = false;
    if (ChqDepr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (ChqDepr.OKFlag!=-1) then begin      
        testf = false;
        if (ChqDepr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end; 
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("ChqDepVc");
        first = false;
        NewLine;
      end;
      ExportRecord(ChqDepr);
      NewLine;
      UserTrace(ChqDepr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportPUVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record PUVc PUr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  PUr.TransDate = RepSpec.sStartDate;
  PUr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,PUr,1,found)) begin
    testf = false;
    if (PUr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (PUr.OKFlag!=-1) then begin
        testf = false;
        if (PUr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("PUVc");
        first = false;
        NewLine;
      end;
      ExportRecord(PUr);
      NewLine;
      UserTrace(PUr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportIVVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record IVVc IVr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  IVr.TransDate = RepSpec.sStartDate;
  IVr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,IVr,1,found)) begin
    testf = false;
    if (IVr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (IVr.OKFlag!=-1) then begin
        testf = false;
        if (IVr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("IVVc");
        first = false;
        NewLine;
      end;
      ExportRecord(IVr);
      NewLine;
      UserTrace(IVr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportVIVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record VIVc VIr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  VIr.TransDate = RepSpec.sStartDate;
  VIr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,VIr,1,found)) begin
    testf = false;
    if (VIr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (VIr.OKFlag!=-1) then begin
        testf = false;
        if (VIr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("VIVc");
        first = false;
        NewLine;
      end;
      ExportRecord(VIr);
      NewLine;
      UserTrace(VIr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportOPVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record OPVc OPr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  OPr.TransDate = RepSpec.sStartDate;
  OPr.DoneFlag = -1;
  ckey = "TransDate";
  found = CanRegisterOnMedia("OPVc",mtFile);
  while (LoopKey(ckey,OPr,1,found)) begin
    testf = false;
    if (OPr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (OPr.DoneFlag!=-1) then begin
        testf = false;
        if (OPr.DoneFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("OPVc");
        first = false;
        NewLine;
      end;
      ExportRecord(OPr);
      NewLine;
      UserTrace(OPr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportPPVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record PPVc PPr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  PPr.TransDate = RepSpec.sStartDate;
  PPr.DoneFlag = -1;
  ckey = "TransDate";
  found = CanRegisterOnMedia("PPVc",mtFile);
  while (LoopKey(ckey,PPr,1,found)) begin
    testf = false;
    if (PPr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (PPr.DoneFlag!=-1) then begin
        testf = false;
        if (PPr.DoneFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("PPVc");
        first = false;
        NewLine;
      end;
      ExportRecord(PPr);
      NewLine;
      UserTrace(PPr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportPOVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record POVc POr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  POr.TransDate = RepSpec.sStartDate;
  POr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,POr,1,found)) begin
    testf = false;
    if (POr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (POr.OKFlag!=-1) then begin
        testf = false;
        if (POr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("POVc");
        first = false;
        NewLine;
      end;
      ExportRecord(POr);
      NewLine;
      UserTrace(POr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportQTVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record QTVc QTr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  QTr.QTDate = RepSpec.sStartDate;
  ckey = "QTDate";
  found = true;
  while (LoopKey(ckey,QTr,1,found)) begin
    testf = false;
    if (QTr.QTDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;    
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("QTVc");
        first = false;
        NewLine;
      end;
      ExportRecord(QTr);
      NewLine;
      UserTrace(QTr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportIPVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record IPVc IPr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  IPr.TransDate = RepSpec.sStartDate;
  IPr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,IPr,1,found)) begin
    testf = false;
    if (IPr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (IPr.OKFlag!=-1) then begin
        testf = false;
        if (IPr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("IPVc");
        first = false;
        NewLine;
      end;
      ExportRecord(IPr);
      NewLine;
      UserTrace(IPr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportORVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record ORVc ORr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  ORr.OrdDate = RepSpec.sStartDate;
  ORr.OKFlag = -1;
  ckey = "OrdDate";
  found = true;
  while (LoopKey(ckey,ORr,1,found)) begin
    testf = false;
    if (ORr.OrdDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (ORr.OKFlag!=-1) then begin
        testf = false;
        if (ORr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("ORVc");
        first = false;
        NewLine;
      end;
      ExportRecord(ORr);
      NewLine;
      UserTrace(ORr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportSHVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record SHVc SHr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  SHr.ShipDate = RepSpec.sStartDate;
  SHr.OKFlag = -1;
  ckey = "ShipDate";
  found = true;
  while (LoopKey(ckey,SHr,1,found)) begin
    testf = false;
    if (SHr.ShipDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (SHr.OKFlag!=-1) then begin
        testf = false;
        if (SHr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("SHVc");
        first = false;
        NewLine;
      end;
      ExportRecord(SHr);
      NewLine;
      UserTrace(SHr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportSMVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record SMVc SMr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  SMr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,SMr,1,found)) begin
    testf = false;
    if (SMr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("SMVc");
        first = false;
        NewLine;
      end;
      ExportRecord(SMr);
      NewLine;
      UserTrace(SMr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportStockMovVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record StockMovVc StockMovr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  StockMovr.TransDate = RepSpec.sStartDate;
  StockMovr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,StockMovr,1,found)) begin
    testf = false;
    if (StockMovr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (StockMovr.OKFlag!=-1) then begin
        testf = false;
        if (StockMovr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("StockMovVc");
        first = false;
        NewLine;
      end;
      ExportRecord(StockMovr);
      NewLine;
      UserTrace(StockMovr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportTRVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record TRVc TRr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  TRr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,TRr,1,found)) begin
    testf = false;
    if (TRr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("TRVc");
        first = false;
        NewLine;
      end;
      ExportRecord(TRr);
      NewLine;
      UserTrace(TRr.Number,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportTSVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record TSVc TSr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  TSr.RegDate = RepSpec.sStartDate;
  TSr.OKFlag = -1;
  ckey = "RegDate";
  found = true;
  while (LoopKey(ckey,TSr,1,found)) begin
    testf = false;
    if (TSr.RegDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (TSr.OKFlag!=-1) then begin
        testf = false;
        if (TSr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("TSVc");
        first = false;
        NewLine;
      end;
      ExportRecord(TSr);
      NewLine;
      UserTrace(TSr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportSDVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record SDVc SDr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  SDr.TransDate = RepSpec.sStartDate;
  SDr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,SDr,1,found)) begin
    testf = false;
    if (SDr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (SDr.OKFlag!=-1) then begin
        testf = false;
        if (SDr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("SDVc");
        first = false;
        NewLine;
      end;
      ExportRecord(SDr);
      NewLine;
      UserTrace(SDr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportCLInVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record CLInVc CLInr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  CLInr.TransDate = RepSpec.sStartDate;
  CLInr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,CLInr,1,found)) begin
    testf = false;
    if (CLInr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (CLInr.OKFlag!=-1) then begin
        testf = false;
        if (CLInr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("CLInVc");
        first = false;
        NewLine;
      end;
      ExportRecord(CLInr);
      NewLine;
      UserTrace(CLInr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportCLOutVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record CLOutVc CLOutr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  CLOutr.TransDate = RepSpec.sStartDate;
  CLOutr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,CLOutr,1,found)) begin
    testf = false;
    if (CLOutr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (CLOutr.OKFlag!=-1) then begin
        testf = false;
        if (CLOutr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("CLOutVc");
        first = false;
        NewLine;
      end;
      ExportRecord(CLOutr);
      NewLine;
      UserTrace(CLOutr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportActVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record ActVc Actr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  Actr.TransDate = RepSpec.sStartDate;
  Actr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,Actr,1,found)) begin
    testf = false;
    if (Actr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (Actr.OKFlag!=-1) then begin
        testf = false;
        if (Actr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("ActVc");
        first = false;
        NewLine;
      end;
      ExportRecord(Actr);
      NewLine;
      UserTrace(Actr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportRetVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record RetVc Retr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  Retr.TransDate = RepSpec.sStartDate;
  Retr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,Retr,1,found)) begin
    testf = false;
    if (Retr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (Retr.OKFlag!=-1) then begin
        testf = false;
        if (Retr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("RetVc");
        first = false;
        NewLine;
      end;
      ExportRecord(Retr);
      NewLine;
      UserTrace(Retr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportStockTakeVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record StockTakeVc StockTaker;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  StockTaker.TransDate = RepSpec.sStartDate;
  StockTaker.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,StockTaker,1,found)) begin
    testf = false;
    if (StockTaker.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (StockTaker.OKFlag!=-1) then begin
        testf = false;
        if (StockTaker.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("StockTakeVc");
        first = false;
        NewLine;
      end;
      ExportRecord(StockTaker);
      NewLine;
      UserTrace(StockTaker.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportCOVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record COVc COr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  COr.CODate = RepSpec.sStartDate;
  COr.OKFlag = -1;
  ckey = "CODate";
  found = true;
  while (LoopKey(ckey,COr,1,found)) begin
    testf = false;
    if (COr.CODate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (COr.OKFlag!=-1) then begin
        testf = false;
        if (COr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("COVc");
        first = false;
        NewLine;
      end;
      ExportRecord(COr);
      NewLine;
      UserTrace(COr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportRetPUVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record RetPUVc RetPUr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  RetPUr.TransDate = RepSpec.sStartDate;
  RetPUr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,RetPUr,1,found)) begin
    testf = false;
    if (RetPUr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (RetPUr.OKFlag!=-1) then begin
        testf = false;
        if (RetPUr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("RetPUVc");
        first = false;
        NewLine;
      end;
      ExportRecord(RetPUr);
      NewLine;
      UserTrace(RetPUr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportIntORVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record IntORVc IntORr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  IntORr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,IntORr,1,found)) begin
    testf = false;
    if (IntORr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("IntORVc");
        first = false;
        NewLine;
      end;
      ExportRecord(IntORr);
      NewLine;
      UserTrace(IntORr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportAT2WrofVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record AT2WrofVc AT2Wrofr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  AT2Wrofr.TransDate = RepSpec.sStartDate;
  AT2Wrofr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,AT2Wrofr,1,found)) begin
    testf = false;
    if (AT2Wrofr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (AT2Wrofr.OKFlag!=-1) then begin
        testf = false;
        if (AT2Wrofr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("AT2WrofVc");
        first = false;
        NewLine;
      end;
      ExportRecord(AT2Wrofr);
      NewLine;
      UserTrace(AT2Wrofr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportAT2DprVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record AT2DprVc AT2Dprr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  AT2Dprr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,AT2Dprr,1,found)) begin
    testf = false;
    if (AT2Dprr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("AT2DprVc");
        first = false;
        NewLine;
      end;
      ExportRecord(AT2Dprr);
      NewLine;
      UserTrace(AT2Dprr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportAT2TakeVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record AT2TakeVc AT2Taker;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  AT2Taker.TransDate = RepSpec.sStartDate;
  AT2Taker.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,AT2Taker,1,found)) begin
    testf = false;
    if (AT2Taker.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (AT2Taker.OKFlag!=-1) then begin
        testf = false;
        if (AT2Taker.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("AT2TakeVc");
        first = false;
        NewLine;
      end;
      ExportRecord(AT2Taker);
      NewLine;
      UserTrace(AT2Taker.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportSVOVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record SVOVc SVOr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  SVOr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,SVOr,1,found)) begin
    testf = false;
    if (SVOr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("SVOVc");
        first = false;
        NewLine;
      end;
      ExportRecord(SVOr);
      NewLine;
      UserTrace(SVOr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportWOVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record WOVc WOr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  WOr.TransDate = RepSpec.sStartDate;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,WOr,1,found)) begin
    testf = false;
    if (WOr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
    end;  
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("WOVc");
        first = false;
        NewLine;
      end;
      ExportRecord(WOr);
      NewLine;
      UserTrace(WOr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportWSVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record WSVc WSr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  WSr.TransDate = RepSpec.sStartDate;
  WSr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,WSr,1,found)) begin
    testf = false;
    if (WSr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (WSr.OKFlag!=-1) then begin
        testf = false;
        if (WSr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("WSVc");
        first = false;
        NewLine;
      end;
      ExportRecord(WSr);
      NewLine;
      UserTrace(WSr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportSRVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record SRVc SRr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  SRr.TransDate = RepSpec.sStartDate;
  SRr.OKFlag = -1;
  ckey = "TransDate";
  found = true;
  while (LoopKey(ckey,SRr,1,found)) begin
    testf = false;
    if (SRr.TransDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (SRr.OKFlag!=-1) then begin
        testf = false;
        if (SRr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("SRVc");
        first = false;
        NewLine;
      end;
      ExportRecord(SRr);
      NewLine;
      UserTrace(SRr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

procedure TransExportDropSHVc(record RcVc RepSpec)
BEGIN
  Boolean found;
  record DropSHVc DropSHr;
  string 255 ckey;
  Boolean first,testf;

  first = true;
  DropSHr.ShipDate = RepSpec.sStartDate;
  DropSHr.OKFlag = -1;
  ckey = "ShipDate";
  found = true;
  while (LoopKey(ckey,DropSHr,1,found)) begin
    testf = false;
    if (DropSHr.ShipDate>RepSpec.sEndDate) then begin
      found = false;
    end;  
    if (found) then begin
      testf = true;
      if (DropSHr.OKFlag!=-1) then begin
        testf = false;
        if (DropSHr.OKFlag==0) then begin
          if (RepSpec.UsedOnly==1) then begin
            testf = true;
          end;  
        end else begin
          if (RepSpec.OKmode==1) then begin
            testf = true;
          end;  
        end;
      end;
    end;      
    if (testf) then begin
      if (first==true) then begin
        OutRegisterTag("DropSHVc");
        first = false;
        NewLine;
      end;
      ExportRecord(DropSHr);
      NewLine;
      UserTrace(DropSHr.SerNr,M4Long);
    end;
  end;
  NewLine;
  RETURN;
END;

global
procedure GTrans2En(record RcVc RepSpec)
BEGIN
  ExportFormat;
  ExpBackupString(RepSpec.f3);

  
  if (RepSpec.flags[0]==1) then begin  // Contracts   
    TransExportCOVc(RepSpec);
  end;  
  if (RepSpec.flags[1]==1) then begin  // Expenses   
    TransExportExpVc(RepSpec);
  end;  
  if (RepSpec.flags[2]==1) then begin// Goods Receipts   
    TransExportPUVc(RepSpec);
  end;  
  if (RepSpec.flags[3]==1) then begin // Invoices 
    TransExportIVVc(RepSpec);
  end;
  if (RepSpec.flags[4]==1) then begin // Payments 
    TransExportOPVc(RepSpec);
  end;  
  if (RepSpec.flags[5]==1) then begin // Personnel Payments   
    TransExportPPVc(RepSpec);
  end;    
  if (RepSpec.flags[6]==1) then begin // Cheques   
    TransExportCheckVc(RepSpec);
  end;    
  if (RepSpec.flags[7]==1) then begin // Purchase Invoices 
    TransExportVIVc(RepSpec);
  end;  
  if (RepSpec.flags[8]==1) then begin // Purchase Orders 
    TransExportPOVc(RepSpec);
  end;  
  if (RepSpec.flags[9]==1) then begin // Quotations 
    TransExportQTVc(RepSpec);
  end;  
  if (RepSpec.flags[10]==1) then begin // Receipts 
    TransExportIPVc(RepSpec);
  end;  
  if (RepSpec.flags[11]==1) then begin // Internal Orders 
    TransExportIntORVc(RepSpec);
  end;  
  if (RepSpec.flags[12]==1) then begin // Sales Orders 
    TransExportORVc(RepSpec);
  end;  
  if (RepSpec.flags[13]==1) then begin // Deliveries 
    TransExportSHVc(RepSpec);
  end;  
  if (RepSpec.flags[14]==1) then begin // Simulations 
    TransExportSMVc(RepSpec);
  end;  
  if (RepSpec.flags[15]==1) then begin // Stock Movements 
    TransExportStockMovVc(RepSpec);
  end;  
  if (RepSpec.flags[16]==1) then begin // Transactions 
    TransExportTRVc(RepSpec);
  end;  
  if (RepSpec.flags[17]==1) then begin // TimeSheets 
    TransExportTSVc(RepSpec);
  end;  
  if (RepSpec.flags[18]==1) then begin // Stock Depretiation 
    TransExportSDVc(RepSpec);
  end;  
  if (RepSpec.flags[19]==1) then begin // Cash In 
    TransExportCLInVc(RepSpec);
  end;  
  if (RepSpec.flags[20]==1) then begin // Cash Out 
    TransExportCLOutVc(RepSpec);
  end;  
  if (RepSpec.flags[21]==1) then begin // Activities 
    TransExportActVc(RepSpec);
  end;  
  if (RepSpec.flags[22]==1) then begin // Returned Goods to Supplier
    TransExportRetPUVc(RepSpec);
  end;  
  if (RepSpec.flags[23]==1) then begin // Returned Goods 
    TransExportRetVc(RepSpec);
  end;  
  if (RepSpec.flags[24]==1) then begin // Stocktakings
    TransExportStockTakeVc(RepSpec);
  end;  
  if (RepSpec.frc==1) then begin // Own Cheques   
    TransExportOwnCheckVc(RepSpec);
  end;    
  if (RepSpec.flags[26]==1) then begin // Cheque Deposits
    TransExportChqDepVc(RepSpec);
  end;
  if (RepSpec.flags[27]==1) then begin // Asset Disposals 
    TransExportAT2WrofVc(RepSpec);
  end;  
  if (RepSpec.flags[28]==1) then begin // Asset Revaluations 
    TransExportAT2DprVc(RepSpec);
  end;  
  if (RepSpec.flags[29]==1) then begin // Asset Status 
    TransExportAT2TakeVc(RepSpec);
  end;  
  if (RepSpec.JobDf==1) then begin // Service Orders 
    TransExportSVOVc(RepSpec);
  end;  
  if (RepSpec.Custf==1) then begin // Work Orders 
    TransExportWOVc(RepSpec);
  end;  
  if (RepSpec.Notation==1) then begin // Work Sheets 
    TransExportWSVc(RepSpec);
  end;
  if (RepSpec.OnlyUnprntd==1) then begin // Stock Revaluations
    TransExportSRVc(RepSpec);
  end;  
  if (RepSpec.toc==1) then begin
    TransExportDropSHVc(RepSpec);
  end;  
  RETURN;
END;
