external function val FindAccTurnover(string,string,date,date,record ObjBalVc,Integer,Integer,string,Integer);

procedure LastInMonth(Date d,var Date res)
BEGIN
  Integer i,j;
  
  i = GetYear(d);
  j = GetMonth(d);
  i = DaysInMonth(i,j);
  j = GetDay(d);
  i = i-j;
  res = AddDay(d,i);
  RETURN;
END;

global
procedure NextMonth(Date d,var Date res)
BEGIN  

  res = AddMonth(d,1);
  RETURN;
END;


global
procedure MBEn(record RcVc RepSpec)
BEGIN
  Boolean Vws;
  Boolean first;
  record ObjBalVc ObjBalr;
  record AccVc Accr;
  Boolean ObjBals;
  Date i;
  val Pb;
  Integer salst;
  Date sd,ed,td;
  Boolean done;
  record CYBlock CompYear;
  string 10 lastacc,firstacc;

  BlockLoad(CompYear);
  firstacc = FirstInRange(RepSpec.AccStr,10);
  lastacc = LastInRange(RepSpec.AccStr,10);
 
  if (RepSpec.SimVerf<>0) then begin 
    salst = -1; 
  end else begin 
    salst = 0; 
  end;
  first = true;
  Vws = true;
  Accr.AccNumber = firstacc;
  while (LoopMain(Accr,1,Vws)) begin
    if (nonblank(lastacc)) then begin
      if (Accr.AccNumber>lastacc) then begin
        Vws = false;
      end;
    end;      
    if (Vws) then begin
      ObjBalr.AccNumber = Accr.AccNumber;
      ObjBalr.Object = RepSpec.ObjStr;
      ObjBals = ReadFirstMain(ObjBalr,2,true);


      first = false;
      ExportString(Accr.AccNumber);
      ExportString(Accr.Comment);
      if (ObjBals) then begin
        sd = RepSpec.sStartDate;
        LastInMonth(sd,ed);
        if (ed==RepSpec.sEndDate) then begin
          done = true;
        end else begin
          done = false;
        end;
        while (done==false) begin
          Pb = 0;
          Pb = FindAccTurnover(Accr.AccNumber,RepSpec.ObjStr,sd,ed,ObjBalr,RepSpec.SimVerf,RepSpec.basecurncy,"",RepSpec.IncDaughter);

          if (Accr.AccType==0) then begin
            if (CompYear.NS2[0]==1) then begin
              Pb = -Pb;
            end;        
          end;
          if (Accr.AccType==1) then begin
            if (CompYear.NS2[1]==1) then begin
              Pb = -Pb;
            end;        
          end;
          if (Accr.AccType==2) then begin
            if (CompYear.NS2[2]==1) then begin
              Pb = -Pb;
            end;        
          end;
          if (Accr.AccType==3) then begin
            if (CompYear.NS2[3]==1) then begin
              Pb = -Pb;
            end;        
          end;
          if (Accr.AccType==4) then begin
            if (CompYear.NS2[4]==1) then begin
              Pb = -Pb;
            end;        
          end;
          ExportVal(Pb,M4Val);
          td = sd;
          NextMonth(td,sd);
          LastInMonth(sd,ed);
          if (ed>RepSpec.sEndDate) then begin
            done = true;
          end else begin
            done = false;
          end;
        end;
      end else begin
        Pb = 0;
        ExportVal(Pb,M4Val);
        for (i=RepSpec.sStartDate;i<=RepSpec.sEndDate;i=AddMonth(i,1)) begin
          ExportVal(Pb,M4Val);
        end;  
      end;
      NewLine;
      UserTrace(Accr.AccNumber,2);
    end;
  end;
  RETURN;
END;
