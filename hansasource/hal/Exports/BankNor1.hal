
external procedure M4PadString(string,Integer,string,Boolean,var string);
external procedure DnBAppHeader(string,var LongInt,var LongInt,Integer);
external procedure ConvertBankVal(val,var string);
external procedure DnBBegin(string,string,record CYBlock,var LongInt,var LongInt,var LongInt,Integer,string,Boolean);
external function Boolean CheckBankExpNorwayPayment(record OPVc,record RcVc);

global
updating procedure BankExpNorway1(record OPVc OPr,record RcVc RepSpec,Boolean newversf,var LongInt rowsernr,var LongInt betcount,var LongInt appsernr)
BEGIN
  Integer i,j,rwcnt;
  row OPVc OPrw;
  row OPVc OP2rw;  
  string 255 tstr;
  record VIVc VIr;
  record VIVc VI2r;
  record CUVc VEr;
  record BankVc BKr;
  record CYBlock CompYear;
  Boolean VEf,testf;
  val t,totsum;
  Integer row14count;
  string 255 t1,t2; 
  Integer nr,id;
  record BankFileBlock bfiler;
  
  if (CheckBankExpNorwayPayment(OPr,RepSpec)==false) then begin 
    goto L99;
  end;
  
  BlockLoad(bfiler);
  BlockLoad(CompYear);
  row14count = 0;
  rowsernr = bfiler.RowSerNr;
  appsernr = bfiler.LastSerNr;
  if (CurrentDate<>bfiler.LastDate) then begin
    appsernr = 1;
  end;  
  if (betcount==0) then begin
    DnBBegin(OPrw.RecCurncy,bfiler.User,CompYear,rowsernr,appsernr,rowsernr,RepSpec.flags[2],RepSpec.Stext,newversf);
  end;
  rwcnt = MatRowCnt(OPr);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if (OPrw.ovst<>0) then begin goto L88; end;
    if (blank(OPrw.BankAcc)) then begin goto L88; end;
    if (OPrw.RecCurncy<>RepSpec.CurncyCode) then begin goto L88; end;        
    VIr.SerNr = OPrw.VISerNr;
    if (ReadFirstMain(VIr,1,true)==false) then begin goto L88; end;
    if (VIr.Invalid<>0) then begin goto L88; end;
    if (VIr.InvType==kInvoiceTypeNormalSpecialSales) then begin VIr.InvType = kInvoiceTypeNormal; end;
    if (VIr.InvType==kInvoiceTypeCreditSpecialSales) then begin VIr.InvType = kInvoiceTypeCredit; end;
    if ((VIr.InvType<kInvoiceTypeNormal) or (VIr.InvType>kInvoiceTypeCredit)) then begin VIr.InvType = kInvoiceTypeNormal; end;

    if ((VIr.InvType==kInvoiceTypeNormal) and (VIr.PayVal<0)) then begin
      VIr.InvType = kInvoiceTypeCredit; 
    end;
    VEr.Code = VIr.VECode;
    VEf = ReadFirstMain(VEr,1,true);
    testf = true;
    if (testf) then begin
        totsum = 0;
        for (j=i;j<rwcnt;j=j+1) begin
          MatRowGet(OPr,j,OP2rw);
          if (OP2rw.VECode==OPrw.VECode) then begin
            totsum = OP2rw.RecVal + totsum;
          end;
        end;
        if (totsum<0) then begin goto L77; end;
        DnBAppHeader(OPrw.RecCurncy,appsernr,betcount,RepSpec.flags[2]);
        ExportPadString("BETFOR01",8," ",false);
        ExportPadString(StripNonDigits(CompYear.BankCode),11,"0",true);
        ExportPadString(StripNonDigits(CompYear.Bank1),11,"0",true);
        tstr = rowsernr;
        ExportPadString(tstr,4,"0",true);
        rowsernr = rowsernr + 1;
        if (rowsernr>9999) then begin
          rowsernr = 0;
        end;
        ExportPadString(" ",6," ",true);//80
        NewLine;
        ExportPadString(DateToString(OPr.PayDate,"YYMMDD"),6," ",false);
        tstr = OPr.SerNr;
        if (newversf) then begin
          if (VEr.ExportFlag==1) or (VEr.ExportFlag==3) then begin
            ExportPadString(OPrw.BankRefStr,30," ",false);
          end else begin
            ExportPadString(tstr,30," ",false);
          end;
        end else begin
          ExportPadString(tstr,30," ",false);
        end;
        if (newversf) then begin
          ExportPadString(OPrw.RecCurncy,3," ",false);
          ExportPadString(OPrw.PInvCurncy,3," ",false);
        end else begin
          ExportPadString(OPrw.RecCurncy,3," ",false);
          ExportPadString(OPrw.RecCurncy,3," ",false);
        end;
        if (RepSpec.flags[4]==0) then begin
          tstr = "OUR";
        end else begin
          tstr = "BEN";
        end;
        ExportPadString(tstr,3," ",false);
        ExportPadString(tstr,3," ",false);
        ExportPadString(" ",30," ",false);
        ExportPadString(" ",1," ",false);
        ExportPadString("0",1,"0",false);//160
        NewLine;
        ExportPadString("0",7,"0",false);
        ExportPadString(" ",6," ",false);
        ExportPadString(" ",8," ",false);
        ExportPadString(" ",1," ",false);
        ExportPadString(" ",6," ",false);
        ExportPadString(" ",2," ",false);//150        
        ExportPadString(" ",12," ",false); //R2 Must be blank
        ExportPadString(" ",12," ",false);
        ExportPadString(" ",16," ",false);
        ExportPadString(" ",10," ",false);  //R2 Must be blank
        NewLine;
        ExportPadString(" ",6," ",false);   //R2 Must be blank
        ExportPadString(" ",5," ",false);
        ExportPadString(" ",6," ",false); //R2 Must be blank
        ExportPadString(" ",6," ",false);  //R2 Must be blank 
        ExportPadString(" ",1," ",false);  //R2 Must be blank 
        ExportPadString(" ",1," ",false);  //R2 Must be blank 
        ExportPadString(" ",6," ",false);  //R2 Must be blank
        ExportPadString(" ",9," ",false);
        ExportPadString(" ",12," ",false);
        ExportPadString(" ",1," ",false);  //R2 Must be blank 
        ExportPadString(" ",16," ",false);
        ExportPadString(" ",1," ",false);
        ExportPadString(" ",10," ",false);
        NewLine;
          MatRowGet(OPr,i,OP2rw);          
          VI2r.SerNr = OP2rw.VISerNr;
          if (ReadFirstMain(VI2r,1,true)==false) then begin goto L88; end;
          if (OP2rw.RecCurncy<>RepSpec.CurncyCode) then begin goto L88; end;          
          if (VI2r.Invalid<>0) then begin goto L88; end;
          BKr.Code = VEr.AccOperator;                 
          if (ReadFirstMain(BKr,1,true)) then begin          
            DnBAppHeader(OP2rw.RecCurncy,appsernr,betcount,RepSpec.flags[2]);
            ExportPadString("BETFOR02",8," ",false);
            ExportPadString(StripNonDigits(CompYear.BankCode),11,"0",true);
            ExportPadString(StripNonDigits(CompYear.Bank1),11,"0",true);
            tstr = rowsernr;
            ExportPadString(tstr,4,"0",true);
            rowsernr = rowsernr + 1;
            if (rowsernr>9999) then begin
              rowsernr = 0;
            end;  
            ExportPadString(" ",6," ",true);
            //81
            NewLine;
            if (nonblank(BKr.SWIFT)) then begin
              ExportPadString(UpperCase(ConvertSpecStr(BKr.SWIFT,"NOSCANDCHAR")),11," ",false);            
              ExportPadString(" ",35," ",false); //Name      
              ExportPadString(" ",34," ",false); //Address 1            
              //161
              NewLine;            
              ExportPadString(" ",1," ",false);            
              ExportPadString(" ",35," ",false);
              ExportPadString(" ",35," ",false);
              ExportPadString(" ",9," ",false);
            end else begin
              ExportPadString(" ",11," ",false);            
              ExportPadString(UpperCase(ConvertSpecStr(BKr.Name,"NOSCANDCHAR")),35," ",false); //Name      
              ExportPadString(UpperCase(ConvertSpecStr(BKr.Address0,"NOSCANDCHAR")),34," ",false); //Address 1            
              //161
              NewLine;            
              ExportPadString(" ",1," ",false);            
              ExportPadString(UpperCase(ConvertSpecStr(BKr.Address1,"NOSCANDCHAR")),35," ",false);
              ExportPadString(UpperCase(ConvertSpecStr(BKr.Address2,"NOSCANDCHAR")),35," ",false);
              ExportPadString(" ",9," ",false);
            end;
            //241
            NewLine;
            ExportPadString(" ",2," ",false);
            if (blank(BKr.SWIFT)) then begin
              ExportPadString(Left(BKr.CorrspAcc,2),2," ",false);
            end else begin
              ExportPadString(" ",2," ",false);
            end;
            ExportPadString(UpperCase(ConvertSpecStr(BKr.Sorting,"NOSCANDCHAR")),15," ",false);   //Using Sortkey
            ExportPadString(" ",35," ",false);
            ExportPadString(" ",26," ",false);
            NewLine;
            DnBAppHeader(OP2rw.RecCurncy,appsernr,betcount,RepSpec.flags[2]);            

            ExportPadString("BETFOR03",8," ",false);
            ExportPadString(StripNonDigits(CompYear.BankCode),11,"0",true);
            ExportPadString(StripNonDigits(CompYear.Bank1),11,"0",true);
            tstr = rowsernr;
            ExportPadString(tstr,4,"0",true);
            rowsernr = rowsernr + 1;
            if (rowsernr>9999) then begin
              rowsernr = 0;
            end;  
            ExportPadString(" ",6," ",true);
            NewLine;
            
            tstr = BKr.Nr2;
            ExportPadString(tstr,35," ",false);
            ExportPadString(UpperCase(ConvertSpecStr(VI2r.VEName,"NOSCANDCHAR")),35," ",false);//150
            tstr = UpperCase(ConvertSpecStr(VEr.InvAddr0,"NOSCANDCHAR"));
            t2 = Mid(tstr,0,10);
            ExportPadString(t2,10," ",false);//tstr//120
            NewLine;            
            t2 = Mid(tstr,10,25);
            while (CharacterMatch(t2," ",1)) begin
              t2 = Right(t2,len(t2)-1);
            end;
            ExportPadString(UpperCase(ConvertSpecStr(t2,"NOSCANDCHAR")),25," ",false);            
            ExportPadString(UpperCase(ConvertSpecStr(VEr.InvAddr1,"NOSCANDCHAR")),35," ",false);
            tstr = Mid(VEr.InvAddr2,0,20);
            ExportPadString(UpperCase(ConvertSpecStr(tstr,"NOSCANDCHAR")),20," ",false);
            NewLine;
            tstr = Mid(VEr.InvAddr2,20,35);
            while (CharacterMatch(tstr," ",1)) begin
              tstr = Right(tstr,len(tstr)-1);
            end;
            ExportPadString(UpperCase(ConvertSpecStr(tstr,"NOSCANDCHAR")),15," ",false);
            ExportPadString(VEr.CountryCode,2," ",false);
            ExportPadString(" ",1," ",false);
            ExportPadString(" ",2," ",false);
            ExportPadString(" ",18," ",false);
            ExportPadString(" ",20," ",false);
            ExportPadString(" ",22," ",false);
            NewLine;
/*            
            tstr = Mid(VEr.InvAddr2,20,15);
            ExportPadString(UpperCase(ConvertSpecStr(tstr,"NOSCANDCHAR")),15," ",false);
            ExportPadString(VEr.CountryCode,2," ",false);
            ExportPadString(" ",63," ",false);
            NewLine;
*/            
            DnBAppHeader(OP2rw.RecCurncy,appsernr,betcount,RepSpec.flags[2]);
            ExportPadString("BETFOR04",8," ",false);
            ExportPadString(StripNonDigits(CompYear.BankCode),11,"0",true);
            ExportPadString(StripNonDigits(CompYear.Bank1),11,"0",true);
            tstr = rowsernr;
            ExportPadString(tstr,4,"0",true);
            rowsernr = rowsernr + 1;
            if (rowsernr>9999) then begin
              rowsernr = 0;
            end;  
            ExportPadString(" ",6," ",true);
            //81
            NewLine;
            if (nonblank(VI2r.RefStr)) then begin
              ExportPadString(UpperCase(ConvertSpecStr(VI2r.RefStr,"NOSCANDCHAR")),35," ",false);
            end else begin
              tstr = "Invoice: ";
              tstr = tstr & VI2r.InvoiceNr;
              ExportPadString(UpperCase(ConvertSpecStr(tstr,"NOSCANDCHAR")),35," ",false);
            end;            
            ExportPadString(UpperCase(ConvertSpecStr(VI2r.Comment,"NOSCANDCHAR")),35," ",false);
            if ((VI2r.InvType==kInvoiceTypeCredit or VI2r.InvType==kInvoiceTypeCreditSpecialSales) or (OP2rw.RecVal<0)) then begin
              if (OP2rw.RecVal<0) then begin
                t = -OP2rw.RecVal;
              end else begin
                t = OP2rw.RecVal;
              end;  
              ConvertBankVal(t,tstr);
              M4PadString(tstr,15,"0",true,t2);
              t2 = t2 & "K";
            end else begin
              ConvertBankVal(OP2rw.RecVal,tstr);
              M4PadString(tstr,15,"0",true,t2);              
              t2 = t2 & "D";
            end;
            tstr = Mid(t2,0,10);
            ExportPadString(tstr,10,"0",false);
            //161
            NewLine;

            tstr = Mid(t2,10,6);
            ExportPadString(tstr,5," ",false);
            ExportPadString("D",1," ",false);
            ExportPadString("14",6," ",false); // Type of purchase, has to get a new field on the Invoice or Payment row.
            ExportPadString(ConvertSpecStr(OP2rw.Comment,"NOSCANDCHAR"),60," ",false);
            ExportPadString(" ",1," ",false);
            ExportPadString(" ",1," ",false);
            ExportPadString(" ",6," ",false);
            //241
            NewLine;
            ExportPadString(" ",1," ",false);
            ExportPadString(" ",6," ",false);
            ExportPadString(" ",45," ",false);
            ExportPadString(" ",1," ",false); // Kid foregin
            ExportPadString("0",3,"0",false);
            ExportPadString(" ",24," ",false);
            NewLine;          
          end;  
L77:;
    end;          
L88:;
  end;
  bfiler.RowSerNr = rowsernr;
  bfiler.LastSerNr = appsernr;
  bfiler.LastDate = CurrentDate;  
  BlockStore(bfiler);
  UserTrace(OPr.SerNr,M4Long);
L99:;
  RETURN;
END;
