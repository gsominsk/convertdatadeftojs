#ifdef HAL
external procedure M4PadString(string,Integer,string,Boolean,var string);
external procedure M4WriteDanStr(string,Integer,Boolean);
external procedure CalcNorCheck(var string,Boolean);
external procedure FinnishBankVal(var string,val);

procedure CreateDanishCheckCiffer(string instr,var string res)
BEGIN
  string 255 tstr,t2;

  tstr = instr;
  M4PadString(tstr,14,"0",true,t2);  
  CalcNorCheck(t2,true);
  res = t2;
  RETURN;
END;

global
procedure BankExpDanish4(record OPVc OPr)
BEGIN
  row OPVc OPrw;
  row OPVc OP2rw;  
  record VIVc VIr;
  record CUVc VEr;
  record BankVc BKr;
  Boolean VEf,BKf,testf;
  val totsum;
  string 255 tstr,t1,t2;
  record CYBlock CompYear;
  record BankFileBlock bfr;
  Boolean hitf;
  Integer rwcnt,i,j;
  
  BlockLoad(bfr);
  BlockLoad(CompYear);
  rwcnt = MatRowCnt(OPr);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if (OPrw.ovst<>0) then begin goto L88; end;
    
    VIr.SerNr = OPrw.VISerNr;
    if (ReadFirstMain(VIr,1,true)==false) then begin goto L88; end;
    if (VIr.InvType==kInvoiceTypeNormalSpecialSales) then begin VIr.InvType = kInvoiceTypeNormal; end;
    if (VIr.InvType==kInvoiceTypeCreditSpecialSales) then begin VIr.InvType = kInvoiceTypeCredit; end;
    if ((VIr.InvType<kInvoiceTypeNormal) or (VIr.InvType>kInvoiceTypeCredit)) then begin VIr.InvType = kInvoiceTypeNormal; end;

    if ((VIr.InvType==kInvoiceTypeNormal) and (VIr.PayVal<0)) then begin
      VIr.InvType = kInvoiceTypeCredit; 
    end;
    VEr.Code = VIr.VECode;
    VEf = ReadFirstMain(VEr,1,true);
    begin
      testf = true;
      if (VIr.Invalid<>0) then begin testf = false; end;
      if (testf) then begin
        totsum = 0;
        for (j=i;j<rwcnt;j=j+1) begin
          MatRowGet(OPr,j,OP2rw);
          if (OP2rw.VECode==OPrw.VECode) then begin
            totsum = totsum + OP2rw.PInvVal;
          end;
        end;
        if (totsum<0) then begin goto L77; end;
        
        BKr.Code = VEr.AccOperator; 
        BKf = ReadFirstMain(BKr,1,true);        
        if (len(OPrw.BankAcc)>2) then begin        
          tstr = "UBT";
          ExportPadString(tstr,3," ",false);          
          ExportPadString("033",3," ",false);          
          ExportPadString("00",2,"0",true);          
          ExportPadString("00",2,"0",true);          
          tstr = StripNonDigits(OPr.BankAcc);    
          tstr = Left(tstr,4);
          ExportPadString(tstr,4,"0",true);          
          if (len(OPr.BankAcc) >4) then begin
            t2 = Right(OPr.BankAcc,len(OPrw.BankAcc)-4);          
          end else begin
            t2 = "1";
          end;  
          tstr = StripNonDigits(t2);    
          ExportPadString(tstr,10,"0",true);          
          FinnishBankVal(tstr,OPrw.PInvVal);
          ExportPadString(tstr,15,"0",true);          
          tstr = DateToString(OPr.PayDate,"YYYYMMDD");                    
          ExportPadString(tstr,8,"0",true);                    
          tstr = OPr.SerNr;
          ExportPadString(tstr,20,"0",true);          
          tstr = StripNonDigits(OPrw.BankAcc);              
          tstr = Left(tstr,4);
          ExportPadString(tstr,4,"0",true);          
          if (len(OPrw.BankAcc) >4) then begin
            t2 = Right(OPrw.BankAcc,len(OPrw.BankAcc)-4);          
          end else begin
            t2 = " ";
          end;  
          tstr = StripNonDigits(t2);              
          ExportPadString(tstr,10,"0",true);          
          ExportPadString("N",1," ",true);          
          tstr = "100";
          ExportPadString("100",3,"0",true);          
          ExportPadString(OPrw.Comment,20," ",false);          
          ExportPadString(CompYear.CompName,35," ",false);          
          tstr = "Faktura: ";
          if (nonblank(VIr.InvoiceNr)) then begin
            tstr = VIr.InvoiceNr;
          end else begin
            t2 = VIr.SerNr;
            tstr = tstr & t2;
          end;  
          ExportPadString(tstr,35," ",false);          
          ExportPadString("000",3," ",false);          
          ExportPadString("04",2," ",false);          
          ExportPadString(VEr.Name,35," ",false);          
          ExportPadString(VEr.InvAddr0,35," ",false);          
          ExportPadString(VEr.InvAddr1,35," ",false);          
          ExportPadString(VEr.InvAddr2,35," ",false);          
          ExportPadString("02",2," ",false);          
          tstr = OPrw.Comment;
          if (len(OPrw.Comment) >35) then begin tstr = Left(OPrw.Comment,35); end;
          ExportPadString(tstr,35," ",true);          
          if (len(OPrw.Comment)>35)  then begin
            t2 = Right(OPrw.Comment,len(OPrw.Comment)-35);                    
            if (len(OPrw.Comment) >70) then begin 
              tstr = Left(t2,35); 
            end else begin
              tstr = t2;
            end;
          end else begin
            tstr = " ";
          end;    
          ExportPadString(tstr,35," ",false);                    
          ExportPadString("00",2,"0",false);                    
          NewLine;
//          betcount betcount + 1;
        end else begin
          tstr = "UBT";
          ExportPadString(tstr,3," ",true);                    
          ExportPadString("029",3,"0",true);                    
          ExportPadString("00",2,"0",true);                    
          ExportPadString("00",2,"0",true);  
          tstr = StripNonDigits(OPr.BankAcc);    
          tstr = Left(tstr,4);                            
          ExportPadString(tstr,4,"0",true);  
          if (len(OPr.BankAcc)>4) then begin
            t2 = Right(OPr.BankAcc,len(OPr.BankAcc)-4);                    
          end else begin
            t2 = " ";
          end;
          tstr = StripNonDigits(t2);    
          ExportPadString(tstr,10,"0",true);  
          FinnishBankVal(tstr,OPrw.PInvVal);
          ExportPadString(tstr,15,"0",true);  
          tstr = DateToString(OPr.PayDate,"YYYYMMDD");                    
          ExportPadString(tstr,18,"0",true);  
          tstr = OPr.SerNr;
          ExportPadString(tstr,20," ",false);            
          if (nonblank(VEr.RegNr2)) then begin
            t2 = VEr.RegNr2;
          end else begin
            t2 = " ";
          end;  
          tstr = StripNonDigits(t2);    
          ExportPadString(tstr,10,"0",true);                      
          ExportPadString(OPrw.BankAcc,2,"0",false);                      
          CreateDanishCheckCiffer(VIr.InvoiceNr,tstr);          
          ExportPadString(tstr,19,"0",true);                      
          ExportPadString("000",13,"0",true);                      
          ExportPadString("04",2,"0",true);                                
          ExportPadString(VEr.Name,35," ",false);                      
          ExportPadString(VEr.InvAddr0,35," ",false);                      
          ExportPadString(VEr.InvAddr1,35," ",false);                      
          ExportPadString(VEr.InvAddr2,35," ",false);                      
          NewLine;
//          betcount = betcount + 1;
        end;
L77:;      
      end;
    end;    
L88:;
  end;
L99:;  
//  UserTrace(OPr.SerNr,M4Long);
  RETURN;
END;
#endif
