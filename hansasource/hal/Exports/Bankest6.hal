external procedure M4PadString(string,Integer,string,Boolean,var string);
/* Bankfile for Estonia (Yhispank)*/

function string 255 PadString(string instr,Integer padlen,string padchar,Boolean padleft)
begin
  string 255 res;
  
  M4PadString(instr,padlen,padchar,padleft,res);
  PadString = res;
  return;
end;

global
procedure BankExpEstonia6(record OPVc OPr,integer speedf,integer whopays,integer koond)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  record PMBlock PMr;
  record OPTblock OPTr;
  row OPVC OPrw;
  row PMBlock PMrw;
  Integer i,j;
  Integer rwcnt,PMrrwcnt;
  string 255 tstr,t2;
  boolean found;
  boolean all;
  val koondval;
  array string 20 vendor;
  array integer rownr;
  array val payval;
  array string 82 comment;
  integer k,t,x;
  boolean ftest; 
  string 255 suplinv;
  
  BlockLoad(CompYear);
  BlockLoad(OPTr);
  rwcnt = MatRowCnt(OPr);
  //normal  
  if (koond == 0) or (rwcnt <= 1) then begin 
    for (i = 0; i<rwcnt; i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    VEr.Code = OPrw.VECode;
    found = ReadFirstMain(VEr,1,true);
    VIr.SerNr = OPrw.VISerNr;
    found = ReadFirstMain(VIr,1,true);
    ExportPadString(":0:KIRJETUNNUS:**M4",len(":0:KIRJETUNNUS:**M4")," ",false);
    NewLine;
    ExportPadString(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr,len(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr)," ",false);
    NewLine;
    ExportPadString(":2:MAKSE SUMMA:" & ValToString(OPrw.RecVal,M4Val,"","",0),len(":2:MAKSE SUMMA:" & ValToString(OPrw.RecVal,M4Val,"","",0))," ",false);
    NewLine;
    ExportPadString(":3:MAKSE VALUUTA:EEK",len(":3:MAKSE VALUUTA:EEK")," ",false);
    NewLine;
    ExportPadString(":4:MAKSE SELGITUS:" & OPrw.Comment,len(":4:MAKSE SELGITUS:" & OPrw.Comment)," ",false);
    NewLine;
    ExportPadString(":21:MAKSEBILANSI KOOD:" & VIr.RefStr,len(":21:MAKSEBILANSI KOOD:" & VIr.RefStr)," ",false);
    NewLine;
    ExportPadString(":6:MAKSJA KONTO NR:" & OPr.BankAcc,len(":6:MAKSJA KONTO NR:" & OPr.BankAcc)," ",false);
    NewLine;
    ExportPadString(":7:SAAJA KONTO NR:" & OPrw.BankAcc,len(":7:SAAJA KONTO NR:" & OPrw.BankAcc)," ",false);
    NewLine;
    ExportPadString(":8:SAAJA NIMI:" & VEr.Name,len(":8:SAAJA NIMI:" & VEr.Name)," ",false);
    NewLine;
    ExportPadString(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2,len(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2)," ",false);
    NewLine;
    ExportPadString(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2,len(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2)," ",false);
    NewLine;
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true)) then begin
      ExportPadString(":11:SAAJA PANGA NIMI:" & Bankr.Name,len(":11:SAAJA PANGA NIMI:" & Bankr.Name)," ",false);
      NewLine;
      ExportPadString(":10:SAAJA PANGA BIC:" & Bankr.SWIFT,len(":10:SAAJA PANGA BIC:" & Bankr.SWIFT)," ",false);
      NewLine;
    end;
    ExportPadString(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYMMDD"),len(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYYY-MM-DD"))," ",false);
    NewLine;
    if speedf == 0 then begin
      ExportPadString(":17:MAKSE TYYP: T",len(":17:MAKSE TYYP: T")," ",false);
      NewLine;
    end else begin
      ExportPadString(":17:MAKSE TYYP: X",len(":17:MAKSE TYYP: X")," ",false);
      NewLine;
    end;
    if whopays == 0 then begin
      ExportPadString(":18:KULUD KANNAB: M",len(":18:KULUD KANNAB: M")," ",false);
      NewLine;
    end else begin
      ExportPadString(":18:KULUD KANNAB: S",len(":18:KULUD KANNAB: S")," ",false);
      NewLine;
    end;
    end;
  end;
  
  if (koond == 1) and (rwcnt > 1) then begin
    //one payment per supplier
    k = 0;
    for (i = 0; i<rwcnt; i = i + 1) begin
      MatRowGet(OPr,i,OPrw);
      VIr.SerNr = OPrw.VISerNr;
      if ReadFirstMain(VIr,1,true) then begin
        suplinv = VIr.InvoiceNr;
      end else begin
        suplinv = OPrw.VISerNr;
      end;
      
      if ReadFirstMain(VEr,1,true) then begin end;
      
      if (k == 0) then begin
        vendor[k] =OPrw.VECode;
        rownr[k] = i;
        payval[k] = OPrw.RecVal;
        comment[k] = "Arve Nr " &  suplinv;
        k = 1;
      end else begin
        ftest = false;
        for (t = 0; t<k; t = t + 1) begin
          if (vendor[t] == OPrw.VECode) then begin
            payval[t] = payval[t] + OPrw.RecVal;
            comment[t] = comment[t] & "," &  suplinv;
            ftest = true;
          end;
        end;
        if (ftest == false) then begin
          vendor[k] = OPrw.VECode;
          rownr[k] = i;
          payval[k] = OPrw.RecVal;
           comment[k] = "Arve Nr " &  suplinv;
          k = k + 1;
        end;
      end;
    end;  
    for (t = 0; t<k; t = t + 1) begin
      MatRowGet(OPr,rownr[t],OPrw);
      //koond
        ExportPadString(":0:KIRJETUNNUS:**M4",len(":0:KIRJETUNNUS:**M4")," ",false);
    NewLine;
    ExportPadString(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr,len(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr)," ",false);
    NewLine;
    ExportPadString(":2:MAKSE SUMMA:" & ValToString(payval[t],M4Val,"","",0),len(":2:MAKSE SUMMA:" & ValToString(payval[t],M4Val,"","",0))," ",false);
    NewLine;
    ExportPadString(":3:MAKSE VALUUTA:EEK",len(":3:MAKSE VALUUTA:EEK")," ",false);
    NewLine;
    ExportPadString(":4:MAKSE SELGITUS:" & comment[t],len(":4:MAKSE SELGITUS:" & comment[t])," ",false);
    NewLine;
    ExportPadString(":21:MAKSEBILANSI KOOD:" & "",len(":21:MAKSEBILANSI KOOD:" & "")," ",false);
    NewLine;
    ExportPadString(":6:MAKSJA KONTO NR:" & OPr.BankAcc,len(":6:MAKSJA KONTO NR:" & OPr.BankAcc)," ",false);
    NewLine;
    VEr.Code = vendor[t];
        if ReadFirstMain(VEr,1,true) then begin end;
    ExportPadString(":7:SAAJA KONTO NR:" &VEr.BankAccount,len(":7:SAAJA KONTO NR:" & VEr.BankAccount)," ",false);
    NewLine;
    ExportPadString(":8:SAAJA NIMI:" & VEr.Name,len(":8:SAAJA NIMI:" & VEr.Name)," ",false);
    NewLine;
    ExportPadString(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2,len(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2)," ",false);
    NewLine;
    ExportPadString(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2,len(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2)," ",false);
    NewLine;
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true)) then begin
      ExportPadString(":11:SAAJA PANGA NIMI:" & Bankr.Name,len(":11:SAAJA PANGA NIMI:" & Bankr.Name)," ",false);
      NewLine;
      ExportPadString(":10:SAAJA PANGA BIC:" & Bankr.SWIFT,len(":10:SAAJA PANGA BIC:" & Bankr.SWIFT)," ",false);
      NewLine;
    end;
    ExportPadString(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYMMDD"),len(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYYY-MM-DD"))," ",false);
    NewLine;
    if speedf == 0 then begin
      ExportPadString(":17:MAKSE TYYP: T",len(":17:MAKSE TYYP: T")," ",false);
      NewLine;
    end else begin
      ExportPadString(":17:MAKSE TYYP: X",len(":17:MAKSE TYYP: X")," ",false);
      NewLine;
    end;
    if whopays == 0 then begin
      ExportPadString(":18:KULUD KANNAB: M",len(":18:KULUD KANNAB: M")," ",false);
      NewLine;
    end else begin
      ExportPadString(":18:KULUD KANNAB: S",len(":18:KULUD KANNAB: S")," ",false);
      NewLine;
    end;
      
    end;
  end;    
  return;
end;

global
procedure BankExpEstonia6SwedbankArea(record OPVc OPr,integer speedf,integer whopays,integer koond,var Area a_tmp,var Integer nrofpaym,var string rerror)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  record PMBlock PMr;
  record OPTblock OPTr;
  row OPVC OPrw;
  row PMBlock PMrw;
  Integer i,j;
  Integer rwcnt,PMrrwcnt;
  string 255 tstr,t2;
  boolean found;
  boolean all;
  val koondval;
  array string 20 vendor;
  array integer rownr;
  array val payval;
  array string 82 comment;
  integer k,t,x;
  boolean ftest; 
  string 255 suplinv;
  
  
  SetAreaZeroSize(a_tmp);
  BlockLoad(CompYear);
  BlockLoad(OPTr);
  rwcnt = MatRowCnt(OPr);
  //normal  
  if (koond == 0) or (rwcnt <= 1) then begin 
    for (i = 0; i<rwcnt; i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    nrofpaym = nrofpaym + 1;
    VEr.Code = OPrw.VECode;
    found = ReadFirstMain(VEr,1,true);
    VIr.SerNr = OPrw.VISerNr;
    found = ReadFirstMain(VIr,1,true);
    AddTextToArea(PadString(":0:KIRJETUNNUS:**M4",len(":0:KIRJETUNNUS:**M4")," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr,len(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":2:MAKSE SUMMA:" & ValToString(OPrw.RecVal,M4Val,"","",0),len(":2:MAKSE SUMMA:" & ValToString(OPrw.RecVal,M4Val,"","",0))," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":3:MAKSE VALUUTA:EEK",len(":3:MAKSE VALUUTA:EEK")," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":4:MAKSE SELGITUS:" & OPrw.Comment,len(":4:MAKSE SELGITUS:" & OPrw.Comment)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":21:MAKSEBILANSI KOOD:" & VIr.RefStr,len(":21:MAKSEBILANSI KOOD:" & VIr.RefStr)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":6:MAKSJA KONTO NR:" & OPr.BankAcc,len(":6:MAKSJA KONTO NR:" & OPr.BankAcc)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":7:SAAJA KONTO NR:" & OPrw.BankAcc,len(":7:SAAJA KONTO NR:" & OPrw.BankAcc)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":8:SAAJA NIMI:" & VEr.Name,len(":8:SAAJA NIMI:" & VEr.Name)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2,len(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2,len(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2)," ",false) & chr(13),a_tmp);
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true)) then begin
      AddTextToArea(PadString(":11:SAAJA PANGA NIMI:" & Bankr.Name,len(":11:SAAJA PANGA NIMI:" & Bankr.Name)," ",false) & chr(13),a_tmp);
      AddTextToArea(PadString(":10:SAAJA PANGA BIC:" & Bankr.SWIFT,len(":10:SAAJA PANGA BIC:" & Bankr.SWIFT)," ",false) & chr(13),a_tmp);
    end;
    AddTextToArea(PadString(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYMMDD"),len(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYYY-MM-DD"))," ",false) & chr(13),a_tmp);
    if speedf == 0 then begin
      AddTextToArea(PadString(":17:MAKSE TYYP: T",len(":17:MAKSE TYYP: T")," ",false) & chr(13),a_tmp);
    end else begin
      AddTextToArea(PadString(":17:MAKSE TYYP: X",len(":17:MAKSE TYYP: X")," ",false) & chr(13),a_tmp);
    end;
    if whopays == 0 then begin
      AddTextToArea(PadString(":18:KULUD KANNAB: M",len(":18:KULUD KANNAB: M")," ",false) & chr(13),a_tmp);
    end else begin
      AddTextToArea(PadString(":18:KULUD KANNAB: S",len(":18:KULUD KANNAB: S")," ",false) & chr(13),a_tmp);
    end;
    end;
  end;
  
  if (koond == 1) and (rwcnt > 1) then begin
    //one payment per supplier
    k = 0;
    for (i = 0; i<rwcnt; i = i + 1) begin
      MatRowGet(OPr,i,OPrw);
      nrofpaym = nrofpaym + 1;
      VIr.SerNr = OPrw.VISerNr;
      if ReadFirstMain(VIr,1,true) then begin
        suplinv = VIr.InvoiceNr;
      end else begin
        suplinv = OPrw.VISerNr;
      end;
      
      if ReadFirstMain(VEr,1,true) then begin end;
      
      if (k == 0) then begin
        vendor[k] =OPrw.VECode;
        rownr[k] = i;
        payval[k] = OPrw.RecVal;
        comment[k] = "Arve Nr " &  suplinv;
        k = 1;
      end else begin
        ftest = false;
        for (t = 0; t<k; t = t + 1) begin
          if (vendor[t] == OPrw.VECode) then begin
            payval[t] = payval[t] + OPrw.RecVal;
            comment[t] = comment[t] & "," &  suplinv;
            ftest = true;
          end;
        end;
        if (ftest == false) then begin
          vendor[k] = OPrw.VECode;
          rownr[k] = i;
          payval[k] = OPrw.RecVal;
           comment[k] = "Arve Nr " &  suplinv;
          k = k + 1;
        end;
      end;
    end;  
    for (t = 0; t<k; t = t + 1) begin
      MatRowGet(OPr,rownr[t],OPrw);
      nrofpaym = nrofpaym + 1;
      //koond
        AddTextToArea(PadString(":0:KIRJETUNNUS:**M4",len(":0:KIRJETUNNUS:**M4")," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr,len(":1:MAKSEDOKUMENDI NR:" & OPr.SerNr)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":2:MAKSE SUMMA:" & ValToString(payval[t],M4Val,"","",0),len(":2:MAKSE SUMMA:" & ValToString(payval[t],M4Val,"","",0))," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":3:MAKSE VALUUTA:EEK",len(":3:MAKSE VALUUTA:EEK")," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":4:MAKSE SELGITUS:" & comment[t],len(":4:MAKSE SELGITUS:" & comment[t])," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":21:MAKSEBILANSI KOOD:" & "",len(":21:MAKSEBILANSI KOOD:" & "")," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":6:MAKSJA KONTO NR:" & OPr.BankAcc,len(":6:MAKSJA KONTO NR:" & OPr.BankAcc)," ",false) & chr(13),a_tmp);
    VEr.Code = vendor[t];
        if ReadFirstMain(VEr,1,true) then begin end;
    AddTextToArea(PadString(":7:SAAJA KONTO NR:" &VEr.BankAccount,len(":7:SAAJA KONTO NR:" & VEr.BankAccount)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":8:SAAJA NIMI:" & VEr.Name,len(":8:SAAJA NIMI:" & VEr.Name)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2,len(":9:SAAJA AADRESS:" & VEr.InvAddr0 & " " & VEr.InvAddr1 & " " & VEr.InvAddr2)," ",false) & chr(13),a_tmp);
    AddTextToArea(PadString(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2,len(":20:SAAJA RIIGI KOOD:" & VEr.InvAddr2)," ",false) & chr(13),a_tmp);
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true)) then begin
      AddTextToArea(PadString(":11:SAAJA PANGA NIMI:" & Bankr.Name,len(":11:SAAJA PANGA NIMI:" & Bankr.Name)," ",false) & chr(13),a_tmp);
      AddTextToArea(PadString(":10:SAAJA PANGA BIC:" & Bankr.SWIFT,len(":10:SAAJA PANGA BIC:" & Bankr.SWIFT)," ",false) & chr(13),a_tmp);
    end;
    AddTextToArea(PadString(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYMMDD"),len(":12:KUUPAEV:" & DateToString(OPr.TransDate,"YYYY-MM-DD"))," ",false) & chr(13),a_tmp);
    if speedf == 0 then begin
      AddTextToArea(PadString(":17:MAKSE TYYP: T",len(":17:MAKSE TYYP: T")," ",false) & chr(13),a_tmp);
    end else begin
      AddTextToArea(PadString(":17:MAKSE TYYP: X",len(":17:MAKSE TYYP: X")," ",false) & chr(13),a_tmp);
    end;
    if whopays == 0 then begin
      AddTextToArea(PadString(":18:KULUD KANNAB: M",len(":18:KULUD KANNAB: M")," ",false) & chr(13),a_tmp);
    end else begin
      AddTextToArea(PadString(":18:KULUD KANNAB: S",len(":18:KULUD KANNAB: S")," ",false) & chr(13),a_tmp);
    end;
      
    end;
  end;    
  return;
end;
