external procedure NewLineExport();

procedure ExpFactHeaderSEB(record RcVc RepSpec)
BEGIN
  record CYBlock CYb;
  record FactoringBlock FAb;
  string 255 tstr;
  
  BlockLoad(CYb);
  BlockLoad(FAb);
  ExportPadString("1",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(CYb.CompName,len(CYb.CompName)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(CYb.OrgNr,len(CYb.OrgNr)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(FAb.User,len(FAb.User)," ",false);
  ExportPadString(";",1," ",false);
  tstr = DateToString(CurrentDate,"DD.MM.YYYY");
  ExportPadString(tstr,len(tstr)," ",true);
  ExportPadString(";",1," ",false);
  ExportPadString(RepSpec.CurncyCode,len(RepSpec.CurncyCode)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  NewLineExport;
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  NewLineExport;
  RETURN;
END;

procedure ExpFactFooterSEB(LongInt totivcnt,val totsum)
BEGIN
  string 255 tstr;
  
  ExportPadString("3",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(totivcnt,len(totivcnt)," ",true);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  tstr = ValToString(totsum,M4Val,"",".",0);
  ExportPadString(tstr,len(tstr)," ",true);
  ExportPadString(";",1," ",false);
  NewLineExport;
  RETURN;
END;

procedure ExpFactBlankRowSEB()
BEGIN
  string 255 tstr;
  
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  NewLineExport;
  RETURN;
END;

procedure ExpFactSenderData()
BEGIN
  string 255 tstr;
  record UserVc Userr;
  record CYBlock CYb;
  
  BlockLoad(CYb);
  Userr.Code = CurrentUser;
  if (ReadFirstMain(Userr,1,true)) then begin end;
  ExportPadString(";",1," ",false);
  ExportPadString(Userr.Name,len(Userr.Name)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  NewLineExport;
  
  ExportPadString(";",1," ",false);
  ExportPadString(CYb.Phone,len(CYb.Phone)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(";",1," ",false);
  NewLineExport;
  RETURN;
END;

global
procedure ExportIV(record IVVc IVr)
BEGIN
  string 255 tstr;
  record CUVc CUr;

  CUr.Code = IVr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin end;
  ExportPadString("2",1," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(CUr.Name,len(CUr.Name)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(CUr.RegNr1,len(CUr.RegNr1)," ",false);
  ExportPadString(";",1," ",false);
  ExportPadString(IVr.SerNr,len(IVr.SerNr)," ",false);
  ExportPadString(";",1," ",false);
  tstr = DateToString(IVr.InvDate,"DD.MM.YYYY");
  ExportPadString(tstr,len(tstr)," ",true);
  ExportPadString(";",1," ",false);
  tstr = DateToString(IVr.PayDate,"DD.MM.YYYY");
  ExportPadString(tstr,len(tstr)," ",true);
  ExportPadString(";",1," ",false);
  tstr = ValToString(IVr.Sum4,M4Val,"",".",0);
  ExportPadString(tstr,len(tstr)," ",true);
  ExportPadString(";",1," ",false);
  NewLineExport;
  RETURN;
END;

global
procedure ExportFactSEBEn(record RcVc RepSpec,var record FactoringBlock factb)
BEGIN
  record IVVc IVr;
  Boolean found;
  LongInt friv,toiv;
  Integer keys;
  Boolean headerf,testf;
  val totsum;
  LongInt totcnt;
  
  totcnt = 0;
  headerf = true;
  friv = FirstInRange(RepSpec.f1,30);
  toiv = LastInRange(RepSpec.f1,30);
  keys = 1;
  if (nonblank(RepSpec.f1)) then begin
    keys = 2;
  end;
  IVr.InvDate = RepSpec.sStartDate;
  IVr.SerNr = friv;
  found = true;
  while (LoopKey("InvDate",IVr,1,found)) begin
    if (IVr.InvDate>RepSpec.sEndDate) then begin found = false; end;
    if (nonblank(RepSpec.f1)) then begin
//      if (IVr.SerNr>toiv) then begin found = false; end;//why it is not working
    end;
    if (found) then begin
      testf = true;
      if (IVr.CurncyCode!=RepSpec.CurncyCode) then begin testf = false; end;
      if (nonblank(RepSpec.f1)) then begin
        if (IVr.SerNr<friv) then begin testf = false; end;
        if (IVr.SerNr>toiv) then begin testf = false; end;
      end;
      if (IVr.OKFlag==0) then begin testf = false; end;
      if (IVr.Invalid!=0) then begin testf = false; end;
      if (IVr.InvType==kInvoiceTypeCash) then begin testf = false; end;
      if (testf) then begin
        if (headerf) then begin
          ExpFactHeaderSEB(RepSpec);
          headerf = false;
        end;
        ExportIV(IVr); 
        totsum = totsum + IVr.Sum4;
        totcnt = totcnt + 1;
      end;
    end;
  end;
  if (headerf==false) then begin
    ExpFactFooterSEB(totcnt,totsum);
    ExpFactBlankRowSEB;
    ExpFactSenderData;
  end;
  RETURN;
END;
