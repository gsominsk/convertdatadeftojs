external procedure GetNext2Sep(string,var Integer,var string);
external procedure GetNextToken(string,var Integer,var string);
external function Boolean GetNextTokenReturn(string,var Integer,var string);
external function Boolean GetNextSep(string,var Integer,var string);
external function Boolean GetNextItem(string,var Integer,var string);
external procedure GetUserDefRepDescription(record UserDefRepLinesVc,string,var string);
external procedure MonthALPB2ResGr(record RcVc,Boolean,record UserDefRepLinesVc,record AccVc,string,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,var val,Boolean,val,var Boolean,Boolean,Date);
external procedure MonthALPBEnd(record RcVc,Boolean,string,string,val,val,val,val,val,val,val,val,val,val,val,val,Boolean,val,Boolean,Boolean);

global
function integer CountMonth(date startdate, date enddate)
BEGIN
  integer num;
  date ndate,fdate;

  num = 0;
  ndate = startdate;
  while (ndate < enddate) begin
    num = num +1;
    ndate = AddMonth(ndate,1);
  end;
  if num>12 then begin num = 12; end; //works only for one year
  CountMonth = num;
  return;
END;

global
procedure MonSumListPerBal(string accstr,Integer rid,var Array val S1a,var Array val S2a,
                        var Array val S3a,var Array val S4a,var Array val S5a, var Array val S6a, var Array val S7a, var Array val S8a,
                        var Array val S9a, var Array val S10a, var Array val S11a, var Array val S12a,
                        Integer maxrsums,var Array LongInt aidp,Boolean zerof)
BEGIN
  string 255 nitem;
  string 5 nsep;
  LongInt idn;
  Integer np;
  Boolean sepd,addflag;
  Integer i,aid;

  if (zerof) then begin
    S1a[rid] = 0;
    S2a[rid] = 0;
    S3a[rid] = 0;
    S4a[rid] = 0;
    S5a[rid] = 0;
    S6a[rid] = 0;
    S7a[rid] = 0;
    S8a[rid] = 0;
    S9a[rid] = 0;
    S10a[rid] = 0;
    S11a[rid] = 0;
    S12a[rid] = 0;
  end;
  np = 0;
  sepd = GetNextSep(accstr,np,nsep);
  while (GetNextItem(accstr,np,nitem)) begin
    if (nsep=="-") then begin
      addflag = false; 
    end else begin
      addflag = true;
    end;  
    sepd = GetNextSep(accstr,np,nsep);
    idn = FirstInRange(nitem,10);
    aid = -1;
    for (i = 0; i<maxrsums; i=i+1) begin
      if (aidp[i]==idn) then begin
        aid = i;
      end;
    end;  
    if ((aid>=0) and (aid<maxrsums)) then begin
      if (addflag==true) then begin
        S1a[rid] = S1a[rid] + S1a[aid];
        S2a[rid] = S2a[rid] + S2a[aid];
        S3a[rid] = S3a[rid] + S3a[aid];
        S4a[rid] = S4a[rid] + S4a[aid];
        S5a[rid] = S5a[rid] + S5a[aid];
        S6a[rid] = S6a[rid] + S6a[aid];
        S7a[rid] = S7a[rid] + S7a[aid];
        S8a[rid] = S8a[rid] + S8a[aid];
        S9a[rid] = S9a[rid] + S9a[aid];
        S10a[rid] = S10a[rid] + S10a[aid];
        S11a[rid] = S11a[rid] + S11a[aid];
        S12a[rid] = S12a[rid] + S12a[aid];
     end else begin
        S1a[rid] = S1a[rid] - S1a[aid];
        S2a[rid] = S2a[rid] - S2a[aid];
        S3a[rid] = S3a[rid] - S3a[aid];
        S4a[rid] = S4a[rid] - S4a[aid];
        S5a[rid] = S5a[rid] - S5a[aid];
        S6a[rid] = S6a[rid] - S6a[aid];
        S7a[rid] = S7a[rid] - S7a[aid];
        S8a[rid] = S8a[rid] - S8a[aid];
        S9a[rid] = S9a[rid] - S9a[aid];
        S10a[rid] = S10a[rid] - S10a[aid];
        S11a[rid] = S11a[rid] - S11a[aid];
        S12a[rid] = S12a[rid] - S12a[aid];
      end;
    end;
  end;
  RETURN;    
END;


global
procedure MonthAccListPerBalResGr(record RcVc RepSpec,Boolean PLf,record UserDefRepLinesVc UserDefRepLinesr,var val S1,var val S2,var val S3,var val S4,var val S5,var val S6, var val S7,var val S8,var val S9,var val S10,var val S11,var val S12,Boolean negf,val goms,Boolean resUseAccum ,date AccumStart)
BEGIN
  record AccVc Accr;
  Boolean addflag;
  string 255 Nitem;
  string 255 Nitem2;
  string 255 NRu;
  string 5 nsep;
  Boolean Accs;
  Integer np;
  Boolean headflag;
  string 255 tstr;

  S1 = blankval;
  S2 = blankval;
  S3 = blankval;
  S4 = blankval;
  S5 = blankval;
  S6 = blankval;
  S7 = blankval;
  S8 = blankval;
  S9 = blankval;
  S10 = blankval;
  S11 = blankval;
  S12 = blankval;
  
  headflag = false;
  np = 0;
  GetNext2Sep(UserDefRepLinesr.Desc,np,nsep);
  while (GetNextTokenReturn(UserDefRepLinesr.Desc,np,Nitem)) begin
    if (nsep=="-") then begin
      addflag = false; 
    end else begin
      addflag = true;
    end;
    GetNext2Sep(UserDefRepLinesr.Desc,np,nsep);
    if (nsep==".") then begin
      GetNextToken(UserDefRepLinesr.Desc,np,NRu);
      GetNext2Sep(UserDefRepLinesr.Desc,np,nsep);
    end else begin
      NRu = "";
    end;    
    if (nsep==":") then begin
      GetNextToken(UserDefRepLinesr.Desc,np,Nitem2);
      GetNext2Sep(UserDefRepLinesr.Desc,np,nsep);
    end else begin
      Nitem2 = "";
    end;    
    Accr.AccNumber = Nitem;
    if (blank(Nitem2)) then begin
      Accs = ReadFirstMain(Accr,1,true);
      if ((Accs) and (Accr.GroupAcc==0)) then begin
       MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
      end;
    end else begin
      if (Nitem<Nitem2) then begin
        ResetLoop(Accr);
        Accs = true;
        while (LoopMain(Accr,2,Accs)) begin
          if (Accs==true) then begin
            if (Accr.AccNumber>Nitem2) then begin Accs = false; end;
          end;
          if ((Accs) and (Accr.GroupAcc==0)) then begin
            MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
          end;
        end;
      end else begin
        ResetLoop(Accr);
        Accr.AccNumber = Nitem;
        Accs = LoopBackKey("AccNumber",Accr,1,true);
        while (Accs) begin
          if (Accs==true) then begin
            if (Accr.AccNumber<Nitem2) then begin Accs = false; end;
          end;  
          if ((Accs) and (Accr.GroupAcc==0)) then begin
            MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
          end;  
          Accs = LoopBackKey("AccNumber",Accr,1,true);//Accs = m4_ReadLogicalMain(AccVc,LLoop1--,&Accr);
        end;
      end;
    end;
  end;
  np = 0;
  GetNext2Sep(UserDefRepLinesr.Desc2,np,nsep);
  while (GetNextTokenReturn(UserDefRepLinesr.Desc2,np,Nitem)) begin
    if (nsep=="-") then begin
      addflag = false; 
    end else begin
      addflag = true;
    end;  
    GetNext2Sep(UserDefRepLinesr.Desc2,np,nsep);
    if (nsep==".") then begin
      GetNextToken(UserDefRepLinesr.Desc2,np,NRu);
      GetNext2Sep(UserDefRepLinesr.Desc2,np,nsep);
    end else begin
      NRu = "";
    end;    
    if (nsep==":") then begin
      GetNextToken(UserDefRepLinesr.Desc2,np,Nitem2);
      GetNext2Sep(UserDefRepLinesr.Desc2,np,nsep);
    end else begin
      Nitem2 = "";
    end;    
    Accr.AccNumber = Nitem;
    if (blank(Nitem2)) then begin
      Accs = ReadFirstMain(Accr,1,true);
      if ((Accs) and  (Accr.GroupAcc==0)) then begin
       MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
      end;    
    end else begin
      if (Nitem<Nitem2) then begin
        ResetLoop(Accr);
        Accs = true;
        while (LoopMain(Accr,2,Accs)) begin
          if (Accs==true) then begin
            if (Accr.AccNumber>Nitem2) then begin Accs = false; end;
          end;  
          if ((Accs) and  (Accr.GroupAcc==0)) then begin
           MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
          end;
        end;
      end else begin
        ResetLoop(Accr);
        Accr.AccNumber = Nitem;
        Accs = LoopBackKey("AccNumber",Accr,1,true);
        while (Accs) begin
          if (Accs==true) then begin
            if (Accr.AccNumber<Nitem2) then begin Accs = false; end;
          end;  
          if ((Accs) and  (Accr.GroupAcc==0)) then begin
            MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
          end;  
          Accs = LoopBackKey("AccNumber",Accr,1,true);//Accs = m4_ReadLogicalMain(AccVc,LLoop1--,&Accr);
        end;
      end;
    end;
  end;
  np = 0;
  GetNext2Sep(UserDefRepLinesr.Desc3,np,nsep);
  while (GetNextTokenReturn(UserDefRepLinesr.Desc3,np,Nitem)) begin
    if (nsep=="-") then begin
      addflag = false; 
    end else begin
      addflag = true;
    end;  
    GetNext2Sep(UserDefRepLinesr.Desc3,np,nsep);
    if (nsep==".") then begin
      GetNextToken(UserDefRepLinesr.Desc3,np,NRu);
      GetNext2Sep(UserDefRepLinesr.Desc3,np,nsep);
    end else begin
      NRu = "";
    end;    
    if (nsep==":") then begin
      GetNextToken(UserDefRepLinesr.Desc3,np,Nitem2);
      GetNext2Sep(UserDefRepLinesr.Desc3,np,nsep);
    end else begin
      Nitem2 = "";
    end;    
    Accr.AccNumber = Nitem;
    if (blank(Nitem2)) then begin
      Accs = ReadFirstMain(Accr,1,true);
      if ((Accs) and  (Accr.GroupAcc==0)) then begin
        MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
      end;
    end else begin
      if (Nitem<Nitem2) then begin
        ResetLoop(Accr);
        Accs = true;
        while (LoopMain(Accr,2,Accs)) begin
          if (Accs==true) then begin
            if (Accr.AccNumber>Nitem2) then begin Accs = false; end;
          end;  
          if ((Accs) and  (Accr.GroupAcc==0)) then begin
            MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
          end;  
        end;
       end else begin
        ResetLoop(Accr);
        Accr.AccNumber = Nitem;
        Accs = LoopBackKey("AccNumber",Accr,1,true);
        while (Accs) begin
          if (Accs==true) then begin
            if (Accr.AccNumber<Nitem2) then begin
              Accs = false;
            end;  
          end;  
          if ((Accs) and  (Accr.GroupAcc==0)) then begin
            MonthALPB2ResGr(RepSpec,PLf,UserDefRepLinesr,Accr,NRu,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,addflag,goms,headflag,resUseAccum,AccumStart);
          end;
          Accs = LoopBackKey("AccNumber",Accr,1,true);
        end;
      end;
    end;
  end;
  GetUserDefRepDescription(UserDefRepLinesr,RepSpec.Language,tstr);
  MonthALPBEnd(RepSpec,PLf,tstr,UserDefRepLinesr.SpecCode,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10,S11,S12,negf,goms,headflag,resUseAccum);// UserDefRepLinesr.Comment
  RETURN;
END;



external function Boolean MonthAccRuPerBal(record RcVc,Date,Date,Boolean,string,string,var val,Integer,Boolean,Date);
external procedure MonthAGrSumLine(record RcVc,Integer,string,string,string,val,val,val,val,val,val,val,val,val,val,val,val,Boolean,val,Boolean,Boolean);

external function Boolean GetObjBal(string,string,var record ObjBalVc);



global
procedure MonthSumLine2(record RcVc RepSpec,Boolean PLf,string t1,string t2,string extracode,
                   var val Sum1,var val Sum2,var val Sum3,var val Sum4,var val Sum5,
                   var val Sum6, var val Sum7,var val Sum8,var val Sum9,var val Sum10,var val Sum11,
                   var val Sum12, Boolean negf,val goms,Boolean resUseAccum,Date AccumStartDate,Integer DCSide)
BEGIN
  record ObjVc RUr;
  Boolean Accs,RUOut,usedf;
  
  val S11,S12,S13,S14,S15,S16,S17,S18,S19,S110,S111,S112;
  val S21,S22,S23,S24,S25,S26,S27,S28,S29,S210,S211,S212;
  val S31,S32,S33,S34,S35,S36,S37,S38,S39,S310,S311,S312;

  date sdat,edat;
  val accumsaldo;
  integer i,mnum;
 
  string 255 tstr,nru;
  record ObjBalVc ObjBalr;
  Boolean Objbals,temp;

  S21 = Sum1;
  S22 = Sum2;
  S23 = Sum3;
  S24 = Sum4;
  S25 = Sum5;
  S26 = Sum6;
  S27 = Sum7;
  S28 = Sum8;
  S29 = Sum9;
  S210 = Sum10;
  S211 = Sum11;
  S212 = Sum12;
  
  mnum = CountMonth(RepSpec.sStartDate,RepSpec.sEndDate);
  
  RUOut = false;
  RUr.OTCode = RepSpec.ObjType;
  RUr.Code = "";
  Accs = true;
  while (LoopKey("OTCode",RUr,2,Accs)) begin //2
    if (RUr.OTCode!=RepSpec.ObjType) then begin 
      goto L22SumLine2;
    end;
    ObjBalr.AccNumber = t1;
    ObjBalr.Object = RUr.Code;
//    Objbals = ReadFirstMain(RUr,1,true);
    Objbals = GetObjBal(t1,RUr.Code,ObjBalr);
    if (RepSpec.IncDaughter==1) then begin//otherwise it skips daughter
//        if (cstreq(RepSpec.repname,"ResRn")==false) then
//            if (Objbals==false) then goto LSkipObjectSumLine2;
    end else begin
        if (Objbals==false) then begin
          goto LSkipObjectSumLine2;
        end;  
    end;  
    
    //why UserDefRepLinesr.DCSide == 0 ???

    sdat = AccumStartDate;
    edat = AddDay( RepSpec.sStartDate,-1);
    usedf = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,accumsaldo,0,resUseAccum,AccumStartDate);
    
    sdat = RepSpec.sStartDate;
    edat = AddDay(AddMonth(sdat,1),-1);
    
    for (i=1;i<=mnum;i=i+1) begin
      switch (i) begin
        case 1:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S11,0,false,AccumStartDate);
          S11 = accumsaldo + S11;
        case 2:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S12,0,false,AccumStartDate);
          S12 = S11 + S12;
        case 3:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S13,0,false,AccumStartDate);
          S13 = S12 + S13;
        case 4:  
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S14,0,false,AccumStartDate);
          S14 = S13 + S14;
        case 5:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S15,0,false,AccumStartDate);
          S15 = S14 + S15;
        case 6:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S16,0,false,AccumStartDate);
          S16 = S15 + S16;
        case 7:
          temp  = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S17,0,false,AccumStartDate);
          S17 = S16 + S17;
        case 8:  
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S18,0,false,AccumStartDate);
          S18 = S17 + S18;
        case 9:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S19,0,false,AccumStartDate);
          S19 = S18 + S19;
        case 10:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S110,0,false,AccumStartDate);
          S110 = S19 + S110;
        case 11:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S111,0,false,AccumStartDate);
          S111 = S110 + S111;
        case 12:
          temp = MonthAccRuPerBal(RepSpec,sdat,edat,PLf,t1,RUr.Code,S112,0,false,AccumStartDate);
          S112 = S111 + S112;
      end;
      sdat = AddMonth(sdat,1);
      edat = AddDay(AddMonth(sdat,1),-1);
    end;
    S31 = S31 + S11;
    S32 = S32 + S12;
    S33 = S33 + S13;
    S34 = S34 + S14;
    S35 = S34 + S15;
    S36 = S35 + S16;
    S37 = S37 + S17;
    S38 = S38 + S18;
    S39 = S39 + S19;
    S310 = S310 + S110;
    S311 = S311 + S111;
    S312 = S312 + S112;

    //nk why ==, but not != 
    if ((S11!=0) or (S12!=0) or (S13!=0) or (S14!=0) or (S15!=0) or (S16!=0) or (S17!=0) or (S18!=0) or (S19!=0) or (S110!=0) or (S111!=0) or (S112!=0) or (usedf)) then begin
      if (RUOut==false) then begin
        StartFormat(15);
        OutString(0,0,t1,false);
        OutString(2,0,t2,false);
        EndFormat;
        RUOut = true;
      end;
      nru = RUr.Code;
      if (nonblank(RepSpec.ObjStr)) then begin
        nru = nru & ",";
        nru = nru & RepSpec.ObjStr;
      end;
      
      MonthAGrSumLine(RepSpec,6,nru,RUr.Comment,extracode,S11,S12,S13,S14,S15,S16,S17,S18,S19,S110,S111,S112,negf,goms,PLf,resUseAccum);
    end;
LSkipObjectSumLine2:;
  end;
L22SumLine2:;
  if (RepSpec.flags[2]!=0) then begin
    if (RUOut) then begin
      if ((S21==0) or (S22==0) or (S23==0) or (S24==0) or (S22==0) or (S26==0) or (S27==0) or (S28==0) or (S29==0) or (S210==0) or (S211==0) or (S212==0)) then begin
        tstr = USetStr(3141);
        MonthAGrSumLine(RepSpec,6,"",tstr,extracode,S21,S22,S23,S24,S25,S26,S27,S28,S29,S210,S211,S212,negf,goms,PLf,resUseAccum);
      end;
      tstr = USetStr(3142);
      MonthAGrSumLine(RepSpec,6,"",tstr,extracode,Sum1,Sum2,Sum3,Sum4,Sum5,Sum6,Sum7,Sum8,Sum9,Sum10,Sum11,Sum12,negf,goms,PLf,resUseAccum);
    end else begin
      MonthAGrSumLine(RepSpec,0,t1,t2,extracode,Sum1,Sum2,Sum3,Sum4,Sum5,Sum6,Sum7,Sum8,Sum9,Sum10,Sum11,Sum12, negf,goms,PLf,resUseAccum);
    end;
  end else begin
    if (RUOut) then begin
      tstr = USetStr(3142);
      MonthAGrSumLine(RepSpec,6,"",tstr,extracode,S31,S32,S33,S34,S35,S36,S37,S38,S39,S310,S311,S312,negf,goms,PLf,resUseAccum);
    end;
    Sum1 = S31;
    Sum2 = S32;
    Sum3 = S33;
    Sum4 = S34;
    Sum5 = S35;
    Sum6 = S36;
    Sum7 = S37;
    Sum8 = S38;
    Sum9 = S39;
    Sum10 = S310;
    Sum11 = S311;
    Sum12 = S312;
    
  end;
  RETURN;
END;
