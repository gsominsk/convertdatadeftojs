external function val FindVAT(string,val,Integer,Integer); 
external procedure SelectUnitText(string,string,var string); 
external procedure GetUserName(string,var string); 
external function Boolean GetVAT2(string,var val,var Integer,Integer);
external procedure GetVATText(string,var string);
 
 
procedure ExportKrediidiinfo(record IVVc IVp,record ARVc ARp)
BEGIN
  record IPrsVc IPrsr;
  record CUVc CUr;
  record CCatVc CCr;
  row IVVc IVrw;
  integer rwcnt,i;
  Boolean negf;
  val quant,sum,vatval,rval;
  string 20 tstr;
  string 5 str;
  Integer rn;

  negf = false;
  if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin negf = true; end;
  ExportLongInt(IVp.SerNr);
  ExportLongInt(IVp.InvType);
  ExportDate(IVp.InvDate);
  ExportString(IVp.CustCode);
  ExportDate(IVp.PayDate);
  ExportString(IVp.Addr0);
  ExportString(IVp.Addr1);
  ExportString(IVp.Addr2);
  ExportString(IVp.Addr3);
  ExportString(IVp.InvAddr3);
  ExportString(IVp.InvAddr4);
  ExportString(IVp.ClientContact);
  CUr.Code=IVp.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin    
  end;
  ExportString(CUr.CustCat);
  CCr.Code=CUr.CustCat;
  if (ReadFirstMain(CCr,1,true)) then begin    
  end;
  ExportString(CCr.Comment);  
  ExportString(CUr.RegNr1);
  ExportString(CUr.Phone);
  ExportString(CUr.Fax);
  ExportString(CUr.eMail);
  ExportString(IVp.CurncyCode);
  ExportVal(IVp.Sum1,M423Val);
  ExportVal(IVp.Sum3,M423Val);
  ExportVal(IVp.Sum4,M423Val);
  ExportString("");//arve peal tehtud ümardused
  ExportString(IVp.ShipAddr0);
  ExportString(IVp.ShipAddr1);
  ExportString(IVp.ShipAddr2);
  ExportString(IVp.ShipAddr3);
  ExportString(IVp.DelAddr3);
  ExportString(IVp.DelAddr4);
  ExportString(IVp.IntCode);
  ExportString(IVp.ShipDeal);
  ExportString(IVp.ShipMode);
  ExportVal(IVp.Sum4-ARp.RVal,M423Val);
  ExportString(CUr.RefStr);
  ExportString(IVp.VATNr);
  tstr = "";
  if (nonblank(IVp.SalesMan)) then begin
    GetUserName(IVp.SalesMan,tstr);
  end;
  ExportString(tstr);
  ExportString(IVp.InvComment);
  ExportVal(ARp.RVal,M423Val);
  IPrsr.IVNr = IVp.SerNr;
  IPrsr.TransType = kIPrsTransTypeReceipt;
  if (LoopBackKey("IVKey",IPrsr,2,true)) then begin
    if ((IPrsr.IVNr==IVp.SerNr) and (IPrsr.TransType == kIPrsTransTypeReceipt)) then begin
      ExportDate(IPrsr.TransDate);
    end else begin
      ExportString("");
    end;
  end;
  NewLine;
  quant = 0;
  sum = 0;
  rwcnt = MatRowCnt(IVp);
  for (i=0;i<rwcnt;i=i+1) begin    
    MatRowGet(IVp,i,IVrw);
    quant = IVrw.Quant;
    sum = IVrw.Sum;
    if (negf) then begin
      quant = 0 - quant;
      sum   = 0 - sum;
    end;
    ExportString(IVrw.stp);
    ExportString(IVrw.ArtCode);
    ExportString(IVrw.Spec);
    if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin
      ExportVal((IVrw.Price*-1),M423Val);
    end else begin
      ExportVal(IVrw.Price,M423Val);
    end;
    SelectUnitText(IVp.LangCode,IVrw.UnitCode,tstr); 
    ExportString(tstr);
    ExportVal(IVrw.vRebate,M4UVal);
    ExportVal(quant,M4UVal);
    ExportVal(sum,M423Val);
    str = "";
    rval = 0;
    if (nonblank(IVrw.VATCode)) then begin  
      if (GetVAT2(IVrw.VATCode,rval,rn,0)) then begin end;
    end;
    ExportString(rval);
    vatval = FindVAT(IVrw.VATCode,sum,0,0);
    ExportVal(vatval,M423Val);
    ExportVal(sum+vatval,M423Val);
    NewLine;
  end;
  RETURN;
END;

global
procedure OpenInvEstEn(record RcVc RepSpec)
BEGIN
  record IVVc IVr;
  record ARVc ARr;
  Boolean found,firstipf;
  string 255 tstr;
  LongInt startno;
  
  found = false;
  if (CountRecords("ARVc")>0) then begin
    found = true;
  end;
  while (LoopMain(ARr,1,found)) begin
    if (found) then begin
      IVr.SerNr = ARr.InvoiceNr;
      if (ReadFirstMain(IVr,1,true)) then begin
        if (IVr.Invalid==0) then begin
          ExportKrediidiinfo(IVr,ARr);
          NewLine;
          UserTrace(IVr.SerNr,M4Long);
        end;
      end;
    end;
  end;
  NewLine;
LOpenInvEn:;  
  RETURN;  
END;
