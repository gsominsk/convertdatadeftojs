external function Boolean SetInSet2(string,string);

global
procedure CustTurnEn(record RcVc RepSpec)
begin
  record CUVc CUr;
  Boolean TrHs,testf;
  string 255 fromcust,tocust;
  Date i;
  val v;
  
  ExportString(USetStr(9051));
  ExportString(USetStr(9041));
  ExportString(USetStr(9131));
  ExportString(USetStr(8318));
  ExportString(USetStr(9656));
  NewLine;

  TrHs = false;  
  fromcust = FirstInRange(RepSpec.f1,20);
  tocust = LastInRange(RepSpec.f1,20);
  CUr.Code = fromcust;
  TrHs = true;
  while (LoopMain(CUr,1,TrHs)) begin
      if (nonblank(tocust)) then begin
        if (CUr.Code>tocust) then begin
          TrHs = false;
        end;
      end; 
      testf = true;
      if (CUr.CUType==0) then begin 
        testf = false; 
      end;
      if (nonblank(RepSpec.f2)) then begin
        if (CUr.CustCat<>RepSpec.f2) then begin
          testf = false;
        end;
      end;
      if (nonblank(RepSpec.Stext)) then begin
        if (SetInSet2(RepSpec.Stext,CUr.Classification)==false) then begin
          testf = false;
        end;
      end;
      if ((nonblank(RepSpec.f3)) and (CUr.SalesMan<>RepSpec.f3))  then begin 
        testf = false;
      end;
      if (TrHs and testf) then begin
        if (RepSpec.ArtMode<>0) then begin
          v = GetTurnover(CUr,"salesinclvat",RepSpec.sStartDate,RepSpec.sEndDate);
        end else begin
          v = GetTurnover(CUr,"salesexclvat",RepSpec.sStartDate,RepSpec.sEndDate);
        end;
        if (v<>0) then begin
          ExportString(CUr.Code);
          ExportString(CUr.Name);
          ExportString(CUr.CustCat);
          ExportString(CUr.Classification);
          ExportString(CUr.SalesMan);
          for (i=RepSpec.sStartDate;i<=RepSpec.sEndDate;i=AddMonth(i,1)) begin
            if (RepSpec.ArtMode<>0) then begin
              v = GetTurnover(CUr,"salesinclvat",i,i);
            end else begin
              v = GetTurnover(CUr,"salesexclvat",i,i);
            end;
            ExportVal(v,M4Val);
          end;
          NewLine;
          UserTrace(CUr.Code,0);
        end;  
      end;
  end;
  return;
end;
