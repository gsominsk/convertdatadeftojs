procedure WB2BUnitDescr
begin
  record UnitVc Unitr;
  
  Boolean TrHs;
  TrHs = true;
  ExportString(USetStr(18968));
  NewLine; 
  while(LoopMain(Unitr,1,TrHs)) begin
    if (TrHs) then begin
      ExportPadString(Unitr.Code,len(Unitr.Code)+1," ",false);
      ExportPadString(Unitr.Comment,len(Unitr.Comment)+1," ",false);
      ExportString("");
      NewLine;
    end;
  end;
 return;
end;

procedure WB2BPrintObjectResult(record FBVc FBr,string object)
BEGIN
  record ObjVc Objr;
  row FBVc FBrw;
  record INVc INr;
  Integer i,rwcnt;  
  
  ExportPadString(object, len(object)+1," ", false);
  Objr.Code = object;  
  if (ReadFirstMain(Objr,1,true)) then begin
      ExportPadString(Objr.Comment, len(Objr.Comment)+1," ", false); 
  end;
  NewLine;
  rwcnt = MatRowCnt(FBr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(FBr,i,FBrw);
    INr.Code = FBrw.Comment;
    if (ReadFirstMain(INr,1,true)) then begin
      ExportString(INr.Name);
    end;
    ExportVal(FBrw.DebVal,M4Val);
    ExportVal(FBrw.CredVal,M4Val);
    ExportVal(FBrw.CurDebVal,M4Val);
    ExportVal(FBrw.Deb2Val,M4Val);
    ExportVal(FBrw.Cred2Val,M4Val);
    ExportVal(FBrw.CurCredVal,M4Val);
    ExportVal(FBrw.DebVal-FBrw.Deb2Val,M4Val);
    ExportVal(FBrw.CurDebVal-FBrw.CurCredVal,M4Val);
    ExportString("");
    ExportString("");
    INr.Code = FBrw.Comment;
    if (ReadFirstMain(INr,1,true)) then begin
      ExportString(INr.Unittext);
    end;
    NewLine;
  end; 
  NewLine;
  RETURN;
END;

procedure WB2BAddToItemMatrix(record FBVc FBr,string artcode,Boolean budf,val q,val c)
BEGIN
  record INVc INr;
  row FBVc FBrw;
  Integer i,rwcnt;  
  Boolean found,skipf;

  skipf = false;
  INr.Code = artcode;
  if (ReadFirstMain(INr,1,true)) then begin
    if (INr.ItemType<>0) then begin
      skipf = true; 
    end;
  end else begin
    skipf = true; 
  end;
  skipf = false;
  
  if (skipf==false) then begin
    found = false;
    rwcnt = MatRowCnt(FBr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(FBr,i,FBrw);
      if (FBrw.Comment==artcode) then begin
        if (budf) then begin
          FBrw.Deb2Val =  q;
          FBrw.Cred2Val =  c;
          FBrw.CurCredVal = q*c;
        end else begin
          FBrw.DebVal = FBrw.DebVal + q;
          FBrw.CredVal = FBrw.CredVal + c;
          FBrw.CurDebVal = FBrw.CurDebVal + q*c;
        end;
     /*   if (budf) then begin
          FBrw.Deb2Val = FBrw.Deb2Val + q;
          FBrw.Cred2Val = FBrw.Cred2Val + c;
          FBrw.CurCredVal = FBrw.CurCredVal + q*c;
        end else begin
          FBrw.DebVal = FBrw.DebVal + q;
          FBrw.CredVal = FBrw.CredVal + c;
          FBrw.CurDebVal = FBrw.CurDebVal + q*c;
        end;*/
        MatRowPut(FBr,i,FBrw);
        found = true;
        i = rwcnt;
      end;
    end;
    if (found==false) then begin
      ClearRow(FBr,FBrw,1); 
      FBrw.Comment = artcode;
      if (budf) then begin
        FBrw.Deb2Val = q;
        FBrw.Cred2Val = c;        
        FBrw.CurCredVal = FBrw.Deb2Val*FBrw.Cred2Val;
      end else begin
        FBrw.DebVal = q;
        FBrw.CredVal = c;
        FBrw.CurDebVal = FBrw.DebVal*FBrw.CredVal;
      end;  
      MatRowPut(FBr,rwcnt,FBrw);
    end;
  end;  
  RETURN;
END;

procedure WB2BFindProjectBudget(record FBVc FBr,string prcode)
BEGIN
  record TBBUVc TBBUr;
  row TBBUVc TBBUrw;
  row FBVc FBrw;
  Integer i,rwcnt;  
  Boolean found;

  if (nonblank(prcode)) then begin
    TBBUr.PRCode = prcode;
    if (ReadFirstMain(TBBUr,1,true)) then begin
      rwcnt = MatRowCnt(TBBUr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TBBUr,i,TBBUrw);
        WB2BAddToItemMatrix(FBr,TBBUrw.ArtCode,true,TBBUrw.Qty,TBBUrw.Price);
      end;
    end;  
  end;
  RETURN;
END;

procedure WB2BGetPurchaseInvoiceProjectResult(record FBVc FBr,string prcode,string object,Date EndDate,Boolean objinprf)
BEGIN
  record TBIVVc TBIVr;
  Boolean TrHs,testf,found;

  found = false;
  TBIVr.oVc = 2;
  TBIVr.PRCode = prcode;
  TrHs = true;
  while (LoopMain(TBIVr,2,TrHs)) begin
    if (TBIVr.oVc<>2) then begin      
      TrHs = false;
    end;
    if (TBIVr.PRCode<>prcode) then begin      
      TrHs = false;
    end;
    if (TrHs) then begin
      testf = true;
      if (TBIVr.TransDate>EndDate) then begin testf = false; end;
      if (testf) then begin
        if (SetInSet(object,TBIVr.Objects)==false) then begin testf = false; end;
      end;  
      if (testf) then begin
        WB2BAddToItemMatrix(FBr,TBIVr.ArtCode,false,TBIVr.InvQty,TBIVr.CostPrice);
        found = true;
      end;
    end;
  end;
  if (/*found or */objinprf) then begin
    WB2BFindProjectBudget(FBr,prcode);
  end;  
  RETURN;
END;

procedure WB2BFindObjectResult(record FBVc FBr,string object,Date EndDate,Integer closed)
BEGIN
  record PRVc PRr;
  Boolean TrHs,testf,objinprf;
  
  TrHs = true;
  while (LoopMain(PRr,1,TrHs)) begin
    testf = true;
    if (PRr.StartDate>EndDate) then begin testf = false; end;
    if (PRr.Terminated==1) then begin
      if (closed==0) then begin
        testf = false;
      end;
    end;
    if (testf) then begin
      objinprf = false;
      if (SetInSet(object,PRr.Objects)) then begin objinprf = true; end;      
      WB2BGetPurchaseInvoiceProjectResult(FBr,PRr.Code,object,EndDate,objinprf);
    end;
  end;  
  RETURN;
END;

procedure PrintHeaderWB2B(record RcVc RepSpec)
BEGIN
  record CYBlock CompYear;
  string 255 tstr;
  
  BlockLoad(CompYear);
 
  ExportString(CompYear.CompName);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString(USetStr(18969));
  NewLine;
  ExportString(USetStr(18970));
  NewLine;
  ExportString(USetStr(18971));
  NewLine;
  NewLine;
   ExportString(USetStr(18972));
   ExportString("");
   ExportString(USetStr(18973));
   ExportString("");
   ExportString("");
   ExportString(USetStr(18974));
   ExportString("");
   ExportString(USetStr(18975));
   ExportString("");
   ExportString(USetStr(18976));
   ExportString("");
   ExportString(USetStr(18977));
   NewLine;
   ExportString("");
   ExportString(USetStr(18978));
   ExportString(USetStr(18979));
   ExportString(USetStr(18980));
   ExportString(USetStr(18978));
   ExportString(USetStr(18979));
   ExportString(USetStr(18980));
   ExportString(USetStr(18980));
   ExportString(USetStr(18980));
   ExportString(USetStr(18983));
   ExportString("");
   ExportString(USetStr(18984));  
   NewLine;
   ExportString("");
   ExportString("");
   ExportString("");
   ExportString(USetStr(18985));
   ExportString("");
   ExportString("");
   ExportString(USetStr(18985));
   ExportString(USetStr(18985));
   ExportString(USetStr(18985));
   ExportString("");
   ExportString("");
   ExportString("");   
   NewLine;
   ExportString("");
   ExportString("");
   ExportString("");
   ExportString("");
   ExportString("");
   ExportString("");
   ExportString("");
   ExportString(USetStr(18986));
   ExportString(USetStr(18987));
   ExportString(USetStr(18988));
   ExportString(USetStr(18989));
   ExportString("");
   NewLine;    
   RETURN;
END;


global
procedure WB2BEn(record RcVc RepSpec)
BEGIN
  record ObjVc Objr;
  record FBVc FBr;
  Boolean TrHs,testf;
  string 10 keystr;
  val totqty,totcost;
  Date EndDate;

  if (blankdate(RepSpec.d1)) then begin
    EndDate = CurrentDate;
  end else begin
    EndDate = RepSpec.d1;
  end;
  /*
  if (nonblank(RepSpec.ObjType)) then begin
    keystr = "OTCode";
    Objr.OTCode = RepSpec.ObjType;
  end else begin
    keystr = "Code";
  end;
  */ 
  
  keystr = "Code"; 
  PrintHeaderWB2B(RepSpec);

  TrHs = true;
  Objr.Code = RepSpec.ObjStr;  
  while (LoopKey(keystr,Objr,1,TrHs)) begin
    if (nonblank(RepSpec.ObjStr)) then begin
      if (Objr.Code<>RepSpec.ObjStr) then begin
        TrHs = false;
      end;
    end;  
    testf = true;
    if (nonblank(RepSpec.FirstAcc)) then begin
      if (Objr.AutoObjects<>RepSpec.FirstAcc) then begin
        testf = false;
      end;
    end;
    if (TrHs and testf) then begin
    //  FBr.SerNr = RecordNew(FBr);
      RecordNew(FBr);
      WB2BFindObjectResult(FBr,Objr.Code,EndDate,RepSpec.flags[0]);
      WB2BPrintObjectResult(FBr,Objr.Code);
    //  WB2BUnitDescr;
    end;
  end;
  RETURN;
END;
