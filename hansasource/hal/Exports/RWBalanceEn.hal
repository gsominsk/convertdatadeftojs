external procedure FindFBObjects(string,var val,var val,var val,var val,date,date,integer,integer,integer);

procedure CutObjectCode(string ostr,var string ostr2,string start,Boolean cut)
BEGIN
  Integer startlen,ostrlen;
  ostr2 = ostr;
  if (cut) then begin
    startlen = len(start);
    ostrlen = len(ostr);
    ostr2 = Mid(ostr,startlen,ostrlen-startlen);    
  end;
  RETURN;
END;

procedure CutObject(var string obj1,var string  obj2,var string  obj3,var string obj4)
BEGIN
  record ObjVc Objr;
  record OTVc OTr;
  string 60 ostr2;
  
  if nonblank(obj1) then begin
    Objr.Code = obj1;
    if (ReadFirstMain(Objr,1,true)) then begin
      OTr.Code = Objr.OTCode;
      if (ReadFirstMain(OTr,1,true)) then begin
        CutObjectCode(obj1,ostr2,OTr.Start,true);
          obj1 = ostr2;
       end;  
    end; 
  end;   
  if nonblank(obj2) then begin  
    Objr.Code = obj2;
    if (ReadFirstMain(Objr,1,true)) then begin
      OTr.Code = Objr.OTCode;
      if (ReadFirstMain(OTr,1,true)) then begin
        CutObjectCode(obj2,ostr2,OTr.Start,true);
          obj2 = ostr2;
       end;  
    end; 
  end;   
  if nonblank(obj3) then begin  
    Objr.Code = obj3;
    if (ReadFirstMain(Objr,1,true)) then begin
      OTr.Code = Objr.OTCode;
      if (ReadFirstMain(OTr,1,true)) then begin
        CutObjectCode(obj3,ostr2,OTr.Start,true);
          obj3 = ostr2;
       end;  
    end;   
  end;
  if nonblank(obj4) then begin  
    Objr.Code = obj4;
    if (ReadFirstMain(Objr,1,true)) then begin
      OTr.Code = Objr.OTCode;
      if (ReadFirstMain(OTr,1,true)) then begin
        CutObjectCode(obj4,ostr2,OTr.Start,true);
          obj4 = ostr2;
       end;
    end;
  end;
  RETURN;
END;


procedure HTMLout(string account,string ob1,string ob2,string ob3,string ob4,val accsaldo)
begin
string 20 deb,cred;
  record SysFormatBlock SysFormatRec;

  BlockLoad(SysFormatRec);
  if (accsaldo > 0) then begin
    deb = ValToString(accsaldo,M4Val,"",SysFormatRec.decimalPt,0);
  end else begin
    cred = ValToString(0-accsaldo,M4Val,"",SysFormatRec.decimalPt,0);
  end;
  if nonblank(deb) then begin
    ExportPadString("<Kirje>",7," ",false);
    NewLine;
    ExportPadString(" <Konto val=""" & account & """/>",16 + len(account),"",false);
    NewLine;
    if nonblank(ob1) then begin
      ExportPadString(" <TP val=""" & ob1 & """/>",13 + len(ob1),"",false);
    end else begin
      ExportPadString(" <TP val=""""/>",13,"",false);
    end;
    NewLine;
    if nonblank(ob2) then begin
      ExportPadString(" <TT val=""" & ob2 & """/>",13 + len(ob2),"",false);
    end else begin
      ExportPadString(" <TT val=""""/>",13,"",false);
    end;
    NewLine;
    if nonblank(ob3) then begin
      ExportPadString(" <A val=""" & ob3 & """/>",12 + len(ob3),"",false);
    end else begin
      ExportPadString(" <A val=""""/>",12,"",false);
    end;
    NewLine;
    if nonblank(ob4) then begin
      ExportPadString(" <R val=""" & ob4 & """/>",12 + len(ob4),"",false);
    end else begin
      ExportPadString(" <R val=""""/>",12,"",false);
    end;
    NewLine;
    ExportPadString(" <Sum liik=""D"" val=""" & deb & """/>",23 + len(deb),"",false);
    NewLine;
    ExportPadString("</Kirje>",8,"",false);
    NewLine;
  end;
  if nonblank(cred) then begin
    ExportPadString("<Kirje>",7,"",false);
    NewLine;
    ExportPadString(" <Konto val=""" & account & """/>",16 + len(account),"",false);
    NewLine;
    if nonblank(ob1) then begin
      ExportPadString(" <TP val=""" & ob1 & """/>",13 + len(ob1),"",false);
    end else begin
      ExportPadString(" <TP val=""""/>",13,"",false);
    end;
    NewLine;
    if nonblank(ob2) then begin
      ExportPadString(" <TT val=""" & ob2 & """/>",13 + len(ob2),"",false);
    end else begin
      ExportPadString(" <TT val=""""/>",13,"",false);
    end;
    NewLine;
    if nonblank(ob3) then begin
      ExportPadString(" <A val=""" & ob3 & """/>",12 + len(ob3),"",false);
    end else begin
      ExportPadString(" <A val=""""/>",12,"",false);
    end;
    NewLine;
    if nonblank(ob4) then begin
      ExportPadString(" <R val=""" & ob4 & """/>",12 + len(ob4),"",false);
    end else begin
      ExportPadString(" <R val=""""/>",12,"",false);
    end;
    NewLine;
    ExportPadString(" <Sum liik=""K"" val=""" & cred & """/>",23 + len(cred),"",false);
    NewLine;
    ExportPadString("</Kirje>",8,"",false);
    NewLine;
  end;
return;
end;


global
procedure RiigiNewEn(record RcVc RepSpec)
BEGIN
  record AccVc Accr;
  record AccVc Acc2r;
  record ROHisVc RHr;
  Boolean found,skipf;
  string 255 tstr;
  val accd,accc,accres,objtot,accsaldo,totsaldo;
  val totd,totc;
  string 10 account,accshort;
  string 20 ob1,ob2,ob3,ob4;
  boolean TrHs,test,first;
  string 20 Object1,Object2,Object3,Object4;
  date hisdate;
  val totwobj,totnoobj,amount;
  val accs;
  boolean TrHs1,test1,first1;
  val fbcred,fbdeb;
  val fbcred2,fbdeb2;

  ExportPadString("<?xml version=""1.0"" encoding=""ISO-8859-1""?>",43,"",false);
  NewLine;
  ExportPadString("<!DOCTYPE RWSaldoandmik SYSTEM ""saldoandmik_1.0.dtd"">",53,"",false);
  NewLine;
  tstr = GetYear(CurrentDate);
  ExportPadString("<RWSaldoandmik aruandeaasta=""" & tstr & """",31+len(tstr),"",false);
  NewLine;
  ExportPadString("registrikood=""" & RepSpec.f1 & """",15+len(RepSpec.f1),"",false);
  NewLine;
  tstr = DateToString(CurrentDate,"YYYY-MM-DD");
  ExportPadString("       loomiseKuupaev=""" & tstr & """>",25+len(tstr),"",false);
  NewLine;
  ExportPadString("<Tabel>",7,"",false);
  NewLine;

  RepSpec.FirstAcc = FirstInRange(RepSpec.AccStr,10);
  RepSpec.LastAcc = LastInRange(RepSpec.AccStr,10);

  if (((RepSpec.flags[7] == 1) and (RepSpec.flags[8]>0 )) == false) then begin
    RHr.AccNumber = RepSpec.FirstAcc;
    first = true;
    TrHs = true;
    while (LoopMain(RHr,1,TrHs)) begin
      test = true;
      if ((nonblank(RepSpec.LastAcc)) and (RHr.AccNumber>RepSpec.LastAcc)) then begin
        test = false;
        TrHs = false;
      end;
      tstr = "01.";
      if (RHr.Month <10) then begin tstr = tstr & "0"; end;
      tstr = tstr & RHr.Month;
      tstr = tstr & ".";
      tstr = tstr & RHr.Year;
      hisdate = StringToDate(tstr);
      if (hisdate>RepSpec.sEndDate) then begin  test = false; end;
      Object1 = RHr.Object1;
      Object2 = RHr.Object2;
      Object3 = RHr.Object3;
      Object4 = RHr.Object4;
      Accshort = RHr.AccNumber;
      if (RepSpec.flags[5] == 0) and blank(Object1) and blank(Object2) and blank(Object3) and blank(Object4) then begin
        test = false;
      end;
      if (RepSpec.flags[9]==1) then begin
        Acc2r.AccNumber = RHr.AccNumber;
        if ReadFirstMain(Acc2r,1,true) then begin end;
        if (Acc2r.AccType == 3) or (Acc2r.AccType == 4) then begin 
          if (hisdate<RepSpec.sStartDate) then begin test = false; end;
        end;  
      end;
      if test then begin
        if (RepSpec.flags[6] == 1) then begin
          CutObject(Object1,Object2,Object3,Object4);
        end;
        if (Accshort <> account) or (Object1 <> ob1) or (Object2 <> ob2) or (Object3 <> ob3) or (Object4 <> ob4) then begin
          if (first == false) then begin
            accsaldo = accd - accc;
            if ((RepSpec.flags[5]==1) and (RepSpec.flags[3]==0) and blank(ob1) and blank(ob2) and blank(ob3) and blank(ob4)) then begin
              FindFBObjects(account,fbdeb,fbcred,fbdeb2,fbcred2,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.flags[7],RepSpec.flags[8],RepSpec.flags[9]);
              if (RepSpec.basecurncy==0) then begin 
                accsaldo = accsaldo - fbdeb + fbcred;
              end else begin
                accsaldo = accsaldo - fbdeb2 + fbcred2;
              end;
            end;
            if (accsaldo<>0) then begin 
              HTMLout(account,ob1,ob2,ob3,ob4,accsaldo);
            end;    
            if (Accshort <> account) then begin
              if ReadFirstMain(Accr,1,true) then begin
                if (Accr.ExclFrRep!=0) then begin test = false; end;
                if (Accr.GroupAcc!=0) then begin test = false; end;
              end;
            end;
            accd = 0;
            accc = 0;
            accsaldo = 0;
          end else begin
            first = false;
          end;
          account = RHr.AccNumber;
          ob1 = RHr.Object1;
          ob2 = RHr.Object2;
          ob3 = RHr.Object3;
          ob4 = RHr.Object4;
          if (RepSpec.flags[6] == 1) then begin
            CutObject(ob1,ob2,ob3,ob4);
          end;
        end;
        if (RepSpec.basecurncy==0) then begin 
          accd = accd + RHr.Deb;
          accc = accc + RHr.Cred;
          accsaldo = accsaldo + RHr.Saldo;
        end else begin 
          accd = accd + RHr.Deb2;
          accc = accc + RHr.Cred2;
          accsaldo = accsaldo + RHr.Saldo2;
        end;
      end;
    end;
  end else begin
    Accr.AccNumber = RepSpec.FirstAcc;
    TrHs1 = true;
    first1 = true;
    while LoopMain(Accr,1,TrHs1) begin
      test1 = true;
      if ((nonblank(RepSpec.LastAcc)) and (Accr.AccNumber>RepSpec.LastAcc)) then begin
        TrHs1 = false;
        test1 = false;
      end;
      if (Accr.ExclFrRep!=0) then begin test1 = false; end;
      if (Accr.GroupAcc!=0) then begin test1 = false; end;
      if test1 then begin
        if nonblank(account) then begin
          if (account == Left(Accr.AccNumber,RepSpec.flags[8])) then begin
            test1 = false;
          end else begin
            if ((RepSpec.flags[5]==1) and (RepSpec.flags[3]==0) and blank(ob1) and blank(ob2) and blank(ob3) and blank(ob4)) then begin
              FindFBObjects(account,fbdeb,fbcred,fbdeb2,fbcred2,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.flags[7],RepSpec.flags[8],RepSpec.flags[9]);
              if (RepSpec.basecurncy==0) then begin 
                accsaldo = accsaldo - fbdeb + fbcred;
              end else begin
                accsaldo = accsaldo - fbdeb2 + fbcred2;
              end;
            end;
            if (accsaldo <> 0) then begin
              HTMLout(account,ob1,ob2,ob3,ob4,accsaldo);
            end;
            accsaldo = blankval;
            accc = blankval;
            accd = blankval;
            account = Left(Accr.AccNumber,RepSpec.flags[8]);
          end;
        end else begin
          account = Left(Accr.AccNumber,RepSpec.flags[8]);
        end;
      end;
      if test1 then begin
        first = true;
        TrHs = true;
        ResetLoop(RHr);
        RHr.Object1 = "";
        while LoopKey("Objects",RHr,1,TrHs) begin
          test = true;
          Accshort = RHr.AccNumber;
          Accshort = Left(Accshort,RepSpec.flags[8]);
          if (Accshort <> account) then begin
            test = false;
          end;
          tstr = "01.";
          if (RHr.Month <10) then begin tstr = tstr & "0"; end;
          tstr = tstr & RHr.Month;
          tstr = tstr & ".";
          tstr = tstr & RHr.Year;
          hisdate = StringToDate(tstr);
          if (hisdate>RepSpec.sEndDate) then begin test = false; end;
          if (RepSpec.flags[5] == 0) and blank(RHr.Object1) and blank(RHr.Object2) and blank(RHr.Object3) and blank(RHr.Object4) then begin
            test = false;
          end;
          if (RepSpec.flags[9]==1) then begin
            Acc2r.AccNumber = RHr.AccNumber;
            if ReadFirstMain(Acc2r,1,true) then begin end;
            if (Acc2r.AccType == 3) or (Acc2r.AccType == 4) then begin 
              if (hisdate<RepSpec.sStartDate) then begin test = false; end;
            end;  
          end;
          if test then begin
            Object1 = RHr.Object1;
            Object2 = RHr.Object2;
            Object3 = RHr.Object3;
            Object4 = RHr.Object4;
            if (RepSpec.flags[6] == 1) then begin
              CutObject(Object1,Object2,Object3,Object4);
            end;
            if (first == false) then begin
              if  (Object1 <> ob1) or (Object2 <> ob2) or (Object3 <> ob3) or (Object4 <> ob4) then begin
                if ((RepSpec.flags[5]==1) and (RepSpec.flags[3]==0) and blank(ob1) and blank(ob2) and blank(ob3) and blank(ob4)) then begin
                  FindFBObjects(account,fbdeb,fbcred,fbdeb2,fbcred2,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.flags[7],RepSpec.flags[8],RepSpec.flags[9]);
                  if (RepSpec.basecurncy==0) then begin 
                    accsaldo = accsaldo - fbdeb + fbcred;
                  end else begin
                    accsaldo = accsaldo - fbdeb2 + fbcred2;
                  end;
                end;
                if (accsaldo <> 0) then begin
                  HTMLout(account,ob1,ob2,ob3,ob4,accsaldo);
                end;
                accd = 0;
                accc = 0;
                accsaldo = 0;
              end;
            end else begin
              first = false;
            end;
            ob1 = RHr.Object1;
            ob2 = RHr.Object2;
            ob3 = RHr.Object3;
            ob4 = RHr.Object4;
            if (RepSpec.flags[6] == 1) then begin
              CutObject(ob1,ob2,ob3,ob4);
            end;
            if (RepSpec.basecurncy==0) then begin 
              accd = accd + RHr.Deb;
              accc = accc + RHr.Cred;
              totd = totd + RHr.Deb;
              totc = totc + RHr.Cred;
            end else begin 
              accd = accd + RHr.Deb2;
              accc = accc + RHr.Cred2;
              totd = totd + RHr.Deb2;
              totc = totc + RHr.Cred2;
            end;
            if (RepSpec.SimVerf == 1) then begin
              if (RepSpec.basecurncy==0) then begin 
                accd = accd + RHr.DebSim;
                accc = accc + RHr.CredSim;
                totd = totd + RHr.DebSim;
                totc = totc + RHr.CredSim;
              end else begin 
                accd = accd + RHr.DebSim2;
                accc = accc + RHr.CredSim2;
                totd = totd + RHr.DebSim2;
                totc = totc + RHr.CredSim2;
              end;
            end;
            if (RepSpec.flags[3]==0) or (RepSpec.flags[2]==1) then begin
              if (RepSpec.basecurncy==0) then begin 
                accs = RHr.Deb -RHr.Cred;
              end else begin 
                accs = RHr.Deb2 -RHr.Cred2;
              end;
              if (RepSpec.SimVerf == 1) then begin
                if (RepSpec.basecurncy==0) then begin 
                  accs = accs + RHr.DebSim -RHr.CredSim;
                end else begin 
                  accs = accs + RHr.DebSim2 -RHr.CredSim2;
                end;   
              end;
              accsaldo = accsaldo + accs;
              totsaldo = totsaldo + accs;
            end;
         end;
       end;
     end;
   end;
 end;
 if (RepSpec.flags[6] == 1) then begin
     CutObject(ob1,ob2,ob3,ob4);
 end;
 accsaldo = accd -accc;
 if ((RepSpec.flags[5]==1) and (RepSpec.flags[3]==0) and blank(ob1) and blank(ob2) and blank(ob3) and blank(ob4)) then begin
   FindFBObjects(account,fbdeb,fbcred,fbdeb2,fbcred2,RepSpec.sStartDate,RepSpec.sEndDate,RepSpec.flags[7],RepSpec.flags[8],RepSpec.flags[9]);
   if (RepSpec.basecurncy==0) then begin 
     accsaldo = accsaldo - fbdeb + fbcred;
   end else begin
     accsaldo = accsaldo - fbdeb2 + fbcred2;
   end;
   switch (RepSpec.basecurncy) begin            
     case 0:
       accsaldo = accsaldo - fbdeb + fbcred;
     case 1:
       accsaldo = accsaldo - fbdeb2 + fbcred2;
   end;
 end;
 if (accsaldo<>0) then begin
   HTMLout(account,ob1,ob2,ob3,ob4,accsaldo);
 end;
 ExportPadString("</Tabel>",8,"",false);
 NewLine;
 ExportPadString("</RWSaldoandmik>",16,"",false);
 RETURN;
END;