external function Boolean HasModPL();
external function Boolean HasModSL();

global
procedure Exp2GBasePIVc(record RcVc RepSpec)
BEGIN
  record PIVc PIr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  PIr.VEItemCode = afr;
  TrHs = true;
  while (LoopMain(PIr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (PIr.VEItemCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("PIVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(PIr);
      NewLine;
      UserTrace(PIr.VEItemCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseINVc(record RcVc RepSpec)
BEGIN
  record INVc INr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  INr.Code = afr;
  TrHs = true;
  while (LoopMain(INr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (INr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (INr.Terminated!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("INVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(INr);
      NewLine;
      UserTrace(INr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseITVc(record RcVc RepSpec)
BEGIN
  record ITVc ITr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,5);
  ato = LastInRange(RepSpec.f1,5);
  ITr.Code = afr;
  TrHs = true;
  while (LoopMain(ITr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (ITr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("ITVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(ITr);
      NewLine;
      UserTrace(ITr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseDocVc(record RcVc RepSpec)
BEGIN
  record DocVc Docr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  Docr.Code = afr;
  TrHs = true;
  while (LoopMain(Docr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Docr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("DocVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Docr);
      NewLine;
      UserTrace(Docr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseCUVc(record RcVc RepSpec,Boolean contactf)
BEGIN
  record CUVc CUr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  CUr.Code = afr;
  TrHs = true;
  while (LoopMain(CUr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (CUr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (CUr.blockedFlag!=0) then begin
        testf = false;
      end;
    end;   
    if (contactf) then begin
      if (HasModSL) then begin
        if (CUr.CUType!=0) then begin testf = false; end;    
      end;
      if (HasModPL) then begin
        if (CUr.VEType!=0) then begin testf = false; end;    
      end;
    end else begin
      if (IsStandardProduct==false) then begin
        if (CUr.CUType==0) then begin testf = false; end;    
      end;
    end;
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CUVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(CUr);
      NewLine;
      UserTrace(CUr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseCCatVc(record RcVc RepSpec)
BEGIN
  record CCatVc CCatr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  CCatr.Code = afr;
  TrHs = true;
  while (LoopMain(CCatr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (CCatr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CCatVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(CCatr);
      NewLine;
      UserTrace(CCatr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseVEVc(record RcVc RepSpec)
BEGIN
  record CUVc VEr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  VEr.Code = afr;
  TrHs = true;
  while (LoopMain(VEr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (VEr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (VEr.blockedFlag!=0) then begin
        testf = false;
      end;
    end;    
    if (VEr.VEType==0) then begin
      testf = false;
    end;
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CUVc");//cannot be VEVc in 4.1
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(VEr);
      NewLine;
      UserTrace(VEr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseUserVc(record RcVc RepSpec)
BEGIN
  record UserVc Userr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  Userr.Code = afr;
  TrHs = true;
  while (LoopMain(Userr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Userr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (Userr.TerminatedFlag!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("UserVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Userr);
      NewLine;
      UserTrace(Userr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBasePLVc(record RcVc RepSpec)
BEGIN
  record PLVc PLr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,5);
  ato = LastInRange(RepSpec.f1,5);
  PLr.PLCode = afr;
  TrHs = true;
  while (LoopMain(PLr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (PLr.PLCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("PLVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(PLr);
      NewLine;
      UserTrace(PLr.PLCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBasePLDefVc(record RcVc RepSpec)
BEGIN
  record PLDefVc PLDefr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,5);
  ato = LastInRange(RepSpec.f1,5);
  PLDefr.Code = afr;
  TrHs = true;
  while (LoopMain(PLDefr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (PLDefr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("PLDefVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(PLDefr);
      NewLine;
      UserTrace(PLDefr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBasePLQVc(record RcVc RepSpec)
BEGIN
  record PLQVc PLQr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,5);
  ato = LastInRange(RepSpec.f1,5);
  PLQr.PLCode = afr;
  TrHs = true;
  while (LoopMain(PLQr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (PLQr.PLCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("PLQVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(PLQr);
      NewLine;
      UserTrace(PLQr.PLCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseRecVc(record RcVc RepSpec)
BEGIN
  record RecVc Recr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  Recr.Code = afr;
  TrHs = true;
  while (LoopMain(Recr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Recr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("RecVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Recr);
      NewLine;
      UserTrace(Recr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;


global
procedure Exp2GBaseLocationVc(record RcVc RepSpec)
BEGIN
  record LocationVc Locationr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Locationr.Code = afr;
  TrHs = true;
  while (LoopMain(Locationr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Locationr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("LocationVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Locationr);
      NewLine;
      UserTrace(Locationr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBasePFormVc(record RcVc RepSpec)
BEGIN
  record PFormVc PFormr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  PFormr.Code = afr;
  TrHs = true;
  while (LoopMain(PFormr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (PFormr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("PFormVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(PFormr);
      NewLine;
      UserTrace(PFormr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure Exp2GBaseCommodityVc(record RcVc RepSpec)
BEGIN
  record CommodityVc Commodityr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,30);
  ato = LastInRange(RepSpec.f1,30);
  Commodityr.Number = afr;
  TrHs = true;
  while (LoopMain(Commodityr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Commodityr.Number>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CommodityVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Commodityr);
      NewLine;
      UserTrace(Commodityr.Number,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;
