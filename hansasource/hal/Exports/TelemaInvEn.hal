external procedure ExportXml(string);
external procedure ExportXmlNL(string);
external procedure ExportXmlTagOpen(string);
external procedure ExportXmlTagClose(string);
external procedure ExtractObjWithSeparator(string,string,Boolean,var Integer,var string);
external procedure AddVATBase(var record SMVc,string,val,val,Integer,Integer,Integer);
external procedure MulVATIV(string,val,var val,var val,Integer,Integer);
external function roundmode GetVATRoundModeRB();
external function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external function roundmode DefaultRoundMode();
external function val FindVAT(string,val,Integer,Integer);
external procedure GetPayDealText(string,string,var string);
external function string 255 ConvertXml(string);


function string 20 FindVATRate(record SMVc SMr,string vatcode)
begin
  row SMVc SMrw;
  Integer rwcnt,i;
  string 20 tstr;
  
  rwcnt = MatRowCnt(SMr);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    if (SMrw.VATCode==vatcode) then begin 
      tstr = SMrw.Comment;
      i = rwcnt;
    end;   
  end;
  FindVATRate = tstr;
  return;
end;

procedure SetupVATBaseTelema(var record SMVc SMr,var Integer vatcnt)
BEGIN
  row SMVc SMrw;
  Integer rwcnt,i;
  record VATCodeBlock VATr;
  row VATCodeBlock VATrw;
  
  BlockLoad(VATr);  
  rwcnt = MatRowCnt(VATr);
  for (i=0; i<rwcnt; i=i+1) begin
    MatRowGet(VATr,i,VATrw);
    SMrw.VATCode = VATrw.VATCode;
    SMrw.Comment = VATrw.ExVatpr;
    SMrw.DebVal = blankval;
    SMrw.CredVal = blankval;
    SMrw.CredVal2 = blankval;
    SMrw.CurDebVal = blankval;
    SMrw.FrRate = VATrw.Tax1Min;
    MatRowPut(SMr,i,SMrw);
  end;
  vatcnt = rwcnt;
  RETURN;
END;

procedure TelemaXMLExport(record RcVc RepSpec,record IVVc IVr)
begin 
  row IVVc IVrw;
  Integer i,rwcnt;
  record CYBlock CYBl;
  record BaseCurBlock BaseCurBl;
  record CUVc CUr;
  record ORVc ORr;
  row ORVc ORrw;
  record QTVc QTr;
  record SHVc SHr;
  record INVc INr;
  record UserVc Userr;
  record DepVc Depr;
  record SMVc VATr;
  row SMVc VATrw;
  Boolean userfound,orderfound,deliveryfound,orderrowfound;
  Integer pos,num;
  string 255 tstr,dep;
  Integer vatcnt;
  val vatv,t1;
  string 100 ourname1,ourname2;
  string 100 theirname1,theirname2;
  
  BlockLoad(CYBl);
  BlockLoad(BaseCurBl);
  
    
  RecordNew(VATr);
  SetupVATBaseTelema(VATr,vatcnt);  
  
  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    AddVATBase(VATr,IVrw.VATCode,IVrw.Sum,blankval,vatcnt,IVr.InclVAT,IVr.NoTAXonVAT);      
  end; 
  
  Userr.Code = IVr.SalesMan;
  userfound = ReadFirstMain(Userr,1,true);
  
  ExportXmlNL("<?xml version=""1.0"" encoding=""UTF-8""?>");
  ExportXmlTagOpen("<E-Document>");
  ExportXmlTagOpen("<Header>");
  if (RepSpec.ArtMode==0) then begin
    tstr = "yes";
  end else begin
    tstr = "no";
  end;
  ExportXmlNL("<Test>" & tstr & "</Test>");
  ExportXmlNL("<DateIssued></DateIssued>");
  ExportXmlNL("<Charset>UTF-8</Charset>");
  
  if (nonblank(CYBl.ANACode)) then begin 
    ExportXmlNL("<SenderGLN>" & ConvertXml(CYBl.ANACode) & "</SenderGLN>");
  end else begin 
    ExportXmlNL("<SenderID>" & ConvertXml(CYBl.OrgNr) & "</SenderID>");
  end;  
  
  CUr.Code = IVr.CustCode;
  ReadFirstMain(CUr,1,true);
  
  if (nonblank(CUr.ANACode)) then begin 
    ExportXmlNL("<ReceiverGLN>" & ConvertXml(CUr.ANACode) & "</ReceiverGLN>");
  end else begin
    ExportXmlNL("<ReceiverID>" & ConvertXml(CUr.RegNr1) & "</ReceiverID>");
  end;
  
  ExportXmlTagClose("</Header>");
  ExportXmlTagOpen("<Document>");
  ExportXmlNL("<DocumentType>invoice</DocumentType>");
  ExportXmlNL("<DocumentFunction>original</DocumentFunction>");
  
  ExportXmlTagOpen("<DocumentParties>");
  ExportXmlTagOpen("<BuyerParty>");
  ExportXmlNL("<PartyCode>" & ConvertXml(CUr.Code) & "</PartyCode>");
  ExportXmlNL("<Name>" & ConvertXml(CUr.Name) & "</Name>");
  ExportXmlNL("<DepID>" & ConvertXml(CUr.Department) & "</DepID>");
  ExportXmlNL("<RegNum>" & ConvertXml(CUr.RegNr1) & "</RegNum>");
  
  if (nonblank(CUr.ANACode)) then begin
    ExportXmlNL("<GLN>" & ConvertXml(CUr.ANACode) & "</GLN>");
  end;
  
  ExportXmlTagOpen("<ContactData>");
  
  theirname1 = "";
  theirname2 = "";
  
  if (userfound) then begin 
    ExtractObjWithSeparator(" ",IVr.ClientContact,true,pos,theirname2);
    ExtractObjWithSeparator(" ",IVr.ClientContact,true,pos,theirname2);
    theirname1 = Left(IVr.ClientContact,Len(IVr.ClientContact) - Len(theirname2) - 1);
  end; 
  
  ExportXmlNL("<ContactFirstName>" & ConvertXml(theirname1) & "</ContactFirstName>");
  ExportXmlNL("<ContactLastName>" & ConvertXml(theirname2) & "</ContactLastName>");
  ExportXmlNL("<ContactPersonCode></ContactPersonCode>");
  ExportXmlNL("<PhoneNum>" & ConvertXml(IVr.Phone) & "</PhoneNum>");
  ExportXmlNL("<FaxNum>" & ConvertXml(IVr.Fax) & "</FaxNum>");
  ExportXmlNL("<MobileNum>" & ConvertXml(CUr.Mobile) & "</MobileNum>");
  ExportXmlNL("<URL>" & ConvertXml(CUr.wwwAddr) & "</URL>");
  ExportXmlNL("<EmailAddress>" & ConvertXml(CUr.eMail) & "</EmailAddress>");
  
  ExportXmlTagOpen("<ActualAddress>");
  ExportXmlNL("<Address1>" & ConvertXml(IVr.Addr1) & "</Address1>");
  ExportXmlNL("<Address2>" & ConvertXml(IVr.Addr2) & "</Address2>");
  ExportXmlNL("<PostalCode>" & ConvertXml(IVr.Addr3) & "</PostalCode>");
  ExportXmlNL("<Country>" & ConvertXml(IVr.InvAddr3) & "</Country>");
  ExportXmlNL("<CountryCode>" & ConvertXml(CUr.CountryCode) & "</CountryCode>");
  ExportXmlTagClose("</ActualAddress>");
  ExportXmlTagClose("</ContactData>");
  ExportXmlTagClose("</BuyerParty>");
  
  ExportXmlTagOpen("<SellerParty>");
  ExportXmlNL("<PartyCode>" & ConvertXml(CYBl.OrgNr) & "</PartyCode>");
  ExportXmlNL("<Name>" & ConvertXml(CYBl.CompName) & "</Name>");
  
  dep = "";
  if (userfound) then begin 
    Depr.Code = Userr.Department;
    if (ReadFirstMain(Depr,1,true)) then begin 
      dep = Depr.Description;
    end;
  end;
  
  ExportXmlNL("<DepID>" & ConvertXml(dep) & "</DepID>");
  ExportXmlNL("<RegNum>" & ConvertXml(CYBl.OrgNr) & "</RegNum>");
  if (nonblank(CYBl.ANACode)) then begin
    ExportXmlNL("<GLN>" & ConvertXml(CYBl.ANACode) & "</GLN>");
  end;
  ExportXmlTagOpen("<ContactData>");
  
  ourname1 = "";
  ourname2 = "";
  if (userfound) then begin 
    ExtractObjWithSeparator(" ",Userr.Name,true,pos,ourname2);
    ExtractObjWithSeparator(" ",Userr.Name,true,pos,ourname2);
    ourname1 = Left(Userr.Name,Len(Userr.Name)-Len(ourname2)-1);
  end;  
  ExportXmlNL("<ContactFirstName>" & ConvertXml(ourname1) & "</ContactFirstName>");
  ExportXmlNL("<ContactLastName>" & ConvertXml(ourname2) & "</ContactLastName>");
  ExportXmlNL("<ContactPersonCode>" & ConvertXml(IVr.SalesMan) & "</ContactPersonCode>");
  
  if (userfound) then begin
    ExportXmlNL("<PhoneNum>" & ConvertXml(Userr.Phone1) & "</PhoneNum>");
  end;
  ExportXmlNL("<FaxNum>" & ConvertXml(CYBl.Fax) & "</FaxNum>");
  if (userfound) then begin
    ExportXmlNL("<PhoneNum>" & ConvertXml(Userr.Phone2) & "</PhoneNum>");
  end;
  
  ExportXmlNL("<URL>" & ConvertXml(CYBl.wwwAddr) & "</URL>");
  if (userfound) then begin
    tstr = Userr.emailAddr;
  end else begin
    tstr = "";
  end;
  ExportXmlNL("<EmailAddress>" & ConvertXml(tstr) & "</EmailAddress>");
  
  ExportXmlTagOpen("<ActualAddress>");
  ExportXmlNL("<Address1>" & ConvertXml(CYBl.Addr0) & "</Address1>");
  ExportXmlNL("<Address2>" & ConvertXml(CYBl.Addr1) & "</Address2>");
  ExportXmlNL("<PostalCode>" & ConvertXml(CYBl.Addr2) & "</PostalCode>");
  ExportXmlNL("<County>" & ConvertXml(CYBl.Addr3) & "</County>");
  ExportXmlNL("<CountryCode>" & ConvertXml(CYBl.CountryCode) & "</CountryCode>");
  ExportXmlTagClose("</ActualAddress>");
  ExportXmlTagClose("</ContactData>");
  ExportXmlTagClose("</SellerParty>");
  ExportXmlTagOpen("<DeliveryParty>");
  ExportXmlNL("<PartyCode>" & ConvertXml(CUr.Code) & "</PartyCode>");
  ExportXmlNL("<DepID>" & ConvertXml(CUr.Department) & "</DepID>");
  ExportXmlNL("<RegNum>" & ConvertXml(CUr.RegNr1) & "</RegNum>");
  if (nonblank(CYBl.ANACode)) then begin
    ExportXmlNL("<GLN>" & ConvertXml(CUr.ANACode) & "</GLN>");
  end;
  ExportXmlTagOpen("<ContactData>");
  ExportXmlNL("<ContactFirstName>" & ConvertXml(theirname1) & "</ContactFirstName>");
  ExportXmlNL("<ContactLastName>" & ConvertXml(theirname2) & "</ContactLastName>");
  ExportXmlNL("<ContactPersonCode></ContactPersonCode>");  
  ExportXmlNL("<PhoneNum>" & ConvertXml(IVr.Phone) & "</PhoneNum>");
  ExportXmlNL("<FaxNum>" & ConvertXml(IVr.Fax) & "</FaxNum>");
  ExportXmlNL("<MobileNum>" & ConvertXml(CUr.Mobile) & "</MobileNum>");
  ExportXmlNL("<URL>" & ConvertXml(CUr.wwwAddr) & "</URL>");
  ExportXmlNL("<EmailAddress>" & ConvertXml(CUr.eMail) & "</EmailAddress>");
  ExportXmlTagOpen("<ActualAddress>");
  ExportXmlNL("<Address1>" & ConvertXml(IVr.ShipAddr0) & "</Address1>");
  ExportXmlNL("<Address2>" & ConvertXml(IVr.ShipAddr1) & "</Address2>");
  ExportXmlNL("<PostalCode>" & ConvertXml(IVr.ShipAddr2) & "</PostalCode>");
  ExportXmlNL("<County>" & ConvertXml(IVr.ShipAddr3) & "</County>");
  ExportXmlNL("<CountryCode>" & ConvertXml(IVr.DelAddr3) & "</CountryCode>");
  ExportXmlTagClose("</ActualAddress>");
  ExportXmlTagClose("</ContactData>");
  ExportXmlTagClose("</DeliveryParty>");
  ExportXmlTagClose("</DocumentParties>");

  ExportXmlTagOpen("<DocumentInfo>");
  ExportXmlNL("<DocumentNum>" & IVr.SerNr & "</DocumentNum>");
  GetPayDealText(IVr.PayDeal,IVr.LangCode,tstr);
  ExportXmlNL("<PaymentTerm>" & ConvertXml(tstr) & "</PaymentTerm>");
  ExportXmlTagOpen("<DateInfo>");
  
  tstr = "";
  if (IVr.OrderNr<>-1) then begin 
    ORr.SerNr = IVr.OrderNr;
    if (ReadFirstMain(ORr,1,true)) then begin 
      tstr = ORr.OrdDate;
      orderfound = true;
    end;
  end;  
  ExportXmlNL("<OrderDate>" & tstr & "</OrderDate>");
  
  tstr = "";
  if (IVr.OrderNr<>-1) then begin 
    QTr.SerNr = IVr.QTNr;
    if ReadFirstMain(QTr,1,true) then begin 
      tstr = QTr.QTDate;
    end;
  end;      
  ExportXmlNL("<OfferDate>" & tstr & "</OfferDate>");
  
  ExportXmlNL("<IssueDate>" & IVr.InvDate & "</IssueDate>");
  ExportXmlNL("<InvoiceDate>" & IVr.InvDate & "</InvoiceDate>");
  ExportXmlNL("<DueDate>" & IVr.PayDate & "</DueDate>");
  
  tstr = "";
  if (orderfound) then begin 
    tstr = ORr.PlanShip;
  end;
  ExportXmlNL("<DeliveryDateRequested>" & tstr & "</DeliveryDateRequested>");
  
  tstr = "";
  if (orderfound) then begin 
    SHr.OrderNr = ORr.SerNr;
    if ReadFirstKey("OrderKey",SHr,1,true) then begin
      tstr = SHr.ShipDate;
    end;
  end;
  ExportXmlNL("<DeliveryDateActual>" & tstr & "</DeliveryDateActual>");
  
  ExportXmlTagOpen("<Period>");
  ExportXmlNL("<StartDate>" & "" & "</StartDate>");
  ExportXmlNL("<EndDate>" & "" & "</EndDate>");
  ExportXmlTagClose("</Period>");
  
  ExportXmlTagClose("</DateInfo>");
  
  ExportXmlTagOpen("<RefInfo>");
  ExportXmlNL("<PaymentRefNum>" & ConvertXml(IVr.RefStr) & "</PaymentRefNum>");
  ExportXmlNL("<SourceDocument>" & "" & "</SourceDocument>");
  ExportXmlTagClose("</RefInfo>");
  ExportXmlTagClose("</DocumentInfo>");
  
  ExportXmlTagOpen("<DocumentSumGroup>");
  
  tstr = IVr.CurncyCode;
  if blank(tstr) then begin 
    tstr = BaseCurBl.BaseCur1;
  end;
  ExportXmlNL("<Currency>" & ConvertXml(tstr) & "</Currency>");
  
  ExportXmlNL("<DocumentSum>" & IVr.Sum1 & "</DocumentSum>");
  
  for (i=0;i<vatcnt;i=i+1) begin
    MatRowGet(VATr,i,VATrw); 
    MulVATIV(VATrw.VATCode,VATrw.DebVal,vatv,t1,IVr.InclVAT,IVr.NoTAXonVAT);
    if (vatv!=0) then begin
      vatv = Round(vatv,GetVATRoundModeRB); 
      ExportXmlNL("<VATRate>" & ConvertXml(VATrw.Comment) & "</VATRate>");
      ExportXmlNL("<VATSum>" & vatv & "</VATSum>");
    end;
  end;  
  
  ExportXmlNL("<TotalSum>" & IVr.Sum4 & "</TotalSum>");
  ExportXmlTagClose("</DocumentSumGroup>");

  ExportXmlTagOpen("<DocumentItem>");
  ExportXmlTagOpen("<ItemEntry>");
  rwcnt = MatRowCnt(IVr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVr,i,IVrw);
    num = num + 1;
    ExportXmlNL("<LineItemNum>" & num & "</LineItemNum>");
    ExportXmlNL("<ItemDescription>" & ConvertXml(IVrw.Spec) & "</ItemDescription>");
    ExportXmlNL("<SellerItemCode>" & ConvertXml(IVrw.ArtCode) & "</SellerItemCode>");
    tstr = "";
    if (ReadFirstItem(IVrw.ArtCode,INr,true,true)) then begin
      tstr = INr.EUCodex;
    end;
    ExportXmlNL("<GTIN>" & ConvertXml(tstr) & "</GTIN>");
    ExportXmlNL("<AlternateGTIN></AlternateGTIN>");
    ExportXmlNL("<BuyerItemCode></BuyerItemCode>");
    ExportXmlNL("<SerialNum>" & ConvertXml(IVrw.SerialNr) & "</SerialNum>");
    ExportXmlTagOpen("<ItemUnitRecord>");
    ExportXmlNL("<ItemUnit>" & ConvertXml(IVrw.UnitCode) & "</ItemUnit>");
    ExportXmlTagClose("</ItemUnitRecord>");
    ExportXmlNL("<BaseUnit></BaseUnit>");
    ExportXmlNL("<ItemBasePrice>" & IVrw.Price & "</ItemBasePrice>");
    t1 = Round(IVrw.Sum/IVrw.Quant,DefaultRoundMode);
    ExportXmlNL("<ItemPrice>" & t1 & "</ItemPrice>");
    tstr = "";
    orderrowfound = false;
    if (orderfound) then begin 
      if (IVrw.OrdRow>=0) then begin 
        MatRowGet(ORr,IVrw.OrdRow,ORrw);
        tstr = ORrw.Quant;
        orderrowfound = true;
      end;
    end;
    ExportXmlNL("<AmountOrdered>" & tstr & "</AmountOrdered>");
    //ExportXmlNL("AmountOffered",???,4);
    ExportXmlNL("<AmountInvoiced>" & IVrw.Quant & "</AmountInvoiced>");
    tstr = "";
    if (orderrowfound) then begin 
      tstr = ORrw.Shipd1;
    end;
    ExportXmlNL("<AmountActual>" & tstr & "</AmountActual>");
    ExportXmlNL("<ItemSum>" & IVrw.Sum & "</ItemSum>");
    tstr =  FindVATRate(VATr,IVrw.VATCode);
    ExportXmlTagOpen("<VAT>");
    ExportXmlNL("<VATRate>" & tstr & "</VATRate>");
    t1 = FindVAT(IVrw.VATCode,IVrw.Sum,IVr.InclVAT,IVr.NoTAXonVAT);
    ExportXmlNL("<VATSum>" & t1 & "</VATSum>");
    ExportXmlTagClose("</VAT>");
    if (IVr.InclVAT>0) then begin
      t1 = IVrw.Sum;
    end else begin  
      t1 = IVrw.Sum + t1;
    end;  
    ExportXmlNL("<ItemTotal>" & t1 & "</ItemTotal>");
  end;  
  
  ExportXmlTagClose("</ItemEntry>");
  ExportXmlTagClose("</DocumentItem>");
  
  ExportXmlTagOpen("<RefInfo>");
  ExportXmlNL("<PaymentRefNum>" & ConvertXml(IVr.RefStr) & "</PaymentRefNum>");
  ExportXmlTagClose("</RefInfo>");
  ExportXmlTagClose("</Document>");
  
  ExportXmlTagOpen("<Footer>");
  ExportXmlNL("<TotalNumDocuments>1</TotalNumDocuments>");
  ExportXmlNL("<TotalAmount>" & IVr.Sum4 & "</TotalAmount>");
  ExportXmlNL("<Signature></Signature>");
  ExportXmlTagClose("</Footer>");
  
  ExportXmlTagClose("</E-Document>");
  
  return;
end;  

global
procedure TelemaInvEn(record RcVc RepSpec)
begin 
  record IVVc IVr;
  
  if (RepSpec.long1!=-1) then begin
    IVr.SerNr = RepSpec.long1;
    if ReadFirstMain(IVr,1,true) then begin
      TelemaXMLExport(RepSpec,IVr);
    end;
  end;
  
  return;
end;
