external function Boolean GetNextCustNr(var string);

external procedure OutRegisterTag(string);

global
procedure BPCUEn(record RcVc RepSpec)
begin
  record CUVc CUr;
  Boolean found,first;
  string 255 ckey;
  
  first = true;
  found = true;
  if (nonblank(RepSpec.f1)) then begin
    ckey = "Code:" & RepSpec.f1;
  end else begin
    ckey = "Code";
  end;
  while (LoopKey(ckey,CUr,1,found)) begin
    if (found) then begin
      if (first==true) then begin
        ExportFormat;
        first = false;
      end;
      ExportString("BPhoneCUVc");
      NewLine;

      ExportRecord(CUr);
      NewLine;
      NewLine;
    end;
  end;
  return;
end;

global
updating procedure ReadImportTagBPhoneCUVc()
begin
  record MailVc Mailr;
  
  record UserVc Userr;
  record CUVc CUr;
  record CUVc curCUr;
  Integer action;
  Boolean found;
  string 255 tstr;
  
  while (NextImportLine(false)) begin
    action = 0;
    found = false;
    RecordNew(CUr);
    ImportOneRecord(CUr,"cu3");
    if (nonblank(CUr.Code)) then begin
      if (nonblank(CUr.SkypeName)) then begin
        curCUr.SkypeName = CUr.SkypeName;
        if (ReadFirstKey("SkypeName",curCUr,1,true)) then begin
          goto LSKIP;
        end;
      end;
      if (nonblank(CUr.VATNr)) then begin
        curCUr.VATNr = CUr.VATNr;
        if (ReadFirstKey("VATNr",curCUr,1,true)) then begin
          goto LSKIP;
        end;
      end;

      Userr.Code = CUr.SalesMan;
      if (ReadFirstMain(Userr,1,true)) then begin
        CUr.SalesMan = "";
      end;
      
      curCUr.Code = CUr.Code;
      if (ReadFirstMain(curCUr,1,true)) then begin
        action = 1;
        found = true;
      end;
      
      switch (action) begin
        case 1:
          if (GetNextCustNr(tstr)) then begin end;
          CUr.Code = tstr;
      end;
      if (RecordImportStore(CUr,false)) then begin end;        
LSKIP:;      
    end;
  end;    
  
  return;
end;
