external procedure FinnishBankVal(var string,val);

procedure ExportIceInv(record RcVc RepSpec,record IVVc IVp,record FactoringBlock factp)
BEGIN
  string 255 tstr;
  record CYBlock CompYear;
  record CUVc CUr;
  
  CUr.Code = IVp.CustCode;
  if (ReadFirstMain(CUr,1,true)==false) then begin
    goto LExportIceInv;
  end;  
  BlockLoad(CompYear);  
  if (factp.Bank==9) then begin  // LI 
  end;
  if (factp.Bank==10) then begin  // LB
  end;
  if (factp.Bank==11) then begin  // BI
    ExportPadString(CompYear.Bank2,6," ",false); 
    ExportPadString("",6,"0",false); 
    ExportPadString("",3,"0",false); 
    tstr = StripNonDigits(CompYear.OrgNr);          
    ExportPadString(tstr,10," ",false);
    ExportPadString("001",3,"0",true);  
    tstr = StripNonDigits(CUr.RegNr1);          
    ExportPadString(tstr,10," ",false);
    ExportPadString("001",3,"0",true);  
    tstr = DateToString(IVp.PayDate,"DDMMYY");
    ExportPadString(tstr,6," ",false);
    tstr = DateToString(IVp.PayDate,"DDMMYY");
    ExportPadString(tstr,6," ",false);
    ExportPadString("",1," ",false);
    ExportPadString("",11,"0",false);
    ExportPadString(IVp.SerNr,7,"0",true);
    ExportPadString("J",1," ",false);
    ExportPadString("",3," ",false);
    ExportPadString("",3," ",false);
    ExportPadString("",6,"0",false);
    ExportPadString("",11,"0",false);
    ExportPadString("",3,"0",false);
    ExportPadString("",2,"0",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",3," ",false);
    ExportPadString(CUr.Comment,50," ",false);
    ExportPadString(" ",3," ",false);
    FinnishBankVal(tstr,IVp.Sum4);
    ExportPadString(tstr,11,"0",true);
    ExportPadString("01",2," ",false);
    NewLine;
  end;
  if (factp.Bank==11) then begin
  end;
LExportIceInv:;
  RETURN;
END;

global
procedure ExportInvFactIce(record RcVc RepSpec,var record FactoringBlock factp)
BEGIN
  record IVVc IVr;
  Boolean TrHs;
  string 20 fromcust,tocust;
  Boolean testf;
  Integer bnr;
  Integer cnt;
  val bsum,credsum;
  Boolean exported;

  bnr = 1;
  cnt = 0;
  if (SetExportCodepage("CP437")==false) then begin
    LogText(0,"Failed to set codepage CP437");
  end;
  RepSpec.long1 = FirstInRange(RepSpec.f1,10);
  RepSpec.long2 = LastInRange(RepSpec.f1,10);
  fromcust = FirstInRange(RepSpec.f2,20);
  tocust = LastInRange(RepSpec.f2,20);  
  IVr.SerNr = RepSpec.long1;
  IVr.InvDate = RepSpec.sStartDate;
  TrHs = true;
  while (LoopKey("InvDate",IVr,2,TrHs)) begin
    if (IVr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;  
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f1)) then begin
        if (IVr.SerNr>RepSpec.long2) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.f1)) then begin
        if (IVr.SerNr<RepSpec.long1) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.f2)) then begin
        if ((IVr.CustCode<fromcust) or (IVr.CustCode>tocust)) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.ObjStr)) then begin
        if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.CurncyCode)) then begin
        if (IVr.CurncyCode!=RepSpec.CurncyCode) then begin testf = false; end;
      end;  
      if (testf) then begin
        ExportIceInv(RepSpec,IVr,factp);
        UserTrace(IVr.SerNr,M4Long);
        exported = true;
      end;
    end;
  end;
  if (exported) then begin
    factp.LastSerNr = factp.LastSerNr + 1;
    factp.LastDate = CurrentDate;
  end;
  RETURN;
END;