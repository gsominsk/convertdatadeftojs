external procedure ExpBackupString(string);
external procedure Exp2GBaseINVc(record RcVc);
external procedure Exp2GBaseITVc(record RcVc);
external procedure Exp2GBaseDocVc(record RcVc);
external procedure Exp2GBaseCUVc(record RcVc,Boolean);
external procedure Exp2GBaseCCatVc(record RcVc);
external procedure Exp2GBaseVEVc(record RcVc);
external procedure Exp2GBaseUserVc(record RcVc);
external procedure Exp2GBasePLVc(record RcVc);
external procedure Exp2GBasePLDefVc(record RcVc);
external procedure Exp2GBaseRecVc(record RcVc);
external function Boolean IsOffice(Boolean);

procedure Exp2GBaseStyleVc(record RcVc RepSpec)
BEGIN
  record StyleVc Styler;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Styler.Code = afr;
  TrHs = true;
  while (LoopMain(Styler,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Styler.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("StyleVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Styler);
      NewLine;
      UserTrace(Styler.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseLTxtVc(record RcVc RepSpec)
BEGIN
  record LTxtVc LTxtr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  LTxtr.Code = afr;
  TrHs = true;
  while (LoopMain(LTxtr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (LTxtr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("LTxtVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(LTxtr);
      NewLine;
      UserTrace(LTxtr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseCuAccVc(record RcVc RepSpec)
BEGIN
  record CuAccVc CuAccr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  CuAccr.Code = afr;
  TrHs = true;
  while (LoopMain(CuAccr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (CuAccr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (CuAccr.Closed!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CuAccVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(CuAccr);
      NewLine;
      UserTrace(CuAccr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseResVc(record RcVc RepSpec)
BEGIN
  record ResVc Resr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Resr.Code = afr;
  TrHs = true;
  while (LoopMain(Resr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Resr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (Resr.Terminated!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("ResVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Resr);
      NewLine;
      UserTrace(Resr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseObjVc(record RcVc RepSpec)
BEGIN
  record ObjVc Objr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Objr.Code = afr;
  TrHs = true;
  while (LoopMain(Objr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Objr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (Objr.TerminateFlag!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("ObjVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Objr);
      NewLine;
      UserTrace(Objr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBasePRVc(record RcVc RepSpec)
BEGIN
  record PRVc PRr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  PRr.Code = afr;
  TrHs = true;
  while (LoopMain(PRr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (PRr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (PRr.Terminated!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("PRVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(PRr);
      NewLine;
      UserTrace(PRr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseIRVc(record RcVc RepSpec)
BEGIN
  record IRVc IRr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  IRr.Code = afr;
  TrHs = true;
  while (LoopMain(IRr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (IRr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("IRVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(IRr);
      NewLine;
      UserTrace(IRr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseDepVc(record RcVc RepSpec)
BEGIN
  record DepVc Depr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Depr.Code = afr;
  TrHs = true;
  while (LoopMain(Depr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Depr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("DepVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Depr);
      NewLine;
      UserTrace(Depr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseOTVc(record RcVc RepSpec)
BEGIN
  record OTVc OTr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  OTr.Code = afr;
  TrHs = true;
  while (LoopMain(OTr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (OTr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (OTr.TerminateFlag!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("OTVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(OTr);
      NewLine;
      UserTrace(OTr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseContactVc(record RcVc RepSpec)
BEGIN
  record ContactVc Contactr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Contactr.Name = afr;
  TrHs = true;
  while (LoopMain(Contactr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Contactr.Name>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (Contactr.Closed!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("ContactVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Contactr);
      NewLine;
      UserTrace(Contactr.Name,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseAT2UnitVc(record RcVc RepSpec)
BEGIN
  record AT2UnitVc AT2Unitr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  AT2Unitr.InventoryNr = afr;
  TrHs = true;
  while (LoopMain(AT2Unitr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (AT2Unitr.InventoryNr>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (AT2Unitr.Activef!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("AT2UnitVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(AT2Unitr);
      NewLine;
      UserTrace(AT2Unitr.InventoryNr,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseBankVc(record RcVc RepSpec)
BEGIN
  record BankVc Bankr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Bankr.Code = afr;
  TrHs = true;
  while (LoopMain(Bankr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Bankr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("BankVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Bankr);
      NewLine;
      UserTrace(Bankr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseBaseERVc(record RcVc RepSpec)
BEGIN
  record BaseERVc BaseERr;
  Boolean first,TrHs,testf;
  string 255 tstr;

  first = true;
  TrHs = true;
  while (LoopMain(BaseERr,1,TrHs)) begin
    if (TrHs) then begin
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("BaseERVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(BaseERr);
      NewLine;
      UserTrace(BaseERr.Date,M4Date);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseCurncyCodeVc(record RcVc RepSpec)
BEGIN
  record CurncyCodeVc CurncyCoder;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  CurncyCoder.CurncyCode = afr;
  TrHs = true;
  while (LoopMain(CurncyCoder,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (CurncyCoder.CurncyCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CurncyCodeVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(CurncyCoder);
      NewLine;
      UserTrace(CurncyCoder.CurncyCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseERVc(record RcVc RepSpec)
BEGIN
  record ERVc ERr;
  Boolean first,TrHs,testf;
  string 255 tstr;

  first = true;
  TrHs = true;
  while (LoopMain(ERr,1,TrHs)) begin
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("ERVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(ERr);
      NewLine;
      UserTrace(ERr.Date,M4Date);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;


procedure Exp2GBaseLangNrVc(record RcVc RepSpec)
BEGIN
  record LangNrVc LangNrr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  LangNrr.LangCode = afr;
  TrHs = true;
  while (LoopMain(LangNrr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (LangNrr.LangCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("LangNrVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(LangNrr);
      NewLine;
      UserTrace(LangNrr.LangCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;
/*
procedure Exp2GBaseEmplVc(record RcVc RepSpec)
BEGIN
  record EmplVc Emplr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  Emplr.PerCode = afr;
  TrHs = true;
  while (LoopMain(Emplr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (Emplr.PerCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
      if (Emplr.Inactive!=0) then begin
        testf = false;
      end;
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("EmplVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(Emplr);
      NewLine;
      UserTrace(Emplr.PerCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseCPayVc(record RcVc RepSpec)
BEGIN
  record CPayVc CPayr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  CPayr.PayCode = afr;
  TrHs = true;
  while (LoopMain(CPayr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (CPayr.PayCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CPayVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(CPayr);
      NewLine;
      UserTrace(CPayr.PayCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;
*/

procedure Exp2GBaseCalcFormVc(record RcVc RepSpec)
BEGIN
  record CalcFormVc CalcFormr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  CalcFormr.PayCode = afr;
  TrHs = true;
  while (LoopMain(CalcFormr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (CalcFormr.PayCode>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("CalcFormVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(CalcFormr);
      NewLine;
      UserTrace(CalcFormr.PayCode,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseDprModVc(record RcVc RepSpec)
BEGIN
  record DprModVc DprModr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  DprModr.Code = afr;
  TrHs = true;
  while (LoopMain(DprModr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (DprModr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("DprModVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(DprModr);
      NewLine;
      UserTrace(DprModr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

procedure Exp2GBaseAutSimPerVc(record RcVc RepSpec)
BEGIN
  record AutSimPerVc AutSimPerr;
  Boolean first,TrHs,testf;
  string 255 tstr;
  string 255 afr,ato;

  first = true;
  afr = FirstInRange(RepSpec.f1,10);
  ato = LastInRange(RepSpec.f1,10);
  AutSimPerr.Code = afr;
  TrHs = true;
  while (LoopMain(AutSimPerr,1,TrHs)) begin
    if (TrHs) then begin
      if (nonblank(ato)) then begin
        if (AutSimPerr.Code>ato) then begin
          TrHs = false;
        end;
      end;    
    end;
    testf = true;
    if (TrHs==false) then begin testf = false; end;
    if (RepSpec.ArtMode==1) then begin
    end;    
    if (testf) then begin
      if (first==true) then begin
        tstr = GetRegisterTag("AutSimPerVc");
        ExportString(tstr);
        NewLine;
        first = false;
      end;
      ExportRecord(AutSimPerr);
      NewLine;
      UserTrace(AutSimPerr.Code,M4Str);
    end;
  end;
  if (first==false) then begin
    NewLine;
    NewLine;
  end;
  RETURN;
END;

global
procedure GBaseEn(record RcVc RepSpec)
BEGIN  
  transaction LongInt jarek;
  LongInt l;

  ExportFormat;
  ExpBackupString(RepSpec.f3);

  if (IsOffice(true)) then begin
    if (RepSpec.flags[0]!=0) then begin Exp2GBaseINVc(RepSpec); end;
    if (RepSpec.flags[1]!=0) then begin Exp2GBaseITVc(RepSpec); end;
    if (RepSpec.flags[2]!=0) then begin Exp2GBaseDocVc(RepSpec); end;
    if (RepSpec.flags[4]!=0) then begin Exp2GBaseCUVc(RepSpec,false); end;
    if (RepSpec.flags[5]!=0) then begin Exp2GBaseCCatVc(RepSpec); end;
    if (RepSpec.flags[8]!=0) then begin Exp2GBaseVEVc(RepSpec); end;
    if (RepSpec.flags[10]!=0) then begin Exp2GBaseUserVc(RepSpec); end;
    if (RepSpec.flags[14]!=0) then begin Exp2GBaseStyleVc(RepSpec); end;
    if (RepSpec.flags[15]!=0) then begin Exp2GBasePLDefVc(RepSpec); end;
    if (RepSpec.flags[17]!=0) then begin Exp2GBasePLVc(RepSpec); end;
    if (RepSpec.flags[22]!=0) then begin Exp2GBaseLTxtVc(RepSpec); end;
  end else begin
    if (RepSpec.flags[2]!=0) then begin Exp2GBaseDocVc(RepSpec); end;
    if (RepSpec.flags[4]!=0) then begin Exp2GBaseCUVc(RepSpec,false); end;
    if (RepSpec.flags[5]!=0) then begin Exp2GBaseCCatVc(RepSpec); end;
    if (RepSpec.flags[6]!=0) then begin Exp2GBaseCuAccVc(RepSpec); end;
    if (RepSpec.flags[7]!=0) then begin Exp2GBaseResVc(RepSpec); end;
    if (RepSpec.flags[8]!=0) then begin Exp2GBaseVEVc(RepSpec); end;
    if (RepSpec.flags[9]!=0) then begin Exp2GBaseObjVc(RepSpec); end;
    if (RepSpec.flags[10]!=0) then begin Exp2GBaseUserVc(RepSpec); end;
    if (RepSpec.flags[11]!=0) then begin Exp2GBasePRVc(RepSpec); end;
    if (RepSpec.flags[12]!=0) then begin Exp2GBaseRecVc(RepSpec); end;
    if (RepSpec.flags[13]!=0) then begin Exp2GBaseIRVc(RepSpec); end;
    if (RepSpec.flags[14]!=0) then begin Exp2GBaseStyleVc(RepSpec); end;
    if (RepSpec.flags[15]!=0) then begin Exp2GBaseDepVc(RepSpec); end;
    if (RepSpec.flags[16]!=0) then begin Exp2GBaseOTVc(RepSpec); end;
    if (RepSpec.flags[17]!=0) then begin Exp2GBaseCUVc(RepSpec,true) end; //Exp2GBaseContactVc(RepSpec); end;
    if (RepSpec.flags[21]!=0) then begin Exp2GBaseAT2UnitVc(RepSpec); end;
    if (RepSpec.flags[22]!=0) then begin Exp2GBaseLTxtVc(RepSpec); end;
    if (RepSpec.flags[23]!=0) then begin Exp2GBaseBankVc(RepSpec); end;
    if (RepSpec.flags[25]!=0) then begin
      Exp2GBaseBaseERVc(RepSpec);
      Exp2GBaseCurncyCodeVc(RepSpec);
      Exp2GBaseERVc(RepSpec);
      BlockExport("BaseCurBlock");
    end;
    if (RepSpec.flags[26]!=0) then begin Exp2GBaseLangNrVc(RepSpec); end;
//    if (RepSpec.flags[27]!=0) then begin Exp2GBaseEmplVc(RepSpec); end;
    if (RepSpec.flags[28]!=0) then begin Exp2GBaseCalcFormVc(RepSpec); end;
    if (RepSpec.flags[29]!=0) then begin Exp2GBaseDprModVc(RepSpec); end;
    if (RepSpec.SimVerf!=0) then begin Exp2GBaseAutSimPerVc(RepSpec); end;
  end;
  RETURN;
END;
