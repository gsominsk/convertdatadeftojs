#ifdef HAL

external procedure GetDepName(string,var string);

procedure ExportTakeRecord(record ATVc ATr,var LongInt takenr)
BEGIN
  ExportString("AT2TakeVc");
  NewLine;
//  ExportLongInt(NextSerNr("AT2TakeVc",ATr.StockDate,-1,false,""));
  ExportLongInt(takenr);
  takenr = takenr + 1;
  ExportDate(ATr.StockDate);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportLongInt(2);
  ExportString("");
  ExportString("");
  NewLine;
  ExportString("");
  ExportString(ATr.Description);
  ExportString(ATr.Code);    
  ExportString("");
  ExportLongInt(0);
  ExportString("");
  ExportVal(1,M4Qty);
  NewLine;
  NewLine;
  RETURN;
END;

procedure ExportWrofRecord(record ATVc ATr,var LongInt wrofnr)
BEGIN
  ExportString("AT2WrofVc");
  NewLine;
//  ExportLongInt(NextSerNr("AT2WrofVc",ATr.EndDate,-1,false,""));
  ExportLongInt(wrofnr);
  wrofnr = wrofnr + 1;
  ExportDate(ATr.EndDate);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportLongInt(1);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  NewLine;
  ExportString("");
  ExportString(ATr.Description);
  ExportString(ATr.Code);
  ExportString("");
  ExportString(ATr.Objects);
  ExportVal(ATr.SalesVal,M4Val);
  ExportVal(1,M4Qty);
  ExportString("");  
  NewLine;
  NewLine;
  RETURN;
END;

procedure ExportSalesRecord(record ATVc ATr,var LongInt wrofnr)
BEGIN
  ExportString("AT2WrofVc");
  NewLine;
//  ExportLongInt(NextSerNr("AT2WrofVc",ATr.EndDate,-1,false,""));
  ExportLongInt(wrofnr);
  wrofnr = wrofnr + 1;
  ExportDate(ATr.EndDate);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportLongInt(0);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  NewLine;
  ExportString("");
  ExportString(ATr.Description);
  ExportString(ATr.Code);
  ExportString("");
  ExportString(ATr.Objects);
  ExportVal(ATr.SalesVal,M4Val);
  ExportVal(1,M4Qty);
  ExportString("");  
  NewLine;
  NewLine;
  RETURN;
END;

procedure ExportDprRecords(record ATVc ATr, Integer rwcnt,var LongInt dprnr)
BEGIN
  row ATVc ATrw;
  Integer i;

  ExportString("AT2DprVc");
  NewLine;
  for (i=1;i<rwcnt;i=i+1) begin
    MatRowGet(ATr,i,ATrw);
//    ExportLongInt(NextSerNr("AT2DprVc",ATrw.StartDate,-1,false,""));
    ExportLongInt(dprnr);
    dprnr = dprnr + 1;
    ExportString("");
    ExportString(ATr.Comment);
    ExportDate(ATrw.StartDate);
    ExportDate(ATrw.StartDate);
    ExportString(ATrw.Model1);
    ExportString(ATrw.Model2);
    ExportVal(ATrw.StartVal,M4Val);
    ExportVal(ATrw.StartVal2,M4Val);
    ExportString(ATr.Code);
    ExportString(ATrw.Comment);
    ExportString(ATr.FinalDeprVal);
    ExportString("");
    ExportString("");
    ExportString("");
    ExportString("");
    ExportDate(ATrw.StartDate);
    ExportString("");
    ExportDate(ATr.EndDate);    
    NewLine;
  end;
  NewLine;
  RETURN;  
END;

global 
procedure ATVcEn(record RcVc RepSpec)
BEGIN
//  record ACBlock ACRec;
//  row ACBlock ac1rw;
  record AT2VC AT2r;
  record ATVc ATr;
  row ATVc ATrw;
  Integer i,rwcnt;
  Boolean TrHs,extralinef;
  string 255 tstr;
  LongInt wrofnr;
  LongInt dprnr;
  LongInt takenr;
  
  dprnr = 1;
  wrofnr = 1;
  takenr = 1;
  TrHs = true;
  while (LoopMain(ATr,1,TrHs)) begin
    rwcnt = MatRowCnt(ATr);
    if (rwcnt>0) then begin
      MatRowGet(ATr,0,ATrw);    
    end;
    extralinef = true;
    NewLine;
    ExportString("AT2UnitVc");
    NewLine;
    ExportString(ATr.Code);
    ExportDate(ATr.PurchaseDate);
    ExportString(ATr.Comment);
    ExportString(ATr.Department);
    GetDepName(ATr.Department,tstr);
    ExportString(tstr);
    ExportString(ATr.VECode);
    ExportString(ATr.VEName);
    ExportString("");
    ExportString(ATr.Owner);
    ExportString("");
   //nk ExportString("");
    ExportString(ATr.ATClass);
    ExportString(ATr.Objects);
    ExportString(ATr.Description);
    ExportVal(ATr.PurchVal,M4Val);
    ExportVal(ATr.InitDeprVal,M4Val);
    ExportVal(ATr.InitDepr2Val,M4Val);
    ExportVal(ATr.InsuranceVal,M4Val);
    ExportString("");
    ExportString(ATr.FinalDeprVal);
    ExportDate(ATr.ProdDate);
    ExportString(ATrw.StartDate);
    ExportString(ATrw.StartDate);
    ExportDate(ATr.EndDate);
    ExportString(ATrw.Model1);
    ExportString(ATrw.Model2);
    ExportString("");
    ExportString("");
    ExportString(ATr.SerialNo);
    ExportString("");
    ExportString("");
    ExportString("");
    ExportString("");
    ExportString("");
    ExportString("");
    ExportString("");
    ExportVal(ATr.Quantity,M4Qty);
    ExportString("");
    ExportLongInt(ATr.Inactive);
    ExportLongInt(0);
    ExportString("");
    ExportString("");    
    NewLine;
    
    if (rwcnt>1) then begin
      NewLine;
      NewLine;
      ExportDprRecords(ATr,rwcnt,dprnr);
      NewLine;
      extralinef = false;
    end;
    if ((ATr.SalesVal!=0) and nonblankdate(ATr.EndDate)) then begin
      NewLine;
      NewLine;
      ExportSalesRecord(ATr,wrofnr);
      NewLine;
      extralinef = false;
    end;
    if ((ATr.SalesVal==0) and nonblankdate(ATr.EndDate)) then begin
      NewLine;
      ExportWrofRecord(ATr,wrofnr);
      NewLine;
      NewLine;
      extralinef = false;
    end;
    if (nonblankdate(ATr.StockDate)) then begin
      NewLine;
      NewLine;
      ExportTakeRecord(ATr,takenr);
      NewLine;
      extralinef = false;
    end;
    if (extralinef) then begin
      NewLine;
    end;
  end;
  NewLine;
/*  
  BlockLoad(ACRec);  
  ExportString("AC2Block");
  NewLine;
  
  BlockLoad(ACRec);
  rwcnt = MatRowCnt(ACRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ACRec,i,ac1rw);
    ExportString(ac1rw.Code);
    ExportString(ac1rw.AssetAcc);
    ExportString(ac1rw.DeprAcc);
    ExportString(ac1rw.CostAcc);
    ExportString("");
    ExportString("");
    ExportString("");
    ExportString(ac1rw.Objects);
    ExportString(ac1rw.Comment);
    NewLine;     
  end;
  NewLine;
  ExportString("AT2Vc");
  NewLine;
  rwcnt = MatRowCnt(ACRec);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(ACRec,i,ac1rw);
    ExportString(ac1rw.Code);
    ExportString(""); 
    ExportString("");
    ExportString(ac1rw.Objects);
    ExportString(ac1rw.Code);
    ExportString("");
    ExportString(ac1rw.Comment);
    NewLine;
    NewLine;
  end;     
*/
  RETURN;
END;
#endif
