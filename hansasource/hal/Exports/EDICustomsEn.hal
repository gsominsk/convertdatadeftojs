external procedure ExtractObj(string,var Integer,var string);
external procedure GetShipModeText(string,string,var string);

procedure GetCurTimeStr(var string res)
BEGIN
  Time tt;
  
  tt = CurrentTime;
  res = GetHour(tt);
  res = res & GetMinute(tt);
  RETURN;
END;

procedure ExportUNB1(string ourOrgNr)
BEGIN
  string 255 tstr;
 
  ExportPadString("UNB1",6," ",false);
  tstr = StripNonDigits(ourOrgNr);
  ExportPadString(tstr,35," ",false);
  ExportPadString(" ",4," ",false);
  NewLine;
  RETURN;
END;

procedure ExportUNB2(string curtime)
BEGIN
  ExportPadString("UNB2",6," ",false);
  ExportPadString("6501881019",35," ",false);//customs company OrgNr
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",4," ",false);
  ExportPadString(" ",16," ",false);  
  ExportPadString(DateToString(CurrentDate,"YYMMDD")&curtime,14," ",false);  
  ExportPadString(" ",2," ",false);
  ExportPadString("1",1," ",false);//1 test
  NewLine;
  RETURN;
END;

procedure ExportUNH(LongInt customnr)
BEGIN
  ExportPadString("UNH",6," ",false);
  ExportPadString(customnr,14," ",false);  
  NewLine;
  RETURN;
END;

procedure ExportBGM(string ArrivalCode)
BEGIN
  ExportPadString("BGM1",7," ",false);
  ExportPadString("929",3," ",false);
  NewLine;
/*
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",35," ",false);
  NewLine;
*/  
  ExportPadString("BGM12",7," ",false);
  ExportPadString(ArrivalCode,35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  RETURN;
END;
 
procedure ExportLOC1(string countrycode,string shipmode)
BEGIN
  string 255 tstr;
  
  GetShipModeText(shipmode,"",tstr);
  ExportPadString("LOC1",7," ",false);
  ExportPadString("40",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(countrycode,25," ",false); 
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("5",3," ",false);
  NewLine;
  ExportPadString("LOC1",7," ",false);
  ExportPadString("18",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("IS",25," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("159",3," ",false);
  NewLine;
  ExportPadString("LOC12",7," ",false);
  ExportPadString(tstr,70," ",false);
  NewLine;
  RETURN;
END;

procedure ExportDTM01()
BEGIN
  ExportPadString("DTM01",7," ",false);
  ExportPadString("137",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(DateToString(CurrentDate,"YYYYMMDD"),35," ",false);  
  ExportPadString(" ",1," ",false);
  ExportPadString("102",3," ",false);
  NewLine;
  RETURN;
END;

procedure ExportGIS(string cusdeckey)
BEGIN
  ExportPadString("GIS1",7," ",false);
  ExportPadString(cusdeckey,3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("109",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("159",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",17," ",false);  
  NewLine;
  ExportPadString("GIS1",7," ",false);
  ExportPadString("23",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("109",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("159",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",17," ",false);  
  NewLine;
  RETURN;
END;

procedure ExportMEA1(val totweight)
BEGIN
  ExportPadString("MEA1",7," ",false);
  ExportPadString("AAE",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("G",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("MEA12",7," ",false);
  ExportPadString("?",70,"?",false);  
  NewLine;
  */
  ExportPadString("MEA13",7," ",false);
  ExportPadString("KGM",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(ValToString(totweight,M4Qty,"",".",1),18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",18," ",false);
  NewLine;
  /*
  ExportPadString("MEA14",7," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure AddToVIArray(string supinvnr,Array string asupvinr,var Integer arrcnt)
BEGIN
  Integer i;
  
  for (i=0;i<=arrcnt;i=i+1) begin
    if (supinvnr==asupvinr[i]) then begin
      goto LAddToVIArray;
    end;
  end;
  arrcnt = arrcnt + 1;
  asupvinr[arrcnt] = supinvnr;
LAddToVIArray:;
  RETURN;
END;

procedure ExportRFF1IV(record CustomsVc Customsr)
BEGIN
  record VIVc VIr;
  row CustomsVc Customsrw;
  Array string 20 asupvinr;
  string 20 supinvnr;
  Integer i,rwcnt,arrcnt;
  Boolean vifound;
  Integer pos;
  
  arrcnt = -1;
  rwcnt = MatRowCnt(Customsr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(Customsr,i,Customsrw);
    if (Customsrw.PONr!=-1) then begin
      ResetLoop(VIr);
      vifound = true;
      VIr.POSerNr = Customsrw.PONr;
      while (LoopKey("POSerNr",VIr,1,vifound)) begin
        if (VIr.POSerNr!=Customsrw.PONr) then begin
          vifound = false;
        end;
        if (vifound) then begin
          supinvnr = VIr.InvoiceNr;
          if (blank(supinvnr)) then begin
            supinvnr = VIr.SerNr;
          end;
          AddToVIArray(supinvnr,asupvinr,arrcnt);
        end;
      end;
    end;
  end;
  if (nonblank(Customsr.Comment)) then begin
    pos = 0;        
    ExtractObj(Customsr.Comment,pos,supinvnr);
    if (nonblank(supinvnr)) then begin
      AddToVIArray(supinvnr,asupvinr,arrcnt);
    end;
    while (nonblank(supinvnr)) begin
      ExtractObj(Customsr.Comment,pos,supinvnr);    			   
      if (nonblank(supinvnr)) then begin
        AddToVIArray(supinvnr,asupvinr,arrcnt);
      end;
    end;  
  end;
  for (i=0;i<=arrcnt;i=i+1) begin
    ExportPadString("RFF1",7," ",false);
    ExportPadString("IV",3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(asupvinr[i],35," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",6," ",false);
    NewLine;
  end;
  RETURN;
END;


procedure ExportRFF1(string rffcode,string rffdesc)
BEGIN
  string 255 tstr;
  
  switch (rffcode) begin
    case "ABQ":  
      tstr = rffdesc & GetYear(CurrentDate);
    otherwise
      tstr = rffdesc;
  end;
  
  ExportPadString("RFF1",7," ",false);
  ExportPadString(rffcode,3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(tstr,35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",6," ",false);
  NewLine;
  /*
  ExportPadString("RFF12",7," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportRFF2(string ourvatnr)
BEGIN
  ExportPadString("RFF2",7," ",false);
  ExportPadString("VA",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(ourvatnr,35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",6," ",false);
  NewLine;
  /*
  ExportPadString("RFF22",7," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure OtherGetCodeAndDesc(var string locOtherPapers,var string othercode,var string otherdesc)
BEGIN
  LongInt papi;
  Integer i,l;
  string 1 c;
  string 60 tstr;
  
  othercode = "";
  otherdesc = "";
  l = len(locOtherPapers);
  for (i=0;i<=l;i=i+1) begin
    c = Mid(locOtherPapers,i,1);
    if (c==" ") then begin
      if (blank(othercode)) then begin
        othercode = tstr;
        tstr = "";
      end else begin
        otherdesc = tstr;
        goto LOtherGetCodeAndDesc;
      end;
    end else begin
      tstr = tstr & c;
    end;
  end;
LOtherGetCodeAndDesc:;
  locOtherPapers = Right(locOtherPapers,len(locOtherPapers)-i);
  if (blank(otherdesc)) then begin
    otherdesc = tstr;
  end;
  RETURN;
END;

procedure ExportDOC(LongInt NrOffOtherP,string OtherPapers)
BEGIN
  LongInt i;
  string 20 othercode,otherdesc;
  string 60 locOtherPapers;
  
  locOtherPapers = OtherPapers;
  for (i=1;i<=NrOffOtherP;i=i+1) begin
    OtherGetCodeAndDesc(locOtherPapers,othercode,otherdesc);
    
    ExportPadString("DOC1",7," ",false);
    ExportPadString(othercode,3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString("159",3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",35," ",false);
    NewLine;
    ExportPadString("DOC12",7," ",false);
    ExportPadString(otherdesc,35," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",3," ",false);
    NewLine;
  end;
  /*
  ExportPadString("DOC13",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",2,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",2,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportNAD(record CYBlock CYRec)
BEGIN
  string 255 tstr;
  
  ExportPadString("NAD1",7," ",false);
  ExportPadString("IM",3," ",false);
  ExportPadString(" ",1," ",false);
  tstr = StripNonDigits(CYRec.OrgNr);  
  ExportPadString(tstr,35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("ZZZ",3," ",false);
  NewLine;
  /*
  ExportPadString("NAD12",7," ",false);
  ExportPadString(CYRec.CompName,35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(CYRec.Addr1,35," ",false);
  NewLine;
  ExportPadString("NAD13",7," ",false);
  ExportPadString(CYRec.Addr2,35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",35," ",false);
  NewLine;
  ExportPadString("NAD14",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  ExportPadString("NAD15",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  ExportPadString("NAD16",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  ExportPadString("NAD17",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  ExportPadString("NAD18",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  ExportPadString("NAD19",7," ",false);
  ExportPadString("?",35,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",35,"?",false);
  NewLine;
  ExportPadString("NAD1A",7," ",false);
  ExportPadString("?",9,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",9,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportTOD(string shipdeal)
BEGIN
  ExportPadString("TOD1",7," ",false);
  ExportPadString(shipdeal,3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("TOD12",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("TOD13",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportLOC3(string tolocation)
BEGIN
  ExportPadString("LOC3",7," ",false);
  ExportPadString("1",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(tolocation,25," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("LOC32",7," ",false);
  ExportPadString(tolocation,70," ",false);
  NewLine;
  ExportPadString("LOC33",7," ",false);
  ExportPadString("?",25,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  ExportPadString("LOC34",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("LOC35",7," ",false);
  ExportPadString("?",25,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  ExportPadString("LOC36",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("LOC37",7," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportMOA01(Integer ver,val tv,string crncy)
BEGIN
  if (tv!=0) then begin
    ExportPadString("MOA01",7," ",false);
    ExportPadString(ver,3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(ValToString(tv,M4Val,"",".",0),18," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",2," ",false);
    ExportPadString(crncy,3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",3," ",false);
    ExportPadString(" ",1," ",false);
    ExportPadString(" ",3," ",false);
    NewLine;
  end;
  RETURN;
END;

procedure ExportUNS()
BEGIN
  ExportPadString("UNS1",7," ",false);
  ExportPadString("D",1," ",false);
  NewLine;
  RETURN;
END;

procedure ExportCST2(Integer rownr,string commodity)
BEGIN
  ExportPadString("CST2",7," ",false);
  ExportPadString(rownr,7," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(commodity,18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("169",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("159",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("CST22",7," ",false);
  ExportPadString("?",18,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",18,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",18,"?",false);
  NewLine;
  ExportPadString("CST23",7," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportFTX9(string artdesc)
BEGIN
  ExportPadString("FTX9",7," ",false);
  ExportPadString("AAA",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  ExportPadString("FTX92",7," ",false);
  ExportPadString(artdesc,70," ",false);
  NewLine;
  /*
  ExportPadString("FTX93",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("FTX94",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("FTX95",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("FTX96",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  ExportPadString("FTX97",7," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportLOC7(string itemcountrycode)
BEGIN
  ExportPadString("LOC7",7," ",false);
  ExportPadString("27",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(itemcountrycode,25," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("LOC72",7," ",false);
  ExportPadString("?",70,"?",false);  
  NewLine;
  ExportPadString("LOC73",7," ",false);
  ExportPadString("?",25,"?",false);  
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  ExportPadString("LOC74",7," ",false);
  ExportPadString("?",70,"?",false);  
  NewLine;
  ExportPadString("LOC75",7," ",false);
  ExportPadString("?",25,"?",false);  
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  ExportPadString("LOC76",7," ",false);
  ExportPadString("?",70,"?",false);  
  NewLine;
  ExportPadString("LOC76",7," ",false);
  ExportPadString("?",3,"?",false);  
  NewLine;
  */
  RETURN;
END;

procedure ExportMEA4(record INVc INr,string rowtypestr,string unittype,val tv)
BEGIN
  Integer typ,cutdecimals;
  
  ExportPadString("MEA4",7," ",false);
  ExportPadString(rowtypestr,3," ",false);
  ExportPadString(" ",1," ",false);
  switch (unittype) begin
    case "NMB":
      ExportPadString("",3," ",false);
    otherwise
      ExportPadString(unittype,3," ",false);      
  end;
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("MEA42",7," ",false);
  ExportPadString("?",70,"?",false);
  NewLine;
  */
  typ = M4Val;
  cutdecimals = 0;
  ExportPadString("MEA43",7," ",false);
  switch (unittype) begin
    case "AAX":
      ExportPadString("LTR",3," ",false);
    case "AAF":
      ExportPadString("KGM",3," ",false);
      cutdecimals = 1;
    case "NMB":
      ExportPadString("NMB",3," ",false);
      cutdecimals = 1;
    otherwise
      ExportPadString(INr.Unittext,3," ",false);
  end;
  ExportPadString(" ",1," ",false);
  ExportPadString(ValToString(tv,typ,"",".",cutdecimals),18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",18," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",2," ",false);
  NewLine;
/*
  ExportPadString("MEA44",7," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportMOA8(Integer ver,val tv)
BEGIN
  ExportPadString("MOA08",7," ",false);
  ExportPadString(ver,3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(ValToString(tv,M4Val,"",".",0),18," ",true);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  RETURN;
END;

procedure ExportTAX1(string charges)
BEGIN
  ExportPadString("TAX1",7," ",false);
  ExportPadString("1",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(charges,3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("159",3," s",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",35," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",6," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",3," ",false);
  NewLine;
  /*
  ExportPadString("TAX12",7," ",false);
  ExportPadString("?",15,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",7,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",17,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",12,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",3,"?",false);
  NewLine;
  ExportPadString("TAX13",7," ",false);
  ExportPadString("?",3,"?",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("?",20,"?",false);
  NewLine;
  */
  RETURN;
END;

procedure ExportUNS2()
BEGIN
  ExportPadString("UNS2",7," ",false);
  ExportPadString("S",1," ",false);
  NewLine;
  RETURN;
END;

procedure ExportCNT(Integer rwcnt)
BEGIN
  ExportPadString("CNT1",7," ",false);
  ExportPadString("5",3," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(rwcnt,18," ",false);
  ExportPadString(" ",3," ",false);
  ExportPadString("NMB",3," ",false);
  NewLine;
  RETURN;
END;

procedure ExportUNT()
BEGIN
  ExportPadString("UNT",7," ",false);
  NewLine;
  RETURN;
END;

procedure ExportUNZ()
BEGIN
  ExportPadString("UNZ",7," ",false);
  NewLine;
  RETURN;
END;

procedure ExportFILEHeader(record CYBlock CYRec,LongInt declnr)
BEGIN
  string 255 tstr;
  
  ExportPadString("0:SKOT-UT",9," ",false);
  NewLine;
  tstr = "1:<MAPI> [X400:/s=tollskjol/a=isholf/c=is/p=skyrr/o=tollur/ou1=edi/]";
  ExportPadString(tstr,len(tstr)," ",false);
  NewLine;
  tstr = "2:E";
  ExportPadString(tstr,len(tstr)," ",false);
  NewLine;
  tstr = "3:SD.96A CUSDEC96.REF CUSDEC96.MAP";
  ExportPadString(tstr,len(tstr)," ",false);
  NewLine;
  tstr = "4:" & CYRec.CompName;
  tstr = tstr & " Tollskjal ";
  tstr = tstr & declnr;
  ExportPadString(tstr,len(tstr)," ",false);
  NewLine;
  RETURN;
END;

global
procedure EDICustomsEn(record RcVc RepSpec)
BEGIN
  Boolean TrHs;
  record CYBlock CYRec;
  record CUVc VEr;
  record INVc INr;
  record CustomsVc Customsr;
  row CustomsVc Customsrw;
  string 255 tstr,curtimestr;
  Integer i,rwcnt;
  LongInt frdec,todec;
  
  BlockLoad(CYRec);
  if (SetExportCodepage("CP437")==false) then begin
    LogText(0,"Failed to set codepage CP437");
  end;
  frdec = FirstInRange(RepSpec.f1,20);
  todec = LastInRange(RepSpec.f1,20);
  TrHs = true;
  Customsr.SerNr = frdec;
  while (LoopMain(Customsr,1,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (Customsr.SerNr>todec) then begin
        TrHs = false;
      end;
    end;
    if (TrHs) then begin
      GetCurTimeStr(curtimestr);
      tstr = "Export\\";
      tstr = tstr & Customsr.SerNr;
      tstr = tstr & ".D96";      
      /*
      tstr = tstr & DateToString(CurrentDate,"MMDD");
      tstr = tstr & curtimestr & ".D96";
      */
      CreateFile(tstr);
      ExportFILEHeader(CYRec,Customsr.SerNr);
      
      ExportUNB1(CYRec.OrgNr);
      ExportUNB2(curtimestr);
      VEr.Code = Customsr.VECode;
      if (ReadFirstMain(VEr,1,true)) then begin end;
      ExportUNH(Customsr.SerNr);
      ExportBGM(Customsr.ArrivalCode);
      ExportLOC1(VEr.CountryCode,Customsr.ShipMode);
      ExportDTM01;
      ExportGIS(Customsr.CusDecKey);
      ExportMEA1(Customsr.Weight);
      if (nonblank(Customsr.VYKey)) then begin
        ExportRFF1("ABA",Customsr.VYKey);
      end;
      ExportRFF1("ABQ",Customsr.SerNr);
      if (nonblank(Customsr.CargoNumber)) then begin
        ExportRFF1("AWB",Customsr.CargoNumber);
      end;
      if (nonblank(Customsr.TransNumber)) then begin
        ExportRFF1("CW",Customsr.TransNumber);
      end;
      ExportRFF1IV(Customsr);
      if (nonblank(Customsr.FixedNumber)) then begin
        ExportRFF1("VT",Customsr.FixedNumber);
      end;
      if (nonblank(Customsr.PayMethod)) then begin
        ExportRFF1("ZZ",Customsr.PayMethod);
      end;
      ExportDOC(Customsr.NrOffOtherP,Customsr.OtherPapers);
      ExportNAD(CYRec);
      ExportRFF2(CYRec.VATNr);
      ExportTOD(Customsr.ShipDeal);
      ExportLOC3(Customsr.ToLocation);
      ExportMOA01(63,Customsr.SumCostPrice,Customsr.CurncyCode);
      ExportMOA01(144,Customsr.ShpVal,Customsr.ShpCurncy);
      ExportMOA01(81,Customsr.Div1Val,Customsr.Div1Curncy);
      ExportMOA01(70,Customsr.InsVal,Customsr.InsCurncy);
      ExportMOA01(39,Customsr.PurInvVal,Customsr.CurncyCode);
      ExportUNS;
      rwcnt = MatRowCnt(Customsr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(Customsr,i,Customsrw);
        INr.Code = Customsrw.ArtCode;
        if (ReadFirstMain(INr,1,true)) then begin end;
        ExportCST2(i+1,Customsrw.CommodityCode);
        ExportFTX9(Customsrw.ArtDesc);
        ExportLOC7(Customsrw.CountryCode);
        if (Customsrw.Weight!=0) then begin
          ExportMEA4(INr,"AAE","AAF",Customsrw.Weight);
        end;
        if (Customsrw.Volume!=0) then begin
          ExportMEA4(INr,"AAE","AAX",Customsrw.Volume);
        end;
        if (Customsrw.AlcPrc!=0) then begin
          ExportMEA4(INr,"AAG","",Customsrw.AlcPrc);
        end;
        ExportMEA4(INr,"CT","NMB",Customsrw.Quant);
        ExportMOA8(63,Customsrw.Sum);
        ExportTAX1(Customsrw.DutiesCodes);
      end;
      ExportUNS2;
      ExportCNT(rwcnt);
      ExportUNT;
    
      ExportUNZ;
      CloseFile;
    end;
  end;
  RETURN;
END;
