external function val NumberOfStayDays(Date,Date,Time,Time,Integer);
external procedure InitDateRange(var Date,var Date,Record RcVc);
external procedure UpdateDateRange(var Date,var Date,Record RcVc);
external procedure LabelDateRange(Date,Integer,var String);

global
procedure  ReservationData(Date pStart, Date pEnd,Record RcVc RepSpec)
begin
  Record JobVc Jobr;
  Val t1,t2,t3,t4,days;
  Boolean Skip,Cont;
  String 60 tstr;

  t1= 0; t2= 0; t3= 0; t4 = 0;
  Cont = true;
  Jobr.TransDate = pStart;
  while(LoopKey("TransDate",Jobr,1,Cont)) begin

    Skip= false;
    if (Jobr.TransDate>pEnd) then begin
      Cont = false;
      skip = true;
    end;
    
    if (not Skip) then begin
      days = NumberOfStayDays(Jobr.TransDate,Jobr.EndDate,Jobr.StartTime,Jobr.EndTime,1);
//      t1 = t1 + //ehh... nothing :)
      t2 = t2 + Jobr.Sum4;
      t3 = t3 + Jobr.Persons;
      t4 = t4 + (Jobr.Persons * days);
    end;
     
  end;
  ExportString(t1);
  ExportString(t2);
  ExportString(t3);
  ExportString(t4);
  return;
end;

global
procedure JobFlowEn(record RcVc RepSpec)
begin 
  Date sDate,eDate;
  String 60 tstr;

  tstr = GetDateID(RepSpec.sStartDate);
  InitDateRange(sDate,eDate,RepSpec);
  while(sDate<=RepSpec.sEndDate) begin
    LabelDateRange(sDate,RepSpec.flags[0],tstr);
    ExportString(tstr);
    ReservationData(sDate,eDate,RepSpec);
    NewLine;
    UserTrace(eDate,M4Str);              
    UpdateDateRange(sDate,eDate,RepSpec);
  end;
  return;
end;

