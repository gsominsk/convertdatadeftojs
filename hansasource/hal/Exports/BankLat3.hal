external function roundmode GetRowSumRoundModeRB();
external function roundmode DefaultRoundMode();
//  Latvija - Hansabanka new (SWIFT)
#ifdef HAL

Procedure FirstF(string str,var string ret)
Begin
integer fp,i,l;
l=len(str);
fp=0;
for (i=0;i<l;i=i+1) begin
	if (mid(str,i,1)=="/") then begin
		fp=i;
		i=l;
	end;
end;
if (fp==0) then begin
	ret=str;
end else begin	 
	ret=mid(str,0,fp);
end;	
Return;
End;

Procedure LastF(string str,var string ret)
Begin
integer fp,i,l,d;
l=len(str);
fp=0;
for (i=0;i<l;i=i+1) begin
	if (mid(str,i,1)=="/") then begin
		fp=i;
		i=l;
	end;
end;
if (fp==0) then begin
	ret="";
end else begin	 
	ret=mid(str,fp+1,l-fp);
end;	
Return;
End;

Procedure SelectNumber(string str,var string ret)
Begin
integer fp,i,l;
l=len(str);
fp=0;
for (i=0;i<l;i=i+1) begin
	if (mid(str,i,1)==",") then begin
		fp=i;
		i=l;
	end;
end;
if (fp==0) then begin
	ret=str;
end else begin	 
	ret=mid(str,0,fp);
end;	
Return;
End;

global
procedure BankExpLatvia3(record OPVc OPr,integer expdate,integer meth,integer comtype)  // Latvija - Hansabanka
begin
  record BankVc Bankr;
  record CUVc Ver;
  string 255 outstr,outstr2,outstr3,BankComment,teststr;
  string 1 emptystr, ptype;
  Boolean tf,fp,tp;
  row OPVc OPrws;
  integer rwc,i;
  val totsum, totvat;


  fp=false;tp=false;
  ptype=UpperCase(OPr.SortCode);
  if (ptype<>"S") and (ptype<>"V") and (ptype<>"N") then begin goto Lend; end;
  if (ptype=="S")  then begin fp=true; end;
  if (ptype=="N")  then begin tp=true; end;

  totsum = 0;
  totvat = 0;

   
  BankComment = "";
  rwc=MatRowCnt(OPr); 		
  for (i=0; i<rwc; i=i+1) begin
    MatRowGet(OPr,i,OPrws);
    if ((OPrws.stp == 1) and (OPrws.ovst == 0)) then begin
      totsum = totsum + Round(OPrws.RecVal,DefaultRoundMode);
      totvat = totvat + Round(OPrws.VATVal,GetRowSumRoundModeRB);
      SelectNumber(OPrws.Comment,outstr);
      if ((len(BankComment)+len(outstr))<=220) then begin
        BankComment = BankComment & outstr & ",";
      end;
    end;
  end;
  MatRowGet(OPr,0,OPrws);   
  outstr="**M3"; 
  if (fp) then begin outstr="**M4";end;
  if (tp) then begin outstr="**M5";end;
  ExportPadString(":0: :" & outstr,9," ",False);//payment type 
  newline;
  outstr=OPr.SerNr;
  ExportPadString(":1: :" & outstr,len(outstr) +5," ",False);//Doc No 
  newline;
  outstr=totsum;
  ExportPadString(":2: :" & outstr,len(outstr) +5," ",False);//Amount
  newline;
  if blank(OPr.PayCurCode) then begin
    outstr = "LVL";
  end else begin
    outstr = OPr.PayCurCode;
  end;
  ExportPadString(":3: :" & outstr,len(outstr) +5," ",False);//Currency
  newline;
  outstr=BankComment;
  if (totvat>0) then begin
    outstr=outstr&" t.sk. PVN 18% ";
    outstr=outstr&totvat;
    outstr=outstr&OPr.PayCurCode;
  end;
  ExportPadString(":4: :" & outstr,len(outstr) +5," ",False);//Details
  newline;
  outstr = OPr.BankAcc; 
  ExportPadString(":6: :" & outstr, len(outstr) +5," ",False);//Account number
  newline;
  FirstF(OPrws.BankAcc,outstr);
  ExportPadString(":7: :" & outstr,len(outstr) +5," ",False);//Benificiary's account
  newline;
  Ver.Code=OPrws.VECode;
  if (ReadFirstMain(Ver,1,true)==True) then begin
    Bankr.Code=Ver.AccOperator;  
    tf=ReadFirstMain(Bankr,1,true);
  end;
  outstr=Ver.Name;
  ExportPadString(":8: :" & outstr,len(outstr) +5," ",False);//Benificiary's name
  newline;
  outstr=Ver.InvAddr0;
  ExportPadString(":9: :" & outstr,len(outstr) +5," ",False);//Benificiary's address
  newline;
  outstr=Bankr.SWIFT;
  ExportPadString(":10: :" & outstr, len(outstr) +6," ",False);//Benificiary's SWIFT
  newline;
  outstr=Bankr.Name;
  ExportPadString(":11: :"& outstr,len(outstr) +6," ",False);//Benificiary's bank name
  newline;
  if (fp) then begin
    if (meth==0) then begin
      outstr="N";
    end else begin
      outstr="X";
    end;
    ExportPadString(":17: :" & outstr,len(outstr) +6," ",False);//payment type
    newline;
    if (comtype==0) then begin
      outstr="OUR";
    end else begin
      outstr="BEN";
    end;
    ExportPadString(":18: :" & outstr,len(outstr) +6," ",False);//Charges
    newline;
  end;
  outstr=VEr.RegNr1; 
  ExportPadString(":29: :" & outstr,len(outstr) +6," ",False);//register number
  newline;

  if (tp) then begin
    LastF(OPrws.BankAcc,outstr);
    ExportPadString(":30: :" & outstr,len(outstr) +6," ",False);//subaccount
    newline;
  end;

Lend:;

  return;
end;

#endif
