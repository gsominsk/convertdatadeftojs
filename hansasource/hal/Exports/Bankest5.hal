/* Bankfile for Estonia (TeleHansa (foreign payment))*/

#ifdef HAL

global
procedure BankExpEstonia5(record OPVc OPr,integer speedf,integer whichbank,integer whopays,integer koond)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  row OPVc OPrw;
  Integer i,k,t,rwcnt;
  Integer nr;
  string 200 tstr;
  boolean found,ftest;
  array string 20 vendor;
  array integer rownr;
  array val payval;
  array string 140 comment;
  Boolean foundt;
  string 255 suplinv;
    
  BlockLoad(CompYear);
  rwcnt = MatRowCnt(OPr);
  if (koond == 0) or (rwcnt <= 1) then begin 
    for (i = 0; i<rwcnt;i=i+1) begin
      MatRowGet(OPr,i,OPrw);
      if ((OPrw.stp==1) and (OPrw.ovst==0)) then begin
        VEr.Code = OPrw.VECode;
        found = ReadFirstMain(VEr,1,true);
        ExportPadString("MKU",4," ",false);
/* Opkod */
        ExportPadString(speedf,3," ",false);
/* Bank */
        if whichbank == 0 then begin
          ExportPadString("767",3," ",true);
        end else begin
          ExportPadString("767",3," ",true);
        end;
/* Account */
        ExportPadString(OPr.BankAcc,16," ",false);
/* Supplier Bank */
        Bankr.Code = VEr.AccOperator;
        found = ReadFirstMain(Bankr,1,true);
	tstr = Bankr.Name;
	if nonblank(tstr) and nonblank(Bankr.Address0) then begin
	  tstr = tstr & "," & Bankr.Address0;
	end;
	if nonblank(tstr) and nonblank(Bankr.Address1) then begin
	  tstr = tstr & "," & Bankr.Address1;
	end;
	if nonblank(tstr) and nonblank(Bankr.Address2) then begin
	  tstr = tstr & "," & Bankr.Address2;
	end;
	if nonblank(tstr) and nonblank(Bankr.Address3) then begin
	  tstr = tstr & "," & Bankr.Address3;
	end;
	if nonblank(tstr) and nonblank(Bankr.Address4) then begin
	  tstr = tstr & "," & Bankr.Address4;
	end;
	if nonblank(tstr) and nonblank(Bankr.Nr1) then begin
	  tstr = tstr & "," & Bankr.Nr1;
	end;
        ExportPadString(tstr,140," ",false);
/* Supplier Account */
        if (nonblank(OPrw.BankAcc)) then begin
          tstr = OPrw.BankAcc;
        end else begin
          tstr = VEr.BankAccount;
        end;
        ExportPadString(tstr,35," ",false);    
/* Suppliers address */
        ExportPadString(VEr.InvAddr0,35," ",false);    
        ExportPadString(VEr.InvAddr1,35," ",false);    
        ExportPadString(VEr.InvAddr2,35," ",false);    
/* Suppliers name */
        ExportPadString(VEr.Name,35," ",false);    
/* SWIFT code */
        ExportPadString(Bankr.SWIFT,11," ",false);    
/* Amount */
        ExportPadString(ValToString(OPrw.RecVal,M4Val,"","",0),12," ",true);
/* Bank currency */
        ExportPadString(OPrw.RecCurncy,3," ",true);
        ExportPadString(OPrw.BankCurncy,3," ",true);
/* Date */
        ExportPadString(DateToString(OPr.PayDate,"YYMMDD"),6," ",true);
/* Number */
        ExportPadString(OPr.SerNr,8," ",false);
/* Date */
        ExportPadString(DateToString(OPr.TransDate,"YYMMDD"),6," ",true);
/* Comment */
        ExportPadString(OPrw.Comment,35," ",false);
        ExportPadString("",35," ",false);
        ExportPadString("",35," ",false);
        ExportPadString("",35," ",false);
/* who pays the bank fee */
        switch (whopays) begin
	  case 0:
          ExportPadString("OUR",3," ",false);
	  case 1:
          ExportPadString("BEN",3," ",false);
	  case 2:
          ExportPadString("SHR",3," ",false);
	end;  
/* Maksebilanss */
        ExportPadString("",6," ",false);
/* Saaja panga korrespondentpank */
        ExportPadString("",140," ",false);
/* SWIFT */
        ExportPadString("",11," ",false);
/* Korrespondentkonto */
        ExportPadString("",35," ",false);
/* Vahepank */
        ExportPadString("",140," ",false);
/* SWIFT */
        ExportPadString("",11," ",false);
/* Korrespondentkonto */
        ExportPadString("",35," ",false);
/* Maksja saaja riigi tähis */
        ExportPadString(VEr.CountryCode,2," ",false);
/* Bank reference nr*/        
	ExportPadString(OPrw.BankRefStr,50," ",true);
/* Riigikassa reference nr*/        
	ExportPadString(OPrw.rkPayNumber,20," ",true);
        NewLine;
        NewLine;
      end;
    end;
    UserTrace("" & OPr.SerNr,2);
  end;
  if (koond == 1) and (rwcnt > 1) then begin
    //one payment per supplier
    k = 0;
    for (i = 0; i<rwcnt; i = i + 1) begin
      MatRowGet(OPr,i,OPrw);
      VIr.SerNr = OPrw.VISerNr;
      if ReadFirstMain(VIr,1,true) then begin
      	suplinv = VIr.InvoiceNr;
      end else begin
        suplinv = OPrw.VISerNr;
      end;
      
      if ReadFirstMain(VEr,1,true) then begin end;

      if ((OPrw.stp==1) and (OPrw.ovst==0)) then begin
        if (k == 0) then begin
          vendor[k] =OPrw.VECode;
          rownr[k] = i;
          payval[k] = OPrw.RecVal;
          if (OPrw.VISerNr<>-1) then begin
 	        comment[k] = "Arve Nr " &  suplinv;
          end;  
          k = 1;
        end else begin
          ftest = false;
          for (t = 0; t<k; t = t + 1) begin
            if (vendor[t] == OPrw.VECode) then begin
              payval[t] = payval[t] + OPrw.RecVal;
              if (OPrw.VISerNr<>-1) then begin
                comment[t] = comment[t] & "," &  suplinv;
              end;  
              ftest = true;
            end;
          end;
          if (ftest == false) then begin
            vendor[k] = OPrw.VECode;
            rownr[k] = i;
            payval[k] = OPrw.RecVal;
            if (OPrw.VISerNr<>-1) then begin
              comment[k] = "Arve Nr " &  suplinv;
            end;  
            k = k + 1;
          end;
	end;
      end;
    end;  
    for (t = 0; t<k; t = t + 1) begin
      VEr.Code = vendor[t];
      foundt = ReadFirstMain(VEr,1,true);
      MatRowGet(OPr,rownr[t],OPrw);
      //koond
      ExportPadString("MKU",4," ",false);
/* Opkod */
      ExportPadString(speedf,3," ",false);
/* Bank */
      if whichbank == 0 then begin
        ExportPadString("767",3," ",true);
      end else begin
        ExportPadString("767",3," ",true);
      end;
/* Account */
      ExportPadString(OPr.BankAcc,16," ",false);
/* Supplier Bank */
      Bankr.Code = VEr.AccOperator;
      found = ReadFirstMain(Bankr,1,true);
      tstr = Bankr.Name;
      if nonblank(tstr) and nonblank(Bankr.Address0) then begin
        tstr = tstr & "," & Bankr.Address0;
      end;
      if nonblank(tstr) and nonblank(Bankr.Address1) then begin
        tstr = tstr & "," & Bankr.Address1;
      end;
      if nonblank(tstr) and nonblank(Bankr.Address2) then begin
        tstr = tstr & "," & Bankr.Address2;
      end;
      if nonblank(tstr) and nonblank(Bankr.Address3) then begin
        tstr = tstr & "," & Bankr.Address3;
      end;
      if nonblank(tstr) and nonblank(Bankr.Address4) then begin
        tstr = tstr & "," & Bankr.Address4;
      end;
      if nonblank(tstr) and nonblank(Bankr.Nr1) then begin
        tstr = tstr & "," & Bankr.Nr1;
      end;
      ExportPadString(tstr,140," ",false);
/* Supplier Account */
      if (nonblank(OPrw.BankAcc)) then begin
        tstr = OPrw.BankAcc;
      end else begin
        tstr = VEr.BankAccount;
      end;
      ExportPadString(tstr,35," ",false);    
/* Suppliers address */
      ExportPadString(VEr.InvAddr0,35," ",false);    
      ExportPadString(VEr.InvAddr1,35," ",false);    
      ExportPadString(VEr.InvAddr2,35," ",false);    
/* Suppliers name */
      ExportPadString(VEr.Name,35," ",false);    
/* SWIFT code */
      ExportPadString(Bankr.SWIFT,11," ",false);    
/* Amount */
      ExportPadString(ValToString(payval[t],M4Val,"","",0),12," ",true);
/* Bank currency */
      ExportPadString(OPrw.RecCurncy,3," ",true);
      ExportPadString(OPrw.BankCurncy,3," ",true);
/* Date */
      ExportPadString(DateToString(OPr.PayDate,"YYMMDD"),6," ",true);
/* Number */
      ExportPadString(OPr.SerNr,8," ",false);
/* Date */
      ExportPadString(DateToString(OPr.TransDate,"YYMMDD"),6," ",true);
/* Comment */
      ExportPadString(comment[t],140," ",false);
/* who pays the bank fee */
      switch (whopays) begin
	  case 0:
          ExportPadString("OUR",3," ",false);
	  case 1:
          ExportPadString("BEN",3," ",false);
	  case 2:
          ExportPadString("SHR",3," ",false);
      end;  
/* Maksebilanss */
      ExportPadString("",6," ",false);
/* Saaja panga korrespondentpank */
      ExportPadString("",140," ",false);
/* SWIFT */
      ExportPadString("",11," ",false);
/* Korrespondentkonto */
      ExportPadString("",35," ",false);
/* Vahepank */
      ExportPadString("",140," ",false);
/* SWIFT */
      ExportPadString("",11," ",false);
/* Korrespondentkonto */
      ExportPadString("",35," ",false);
/* Maksja saaja riigi tähis */
      ExportPadString(VEr.CountryCode,2," ",false);
/* Bank reference nr*/        
//tsp      ExportPadString(OPrw.BankRefStr,50," ",true);
/* Riigikassa reference nr*/        
//tsp      ExportPadString(OPrw.rkPayNumber,20," ",true);
      NewLine;
      NewLine;
    end;
    UserTrace("" & OPr.SerNr,2);       
  end;
  return;
end;
#endif
