external procedure NewLineExport();

global
procedure BankExpAustraliaBegin(record RcVc RepSpec,record OPVc OPr)
begin
  ExportPadString("0",1," ",false);
  ExportPadString(" ",17," ",false);
  ExportPadString("01",2," ",false);
  ExportPadString(OPr.PayNumber,3," ",false);
  ExportPadString(" ",7," ",false);
  ExportPadString(RepSpec.f2,26," ",false);
  ExportPadString(RepSpec.long1,6," ",false);
  ExportPadString(RepSpec.f3,12," ",false);
  ExportPadString(DateToString(RepSpec.sEndDate,"DDMMYY"),6," ",false);
  ExportPadString(" ",40," ",false);
  NewLineExport;
  return;
end;

procedure AustraliaBankVal(var string tstr,val vp)
begin
  val nv;
  
  nv = vp*100;  
  tstr = ValToString(nv,M4Val,"","",0);
  tstr = Left(tstr,len(tstr)-2);
  return;
end;

global
procedure BankExpAustraliaPayment(record RcVc RepSpec,record OPVc OPr,var val PGSum,var LongInt betcount)
begin
  record VIVc VIr;
  record CUVc CUr;
  Integer i,rwcnt;
  row OPVc OPrw;
  Boolean testf;
  string 255 tstr;

  rwcnt = MatRowCnt(OPr);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    testf = true;           
    if (OPrw.ovst<>0) then begin testf = false; end;
    if (blank(OPrw.BankAcc)) then begin testf = false; end;    
    VIr.SerNr = OPrw.VISerNr;
    if (ReadFirstMain(VIr,1,true)==false) then begin testf = false; end;
    testf = true;
    if (VIr.Invalid<>0) then begin testf = false; end;
    if (nonblank(RepSpec.CurncyCode)) then begin
      if (OPrw.BankCurncy!=RepSpec.CurncyCode) then begin testf = false; end;
    end;    
    if (testf) then begin
      CUr.Code = OPrw.VECode;
      if (ReadFirstMain(CUr,1,true)) then begin end;
      ExportPadString("1",1," ",false);
      ExportPadString(CUr.SortCode,7," ",false);     
      ExportPadString(OPrw.BankAcc,9," ",true);
      ExportPadString(" ",1," ",false);
      ExportPadString("50",2," ",false);
      AustraliaBankVal(tstr,OPrw.BankVal);
      ExportPadString(tstr,10,"0",true);
      ExportPadString(OPrw.Comment,32," ",false);
      tstr = OPrw.BankRefStr;
      if (blank(tstr)) then begin
        tstr = OPr.PayNumber;
      end;
      ExportPadString(tstr,18," ",false);
      ExportPadString(OPr.SortCode,7," ",false);     
      ExportPadString(OPr.BankAcc,9," ",false);     
      ExportPadString(RepSpec.f2,16," ",false);
      AustraliaBankVal(tstr,blankval);
      ExportPadString(tstr,8,"0",true);
      NewLineExport;
      PGSum = PGSum + OPrw.BankVal;
      betcount = betcount + 1;
    end;
  end;
  return;
end;

global
procedure BankExpAustraliaEnd(val PGSum,LongInt betcount, record OPVc OPr)
begin
  string 255 tstr;
  
  ExportPadString("7",1," ",false);
  //ExportPadString("999-999",7," ",false);
  ExportPadString(OPr.SortCode,7," ",false);
  ExportPadString(" ",12," ",false);
  AustraliaBankVal(tstr,PGSum);
  ExportPadString("0",10,"0",true);
  ExportPadString(tstr,10,"0",true);
  ExportPadString(tstr,10,"0",true);
  ExportPadString(" ",24," ",false);
  ExportPadString(betcount,6,"0",true);
  ExportPadString(" ",40," ",false);
  NewLineExport;
  return;
end;
