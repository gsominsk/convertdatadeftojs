external procedure OutRegisterTag(string);

procedure OutTRRows(record TRVc TRr)
BEGIN
  Integer rwcnt,i;
  row TRVc TRrw;
  string 255 tstr;
  
  rwcnt = MatRowCnt(TRr);
  for (i = 0 ; i<rwcnt ;i=i+1) begin
    MatRowGet(TRr,i,TRrw);
    if (TRrw.ovst==0) then begin
      if (TRrw.stp==1) then begin
        ExportLongInt(TRr.Number);
        tstr = StrTRCode(TRr.IntYc);
        ExportString(tstr);
        ExportDate(TRr.RegDate);
        ExportString(TRr.Comment);
        ExportDate(TRr.TransDate);
        ExportString(TRr.RefStr);
        ExportString(TRrw.AccNumber);
        ExportString(TRrw.Objects);
        ExportString(TRrw.Comment);
        ExportString(TRrw.VATCode);
        ExportVal(TRrw.Qty,M4Qty);
        ExportVal(TRrw.DebVal,M4Val);
        ExportVal(TRrw.CredVal,M4Val);
        ExportVal(TRrw.CurDebVal,M4Val);
        ExportVal(TRrw.CurCredVal,M4Val);
        ExportString(TRrw.Curncy);
        ExportVal(TRrw.FrRate,M4Val);
        ExportVal(TRrw.ToRateB1,M4Val);
        ExportVal(TRrw.ToRateB2,M4Val);
        ExportVal(TRrw.BaseRate1,M4Val);
        ExportVal(TRrw.BaseRate2,M4Val);
        NewLine;
      end;
    end;
  end;
  RETURN;
END;

procedure ExpTransRows(record RcVc RepSpec)
BEGIN
  record TRVc TRr;
  Boolean TrHs;
  Integer yc1,yc2;
  LongInt n1,n2;

  TrHs = false;
  yc1 = RepSpec.flags[0];
  yc2 = RepSpec.flags[1];
  n1 = RepSpec.long1;
  n2 = RepSpec.long2;
  TRr.Number = n1;
  TRr.IntYc = yc1;
  TrHs = true;
  while (LoopMain(TRr,2,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (TRr.IntYc>yc2) then begin TrHs = false; end;
    end;  
    if (TRr.IntYc==yc2) then begin
      if (TRr.Number>n2) then begin TrHs = false; end;
    end;  
    if (DateInRange(TRr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin
      if (TrHs) then begin
        OutTRRows(TRr);
    UserTrace(TRr.Number,0);
      end;
    end;  
  end;
  NewLine;
  RETURN;
END;

procedure ExpTrans(record RcVc RepSpec)
BEGIN
  record TRVc TRr;
  Boolean TrHs,firstf;
  Integer yc1,yc2;
  LongInt n1,n2;

  TrHs = false;
  yc1 = RepSpec.flags[0];
  yc2 = RepSpec.flags[1];
  n1 = RepSpec.long1;
  n2 = RepSpec.long2;
  TRr.Number = n1;
  TRr.IntYc = yc1;
  firstf = true;
  TrHs = true;
  while (LoopMain(TRr,2,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (TRr.IntYc>yc2) then begin TrHs = false; end;
    end;  
    if (TRr.IntYc==yc2) then begin
      if (TRr.Number>n2) then begin TrHs = false; end;
    end;  
    if (DateInRange(TRr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)) then begin
      if (TrHs) then begin
        if (firstf) then begin
          OutRegisterTag("TRVc");
          NewLine;
          firstf = false;
        end;
        ExportRecord(TRr);
        NewLine;
    UserTrace(TRr.Number,0);
      end;
    end;  
  end;
  NewLine;
  RETURN;
END;

procedure ExpBackupString(string comment)
BEGIN
  ExportString("commentstring");
  NewLine;
  ExportString(comment);
  NewLine;
  NewLine;
  RETURN;
END;

global
procedure GLEn(var record RcVc repSpec)
BEGIN

  RepSpec.long1 = FirstTransInRange(RepSpec.f1);
  RepSpec.long2 = LastTransInRange(RepSpec.f1);
  RepSpec.flags[0] = FirstTransTypeInRange(RepSpec.f1);
  RepSpec.flags[1] = LastTransTypeInRange(RepSpec.f1);
  if (RepSpec.flags[10]==0) then begin
    ExportFormat;
    ExpBackupString(RepSpec.f3);
    ExpTrans(RepSpec);      
  end else begin
    ExpTransRows(RepSpec);
  end;
  RETURN;
END;
