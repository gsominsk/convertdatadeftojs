// bank file export for "Estonia - Riigikassa"
procedure WriteEstbankFileStr(string name,Integer l)
begin
  string 255 t2;
  string 5 t1;
  integer i;
  
  for (i=0; i<=l; i=i+1) begin
    if (mid(name,i,1)=="&") then begin
      t1 = "&amp;";
    end else begin
      t1 = mid(name,i,1);    
    end;
    t2 = t2 & t1;
  end;
  ExportPadString(t2,len(t2)," ",false);  
 return;
end;

global
procedure BankExpEstonia7Begin()
begin
  string 50 tstr2;
  
  tstr2 = "<?xml version=""1.0"" encoding=""iso-8859-1""?>";
  ExportPadString(tstr2,43," ",false);
  NewLine;
  ExportPadString("<maksekorraldused>",18," ",false);  
  NewLine;
 return;
end;

global
procedure BankExpEstonia7(record OPVc OPr,integer speedf,integer whopays,integer position)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  row OPVc OPrw;
  Integer i,rwcnt;
  Integer nr;
  string 200 tstr;
  boolean found;
  string 1 sp,payment,pos,c1,c2;
    
  BlockLoad(CompYear);
  rwcnt = MatRowCnt(OPr);
  for (i=0; i<rwcnt;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    if ((OPrw.stp==1) and (OPrw.ovst==0)) then begin
      VEr.Code = OPrw.VECode;
      found = ReadFirstMain(VEr,1,true);
      ExportPadString(" <maksja>",9," ",false);  
      WriteEstbankFileStr(CompYear.CompName,80);
      ExportPadString("</maksja>",9," ",false);  
      NewLine;
      ExportPadString(" <maksja_reg_nr>",16," ",false);  
      WriteEstbankFileStr(CompYear.OrgNr,15);
      ExportPadString("</maksja_reg_nr>",16," ",false);  
      NewLine;
      ExportPadString(" <maksekorraldus>",17," ",false);  
      NewLine;
      ExportPadString("  <kirje_tunnus>",16," ",false);  
      WriteEstbankFileStr("**M3",4);
      ExportPadString("</kirje_tunnus>",15," ",false);  
      NewLine;
      ExportPadString("  <dok_number>",14," ",false);  
      WriteEstbankFileStr(OPr.SerNr,10);
      ExportPadString("</dok_number>",13," ",false);  
      NewLine;
      ExportPadString("  <dokumendi_kp>",16," ",false);  
      WriteEstbankFileStr(DateToString(OPr.PayDate,"YYYYMMDD"),8);
      ExportPadString("</dokumendi_kp>",15," ",false);  
      NewLine;
      ExportPadString("  <summa>",9," ",false);  
      WriteEstbankFileStr(ValToString(OPrw.RecVal,M4Val,"","",0),12);
      ExportPadString("</summa>",8," ",false);  
      NewLine;
      ExportPadString("  <valuuta_kood>",16," ",false);  
      WriteEstbankFileStr(OPrw.RecCurncy,3);
      ExportPadString("</valuuta_kood>",15," ",false);  
      NewLine;
      ExportPadString("  <makse_selgitus>",18," ",false);  
      WriteEstbankFileStr(OPrw.Comment,70);
      ExportPadString("</makse_selgitus>",17," ",false);  
      NewLine;
      VIr.SerNr = OPrw.VISerNr;
      found = ReadFirstMain(VIr,1,true);
      ExportPadString("  <viitenumber>",15," ",false);  
      WriteEstbankFileStr(VIr.RefStr,20);
      ExportPadString("</viitenumber>",14," ",false);  
      NewLine;
      ExportPadString("  <maksja_pangakonto>",21," ",false);  
      WriteEstbankFileStr(OPr.BankAcc,20);
      ExportPadString("</maksja_pangakonto>",20," ",false);  
      NewLine;
      if (nonblank(OPrw.BankAcc)) then begin
        tstr = OPrw.BankAcc;
      end else begin
        tstr = VEr.BankAccount;
      end;
      ExportPadString("  <saaja_pangakonto>",20," ",false);  
      WriteEstbankFileStr(tstr,20);
      ExportPadString("</saaja_pangakonto>",19," ",false);  
      NewLine;
      ExportPadString("  <saaja_nimi>",14," ",false);  
      WriteEstbankFileStr(VEr.Name,30);
      ExportPadString("</saaja_nimi>",13," ",false);  
      NewLine;
      ExportPadString("  <saaja_reg_nr>",16," ",false);  
      WriteEstbankFileStr(VEr.RegNr1,11);
      ExportPadString("</saaja_reg_nr>",15," ",false);  
      NewLine;
      c1="";
      c2="";
      ExportPadString("  <saaja_aadress>",17," ",false);
      if (nonblank(VEr.InvAddr0)) then begin
        c1=",";
      end;
      if (nonblank(VEr.InvAddr1)) then begin
        c2=",";
      end;
      WriteEstbankFileStr(VEr.InvAddr0 & c1 & VEr.InvAddr1 & c2 & VEr.InvAddr2,105);
      ExportPadString("</saaja_aadress>",16," ",false);  
      NewLine;
      Bankr.Code = VEr.AccOperator;
      found = ReadFirstMain(Bankr,1,true);
      ExportPadString("  <saaja_pank_nimi>",19," ",false);  
      WriteEstbankFileStr(Bankr.Name,40);
      ExportPadString("</saaja_pank_nimi>",18," ",false);  
      NewLine;
      ExportPadString("  <vaartuspaev>",15," ",false);  
      WriteEstbankFileStr(DateToString(OPr.TransDate,"YYYYMMDD"),8);
      ExportPadString("</vaartuspaev>",14," ",false);  
      NewLine;
      switch (speedf) begin
        case 0: sp = "T";
        case 1: sp = "K";
        case 2: sp = "X";
      end;
      ExportPadString("  <makse_tyyp>",14," ",false);  
      WriteEstbankFileStr(sp,1);
      ExportPadString("</makse_tyyp>",13," ",false);  
      NewLine;
      switch (whopays) begin
        case 0: payment = "M";
        case 1: payment = "S";
        case 2: payment = "K";
      end;
      ExportPadString("  <kulud_kannab>",16," ",false);  
      WriteEstbankFileStr(payment,1);
      ExportPadString("</kulud_kannab>",15," ",false);  
      NewLine;
      switch (position) begin
        case 0: pos = "M";
        case 1: pos = "E";
        case 2: pos = "T";
        default: pos = "T";
      end;  
      ExportPadString("  <omandisuhe>",14," ",false);  
      WriteEstbankFileStr(pos,1);
      ExportPadString("</omandisuhe>",13," ",false);  
      NewLine;
      ExportPadString("  <rk_viitenumber>",18," ",false);  
      WriteEstbankFileStr(OPrw.rkPayNumber,40);
      ExportPadString("</rk_viitenumber>",17," ",false);  
      NewLine;
      ExportPadString(" </maksekorraldus>",18," ",false);  
      NewLine;
    end;//if
  end;//for
 return;
end;

global
procedure BankExpEstonia7End()
begin
  ExportPadString("</maksekorraldused>",19," ",false);  
 return;
end;