external procedure M4ILMidstr(string,var string,Integer,Integer);
external procedure NewLineExport();

procedure DomesticBankCzech3(record RcVc RepSpec,record OPVc OPr,var LongInt opcnt,var val opv)
begin
  Integer i,rwcnt;
  row OPVc OPrw;
  Boolean testf;
  record VIVc VIr;
  record BankVc Bankr;
  string 255 tstr;
  
  rwcnt = MatRowCnt(OPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    testf = true;
    if (nonblank(RepSpec.CurncyCode)) then begin
      if (OPrw.BankCurncy!=RepSpec.CurncyCode) then begin testf = false; end;
    end;    
    if (testf) then begin
      opcnt = opcnt + 1;
      opv = opv + OPrw.BankVal;
      VIr.SerNr = OPrw.VISerNr;
      if (ReadFirstMain(VIr,1,true)) then begin
        Bankr.Code = VIr.BankCode;
        if (ReadFirstMain(Bankr,1,true)) then begin
        end;
      end;
      ExportPadString("1",1,"",false);
      ExportPadString(",",1,"",false);
      ExportPadString(opcnt,3,"0",false);
      ExportPadString(",",1,"",false);
      ExportPadString(OPr.BankAcc,10," ",false);
      ExportPadString(",",1,"",false);
      tstr = OPrw.VISerNr;
      tstr = tstr & ":" & OPrw.VECode;
      ExportPadString(tstr,16," ",false);
      ExportPadString(",",1,"",false);
      ExportPadString(DateToString(VIr.DueDate,"DDMMYYYY"),8," ",false);
      ExportPadString(",",1,"",false);
      tstr = ValToString(OPrw.BankVal,M4Val,"",".",0);
      ExportPadString(tstr,len(tstr)," ",false);
      ExportPadString(",",1,"",false);
      tstr = StripNonDigits(OPrw.BankAcc);
      if (len(tstr)>15) then begin
        ExportPadString(Left(tstr,6),6,"0",false);
        ExportPadString(",",1,"",false);
        ExportPadString(Right(tstr,len(tstr)-6),10," ",false);
        ExportPadString(",",1,"",false);
      end else begin
        ExportPadString("0",6,"0",false);
        ExportPadString(",",1,"",false);
        ExportPadString(tstr,10," ",false);
        ExportPadString(",",1,"",false);
      end;
      ExportPadString(Bankr.Sorting,4,"0",false);
      ExportPadString(",",1,"",false);
      ExportPadString(VIr.RefStr,4,"0",false);
      ExportPadString(",",1,"",false);
      ExportPadString(OPrw.VISerNr,10," ",false);
      ExportPadString(",",1,"",false);
      ExportPadString("0",10,"0",false);//we dont have it
      ExportPadString(",",1,"",false);
      ExportPadString(OPr.BankName,35," ",false);//comment op opvc
      NewLineExport;
    end;
  end;
  return;
end;

procedure DomesticBankCzech3CheckSum(LongInt opcnt,val opv)
begin
  string 255 tstr;
  
  ExportPadString("1",1,"0",false);
  ExportPadString(",",1,"",false);
  ExportPadString(opcnt,3,"0",true);
  ExportPadString(",",1,"",false);
  tstr = ValToString(opv,M4Val,"",".",0);
  ExportPadString(tstr,len(tstr)," ",false);
  NewLineExport;
  return;
end;

global
procedure BankCzech3(record RcVc RepSpec,record OPVc OPr)
begin
  LongInt opcnt;
  val opv;
  Boolean testf;
  
  opcnt = 0;
  if (RepSpec.flags[2]==0) then begin
    testf = true;
    if (RepSpec.OnlyUnprntd==0) then begin
      if (OPr.ExportedFlag!=0) then begin testf = false; end;
    end;
    if (testf) then begin
      DomesticBankCzech3(RepSpec,OPr,opcnt,opv);
      DomesticBankCzech3CheckSum(opcnt,opv);
    end;
  end else begin
  end;
  return;
end;

procedure DomesticBankCzechABO(record RcVc RepSpec,record OPVc OPr,var LongInt opcnt,var val opv)
begin
  Integer i,rwcnt;
  row OPVc OPrw;
  Boolean testf;
  record VIVc VIr;
  record BankVc Bankr;
  string 255 tstr;
  
  rwcnt = MatRowCnt(OPr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    testf = true;
    if (nonblank(RepSpec.CurncyCode)) then begin
      if (OPrw.BankCurncy!=RepSpec.CurncyCode) then begin testf = false; end;
    end;    
    if (testf) then begin
      opcnt = opcnt + 1;
      opv = opv + OPrw.BankVal;
      VIr.SerNr = OPrw.VISerNr;
      if (ReadFirstMain(VIr,1,true)) then begin
        Bankr.Code = VIr.BankCode;
        if (ReadFirstMain(Bankr,1,true)) then begin
        end;
      end;
      ExportPadString("2",1," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString(OPr.BankAcc,17," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString(ValToString(OPr.CurPayVal*100,M40Val,"","",1),14," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString(DateToString(CurrentDate,"DDMMYY"),6," ",false);
      NewLineExport;
      ExportPadString(OPr.BankAcc,17," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString(OPrw.BankAcc,17," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString(ValToString(OPrw.BankVal*100,M40Val,"","",1),14," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString(OPrw.VISerNr,10," ",false);
      ExportPadString(" ",1," ",false);
      tstr = "00" & OPrw.SortCode;
      tstr = tstr & OPrw.rkPayNumber;
      ExportPadString(tstr,10," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString("0",10,"0",false);
      ExportPadString(" ",1," ",false);
//146      
      ExportPadString("AV:" ,3," ",false);      
      tstr = Left(OPrw.Comment,35);
      ExportPadString(tstr,35," ",false);
      M4ILMidstr(OPrw.Comment,tstr,35,35);
      if (nonblank(tstr)) then begin
        ExportPadString("|" ,1," ",false);
        M4ILMidstr(OPrw.Comment,tstr,35,35);
        ExportPadString(tstr,35," ",false);
      end;
      M4ILMidstr(OPrw.Comment,tstr,70,35);
      if (nonblank(tstr)) then begin
        ExportPadString("|" ,1," ",false);
        ExportPadString(tstr,35," ",false);
      end;
      M4ILMidstr(OPrw.Comment,tstr,105,35);
      if (nonblank(tstr)) then begin
        ExportPadString("|" ,1," ",false);
        ExportPadString(tstr,35," ",false);
      end;
      NewLineExport;
      ExportPadString("3",1," ",false);
      ExportPadString(" ",1," ",false);
      ExportPadString("+",1," ",false);
      NewLineExport;
    end;
  end;
  return;
end;

global
procedure DomesticBankCzechABOHeader(record OPVc OPr)
begin
  record CYBlock CYb;
  
  BlockLoad(CYb);
  ExportPadString("UHL1",4," ",false);
  ExportPadString(DateToString(CurrentDate,"DDMMYY"),6," ",false);
  ExportPadString(CYb.CompName,20," ",false);
  ExportPadString("",10," ",false);
  ExportPadString("000",3," ",false);
  ExportPadString("999",3," ",false);
  ExportPadString("",6," ",false);
  ExportPadString("",6," ",false);
  NewLineExport;
  ExportPadString("1",1," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("1502",4," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",6," ",false);
  ExportPadString(OPr.SortCode,4," ",false);
  NewLineExport;
  return;
end;

global
procedure DomesticBankCzechABOFooter()
begin
  ExportPadString("3",1," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("+",1," ",false);
  NewLineExport;
  ExportPadString("3",1," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("+",1," ",false);
  NewLineExport;
  ExportPadString("5",1," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString("+",1," ",false);
  NewLineExport;
  return;
end;

global
procedure BankCzechABO(record RcVc RepSpec,record OPVc OPr)
begin
  LongInt opcnt;
  val opv;
  Boolean testf;

  if (RepSpec.flags[2]==0) then begin
    testf = true;
    if (RepSpec.OnlyUnprntd==0) then begin
      if (OPr.ExportedFlag!=0) then begin testf = false; end;
    end;
    if (testf) then begin
      DomesticBankCzechABO(RepSpec,OPr,opcnt,opv);
    end;
  end else begin
  end;
  return;
end;
