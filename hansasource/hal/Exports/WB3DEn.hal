external function roundmode SetRoundModeD(Integer);
external function val MulWithRateToBase1(var string,Date,val,roundmode);
external procedure ExtractObj(string,var Integer,var string);
external procedure WB3CFindVIAmount(LongInt,Date,var val,var val);

procedure PrintHeaderWB3D(record RcVc RepSpec)
BEGIN
  record CYBlock CompYear;
  string 255 tstr;

  BlockLoad(CompYear);

  ExportString(CompYear.CompName);
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString("");
  ExportString(USetStr(19075));
  NewLine;
  ExportString(USetStr(19076));
  NewLine;
  ExportString(USetStr(19077));
//  ExportPadString("As at Date : ", len("As at Date : ")+1," ", false);
//  ExportPadString(RepSpec.Period2Str,len(RepSpec.Period2Str)+2," ",false);
  NewLine;
  NewLine;
  ExportString(USetStr(19078));
  ExportString(USetStr(19079));
  ExportString(USetStr(19080));
  ExportString(USetStr(19080));
  ExportString(USetStr(19082));
  ExportString(USetStr(19083));
  ExportString(USetStr(19084));
  ExportString(USetStr(19080));
  ExportString(USetStr(19080));
  ExportString(USetStr(19087));
  ExportString(USetStr(19088));
  ExportString(USetStr(19089));
   NewLine;
  ExportString(USetStr(19090));
  ExportString(USetStr(19091));
  ExportString(USetStr(19092));
  ExportString(USetStr(19093));
   ExportString("");
   ExportString("");
  ExportString(USetStr(19094));
  ExportString(USetStr(19095));
  ExportString(USetStr(19096));
  ExportString(USetStr(19097));
  ExportString(USetStr(19097));
  ExportString(USetStr(19098));
   NewLine;
   NewLine    
   RETURN;
END;

global
procedure WB3DEn(record RcVc RepSpec)
BEGIN
  record POCQStatVc POCQr;
  record BaseCurBlock BaseCurBl;
  record VEVc VEr;
  record CountryVc Countryr;  
  boolean testf, TrHs;
  String 255 ostr;
  Integer i,pos;
  val viv,ipv,rat; 
  Date todate;

    BlockLoad(BaseCurBl);
  todate = RepSpec.d1;
  if (blankdate(todate)) then begin
    todate = CurrentDate;
  end;  
  PrintHeaderWB3D(RepSpec);
  pos = 0;
  ExtractObj(RepSpec.f1,pos,ostr);
  while (nonblank(ostr)) begin
    i = 0;
    TrHs = true;
    ResetLoop(POCQr);
    POCQr.SerNr = -1;
    POCQr.Object = ostr;
    while (LoopKey("Object",POCQr,2,TrHs)) begin
     testf = true;
     if (TrHs) then begin 
       if nonblank(ostr) then begin
         if (POCQr.Object<>ostr) then begin
            TrHs = false;
            testf = false;
         end;
       end; 
       if (nonblank(RepSpec.f2)) then begin
         if (RepSpec.f2<>POCQr.POClass) then begin 
          testf = false;
         end;
       end;
       if (nonblank(RepSpec.f3)) then begin
         if (RepSpec.f3<>POCQr.VECode) then begin
           testf = false;
         end;
       end;
       if (RepSpec.flags[2] == 0) then begin
         if (POCQr.Closed<>0) then begin
           testf = false;
         end;
       end;
       if (testf) then begin
         if (i > 0) then begin
           ExportString("");
         end else begin
           ExportString(POCQr.Object);
         end;
         ExportString(POCQr.POClass);
         ExportLongInt(POCQr.SerNr);
         ExportString(POCQr.Comment);
         VEr.Code = POCQr.VECode;  
         if (ReadFirstMain(VEr,1,true)) then begin
           ExportString(VEr.Name);
 //          ExportString(VEr.CountryCode); 
           Countryr.Code = VEr.CountryCode;  
          if (ReadFirstMain(Countryr,1,true)) then begin
             ExportString(Countryr.Comment); 
          end;
           if (VEr.CountryCode =="US") then begin
             ExportString(VEr.RegNr2);
           end else begin
             ExportString("");      
           end;
         end; 
         rat = MulWithRateToBase1(POCQr.CurncyCode,todate,POCQr.Sum,SetRoundModeD(2));
              ExportString(BaseCurBl.BaseCur1);   
//         ExportString(POCQr.CurncyCode);
//         ExportVal(POCQr.Sum,M4Val);
         ExportVal(rat,M4Val);                    
         WB3CFindVIAmount(POCQr.SerNr,todate,viv,ipv);
         ExportVal(MulWithRateToBase1(POCQr.CurncyCode,todate,viv,SetRoundModeD(2)),M4Val);
         ExportVal(MulWithRateToBase1(POCQr.CurncyCode,todate,ipv,SetRoundModeD(2)),M4Val);       
//         ExportVal(viv,M4Val);
//         ExportVal(ipv,M4Val);
         ExportString("");  // expenditure type

         NewLine;      
         i = i + 1;  
       end; //end testf    
     end; //TrHs;
    end; //while
    NewLine;
    ExtractObj(RepSpec.f1,pos,ostr);
  end;
  EndJob;
  RETURN;
END;
