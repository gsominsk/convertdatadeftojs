external procedure ExportWB1BHeader(record RcVc);
external procedure SetWBZeroVals(var val,var val,var val,var val,var val,var val);
external procedure ExportWB1Vals(string,val,val,val,val,val,val);
external procedure ExportWB1Vals10(string,val,val,val,val,val,val,val);
external procedure FindFiscalYear(Date,var Date,var Date);
external procedure FindObjectBalance(record RcVc,Date,string,var val,var val,var val);
external procedure FindobjstrBudget(Date,Date,Date,Date,Integer,string,var val,var val,var val);
external procedure AddWBTotVals(val,val,val,val,val,val,var val,var val,var val,var val,var val,var val);
external function Boolean CheckWBobjstreq(string,string);
external procedure GetObjstrBudget(string,var val);
external procedure AddWBTotVals1(val,val,val,val,val,val,val,var val,var val,var val,var val,var val,var val,var val);

procedure FindobjstrBalance(record RcVc RepSpec,Date fsd,Date fed,string objstr,var val ocv,var val oyv,var val oacv)
BEGIN
  record TRVc TRr;
  row TRVc TRrw;
  Integer i,rwcnt;
  Boolean TrHs,test;
  
  TrHs = true;
  while (LoopKey("TransDate",TRr,1,TrHs)) begin
    if (TRr.TransDate>RepSpec.sEndDate) then begin
      TrHs = false;
    end;
  
    if (TrHs) then begin
      rwcnt = MatRowCnt(TRr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(TRr,i,TRrw);
    test = true;        
    if (TRrw.stp!=1) then begin test = false; end;  
    if (TRrw.ovst==1) then begin test = false; end;      
    if (test) then begin
        if (CheckWBobjstreq(TRrw.Objects,objstr)) then begin
          if (RepSpec.basecurncy==0) then begin
            oacv = oacv + TRRw.DebVal;
            oacv = oacv - TRRw.CredVal;
          end else begin
            oacv = oacv + TRRw.DebVal2;
            oacv = oacv - TRRw.CredVal2;
          end;
          if (DateInRange(TRr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate))  then begin
            if (RepSpec.basecurncy==0) then begin
              ocv = ocv + TRRw.DebVal;
              ocv = ocv - TRRw.CredVal;            
            end else begin
              ocv = ocv + TRRw.DebVal2;
              ocv = ocv - TRRw.CredVal2;
            end;              
          end;
          if (DateInRange(TRr.TransDate,fsd,fed))  then begin
            if (RepSpec.basecurncy==0) then begin
              oyv = oyv + TRRw.DebVal;
              oyv = oyv - TRRw.CredVal;            
            end else begin
              oyv = oyv + TRRw.DebVal2;
              oyv = oyv - TRRw.CredVal2;            
            end;              
          end;
          end;          
        end;
      end;
    end;
  end;  
  RETURN;
END;
    
global
procedure WB1BEn(record RcVc RepSpec)
BEGIN
  record ObjVc Objr;
  record ObjVc Obj2r;
  Boolean TrHs,TrHs2,testf;
  Date fsd,fed;
  val ocv,oyv,oacv,bcv,byv,bacv;
  string 255 objstr;
  string 255 strout;
  val tocv,toyv,toacv,tbcv,tbyv,tbacv,tb4,b4,tbb4;
  
  ExportWB1BHeader(RepSpec);
  FindFiscalYear(RepSpec.sStartDate,fsd,fed);
  if (DateInRange(RepSpec.sEndDate,fsd,fed)==false) then begin goto L99; end;
  
  TrHs = true;
  Objr.OTCode = RepSpec.ObjType;
  while (LoopKey("OTCode",Objr,1,TrHs)) begin
    TrHs2 = true;
    if (Objr.OTCode<>RepSpec.ObjType) then begin
      TrHs = false;
      TrHs2 = false;
    end;
    tb4 = 0;
    if (TrHs) then begin
      SetWBZeroVals(ocv,oyv,oacv,bcv,byv,bacv);
      FindObjectBalance(RepSpec,fsd,Objr.Code,ocv,oyv,oacv); 
      FindobjstrBudget(RepSpec.sStartDate,RepSpec.sEndDate,fsd,fed,RepSpec.basecurncy,Objr.Code,bcv,byv,bacv);
      strout = Objr.Code & ". " & Objr.Comment;
      GetObjstrBudget(Objr.Code,b4);
      ExportWB1Vals10(strout,ocv,oyv,oacv,bcv,byv,bacv,b4);
      AddWBTotVals1(ocv,oyv,oacv,bcv,byv,bacv,b4,tocv,toyv,toacv,tbcv,tbyv,tbacv,tb4);
      tbb4 = tbb4 + tb4;
    end;
    ResetLoop(Obj2r);
    Obj2r.Code = "";
    Obj2r.OTCode = RepSpec.FirstAcc;
    while (LoopKey("OTCode",Obj2r,1,TrHs2)) begin
      if (Obj2r.OTCode<>RepSpec.FirstAcc) then begin TrHs2 = false; end;
      if ((TrHs2) and (Objr.Code<>Obj2r.Code)) then begin
        objstr = Objr.Code & "," & Obj2r.Code;
        SetWBZeroVals(ocv,oyv,oacv,bcv,byv,bacv,);
        FindobjstrBalance(RepSpec,fsd,fed,objstr,ocv,oyv,oacv); 
        GetObjstrBudget(objstr,b4);
        FindobjstrBudget(RepSpec.sStartDate,RepSpec.sEndDate,fsd,fed,RepSpec.basecurncy,objstr,bcv,byv,bacv);        
        strout = Obj2r.Code & ". " & Obj2r.Comment;
        ExportWB1Vals10(strout,ocv,oyv,oacv,bcv,byv,bacv,b4);        
      end;
    end;    
    NewLine;
  end;
  ExportWB1Vals10(USetStr(18901),tocv,toyv,toacv,tbcv,tbyv,tbacv,tbb4);          
L99:;  
  RETURN;
END;
