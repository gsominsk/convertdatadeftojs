
external function val NumberOfStayDays(Date,Date,Time,Time,Integer);
external function Boolean IsCancelState(string);
external Function Val GetCustAccount(LongInt,String,Boolean,Boolean);
external Function Val GetDownGuest(Record JobVc);
external function boolean JobJourSelect(Record RcVc,Record JobVc,var boolean);


global
procedure JobJourEn(record RcVc RepSpec)
begin
  Integer i,DaysStay; 
  record JobVc Jobr;
  record CUVc CUr;   
  Boolean TsHr,Skip,tflag;
  String 50 tstr;
  String 20 mykey;
  String 100 HdrStr;
  Val Monto,JobSaldo,DownPaid,tMonto;
   
  ExportString(USetStr(9986));
  ExportString(USetStr(9991));
  ExportString(USetStr(9992));
  ExportString(USetStr(9991));
  ExportString(USetStr(11157));
  ExportString(USetStr(9993));
  ExportString(USetStr(9984));
  ExportString(USetStr(9988));
  ExportString(USetStr(12063));
  ExportString(USetStr(12066));
  NewLine;

  if (RepSpec.flags[0]==0) then begin
    Jobr.RegDate = RepSpec.sStartDate;
    mykey = "RegDate";
  end else begin
    Jobr.TransDate = RepSpec.sStartDate;
    mykey = "TransDate";
  end;

  TsHr = true;  
  while (LoopKey(mykey,Jobr,1,TsHr)) begin
 
    If JobJourSelect(RepSpec,Jobr,TsHr) then begin

      Usertrace(Jobr.SerNr,0);

      DaysStay = NumberOfStayDays(Jobr.TransDate,Jobr.EndDate,Jobr.StartTime,Jobr.EndTime,1);
      ExportString(Jobr.SerNr);
      ExportString(Jobr.CUName);
      ExportString(Jobr.BookOrigin);
      ExportString(Jobr.Source);
      CUr.Code = Jobr.Source;
      if readfirstmain(CUr,1,true) then begin
        ExportString(CUr.Name);
      end;
      ExportDate(Jobr.TransDate);
      ExportDate(Jobr.EndDate);
      ExportString(Jobr.ResStatus);
      DownPaid = GetDownGuest(Jobr);
      if (RepSpec.flags[3]==1) then begin tflag = false; end else begin tflag = true; end; //LO40
      Monto    = GetCustAccount(Jobr.SerNr,Jobr.Source,tflag,false); 
      ExportVal(Monto,M4Val);
      ExportString(DaysStay);
      ExportDate(Jobr.BookDate);
      EndFormat;
      tMonto = tMonto + Monto;
    end;
  end;
  return;
end;

