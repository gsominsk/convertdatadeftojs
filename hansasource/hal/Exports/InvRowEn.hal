procedure Out1InvRow(record IVVc IVp,Integer i,string fromitem,string toitem,record RcVc RepSpec)
begin
  val quant,sum;
  record INVc INr;
  row INVc INrw;
  row IVVc IVrw;
  string 255 tstr,t2;
  Boolean negf,testf;
  Integer inrows,j;
    
    MatRowGet(IVp,i,IVrw);
    negf = false;
    if (IVrw.stp!=kInvoiceRowTypeCorrection) then begin
      if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin negf = true; end;
    end;
    if (RepSpec.ArtMode==0) then begin
        testf = true;
        if ((IVrw.stp!=kInvoiceRowTypeCredit) and (IVrw.stp<>4)) then begin
            if (nonblank(fromitem)) then begin
              if (IVrw.ArtCode<fromitem) then begin testf = false; end;
            end;  
            if (nonblank(toitem)) then begin
              if (IVrw.ArtCode>toitem) then begin testf = false; end;
            end;  
            if (nonblank(RepSpec.AccStr)) then begin
              INr.Code=IVrw.ArtCode;
              if (ReadFirstMain(INr,1,true)) then begin
                if (RepSpec.AccStr<>INr.Group) then begin testf = false; end;
              end;  
            end;
            if (testf) then begin
              quant = IVrw.Quant;
              sum = IVrw.Sum;
              if (negf) then begin
                quant = 0 - quant;
                sum   = 0 - sum;
              end;
              ExportLongInt(IVp.SerNr);
              ExportDate(IVp.InvDate);
              ExportString(IVp.CustCode);
              ExportString(IVp.Addr0);
              ExportLongInt(IVp.InvType);
              ExportString(IVrw.ArtCode);
              ExportVal(quant,M4UVal);
              ExportString(IVrw.Spec);
              if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin
                ExportVal((IVrw.Price*-1),M423Val);
              end else begin
               ExportVal(IVrw.Price,M423Val);
              end;
              ExportVal(sum,M423Val);
              ExportVal(IVrw.vRebate,M41Val);
              ExportString(IVrw.SalesAcc);
              ExportString(IVp.SalesMan);
              if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin
                ExportVal((IVrw.rowGP*-1),M4Val);
              end else begin
                ExportVal(IVrw.rowGP,M4Val);
              end;
              ExportString(IVrw.SerialNr);
              ExportString(IVrw.Recepy);
              ExportString(IVrw.VATCode);
              ExportString(IVp.CurncyCode);
              ExportVal(IVp.FrRate,M4Rate);
              ExportVal(IVp.ToRateB1,M4Rate);
              ExportVal(IVp.ToRateB2,M4Rate);
              ExportVal(IVp.BaseRate1,M4Rate);
              ExportVal(IVp.BaseRate2,M4Rate);
              ExportString(IVrw.Objects);
              ExportString(IVp.OrgCust);
              NewLine;
            end;
        end;
    end;
    if (RepSpec.ArtMode==1) then begin
        testf = true;
        if ((IVrw.stp<>3) and (IVrw.stp<>4)) then begin
            if (nonblank(fromitem)) then begin
              if (IVrw.ArtCode<fromitem) then begin testf = false; end;
            end;  
            if (nonblank(toitem)) then begin
              if (IVrw.ArtCode<>toitem) then begin testf = false; end;
            end;  
            tstr="";
            INr.Code=IVrw.ArtCode;
            t2="";
            if (ReadFirstMain(INr,1,true)) then begin          
              tstr=INr.Group;
              inrows = MatRowCnt(INr);
              for (j=0;j<inrows;j=j+1) begin
                MatRowGet(INr,j,INrw);
                if (INrw.LangCode=="RUV") then begin
                  t2=INrw.Text;
                end;  
              end;
            end;
            if (nonblank(RepSpec.AccStr)) then begin
              if (RepSpec.AccStr<>tstr) then begin testf = false; end;
            end;  
            if (blank(t2)) then begin testf = false; end;
            if (testf) then begin
              quant = IVrw.Quant;
              if (negf) then begin
                quant=0-quant;
              end;
              if (blank(IVp.ShipAddr0)) then begin
                ExportString(IVp.Addr0);
                ExportString(IVp.Addr1);
                ExportString(IVp.Addr2);
                ExportString(IVp.VATNr);
              end else begin
                ExportString(IVp.ShipAddr0);
                ExportString(IVp.ShipAddr1);
                ExportString(IVp.ShipAddr2);
                ExportString(IVp.ShipAddr3);
              end;
              ExportLongInt(IVp.SerNr);
              ExportDate(IVp.InvDate);
              ExportString(IVp.CustCode);
              ExportString(IVp.Addr0);
              ExportString(IVp.SalesMan);
              ExportVal(quant,M4UVal);
              ExportString(IVrw.ArtCode);
              ExportString(IVrw.Spec);
              ExportString(t2);
              NewLine;
            end;
        end;
    end;
    return;
end;


procedure OutInvRowsComp(var record IVVc IVp,string fromitem,string toitem,record RcVc RepSpec)
begin
  Integer i,rwcnt;
  row IVVc IVrw;
  record INVc INr;
  record RecVc Recr;
  Integer j,rwcnt2;
  row RecVc Recrw;
  val orgqty;
  Boolean first;
  
  rwcnt = MatRowCnt(IVp);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(IVp,i,IVrw);
    if (blank(IVrw.Recepy)) then begin
      Out1InvRow(IVp,i,fromitem,toitem,RepSpec);
    end else begin
      Recr.Code=IVrw.Recepy;
      if (ReadFirstMain(Recr,1,true)) then begin
        orgqty=IVrw.Quant;
        rwcnt2 = MatRowCnt(Recr);
        first = true;
        IVrw.Recepy="";
        for (j=0;j<rwcnt2;j=j+1) begin
          MatRowGet(Recr,j,Recrw);
          if (Recrw.InQty>0) then begin
            IVrw.ArtCode=Recrw.Item;
            IVrw.Quant = orgqty*Recrw.InQty;
            if (first) then begin
              first = false;
            end else begin
              IVrw.Sum=0;
              IVrw.rowGP=0;
              IVrw.BasePrice=0;
              IVrw.Price=0;
              IVrw.vRebate=0;
            end;
            MatRowPut(IVp,i,IVrw);
            Out1InvRow(IVp,i,fromitem,toitem,RepSpec);
          end;
        end;
      end else begin
        Out1InvRow(IVp,i,fromitem,toitem,RepSpec);
      end;
    end;
  end;
  return;
end;

procedure OutInvRows(record IVVc IVp,string fromitem,string toitem,record RcVc RepSpec)
begin
  record INVc INr;
  Integer i,rwcnt;
  Boolean negf,tmpf;
  
  negf = false;
  tmpf = true;
  if (RepSpec.flags[9]==1) then begin
    OutInvRowsComp(IVp,fromitem,toitem,RepSpec);
    tmpf = false;
  end;
  if (tmpf) then begin
    if (IVp.InvType==kInvoiceTypeCredit or IVp.InvType==kInvoiceTypeCreditSpecialSales) then begin negf = true; end;
    rwcnt = MatRowCnt(IVp);
    for (i = 0 ; i<rwcnt ;i=i+1) begin
      Out1InvRow(IVp,i,fromitem,toitem,RepSpec);
    end;
  end;
  return;
end;

global
procedure InvRowEn(record RcVc RepSpec)
begin
  record IVVc IVr;
  Boolean TrHs;
  string 255 fromcust,tocust;
  string 255 fromitem,toitem;
  Boolean testf,tmpf;
  LongInt afr,ato;

  fromitem = FirstInRange(RepSpec.f3,20);
  toitem = LastInRange(RepSpec.f3,20);
  afr = FirstInRange(RepSpec.f1,20);
  ato = LastInRange(RepSpec.f1,20);
  fromcust = FirstInRange(RepSpec.f2,20);
  tocust = LastInRange(RepSpec.f2,20);
  IVr.SerNr = afr;
  TrHs = true;
  while (LoopMain(IVr,1,TrHs)) begin
    if (ato<>-1) then begin
       if (IVr.SerNr>ato) then begin TrHs = false; end;
    end;      
    if (TrHs) then begin
      testf = true;
      if (DateInRange(IVr.TransDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin
        testf = false;
      end;  
      if (nonblank(RepSpec.f2)) then begin
        if ((IVr.CustCode<fromcust) or (IVr.CustCode>tocust)) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.Stext)) then begin
        if (RepSpec.Stext<>IVr.ShipMode) then begin testf = false; end;
      end;  
      if (IVr.OKFlag==0) then begin
        if (RepSpec.flags[1]==0) then begin testf = false; end;
      end;  
      if (IVr.OKFlag<>0) then begin
        if (RepSpec.flags[2]==0) then begin testf = false; end;
      end;  
      tmpf = true;
      if (IVr.InvType==kInvoiceTypeCash or IVr.InvType==kInvoiceTypeCashInvoiceReceiptPRT) then begin/* cash */
        if (RepSpec.flags[4]==0) then begin testf = false; end;
        tmpf = false;
      end;
      if (IVr.InvType==kInvoiceTypeCredit or IVr.InvType==kInvoiceTypeCreditSpecialSales) then begin /* credit */
        if (RepSpec.flags[5]==0) then begin testf = false; end;
        tmpf = false;
      end;
      if (IVr.InvType==kInvoiceTypeInterest) then begin/* interest */
        if (RepSpec.flags[6]==0) then begin testf = false; end;
        tmpf = false;
      end;
      if (tmpf) then begin
        if (RepSpec.flags[3]==0) then begin testf = false; end;
      end;
      if (IVr.Invalid<>0) then begin testf = false; end;
      if (testf) then begin
        OutInvRows(IVr,fromitem,toitem,RepSpec);
      end;  
//      NewLine;
      UserTrace(IVr.SerNr,2);
    end;
  end;
  NewLine;
  return;
end;
