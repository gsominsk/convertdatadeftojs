external procedure SplitAddress(string,var string,var string);
external procedure FinnishBankVal(var string,val);
external function LongInt DateDiff(Date,Date);
external procedure M4PadString(string,Integer,string,Boolean,var string);

procedure InvInkassoNorExpIV(record IVVc IVr,record ARVc ARr,record CYBlock CYb,var LongInt cnt)
BEGIN
  row IVVc IVrw;
  Integer i,rwcnt;
  string 255 postcode,tstr;
  record CUVc CUr;
  
  CUr.Code = IVr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin end;
  ExportPadString("A",1," ",false);
  ExportPadString(CUr.LangCode,6,"0",true);
  ExportPadString(IVr.CustCode,20," ",false);
  ExportPadString("",30," ",false);
  ExportPadString(IVr.Addr0,30," ",false);
  ExportPadString(IVr.Addr1,30," ",false);
  ExportPadString(IVr.Addr2,30," ",false);
  postcode = FirstInRange(IVr.Addr3,10);
  tstr = LastInRange(IVr.Addr3,100);
  ExportPadString(StripNonDigits(postcode),7," ",false);
  ExportPadString(IVr.VATNr,13," ",false);
  ExportPadString(IVr.Phone,20," ",false);
  ExportPadString("",8," ",false);
  ExportPadString("",2," ",false);
  if (CUr.CustType==0) then begin
    ExportPadString("N",1," ",false);
  end else begin
    ExportPadString("P",1," ",false);
  end;
  ExportPadString("",30," ",false);
  ExportPadString("",14," ",false);
  ExportPadString("",1," ",false);
  ExportPadString("",2," ",false);
  ExportPadString(CYb.emailAddr,39," ",false);
  ExportPadString("",8," ",false);
  ExportPadString("",30," ",false);
  ExportPadString("",2," ",false);
  ExportPadString("",13," ",false);
  ExportPadString("",5," ",false);
  ExportPadString("",7," ",false);
  ExportPadString("",1," ",false);
  ExportPadString("",8," ",false);
  ExportPadString("",3," ",false);
  ExportPadString(chr(13) & chr(10),2,"",false);

  ExportPadString("S",1," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(CUr.LangCode,6,"0",true);
  ExportPadString(" ",24," ",false);
  ExportPadString(IVr.SerNr,20," ",false);
  ExportPadString(DateToString(IVr.TransDate,"YYYYMMDD"),8," ",false);
  ExportPadString(IVr.PayDeal,2," ",false);
  ExportPadString(" ",1," ",false);
  ExportPadString(" ",4," ",false);
  ExportPadString(" ",8," ",false);
  FinnishBankVal(tstr,IVr.Sum4);
  ExportPadString(tstr,10,"0",true);
  ExportPadString(tstr,10,"0",true);
  ExportPadString(" ",10," ",false);
  ExportPadString(DateToString(IVr.PayDate,"YYYYMMDD"),8," ",false);
  ExportPadString("",8," ",false);
  FinnishBankVal(tstr,IVr.Sum3);
  ExportPadString(tstr,10,"0",true);
  ExportPadString(IVr.CurncyCode,3," ",false);
  ExportPadString(chr(13) & chr(10),2,"",false);
  RETURN;    
END;       

global 
updating procedure InvInkassoEn(record RcVc RepSpec)
BEGIN
  record BankFileBlock bfr;
  record ARVc ARr;
  record IVVc IVr;
  record IVVc oldIVr;
  Boolean TrHs,testf;
  LongInt frinv,toinv;
  string 20 frcu,tocu;
  Date curdate;
  Boolean exportedf;
  LongInt cnt;
  record CYBlock CYb;
  string 255 keystr;
  Integer keys;

  BlockLoad(CYb);
  BlockLoad(bfr);
  curdate = CurrentDate;
  frinv = FirstInRange(RepSpec.f1,10);
  toinv = LastInRange(RepSpec.f1,10);
  frcu = FirstInRange(RepSpec.f2,20);
  tocu = LastInRange(RepSpec.f2,20);
  TrHs = true;
  if (nonblank(RepSpec.f1)) then begin
    keystr = "InvoiceNr";
    keys = 1;
  end else begin
    keystr = "DueDate";
    keys = 2;
    ARr.DueDate = RepSpec.sStartDate;
  end;
  ARr.InvoiceNr = frinv;
  while (LoopKey(keystr,ARr,keys,TrHs)) begin
    if (nonblank(RepSpec.f1)) then begin
      if (ARr.InvoiceNr>toinv) then begin TrHs = false; end;
    end else begin
      if (ARr.DueDate>RepSpec.sEndDate) then begin TrHs = false; end;
    end;
    if (TrHs) then begin
      testf = true;
      if (nonblank(RepSpec.f1)) then begin
        if (DateInRange(ARr.DueDate,RepSpec.sStartDate,RepSpec.sEndDate)==false) then begin testf = false; end;
      end;
      if (nonblank(RepSpec.f1)) then begin
        if (ARr.InvoiceNr>toinv) then begin testf = false; end;
        if (ARr.InvoiceNr<frinv) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.f2)) then begin
        if ((ARr.CustCode<frcu) or (ARr.CustCode>tocu)) then begin testf = false; end;
      end;  
      if (nonblank(RepSpec.CurncyCode)) then begin
        if (ARr.ARCurncyCode!=RepSpec.CurncyCode) then begin testf = false; end;
      end;        
      if (testf) then begin
        IVr.SerNr = ARr.InvoiceNr;
        if (ReadFirstMain(IVr,1,true)) then begin end;
        if (nonblank(RepSpec.ObjStr)) then begin
          if (SetInSet(RepSpec.ObjStr,IVr.Objects)==false) then begin testf = false; end;
        end;  
      end;  
      if (IVr.LastRemndr==99) then begin testf = false; end;
      if (RepSpec.long1!=-1) then begin
        if (IVr.LastRemndr!=RepSpec.long1) then begin testf = false; end;
      end;  
      if (RepSpec.long2!=-1) then begin
        if (DateDiff(curdate,IVr.PayDate)<RepSpec.long2) then begin testf = false; end;
      end;  
      if (testf) then begin
        exportedf = false;
        if ((bfr.Bank==9) or (bfr.Bank==10) or (bfr.Bank==11) or (bfr.Bank==12) or (bfr.Bank==35)) then begin
          InvInkassoNorExpIV(IVr,ARr,CYb,cnt);
          exportedf = true;
        end;
        if (exportedf) then begin
          RecordCopy(oldIVr,IVr);
          IVr.LastRemndr = IVr.LastRemndr + 1;
          if (RecordUpdate(oldIVr,IVr,false)==0) then begin end;
        end;
        UserTrace(ARr.InvoiceNr,M4Long);
      end;    
    end;
  end;
  RETURN;
END;
