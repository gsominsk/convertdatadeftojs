/* Bankfile for Estonia Microbanker*/

function string 255 GetSpecStr(string whichone)
begin
  string 255 res;
  
  res = "";
  if (whichone=="MICROBANKER") then begin
    res = "MICROBANKER.txt"; // Write proper code
  end;
  GetSpecStr = res;
  return;
end;

global
procedure BankExpEstonia0(record OPVc OPr,String lastacc)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  record PMBlock PMr;
  record OPTblock OPTr;
  row OPVC OPrw;
  row PMBlock PMrw;
  Integer i,j;
  Integer rwcnt,PMrrwcnt;
  LongInt n1,n2,n3,n4,v;
  LongInt fd,nd;
  string 255 tstr,t2;
  boolean found;

  BlockLoad(CompYear);
  BlockLoad(OPTr);
  CreateFile(OPTr.ExpPath & GetSpecStr("MICROBANKER")); // Write this in HAL
  rwcnt = MatRowCnt(OPr);
  for (i = 0; i<rwcnt; i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    VEr.Code = OPrw.VECode;
    found = ReadFirstMain(VEr,1,true);

    BlockLoad(PMr);
    PMrrwcnt = MatRowCnt(PMr);
    for (j = 0; j<PMrrwcnt; j=j+1) begin
      MatRowGet(PMr,j,PMrw);
      if PMrw.Code==OPr.PayMode then begin
        ExportPadString("To: " & PMrw.BankName,len("To: " & PMrw.BankName)," ",false);
        NewLine;
      end;
    end;  
    ExportPadString("From: " & CompYear.CompName,len("From: " & CompYear.CompName)," ",false);
    NewLine;
/* No separaters between month and date and year */
    ExportPadString("Date: " & DateToString(OPr.TransDate,"DD-MMM-YY"),len("Date: " & DateToString(OPr.TransDate,"DD-MMM-YY"))," ",false);
    NewLine;
    ExportPadString("Subject: KODUMAINE MAKSEKORRALDUS (1)",len("Subject: KODUMAINE MAKSEKORRALDUS (1)")," ",false);
    NewLine;
    NewLine;
    ExportPadString("::1 EEK PAYMENT",len("::1 EEK PAYMENT")," ",false);
    NewLine;
    ExportPadString(":1 REFERENCE: " & OPr.SerNr,len(":1 REFERENCE: " & OPr.SerNr)," ",false);
    NewLine;
    tstr = ValToString(OPrw.RecVal,M4Val,"","",0);
    nd = len(tstr);
    fd = left(tstr,1);
    n1 = OPTr.MicroTKey1;
    n2 = OPTr.MicroTKey2;
    n3 = OPTr.MicroTKey3;
    n4 = OPTr.MicroTKey4;
    v = n1 + (n2*nd)+(n3*fd)+n4;
    ExportPadString(":2 TEST: " & v,len(":2 TEST: " & v)," ",false);
    NewLine;
    ExportPadString(":3 DATE: " & DateToString(OPr.TransDate,"DD-MMM-YY"),len(":3 DATE: " & DateToString(OPr.TransDate,"DD-MMM-YY"))," ",false);
    NewLine;
    ExportPadString(":4 VALUE DATE: " & DateToString(OPr.TransDate,"DD-MMM-YY"),len(":4 VALUE DATE: " & DateToString(OPr.TransDate,"DD-MMM-YY"))," ",false);
    NewLine;
    ExportPadString(":5 FROM ACCOUNT NO: " & OPr.BankAcc,len(":5 FROM ACCOUNT NO: " & OPr.BankAcc)," ",false);
    NewLine;
/* no sepatator between thousends */
    ExportPadString(":6 AMOUNT: EEK " & ValToString(OPrw.RecVal,M4Val,",",".",0),len(":6 AMOUNT: EEK " & ValToString(OPrw.RecVal,M4Val,",",".",0))," ",false);
    NewLine;
    ExportPadString(":7 BY ORDER OF: " & CompYear.CompName,len(":7 BY ORDER OF: " & CompYear.CompName)," ",false);
    NewLine;
    ExportPadString(":33 COMPANY REGISTRATION CODE: " & CompYear.OrgNr,len(":33 COMPANY REGISTRATION CODE: " & CompYear.OrgNr)," ",false);
    NewLine;
    ExportPadString(":8 BENEFICIARY: " & VEr.Name,len(":8 BENEFICIARY: " & VEr.Name)," ",false);
    NewLine;
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true)) then begin
      ExportPadString(":10 BENEFICIARYS BANK: " & Bankr.Name,len(":10 BENEFICIARYS BANK: " & Bankr.Name)," ",false);
      NewLine;
      ExportPadString(":12 BENEFICIARYS BANK CODE:" & Bankr.Nr1,len(":12 BENEFICIARYS BANK CODE:" & Bankr.Nr1)," ",false);
      NewLine;
    end;
    ExportPadString(":9 BENEFICIARYS ACCOUNT NO: " & OPrw.BankAcc,len(":9 BENEFICIARYS ACCOUNT NO: " & OPrw.BankAcc)," ",false);
    NewLine;
    ExportPadString(":11 DETAILS OF PAYMENT: " & OPrw.Comment,len(":11 DETAILS OF PAYMENT: " & OPrw.Comment)," ",false);
    NewLine;
    VIr.SerNr = OPrw.VISerNr;
    found = ReadFirstMain(VIr,1,true);
    ExportPadString(":24 TRANSACTION ID: " & VIr.RefStr,len(":24 TRANSACTION ID: " & VIr.RefStr)," ",false);
    NewLine;
    ExportPadString("::0",len("::0")," ",false);
    NewLine;
    NewLine;
    ExportPadString(lastacc,len(lastacc)," ",false);
    NewLine;
  end;
  CloseFile;
  return;
end;

global
procedure BankExpEstonia0_ToArea(record OPVc OPr,String lastacc,var Area a)
begin
  record BankVc Bankr;
  record CYBlock CompYear;
  record CUVc VEr;
  record VIVc VIr;
  record PMBlock PMr;
  row OPVC OPrw;
  row PMBlock PMrw;
  Integer i,j;
  Integer rwcnt,PMrrwcnt;
  LongInt n1,n2,n3,n4,v;
  LongInt fd,nd;
  string 255 tstr,t2;
  boolean found;
  record OPTblock OPTr;

  AddTextToArea("<sampo>",a);
  BlockLoad(OPTr);
  BlockLoad(CompYear);
  rwcnt = MatRowCnt(OPr);
  for (i = 0; i<rwcnt; i=i+1) begin
    MatRowGet(OPr,i,OPrw);
    AddTextToArea("<sampopayment>",a);
    VEr.Code = OPrw.VECode;
    found = ReadFirstMain(VEr,1,true);

    BlockLoad(PMr);
    PMrrwcnt = MatRowCnt(PMr);
    for (j = 0; j<PMrrwcnt; j=j+1) begin
      MatRowGet(PMr,j,PMrw);
      if PMrw.Code==OPr.PayMode then begin
        AddTextToArea("<bankname>" & "To: " & PMrw.BankName & "</bankname>",a);
        j = PMrrwcnt;
      end;
    end;  
    AddTextToArea("<ourcompname>" & "From: " & CompYear.CompName & "</ourcompname>",a);
// No separaters between month and date and year 
    AddTextToArea("<transdate>" & "Date: " & DateToString(OPr.TransDate,"DD-MMM-YY") & "</transdate>",a);
    AddTextToArea("<subject>" & "Subject: KODUMAINE MAKSEKORRALDUS (1)" & "</subject>",a);
    AddTextToArea("<curency>" & "::1 EEK PAYMENT" & "</curency>" ,a);
    AddTextToArea("<reference>" & ":1 REFERENCE: " & OPr.SerNr & "</reference>",a);
    tstr = ValToString(OPrw.RecVal,M4Val,"","",0);
    nd = len(tstr);
    fd = left(tstr,1);
    n1 = OPTr.MicroTKey1;
    n2 = OPTr.MicroTKey2;
    n3 = OPTr.MicroTKey3;
    n4 = OPTr.MicroTKey4;
    v = n1 + (n2*nd)+(n3*fd)+n4;
    AddTextToArea("<microkey>" & ":2 TEST: " & v & "</microkey>",a);
    AddTextToArea("<transdate2>" & ":3 DATE: " & DateToString(OPr.TransDate,"DD-MMM-YY") & "</transdate2>",a);
    AddTextToArea("<valuedate>" & ":4 VALUE DATE: " & DateToString(OPr.TransDate,"DD-MMM-YY") & "</valuedate>",a);
    AddTextToArea("<ourbankacc>" & ":5 FROM ACCOUNT NO: " & OPr.BankAcc & "</ourbankacc>",a);
// no sepatator between thousends 
    AddTextToArea("<recval>" & ":6 AMOUNT: EEK " & ValToString(OPrw.RecVal,M4Val,",",".",0) & "</recval>",a);
    AddTextToArea("<ourcompname2>" & ":7 BY ORDER OF: " & CompYear.CompName & "</ourcompname2>",a);
    AddTextToArea("<ourorgnr>" & ":33 COMPANY REGISTRATION CODE: " & CompYear.OrgNr & "</ourorgnr>",a);
    AddTextToArea("<beneficname>" & ":8 BENEFICIARY: " & VEr.Name & "</beneficname>",a);
    Bankr.Code = VEr.AccOperator;
    if (ReadFirstMain(Bankr,1,true)) then begin
      AddTextToArea("<beneficbankname>" & ":10 BENEFICIARYS BANK: " & Bankr.Name & "</beneficbankname>",a);
      AddTextToArea("<beneficbankcode>" & ":12 BENEFICIARYS BANK CODE:" & Bankr.Nr1 & "</beneficbankcode>",a);
    end;
    AddTextToArea("<beneficbankacc>" & ":9 BENEFICIARYS ACCOUNT NO: " & OPrw.BankAcc & "</beneficbankacc>",a);
    AddTextToArea("<paydetails>" & ":11 DETAILS OF PAYMENT: " & OPrw.Comment & "</paydetails>",a);
    VIr.SerNr = OPrw.VISerNr;
    found = ReadFirstMain(VIr,1,true);
    AddTextToArea("<transid>" & ":24 TRANSACTION ID: " & VIr.RefStr & "</transid>",a);
    AddTextToArea("<extra>" & "::0" & "</extra>",a);
    AddTextToArea("<lastacc>" & lastacc & "</lastacc>",a);
    AddTextToArea("</sampopayment>",a);
  end;
  AddTextToArea("</sampo>",a);
  return;
end;
