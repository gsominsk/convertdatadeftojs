external procedure GreyFieldsList();
external procedure LoadWindowTags();

procedure AddHobCustFiles()
begin
  integer i,cnt;

  cnt = CountFilesInDir("hobcust");
  for (i=0;i<cnt;i=i+1) begin
    SourceFile("hobcust/" & GetFileNameInDir("hobcust",i),kCodeLevelSystem);
  end;
  
  return;
end;

procedure AddCountrySpecificFiles()
begin
  if (FileExists(HobFolder & "csruscli.hob")) then begin
    SourceFile(HobFolder & "csruscli.hob",kCodeLevelCountry);
  end;
  if (FileExists(HobFolder & "csrussvr.hob")) then begin
    SourceFile(HobFolder & "csrussvr.hob",kCodeLevelCountry);
  end;
  return;
end;

procedure AddJewelleryFiles()
begin
  if (FileExists(HobFolder & "jwlcli.hob")) then begin
    SourceFile(HobFolder & "jwlcli.hob",kCodeLevelIndustry);
  end;
  if (FileExists(HobFolder & "jwlsvr.hob")) then begin
    SourceFile(HobFolder & "jwlsvr.hob",kCodeLevelIndustry);
  end;
  return;
end;

procedure FindAndActiveLanguage(string langcode,string filenameext)
begin
  string 255 filename;
  
  filename = HobFolder & "su" & filenameext & ".hob";
  if (FileExists(filename)) then begin
    AddLanguageLazily(filename,langcode,filenameext);
  end else begin
    if (GuiType==kGuiiPhone) then begin
      filename = "hob/su" & filenameext & ".hob";
      if (FileExists(filename)) then begin
        AddLanguageLazily(filename,langcode,filenameext);
      end;
    end;
  end;
  
  return;
end;

begin
  SourceFile(HobFolder & "server.hob",0);
  SourceFile(HobFolder & "client.hob",0);
  SourceFile(HobFolder & "common.hob",0);
  SourceFile(HobFolder & "clcrm.hob",0);
  SourceFile(HobFolder & "internal0.hob",0);
  SourceFile(HobFolder & "internal.hob",0);

  SourceFile(HobFolder & "serverloc.hob",0);
  SourceFile(HobFolder & "clientloc.hob",0);
  SourceFile(HobFolder & "commonloc.hob",0);
  
  SourceFile(HobFolder & "suengjwl.hob",0);
  SourceFile(HobFolder & "jwlcleng.hob",0);
  SourceFile(HobFolder & "jwlsvr.hob",0);
  SourceFile(HobFolder & "jwlcli.hob",0);

  SourceFile(HobFolder & "hmsueng.hob",0);
  SourceFile(HobFolder & "hmcleng.hob",0);
  SourceFile(HobFolder & "hmclient.hob",0);
  SourceFile(HobFolder & "hmclient0.hob",0);
  SourceFile(HobFolder & "hmserver.hob",0);
  SourceFile(HobFolder & "hmserver0.hob",0);

  LinkHOB(HobFolder & "server.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "client.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "common.hob",kCodeLevelSystem);

  LinkHOB(HobFolder & "serverloc.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "clientloc.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "commonloc.hob",kCodeLevelSystem);

  LinkHOB(HobFolder & "clcrm.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "internal0.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "internal.hob",kCodeLevelSite);

  LinkHOB(HobFolder & "jwlcli.hob",kCodeLevelSite);
  LinkHOB(HobFolder & "jwlsvr.hob",kCodeLevelSite);
  LinkHOB(HobFolder & "suengjwl.hob",kCodeLevelSite);
  LinkHOB(HobFolder & "jwlcleng.hob",kCodeLevelSite);
  
  LinkHOB(HobFolder & "hmsueng.hob",kCodeLevelSite);
  LinkHOB(HobFolder & "hmcleng.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "hmclient.hob",kCodeLevelSite);
  LinkHOB(HobFolder & "hmclient0.hob",kCodeLevelSystem);
  LinkHOB(HobFolder & "hmserver.hob",kCodeLevelSite);
  LinkHOB(HobFolder & "hmserver0.hob",kCodeLevelSystem);

  FindAndActiveLanguage("ENG","eng");
  
  FindAndActiveLanguage("ANG","ang");
  FindAndActiveLanguage("AGO","ago");
  FindAndActiveLanguage("ARB","arb");
  FindAndActiveLanguage("ARG","arg");
  FindAndActiveLanguage("AUS","aus");
  FindAndActiveLanguage("BHR","bhr");
  FindAndActiveLanguage("BOL","bol");
  FindAndActiveLanguage("BRA","bra");
  FindAndActiveLanguage("CAN","can");
  FindAndActiveLanguage("CHL","chl");
  FindAndActiveLanguage("COL","col");
  FindAndActiveLanguage("CRI","cri");
  FindAndActiveLanguage("CRO","cro");
  FindAndActiveLanguage("CHI","chi");
  FindAndActiveLanguage("CZE","cze");
  FindAndActiveLanguage("DAN","dan");
  FindAndActiveLanguage("DZA","dza");
  FindAndActiveLanguage("EGY","egy");
  FindAndActiveLanguage("ESP","esp");
  FindAndActiveLanguage("EST","est");
  FindAndActiveLanguage("FIN","fin");
  FindAndActiveLanguage("FRA","fra");
  FindAndActiveLanguage("FRC","frc");
  FindAndActiveLanguage("FAR","far");
  FindAndActiveLanguage("GER","ger");
  FindAndActiveLanguage("GTM","gtm");
  FindAndActiveLanguage("HEB","heb");
  FindAndActiveLanguage("HND","hnd");
  FindAndActiveLanguage("HUN","hun");
  FindAndActiveLanguage("ICE","ice");
  FindAndActiveLanguage("IND","ind");
  FindAndActiveLanguage("ITA","ita");
  FindAndActiveLanguage("JOR","jor");
  FindAndActiveLanguage("KEE","kee");
  FindAndActiveLanguage("KWT","kwt");
  FindAndActiveLanguage("LAT","lat");
  FindAndActiveLanguage("LBN","lbn");
  FindAndActiveLanguage("LIT","lit");
  FindAndActiveLanguage("MEX","mex");
  FindAndActiveLanguage("MOZ","moz");
  FindAndActiveLanguage("NIC","nic");
  FindAndActiveLanguage("NOR","nor");
  FindAndActiveLanguage("NZE","nze");
  FindAndActiveLanguage("OMN","omn");
  FindAndActiveLanguage("PHL","phl");
  FindAndActiveLanguage("PAN","pan");
  FindAndActiveLanguage("POL","pol");
  FindAndActiveLanguage("POR","por");
  FindAndActiveLanguage("QAT","qat");
  FindAndActiveLanguage("ROM","rom");
  FindAndActiveLanguage("RUS","rus");
  FindAndActiveLanguage("SAF","saf");
  FindAndActiveLanguage("SAU","sau");
  FindAndActiveLanguage("SER","ser");
  FindAndActiveLanguage("SWE","swe");
  FindAndActiveLanguage("SGP","sgp");
  FindAndActiveLanguage("SLO","slo");
  FindAndActiveLanguage("SLV","slv");
  FindAndActiveLanguage("SVK","svk");
  FindAndActiveLanguage("TUR","tur");
  FindAndActiveLanguage("UKR","ukr");
  FindAndActiveLanguage("USA","usa");
  FindAndActiveLanguage("USS","uss");
  FindAndActiveLanguage("VIE","vie");
  FindAndActiveLanguage("YEM","yem");
  FindAndActiveLanguage("ZWE","zwe");
  
  AddJewelleryFiles;
  
  AddCountrySpecificFiles;

  AddHobCustFiles;
  
  LoadWindowTags;

  if (GuiType==kGuiiPhone or GuiType==kGuiAndroid) then begin
    SourceFile(HobFolder & "../halcust",3);
    SourceFile(HobFolder & "../halpatch",0);
  end else begin
    SourceFile("halcust",3);
    SourceFile("halpatch",0);
  end;

  GreyFieldsList;

  return;
end;

