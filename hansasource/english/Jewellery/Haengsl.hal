/* Haengsl.hal */

external inner function Boolean TouchScreenLook();
external inner function string 60 UserDefined(string,string);
external inner function string 60 TileUserDefined(string,Integer,var Integer);
external inner function real VATZoneButtonsLabelsENG(real,real,real,real);
external inner procedure DefineIVDClass();
external inner function real FunctionButtons_ENG(string);
external inner function real ItemButtons(string,Integer);
external inner function real DrawPaymentModesButtons_IV_ENG(real);

event DefineWindows
begin
  Real h,h1,h2,h3,h4,h5,h6,h7,hs,hm,v,v3,l,vs,vm,f,t,x,v2;
  string 60 label;

  SetLangMode(LangEnglish,"ENG",2);

  if (TouchScreenLook) then begin
  
  WindowBegin("Invoice",IVDClass,CGview,-);
  SetWRect(20,80,850,670);
  Sizeable(-1,-1,0,0);
  UseView(IVVc);
  ActiveFieldOnNew("CustCode");
  CommunicateButton;
  h = 70; h1 = h + 200; h2 = h1 + 200; v = 6; vs = 20;
  Tile(0,375,false,"",CustCode);
  EditField(h,vm=(v=6), 82,"No.",Normal,SerNr,false,TSerSClass);
  EditField(h,v+=vs,82,"Inv. Date",Normal,InvDate,false,PasteCurDate);
  EditField(h,v+=vs,20,"Pay. Terms",Normal,PayDeal,false,PDSClass);//PDMSClass);
  EditField(h,v+=vs,82,"Due Date",Normal,PayDate,false,PasteCurDate);
  EditField(h1,v=vm,95, "Customer",Normal,CustCode,false,CUSClass);
  EditField(h1,v+=vs,95,"Salesman",Normal,SalesMan,false,UserSClass);
  EditField(h1,v+=vs,95,"Tags/Objects",Normal,Objects,false,ObjSClass);
  EditField(h1,v+=vs,60,"Language",Normal,LangCode,false,LangSClass);
  EnterSkip(Math);
  EditField(h2,v=vm,-40,"Name",Normal,Addr0,false,0);
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Invoice To"; end;
  EditField(h2,v+=vs,-40,label,ViewOnly,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Address"; end;
  EditField(h2,v+=vs, -40,label,ViewOnly,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h2,v+=vs, -40,label,ViewOnly,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h2,v+=vs,100,"Telephone",ViewOnly,Phone,false,0);

  /* moved
  v = v+24;
  ColourPushButton(h=10,v=v+17,h+60,v+33,"IVDClassTileTerms","Terms",9);
  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassIVLCLASS","Invoices",9);
  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassTileItems","Items",9);
  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassTileButtons","Buttons",9);

  ColourPushButton(h=10,v+=35,h+60,v+33,"IVDClassToolEnterText","Number",2);
  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassToolLogin","Login",2);
  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassToolKeyPadDelete","Delete",2);
  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassToolKeyPadEnter","Enter_",2);

  ColourPushButton(h=10,v+=35,h+60,v+33,"GCIVsm","Sell GV",2);
  ColourPushButton(h=h+62,v,h+60,v+33,"GCRIVsm","Rcv. GV",2);
  ColourPushButton(h=h+62,v,h+60,v+33,"CashIVsm","Cash",2);
  ColourPushButton(h=h+62,v,h+60,v+33,"CredCardIVsm","Cred. Card",2);

  ColourPushButton(h=10+62,v+=35,h+60,v+33,"IVDClassToolIVReturn","Return",2);
  */
  
//  ColourPushButton(h=h+62,v,h+60,v+33,"IVDClassTileCurrency","Currency",9);

  MatrixBegin(15,125,-52,260,-,199);
  MatTypedRow(stp);
  MatOverStrike(ovst);
  MatCol(t=kInvoiceRowTypeNormal,28,"Ser. No",0,SerialNr,false,SerialNrSClass);
  EnterSkip(SerialNr);
  MatCol(t,170,"Item",0,ArtCode,false,INSClass);
  MatCol(t,250,"Qty.",0,Quant,true,MATVARINSClass);
  MatCol(t,300,"Description",0,Spec,false,0);
  MatCol(t,-280,"Location",0,Location,false,LocationSClass);
  MatCol(t,-225,"Price",0,Price,true,0);
  MatCol(t,-140,"%",0,vRebate,true,0);
  MatCol(t,-110,"Sum",0,Sum,true,0);
  MatCol(t,-25,"V-Cd",0,VATCode,false,VATCodeSClass);
  MatText(t=kInvoiceRowTypeVoid,28,"Void",false);
  MatColTL(t,65,"Sign",0,-1,ViewOnly,0,VoidedSign,false,0);
  MatCol(t,100,"Item",0,ArtCode,false,INSClass);
  MatCol(t,150,"Qty.",0,Quant,true,MATVARINSClass);
  MatCol(t,190,"Price",0,Price,true,0);
  MatCol(t,250,"Description",0,Spec,false,0);
  MatCol(t,-195,"Ser. No",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-110,"%",0,vRebate,true,0);
  MatCol(t,-80,"Sum",0,Sum,true,0);
  MatText(t=3,28,"Credit of Invoice",true);
  MatCol(t,208,"",0,OrdRow,false,ARSClass);
  MatCol(t,-216,"",0,Spec,false,0);//MatText(t,-216,"",true);
  MatText(t=4,32,"Interest",true);
  MatCol(t,98,"",0,ArtCode,false,0);
  MatCol(t,153,"",0,Quant,true,0);
  MatCol(t,188,"",0,Spec,false,0);
  MatText(t=5,28,"Down Payment",true);
  MatColTL(t,120,"",0,-1,ViewOnly,0,ArtCode,true,0); 
  MatColTL(t,180,"",0,-1,ViewOnly,0,Quant,true,0);
  MatCol(t,238,"",0,Spec,false,0);
  MatColTL(t,-170,"",0,-1,Normal,0,Sum,true,0); //?? TL?
  MatCol(t,-70,"",0,SalesAcc,false,AccSClass);
  MatCol(t,-30,"",0,VATCode,false,VATCodeSClass);
  MatText(t=6,28,"Prepayment Number",true);
  MatCol(t,170,"",0,CUPNr,true,ARPaySClass);
  MatCol(t,-200,"",0,Spec,false,0);
  MatCol(t,-120,"",0,Price,true,0);// Price holds the #VAT# sum, Recipe holds the date of prepaym. 
  MatCol(t,-70,"",0,Sum,true,0);
  MatText(t=10,32,"This row and all rows below it will be hidden on printout",false);
  MatText(t=11,28,"K",true);
  MatCol(t,28,"Item",0,ArtCode,false,INSClass);
  MatCol(t,80,"Qty.",0,Quant,true,MATVARINSClass);
  MatCol(t,110,"Price",0,Price,true,0);
  MatCol(t,160,"Desc",0,Spec,false,0);
  MatCol(t,-110,"%",0,vRebate,true,0);
  MatCol(t,-80,"Sum",0,Sum,true,0);
  MatText(t=13,28,"GV",true);
  MatCol(t,68,"",0,GCNr,false,GCSClass);
  MatCol(t,168,"",0,Spec,false,0);
  MatCol(t,-84,"Sum",0,Sum,true,0);
  MatCol(t,-28,"",0,VATCode,false,VATCodeSClass);  
  MatText(t=14,28,"GVR",true);
  MatCol(t,68,"",0,GCNr,false,GCSSClass);
  MatCol(t,-279,"",0,Spec,false,0);
  MatCol(t,-84,"Sum",0,Sum,true,0);
  MatCol(t,-24,"",0,VATCode,false,VATCodeSClass);  
  MatText(t=15,28,"CASH",true);
  MatCol(t,68,"Sum",0,Sum,true,0);
  MatCol(t,148,"Currency",0,CurncyCode,true,CurncyCodeSClass);
  MatCol(t,218,"P. Mode",0,PayMode,true,PMSClass);
  MatCol(t,-400,"Spec",0,Spec,false,0);
  MatText(t=16,28,"CC",true);
  MatCol(t,68,"P. Mode",0,PayMode,true,PMSClass);
  EnterSkip(Sum);
  MatCol(t,148,"Sum",0,Sum,true,0);
  MatCol(t,208,"",0,CreditCard,false,CreditCardSClass);
  MatCol(t,-204,"Authorization",0,AuthorizationCode,false,0);
  MatText(t=17,28,"Header",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=18,28,"Reserved",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=19,28,"Reserved",true); // Don't use this number
  MatCol(t,100,"",0,Spec,false,0);
  MatText(t=kInvoiceRowTypeChequePayment,28,"CHQ",true);
  MatCol(t,68,"Sum",0,Sum,true,0);
  MatCol(t,148,"Currency",0,CurncyCode,true,CurncyCodeSClass);
  MatCol(t,-200,"Spec",0,Spec,false,0);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Perception Tax",true);
  MatCol(t,132,"",0,CuAccCode,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,0);
  MatCol(t,452,"",0,Spec,false,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;   
  CheckBox(15,v+170,0,"OK",OKFlag);
  EditField(-250,v+164,70,"Change",ViewOnly,RetnValue,true,0);
  EditField(-100,v+164,70,"Sum",ViewOnly,Sum4,true,0);
  
  h = DrawPaymentModesButtons_IV_ENG(v);
  
  v = v+195;
/*  
  ColourPushButton(h=17,v,h+85,v+50,"CashIVsm","Cash",2);
  ColourPushButton(h=h+87,v,h+85,v+50,"CredCardIVsm","Cred. Card",2);
  ColourPushButton(h=h+87,v,h+85,v+50,"GCIVsm","Sell GV",2);
  ColourPushButton(h=h+87,v,h+85,v+50,"GCRIVsm","Rcv. GV",2);
*/  
  ColourPushButton(h=h+87,v,h+85,v+50,"IVDClassToolKeyPadDelete","Delete",9);
  ColourPushButton(h=h+87,v,h+85,v+50,"IVDClassToolKeyPadEnter","Enter_",9);
  ColourPushButton(h=h+87,v,h+85,v+50,"IVDClassTileButtons","Buttons",9);
  ColourPushButton(h=h+87,v,h+85,v+50,"IVDClassToolLogin","Login",9);
  
  if (GuiType==kGuiCocoa) then begin
    TileButton(1,"1");
    TileButton(2,"2");
    TileButton(3,"3");
    TileButton(4,"4");
    TileButton(5,"5");
    TileButton(6,"6");
    TileButton(7,"7");
    TileButton(8,"8");
    TileButton(9,"9");
    TileButton(10,"10");
    TileButton(11,"11");
    TileButton(12,"12");
  end;
  
  Tile(1,400,false,"1",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",1);  
  Tile(2,400,false,"2",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",2);  
  Tile(3,400,false,"3",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",3);  
  Tile(4,400,false,"4",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",4);  
  Tile(5,400,false,"5",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",5);  
  Tile(6,400,false,"6",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",6);  
  Tile(7,400,false,"7",-);
  v = 6; h = 90; h2 = 350; vs = 20;
  v = FunctionButtons_ENG("IVDClass");
  v = ItemButtons("IVDClass",7);  

  Tile(8,200,true,"8",-);
  v = 24;
  h2 = 99+55;
  v2 = -50;  
  StringList(9,v+1-4,h2,200);
  RecordList2(h2+25,v-6,h2+300,270,"INVc");
  if (false) then begin
    RlColKey(4,4,    "No.",Code,false,DICode);
    RlColKey(51,51,"Description",Name,false,DIName);  
  end else begin
    RlColKey(4,4,"Description",Name,false,DIName);  
    RlCol(-1,-1,"",colnr,true);
  end;
  h = 6+2; 
  v2 = -50;
  ColourPushButton(h,v2,h+60,v2+33,"IVDClassToolFileDesktop","Home",2);
  h = h+72;
  ColourPushButton(h,v2,h+60,v2+33,"IVDClassToolUp","Back",2);

  Tile(9,112,false,"9",PayDeal);
  vs = 20; h1 = 110; h2 = 300; h3 = 480;
  EditField(h1,vm=(v=6),82,"Inv. Date",Normal,InvDate,false,PasteCurDate);
  EditField(h1,v+=vs,25,"Pay. Terms",Normal,PayDeal,false,PDSClass);//PDMSClass);
  EditField(h1,v+=vs,82,"Due Date",Normal,PayDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Trans. Date",Normal,TransDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Cust. Ord. No.",Normal,CustOrdNr,false,PasteCurDate);
  EditField(h2,v=vm,135,"Our Ref.",Normal,OurContact,false,0);
  EditField(h3+50,v,50,"Language",Normal,LangCode,false,LangSClass);
  EditField(h2,v+=vs, 135,"Attn.",Normal,ClientContact,false,ContactSClass);
  EditField(h3+50,v,50,"Salesman",Normal,SalesMan,false,UserSClass);
  EditField(h2,v+=vs,135,"Location",Normal,Location,false,LocationSClass);
  EditField(h3+50,v,50,"Trans Time",Normal,TransTime,false,0);
  EditField(h2,v+=vs,135,"Official Ser. No.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  EditField(h3+50,v,50,"Machine",Normal,MachineName,false,0);
  EditField(h2,v+=vs,135,"Sorting",Normal,Sorting,false,0);
  EditField(h3+50,v,50,"Drawer",Normal,DrawerCode,false,0);
  EnterSkip(Math);
  Tile(10,70,false,"10",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Currency",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h2=295,v,50,"Rate",Normal,FrRate,true,0);
  EditField(h3=360,v,50,":",Normal,ToRateB1,true,0);
  StaticText(h3+60,v+12,"Base Currency 1",false);
  EditField(h,v+=vs,50,"Base Currency 1",Normal,BaseRate1,true,0);
  EditField(h3,v,50,":",Normal,ToRateB2,true,0);
  StaticText(h3+60,v+12,"Base Currency 2",false);
  EditField(h,v+=vs,50,"Base Currency 2",Normal,BaseRate2,true,0);
  vm = -160; hm = 500; vs = 37; h2 = 40; v3 = 33;
/*  
  v2 =(v+=30);
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad1","1_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad2","2_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad3","3_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad4","4_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad5","5_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad7","7_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad8","8_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad0","0_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPad00","00_",2);
  h = h+42; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolKeyPadPoint",".",2);
  v = v2;
  h = hm+140; ColourPushButton(h,v,h+80,v+v3,"IVDClassToolKeyPadEnter","Enter_",2);
  v = v+vs; ColourPushButton(h,v,h+80,v+v3,"IVDClassToolKeyPadDelete","Delete",2);
  v = v2;
  h = hm-100; ColourPushButton(h,v,h+80,v+v3,"IVDClassToolKeyPadAdd","Add",2);
  v = v+vs; ColourPushButton(h,v,h+80,v+v3,"IVDClassToolKeyPadExact","Exact",2);
*/  
  Tile(11,250,false,"11",-); 
  v = 12; hs = 87; h2 = 85; vs = 50;v3 = 52;
  h = 150;
  ColourPushButton(h,v,h+h2,v+v3,"IVInfoIVDsm","Invoice Status",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"HiddenLineIVDsm","Hidden Line",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassOpenCalendar","Calendar",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassNewActivity","Activity",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassTileItems","Items",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"PrintIVReceiptDsm","Print Receipt",20);
  v = 66;
  h = 150;  ColourPushButton(h,v,h+h2,v+v3,"IVDClassTileTerms","Terms",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassAddressTile","Address",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassIVLCLASS","Invoices",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolEnterText","Number",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"IVDClassToolIVReturn","Return",20);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"CCPayIVDsm","CC Payment",20);
  v = v+54;
  h = 150; ColourPushButton(h,v,h+h2,v+v3,"GCIVsm","Sell GV",2);
  h = h+hs; ColourPushButton(h,v,h+h2,v+v3,"OpenCashDrawer","Open Drawer",1);
  Tile(12,90,false,"12",Addr1);
  vs = 20;
  EditField(h=110,v=6,-20,"Invoice To",Normal,Addr1,false,0);
  EditField(h,v+=vs, -20,"Address",Normal,Addr2,false,0);
  EditField(h,v+=vs, -20,"",Normal,Addr3,false,0);
  EditField(h,v+=vs, -20,"",Normal,InvAddr3,false,0);
  EditField(h,vm=(v+=vs), -20,"",Normal,InvAddr4,false,0);
  
  SpecialMenu("Item Status",'I',0,"ItemStatusIVDsm");
  SpecialMenu("Item Search",'f',1,"ItemSearchDsm");
  SpecialMenu("Create Cash In",' ',1,"DoCLInFromIVD");
  SpecialMenu("Invoice Status",'r',2,"IVInfoIVDsm");
  SpecialMenu("POS Session Report",' ',1,"POSEventIVDsm");
  SpecialMenu("Print Proforma Invoice",' ',3,"PrintProformaIVDsm");
  SpecialMenu("Connect to Prepayment",' ',4,"ConnectToPrepayIVDsm");
  SpecialMenu("Update Currency Price List Items",' ',5,"UpdatePricesIVDsm");
  SpecialMenu("Create Instalment Receipts",' ',6,"CreateInstalmentsIVDsm");
  SpecialMenu("Print Cash IN-OUT",' ',7,"PrintCashInOutIVDsm");
  SpecialMenu("Open NL Transaction",'t',8,"OpenTRFromIV");
  SpecialMenu("Create EDI Invoice",' ',9,"DoEDIInvFromIVD");
  SpecialMenu("Recalculate Weight and Volume",' ',10,"RecalcWeightIVDsm");
  SpecialMenu("Recalculate Discount",' ',11,"RecalcDiscountIVDsm");
  SpecialMenu("Add Header Line",' ',12,"HeaderLineIVDsm");
  SpecialMenu("Add Hidden Line",' ',12,"HiddenLineIVDsm");
  SpecialMenu("Create Contract",' ',13,"COFromIVDsm");
  SpecialMenu("Change to Base 1",' ',14,"SwitchToBase1IVDsm");
  SpecialMenu("Previous Sales Prices",' ',15,"IVLastSPrsm");
  SpecialMenu("Create Correction Invoice",' ',16,"CorrectionIVsm");
  SpecialMenu("Create VAT Correction S/L",' ',17,"VATCorrectionIVsm");
  SpecialMenu("Create First Event",' ',18,"FirstEventIVDsm");
  SpecialMenu("Send to Fiscal Device",' ',19,"PrintToFiscPrntIVDsm");
  SpecialMenu("Cash In",' ',20,"POSMoneyInsm");
  SpecialMenu("Cash Out",' ',21,"POSMoneyOutsm");
  SpecialMenu("Open Session",' ',22,"OpenPOSSessionsm");
  SpecialMenu("Close Session",' ',23,"ClosePOSSessionsm");
  SpecialMenu("Cash Up Report",' ',24,"IVDClassCashupRnsm");
  SpecialMenu("Manager's Discount Override",' ',25,"MgrsDiscOverrideIVDsm"); 
  EndWindow;

  end else begin
    DefineIVDClass;  
  end;
  
  WindowBegin("Receipt",IPDClass,CGview,-);
  SetWRect(20,80,620,380);
  Sizeable(-1,-1,0,0);
  UseView(IPVc);
  ActiveFieldOnNew("TransDate");
  h = 100; h2 = 262; h3 = 470;v = 6;
//  Tile(0,50,false,"",SerNr);
  EditField(h,v, 80,"No.",St_i,SerNr,false,TSerSClass);
  EditField(h2,v,82,"Trans. Date",Normal,TransDate,false,PasteCurDate);
  EnterSkip(PayMode);
  EditField(h3,v,-40,"Reference",Normal,RecNumber,false,0);
  EditField(h,v+=20,30,"Payment Mode",Normal,PayMode,false,PMSClass);
  EnterSkip(Math);
  EditField(h2,v,-40,"Comment",Normal,Comment,false,0);
  EnterSkip(Math);
/*  
  Tile(1,30,false,"1",Math);
  vs = 20;
//  CheckBox(h,v=6,0,"Re_ceived",ReceivedFlag);
//  CheckBox(h+100,v,0,"Rejected",RejectedFlag);
//  CheckBox(h,v=6,0,"Cust. Info on Trans.",ARonTR);
*/
//  Tile(1,180,true,"1",Math);
  EditField(-267,-21,40,"Currency",Normal,PayCurCode,false,CurncyCodeSClass);
  EditField(-142,-21,-40,"Deposited",Normal,CurPayVal,true,0);
  h=5; v=61;
  MatrixBegin(h,v,-50,-24,-,299);
  vm = v;
  MatTypedRow(stp);
  MatOverStrike(ovst);
  Flip(0);
  MatCol(t=kReceiptRowTypeNormal,30,"Inv.No.",0,InvoiceNr,false,ARSClass);
  EnterSkip(RecVal);
  MatCol(t,105,"Cust.No.",0,CustCode,false,CUSClass);
  MatCol(t=kReceiptRowTypeSettlementDiscount,30,"",0,InvoiceNr,false,ARSClass);
  MatText(t,100,"Set. Disc.",true);
  MatCol(t,180,"Tag/Object",0,Objects,false,ObjSClass);
  MatCol(t,-360,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-320,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-240,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-200,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-120,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-80,"Received Val",0,RecVal,true,0);
  EnterSkip(InvoiceNr);
  MatCol(t=kReceiptRowTypeWriteoff,30,"",0,InvoiceNr,false,ARSClass);
  MatText(t,-530,"Writeoff",true);
  MatCol(t,-470,"",0,WriteOffAcc,false,AccSClass);
  MatCol(t=kReceiptRowTypeBankFee,30,"",0,InvoiceNr,false,ARSClass);
  MatText(t,-480,"Fee",true);
  MatCol(t,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-280,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-150,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-100,"Received Val",0,RecVal,true,0);
//  MatCol(t,-40,"Fee %",0,BankFeePrc,true,0); /* What was this ?? */
  Flip(1);
  EnterSkip(PayDate);
  MatCol(t=kReceiptRowTypeNormal,190,"Text",0,CustName,false,0);
  MatCol(t,-350,"Pay.Date",0,PayDate,false,0);
  EnterSkip(RecVal);
  MatCol(t,-250,"P.Mode",0,PayMode,false,PMSClass);
  MatCol(t,-200,"Cheque No.",0,ChequeNr,false,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  Flip(2);
  MatCol(t=kReceiptRowTypeNormal,190,"Text",0,CustName,false,0);
  MatCol(t,-350,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-310,"Open Inv.Val",0,InvOutstand,false,0);
  MatCol(t,-220,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  Flip(3);
  MatCol(t=kReceiptRowTypeNormal,190,"Text",0,CustName,false,0);
  MatCol(t,-240,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-200,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  Flip(4);
  MatCol(t=kReceiptRowTypeNormal,190,"Text",0,CustName,false,0);
  MatCol(t,-380,"Cred. Man. No.",0,CredManNr,false,CredManSClass);
  MatCol(t,-280,"Order.No",0,OrderNr,false,ORSClass);
  MatCol(t,-200,"Prepay.No",0,CUPNr,false,ARPaySClass);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  Flip(5);
  MatCol(t=kReceiptRowTypeNormal,190,"Text",0,CustName,false,0);
  MatCol(t,-310,"V-Cd",0,VATCode,false,VATCodeSClass);
  MatCol(t,-270,"VAT Val",0,VATVal,false,0);
  MatCol(t,-200,"Extra Tax",0,TAX1Sum,false,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  Flip(6);
  MatCol(t=kReceiptRowTypeNormal,190,"Round Off A/C",0,RoundOffAcc,false,AccSClass);
  MatCol(t,280,"Round Off",0,RoundOff,true,0);
  MatCol(t,370,"Instalmt",0,InstNr,false,ARInstallSClass);
  //MatCol(t,-220,"Bank Fee",0,BankFeeVal,true,0);
  MatCol(t,-210,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-170,"Rec. Val",0,RecVal,true,0);
  MatCol(t,-100,"Tag/Object",0,Objects,false,ObjSClass);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-70,"Tag/Object",0,Objects,false,ObjSClass);
  Flip(7);
  MatCol(t=kReceiptRowTypeNormal,190,"Comment",0,Comment,false,0);
  MatCol(t,-360,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-320,"Bank Am.",0,BankVal,true,0);
  MatCol(t,-230,"To B. Cur. 1",0,ToRateB1BankVal,true,0);
  MatCol(t,-140,"B. Cur. 1",0,B1BankVal,true,0);
  MatCol(t,-70,"B. Cur. 2",0,B2BankVal,true,0);
//  MatCol(t,-130,"Bank Fee",0,BankFeeVal,true,0);
//  MatCol(t,-120,"Fee %",0,BankFeePrc,true,0); /* What was this ?? */
//  MatCol(t,-70,"Coef Val",0,Coef,true,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  Flip(8);
  MatCol(t=kReceiptRowTypeNormal,190,"Comment",0,Comment,false,0);
  MatCol(t,-280,"Debtors A/C",0,ARAcc,false,AccSClass);
  MatCol(t,-180,"Reference",0,rkRecNumber,false,0);
  MatCol(t=kReceiptRowTypeWriteoff,-390,"I.Cur",0,InvCurncy,true,0);
  MatCol(t,-350,"Invoice Val",0,InvVal,true,0);
  MatCol(t,-260,"B.Cur",0,BankCurncy,true,CurncyCodeSClass);
  MatCol(t,-220,"Bank Amount",0,BankVal,true,0);
  MatCol(t,-130,"R.Cur",0,RecCurncy,true,CurncyCodeSClass);
  MatCol(t,-90,"Received Val",0,RecVal,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v=v+ 1; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  vs = 20;
  CheckBox(25,v=-21,0,"OK",OKFlag);
  CheckBox(h+100,v,0,"Cust. Info on Trans.",ARonTR);
  SpecialMenu("Add Settlement Discount",' ',0,"CashDiscountIPDsm");
  SpecialMenu("Add Write-off",' ',1,"NewWriteoffIPDsm");
  SpecialMenu("Add Fee",' ',2,"NewFeeIPDsm");  
  SpecialMenu("Add Withholdings rows",' ',8,"IPPasteWithholdingIPDsm");
  SpecialMenu("Distribute Cheques",' ',13,"DistributeChequesIPDsm");
  SpecialMenu("Distribute Receipt",' ',3,"IPExpandIPDsm");
  SpecialMenu("Calculate Amount",'=',4,"CalculateFieldIPDsm");
  SpecialMenu("Write-off Prepayment",' ',5,"WriteofPrepayIPDsm");
  SpecialMenu("Check Receipt Amounts",' ',6,"IPInfoIPDsm");  
  SpecialMenu("Open NL Transaction",'t',9,"OpenTRFromIP");
  SpecialMenu("Create Activity",'c',14,"ActFromIPDsm");
  SpecialMenu("Create Cash In",' ',11,"CLInFromIPDsm");
  SpecialMenu("Create Down Payment",' ',7,"DownPayFromIPDsm");
  SpecialMenu("Create Email",'m',18,"CreateMailFromIPDsm");
  SpecialMenu("Create First Event",' ',12,"FirstEventIPDsm");
  SpecialMenu("Create Prepayment Invoice",' ',10,"IVFromPrepIPDsm");
  SpecialMenu("Create VAT Correction S/L",' ',17,"VATCorrectionIPDsm");
  SpecialMenu("Credit Card Payment",' ',15,"CCPayIPDsm");
  SpecialMenu("Bank Statement",' ',16,"BankStIPDsm");
  SpecialMenu("Print Cash IN-OUT",' ',8,"PrintCashInOutIPDsm");
  EndWindow;

  return;
end;
