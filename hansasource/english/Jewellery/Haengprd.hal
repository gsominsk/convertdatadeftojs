event DefineWindowsbegin  real h,h1,hl,h2,h3,h4,h5,h6,h7,hs,v,vm,l,vs,f,v1,v2,t;  string 255 label;    SetLangMode(LangEnglish,"ENG",2);  WindowBegin("Production",ProdDClass,CGview,-);  SetWRect(20,80,620,333);  Sizeable(-1,-1,0,0);  UseView(ProdVc);  FormName(ProdOrderForm);  ActiveFieldOnNew("Recepy");        Tile(0,175,false,"",SerNr);  vs = 20; h = 70; h2 = 390; v = 10; h3 = 500; h4 = 220;  EditField(h,v,80,"No.",St_i,SerNr,false,TSerSClass);  EditField(h4,v,250,"Name",Normal,RecName,false,0);  EditField(h,v+=vs,80,"Recipe",Normal,Recepy,false,RecSClass);  EditField(h4,v,80,"Start Date",Normal,StartDate,false,PasteCurDate);  EditField(h2,v,80,"End Date",Normal,ProdDate,false,PasteCurDate);  EditField(h,vm=(v+=vs),80,"Qty",Normal,Qty,true,0);  EditField(h4,v,80,"Start Time",Normal,StartTime,false,PasteCurTime);  EditField(h2,v,80,"End Time",Normal,EndTime,false,PasteCurTime);  EditField(h,v+=vs,80,"Location",Normal,Location,false,LocationSClass);  EditField(h4,v,80,"Class",Normal,ProdClass,false,ProdClassSClass);  EditField(h2,v,80,"Machine",Normal,FixAssCode,false,AT2UnitSClass);  EditField(h,v+=vs,80,"Inspector",Normal,Inspector,false,UserSClass);  EditField(h2,v,80,"Person",Normal,Person,false,UserSClass);//  EditField(h2,v,80,"In Item Scale",Normal,Scale,false,0);  EditField(h,v+=vs,80,"Prod. Ord.",ViewOnly,ProdOrder,false,0);  EditField(h2,v,80,"Discarded Reason",Normal,StandProblem,false,StandProblemsSClass);  EditField(h,v+=vs,80,"Actual Qty",ViewOnly,ActualQty,true,0);  EditField(h2,v,80,"Routing",Normal,Routing,false,RoutingSClass);//  ButtonFrame(h3,v+=36,80,3,"Inspection");//  RadioButton(h3,v,0,0,"Not done",InspectStatus);//  RadioButton(h3,v+=16,1,0,"OK",InspectStatus);//  RadioButton(h3,v+=16,2,0,"Faulty",InspectStatus);  TileButton(1,"Items");  TileButton(2,"Comment");//  CheckBox(370,v,0,"Reserved",Reserved);  ButtonFrame(h3,v=20,150,5,"Status");  RadioButton(h3,v,0,0,"Created",PRStatusFlag);  RadioButton(h3,v+=16,4,0,"Cancelled",PRStatusFlag);  RadioButton(h3,v+=16,2,0,"Started",PRStatusFlag);  RadioButton(h3,v+=16,3,0,"Finished",PRStatusFlag);  RadioButton(h3,v+=16,5,0,"Finished but Discarded",PRStatusFlag);  Tile(1,120,true,"1",Math);  v=20;  MatrixBegin(4,v,-50,-30,-,300);  Flip(0);  MatCol(1,34,"Item",0,Item,false,INSClass);  MatCol(1,110,"Descr.",0,Comment,false,0);  Flip(1);  MatCol(1,-375,"Serial No.",0,SerialNr,false,SerialNrSClass);  MatCol(1,-310,"In",0,InQty,true,MATVARINSClass);  MatCol(1,-260,"Out",0,OutQty,true,MATVARINSClass);  MatCol(1,-210,"Rel.",0,RelVal,true,0);  MatCol(1,-160,"I-cost",0,ItemCost,true,0);  MatCol(1,-100,"W-cost",0,ExtraCost,true,0);  MatCol(1,-40,"Coeff",0,Coefficient,false,0);  Flip(2);  MatCol(1,-375,"Tags/Objects",0,Objects,false,ObjSClass);  MatCol(1,-310,"In",0,InQty,true,0);  MatCol(1,-260,"Out",0,OutQty,true,0);  MatCol(1,-210,"Actual",0,ActualQty,true,0);  MatCol(1,-160,"Material",0,Material,false,MaterialSClass);  Flip(3);  MatCol(1,-270,"In",0,InQty,true,0);  MatCol(1,-220,"Out",0,OutQty,true,0);  MatCol(1,-170,"Serial No.",0,SerialNr,false,SerialNrSClass);  MatCol(1,-80,"Best Before",0,BestBefore,false,PasteCurDate);  Flip(4);  MatCol(1,-270,"In",0,InQty,true,0);  MatCol(1,-220,"Out",0,OutQty,true,0);  MatCol(1,-170,"Weight",0,Weight,true,0);  MatCol(1,-120,"Width",0,UnitXval,true,0);  MatCol(1,-80,"Height",0,UnitYval,true,0);  MatCol(1,-40,"Depth",0,UnitZval,true,0);  Flip(5);  MatCol(1,-100,"Dis. Row FIFO",0,OrgProdFIFORowVal,true,0);  Flip(6);  MatCol(t=1,-350,"Supp. Serial No",0,SuppSerialNr,true,0);  MatCol(t,-200,"Metal",0,Metal,true,0);  MatCol(t,-150,"Weight",0,RowWeight,true,0);  MatCol(t,-100,"Size",0,Size,true,0);  MatCol(t,-50,"Length",0,Length,true,0);  Flip(7);  MatCol(t=1,-350,"Major Stone",0,MajStoneDet,true,0);  MatCol(t,-250,"Colour",0,Colour,true,0);  MatCol(t,-200,"Clarity",0,Clarity,true,0);  MatCol(t,-150,"Cert",0,Cert,true,0);  MatCol(t,-100,"Minor Stone",0,MinStoneDet,true,0);  Flip(8);  MatCol(t=1,-400,"Watch Brand",0,WatchBrand,true,0);  MatCol(t,-300,"Style Name",0,StyleName,true,0);  MatCol(t,-200,"Watch Metal",0,WatchMetal,true,0);  MatCol(t,-100,"Movement",0,Movement,true,0);  Flip(9);  MatCol(t=1,-400,"Brc/Str",0,BrcStr,true,0);  MatCol(t,-300,"Gender",0,Gender,true,0);  MatCol(t,-200,"Other",0,Other,true,0);  MatCol(t,-100,"Other 2",0,Other2,true,0);  InsertRowTest;  DeleteRowTest;  EndMatrix;  v=v+1;  VTab(-35,v,-16,v+vs,ToolFlip,1,"A");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,9,"I");  EditField(h,-22,60,"In Weight",Normal,TotWeight,false,0);  EditField(h4,-22,60,"Out Weight",Normal,TotOutWeight,false,0);  Tile(2,120,false,"2",Comment);  EditField(h,v=15,-20,"Comment",Normal,Comment,false,0);  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);  EditField(h,v+=vs,-20,"",Normal,Comment3,false,0);  EditField(h,v+=vs,-20,"Tags/Objects",Normal,Objects,false,ObjSClass);  EditField(h,v+=vs,60,"Start Time",Normal,StartTime,false,PasteCurTime);  EditField(210,v,60,"End Time",Normal,EndTime,false,PasteCurTime);  EditField(h2,v,60,"Break Time",Normal,BreakTime,false,0);  EditField(h2+200,v,70,"Language",Normal,LangCode,true,LangSCLass);//  EditField(h2+200,v,80,"AcumCostPrice",ViewOnly,AcumCostPrice,false,0);  SpecialMenu("Calculate Cost",' ',0,"ProdFillFIFODsm");  SpecialMenu("Generate Serial No. for Out Items",' ',1,"GenSerialNosProdDsm");  SpecialMenu("Disassemble",' ',2,"CreateDisProdFromProd");  SpecialMenu("Item Status",'I',3,"ItemStatusProdDsm");  SpecialMenu("Item Search",'f',1,"ItemSearchDsm");  SpecialMenu("Production Status",'r',4,"ProdStatusFromProdDsm");  SpecialMenu("Open Batch Specification",' ',5,"OpenBatchProdDsm");  SpecialMenu("Open #NL# Transaction",'t',5,"OpenTRFromProd");  SpecialMenu("Backflush",' ',6,"ProdBackflushFromProdDsm");  SpecialMenu("Create Activity",'c',7,"CreateActFromProd");  SpecialMenu("Create #Stock# Movement",' ',8,"StockMovFromPRDsm");  SpecialMenu("Create Production Operations",' ',9,"ProdOperFromPRDsm");  SpecialMenu("Quality Control",'u',8,"QualConFromProdDsm");  EndWindow;  return;end;