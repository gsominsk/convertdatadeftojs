external inner function Integer CntVarietyCode(Integer,var Array string);
external inner function string 60 UserDefined(string,string);
external inner function string 255 VATZoneNameENG();

event DefineWindows
begin
  real i,h,h1,h2,h3,h4,h5,h6,hs,v,v2,vs,vm,hl,l,t,f;
  string 255 label;
  Integer xpos,ypos,pos,tilenr;
  Array string 20 axlabels,aylabels;
  Integer acnt;
  
  SetLangMode(LangEnglish,"ENG",2);
  
  WindowBegin("Item",INDClass,CGview,-);
  SetWRect(20,80,800,400);
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  Tile(0,107,false,"",Code);
  v = 6; vs = 20; h = 145; h1 = 300; h2 = 375; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"No.",Normal,Code,false,0);
  EditField(h2,v,80,"Group",Normal,Group,false,ITSClass);
  EditField(h,v+=vs,-40,"Alternative Code",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"Description",Normal,Name,false,0);
  tilenr = 1;
  TileButton(tilenr,"Pricing"); tilenr = tilenr + 1;
  TileButton(tilenr,"#Jewellery#"); tilenr = tilenr + 1;
  TileButton(tilenr,"Watch"); tilenr = tilenr + 1;
  TileButton(tilenr,"Stock"); tilenr = tilenr + 1;
  TileButton(tilenr,"Warehouse"); tilenr = tilenr + 1;
  if (UserCanAction("ViewCostPrice",true)) then begin
  TileButton(tilenr,"Costs"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Recipe"); tilenr = tilenr + 1;
  TileButton(tilenr,"A/C"); tilenr = tilenr + 1;
  TileButton(tilenr,"Varieties"); tilenr = tilenr + 1;
  TileButton(tilenr,"Texts"); tilenr = tilenr + 1;
  TileButton(tilenr,"Cost Model"); tilenr = tilenr + 1;
  TileButton(tilenr,"User Values");
  tilenr = 1;
  CheckBox(h,v+=vs,0,"Closed",Terminated);
  CheckBox(h2,v,0,"Not For Sales",NotForSales);
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"Unit",Normal,Unittext,false,UnitSClass);
  EditField(h,v+=vs,100,"Cost Price",Normal,InPrice,true,0);
  EditField(h,v+=vs,100,"Base Price",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"Base Price Change",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"Price Factor",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100,"Item Formula",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"Markup %",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"Bonus %",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"Tags/Objects",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,-240,"Classification",Normal,DispGroups,false,DISClass);
  ButtonFrame(h1,v=24,120,4,"Item Type");
  RadioButton(h1,v,0,0,"Plain",ItemType);
  RadioButton(h1,v+=16,1,0,"Stocked Item",ItemType);
  RadioButton(h1,v+=16,2,0,"Structured Item",ItemType);
  RadioButton(h1,v+=16,3,0,"Service",ItemType);
  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"Add picture");  
  end;
  CheckBox(h1,v+=32,0,"Treat Item as Material on Project",ItemMaterial);
  Tile(tilenr,110,false,tilenr,Metal); tilenr = tilenr + 1;
  EditField(h,v=6, 140,"Metal",Normal,Metal,false,0);
  EditField(h,v+=vs, 140,"Weight",Normal,RowWeight,false,0);
  EditField(h,v+=vs, 140,"Size",Normal,Size,false,0);
  EditField(h,v+=vs, 140,"Length",Normal,Length,false,0);
  EditField(h,v+=vs, 140,"Reference",Normal,Reference,false,0);
  v = 6; 
  EditField(h5,v, 140,"Major Stone Detail",Normal,MajStoneDet,false,0);
  EditField(h5,v+=vs, 140,"Colour",Normal,Colour,false,0);
  EditField(h5,v+=vs, 140,"Clarity",Normal,Clarity,false,0);
  EditField(h5,v+=vs, 140,"Certificate",Normal,Cert,false,0);
  EditField(h5,v+=vs, 140,"Minor Stone Detail",Normal,MinStoneDet,false,0);
  Tile(tilenr,90,false,tilenr,WatchBrand); tilenr = tilenr + 1;
  EditField(h,v=6, 140,"Watch Brand",Normal,WatchBrand,false,0);
  EditField(h,v+=vs, 140,"Style Name",Normal,StyleName,false,0);
  EditField(h,v+=vs, 140,"Watch Metal",Normal,WatchMetal,false,0);
  EditField(h,v+=vs, 140,"Movement",Normal,Movement,false,0);
  v = 6; 
  EditField(h5,v, 140,"Bracelet/Strap",Normal,BrcStr,false,0);
  EditField(h5,v+=vs, 140,"Gender",Normal,Gender,false,0);
  EditField(h5,v+=vs, 140,"Other",Normal,Other,false,0);
  EditField(h5,v+=vs, 140,"Other2",Normal,Other2,false,0);
  Tile(tilenr,170,false,tilenr,MinLevel); tilenr = tilenr + 1; // Need to clean this Tile up! 
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=24,143,3,"Serial Number Tracking");
  RadioButton(h1,v,0,0,"None",SerNrf);
  RadioButton(h1,v+=16,1,0,"Unit Number",SerNrf);
  RadioButton(h1,v+=16,2,0,"Batch Number",SerNrf);
  EditField(h,v=6,100,"Minimum Level",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"Maximum Level",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"Department",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"Shelf Code",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"Default Source",Normal,DefaultSource,false,SourceSClass);  
  EditField(h5,v ,50,"Environment Tax per Kilo",Normal,RepaPricePerWeight,true,0);
  EditField(h,v+=vs ,100,"Hazard Level",Normal,HazLevCode,false,HazLevSClass);
  EditField(h5,v ,50,"Alcohol %",Normal,AlcPrc,true,0);
  EditField(h,v+=vs ,100,"Unit 2",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"Conversion 1",Normal,Conversion1,true,0);
  EditField(h,v+=vs,100,"Unit Coefficient",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"Conversion 2",Normal,Conversion2,true,0);
  Tile(tilenr,170,false,tilenr,LocArea); tilenr = tilenr + 1;
  EditField(h,vm=(v=6) ,100,"Default Pallet Item",Normal,DefPalletItem,true,INSClass);
  EditField(h5,v ,80,"Picking Area",Normal,PickArea,false,LocAreaSClass);
  EditField(h,v+=vs ,100,"Default Location Area",Normal,LocArea,false,LocAreaSClass);
  EditField(h5,v ,50,"Pallets In Picking Area",Normal,PalletsInPickArea,true,0);
  EditField(h,v+=vs ,50,"Max. Qty on Pallet",Normal,QtyonPallet,true,0);
  EditField(h4,v ,50,"Pallet Layers",Normal,PalletLayers,true,0);
  EditField(h5,v ,50,"Qty per Layer",Normal,QtyonPalletLayer,true,0);
  EditField(h,v+=vs ,50,"Full Pallet Width",Normal,PalletWidth,true,0);
  EditField(h4,v ,50,"Height",Normal,PalletHeight,true,0);
  EditField(h5,v ,50,"Depth",Normal,PalletDepth,true,0);
  EditField(h,v+=vs ,50,"Default Position Width",Normal,DefPosWidth,true,0);
  EditField(h4,v ,50,"Height",Normal,DefPosHeight,true,0);
  EditField(h5,v ,50,"Depth",Normal,DefPosDepth,true,0);
  EditField(h,v+=vs ,50,"Item Width",Normal,Width,true,0);
  EditField(h4,v ,50,"Height",Normal,Height,true,0);
  EditField(h5,v ,50,"Depth",Normal,Depth,true,0);
  EditField(h,v+=vs ,50,"Item Volume",Normal,Volume,true,0);
  EditField(h4,v ,50,"Density",Normal,Density,true,0);
  EditField(h5,v ,50,"Nett Weight",Normal,NetWeight,true,0);
  EditField(h5,v+=vs ,50,"Weight",Normal,Weight,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
  Tile(tilenr,190,false,tilenr,InPrice); tilenr = tilenr + 1;
  EditField(h,vm=(v=6),100,"Cost Price",Normal,InPrice,true,0);
  EditField(h5,v,70,"Cost Price Change",ViewOnly,LastPriceChange,true,0);
  EditField(h,v+=vs ,100,"Cost Price in Base 2",Normal,InPriceB2,true,0);
  ButtonFrame(h1,v+=24,200,4,"Upd. Cost Price at Goods Receipt");
  RadioButton(h1,v,0,0,"No",UpdateCost);
  RadioButton(h1,v+=16,1,0,"Last Purchase Cost",UpdateCost);
  RadioButton(h1,v+=16,2,0,"Weighted Average",UpdateCost);
  RadioButton(h1,v+=16,3,0,"Last Purchase Price",UpdateCost);
  ButtonFrame(h5=540,v=v-3*16,200,3,"Upd. Cost Price at Stock Revaluation");
  RadioButton(h5,v,0,0,"No",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"Last Revaluation Cost",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"Weighted Average",SRUpdateCost);
  EditField(h,v=vm+2*vs,100,"Extra Cost",Normal,ExtraCost,true,0);
  EditField(h,v+=vs ,100,"Weighted Average",Normal,WeighedAvPrice,true,0);
  EditField(h,v+=vs ,100,"Weighted Av., Base 2",Normal,WeighedAvPriceB2,true,0);
  EditField(h,v+=vs ,100,"Last Purchase Cost",Normal,LastPurchPrice,true,0);
  EditField(h,v+=vs ,100,"Last Purchase Price",Normal,LastPurchPrice2,true,0);
  EditField(h,v+=vs ,100,"Last Purchase Currency",Normal,LastPurchCurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,100,"Fixed Freight",Normal,FixedFreight,true,0);
  CheckBox(h1,v,0,"Include Item Fixed Charge",InclItemFreight);
  end;
  Tile(tilenr,150,false,tilenr,Recepy); tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"Recipe",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"Paste Components during Entry",ExplodeRec); // "Show components on documents" is better English but VERY confusing
  EditField(h,v+=vs ,120,"Invoice Recipe",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"Barcode",Normal,BarCode,false,0);
  EditField(h,v+=vs ,120,"Contract Item",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"Commodity Code",Normal,EUCodex,false,CommoditySClass);
  EditField(h,v+=vs ,120,"Rental Invoicing",Normal,RentalItem,false,INSClass);
  EditField(h2,v,150,"EKN Code",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  EditField(h,v+=vs ,120,"Warranty Months",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"Colour",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,-40,"Alternative Code",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"Warning",Normal,WarnText1,false,0);
  Tile(tilenr,130,false,tilenr,SalesAcc); tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"Dom. Sales A/C",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameENG & "Sales A/C",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Export Sales A/C",Normal,ExpSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Dom. Cost A/C",Normal,CostAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameENG & "Cost A/C",Normal,EUCostAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Export Cost A/C",Normal,ExpCostAcc,false,AccSClass);
  EditField(h2,v=vm,20,"Dom. VAT Code",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneNameENG & "VAT Code",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"Export VAT Code",Normal,VATCodeExp,false,VATCodeSClass);
  EditField(h2,v+=vs,55,"Components Usage",Normal,CompUsage,false,AccSClass);
  CheckBox(h2,v+=20,0,"Calculate Perception Taxes",Perceptions);
  CheckBox(h2,v+=16,0,"Calculate Withholding Taxes",Withholdings);
  Tile(tilenr,70,false,tilenr,VARMask); tilenr = tilenr + 1;
  EditField(h,v=6,-40,"Variety Mask",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Report Order",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Subsets",Normal,VARSubsets,false,VARSubsetsSClass);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"Language",0,LangCode,false,LangSClass);
  MatCol(1,94,"Text",0,Text,false,0);
  EndMatrix;
  Tile(tilenr,220,false,tilenr,CostPerc); tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"Primary Cost Model");
  RadioButton(h,v,0,0,"Default",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Cost Price",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _of Base Price",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Weighted Average",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"Queued",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"None",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Queued Cost Model");
  RadioButton(h,v,0,0,"Default",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"F_IFO Price",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO Price",QueuedCostModel);  
  
  ButtonFrame(h2=380,v=vm,200,3,"Cost Price for Serial Number");
  RadioButton(h2,v,0,0,"Default",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Cost Price not for Serial Number",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Cost Price for Serial Number",FIFOPerSerialNr);  
  ButtonFrame(h2,v+=40,200,3,"Queued Cost Model per Location");
  RadioButton(h2,v,0,0,"Default",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Queued Cost not per Location",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Queued Cost per Location",FIFOPerLocation);  
  ButtonFrame(h2,v+=40,200,3,"WA per Location");
  RadioButton(h2,v,0,0,"Default",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"WA not per Location",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"WA per Location",WAPerLocation);  
/*5.3  
  ButtonFrame(h2,v+=40,200,3,"Cost Price per Location");
  RadioButton(h2,v,0,0,"Default",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"Cost Price not per Location",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"Cost Price per Location",CostPricePerLocation);  
*/  
  Tile(tilenr,240,false,tilenr,-); 
  h = 180; v = 6;
  label = UserDefined("INVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v=6 ,-40,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("INVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("INVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("INVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("INVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("INVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
  end;
  label = UserDefined("INVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
  end;
  label = UserDefined("INVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
  end;
  label = UserDefined("INVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
  end;
  SpecialMenu("Item Status Report",'I',0,"INStatusINDsm");
  SpecialMenu("Create Purchase Item",' ',1,"PIFromINDsm");
  SpecialMenu("Create Recipe",' ',2,"RecFromINDsm");
//  SpecMenuItem("Recalculate Price List",' ',2);
  SpecialMenu("Item History",'h',3,"INrsRn_INSm");//CMD H DOES HIDE HANSA
  SpecialMenu("Item Location Status",' ',4,"LocItemStatDsm");
  SpecialMenu("Item Status per Alternative Code",'a',5,"ItemStatusAltINDsm");
  EndWindow;
  
  WindowBegin("Specify Stock List per Serial Number",INSerNoEClass,CGEcW,RcType);
  SetWRect(20,80,450,330);
  vs = 20;
  EditFieldTL(h=130,v=6, 150,"Item",   M4UStr,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs, 150,"Item Group",   M4UStr,Normal,11,f3,false,ITSClass);
  EditFieldTL(h,v+=vs, 150,"Item Classification", M4UStr,Normal,100,f4,false,DISClass); 
  EditFieldTL(h,v+=vs, 150,"Location",M4UStr,Normal,10,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs, 150,"#Supplier#",M4UStr,Normal,10,LastAcc,false,VESClass);
  EditFieldTL(h,v+=vs, 100,"Date",M4Date,Normal,0,d1,false,PasteCurDate);
  ButtonFrame(h+=148,vm=(v+=40),123,2,"Valuation Method");
  RadioButton(h,v,0,0,"Queued Cost",flags[11]);
  RadioButton(h,v+=16,1,0,"Purchase Price",flags[11]);
      
  CheckBox(h,vm=(v+=26),0,"Only with Balance",UsedOnly);
  CheckBox(h,vm=(v+=16),0,"Include Headings",flags[3]);
  ButtonFrame(h=20,v=vm-56,170,3,"Function");
  RadioButton(h,v,0,0,"Include Consignment Stock",flags[12]);
  RadioButton(h,v+=16,1,0,"Exclude Consignment Stock",flags[12]);
  RadioButton(h,v+=16,2,0,"Consignment Stock Only",flags[12]);
  EndWindow;

  return;
end;
