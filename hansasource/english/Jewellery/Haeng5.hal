/* Haeng5.hal */

#ifdef HAL

event DefineWindows
begin
  real x,h,h1,h2,h3,h4,h5,h6,h7,v,v2,l,vs,vm,f,t;

  SetLangMode(LangEnglish,"ENG",2);

  WindowBegin("#Stock# Movement",StockMovDClass,CGview,-);
  SetWRect(20,80,640,400);
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  ActiveFieldOnNew("SentTransDate");      
  Tile(0,90,false,"",TransDate);
  v = 6; vs = 20; h = 110; h2 = 300; h3 = 500; h4 = 620;
  EditField(h,v,80, "No.",Normal,SerNr,false,TSerSClass);
  CheckBox(h2,v,0,"Reserved",Reserved);
  EditField(h3,v,80,"Reason",Normal,Reason,false,StandProblemsSClass);
  EditField(h,v+=vs,80,"Ord. Date",Normal,OrdTransDate,false,PasteCurDate);
  EditField(h2,v,80,"Sent Date",Normal,SentTransDate,false,PasteCurDate);
  EditField(h3,v,80,"Received Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,80, "From Location",Normal,FrLocation,false,LocationSClass);
  EditField(h2,v,80,"Via Location",Normal,ThrouLocation,false,LocationSClass);
  EditField(h3,v,80,"To Location",Normal,ToLocation,false,LocationSClass);
  TileButton(1,"Positions");
  TileButton(2,"Tags/Objects");
  TileButton(3,"Items");
  TileButton(4,"Currency");
  TileButton(5,"Durations");
  TileButton(6,"Freight");
  Tile(1,50,false,"1",FrPos);
  EditField(h,v=6,80, "From Position",Normal,FrPos,false,UsedPosSClass);
  EditField(h2,v,80,"To Position",Normal,ToPos,false,FreePosSClass);
  EditField(h3,v,80,"For Production",Normal,ProdSerNr,false,ProdSClass);
  CheckBox(h,v+=vs,0,"Manual Pick",ManualPick);
  CheckBox(h2,v,0,"Send To Forklift Queue",ToForkLiftQue);
  Tile(2,50,false,"2",Comment);
  EditField(h,v=6,-20,"Tags/Objects",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,-20,"Comment",Normal,Comment,false,0);
  EnterSkip(Math);
  Tile(3,79,true,"3",Math);
  v = 24;
  MatrixBegin(4,v,-50,-56,-,99);  
  Flip(0);
  MatCol(1,24,"Serial No.",0,SerialNr,false,SerialNrSClass);
  Flip(1);
  EnterSkip(Quant);
  MatCol(1,130,"Item",0,ArtCode,false,INSClass);
  MatCol(1,230,"Req. Qty",0,OrdQuant,true,MATVARINSClass);
  MatCol(1,290,"Sent Qty",0,SentQuant,true,0);
  MatCol(1,350,"Rcvd. Qty",0,Quant,true,0);
  EnterSkip(SerialNr);
  MatCol(1,410,"Description",0,Spec,false,0);
  Flip(2);
  MatCol(1,86,"Req. Qty",0,OrdQuant,true,MATVARINSClass);
  MatCol(1,148,"Rcvd. Qty",0,Quant,true,0);
  MatCol(1,210,"Description",0,Spec,false,0);
  MatCol(1,-260,"R. Old Unit Pr.",0,OldPrice,true,0);
  MatCol(1,-160,"R. Extra Cost",0,ExtraSCost,true,0);
  MatCol(1,-80,"R. New Unit Pr.",0,NewPrice,true,0);
  Flip(3);
  MatCol(1,86,"Req. Qty",0,OrdQuant,true,MATVARINSClass);
  MatCol(1,148,"Sent Qty",0,SentQuant,true,0);
  MatCol(1,210,"Description",0,Spec,false,0);
  MatCol(1,-260,"#S.# Old Unit Pr.",0,SentOldPrice,true,0);
  MatCol(1,-160,"#S.# Extra Cost",0,SentExtraSCost,true,0);
  MatCol(1,-80,"#S.# New Unit Pr.",0,SentNewPrice,true,0);
  Flip(4);
  MatCol(1,130,"Description",0,Spec,false,0);
  MatCol(1,-140,"Base Price",0,BasePrice,true,0);
  MatCol(1,-40,"Coeff",0,Coefficient,false,0);
  Flip(5);
  MatCol(1,130,"Description",0,Spec,false,0);
  MatCol(1,-135,"Width",0,UnitXval,true,0);
  MatCol(1,-90,"Height",0,UnitYval,true,0);
  MatCol(1,-45,"Depth",0,UnitZval,true,0);
  Flip(6);
  MatCol(1,130,"Description",0,Spec,false,0);
  MatCol(1,-180,"From Position",0,FrPosCode,false,UsedPosSClass);
  MatCol(1,-90,"To Position",0,ToPosCode,false,FreePosSClass);
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v = 18;  VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  CheckBox(20,-52,0,"Confirmed",OrdFlag);
  CheckBox(20,-36,0,"Sent",SentOKFlag);
  CheckBox(20,-20,0,"Received",OKFlag);
  EditField(170,-20,62,"Sent Qty",Normal,TotSentQty,true,0);
  EditField(310,-20,62,"Rcvd. Qty",Normal,TotQty,true,0);
  EditField(550,-20,100,"Non Accounted Extra Costs",Normal,OtherExtraCosts,false,0);
  Tile(4,70,false,"4",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Currency",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h2=295,v,50,"Rate",Normal,FrRate,true,0);
  EditField(h3=360,v,50,":",Normal,ToRateB1,true,0);
  StaticText(h3+60,v+12,"Base Currency 1",false);
  EditField(h,v+=vs,50,"Base Currency 1",Normal,BaseRate1,true,0);
  EditField(h3,v,50,":",Normal,ToRateB2,true,0);
  StaticText(h3+60,v+12,"Base Currency 2",false);
  EditField(h,v+=vs,50,"Base Currency 2",Normal,BaseRate2,true,0);
  Tile(5,110,false,"5",PlanSendDate);
  vs = 20; h1 = 130; h2 = 330; h3 = 560; 
  EditField(h,v=6,80,"Plan. Sent Date",Normal,PlanSendDate,false,PasteCurDate);
  EnterSkip(PlanSendTime);
  EditField(h2,v,40,"Plan. Duration Days",ViewOnly,PlanDurationDays,false,0);
  EditField(h,v+=vs,80,"Plan. Sent Time",Normal,PlanSendTime,false,PasteCurTime);
  EnterSkip(PlanArrDate);
  EditField(h2,v,80,"Plan. Duration Hours",ViewOnly,PlanDurationTime,false,0);
  EditField(h3,v=6,80,"Plan. Arrival Date",Normal,PlanArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Plan. Arrival Time",Normal,PlanArrTime,false,PasteCurTime);
  EditField(h,vm=(v+=32),80,"Actual Sent Date",Normal,ActSendDate,false,PasteCurDate);
  EnterSkip(ActSendTime);
  EditField(h2,v,40,"Actual Duration Days",ViewOnly,ActDurationDays,false,0);
  EditField(h,v+=vs,80,"Actual Sent Time",Normal,ActSendTime,false,PasteCurTime);
  EnterSkip(ActArrDate);
  EditField(h2,v,80,"Actual Duration Hours",ViewOnly,ActDurationTime,false,0);
  EditField(h3,v=vm,80,"Actual Arrival Date",Normal,ActArrDate,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Actual Arrival Time",Normal,ActArrTime,false,PasteCurTime);
  Tile(6,110,false,"6",FreightCode);
  vs = 20; h2 = 255; 
  EditField(h=130,v=6,60,"Freight Company",Normal,FreightCode,false,FreightCompanySClass);
  EditField(h2,v,-40,"Reg.No.",Normal,FreightCompanyRegNr,false,0);
  EditField(h,v+=vs,-40,"Name",Normal,FreightCompany,false,0);
  EditField(h,v+=vs,-40,"Truck Information",Normal,TruckInfo,false,0);
  EditField(h,v+=vs,-40,"Driver",Normal,Driver,false,0);
  EditField(h,v+=vs,-40,"CMR",Normal,CMRText,false,0);
  SpecialMenu("Cost Price in Old Unit Price",'=',0,"StockMovFillFIFODsm");
  SpecialMenu("Item Status",'I',1,"ItemStatusStockMovDsm");
  SpecialMenu("Item Search",'f',1,"ItemSearchDsm");
  SpecialMenu("Open #NL# Transaction Sent",' ',2,"OpenTRFromStockMovSent");
  SpecialMenu("Open #NL# Transaction Received",'t',3,"OpenTRFromStockMov");
  SpecialMenu("Quality Control",'u',2,"QualConFromStockMovDsm");
  EndWindow;

  WindowBegin("#Stock Depreciation#",SDDClass,CGview,-);
  SetWRect(20,80,560,350);
  Sizeable(-1,-1,0,0);
  FormName(SDForm);
  UseView(SDVc);
  ActiveFieldOnNew("CostAcc");    
  vs = 20; h2 = 260; h3 = 410; h4 = 580;
  EditField(h=80,v=6, 82,"No.",Normal,SerNr,false,TSerSClass);
  EditField(h2,v,82,"Trans. Date",Normal,TransDate,false,PasteCurDate);
  EditField(h3,v,100,"Reason",Normal,Reason,false,StandProblemsSClass);
  EditField(h4,v,100,"Reference",Normal,RefStr,false,0);
  EditField(h,v+=vs,82,"Cost A/C",Normal,CostAcc,false,AccSClass);
  EditField(h2,v,82,"Order Class",Normal,SDClass,false,OrderClassSClass);
  EditField(h4,v,100,"Short Code",Normal,ACShort,false,ACShortSClass);
  EditField(h,v+=vs,82,"Location",Normal,Location,false,LocationSClass);
  EditField(h2,v,200,"Tags/Objects",Normal,Objects,false,ObjSClass);
  EditField(h4,v,100,"Project",Normal,PRCode,false,PRSClass);
  EnterSkip(Math);
//  CheckBox(450,6,0,"OK",OKFlag);
  v = v + 42;
  vm = v + 1;
  MatrixBegin(4,v,-50,-35,-,200);
  Flip(0);
  MatCol(1,32,"Serial No.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,170,"Item",0,ArtCode,false,INSClass);
//  MatCol(1,94,"Var",0,VARList,false,VARSClass);
//  MatCol(1,144,"Qty",0,Qty,true,0);
  MatCol(1,250,"Qty",0,Qty,true,MATVARINSClass);
  MatCol(1,300,"Description",0,Spec,false,0);
  Flip(1);
  MatCol(1,-100,"Location",0,Location,false,LocationSClass);
  Flip(2);
  MatCol(1,-250,"Cost A/C",0,CostAcc,false,AccSClass);
  MatCol(1,-160,"Tags/Objects",0,Objects,false,ObjSClass);
  MatCol(1,-70,"Short Code",0,ACShort,false,ACShortSClass);
  //MatCol(1,-210,"Serial No.",0,SerialNr,false,SerialNrSClass);
  //MatCol(1,-100,"Location",0,Location,false,LocationSClass);
  Flip(3);
  MatCol(1,-240,"Recipe",0,Recepy,false,RecSClass);
  MatCol(1,-170,"Project",0,PRCodeRow,false,PRSClass);
  MatCol(1,-100,"Base Price",0,BasePrice,true,0);
  Flip(4);
  MatCol(1,-210,"FIFO",0,FIFO,true,0);
  MatCol(1,-125,"Row FIFO",0,FIFORowVal,true,0);
  MatCol(1,-40,"Coeff",0,Coefficient,true,0);
  Flip(5);
  MatCol(1,-350,"Position",0,PosCode,false,UsedPosSClass);
  MatCol(1,-280,"Serial No.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-135,"Width",0,UnitXval,true,0);
  MatCol(1,-90,"Height",0,UnitYval,true,0);
  MatCol(1,-45,"Depth",0,UnitZval,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  vs = 22;
  v = vm;/* 28 */ 
  VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(h=150,-20,70,"Tot. Qty.",ViewOnly,TotQty,false,0);
  EditField(h=290,-20,-40,"Comment",Normal,Comment,false,0);
  SpecialMenu("Item Status",'I',0,"ItemStatusSDDsm");
  SpecialMenu("Open #NL# Transaction",'t',1,"OpenTRFromSD");
  SpecialMenu("Quality Control",'u',2,"QualConFromSDDsm");
  SpecialMenu("Item Search",'f',1,"ItemSearchDsm");
  EndWindow;

  WindowBegin("#Stocktaking#",StockTakeDClass,CGview,-);
  SetWRect(20,80,560,350);
  Sizeable(-1,-1,0,0);
  UseView(StockTakeVc);
  vs = 20; h2 = 300;
  EditField(h=100,v=6, 82,"No.",Normal,SerNr,false,TSerSClass);
  EditField(h2,v,82,"Trans. Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,82,"Location",Normal,Location,false,LocationSClass);
  EnterSkip(Math);
//  CheckBox(420,v=6,0,"Set #Stock# Levels to these Balances on this day",SetStockValue); // Still not working properly
//  CheckBox(420,v+=vs,0,"Override Backdated",OverrideBackdated); // Still not working properly
  v = v + 42;
  vm = v + 1;
  MatrixBegin(20,v,-50,-35,-,200);
  Flip(0);
  MatCol(1,32,"Serial No.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,130,"Item",0,ArtCode,false,INSClass);
//  MatCol(1,94,"Var",0,VARList,false,VARSClass);
//  MatCol(1,144,"Qty",0,Qty,true,0);
  MatCol(1,200,"Qty",0,Qty,true,MATVARINSClass);
//  MatCol(1,194,"Description",0,Spec,false,0);
  MatCol(1,250,"Description",0,Spec,false,0);
  Flip(1);
//  MatCol(1,-200,"Serial No.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-100,"Location",0,Location,false,LocationSClass);
  MatCol(1,-40,"Coeff",0,Coefficient,false,0);
  Flip(2);
  MatCol(1,-285,"Base Price",0,BasePrice,true,0);
  MatCol(1,-210,"FIFO",0,FIFO,true,0);
  MatCol(1,-125,"Row FIFO",0,FIFORowVal,true,0);
  MatCol(1,-40,"Coeff",0,Coefficient,false,0);
  Flip(3);
  MatCol(1,-340,"Position",0,Position,false,PosSClass);
  MatCol(1,-280,"Serial No.",0,SerialNr,false,SerialNrSClass);
  MatCol(1,-135,"Width",0,UnitXval,true,0);
  MatCol(1,-90,"Height",0,UnitYval,true,0);
  MatCol(1,-45,"Depth",0,UnitZval,true,0);
  DeleteRowTest;
  EndMatrix;
  vs = 20;
  v=vm; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+ vs; VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(h=150,-20,-40,"Comment",Normal,Comment,false,0);
  SpecialMenu("Fill in Current Cost",' ',1,"StockTakeFillFIFODsm");
  SpecialMenu("Item Search",'f',1,"ItemSearchDsm");
  EndWindow;

  return;
end;
#endif
