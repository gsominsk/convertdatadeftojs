/* Haengm2.hal */
external function Boolean HasRemoteBackup();

#ifdef HAL
/* This is no longer an Event, make sure you don't have this in */
//event startup
begin
  Real h,v,l,vs;

  SetLangMode(LangEnglish,"ENG",2);

/* This window has to be in the startup because it has to be displayed when a HAL error occurs */
  WindowBegin("",ErrorClass,CGother,-);
  SetWRect(20,262,20+468,262+68+40);
  WhiteBackground;
  Modality(1);
  WType(1);
  AddBic(1031,1032,30,84,ToolHelp,0,"");
  PushButton(400,82,460,102,0,"OK");
  EndWindow;

  WindowBegin("",RepWClass,CGRepW,RcType);
  SetWRect(20,80,820,550);
  Sizeable(150,150,0,0);

  ToolBar;
  AddBic(603,604,200,20,ToolAttach,0,"");
  EndToolBar;

  UseView(RcVc);
  WhiteBackground;
  ScrollBar(-17,40,-1,-17);
//    SearchField("Search");
  if (IsWebClient==false) then begin
    ToolBar;
    EditFieldTL(-225,6,135,"",M4Str,Normal,20,searchstr,false,0);
    if (GuiType!=kGuiCocoa) then begin
      PushButton(-70,5,-10,22,ToolOK,"Search");
    end;
    EndToolBar;
  end;
// Why go back to C? Is there a problem when using Report Generator, or?
  SpecMenuItem("Recalculate",'r',0);
  SpecMenuItem("Recalculate and Print",'p',1);
  SpecMenuItem("Reopen Report Specification",'e',2);

//  SpecialMenu("Recalculate",'r',0,"RecalculateRepWsm");
//  SpecialMenu("Recalculate and Print",'p',1,"RecalculatePrintRepWsm");
//  SpecialMenu("Reopen Report Specification",' ',2,"ReopenRepWsm");
  EndWindow;

  WindowBegin("",WaitClass,CGother,-);
  AutoSizeWindow(false);
  SetWRect(20,262,20+468,262+68);
  WhiteBackground;
  EndWindow;

  WindowBegin("",UploadWaitClass,CGother,-);
  AutoSizeWindow(false);
  SetWRect(20,262,20+468,262+88);
  WhiteBackground;
  PushButton(-79,55,-19,72,ToolClose,"Cancel");
  ProgressBar(20,33,-20,45,"TransferSz","TransferPos");
  EndWindow;

  WindowBegin("",WaitOrQuitClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(335,44,395,64,ToolRestartApplication,"Restart");
  PushButton(400,44,460,64,ToolRestore,"Quit");
  WhiteBackground;
  EndWindow;

/* This window has to be in the startup because it may be displayed when a Communication error occurs */
  WindowBegin("",ForceQuitClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(335,40,395,60,ToolRestartApplication,"Restart");
  PushButton(400,40,460,60,ToolRestore,"Quit");
  WhiteBackground;
  Modality(1);
  WType(1);
  EndWindow;

  WindowBegin("#Synchronising#",SyncClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(360,44,460,64,ToolStopSync,"Stop Sync");
  Modality(1);
  WType(1);
  BottomBar;
  EndWindow;

  WindowBegin("#Synchronising#",SyncOrExitClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(400,44,460,64,ToolQuit,"Quit");
  Modality(1);
  WType(1);
  EndWindow;

  WindowBegin("Please Confirm",YesNoWClass,CGother,RcType);
  Modality(1);
  UseView(RcVc);
  SetWRect(80,200,400,310);
  Sizeable(-1,-1,0,0);
  h = 50; v = 30;
  v = -30;
  PushButton(h,v,h+80,v+25,1,"Yes");
  PushButton(h+=135,v,h+80,v+25,2,"No");
  EndWindow;

/* This window has to be in the startup because it may be displayed when a Communication error occurs */
  WindowBegin("Please Confirm",YesNoCancelWClass,CGother,RcType);
  Modality(1);
  UseView(RcVc);
  SetWRect(80,200,400,300);
  Sizeable(-1,-1,0,0);
  h = 20; v = -30;
  PushButton(h,v,h+80,v+25,1,"Yes");
  PushButton(h+=100,v,h+80,v+25,4,"No");
  PushButton(h+=100,v,h+80,v+25,2,"Cancel");
  EndWindow;

/* modRest */

  RegisterWS("Tabs","Tabs","New Tab",RestAccVc,modRest);
  RegisterWS("Cashier Counts","Cashier Counts","New Cashier Count",CashierBalVc,modRest);
  RegisterWS("Credit Cards","Credit Cards","New Credit Card",CreditCardVc,modRest);
  RegisterWS("Items","Items","New Item",INVc,modRest);
  RegisterWS("POS Balances","POS Balance","New POS Balance",POSBalanceVc,modRest);
  RegisterWS("POS Sessions","POS Sessions","New POS Session",POSEventVc,modRest);
  RegisterWS("Cash Event","Cash Event","New Cash Event",CashVc,modRest);
  RegisterWS("#Restaurant# Bookings","Rest. Bookings","New Rest. Booking",RestBookingVc,modRest);

  Setting("Account Usage #Restaurant#",RestAccTClass,modRest);
  Setting("Active Bar Menus",BarMenuSetTClass,modRest);
  Setting("Bar Tab Classes",RestAccClassLClass,modRest);
  Setting("Bar Menu Types",BarMenuTypeLClass,modRest);
  Setting("Bar Menus",BarMenuLClass,modRest);
  Setting("Blocked Items",BranchBlockINLClass,modRest);
  Setting("Daily Statistics",SalesTimeTClass,modRest);
  Setting("Default Payment Modes",DefCashTClass,modRest);
  Setting("Drawers",DrawerLClass,modRest);
  Setting("Item Classifications",DILClass,modRest);
  Setting("Item Departments",RestItemDeptLClass,modRest);
  Setting("Kitchen Departments",RestOrderDeptLClass,modRest);
  Setting("Kitchen Orders",KitchenOrderLClass,modRest);
  Setting("Kitchen Order Screen",RestKItchenOrdWClass,modRest);  
  Setting("Kitchen Order Screen #Colours#",RestPanelColourLClass,modRest);
  Setting("Local Machine Groups",LocalMachineGroupsTClass,modRest);
  Setting("Local Machines",LocalMachineLClass,modRest);
  Setting("Local Machine Payment Modes",RestPMTClass,modRest);
  Setting("Loyalty Cards",LoyaltyCardLClass,modRest);
  Setting("Loyalty Card Membership Levels",LCMemberLevelLClass,modRest);
  Setting("Loyalty Card Membership Level Structure",LCMLevelSetTClass,modRest);
  Setting("Loyalty Points",LoyaltyPointsLClass,modRest);
  Setting("Loyalty Points per Location",LocLoyaltyPointsLClass,modRest);
  Setting("Loyalty Points Redemption",LoyPointRedeemLClass,modRest);
  Setting("Loyalty Points Redemption per Location",LocLoyPointRedeemLClass,modRest);
  Setting("Meal Courses",MealCourseLClass,modRest);
  Setting("Modifiers",ModifiersLClass,modRest);
  Setting("Nightly Maintenance",NightMaintRestTClass,modRest);
//  Setting("Number Series - Cash",CashSerTClass,modRest); // I belive we should remove this completly
  Setting("Number Series - Bar Tabs",RestAccSerTClass,modRest);
  Setting("POS Button Groups",POSButtonGroupsLClass,modRest);
  Setting("POS Button Pictures",POSButtonPictureLClass,modPOS);
  Setting("POS Buttons",POSButtonsLClass,modRest);
  Setting("POS Sessions",POSEventLCLass,modRest);
  Setting("POS Settings",CashierDefTClass,modRest);
  Setting("#Restaurant# Booking Types",RestBookTypeLClass,modRest);
  Setting("#Restaurant# Open Hours",RestOpenHoursLClass,modRest);
  Setting("#Restaurant# Settings",RestTClass,modRest);
  Setting("#Restaurant# Setup",RestSetupLClass,modRest);
  Setting("Service Charges",ServiceChargeLClass,modRest);
  Setting("Tables",NeighbourHoodLClass,modRest);
  Setting("Tables Views",TablesViewsLClass,modRest);
  Setting("Tabs Old View",RestAccOldLClass,modRest);
//  Setting("Tables Layouts",TLLClass,modRest);
//  Setting("Tables View",TablesViewWClass,modRest);
  Setting("New Tables View",TableLayoutClass,modRest);

  Document("Bar Tab",RestAccRClass,RestAccForm,RestAccFClass,modRest);
  Document("Bar Tab Kitchen Order",RestAccKitchenRClass,RestAccKitchenForm,RestAccKitchenFClass,modRest);
  Document("Bar Tab Receipt",RestAccReceiptRClass,RestAccReceiptForm,RestAccReceiptFClass,modRest);
  Document("Cancel Order",RestAccRClass,RestAccCancelForm,RestAccCancelFClass,modRest);
  Document("Cash Events",CashRClass,CashForm,CashFClass,modRest);
  Document("Fire Order",RestAccRClass,RestAccFireOrderForm,RestAccFireOrderFClass,modRest);
  Document("Guest Bill ",RestAccGuestBillRClass,RestAccGuestBillForm,RestAccGuestBillFClass,modRest);
  if (HasLocalization("HRV,SVN")) then begin
    Export("(Croatia, Slovenia) Cash invoices export",CashInvCroEClass,CashInvExEn,modRest);
  end;
  Export("#Restaurant# Daily Statistics",SalesTimeEClass,SalesTimeEn,modRest);

  Report("Bar Tabs Journal",RestAccJRClass,RestAccJRn,0,modRest);
  Report("Cash Up",CashupRClass,CashupRn,0,modRest);
  Report("GP, Bar Tabs", RestAccGPRClass,RestAccGPRn,0,modRest);
  Report("Loyalty Card Statement",LoyaltyCardRClass,LoyaltyCardRn,0,modRest);
  Report("#Restaurant# Bookings",RestBookingRClass,RestBookingRn,0,modRest);
//  Report("#Restaurant# Cash Report",BarCashRClass,BarCashRn,0,modRest); // Don't think it does anything useful, should use Cashup Report instead
  Report("#Restaurant# Daily Statistics",DetSalesTimeRClass,DetSalesTimeRn,0,modRest);
  Report("#Restaurant# Item Statistics",BarItemStatRClass,BarItemStatRn,0,modRest);
  Report("#Restaurant# Planning",RestPlanningRClass,RestPlanningRn,0,modRest);
  Report("Void Report",VoidedRowsRClass,VoidedRowsRn,0,modRest);
//  Report("Sales Statistics",BarSalesStatRClass,BarSalesStatRn,0,modRest); // Is not very useful

  Maintenance("Cash Up",CashupVClass,CashupMn,modRest);
  Maintenance("Create POS Buttons",CreatePOSButtonsVClass,CreatePOSButtonsMn,modRest);
//  Maintenance("Generate Daily #NL# Transactions",BarGenNLVClass,BarGenNLMn,modRest); // Don't think it should be used any more
  Maintenance("Nightly Maintenance",MidStatRestVClass,MidStatRestMn,modRest);
  Maintenance("Update #Stock#",BarGenSDVClass,BarGenSDMn,modRest);

/* modHotel */

  RegisterWS("Reservations","Reservations","New Reservation",JobVc,modHotel);
  RegisterWS("Group Reservations","Group Reservations","New Group Reservation",GroupJobLClass,modHotel);
  RegisterWS("Reservation Quotations","Reservation Quotations","New Reservation Quotation",ResAvVc,modHotel);
  RegisterWS("Rooms","Rooms","New Room",ResVc,modHotel);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modHotel);
  RegisterWS("Guests","Guests","New Guest",CUGuestLClass,modHotel);
  RegisterWS("Items","Items","New Item",INVc,modHotel);
//  Register("Mother Reservation","Group Res.",PRPlVc,modHotel);

  Setting("Agent Addons",AgentAddonLClass,modHotel);
  Setting("Agent Rooms",AgentRoomLClass,modHotel);
  Setting("Automatic Reservation Status Changes",RSCLClass,modHotel);
  Setting("Booking Origin",BookOrgTClass,modHotel);
  Setting("Booking.com Integration",BookingComTClass,modHotel);
  Setting("Border Check Point",BorderCheckPointLClass,modHotel);
  Setting("Cancellation Terms",CNDLClass,modHotel);
  Setting("Checklists",ResMesLClass,modHotel);
  Setting("Classification Terms",CClassDLClass,modHotel);
  Setting("Commodity Codes",CommodityLClass,modHotel);
  Setting("Customer Allotments",HCUALClass,modHotel);
  Setting("Customer Terms",HCUDLClass,modHotel);
  Setting("Daily Statistics",SalesTimeTClass,modHotel);
  Setting("Down Payments",DownPayHotelTClass,modHotel);
  Setting("Electronic Locking System",ELockSystemTClass,modHotel);
//  Setting("Concierge",ConciergeLClass,modHotel); // Could be used, but needs a report or something
//  Setting("Contact Persons",ContactLClass,modHotel);
//  Setting("Display Groups",CalDispGroupTClass,modHotel);
//  Setting("Follow Up Schedule",ProgFollowUpsLClass,modHotel); // Follow Up should be done with Activties, but I am wondering what it was ACTUALLY used for
//  Setting("Guest Numbers Range",GuestOptTClass,modHotel);
  Setting("Guest Services",GuestObserLClass,modHotel);
  Setting("Guest Service Types",OBTypeLClass,modHotel);
  Setting("Housekeeping",HouseKeepingTClass,modHotel);
  Setting("Hotel Settings",HotelTClass,modHotel);
  Setting("Invoice Items",ResArtCodeLClass,modHotel);
  Setting("Newspapers",NewspaperTClass,modHotel);
  Setting("Night Audit Preferences",NightAuditPrefLClass,modHotel);
  Setting("Nightly Maintenance",NightMaintTClass,modHotel);
  Setting("Number Series - Res. Quotations",ResAvSerTClass,modHotel);
  Setting("Number Series - Reservations",JobSerTClass,modHotel);
//  Setting("Number of Guests",QtyConvLClass,modHotel);
  Setting("Online Reservation Settings",OnlineResTClass,modHotel);
  Setting("Price Rules",PriceRulesLClass,modHotel);
//  Setting("Prices",PLLClass,modHotel);
  Setting("Repetitive Items",RepItemsLClass,modHotel);
//  Setting("Reservation Follow Up",FollowUpLClass,modHotel); // Follow Up should be done with Activties, but I am wondering what it was ACTUALLY used for
  Setting("Reservation Prices",JobPriceLClass,modHotel);
  Setting("Reservation Status",ReservationStatusLClass,modHotel);
  Setting("Reservation Status Sequences",ReserSeqLClass,modHotel);
  Setting("Resource Type Support",ResTypeSupportLClass,modHotel);
//  Setting("#Restaurant# Bookings",RestBookingLClass,modHotel);
//  Setting("#Restaurant# Open Hours",RestOpenHoursTClass,modHotel);
  Setting("Room Classification",ResClasLClass,modHotel);
  Setting("Room Classification Types",ResClasTypeLClass,modHotel);
  Setting("Room Location",ResLocLClass,modHotel);
//  Setting("Room Maintenance",ResExistLClass,modHotel); // Very beautiful function, but unfortunatly BLOCK works better.
  Setting("Room Package",ResUsageLClass,modHotel);
  Setting("Room Package Types",ResUsageTypeLClass,modHotel);
  Setting("Room Settings",ResSettingTClass,modHotel);
  Setting("Room Status",ResourceStatusLClass,modHotel);
  Setting("Room Types",ResTypeLClass,modHotel);
  Setting("Schedule Rules",ScheduleRuleLClass,modHotel);
  Setting("Visit Purpose",VisitPurposeLClass,modHotel);

//  Setting("Shopping Basket",ShopBaskLClass,modHotel);
//  Setting("Account Usage",PPAccTClass,modHotel);
//  Setting("Areas Codes",AreaLClass,modHotel);
//  Setting("Job Groups",EGLClass,modHotel);
//  Setting("Job Place",PlaceLClass,modHotel);
//  Setting("Place Keys",PlKeyLClass,modHotel);
//  Setting("Planned Time",PlanTimeTClass,modHotel);
//  Setting("Room Categories",ResCatLClass,modHotel);

  Report("Activities per Room",ResActivitiesRClass,RoomActRn,0,modHotel);
  Report("Channel Statistics",ChannelStatRClass,ChannelStatRn,0,modHotel);
//  Report("Assign Cleaners",AssignCLadyRClass,AssignCLadyRn,0,modHotel); // very advanced report, if we need it, we add it later
//  Report("Checkin/Checkout History",HotelEventsRClass,HotelEventsRn,0,modHotel);  // Very wierd report, activities are now disconnected, this won't work any more
  Report("Check Ins",CheckInRClass,CheckInRn,0,modHotel);
  Report("Check Outs",CheckOutRClass,CheckOutRn,0,modHotel);
  Report("Daily Statistics",SalesTimeRClass,SalesTimeRn,0,modHotel);
  Report("Duration of Stay",StayStatsRClass,StayStatsRn,0,modHotel);
//  Report("Follow Up Journal",FollowUpJRClass,FollowUpJRn,0,modHotel); // Follow Up should be done with Activties, but I am wondering what it was ACTUALLY used for
  Report("Folio Journal",ShopBaskJourRClass,ShopBaskJourRn,0,modHotel); // Proper Name?
  Report("Guest Accounts Overview",GuestLedgerRClass,GuestLedgerRn,0,modHotel);
//  Report("Guest Allocation Report",AllocGuestRClass,AllocGuestRn,0,modHotel); // Shows same information as In-House guest
  Report("Guest History",GuestHistRClass,GuestHistRn,0,modHotel);
  Report("Guest Book",GuestBookRClass,GuestBookRn,0,modHotel);
  Report("Guest List",GuestListRClass,GuestListRn,0,modHotel);
  Report("Guest Nationality Statistics",GuestNationStatRClass,GuestNationStatRn,0,modHotel);
  Report("Guest Services List",ObsPerTypeRClass,ObsPerTypeRn,0,modHotel);
  Report("Hotel Cash Register",HotelCashRClass,HotelCashRn,0,modHotel);
  Report("Housekeeping",HousekeepingRClass,HousekeepingRn,0,modHotel);
//  Report("Housekeeping Planning",HousePlanningRClass,HousePlanningRn,0,modHotel); // Too complicated, too detailed
//  Report("Housekeeping Maintenance",HouseMaintRClass,HouseMaintRn,0,modHotel); // Based on Activities, seems crazy
//  Report("Housekeeping Statistics",HouseStatRClass,HouseStatRn,0,modHotel); // Based on Activities, seems crazy
  Report("In-House Guests",InHouseRClass,InHouseRn,0,modHotel);
  Report("Invoice Audit Trail",InvShopRClass,InvShopRn,0,modHotel);
//  Report("Monthly Statistics",MonthlyHotelStatRClass,MonthlyHotelStatRn,0,modHotel); report doesnt exist
  Report("Nationality Statistics",HotNatStatRClass,HotNatStatRn,0,modHotel);
  Report("Newspaper List",NewspaperRClass,NewspaperRn,0,modHotel);
  Report("Night Audit",NightAuditRClass,NightAuditRn,0,modHotel);
  Report("No Show Accounts",NoShowRClass,NoShowRn,0,modHotel);
  Report("Occupancy Report",OcupatationRClass,OcupatationRn,0,modHotel);
  Report("Reservation Journal",JobJourRClass,JobJourRn,0,modHotel);
//  Report("#Restaurant# Bookings",RestBookingRClass,RestBookingRn,0,modHotel); // In restaurant
  Report("Room History",ResHistRClass,RoomHistRn,0,modHotel);
//  Report("Room Info",ResInfoRClass,ResInfoRn,0,modHotel); // Basically shows same as Room List
  Report("Room List",TodayRoomAvailRClass,TodayRoomAvailRn,0,modHotel);
//  Report("Rooming List",RoomingListRClass,RoomingListRn,0,modHotel);
  Report("Room Statistics",HotelStatRClass,HotelStatRn,0,modHotel);
  if (HasLocalization("NAM")) then begin
    Report("Tourism Levy (Namibia)",TourismLevyNamRClass,TourismLevyNamRn,0,modHotel);
  end;
  Report("Unconfirmed Reservations",ConfirmRClass,ConfirmRn,0,modHotel);
  Report("Upgrades/Downgrades",UpDownGradeRClass,UpDownGradeRn,0,modHotel);
//  Report("Assignable Rooms",AsigRoomsRClass,AsigRoomsRn,0,modHotel);
//  Report("Guest Observations",GuestObserRClass,GuestObserRn,0,modHotel); // New specification, new code!!!
//  Report("Last Reservation",LastGuestRClass,LastGuestRn,0,modHotel);
//  Report("Rooms Available",ResAvailRClass,FindJobRn,0,modHotel); What does this show...
//  Report("Room Overview",ResOverRClass,ResOverRn,0,modHotel);

  Document("Guest",GuestDocRClass,GuestDocForm,GuestDocFClass,modHotel);
  Document("Reservation Check Outs",JobCheckOutRClass,Job1Form,Job1FClass,modHotel);
  Document("Reservation Confirmations",JobConfRClass,Job3Form,Job3FClass,modHotel);
  Document("Reservation Enquiries",JobEnqRClass,Job2Form,Job2FClass,modHotel);
  Document("Reservation Quotations",ResAvRClass,ResAvForm,ResAvFClass,modHotel);
  Document("Reservations",JobRClass,JobForm,JobFClass,modHotel);
//  Document("Tourism Levy",TourismLevyRClass,TourismLevyForm,TourismLevyFClass,modHotel);

  Maintenance("Create Allotment Reservations",HCUAVClass,HCUAMn,modHotel);
  Maintenance("Create Group Reservations from Mother Reservations",GrJobFromMoJobVClass,GrJobFromMoJobMn,modHotel);
  Maintenance("Create Invoices",PPInvVClass,PPInvMn,modHotel);
  Maintenance("Create Group Invoice from Reservations",GenResInv2VClass,GenResInv2Mn,modHotel);
  Maintenance("Create Invoice from Group Reservation",IVFromGroupJobVClass,IVFromGroupJobMn,modHotel);
  Maintenance("Nightly Maintenance",MidStatChangeVClass,MidStatChangeMn,modHotel);
//  Maintenance("Preventative Maintenance",AgImpVClass,AgImpMn,modHotel); // Good idea, but not useful as it is
  Maintenance("Rebuild Resource Type Support",RebuildResTypeSupVClass,RebuildResTypeSupMn,modHotel);
  Maintenance("Recalculate Invoicable",RecJobInvVClass,RecJobInvMn,modHotel);
  Maintenance("Unconfirmed Reservations",ConfirmVClass,ConfirmMn,modHotel);
//  Maintenance("Update Customer Accounts",UpdateCustAccVClass,UpdateCustAccMn,modHotel); // Why have this, it does the same as Nightly but not as good...
//  Maintenance("Create #Time Sheets#",GenTSFromJobVClass,GenTSJobMn,modHotel);

/* modPP */

  RegisterWS("Reservations","Reservations","New Reservation",JobVc,modPP);
  RegisterWS("Resources","Resources","Nwe Resource",ResVc,modPP);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modPP);
  RegisterWS("Items","Items","New Item",INVc,modPP);

  Setting("Display Groups",CalDispGroupTClass,modPP);
  Setting("Exists",ResExistLClass,modPP);
  Setting("Invoice Items",ResArtCodeLClass,modPP);
  Setting("Number Series - Reservations",JobSerTClass,modPP);
  Setting("Prices",PLLClass,modPP);
  Setting("Resource Classification",ResClasLClass,modPP);
  Setting("Resource Classification Types",ResClasTypeLClass,modPP);
  Setting("Resource Settings",ResSettingTClass,modPP);
  Setting("Resource Type Support",ResTypeSupportLClass,modPP);
  Setting("Resource Types",ResTypeLClass,modPP);
  Setting("Resource Locations",ResLocLClass,modPP);
  Setting("Resource Status",ResourceStatusLClass,modPP);
  Setting("Reservation Status",ReservationStatusLClass,modPP);
  Setting("Resource Usage",ResUsageLClass,modPP);
  Setting("Reservation Status Sequences",ReserSeqLClass,modPP);
// I picket the name, and I don't like it -- Change welcome! -- Erik
  Setting("Resource Planner",ResPlanTClass,modPP);

  Report("Available Resources",ResAvailRClass,FindJobRn,0,modPP);
  Report("Last Reservation",LastGuestRClass,LastGuestRn,0,modPP);
  Report("Reservation Journal",JobJourRClass,JobJourRn,0,modPP);
  Report("Resource Activities",ResActivitiesRClass,ResActRn,0,modPP);
  Report("Resource History",ResHistRClass,ResHistRn,0,modPP);
  Report("Resource Info",ResInfoRClass,ResInfoRn,0,modPP);
  Report("Resource List",TodayResAvailRClass,TodayResAvailRn,0,modPP);

  Document("Reservations",JobRClass,JobForm,JobFClass,modPP);

  Maintenance("Create Invoices",PPInvVClass,PPInvMn,modPP);
  Maintenance("Rebuild Resource Type Support",RebuildResTypeSupVClass,RebuildResTypeSupMn,modPP);
  Maintenance("Recalculate Invoicable",RecJobInvVClass,RecJobInvMn,modPP);
  Maintenance("Update Customer Accounts",UpdateCustAccVClass,UpdateCustAccMn,modPP);

// modTel - Telephone connections

  RegisterWS("Calls","Calls","New Call",TelCallsVc,modTel);
  RegisterWS("Internal Numbers","Internal Numbers","New Internal Number",TelEGroupVc,modTel);
  RegisterWS("Trunk Groups","Trunk Groups","New Trunk Group",TelTGroupVc,modTel);
  RegisterWS("PBX Connections","PBX Connections","New PBX Connection",PBXConnectionVc,modTel);
  RegisterWS("Asterisk Users","Asterisk Users","New Asterisk User",AsteriskUser2Vc,modTel);
  RegisterWS("SIP Trunks","SIP Trunks","New SIP Trunk",SipTrunk2Vc,modTel);
  Register("Queues","Queues",PBXQueueVc,modTel);
  Register("Menus","Menus",PBXIVRTreeVc,modTel);

  Setting("Extra Asterisk Managers",PBXExtraManagersClass,modTel);
  Setting("#Bank Holidays#",BHollLClass,modTel);
  Setting("Local Asterisk Server",LocalAsteriskTClass,modTel);
  Setting("PBX Sounds",PBXSoundLClass,modTel);
  Setting("Phone Options",PhoneTClass,modTel);
  Setting("Registered Phone Numbers",CallRegTypeLClass,modTel);
  Setting("Tariff Matrix",TelDayMatrixLClass,modTel);
  Setting("Tel. Extensions",ResComLClass,modTel);
  Setting("Trunk Groups",TelTrunkGroupLClass,modTel);
  Setting("Type of Call",CallTypeLClass,modTel);

  Report("Asterisk Queue Status",AsteriskQueueStatusRClass,AsteriskQueueStatusRn,0,modTel);
  Report("Asterisk User Status",AsteriskPeersRClass,AsteriskPeersRn,0,modTel);
  Report("Communication History",CallHisRClass,CallHisRn,0,modTel);
  Report("Phone Calls History",PersTelHisRClass,PersTelHisRn,0,modTel);
  Report("SIP Extensions, Persons",SIPUserRClass,SIPUserRn,0,modTel);

  Maintenance("Asterisk SIP Configuration files",AsteriskSIPConfigVClass,AsteriskSIPConfigMn,modTel);
  Maintenance("Asterisk SIP Trunks",AsteriskSIPTrunkVClass,AsteriskSIPTrunkMn,modTel);
  Maintenance("Asterisk Users",AsteriskUserVClass,AsteriskUserMn,modTel);
  Maintenance("Charge Calls",ChargeCalVClass,ChargeCalMn,modTel);

/* modRsrt */

  RegisterWS("Event Types","Event Types","New Event Type",RsrtEventTypeLClass,modRsrt);
  RegisterWS("Events Schedules","Events Schedules","New Events Schedule",RsrtEventScheduleVc,modRsrt);
  RegisterWS("Events","Events","New Event",RsrtEventLClass,modRsrt);
  RegisterWS("Resources","Resources","New Resource",RsrtResLClass,modRsrt);
  RegisterWS("Event Type Packages","Event Type Packages","New Event Type Package",RsrtEventTypePackLClass,modRsrt);
  RegisterWS("Event Type Resources","Event Type Resources","New Event Type Resource",RsrtEventTypeResLClass,modRsrt);

  Setting("Resource Types",ResTypeLClass,modRsrt);

  Report("Available Events",RsrtEventAvailRClass,RsrtEventAvailRn,0,modRsrt);

  Maintenance("Create Resort Event Invoices",IVRsrtEventVClass,IVRsrtEventMn,modRsrt);

/*
old thing being replaced
  Register("Reservations","Reservations",JobLClass,modRsrt);
  Register("Transfers","Transfers",TransferLClass,modRsrt);
  Register("Events","Events",ExcursionLClass,modRsrt);
  Register("Event Types","Event Types",ExcurTypeLClass,modRsrt);
  Register("Stretches","Stretches",RouteLClass,modRsrt);
  Register("#Km# Positions","#Km# Positions",KmCountLClass,modRsrt);
  Register("Vehicles","Vehicles",VehicleLClass,modRsrt);

  Setting("Event Groups",ExcurGroupLClass,modRsrt);
  Setting("Places",EventPlaceLClass,modRsrt);
  Setting("Program Suggestions",PLProgramLClass,modRsrt);
  Setting("Required Streches",ReqTranfLClass,modRsrt);
  Setting("Resort Settings",ResortTClass,modRsrt);
  Setting("Suggested Programs",ResEventTypeLClass,modRsrt);

  Report("Event History",EventHistRClass,EventHistRn,0,modRsrt);
  Report("Event Journal",EventJourRClass,EventJourRn,0,modRsrt);
  Report("Planned Events",PlannedStayRClass,PlannedStayRn,0,modRsrt);
  Report("Suggested Programs",ResEventTypeRClass,ResEventTypeRn,0,modRsrt);
  Report("Transfer Journal",TransfJourRClass,TransfJourRn,0,modRsrt);
  Report("Vehicle Occupation",VehOcupRClass,VehOcupRn,0,modRsrt);

  Document("Event",ExcurDocRClass,ExcurDocForm,ExcurDocFClass,modRsrt);
  Document("Transfer",TransferDocRClass,TransferDocForm,TransferDocFClass,modRsrt);

  Maintenance("Generate Events",GenExcurVClass,GenExcurMn,modRsrt);
  Maintenance("Generate Mail to #Suppliers#",GenVEMailVClass,GenVEMailMn,modRsrt);
  Maintenance("Generate Transfers",GenTransferVClass,GenTransferMn,modRsrt);
*/

/* modRent */

  RegisterWS("Agreements","Agreements","New Agreement",AgreementVc,modRent);
  RegisterWS("Rental Reservations","Rental Reservations","New Rental Reservation",RentResVc,modRent);
  RegisterWS("Rental Quotations","Rental Quotations","New Rental Quotation",RentQTVc,modRent);
  RegisterWS("Collections","Collections","New Collection",CollectionVc,modRent);
  RegisterWS("Rental Items","Rental Items","New Rental Item",RentINVc,modRent);
  RegisterWS("Rental Item Inspections","Rental Item Inspections","New Rental Item Inspection",InspectConLClass,modRent);

  Setting("Advanced Pricing Template",AdvPriceTemplLClass,modRent);
  Setting("#Authorised# Customers",AuthCustLClass,modRent);
  Setting("#Bank Holidays#",BHollLClass,modRent);
  Setting("Basic Rental Price List",RentPriceListLClass,modRent);
  Setting("Customers #Bank Holidays#",BHollCustLClass,modRent);
  Setting("Delivery Addresses",DelAddrLClass,modRent);
  Setting("Inspection Status",InspectStatusLClass,modRent);
  Setting("Invoice per Department",RentDepTClass,modRent);
  Setting("Item Classification",DILClass,modRent);
  Setting("Items",INLClass,modRent);
  Setting("Number Series - Agreements",RentAgrSerTClass,modRent);
  Setting("Number Series - Rental Quotations",RentQTSerTClass,modRent);
  Setting("Number Series - Rental Reservations",RentResSerTClass,modRent);
  Setting("Recipes",RecLClass,modRent);
  Setting("Rental Charge Type",AgreeTypeLClass,modRent);
  Setting("Rental Extra Charges",RentChargesTClass,modRent);
  Setting("Rental Invoice Settings",RentInvoiceTClass,modRent);
  Setting("Rental Item Groups",RentITLClass,modRent);
  Setting("Rental Settings",RentControlTClass,modRent);
  Setting("Rental Quotation Mail",RentQTMailTClass,modRent);
  Setting("Rental Price Lists",RentalPriceListsLClass,modRent);
  Setting("Rental Pricing Options",RentPriceSetTClass,modRent);
  Setting("Rental Reservation Status",AgreeStatusLClass,modRent);
  Setting("Resource Planner",ResPlanTClass,modRent);
//  Setting("Sites",SiteLClass,modRent); // Replaced by Delivery Address
  Setting("Standard Texts",LTxtLClass,modRent);
//  Setting("Advanced Prices",AdvPriceRecLClass,modRent);

  Report("Agreement Invoicing",AgreeInvRClass,AgreeInvRn,0,modRent);
  Report("Availability",RentResAvailRClass,RentResAvailRn,0,modRent);
  Report("Collection Status",CollectionStatusRClass,CollectionStatusRn,0,modRent);
  Report("Current Rental Reservations",CurRentResRClass,CurRentResRn,0,modRent);
  Report("Customer Rental Status",CustRentStatRClass,CustRentStatRn,0,modRent);
  Report("Inspection Status",InspectionStatusRClass,InspectionStatusRn,0,modRent);
  Report("Internal #Stock# Movement Status",IntStockMovStatusRClass,IntStockMovStatusRn,0,modRent);
  Report("Item at Site",ItemAtSiteRClass,ItemAtSiteRn,0,modRent);
  Report("Item In Status",ItemInStatusRClass,ItemInStatusRn,0,modRent);
  Report("Item Out Status",ItemOutStatusRClass,ItemOutStatusRn,0,modRent);
  Report("Missed Rental Opportunities",MissedRentOppRClass,MissedrentOppRn,0,modRent);
  Report("Outstanding Rental Quotations",RentQTStkRClass,RentQTStkRn,0,modRent);
  Report("Rental Quotation Journal",RentQTJRClass,RentQTJRn,0,modRent);
  Report("Rental Quotation #Salesman# Statistics",RentQTSMStatsRClass,RentQTSMStatRn,0,modRent);
  Report("Rental Quotation Status",RentQTStatusRClass,RentQTStatusRn,0,modRent);
  Report("Rental Price List",RentResAccesPLRClass,RentResAccesPLRn,0,modRent);
  Report("Rental Reservations Transactions",CRentResTransRClass,RentResTransRn,0,modRent);
  Report("Rental Reservation History",RentResHistRClass,RentResHistRn,0,modRent);
  Report("Rental Revenue",RentRevenueRClass,RentRevenueRn,0,modRent);
  Report("Rental Serial Number Item Status",SerialItemRentalStatusRClass,SerialItemRentalStatusRn,0,modRent);
  Report("Serial Number History",SerialNrRClass,SerialNrRn,0,modRent);
  Report("Uncollected Off-Hire",UncOffHireRClass,UncOffHireRn,0,modRent);

  Document("Agreements",AgreementRClass,AgreementForm,AgreementFClass,modRent);
  Document("Collections",CollectionRClass,CollectionForm,CollectionFClass,modRent);
  Document("Detailed Agreements",AgreementDetRClass,AgreementDetForm,AgreementDetFClass,modRent);
  Document("Rental Reservations",RentResRClass,RentResForm,RentResFClass,modRent);
  Document("Rental Quotations",RentQTRClass,RentQTForm,RentQTFClass,modRent);

  Export("Rental Item Utilization",InstrUtilEClass,InstrUtilEn,modRent);

  Maintenance("Charge Reservations",GenRentChargesVClass,ChargeAgreementMn,modRent);
  Maintenance("Generate Collections",RentResCollectionVClass,RentResCollectionMn,modRent);
  Maintenance("Generate Items In",RentResOffHireVClass,RentResOffHireMn,modRent);
  Maintenance("Generate Items Out",RentResDispatchVClass,RentResDispatchMn,modRent);
  Maintenance("Invoice Agreement",GenAgreeInvVClass,GenAgreeInvMn,modRent);
//  Maintenance("Recalculate Rental Reservations",RecalcRentResVClass,RecalcRentResMn,modRent);

/* modIntStock */

  RegisterWS("Items In","Items In","New Items In",OffHireVc,modIntStock);
  RegisterWS("Items Out","Items Out","New Items Out",DispatchVc,modIntStock);
  RegisterWS("#Stock# Transfers","#Stock# Transfers","New #Stock# Transfer",INTransferVc,modIntStock);
  RegisterWS("Internal #Stock# Movements","Internal #Stock# Movements","New Internal #Stock# Movement",InternMovVc,modIntStock);
  RegisterWS("Rental Items","Rental Items","New Rental Item",RentINVc,modIntStock);
  RegisterWS("Items","Items","New Item",INLClass,modIntStock);
//  Register("Assets","Assets",AT2UnitVc,modIntStock);
//  Register("Known Serial No.","Known Ser.No.",SVOSerVc,modIntStock);

  Setting("Internal #Stock# Settings",IntSettingTClass,modIntStock);
  Setting("Number Series - Items In",OffHireSerTClass,modIntStock);
  Setting("Number Series - Items Out",DispatchSerTClass,modIntStock);
  Setting("Number Series - #Stock# Transfers",INTransferSerTClass,modIntStock);

  Report("Internal #Stock# List",IntINRClass,IntInvValRn,0,modIntStock);
  Report("Items In Journal",GoodsINRClass,GoodsinRn,0,modIntStock);
  Report("Items Out Journal",GoodsOutRclass,GoodsOutRn,0,modIntStock);
  Report("#Stock# Transfer Journal",INTransferRClass,INTransferRn,0,modIntStock);
  Report("Serial Number History",SerialNrRClass,SerialNrRn,0,modIntStock);

  Document("Internal #Stock# Movements",InternMovRClass,InternMovForm,InternMovFClass,modIntStock);
  Document("Items In",OffHireRClass,OffHireForm,OffHireFClass,modIntStock);
  Document("Items Out",DispatchRClass,DispatchForm,DispatchFClass,modIntStock);
  Document("#Stock# Transfers",INTransferRClass,INTransferForm,INTransferFClass,modIntStock);

/* modPOProg */
  RegisterWS("Sales Forecast","Sales Forecast","New Sales Forecast",SalesForecastVc,modPOProg);
  RegisterWS("Production Plan","Production Plan","New Production Plan",ProdPlanVc,modPOProg);
  RegisterWS("Purchase Order Plan","Purchase Order Plan","New Purchase Order Plan",POPlanVc,modPOProg);
  RegisterWS("Purchase Items","Purchase Items","New Purchase Item",PIVc,modPOProg);
  RegisterWS("Items","Items","New Item",INVc,modPOProg);
  RegisterWS("Recipes","Recipes","New Recipe",RecVc,modPOProg);

  Setting("Auto Production Items",AutoProdLClass,modPOProg);
  Setting("#Bank Holidays# for Sales Forecast",SFBHollLClass,modPOProg);
  Setting("Forecast Classes",ForecastClassLClass,modPOProg);
  Setting("Forecast Settings",SFPeriodsTClass,modPOProg);
//  Setting("No. of Production Days",SFProdDaysTClass,modPOProg);
//  Setting("No. of Sales Days",SFSalesDaysTClass,modPOProg);
  Setting("No. of Work Days",SFWorkDaysLClass,modPOProg);
  Setting("Number Series - Production Plans",ProdPlanSerTClass,modPOProg);
  Setting("Number Series - Purchase Order Plans",POPlanSerTClass,modPOProg);
  Setting("Number Series - Sales Forecasts",SalesForSerTClass,modPOProg);
  Setting("Production Item Alternatives",ProdItemLClass,modPOProg);
  Setting("Production Plan Components",ProdPlanCompLClass,modPOProg); // should possibly not be on screen
  Setting("#Stock# Policies",StockPolicyLClass,modPOProg);

  Report("Basic Item Requirements",BasicItemReqRClass,BasicItemReqRn,0,modPOProg);
  Report("Calculated Month Closing #Stock# Levels",CalcStockLevelsRClass,CalcStockLevelsRn,0,modPOProg);
  Report("Create Production Plan - Preview",ProdPlanRClass,ProdPlanRn,0,modPOProg);
  Report("Create Productions - Preview",ProdPlanProdRClass,ProdPlanProdRn,0,modPOProg);
  Report("Create Purchase Orders - Preview",POPlanOrdRClass,POPlanOrdRn,0,modPOProg);
  Report("Create Purchase Order Plan - Preview",POPlanRClass,POPlanRn,0,modPOProg);
  Report("Expected Arrivals",ExpArrivalRClass,ExpArrivalRn,0,modPOProg);
  Report("Sales Forecast",SalesForecastRClass,SalesForecastRn,0,modPOProg);
  Report("Sales Forecast Accuracy",SalesFCompRClass,SalesFCompRn,0,modPOProg);
  Report("#Stock# Levels based on #Stock# Policy",PolicyForecastRClass,PolicyForecastRn,0,modPOProg);
  Report("#Stock# List",INRClass,InvValRn,0,modPOProg);

  Maintenance("Create Production Plan",ProdPlanVClass,ProdPlanMn,modPOProg);
  Maintenance("Create Productions",ProdPlanProdVClass,ProdPlanProdMn,modPOProg);
  Maintenance("Create Purchase Orders",POPlanOrdVClass,POPlanOrdMn,modPOProg);
  Maintenance("Create Purchase Order Plan",POPlanVClass,POPlanMn,modPOProg);

/*
  Register("Prognosis Orders","Prognosis Orders",ORProgVc,modPOProg);
  Register("Detailed Prognosis","Detailed Prognosis",INProgVc,modPOProg);
  Register("Calculated Order or Purchase #Stock#","Calculated O/PO #Stock#",PrelORPUStockVc,modPOProg);
  Register("Calculated #Stock# Levels","Calculated #Stock# Levels",PrelStockVc,modPOProg);
  Register("Purchase Items","Purchase Items",PIVc,modPOProg);
  RegisterWS("Items","Items","New Item",INVc,modPOProg);

  Report("Prognosis Orders Journal",ORProgJRClass,ORProgJRn,0,modPOProg);
  Report("Prognosis List",ProgListRClass,ProgListRn,0,modPOProg);
  Report("Purchase Prognosis",PurchProgRClass,PurchProgRn,0,modPOProg);

  Document("Prognosis Orders",ORProgRClass,ORProgForm,ORProgFClass,modPOProg);

  Setting("Location Selection",INProgLocTClass,modPOProg);
  Setting("Order Class Selection",INProgOrdClassTClass,modPOProg);
//  Setting("Number Series - Prognosis Orders",ORProgSerTClass,modPOProg);

  Maintenance("Calculate All",CalcAllPurchProgVClass,CalcAllPurchProgMn,modPOProg);
  Maintenance("Calculate SO/PO #Stock#",CalcSOPOStockVClass,CalcSOPOStockMn,modPOProg);
  Maintenance("Calculate #Stock# Levels",CalcINLevelsVClass,CalcINLevelsMn,modPOProg);
  Maintenance("Calculate Prognosis",UpdProgVClass,UpdProgMn,modPOProg);
  Maintenance("Cleanup Temporary Data",CallAllCleanVClass,CallAllCleanMn,modPOProg);
  Maintenance("Generate Purchase Orders",PurchProgVClass,PurchProgMn,modPOProg);
  Maintenance("Delete Purchase Orders",DelPOVClass,DelPOMn,modPOProg);

  Export("Calculate SO/PO #Stock#",CalcSOPOStockEClass,CalcSOPOStockEn,modPOProg);
  Export("Purchase Prognosis",PurchProgEClass,PurchProgEn,modPOProg);
*/

/* modSVO */

  RegisterWS("Service Orders","Service Orders","New Service Order",SVOVc,modSVO);
  RegisterWS("Work Orders","Work Orders","New Work Order",WOVc,modSVO);
  RegisterWS("Work Sheets","Work Sheets","New Work Sheet",WSVc,modSVO);
  Register("Service #Stock# Transactions","Service #Stock# Transactions",SVGMVc,modSVO);
  Register("Work Sheet Transactions","Work Sheet Transactions",WSIVVc,modSVO);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modSVO);
  RegisterWS("Items","Items","New Item",INVc,modSVO);
  RegisterWS("Known Serial Numbers","Known Serial Numbers","New Known Serial Number",SVOSerVc,modSVO);

  Setting("Account Usage Service Order",AccSVOTClass,modSVO);
//  Setting("Apple GSX Queue",GSXQueueLClass,modSVO);

  Setting("Apple GSX Settings",GSXSettingsTClass,modSVO);
  Setting("Batch Quality Control",QualConLClass,modSVO);
  Setting("Batch Quality Control Rules",QCTestRulesTClass,modSVO);
//  Setting("Batch Quality Control Units",QCUnitLClass,modSVO);
  Setting("Batch Quality Control Templates",QCTemplateLClass,modSVO);
  Setting("Batch Quality Control Tests",QCTestLClass,modSVO);
  Setting("Batch Status",BatchStatusLClass,modSVO);
  Setting("Classification Types",CTypeLClass,modSVO);
  Setting("Contact Classifications",CClassLClass,modSVO);
//  Setting("Contact Persons",ContactLClass,modSVO);
  Setting("Info in Customer Status Report",CustPSLClass,modSVO);
  Setting("Locations",LocationLClass,modSVO);
  Setting("Number Series - Service Orders",SVOSerTClass,modSVO);
  Setting("Number Series - Service #Stock# Transactions",SVGMSerTClass,modSVO);
  Setting("Number Series - Work Orders",WOSerTClass,modSVO);
  Setting("Number Series - Work Sheets",WSSerTClass,modSVO);
  Setting("Order Classes",OrderClassLClass,modSVO);
  Setting("Payment Terms",PDLClass,modSVO);
  Setting("Planned Delivery",PlanDeliveryTClass,modSVO);
  Setting("Replaced Items",ReplItemsLClass,modSVO);
  Setting("Serial Number Text",SVOTextLClass,modSVO);
  Setting("Standard Problem Modifiers",StdProblemModLClass,modSVO);
  Setting("Standard Problems",StandProblemLClass,modSVO);
  Setting("#Stock# Settings",MainStockTClass,modSVO);

  Import("Known Serial Numbers",SVOSerIn,SVOSerIn,modSVO); // Now it is possible to use, I have changed how it works.

  Document("Service Orders",SVORClass,SVOForm,SVOFClass,modSVO);
  Document("Service #Stock# Transactions",SVGMRClass,SVGMForm,SVGMFClass,modSVO);
  Document("Work Orders",WOrdRClass,WOrdForm,WOrdFClass,modSVO);
  Document("Work Sheets",WSRClass,WSForm,WSFClass,modSVO);

  Report("Batch Quality Control Results",QualConResRClass,QualConResRn,0,modSVO);
  Report("Batch Quality Control Tests",QualConRClass,QualConRn,0,modSVO);
  Report("Batch Quality Reclamations",QualConRecRClass,QualConRecRn,0,modSVO);
  Report("Item Statistics",ArtSTRClass,ArtSTRn,0,modSVO);
  Report("Outstanding Service Orders",SVOStockRClass,SVOStockRn,0,modSVO);
  Report("Serial Number History",SerialNrRClass,SerialNrRn,0,modSVO);
  Report("Service Order Employee Statistics",SVOEMStatRClass,SVOEMStatRn,0,modSVO);
  Report("Service Order Journal",SVOListRClass,SVOListRn,0,modSVO);
  Report("Service Order Status",SVOStaRClass,SVOStaRn,0,modSVO);
  Report("Service #Stock# Item History",SVOINRClass,SVOItemRn,0,modSVO);
  Report("Service #Stock# Transaction Journal",GIOListRClass,GIOListRn,0,modSVO);
  Report("Work Order Journal",WOListRClass,WOListRn,0,modSVO);
  Report("Work Sheet Journal",WSListRClass,WSListRn,0,modSVO);
  Report("Work Sheet Transactions",WSTransRClass,WSTranRn,0,modSVO);
//  Report("Average Service Interval ",AvgServIntRClass,AvgServIntRn,0,modSVO);
//  Report("Standard Problems ",StandProblemsRClass,StandProblemsRn,0,modSVO);

  Maintenance("Batch Status Change",BatchStatChVClass,BatchStatChMn,modSVO);
  Maintenance("Create Work Orders",WorkOrderVClass,WorkOrderMn,modSVO);
  Maintenance("Recalculate Invoiced",RecSVOVClass,RecSVOMn,modSVO);
//  Maintenance("Create Invoices",SVOInvVClass,MakeInvMn,modSVO);//doesn't exist

/* modEDI */
  Register("EDI Orders","EDI Orders",EDIORVc,modEDI);
  Register("EDI Invoices","EDI Invoices",EDIIVVc,modEDI);

  Setting("EDI Settings",EDISetTClass,modEDI);

  Export("Anilink",EDIAnilinkEClass,EDIAnilinkEn,modEDI);
  Export("Golden West Invoice",EDIVGWClass,EDIVGWEn,modEDI);
  Export("HANCOM97 Invoice",EDIHANCOMINVEClass,EDIHANCOMInvEn,modEDI);
  Export("IN Trade Invoice",EDIIntradeEClass,EDIIntradeEn,modEDI);
  Export("INVFIL 8",EDIVDeltaEClass,EDIVDeltaEn,modEDI);
  Export("INVFIL 9",EDIVEClass,EDIVEn,modEDI);
  Export("Kesko Invoice",EDIKeskoEClass,EDIKeskoEn,modEDI);
  Export("Kewill Extract",EDIVKEClass,EDIVKEn,modEDI);
  Export("Sainsbury Invoice",EDIVSEClass,EDIVSEn,modEDI);
  Export("Stralfors",EDIStrEClass,EDIStrEn,modEDI);

  Import("Anilink Order",EDIAnilinkIn,EDIAnilinkIn,modEDI);
  Import("B & Q Order",EDIORDeltaIn,EDIORDeltaIn,modEDI);
  Import("Golden West Order",EDIORGWIn,EDIORGWIn,modEDI);
  Import("HANCOM97 Order",EDIORHANCOMIn,EDIORHANCOMIn,modEDI);
  Import("IN Trade Order",EDIORIntradeIn,EDIORIntradeIn,modEDI);
  Import("Kesko Order",EDIORKeskoIn,EDIORKeskoIn,modEDI);
  Import("Sainsbury Order",EDIORSIn,EDIORSIn,modEDI);
  Import("Tesco Order",EDIORIn,EDIORIn,modEDI);
  Import("Tradeka Order",EDITradekaIn,EDITradekaIn,modEDI);

  Maintenance("Create Orders from EDI Orders",GenORFromEDIORVClass,GenORFromEDIOR,modEDI);

/* modLocal */

  Register("Local Mail","Local Mail",LocalMailVc,modLocal);

/* modEmail */

  RegisterWS("Email Aliases","Email Aliases","New Email Alias",EmailAliasVc,modEmail);
  RegisterWS("POP3 Servers","POP3 Servers","New POP3 Server",Pop3ServVc,modEmail);
  Register("Email Queue","Email Queue",EMailQueVc,modEmail);
  Register("Mailboxes","Mailboxes",ConferenceWClass,modEmail);
  RegisterWS("Available Chat Users","Available Chat Users","New Available Chat User",ExtChatUsersVc,modEmail);
  RegisterWS("HTML Templates","HTML Templates","New HTML Template",HtmlTemplateVc,modEmail);
//  Register("Mail Folders","Mail Folders",MailFolderVc,modEmail);
//  Register("Mail Filters","Mail Filters",MailFilterVc,modEmail);

  Setting("Attached Files",Attach2LClass,modEmail);
  Setting("Auto Replies",ConfAutoReplyLClass,modEmail);
  Setting("Conference Access Groups",ConfAccLClass,modEmail);
  Setting("Email Addresses",EmailAddrLClass,modEmail);
  Setting("Email SMTP Server",EmailTClass,modEmail);
  Setting("Gateway Settings",GatewayTClass,modEmail);
  Setting("Mail and Conference Settings",MailSettingsTClass,modEmail);
  Setting("Mail Tags",MailTagLClass,modEmail);
  Setting("Mail Texts",MailTextLClass,modEmail);
  Setting("Mailbox Browse",ConfLClass,modEmail);
  Setting("Number Series - Mails",MailSerTClass,modEmail);  
  Setting("Presentations",ConfPresLClass,modEmail);
  Setting("Signatures",ConfSignLClass,modEmail);

  Report("Active Chats",ChatRClass,ChatRn,0,modEmail);
  Report("Attached Files",Attach2RClass,Attach2Rn,0,modEmail);
  Report("Conference Access",ConfAccessRClass,ConfAccessRn,0,modEmail);
  Report("Email Aliases",EMailAliasRClass,EMailAliasRn,0,modEmail);
  Report("Email Queue List",EMailQueJRClass,EMailQueJRn,0,modEmail);
  Report("Email Validation Status",StdIDValidationStatusRClass,StdIDValidationStatusRn,0,modEmail);
  Report("Find Conference",FindConfRClass,FindConfRn,0,modEmail);
  Report("Mail Acceptance Status",MailAcptncStatRClass,MailAcptncStatRn,0,modEmail);
  Report("Mail Count",ConfCntRClass,ConfCntRn,0,modEmail);
  Report("Mail History",MailReadRClass,MailReadRn,0,modEmail);
  Report("Sent Email Queue",EmailQueListRClass,EmailQueListRn,0,modEmail);
  Report("Signatures",SignatureRClass,SignatureRn,0,modEmail);
  Report("Users missing Email Address",UserWOEmailAddressRClass,UserWOEmailAddressRn,0,modEmail);
  Report("User Conference Access",UserConfAccessRClass,UserConfAccessRn,0,modEmail);


  Document("Mail",MailRClass,MailForm,MailFClass,modEmail);

  Maintenance("Attached Files",Attach2VClass,Attach2Mn,modEmail);
  Maintenance("Change Default Mailbox Mail Format",ChMaiboxMailFmtVClass,ChMaiboxMailFmtMn,modEmail);
  Maintenance("Change Mailbox Name",ChMaiboxNameVClass,ChMaiboxNameMn,modEmail);
  Maintenance("Clean Up Mail Registers",CleanMailVClass,CleanMailMn,modEmail);
  Maintenance("Clean Up Orphan emails",CleanOrpanedEmailsVClass,CleanOrpanedEmailsMn,modEmail);
  Maintenance("Deactivate Auto Replies",DeactivateAutoRepliesVClass,DeactivateAutoRepliesMn,modEmail);
  Maintenance("Delete Email Queue", DelSentMailVClass,DelSentMailMn,modEmail);
  Maintenance("Empty Mailbox",MailboxCleanVClass,MailboxCleanMn,modEmail);
  Maintenance("Move Emails",MoveEmailVClass,MoveEmailMn,modEmail);
  Maintenance("Restore Deleted Mail",RestoreMailVClass,RestoreMailMn,modEmail);
  Maintenance("Send and Receive Email",SendAndRecVClass,SendAndRecMn,modEmail);
  Maintenance("Update Postmaster Mailbox",UpdPostmasterVClass,UpdPostmasterMn,modEmail);

/* modEG */
  Register("Gateways","Gateways",GatewayTClass,modEG);
  RegisterWS("Email Aliases","Email Aliases","New Email Alias",EmailAliasVc,modEG);
  RegisterWS("POP3 Servers","POP3 Servers","New POP3 Server",Pop3ServVc,modEG);
  Register("SMTP Server","SMTP Server",EmailTClass,modEG);
  Register("Email Queue","Email Queue",EMailQueVc,modEG);
  Register("Fax Queue","Fax Queue",FaxQueVc,modEG);

  Setting("Mail and Conference Settings",MailSettingsTClass,modEG);

/* modSY */

  Register("Companies","Companies",CompaniesTClass,modSY);
  RegisterWS("Persons","Persons","New Person",UserVc,modSY);
  RegisterWS("Accounts","Accounts","New Account",AccVc,modSY);
  RegisterWS("Tags/Objects","Tags/Objects","New Tag/Object",ObjVc,modSY);
  RegisterWS("Currencies","Currencies","New Currency",CurncyCodeVc,modSY);
  RegisterWS("Exchange Rates","Exchange Rates","New Exchange Rate",ERVc,modSY);
//  if (GuiType!=kGuiiPhone) then begin
    RegisterWS("Form Templates","Form Templates","New Form Template",DocVc,modSY);
//  end;
  RegisterWS("Activities","Activities","New Activity",ActVc,modSY);

  Setting("Access Groups",AccessLClass,modSY);
  Setting("Active Users",ListUsersClass,modSY);
  Setting("Auto Actions",AutoActionTClass,modSY);
  Setting("Backup Settings",BackupSettingsTClass,modSY);
  Setting("#Bank Holidays#",BHollLClass,modSY);
  Setting("Base Currency",BaseCurTClass,modSY);
  Setting("Base Currency Rates",BaseERLClass,modSY);
  if (HasLocalization("BRA")) then begin
    Setting("Brazilian Invoice Types",BrazilEInvTypeLClass,modSY);
  end;
  if (HasLocalization("EST,LVA")) then begin
    Setting("Cloud Service Access Control",ISAccessTClass,modSY);
  end;
  Setting("Cloud Services",EnabServerTClass,modSY);
  Setting("Cloud Services Settings",EInvoiceTClass,modSY);
  Setting("Company Date and Numeric Format",SysFormatTClass,modSY);
  Setting("Company Info",CYWClass,modSY);
  Setting("Company Timezone",CompanyTimezoneTClass,modSY);
  Setting("Configuration",ModulesTClass,modSY);
//  Setting("Configurations (NEW)",CUServiceEnabLClass,modSY);
//  Setting("Conversions - Accounts and #VAT# Codes",ConvAccVATCodeTClass,modSY);
  Setting("Conversions - Accounts and #VAT Code#",ConvAccTClass,modSY);
  Setting("Conversions - Activity Types",ConvActTypeTClass,modSY);
  Setting("Conversions - Contact Classifications",ConvCustClassTClass,modSY);
  Setting("Conversions - Contacts",ConvCustTClass,modSY);
  Setting("Conversions - Currency Codes",ConvCurncyCodeTClass,modSY);
  Setting("Conversions - Items",ConvItemTClass,modSY);
  Setting("Conversions - Locations",ConvLocationTClass,modSY);
  Setting("Conversions - Master",ConvMasterTClass,modSY);
  Setting("Conversions - Tags/Objects",ConvObjTClass,modSY);
  Setting("Conversions - Quotation Classes",ConvQuoteClassTClass,modSY);
  Setting("Conversions - #Suppliers#",ConvVendTClass,modSY);
  Setting("Conversions - Users",ConvUserTClass,modSY);
  Setting("Countries",CountryLClass,modSY);
  Setting("Countries Regions",CountryRegionLClass,modSY);
  Setting("Currency Round Off",CurncyRoundOffTClass,modSY);
  Setting("Days and Months",DNMLClass,modSY);
  Setting("Default Values Decimals (old)",DefValDecimalsTClass,modSY);
  Setting("Departments",DepLClass,modSY);
  Setting("Discount Options",GeneralOptionTClass,modSY);
  Setting("Display Groups",CalDispGroupTClass,modSY);
  if (HasLocalization("BRA,ITA")) then begin
    Setting("Districts",DistrictLClass,modSY);
  end;
  if (HasLocalization("BRA")) then begin  
    Setting("Federal Services",FederalSerLClass,modSY);
  end;
  if (HasLocalization("EST")) then begin
    Setting("Electronic Invoices Queries Intervals",EInvQueryIntrvlTClass,modSY);
  end;
  Setting("Exchange Rates Settings",ERTClass,modSY);
  Setting("Form Settings",FormTClass,modSY);
  Setting("Global Warnings on UnOKed Records",UnOkWarnTClass,modSY);
  Setting("Internet Enablers",InternetEnablerTClass,modSY);
  if (!WindowsMode) then begin
    Setting("Job Status",JobStatusClass,modSY);
  end;
  Setting("Journaling",JournalClass,modSY);
  Setting("KPIs",KPIDefLClass,modSY);
  Setting("Languages",LangTClass,modSY);
  Setting("Locking",DBLockTClass,modSY);
  Setting("Locking Exceptions",LockExceptTClass,modSY);
  if (HasLocalization("SVN")) then begin
    Setting("Main Premise",CYAWClass,modSY);
  end;
  if (HasLocalization("BRA")) then begin
    Setting("Municipalities",MunicipalityLClass,modSY);
  end;
  Setting("Number Series Defaults",SRTClass,modSY);
  Setting("Opened Windows History",OpenWindowsHistoryOClass,modSY);
  if (HasLocalization("BRA")) then begin
    Setting("Operation Types",OperationTypeLClass,modSY);
  end;
  Setting("Optional Features",UXFTClass,modSY);
  Setting("Page Setup",PageSetupTClass,modSY);
  Setting("Password Security",PasswdSetTClass,modSY);
  Setting("Persons' Costs",CostUserLClass,modSY);
  Setting("Printer Settings",PrinterSettingsWClass,modSY);
  Setting("Printers",PrintGroupTClass,modSY);
  if (HasRemoteBackup) then begin
    Setting("Remote Backups",RemoteBackupsSClass,modSY);
  end;
  Setting("Reporting Periods",PeriodTClass,modSY);
  Setting("Round Off",RoundTClass,modSY);
  Setting("Sales Groups",SalesGroupLClass,modSY);
  Setting("Single Functions",OneFunctionLClass,modSY);
  Setting("Special Days",SpecDayLClass,modSY);
  Setting("Styles",StyleLClass,modSY);
  Setting("Sub-ledger Control Accounts",SLAccTClass,modSY);
  Setting("Task Manager Access",TodoAccessLClass,modSY);
  Setting("User Warnings on UnOKed Records",UserUnOkWarnLClass,modSY);
  Setting("Values in Text",LangNrLClass,modSY);
  Setting("#VAT Reg. Number# Masks",VATMaskTClass,modSY);
  Setting("Weeks",WeekLClass,modSY);
//  Setting("Communicate With " & ProductName,HWCommTClass,modSY);
//  Setting("Conversions - Conference Addresses",ConvConfAddrTClass,modSY); no code using it
//  Setting("System Usage",ModulesTClass,modSY); // Is no more... Look at the Configuration Window. Tell this to EVERYONE!!!
  if (HasLocalization("HRV,SVN,SRB")) then begin
    Setting("XML Schema Definitions",XMLExportLClass,modSY);
  end;
  //Setting("ZIP Codes",ZIPLClass,modSY);
//  Setting("BI",BIWClass,modSY);
//  Setting("CEO Dashboard",DashboardWClass,modSY);

  Report("Access Control",UserAccessRClass,UserAccessRn,0,modSY);
  Report("Activities, Persons",ActPersRClass,ActPersRn,0,modSY);
  Report("Company Info",CompInfoRClass,CompInfoRn,0,modSY);
  Report("Electronic Invoices Setup Status",EInvSetupStatusRClass,EInvSetupStatusRn,0,modSY);
  Report("Exchange Rates",ERDateRClass,ERDateRn,0,modSY);
  Report("Job Status",JobStatusRClass,JobStatusRn,0,modSY);
  Report("Numbers per Machine",NrsperMachineRClass,NrsperMachineRn,0,modSY);
  Report("Person List",UserRClass,UserRn,0,modSY);
  Report("Services Test",ServicesTestRClass,ServicesTestRn,0,modSY);
  Report("Subsystems Checking",Check1TRRClass,Check1TRRn,0,modSY);
  Report("Sync Check",SyncCheckRClass,SyncCheckRn,0,modSY);
  Report("Sync Status",SyncStatusRClass,SyncStatusRn,0,modSY);
  Report("Sync Client Status",SyncClientStatusRClass,SyncClientStatusRn,0,modSY);
  Report("System Documentation",SysRClass,SysRn,0,modSY);
  Report("Transaction Checking",Check2TRRClass,Check2TRRn,0,modSY);
  Report("User Activities",UserActRClass,UserActRn,0,modSY);
  Report("User Login History",UserHistRClass,UserHistRn,0,modSY);
//  Report("Mail List",MailListRClass,MailListRn,0,modSY);
/* Why?? it is the Tag/Object Result report, why should it be in System ?? */
//  Report("Tag/Object List",ObjResRClass,ObjResRn,0,modSY);
/* Doesn't do much */
//  Report("Settingscontrol",SettingsRClass,SettingsRn,0,modSY);

  Document("Mail",MailRClass,MailForm,MailFClass,modSY);

  Export("Client Text Backup",TBEClass,ClientTBEn,modSY);
  Export("Company Text Backup",TBCompanyEClass,CompanyTBEn,modSY);
  Export("Database Text Backup",TBDatabaseEClass,DatabaseTBEn,modSY);
  Export("Database Text Backup Without Data Warehouse",TBDatabaseEClass,DatabaseTBNoDWHEn,modSY);
  Export("Raw Data",TBRawDataEClass,RawDataEn,modSY);
  Export("Run Timed Backup",TBRunTimedEClass,RunTimedTBEn,modSY);

  Import("Automatic",FullyAutIn,FullyAutIn,modSY);// if we put it like that we will be able to make access systme working
  Import("Manual file search",AutIn,AutIn,modSY);// if we put it like that we will be able to make access systme working

  Maintenance("Create #N/L# Transactions",TransGenVClass,GenTransMn,modSY);
  Maintenance("Delete Old Transactions",DelTransVClass,DelTransMn,modSY);
  if (HasLocalization("HRV")) then begin
    Maintenance("Invoices without Official No.",XMLExportVClass,XMLExportMn,modSY);
  end;

/* modTC */

  Register("Program Mode","Program Mode",ProgramStatusTClass,modTC);
  RegisterWS("Global Users","Global Users","New Global User",GlobalUserVc,modTC);
  RegisterWS("ODBC Events","ODBC Events","New ODBC Event",ODBCEventVc,modTC);
  Register("Firewall","Firewall",FirewallTClass,modTC);
  RegisterWS("Presentations","Presentations","New Presentation",ConfPresVc,modTC);
  RegisterWS("Signatures","Signatures","New Signature",ConfSignVc,modTC);
  Register("Email Queue","Email Queue",EMailQueVc,modTC);
  Register("Fax Queue","Fax Queue",FaxQueVc,modTC);

  Setting("Alarms",AlarmLClass,modTC);
  Setting("Archives",ArchiveLClass,modTC);
  Setting("Available Client Version",AvailableClientTClass,modTC);
  Setting("Biometric Signatures",BiometricSignLClass,modTC);
//  Setting("Client Certificates",ClientCertificateLClass,modTC); //  Not used anymore.
  Setting("Client Integration",ClientIntegrationClass,modTC);
  Setting("Contact Persons (Old Register)",ContactLClass,modTC);
  Setting("CRM Limitations",CRMLimitsTClass,modTC);
  Setting("Database Log",DBLogTClass,modTC);
  Setting("Database Status",DBERecordsTClass,modTC);
  Setting("Escape Sequences",EscSeqLClass,modTC);
  Setting("Fax Settings",FaxSettingsTClass,modTC);
  Setting("Fields Settings",EditFieldsAccessLClass,modTC);
  Setting("Global CRM Settings",GlobalCRMTClass,modTC);
  Setting("Guests (Old Register)",ProfileLClass,modTC);
  Setting("HAL Rules",HALRulesLClass,modTC);
  Setting("Internal System Alerts",BASysIntTClass,modTC);
  Setting("Item Buttons",LocalMachineIBLClass,modTC);
  Setting("Item Tile Labels",LocalMachineITLLClass,modTC);
//  Setting("Local Machines Fiscal Printer Options",LocalMachineFPLClass,modTC); //where is it ?
  Setting("Limited Access",LimitedAccessTClass,modTC);
  Setting("Local Machines",LocalMachineLClass,modTC);
  Setting("Local Machine Serial Port Devices",SerialPortDeviceLClass,modTC);
  Setting("Local Settings",LocalMachineSetLClass,modTC);
  Setting("Logging Control",RHistSetTClass,modTC);
  Setting("Login Actions",LoginActionLClass,modTC);
  Setting("Login Shortcuts",LocalMachineLoginLClass,modTC);
  Setting("Macro",MacroWClass,modTC);
  Setting("Mailboxes",ConferenceWClass,modTC);
  Setting("Mobile Devices",MobileDeviceLClass,modTC);
  Setting("MS Exchange",MSExchangeTClass,modTC);
  Setting("My IP Address",MyIPAddrTClass,modTC);
  Setting("Navigation Links",NavLinkLClass,modTC);
  Setting("ODBC Links",ODBCLinkTClass,modTC);
  Setting("Open TCP/IP", OpenTCPIPTClass,modTC);
  Setting("Password Server",PwdServerTClass,modTC);
  Setting("Poll Registers With Sync",PollRegWithSyncLClass,modTC);
  Setting("Position Alerts",PositionAlertLClass,modTC);
  Setting("Public IP Addresses",PublicIPTClass,modTC);
  Setting("Receipt Printer Texts per Machine",MachineCashLClass,modTC);
  Setting("Register Search Mode",RegSearchTClass,modTC);
  Setting("Relational DB Registers", RDBRegsTClass,modTC);
  Setting("Relational DB Settings", RDBTClass,modTC);
  Setting("Report Specifications", RcLClass,modTC);
  Setting("Secondary Servers",SatServersClass,modTC);
  Setting("Serial Printer",LocalMachineSPLClass,modTC);
  Setting("Services Cache",ServiceCacheLClass,modTC);
  Setting("Shared Blocks",ShareBlockSetTClass,modTC);
  Setting("Shared Registers",ShareVcSetTClass,modTC);
  Setting("SIP Servers (Old, Unused)",SIPServerTClass,modTC);
  Setting("#Supplier# Categories(Old Register)",VGLClass,modTC);
  Setting("#Suppliers# (Old Register)",VELClass,modTC);
  Setting("#Synchronisation# Settings",SyncOptionTClass,modTC);
  Setting("#Synchronised# Number Series",SynkAutoSerLClass,modTC);
  Setting("#Synchronised# Number Series (global registers)",SynkGlobalAutoSerLClass,modTC);
  Setting("Sync. Allocated Serial Numbers",SynkDBIDTakenSerLClass,modTC);
  Setting("Sync. Registered Database ID",SynkDBIDRegLClass,modTC);
  Setting("Sync. Allocated Serial Numbers (global registers)",SynkGlobalDBIDTakenSerLClass,modTC);
  Setting("Sync. Registered Database ID (global registers)",SynkGlobalDBIDRegLClass,modTC);
  Setting("System Logs",SysLogTClass,modTC);
  Setting("TAPI Gateway",TAPIGWTClass,modTC);
  Setting("Timed Operations",BackupTClass,modTC);
  Setting("Timed Imports",TimedImportLClass,modTC);
  Setting("Timed Maintenances",TimedMaintLClass,modTC);
  Setting("Web Client Settings",WebClientSettingsTClass,modTC);
  Setting("Web Nav Links",WebNavLinkLClass,modTC);
  Setting("Web Requests",WebRequestsTClass,modTC);

//  Setting("User Feature Pref.",UserFeaturePrefTClass,modTC);
//  Setting("Features",FeaturesWClass,modTC);
  
  
//  Setting("Company Signature",CompSignTClass,modTC);
//  Setting("Calendar",CalWClass,modTC);
//  Setting("Download Files",FileTransferTClass,modTC);

// I guess these things should be available in the Database Maintenance module
//  Setting("INSeres",INSerLClass,modTC);
//  Setting("INrs",INrsLClass,modTC);
//  Setting("PErsVc",PErsLClass,modTC);
//  Setting("MainAcc",MainAccrualLClass,modTC);
//  Setting("CUToCUs",CUToCULClass,modTC);

/* Testing */
/*  Report("Bank Connection",BankConnRClass,BankConnRn,0,modTC);*/
  Report("Access Check",AccessCheckRClass,AccessCheckRn,0,modTC);
  Report("Active Chats",ChatRClass,ChatRn,0,modTC);
  Report("Attached Files",Attach2RClass,Attach2Rn,0,modTC);
  Report("Attached Files Problems",AttachInfoRClass,AttachInfoRn,0,modTC);
  Report("Company Info",CompInfoRClass,CompInfoRn,0,modTC);
  Report("Code",CodeRClass,CodeRn,0,modTC);
  Report("Convert #Suppliers# to Contacts",ConvertVERClass,ConvertVERn,0,modTC);
  Report("Database Log",DBLogRClass,DBLogRn,0,modTC);
  Report("Export/Import Format",ExpImpRClass,ExpImpRn,0,modTC);
  Report("Files In Container",FilesInContainerRClass,FilesInContainerRn,0,modTC);
//  Report("HAL Profile",HALProfileRClass,HALProfileRn,0,modTC);//HAL_PROFILE is not defined
  Report("Idle Tasks List",IdleTaskListRClass,IdleTaskListRn,0,modTC);
  Report("Inspect hansa.log",InspectHansaLogRClass,InspectLocalLogRn,0,modTC);
  Report("Link Check",HALLinkCheckRClass,HALLinkCheckRn,0,modTC);
  Report("Link List",LinkListRClass,LinkListRn,0,modTC);
//  Report("Linked Files",LinkedFilesRClass,LinkedFilesRn,0,modTC);
//  if (DeveloperMode) then begin
    Report("List of Windows",WindowsRClass,WindowsRn,0,modTC);
//  end;
  Report("Long Message List",SlowConPerRClass,SlowConPerRn,0,modTC);
  Report("Person Access Group",PersAccRClass,PersAccRn,0,modTC);
  Report("Record Count",RecCntRClass,RecCntRn,0,modTC);
  Report("Record Links",RLinkRClass,RLinkRn,0,modTC);
  Report("Report Status",StatusRClass,StatusRn,0,modTC);
//  Report("Server Log",ServerLogRClass,ServerLogRn,0,modTC);
  Report("Settings List",SettingsListRClass,SettingsListRn,0,modTC);
  Report("Sort Order",SortOrderRClass,SortOrderRn,0,modTC);
  Report("Sources",HALSourceRClass,HALSourceRn,0,modTC);
  Report("UnOKed Records",UnOKedRClass,UnOKedRn,0,modTC);
//  Report("Files to Remove",CleanupFileRClass,CleanupFileRn,0,modTC);, not existing
//people use this to access windows from modules they haven't bought,
//please cooment this in when u need it only
  /* Doesn't do much */
// no code  Report("Settingscontrol",SettingsRClass,SettingsRn,0,modTC);
  Report("User Record History",UserRecordHistRClass,UserRecordHistRn,0,modTC);

  if (DeveloperMode) then begin
    Export("Change dates for Sample Data",IntChangeDatesEClass,IntChangeDatesTBEn,modTC);
  end;
  Export("Logging History",RHistEClass,RHistEn,modTC);

  Maintenance("Attach Pictures to Items",INAttachPictFileVClass,INAttachPictFileMn,modTC);
  Maintenance("Attached Files",Attach2VClass,Attach2Mn,modTC);
  Maintenance("Change Approval Activities Task Type",AprvlActTaskTypeVClass,AprvlActTaskTypeMn,modTC);
  Maintenance("Convert Contact Persons to Contacts",ContactToCuVClass,ContactToCuMn,modTC);
  Maintenance("Convert Guests to Contacts",GuestToCuVClass,GuestToCuMn,modTC);
  Maintenance("Convert #Suppliers# to Contacts",ConvertVEVClass,ConvertVEMn,modTC);
  Maintenance("Create ODBC Records",GenODBCVClass,GenODBCMn,modTC);
  Maintenance("Delete #Synchronisation# History",DelSynchHistVClass,DelSynchHistMn,modTC);
  Maintenance("Fill empty Location in Item History and Item Status",FixEmptyLocVClass,FixEmptyLocMn,modTC);
  Maintenance("Prepare Conversion #Suppliers# Settings",PrepConvertVEVClass,PrepConvertVEMn,modTC);
  Maintenance("Recompile HAL Files",RecompileHALVClass,RecompileHALMn,modTC);
  Maintenance("Rebuild #Stock#",RebuildStockVClass,RebuildStockMn,modTC);
  Maintenance("Recalculate Item Status",RecalcItemStatusVClass,RecalcItemStatusMn,modTC);
//  Maintenance("Recalculate #Stock#",RecalcStockVClass,RecalcStockMn,modTC);//only for special consultants
  Maintenance("Send Update #SMS#",MobileDeviceVClass,SendUpdateSMSMn,modTC);
  Maintenance("Set Closed on Person",CloseUserVClass,CloseUserMn,modTC);
  Maintenance("System Message",SysMessVClass,SysMessMn,modTC);
  Maintenance("Unshare Registers",UnshareRegsVClass,UnshareRegsMn,modTC);
  Maintenance("Update Invoices",FixIVBaseSumVClass,FixIVBaseSumMn,modTC);
  Maintenance("Update Fax Numbers",FixFaxNoMClass,FixFaxNoMn,modTC);
  Maintenance("Update #Stock# for Non #Stocked# Items",RebuildStockPlainVClass,RebuildStockPlainMn,modTC);

//  Maintenance("Change Varieties",VarChangeVClass,VarChangeMn,modTC); // Not really ready yet.
//  Maintenance("Send File",FtpSendVClass,FtpSendMn,modTC);

/* modDBMain */
/* This module doesn't have to be translated, if you don't want to. */
/* It is for all the functions that help consultants to find logical errors in the database */
/* All functions that could be nice to have but shouldn't be shown to, or used by, the customers, should go here */
/* This module can be activated by placing a file called "DBMAINT" in the CLIENT folder */
/* Feel free to suggest moving things here that really doesn't belong where it is now. */
  Register("Data Purge","Data Purge",RegArchiveVc,modDBMain);
  Register("Attached Files","Attached Files",Attach2Vc,modDBMain);
  Register("Notes","Notes",NotepadVc,modDBMain);
  Register("Messages","Messages",SMSVc,modDBMain);

// Norway, you can put this to modSL or something, to have easier access

  Report("Activities in Other Companies",ActUserCompRClass,ActUserCompRn,0,modDBMain);
  Report("Activity Type Check",ActTypeCheckRClass,ActTypeCheckRn,0,modDBMain);
  Report("Message History",ChatHistoryRClass,ChatHistoryRn,0,modDBMain);
  Report("Global Message History",GlobalChatHistoryRClass,GlobalChatHistoryRn,0,modDBMain);
  Report("Close Items",CloseINRClass,CloseINRn,0,modDBMain);
  Report("Delay Debug Report",DelayRClass,DelayRn,0,modDBMain);
  Report("Missing Linked Records",LinkedRecsRClass,LinkedRecsRn,0,modDBMain);
  Report("Missing Records from Connected Registers",ConectedRecsRClass,ConectedRecsRn,0,modDBMain);
  Report("Order Integrity Check",ORIntCheckRClass,ORIntCheckRn,0,modDBMain);
// Norway, you can put this to modSL or something, to have easier access
  Report("Old #VAT# Code Invoice Test",OldVATCodeTestRClass,OldVATCodeTestRn,0,modDBMain);
  Report("Skype Call History",SkypeCallHistoryRClass,SkypeCallHistoryRn,0,modDBMain);
  Report("Skype Message Count",SkypeMessageCountRClass,SkypeMessageCountRn,0,modDBMain);
  Report("User Log",UserLogRClass,UserLogRn,0,modDBMain);

//  Import("Sonic Q",SonicQIn,SonicQIn,modDBMain);

  Export("Companies Text Backup",TBE2Class,CompanyTBEn,modDBMain);
  Export(ProductName & " Files",HWFilesClass,HWFilesEn,modDBMain);
  Export("Special Company Backup",TBE3Class,SpecCompTBEn,modDBMain);
  Export("Register Export",ExpRegEClass,ExpRegEn,modDBMain);

  Setting("Agreement Charges",RentChrgLClass,modDBMain);
  Setting("Asset History Support Register",InvrsLClass,modDBMain);
  if (true) then begin//DeveloperMode
    Setting("Aut. Sales Actions",AutSalesActionLClass,modDBMain);//temporary
  end;
  Setting("Chat Name to Contacts",ChatNameContactLClass,modDBMain);
  Setting("Data Purge Details",RegArchiveDetailLClass,modDBMain);
  Setting("Deficiency #Stock#",DfncyStockLClass,modDBMain);
  Setting("#Favourite# Activity Types",FavActTypeLClass,modDBMain);
  Setting("Form Definitions",FormDefLClass,modDBMain);
  Setting("#Instalments# AP",APInstallLClass,modDBMain);
  Setting("#Instalments# AR",ARInstallLClass,modDBMain);
  Setting("#Instalment# History",ARInstallHistLClass,modDBMain);
  Setting("Item History Support Register",ItemHistLClass,modDBMain);
  Setting("Item Sales Statistics",STLClass,modDBMain);
  Setting("Item Status Support Register",ItemStatusLClass,modDBMain);
  Setting("Item Internal #Stock# Status Support Register",IntISLClass,modDBMain);
  Setting("Item Status at Positions Support Register",PISLClass,modDBMain);
  Setting("Job Descriptions (old)",JobDescTClass,modDBMain);
  Setting("Local Messages",SMSLocLClass,modDBMain);
  Setting("Legal Record Numbers",OffSerNrLClass,modDBMain);
  Setting("Log Item Status Updates",TestItemStatusTClass,modDBMain);
  Setting("Loyalty Points History",PointsHistLClass,modDBMain);
  Setting("Message Filter",SMSFilterLClass,modDBMain);
  Setting("Payment History",OPrsLClass,modDBMain);
  Setting("POS Journal",POSJournalLClass,modDBMain);
  Setting("Cashup Hist",CashupHistLClass,modDBMain);
  Setting("Prepayments AP",APPayHistLClass,modDBMain);
  Setting("Prepayments AR",ARPayHistLClass,modDBMain);
  Setting("Prepayments Open AR",ARPayLClass,modDBMain);
  Setting("Price Variance",VarianceStatusLClass,modDBMain);
  Setting("Product Name",ProductNameTClass,modDBMain);
  Setting("Receipt History",IPrsLClass,modDBMain);
  Setting("Record Links",RLinkLClass,modDBMain);
  Setting("Resort Event History Support Register",RsrtEventHistLClass,modDBMain);
  Setting("Sequence Numbers",SeqNrTClass,modDBMain);
  Setting("Serial Number Support Register",SerBalLClass,modDBMain);
  Setting("Skype Import Progress",MsgImportProgressLClass,modDBMain);
  Setting("Status History - Cheques",CheckHistLClass,modDBMain);
  Setting("Status History - Own Cheques",OwnCheckHistLClass,modDBMain);
  Setting("#Suppliers# Retentions",VEPRRetentionLClass,modDBMain);
  if (HasLocalization("PRT")) then begin
    Setting("Tax Authorities Replies for e-Deliveries",eShipTaxAuthReplyLClass,modDBMain);
  end;
  Setting("Temp #Stock#",TempStockLClass,modDBMain);
  Setting("User Defined",RepDefTClass,modDBMain);
  Setting("User Defined Reports",UserDefRepLClass,modDBMain);
  Setting("User Defined Columns",UserDefRepColumnsLClass,modDBMain);
  Setting("User Defined Lines",UserDefRepLinesLClass,modDBMain);
  Setting("UUID History",UUIDHistoryLClass,modDBMain);
  Setting("#VAT# Codes (Old)",OldVATCodeTClass,modDBMain);
  Setting("XS",XSLClass,modDBMain);
  Setting("XSrs",XSrsLClass,modDBMain);
  Setting("PurgeTR",PurgeTRLClass,modDBMain);

  Maintenance("Add #Salesman#",AddSalesManVClass,AddSalesManMn,modDBMain);
//  Maintenance("Check crashed database",FixDBVClass,FixDBMn,modDBMain);// no code
//  Maintenance("Check Database",CheckDBVClass,CheckDBMn,modDBMain);// no code
  Maintenance("Clear and resync register",ClearAndResetSyncVClass,ClearAndResetSyncMn,modDBMain);
  Maintenance("Clear Empty RLinks",ClearRLinkVClass,ClearRLinkMn,modDBMain);
  Maintenance("Close Items",CloseINVClass,CloseINMn,modDBMain);
  if (HasLocalization("EST")) then begin
    Maintenance("Converting bank accounts (IBAN)",ConverttoIBANVClass,ConverttoIBANMn,modDBMain);
  end;
  Maintenance("Correct Attachment Filenames",Attach2FixUUIDFileVClass,Attach2FixUUIDFileMn,modDBMain);
  Maintenance("Corrections to Shopping Basket",CorrectJobInfVClass,CorrectJobInfMn,modDBMain);
  Maintenance("Create Autoupdate Clients",MakeAutoClientsVClass,MakeAutoClientsMn,modDBMain);
  Maintenance("Create Contracts",CreateCOVClass,CreateCOMn,modDBMain);
  Maintenance("Create Instalments History",CreateInstlHistVClass,CreateInstlHistMn,modDBMain);
  Maintenance("Create Random Bar Tabs",CreateRandomRestAccVClass,CreateRandomRestAccMn,modDBMain);
  Maintenance("Create Random Customers",CreateRandomCustomersVClass,CreateRandomCustomersMn,modDBMain);
  Maintenance("Create Random Invoices",CreateRandomInvoicesVClass,CreateRandomInvoicesMn,modDBMain);
  Maintenance("Create Random Items",CreateRandomItemsVClass,CreateRandomItemsMn,modDBMain);
  Maintenance("Create Random Orders",CreateRandomOrdersVClass,CreateRandomOrdersMn,modDBMain);
  Maintenance("Create Random POS Invoices",CreateRandomIVCashVClass,CreateRandomIVCashMn,modDBMain);
  Maintenance("Data Purge",RegArchiveVClass,RegArchiveMn,modDBMain);
  Maintenance("Delete Asset Transactions",DelATTransVClass,DelATTransMn,modDBMain);
  Maintenance("Delete Attachments",ClearAttachVClass,ClearAttachMn,modDBMain);
  Maintenance("Fill-up Sales Group",PutSalesGroupVClass,PutSalesGroupMn,modDBMain);
//  Maintenance("Generate Random Invoices",InvGenVClass,InvGenMn,modDBMain);  // no code
  Maintenance("Generate Random #N/L# Trans",RandomTransVClass,RandomTransMn,modDBMain);
  Maintenance("Generate Random Sales Orders",RandomORVClass,RandomORMn,modDBMain);
  Maintenance("Move Between Companies",MoveRecordsVcVClass,MoveRecordsVcMn,modDBMain);
  Maintenance("OK #Stock# Records",OKStockVClass,OKStockMn,modDBMain);
/* This should maybe not be shown to customers, it is used to fix a bug */
/* ins Time Billing when you update from version 3.1 to 3.2 or 3.3 */
/* There is a HAL report available to see what will happend */
/* You can have it in, since it helps a few customers (one Swedish customer asked for it */
  Maintenance("Rebuild Project Transactions",RebPTVClass,RebPTMn,modDBMain);
/* This is NOT the same routine as the previous line, this is built to restore */
/* more than the #Time Sheets#. It is recreating the Proj.Trans. that is missing */
/* in the report "Check Project Transactions". */
  Maintenance("Restore Project Transactions",ChPrTransVClass,ChPrTransMn,modDBMain);
  Maintenance("Renumber System Records",RenoSysRecVClass,RenoSysRecMn,modDBMain);
//  Maintenance("Rebuild Support Registers",RebuildSupVClass,RebuildSupMn,modDBMain);
  Maintenance("Update Invoices",FixIVBaseSumVClass,FixIVBaseSumMn,modDBMain);
  Maintenance("Update Trans. Registers Base Cur. Rate",UpdTransBRateVClass,UpdTransBRateMn,modDBMain);

  /* modUserSet */

  /* this module is for settings an ordinary user should be allowed to do that would */
  /* otherwise fit in the system module */

  RegisterWS("Item Buttons","Item Buttons","New Item Button",ItemButtonsTClass,modUserSet);
  RegisterWS("Item Status Settings","Item Status Settings","New Item Status Setting",ItemStatUserVc,modUserSet);
  Register("Item Tile Labels","Item Tile Labels",ItemTileLabelTClass,modUserSet);
  Register("Login Shortcuts","Login Shortcuts",LocalLoginTClass,modUserSet);
  RegisterWS("Tab Item Groups","Tab Item Groups","New Tab Item Group",RestITVc,modUserSet);

  Setting("Bluetooth Devices",SelectBluetoothDeviceOClass,modUserSet);
  Setting("Client Date and Numeric Format",ClientFormatTClass,modUserSet);
  Setting("Client Language",UserLanguageTClass,modUserSet);
  Setting("Fiscal Printer Reports",FM3000CommandsClass,modUserSet);
//  Setting("Local Items",LocalINLClass,modUserSet);
//  Setting("Local Item Groups",LocalITLClass,modUserSet);
  Setting("Local Machine",LocalMachineTClass,modUserSet);
  Setting("Local Optional Features",LocalOptionalFeaturesTClass,modUserSet);
  
  Setting("Local Machine Payment Modes",RestPMTClass,modUserSet);
  Setting("Login Options",LocalLoginOptionsTClass,modUserSet);
//  Setting("Local Prices",LocalPLLClass,modUserSet);
  Setting("Local Serial Port Devices",LSerialPortDeviceLClass,modUserSet);
  Setting("Matrix Printer",PCPrintTClass,modUserSet);
  Setting("Serial Printer",SerPrintTClass,modUserSet);
  Setting("Telephony Sound",TelephonyRingtoneTClass,modUserSet);
  Setting("User Defined Field Labels - Local Machine",LocalMachineLBlockTClass,modUserSet);
  Setting("User Warnings on UnOKed Records",UserUnOkWarnWClass,modUserSet);
  Setting("Web Client",WebClientTClass,modUserSet);

  Report("Connection Log",ConnectionLogRClass,ConnectionLogRn,0,modUserSet);
  Report("Latency",LatencyRClass,LatencyRn,0,modUserSet);
  Report("Report Status",MyStatusRClass,StatusRn,0,modUserSet);
  
//  Report("Skype Import Status",SkypeImportStatusRClass,SkypeImportStatusRn,0,modUserSet);
  
/* modWebShop */

  Register("Shopping Basket","Shopping Basket",ShopBaskVc,modWebShop);
  RegisterWS("Item Classifications","Item Classifications","New Item Classification",DIVc,modWebShop);
  RegisterWS("HTML Extras","HTML Extras","New HTML Extra",WebHTMLVc,modWebShop);
  RegisterWS("Web Item Listing","Web Item Listing","New Web Item Listing",WebItemListVc,modWebShop);
//  Register("Mail","Mail",MailVc,modWebShop);

  Report("Identifiers List",MailIdentRClass,MailIdentRn,0,modWebShop);

  Setting("Access to functions from Web",FunctionsOnWebTClass,modWebShop);
  Setting("Payment Gateways",CCAccountIDLClass,modWebShop);
  Setting("Conference Alias",ConfAliasLClass,modWebShop);
  Setting("Credit Card Payment Refernce No.",ORSerNrTClass,modWebShop);
  Setting("Credit Card Types",CredCardTypeLClass,modWebShop);
  Setting("Default Payment Modes",DefCashTClass,modWebShop);
  Setting("Frames",WebFramesTClass,modWebShop);
  Setting("Framesets",WebFrameSetTClass,modWebShop);
  Setting("Internet Service Tariffs",ISPackageLClass,modWebShop);
  Setting("Merchant ID",CCMerchantIDLClass,modWebShop);
  Setting("Tags/Objects for CC Invoices",WebShopSettingTClass,modWebShop);
  Setting("Parameter Conversion",WebParamConvLClass,modWebShop);
  Setting("Web Adverts",WebNewAdvertLClass,modWebShop);
  Setting("Web Adverts Setting",WebAdvertTClass,modWebShop);
  Setting("Web Contents",WebContentsTClass,modWebShop);
  Setting("Web Freight",WebFreightLClass,modWebShop);
  Setting("Web Key Words",WebKeywordsTClass,modWebShop);
  Setting("Web Link Lists",WebLinkListsLClass,modWebShop);
  Setting("Web Links",WebLinkLClass,modWebShop);
  Setting("Web Menus",WebMenuLClass,modWebShop);
  Setting("Web Pages",WebPagesLClass,modWebShop);
  Setting("Web Order Report",WebOrdRepTClass,modWebShop);
  Setting("Web Settings",WebControlTClass,modWebShop);
//  Setting("Web Shop Mail",WebRegMailTClass,modWebShop);
  Setting("Web Sites",WebSitesTClass,modWebShop);
  Setting("Web Subcodes",WebSubLClass,modWebShop);
  Setting("Web Texts",WebTextLClass,modWebShop);
/*
  Setting("Item Note Matrix",WebItemNoteLClass,modWebShop);
  Setting("Item Notes",WebNoteLClass,modWebShop);
  Setting("Item Picture Matrix",WebItemPicLClass,modWebShop);
  Setting("Item Pictures",WebPicLClass,modWebShop);
  Setting("Item Tree",WebINTreeLClass,modWebShop);
*/
//  Setting("Shopping Basket Control",WebBaskCtrlLClass,modWebShop);
//  Setting("Web Conferences",WebConferenceTClass,modWebShop);

/* modWebShopNG */

  RegisterWS("Content","Content","New Content",WebNGContentVc,modWebShopNG);
  RegisterWS("Translations","Translations","New Translation",WebNGTranslateVc,modWebShopNG);
  RegisterWS("Pages","Pages","New Page",WebNGPageVc,modWebShopNG);
  RegisterWS("Menus","Menus","New Menu",WebNGMenuVc,modWebShopNG);
  RegisterWS("Elements","Elements","New Element",WebNGElementVc,modWebShopNG);
  RegisterWS("Structure","Structure","New Structure",WebNGStructVc,modWebShopNG);
  RegisterWS("Products","Products","New Product",WebNGProductVc,modWebShopNG);
//  Register("Component Groups","Component Groups",WebNGComponentVc,modWebShopNG);
  Register("Statistics","Statistics",WebNGStatVc,modWebShopNG);

//  Setting("Component Categories",WebNGComponentCatLClass,modWebShopNG);
//  Setting("Amazon WS Integration",AmazonWSTClass,modWebShopNG);  to be finished in 83
  Setting("Content Categories",WebNGContentCatLClass,modWebShopNG);
  Setting("Content Styles",WebNGContentStyleLClass,modWebShopNG);
  Setting("Countries on Web",WebNGCountryLClass,modWebShopNG);
  Setting("Country Regions",WebNGCountryRegionLClass,modWebShopNG);
  Setting("Customer Registration Fields",CURegFieldLClass,modWebShopNG);
  Setting("Delivery Address Fields",DelAddrFieldLClass,modWebShopNG);
  Setting("Display on the Web",WebDisplayLClass,modWebShopNG);
  Setting("Favourite Items",WebNGFavItemLClass,modWebShopNG);
  Setting("Forum Records",WebNGForumRecLClass,modWebShopNG);
  Setting("Forum Setting",WebNGForumTClass,modWebShopNG);
  Setting("Forum Subscriptions",WebNGForumFavoritesLClass,modWebShopNG);
  Setting("Forum Topics",WebNGForumTopicLClass,modWebShopNG);
  Setting("Forum Tags",WebNGForumTagsTClass,modWebShopNG);
  Setting("Google ReCaptcha Settings",WebNGReCaptchaTClass,modWebShopNG);  
  Setting("Host Redirects",HttpHostRedirectLClass,modWebShopNG);
  Setting("Item Search Settings",WebNGSearchTClass,modWebShopNG);
  Setting("Languages on Web",WebNGLanguageLClass,modWebShopNG);
  Setting("Mail Confirmation Sessions",MailConfirmLClass,modWebShopNG);
  Setting("Mappings Company/Country",WebNGCompCountryLClass,modWebShopNG);
  Setting("Mappings Hostname/Country",WebNGHostCountryLClass,modWebShopNG);
  Setting("My Account Settings",MyAccountTClass,modWebShopNG);
  Setting("Tags/Objects for CC Invoices",WebShopSettingTClass,modWebShopNG);
  Setting("Path Redirects",HttpPathRedirectLClass,modWebShopNG);
  Setting("Payment Sessions",WebNGPaySessionLClass,modWebShopNG);
  Setting("Paypal Settings",PaypalTClass,modWebShopNG);
  Setting("Product Categories",WebNGProductCatLClass,modWebShopNG);
  Setting("Product Views",WebNGProductViewLClass,modWebShopNG);
  Setting("Settings for Testing",WebNGTestTClass,modWebShopNG);
  Setting("Simple Website",SimpleWebTClass,modWebShopNG);
  Setting("Sites",WebNGSiteTClass,modWebShopNG);
  Setting("University settings",WebNGUniversityTClass,modWebShopNG);
  Setting("Web Payment Methods",WebPayMethodLClass,modWebShopNG);
  Setting("Web Shop Email",WebRegMailTClass,modWebShopNG);
  Setting("Web Server Settings",WebNGSettingsTClass,modWebShopNG);
  Setting("Web Texts",WebTextLClass,modWebShopNG);
  Setting("Webshop Baskets",WebNGShopBasketLClass,modWebShopNG);
  Setting("Webshop Company Settings",WebNGShopCompTClass,modWebShopNG);
  Setting("Webshop Settings",WebNGShopTClass,modWebShopNG);

  Maintenance("Create Products from Items",WebNGCreateProductsVClass,CreateWebProductsMn,modWebShopNG);
  Maintenance("Generate Forum Records",GenForumSupportVClass,GenForumSupportMn,modWebShopNG);
  Maintenance("Generate Forum Subscriptions",GenForumSubscriptionVClass,GenForumSubscriptionMn,modWebShopNG);

  if (TestEnablerFile("EnMarketplace")) then begin
    Report("Customer Update Versions",CustomerVersionsRClass,CustomerVersionsRn,0,modWebShopNG);
  end;
  Report("Web Statistics",WebStatRClass,WebStatRn,0,modWebShopNG);
  Report("Used Web Pages",UsedWebPageListRClass,UsedWebPageListRn,0,modWebShopNG);
  Report("WebSite Info",WebSiteInfoRClass,WebSiteInfoRn,0,modWebShopNG);

/* modRepGen */

  RegisterWS("Reports","Reports","New Report",RepGenVc,modRepGen);
  RegisterWS("Form Templates","Form Templates","New Form Template",DocVc,modRepGen);
  RegisterWS("Styles","Styles","New Style",StyleVc,modRepGen);
//  Register("Sets","Sets",RepSetVc,modRepGen);

  Setting("Reports in Interface",UIReportLClass,modRepGen);

/* modEnabReg */ // ONLY FOR INTERNAL USE, NO NEED TO TRANSLATE

  RegisterWS("Customer Configurations","Customer Configurations","New Customer Configuration",CustContModuleLClass,modEnabReg);
  RegisterWS("Enabler Activations","Enabler Activations","New Enabler Activation",CUCOEnabActVc,modEnabReg);
  RegisterWS("Enabler Requests","Enabler Requests","New Enabler Request",IntEnabKeyReqVc,modEnabReg);
  RegisterWS("Customer Exceptions","Customer Exceptions","New Customer Exception",EnabExceptionVc,modEnabReg);

  Setting("Configuration Package",SystemUsageSettingLClass,modEnabReg);
  Setting("Enabler Setting",ServEnabSettTClass,modEnabReg);
  Setting("Function Usage",FunctionUsageLClass,modEnabReg);
  Setting("HTS Customer Services",HTSCUServiceLClass,modEnabReg);
  Setting("Key Limits for Existing Customers",KeyAllowExistTClass,modEnabReg);
  Setting("Key Limits for New Customers",KeyAllowNewTClass,modEnabReg);
  Setting("Key Limits for Updating Customers",KeyAllowUpdateTClass,modEnabReg);
  Setting("#Licence# Texts",LicenceTxtLClass,modEnabReg);
  Setting("Package Configuration for Serial Numbers",InternalSerialNrConfigLClass,modEnabReg);
  Setting("Packages for Communication Centre",BPProdPackTClass,modEnabReg);
  Setting("Packages for FirstOffice Small",FOSmallProdPackTClass,modEnabReg);
  Setting("Packages for FirstOffice Start",FOStartProdPackTClass,modEnabReg);
  Setting("Packages for FirstOffice Pro",FOProProdPackTClass,modEnabReg);
  Setting("Packages for SmartApps",SmartAppChargeTClass,modEnabReg);
  Setting("Packages for Products",ProdPackLClass,modEnabReg);
  Setting("Registered Apps",RegisteredAppsLClass,modEnabReg);

  Maintenance("Add Tag/Object to Customers",AddObjCUVClass,AddObjCUMn,modEnabReg);
  Maintenance("Create Cust. Configurations",MakeCustUsageVClass,MakeCustUsageMn,modEnabReg);
  Maintenance("Configuration Cleanup",CleanConfigurationVClass,CleanConfigurationMn,modEnabReg);
  Maintenance("Enabler To Classification",EnablerToClassVClass,EnablerToClassMn,modEnabReg);
  Maintenance("Enabler To Classification",EnablerToClassVClass,EnablerToClassMn,modEnabReg);

  Report("Configuration Search",ConfigSearchRClass,ConfigSearchRn,0,modEnabReg);
  Report("Enabler Activations",EnabActRClass,EnabActRn,0,modEnabReg);
  Report("Enabler Status",EnablerStatusRClass,EnablerStatusRn,0,modEnabReg);
  Report("Enabler Statistics",EnabStatRClass,EnabStatRn,0,modEnabReg);
  Report("Hansa Enablers Report",KeyCodeRClass,KeyCodeRn,0,modEnabReg); // OLD...I think...
  Report("Internet Enabler Statistics",IntEnabStatRClass,IntEnabStatRn,0,modEnabReg);
  Report("Number of Users and Installations",NumberOfUsersRClass,NumberOfUsersRn,0,modEnabReg);
//  Report("Customer Configuration Info",CustConfInfoRClass,CustConfInfoRn,0,modEnabReg); // HAL file not included in hob. Runs only for current company.


/* modOurContracts */ // ONLY FOR INTERNAL USE, NO NEED TO TRANSLATE

/*
  RegisterWS(ProductName & " Contracts",ProductName & " Contracts","New " & ProductName & " Contract",COCUServiceVc,modOurContracts);
  RegisterWS("Contract Packages","Contract Packages","New Contract Package",CUServiceVc,modOurContracts);
  RegisterWS("Configuration Package","Configuration Package","New Configuration Package",SystemUsageSettingVc,modOurContracts);
  RegisterWS("Customer Acounts","Customer Accounts","New Customer Account",CUAccountVc,modOurContracts);
  RegisterWS("Customer Acount Events","Customer Account Events","New Customer Account Event",CUAccountEventVc,modOurContracts);
  RegisterWS("Int. Serv. Contracts","Int. Serv. Contracts","New Int. Serv. Contract",TXCUServiceVc,modOurContracts);
  RegisterWS("Royalty Exceptions","Royalty Exceptions","New Royalty Exception",RoyaltyExceptionVc,modOurContracts);
  RegisterWS("Royalty Sales","Royalty Sales","New Royalty Sales",RoyaltyRepVc,modOurContracts);
  Register("Royalty Maintenance","Royalty Maintenance",RoyaltyMaintVc,modOurContracts);

  Setting("Activation Codes",InternalSerialNrLClass,modOurContracts);
  Setting("Check Key Actions",CheckKeyActionTClass,modOurContracts);
  Setting("Contract Classes",ContractClassTClass,modOurContracts);
  Setting("Contract Defaults",CODefValTClass,modOurContracts);
  Setting("Contract History",CUServiceHistLClass,modOurContracts);
  Setting("Contract Invoicing Companies",COCUInvoiceCompTClass,modOurContracts);
  Setting("Customer Account History",CUAccountHistLClass,modOurContracts);
  Setting("Customer Account Setting",CUAccountSettTClass,modOurContracts);
  Setting(ProductName & " Contract Settings",COCUServiceTClass,modOurContracts);
  Setting(ProductName & " Contract Classification Types",HWCOClassTypeLClass,modOurContracts);
  Setting(ProductName & " Contract Classifications",HWCOClassLClass,modOurContracts);
  Setting("Invoice Companies for Cloud Services",TXInvCompTClass,modOurContracts);
  Setting(ProductName & " Contract Item Groups",HWCOItemGroupTClass,modOurContracts);
  Setting("Number Series - " & ProductName & " Contracts",COCUServiceSerTClass,modOurContracts);
  Setting("Product Classification",CCandClassTClass,modOurContracts);
  Setting("Royalty Contact",RoyaltyCustTClass,modOurContracts);
  Setting("Royalty Percentage",RoyaltyPrcTClass,modOurContracts);
  Setting("Services Defaults",TXServiceDefLClass,modOurContracts);
  Setting("Version Classification",VersionClassTClass,modOurContracts);

  Report("Available Activation Codes",ProdSerNoRClass,ProdSerNoRn,0,modOurContracts);
  Report("Customer Account",CUAccountRClass,CUAccountRn,0,modOurContracts);
  Report("Find " & ProductName & " Contracts",FindBadContractsRClass,FindBadContractsRn,0,modOurContracts);
  Report("Future Royalty Maintenance Records",RoyaltyRepFutureRClass,RoyaltyRepFutureRn,0,modOurContracts);
  Report(ProductName & " Contract Incorreclty Invoiced",COCUWrongInvdRClass,COCUWrongInvRn,0,modOurContracts);
  Report(ProductName & " Contract List",COCUServiceRClass,COCUServiceRn,0,modOurContracts);
  Report(ProductName & " Contract Validity Check",COCUServiceValidRClass,COCUServiceValidRn,0,modOurContracts);
  Report(ProductName & " Contract Worth",COCUServiceworthRClass,COCUServiceworthRn,0,modOurContracts);
  Report(ProductName & " Contract Worth, Consolidated",ConsCOCUServiceworthRClass,COCUServiceworthRn,0,modOurContracts);
  Report(ProductName & " Contracts Statistics",COCUServiceStatRClass,COCUServiceStatRn,0,modOurContracts);
  Report("Invoice Service",InvoiceServiceRClass,InvoiceServiceRn,0,modOurContracts);
  Report("Invoiceable " & ProductName & " Contracts",COCUServiceInvRClass,COCUServiceInvRn,0,modOurContracts);
  Report("Royalty Report",RoyaltyRepRClass,RoyaltyRepRn,0,modOurContracts);
  Report("Number of Users and Installations",NumberOfUsersRClass,NumberOfUsersRn,0,modOurContracts);
  Report("Service Usage",ServiceUsageRClass,ServiceUsageRn,0,modOurContracts);
  Report("Service Usage Comparison",ServiceUsageCompRClass,ServiceUsageCompRn,0,modOurContracts);
  Report("Short Term Enabler",ShortTermEnabRClass,ShortTermEnabRn,0,modOurContracts);
  Report("Terminated " & ProductName & " Contracts",TerminatedCOCURClass,TerminatedCOCURn,0,modOurContracts);
  Report("Test Generate Activation Codes",GenerateProdSerNoRClass,GenerateProdSerNoRn,0,modOurContracts);
  Report("Version Update Statistics",VersionUpdateStatsRClass,VersionUpdateStatsRn,0,modOurContracts);

  Document(ProductName & " Contract",HWContractRClass,HWContractForm,HWContractFClass,modOurContracts);

  Maintenance("Change " & ProductName & " Contract List Period Days",COCUServiceVClass,COCUServiceMn,modOurContracts);
  Maintenance("Create " & ProductName & " Contract Invoices",CreateCOCUInvVClass,CreateCOCUInvMn,modOurContracts);
  Maintenance("Create Royalty Maintenance Records",CreateRoyaltyMaintVClass,CreateRoyaltyMaintMn,modOurContracts);
  Maintenance("Create Service Invoice",InvoiceServiceVClass,InvoiceServiceMn,modOurContracts);
  Maintenance("Convert Contracts to " & ProductName & " Contracts",MakeCOCUSerFromCOVClass,MakeCOCUSerFromCOMn,modOurContracts);
  Maintenance("Find Enterprise Contracts Nrs",EntCOCUNrsVClass,EntCOCUNrsMn,modOurContracts);
  Maintenance("Generate Activation Codes",GenerateProdSerNoVClass,GenerateProdSerNoMn,modOurContracts);
  Maintenance(ProductName & " Contract Start Date Update",CUCOSDUpdateVClass,CUCOSDUpdateMn,modOurContracts);
  Maintenance("Update " & ProductName & " Contracts",CUCOFixupMClass,CUCOFixupMn,modOurContracts);
  Maintenance("Update/Invoice Royalty Records",RoyaltyRepVClass,RoyaltyRepMn,modOurContracts);
*/
/* modOneFuncMod */

  RegisterWS("Access Groups","Access Groups","New Access Group",AccessVc,modOneFuncMod);
  Register("Account Reconciliation","Account Reconciliation",BankRecWClass,modOneFuncMod);
  RegisterWS("Accounts","Accounts","New Account",AccVc,modOneFuncMod);
  RegisterWS("Bar Tab","Bar Tab","New Rab",RestAccVc,modOneFuncMod);
  RegisterWS("Cash Ins","Cash Ins","New Cash In",CLInVc,modOneFuncMod);
  RegisterWS("Cash Outs","Cash Outs","New Cash Out",CLOutVc,modOneFuncMod);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modOneFuncMod);
  RegisterWS("Contracts","Contracts","New Contract",COVc,modOneFuncMod);
  RegisterWS("Customer Letters","Customer Letters","New Customer Letter",LetVc,modOneFuncMod);
  Register("Deliveries","Deliveries",SHVc,modOneFuncMod);
  RegisterWS("Exchange Rates","Exchange Rates","New Exchange Rate",ERVc,modOneFuncMod);
  RegisterWS("Expenses","Expenses","New Expense",ExpVc,modOneFuncMod);
  RegisterWS("Form Templates","Form Templates","New Form Template",DocVc,modOneFuncMod);
  RegisterWS("Goods Receipts","Goods Receipts","New Goods Receipt",PUVc,modOneFuncMod);
  RegisterWS("Internal Orders","Internal Orders","New Internal Order",IntORVc,modOneFuncMod);
  RegisterWS("Invoices","Invoices","New Invoice",IVVc,modOneFuncMod);
  RegisterWS("Items","Items","New Item",INVc,modOneFuncMod);
  RegisterWS("Tags/Objects","Tags/Objects","New Tag/Object",ObjVc,modOneFuncMod);
  RegisterWS("Orders","Orders","New Order",ORVc,modOneFuncMod);
  RegisterWS("Payments","Payments","New Payment",OPVc,modOneFuncMod);
  RegisterWS("Persons","Persons","New Person",UserVc,modOneFuncMod);
  RegisterWS("POS Invoices","POS Invoices","New Invoice",IVCashVc,modOneFuncMod);
  RegisterWS("POS Invoices Touch Screen","POS Invoices Touch Screen","New Invoice",NPTSIVCashLClass,modOneFuncMod);
  RegisterWS("Productions","Productions","New Production",ProdVc,modOneFuncMod);
  RegisterWS("Production Orders","Production Orders","New Production Order",ProdOrderVc,modOneFuncMod);
  RegisterWS("Projects","Projects","New Project",PRVc,modOneFuncMod);
  RegisterWS("#Purchase Invoices#","#Purchase Invoices#","New #Purchase Invoice#",VIVc,modOneFuncMod);
  RegisterWS("Purchase Items","Purchase Items","New Purchase Item",PIVc,modOneFuncMod);
  RegisterWS("Purchase Orders","Purchase Orders","New Purchase Order",POVc,modOneFuncMod);
  RegisterWS("Purchase Quotations","Purchase Quotations","New Purchase Quotation",POQTVc,modOneFuncMod);
  RegisterWS("Quotations","Quotations","New Quotation",QTVc,modOneFuncMod);
  RegisterWS("Receipts","Receipts","New Receipt",IPVc,modOneFuncMod);
  RegisterWS("Returned Goods","Returned Goods","New Returned Goods",RetVc,modOneFuncMod);
  RegisterWS("Service Orders","Service Orders","New Service Order",SVOVc,modOneFuncMod);
  RegisterWS("Simulations","Simulations","New Simulation",SMVc,modOneFuncMod);
  RegisterWS("#Stock Depreciations#","#Stock Depreciations#","New #Stock Depreciation#",SDVc,modOneFuncMod);
  RegisterWS("#Stock# Movements","#Stock# Movements","New #Stock# Movement",StockMovVc,modOneFuncMod);
  RegisterWS("#Stocktaking#","#Stocktaking#","New #Stocktaking#",StockTakeVc,modOneFuncMod);
  RegisterWS("#Time Sheets#","#Time Sheets#","New #Time Sheet#",TSVc,modOneFuncMod);
  RegisterWS("Transactions","Transactions","New Transaction",TRVc,modOneFuncMod);
  RegisterWS("Way Lists","Way Lists","New Way List",WayListVc,modOneFuncMod);
  RegisterWS("Work Orders","Work Orders","New Work Order",WOVc,modOneFuncMod);
  RegisterWS("Work Sheets","Sheets","New Work Sheet",WSVc,modOneFuncMod);

//  Register("Contact Persons","Contact Persons",ContactVc,modOneFuncMod);

/* modSharesTrading */

  RegisterWS("Shares Certificates","Shares Certificates","New Shares Certificate",SharesVc,modShares);
//  Register("Buy/Sell Orders","Buy/Sell Orders",BuySellRequestVc,modShares);
  RegisterWS("Share Transfers","Share Transfers","New Share Transfer",SharesTranVc,modShares);
  RegisterWS("Shares For Sale","For Sale","New Shares For Sale",SharesSellVc,modShares);
  RegisterWS("Shares To Buy","To Buy","New Shares To Buy",SharesBuyVc,modShares);
  RegisterWS("Official Value","Official Value","New Official Value",OfficialValueVc,modShares);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modShares);

  Setting("Value According to Company",CompanyValueLClass,modShares);
  Setting("Value According to Main Shareholder",MainShareHoldValueLClass,modShares);

  Report("Buy / Sell Orders",BuySellOrdersRClass,BuySellOrdersRn,0,modShares);
  Report("Shares Information",SharesInfoRClass,SharesInfoRn,0,modShares);
  Report("Shares Transfers",SharesTrsfRClass,SharesTrsfRn,0,modShares);

// modExtra
//  Register("Actions","Actions",ActionVc,modExtra); // What is it for?

  Register("Deliverable E-Invoices","Deliverable E-Invoices",HTSIVVc,modHTS);
  Register("Receivable E-Invoices","Receivable E-Invoices",HTSVIVc,modHTS);
  Register("HT E-Payment","HT E-Payment",HTSEPaymentVc,modHTS);
  Register("E-Record Statuses","E-Record Statuses",ERecordStatusVc,modHTS);
  Register("HT Companies","HT Companies",HTSCUVc,modHTS);
  Register("Service Servers","Service Servers",WebServiceServerVc,modHTS);
  Register("Services Usage","Services Usage",ServiceUsageVc,modHTS);
  Register("Services","Services",WebServiceVc,modHTS); // Changed because of new setting in System called Internet Services :)

  Setting("Available Versions",AvailableVersionLClass,modHTS);
  Setting("Available SmartApps",AvailableAppsLClass,modHTS);
  Setting("Customer Services",CustWebServiceLClass,modHTS);
  Setting("E-Tasks Queue",ETasksQueueLClass,modHTS);
  Setting("E-Learning URL Cache (TX)",UniversityURLTXCacheLClass,modHTS);
  Setting("HOB Singatures",HobSignaturesLClass,modHTS);
  Setting("HOB Singatures Cache",HobSigCacheLClass,modHTS);
  Setting("HT Bank Transactions",HTSBankTRLClass,modHTS);
  Setting("HT Blessed DBIDs",HTSBlesDBIDLClass,modHTS);
  Setting("HT Customer Services",HTSCUServiceLClass,modHTS);
  Setting("HT #SMS# Que",HTSSMSQueueLClass,modHTS);
  Setting("HT Who Online",HTSWhoPresentLClass,modHTS);
  Setting("HT Watch Service",HTSWatchServiceTClass,modHTS);
  Setting("HW Cloud Services Server IP",HWEnabServerTClass,modHTS);
  Setting("Internet Service Server Settings",HTSEInvoiceTClass,modHTS);
  Setting("Internet Service Statuses",WebServiceStatusLClass,modHTS);
  Setting("Last Available Version",LastAvailableVersionTClass,modHTS);
  Setting("Notification Certificates",NotificationCertificateLClass,modHTS);
  Setting("Partner Settings",HTSPartnerTClass,modHTS);
  Setting("Services Cache",ServiceCacheLClass,modHTS);
  Setting("Test Server",HTSTestServerTClass,modHTS);
  Setting("Test Service",HTSTestServiceTClass,modHTS);
  Setting("TX Confirm",TXConfirmLCLass,modHTS);
  Setting("User Actions",HTSUserActionLClass,modHTS);
  Setting("Watchpoints",HTSWatchServerLClass,modHTS);
  Setting("Watchpoints Contacts",HTSWSContactLClass,modHTS);

  Import("Elma",ImportElmaInvoices,ImportElmaInvoices,modHTS); // modSL?
  
  Export("EHF Export",EHFexportEClass,EHFexportEn,modHTS);
  Export("UI Log Contact Export",UILogEClass,UILogEn,modHTS);  
  
  Report("Cloud Services Contracts List",CloudServiceCoListRClass,CloudServiceCoListRn,0,modHTS);
  Report("Count TX Server unconfirmed confirmations",CountTXUnConfRClass,CountTXUnConfRn,0,modHTS);
  Report("Customer Services Status",WebServiceStatusRClass,CloudServiceStatusRn,0,modHTS);
  Report("HT Companies Reg. in Country",HTCompaniesRegCountryRClass,HTCompaniesRegCountryRn,0,modHTS);
  Report("Inspect hansa.log",InspectHansaLogRClass,InspectHansaLogRn,0,modHTS);
  Report("Service Usage",ServiceUsageRClass,ServiceUsageRn,0,modHTS);
  Report("Service Usage Comparison",ServiceUsageCompRClass,ServiceUsageCompRn,0,modHTS);
  Report("Test Lookup TX call",LookupToTXRClass,LookupToTXRn,0,modHTS);
  Report("Test Services Servers",TestServicesRClass,TestServicesRn,0,modHTS);
  Report("Who is in Presence",WhoPresentRClass,WhoPresentRn,0,modHTS);
  Report("Who Received Message",WhoRcvMarketingRClass,WhoRcvMarketingRn,0,modHTS);

//  Maintenance("Enable Internet Service",EnableWebServiceVClass,EnableWebServiceMn,modHTS);
//  Maintenance("Invoice Internet Service",WebServiceInvoiceVClass,CloudServiceInvoiceMn,modHTS);
  Maintenance("Cleanup #SMS# E-Tasks Queue",ETasksQueueCleanupVClass,ETasksQueueCleanupMn,modHTS);
  Maintenance("Delete Service Usage",ServiceUsageDelVClass,ServiceUsageDelMn,modHTS);
  //Maintenance("Delete User Actions",CleanUserActionsVClass,CleanUserActionsMn,modHTS);
  Maintenance("Delete Who is Online Records",DelHTSWhoPresenVClass,DelHTSWhoPresenMn,modHTS);
  if (HasLocalization("ARG")) then begin
    Maintenance("E-Invoices Export to Archive",ArgEInvExportVClass,ArgEInvExportMn,modHTS);
  end;
  Maintenance("Remove TX Server unconfirmed confirmations",RemoveTXUnConfVClass,RemoveTXUnConfMn,modHTS);
  Maintenance("Rename TX Server confirmations",RenameTXConfVClass,RenameTXConfMn,modHTS);
  Maintenance("Reset Sent for Service Usage",ServiceUsageResetVClass,ServiceUsageResetMn,modHTS);
  Maintenance("Update Service Usage",UpdateServiceUsageVClass,UpdateServiceUsageMn,modHTS);
//  Maintenance("Send Internet Service Servers",WebServicesVClass,CloudServicesMn,modHTS);//??

//  Maintenance("Get Service Usage",ServiceUsageVClass,ServiceUsageMn,modHTS);

/* modInteg */

  Setting("SugarCRM Integration",SugarCRMTClass,modInteg);
  Setting("Yodlee Integration",YodleeTClass,modInteg);
  Setting("Yodlee Users",YodleeUserLClass,modInteg);

  Import("Banking File, TeleHansa",TeleHipmIn,TeleHipmIn,modInteg); // I moved it here because I don't know if it is beeing used
  Import("POS Off-line",POSIn,POSIn,modInteg);
  Import("Transaction as rows",TRRowIn,TRRowIn,modInteg);

//  Import("Banking File, Nord Finans",IPNordFNor,IPNordFNor,modInteg); // Nor, no code
//  Import("Check File from Hogia",0,ARFromHogia2In,modInteg);
//  Import("New backup, manual file search",0,NBIn,modInteg);
  if (HasLocalization("NOR")) then begin
    Import("#Sales Ledger# from Hogia",ICSIClass,ARFromHogiaIn,modInteg);
  end;
  if (HasLocalization("FIN,NOR,SWE")) then begin
    Import("Transactions from Analyste",0,SpecTrIn,modInteg);
  end;
//  Import("Update Known Serial Numbers",SVOSerUpIn,SVOSerUpIn,modInteg); // There is code for a SVOUpIn...


  Export("Activities",ExpActEClass,ExpActEn,modInteg);
  Export("Bar Tabs",ExTabRowsEClass,ExTabRowsEn,modInteg);
  Export("Base Registers",GBaseEClass,GBaseEn,modInteg);
  Export("Communication Centre Contacts",BPCUEClass,BPCUEn,modInteg);
  Export("Contact List",Customer1EClass,Customer1En,modInteg);
  Export("Contact List (Hansa format)",ContactsEClass,ContactsEn,modInteg);
//  Export("Contact Data",CustAdrEClass,CustAdrEn,modInteg); // SAme export as contact list, only less info beeing exported...
  Export("Contact List to Palm3",PalmEClass,PalmEn,modInteg);
  Export("Contact Relations List",Contact1EClass,Contact1En,modInteg);
  Export("Invoices",InvEClass,InvEn,modInteg);
  Export("Invoice Rows",InvRowEClass,InvRowEn,modInteg);
//  Export("Item Base Registers",GItemBaseEClass,GItemBaseEn,modInteg);
  Export("Items Data",ItemsDataEClass,ItemsDataEn,modInteg);
  Export("Item Info",Art2EClass,Art2En,modInteg);
  Export("Order Rows",OrdRowEClass,OrdRowEn,modInteg);
  Export("Open Invoices",OpenInvEClass,OpenInvEn,modInteg);
  Export("Open #Purchase Invoices#",OpenVIEClass,OpenVIEn,modInteg);
  Export("Payroll System Export",HOLEClass,HOLEn,modInteg);
  Export("POS Server Export",POSServEClass,POSServEn,modInteg); //synchronization instead
  Export("POS Off-line Export",POSClientEClass,POSClientEn,modInteg); //synchronization instead
  Export("Purchase Order Rows",POOrdRowEClass,POOrdRowEn,modInteg);
  Export("Quotation Rows",QTRowEClass,QTRowEn,modInteg);
  Export("Sales Data",SalesDataEClass,SalesDataEn,modInteg);
  Export("Settings",SettingsEClass,SettingsEn,modInteg);
//  Export("System Data",SysEClass,SysEn,modInteg); // Why rewrite it and call i SysDataEn and still keep the old code?
  Export("System Data",SysDataEClass,SysDataEn,modInteg);
  Export("#Time Sheet# Rows",TSRowEClass,TSRowEn,modInteg);
  Export("Transaction Registers",GTransEClass,GTransEn,modInteg);
  Export("Transaction Registers (period)",GTrans2EClass,GTrans2En,modInteg);
  Export("Transactions",TrEClass,GLEn,modInteg);
  if (HasLocalization("UKR")) then begin
    Export("#VAT# Correction Register (Ukraine)",VATIVVIRegUkrEClass,VATIVVIRegUkrEn,modInteg);
  end;
  Export("Web Shop Data",WebShopDataEClass,ToolWebShopDataEn,modInteg);
  Export("Web Shop and CMS Data",WebNGDataEClass,ToolWebNGDataEn,modInteg);

//  Export("Company New Backup",TBEClass,CompanyNBEn,modInteg);
//  Export("Contract Invoicing Per Month",ContrPeriodicEClass,ContrPerEn,modInteg);
//  Export("E-Post Invoices",EPostInvEClass,EPostInvEn,modInteg); // For whom is this??
//  Export("Joined Forest Export", ForestNewClass,ForestNewEn,modInteg); // no source code
//  Export("Electronic Invoicing",ElecInvEClass,ElecInvEn,modInteg);//NO EXPORT ; HTS will TAKE OVER
//  Export("Utleveranser",SHEClass,SHEn,modInteg);
//  Export("Transactions from Other Systems",SpecTrEClass,SFBEn,modInteg);
//  Export("Corresponding Account Export",CorspEClass,CorspEn,modInteg);
//  Export("Reservation Flow",JobFlowEClass,JobFlowEn,modInteg); // there is code behind it, but it is a confusing function
//  Export("Reservation Journal",JobJourEClass,JobJourEn,modInteg); // there is code behind it, but it is a confusing function
//  Export("Email alias",EmailAliasEClass,EmailAliasEn,modInteg);

  Report("Apple GDV Inventory",AppleGDVInvRClass,AppleGDVInvRn,0,modInteg);
  Report("Apple GDV Sell Through",AppleGDVSellRClass,AppleGDVSellRn,0,modInteg);

  Maintenance("Send Existing Records to Sugar CRM ",SugarCRMInitVClass,SugarCRMInitMn,modInteg);

/* modBA */

  RegisterWS("Approval Rules","Approval Rules","New Approval Rule",AcceptanceRulesVc,modBA);

  Setting("Business Alerts",BARulesTClass,modBA);
  Setting("Contact Delivery Alerts",BASHTClass,modBA);
//  Setting("Contact Invoice Alerts",BAIVTClass,modBA); //design flow
  Setting("Contact Order Alerts",BAORTClass,modBA);
  Setting("Contact Quotation Alerts",BAQTTClass,modBA);
  Setting("Contact Reservation Alerts",BAJobTClass,modBA);
  Setting("Cost price variance Alerts",BACostVarianceTClass,modBA);
  Setting("GP below minimum Alerts",BAMrkUpBelowMinTClass,modBA);
//  Setting("Report Set",ReportSetLClass,modBA);
//  Setting("Dynamic Reporting Dates",ReportingDateLClass,modBA);
//  Setting("Dynamic Reporting Periods",ReportingPeriodLClass,modBA);
  
  Setting("Internal Invoice Alerts",BAIVIntTClass,modBA);
  Setting("Internal Order Alerts",BAORIntTClass,modBA);
  Setting("Internal Quotation Alerts",BAQTIntTClass,modBA);
  Setting("Internal System Alerts",BASysIntTClass,modBA);
  Setting("Internal System Alerts",BASysIntLClass,modBA);
  Setting("#Sales Ledger# Due Report",BADueReportTClass,modBA);

  Report("Approval Status",ApprovalStatusRClass,ApprovalStatusRn,0,modBA);
  Report("#SMS# Status",BASMSStatusRClass,BASMSStatusRn,0,modBA);

/* modCourses */

  RegisterWS("Course Events","Course Events","New Course Event",CourseEventVc,modCourses);
  RegisterWS("Courses","Courses","New Course",CourseVc,modCourses);
  RegisterWS("Classrooms","Classrooms","New Classroom",ResVc,modCourses);
  RegisterWS("Items","Items","New Item",INVc,modCourses);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modCourses);
  RegisterWS("Contact Relations","Contact Relations","New Contact Relation",ContactRelVc,modCourses);
  RegisterWS("Course Tests","Course Tests","New Course Test",UnivTestVc,modCourses);
  RegisterWS("Course Tests Answers","Course Tests Answers","New Course Test Answer",UnivTestAnswerVc,modCourses);

//  Setting("Course Settings",CourseTClass,modCourses);
  Setting("Countries",CountryLClass,modCourses);
  Setting("Days and Months",DNMLClass,modCourses);
  Setting("E-Learning URL Cache",UniversityURLCacheLClass,modCourses);
  Setting("Prices",PLLClass,modCourses);
  Setting("Course Types",CourseTypeLClass,modCourses);
  Setting("#SMS# Reminders",CourseReminderTClass,modCourses);
  Setting("Course Files",CourseMediaLClass,modCourses);
//  Setting("Univ Test Answers",UnivTestAnswerLClass,modCourses);//moved to registers
//  Setting("Univ Tests",UnivTestLClass,modCourses);//moved to registers

  Report("Course Booking Status",CourseBookingStatusRClass,CourseBookingStatusRn,0,modCourses);
  Report("Course Events Journal",CourseEventJournalRClass,CourseEventJournalRn,0,modCourses);
  Report("Invoiceable Course Events",CourseEventIVRClass,CourseEventIVRn,0,modCourses);
  Report("Participant List",CourseEventPartRClass,CourseEventPartRn,0,modCourses);
  Report("Test Results",UnivTestResRClass,UnivTestResRn,0,modCourses);

  Document("Course Events",CourseEventsRClass,CourseEventForm,CourseEventsFClass,modCourses);
//  Document("Confirmation participant",AttendeeRClass,AttendeeForm,AttendeeFClass,modCourses); no code
//  Document("Participant Label",AttendeesLabelRClass,AttendeesLabelForm,AttendeesLabelFClass,modCourses);

  Maintenance("Create Invoices from Course Event",GenIVFromCourseVClass,GenIVFromCourseMn,modCourses);

/* modASP */
  Register("Hansa Versions","Hansa Versions",HansaVersionVc,modASP);
  Register("Cloud Nodes","Cloud Nodes",CloudNodeVc,modASP);
  Register("Remote Cloud Servers","Remote Cloud Servers",RemoteCloudServerVc,modASP);
  Register("Local Cloud Servers","Local Cloud Servers",LocalCloudServerVc,modASP);
  Register("Cloud Machine Statistics","Cloud Machine Statistics",CloudMachineStatsVc,modASP);

/* Register("Managed Users","Managed Users",ManagedUserVc,modASP); */
  //Register("Servers","Servers",ServerMonitorVc,modASP); // Kjells monitor, works, server code already in 5.2 so you can monitor all new 5.2s
  Register("Backup Clients","Backup Clients",BackupClientVc,modASP);
  Register("Cloud Watchpoint","Cloud Watchpoint",CloudWatchpointVc,modASP);
  Register("Watchdog Message History","Watchdog Message History",SWMVc,modASP);

  Maintenance("Update Cloud Controller From Nodes",ASPUpdCtrlFromNodesVClass,ASPUpdCtrlFromNodesMn,modASP);
  Maintenance("Delete Cloud Machine Statistics",ASPDelCloudMachineStatVClass,ASPDelCloudMachineStatMn,modASP);
  Maintenance("Delete Watchpoint History",ClearWatchpointHistoryVClass,ClearWatchpointHistoryMn,modASP);
  Maintenance("Set Server Log Level",ASPSetDebugLevelVClass,ASPSetDebugLevelMn,modASP);

  Setting("ASP Archive",ASPArchiveLClass,modASP);
  Setting("Other Cloud Controllers",CloudControllerListTClass,modASP);
  Setting("Cloud Settings",CloudSettingsTClass,modASP);
  Setting("Host Pool Settings",HostPoolSettingsTClass,modASP);
  Setting("Hosting Configurations",HostingConfigurationLClass,modASP);
  Setting("Detected Hosting Configuration",HostingConfigTClass,modASP);
  Setting("Enabler Files",EnablerLClass,modASP);
  Setting("Possible Cloud Host Names",CNHostNameTClass,modASP);
  Setting("Subscription Invitations",SubscriptionInvitationLClass,modASP);
  Setting("Cloud Archive",ASPArchiveLClass,modASP);
  Setting("Server Activity Log",ASPActionLogLClass,modASP);

//  Report("Inspect hansa.log",InspectHansaLogRClass,InspectHansaLogRn,0,modASP);
  Report("Cloud Machine Statistics",CloudMachineStatRClass,CloudMachineStatRn,0,modASP);
  Report("List Cloud Nodes",ASPListCloudNodeRClass,ASPListCloudNodeRn,0,modASP);
  Report("List not used On-Demand servers",ASPListNotUsedServersRClass,ASPListNotUsedServersRn,0,modASP);
  Report("List Remote Cloud Servers",ASPRemoteCloudServerListRClass,ASPRemoteCloudServerListRn,0,modASP);
  Report("List servers with HAL",ListServersWithHALRClass,ListServersWithHALRn,0,modASP);
  Report("List unmanaged servers",ListUnmanagedServersRClass,ListUnmanagedServersRn,0,modASP);
  Report("List used versions",ASPListUsedVersionsRClass,ASPListUsedVersionsRn,0,modASP);
  Report("List server versions",ListServerVersionsRClass,ListServerVersionsRn,0,modASP);
  Report("Servers without Cloud Archive",RCldSvrNoArchvRClass,RCldSvrNoArchvRn,0,modASP);

/* modMForms */

  RegisterWS("Apps","Apps","New App",SmartAppVc,modMForms);
  RegisterWS("Registers","Registers","New Register",RegisterDefinitionVc,modMForms);
  RegisterWS("Windows","Windows","New Window",WindowDefinitionVc,modMForms);
  // Register("HAL Functions","HAL Functions",HALFunctionVc,modMForms);
  Register("HAL Files","HAL Files",HALFilesSClass,modMForms);
  Register("HAL Stack","HAL Stack",HALStackTClass,modMForms);
  //Register("Bug Reports","Bug Reports",BugReportRClass,modMForms);
  Register("Create Import Function","Create Import Function",RITWClass,modMForms);
  Register("Find in files","Find in files",FindInFilesWClass,modMForms);
  Register("Create Document Function","Create Document Function",CDFWClass,modMForms);

  Setting("Available SmartApps",AvailableAppsLClass,modMForms);
  Setting("Sync Progress Conflict",SyncProgressLClass,modMForms);
  Setting("Developer Settings",DevSetTClass,modMForms);
  Setting("Test Function Tags",CurLicensesClass,modMForms); //## only for developing w. demodata

  if (DeveloperMode) then begin
    Report("Windows",WindowsRClass,WindowsRn,0,modMForms);
  end;
  Report("HAL Primitives",HalSpecRClass,HalSpecRn,0,modMForms);
  Report("Test Lookup Connection",TestLookupConRClass,TestLookupConRn,0,modMForms);


/* modTimekeeper */

  Report("Hours Worked Analysis",WorkHoursAnaRClass,WorkHoursAnaRn,0,modTimekeeper);

  Setting("Timekeeper Activity Type",ASTimekepperTClass,modTimekeeper);

/* modHRM */

  RegisterWS("Employment Contracts","Employment Contracts","New Employment Contract",HRMCOVc,modHRM);
  RegisterWS("Employment Contract Changes","Employment Contract Changes","New Employment Contract Change",HRMCOChangeVc,modHRM);
  RegisterWS("Employees","Employees","New Employee",CUEmployeeLClass,modHRM);
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modHRM);
  RegisterWS("Job Positions","Job Positions","New Job Position",HRMJPVc,modHRM);
  RegisterWS("Performance Appraisals","Performance Appraisals","New Performance Appraisal",HRMPAVc,modHRM);
  RegisterWS("Skills Evaluation","Skills Evaluation","New Skills Evaluation",HRMSEVc,modHRM);
  RegisterWS("Leave Applications","Leave Applications","New Leave Application",LeaveApplicationVc,modHRM);

  Setting("Candidacy Sources",CandidacySourceLClass,modHRM);
  Setting("Courtesy Titles",CourtesyTitlesTClass,modHRM);
  Setting("Departments",DepLClass,modHRM);
  Setting("Employment Contract Classes",HRMCOClassLClass,modHRM);
  Setting("Education Degrees",EducationDegreesTClass,modHRM);
  Setting("Ethnicities",EthnicityTClass,modHRM);
  Setting("Health Statuses",HealthStatusTClass,modHRM);
  Setting("Job Titles",JobTitleLClass,modHRM);
  Setting("Leave Schemes",LeaveSchemeLClass,modHRM);
  Setting("Leave Settings",LeaveRulesTClass,modHRM);
  Setting("Leave Transfers",LeaveTransferLClass,modHRM);
  Setting("Number Series - Employment Contracts",HRMCOSerTClass,modHRM);
  Setting("Number Series - Employment Contract Changes",HRMCOChangeSerTClass,modHRM);
  Setting("Number Series - Leave Applications",LeaveApplSerTClass,modHRM);
  Setting("Number Series - Leave Transfers",LeaveTrsfSerTClass,modHRM);
  Setting("Number Series - Performance Appraisals",HRMPASerTClass,modHRM);
  Setting("Performance Appraisal Classes",HRMPACLClass,modHRM);
  Setting("Performance Factors",HRMPFLClass,modHRM);
  Setting("Performance Ratings",HRMPRLClass,modHRM);
  Setting("Ratings",HRMRatingLClass,modHRM);
  Setting("Skills",HRMSkillLClass,modHRM);
  Setting("Soft Factor Groups",SoftFactorGroupLClass,modHRM);
  Setting("Soft Factors",SoftFactorLClass,modHRM);

  Report("Employment Contract List",HRMCOListRClass,HRMCOListRn,0,modHRM);
  Report("Head Count",HeadCountRClass,HeadCountRn,0,modHRM);
  Report("Leave Balance",LeaveBalanceRClass,LeaveBalanceRn,0,modHRM);
  Report("Skills Evaluation",HRMSkillRClass,HRMSkillRn,0,modHRM);
  Report("Soft Factor Analysis",SoftFactAnalysisRClass,SoftFactAnalysisRn,0,modHRM);

  Document("Employment Contract",HRMCORClass,HRMCOForm,HRMCOFClass,modHRM);

/* modWorldBankRep */
  Export("World Bank 1-A",WB1AEClass,WB1AEn,modWorldBankRep);
  Export("World Bank 1-B",WB1BEClass,WB1BEn,modWorldBankRep);
  Export("World Bank 1-D",WB1DEClass,WB1DEn,modWorldBankRep);
  Export("World Bank 1-E",WB1EEClass,WB1EEn,modWorldBankRep);
  Export("World Bank 1-F",WB1FEClass,WB1FEn,modWorldBankRep);
  Export("World Bank 2-A",WB2AClass,WB2AEn,modWorldBankRep);
  Export("World Bank 2-B",WB2BEClass,WB2BEn,modWorldBankRep);
  Export("World Bank 3-A",WB3AClass,WB3AEn,modWorldBankRep);
  Export("World Bank 3-B",WB3BClass,WB3BEn,modWorldBankRep);
  Export("World Bank 3-C",WB3CClass,WB3CEn,modWorldBankRep);
  Export("World Bank 3-D",WB3DClass,WB3DEn,modWorldBankRep);

/* modCAL */
  Setting("Calendar Options",CalendarOptionTClass,modCAL);

/* modDY */
  Report("Access Control",AccessControlRClass,AccessControlRn,0,modDY);

  Report("#N/L# Correction List",CorrRClass,CorrRn,0,modDY);
  Report("#N/L# Correction List, Consolidated",CorrRClass,AllCompaniesCorrRn,0,modDY);

  Report("#Purchase Ledger# Checking",APCheckRClass,APCheckRn,0,modDY);
  Report("#Purchase Ledger# Roll Forward",APRollFwdRClass,APRollFwdRn,0,modDY);

  Report("#Sales Ledger# Checking",ARCheckRClass,ARCheckRn,0,modDY);
  Report("#Sales Ledger# Roll Forward",ARRollFwdRClass,ARRollFwdRn,0,modDY);

  Report("Subsystems Checking",Check1TRRClass,Check1TRRn,0,modDY);
  Report("Transaction Checking",Check2TRRClass,Check2TRRn,0,modDY);

  Export("Item History Export",ItemHistEClass,ItemHistEn,modDY);

/* modProdSched */

  Register("Machines In Scheduling","Machines In Scheduling",PrPlanMachinesTClass,modProdSched);
  Register("Machine Hours","Machine Hours",MachineHoursLClass,modProdSched);
  Register("Machine Hours Changes","Machine Hours Changes",MachineHoursChangesLClass,modProdSched);

  Setting("Algorythm Settings",ProdPlanCoefTClass,modProdSched);
  Setting("Efficiency Colors",MachineColorTClass,modProdSched);
  Setting("Equal Production Machines",ProdMachineEqLClass,modProdSched);
  Setting("Operation Colors",ProdOpWebColorTClass,modProdSched);
  Setting("Operation Switching Times",ProdSwitchTimeLClass,modProdSched);
  Setting("Plan Records",ProdPlanRecLClass,modProdSched);
  Setting("Production Machine Status",AT2UnitStatusLClass,modProdSched);
  Setting("Production Plans",ProdPlanIDLClass,modProdSched);
  Setting("Sheduling Web Settings",WebPlanDefTClass,modProdSched);
  Setting("User Access",ProdPlanAccessLClass,modProdSched);

  Report("Production Operation Planning",ProdOperPlanRClass,ProdOperPlanRn,0,modProdSched);

/* modIntProjMan */

  Setting("Activity States",ActStateLClass,modIntProjMan);
  Setting("Activity States Sequences",ActStateSeqLClass,modIntProjMan);
  Setting("Company Workflow Overview",PipelineOverviewTClass,modIntProjMan);
  Setting("User Workflow Overview",UserPipelineOverviewLClass,modIntProjMan);
  Setting("Development Classifications",DevClassLClass,modIntProjMan);

  Register("Projects","Projects",PipelineWClass,modIntProjMan);

  Report("Project Activity Status",ActProjStatRClass,ActProjStatRn,0,modIntProjMan);
  Report("Project Activity History",ActProjHistRClass,ActProjHistRn,0,modIntProjMan);

/* modIC */

  Setting("Inter Company Settings",ICClass,modIC);
  Setting("Inter Company Transactions Rules",ICTRuleLClass,modIC);

  Report("Inter Company Account Comparison",ICACRClass,ICACRn,UserDefRepDClass,modIC);
//  Report("Sales & Purchase A/C Comparison",ICSPAccCompRClass,ICSPAccCompRn,ICSPAccCompDClass,modIC);
//cannot see code for this report

  Maintenance("Create Inter Company Transactions",ICTVClass,ICTRMn,modIC);

/* modRestAPI */

  Register("Rest API Access","Rest API Access",DevCredentialVc,modRestAPI);
  Register("Authorization Codes","Authorization Codes",OAuthCodeVc,modRestAPI);
  Register("Refresh Tokens","Refresh Tokens",OAuthRefreshTokenVc,modRestAPI);
  Register("Access Tokens","Access Tokens",OAuthAccessTokenVc,modRestAPI);

  Setting("Rest API Setup",RestAPITClass,modRestAPI);

  return;
end;

#endif
