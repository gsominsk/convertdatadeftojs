external inner procedure SubCashRows_IVVc(record IVVc,Boolean,var val,var val);
external inner procedure DisplayIVSubTotalAction(record IVVc);
external inner procedure OpenCCPaySteriaDClass(Integer,Integer,LongInt,val,val,string);
external inner procedure OpenCCPayRahaxiDClass(Integer,Integer,LongInt,val,val,string);
remote inner procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);

procedure CashPaymentIVActiveField(Integer wn)
begin
  switch (WindowActiveField(wn)) begin
    case "InvDate":;
    case "PayDeal":;
    case "PayDate":;
    case "TransDate":;
    case "CustOrdNr":;
    case "OurContact":;
    case "LangCode":;
    case "ClientContact":;
    case "SalesMan":;
    case "Location":;
    otherwise KeyPadEnter(wn);    
  end;
  return;
end;
 
procedure CredCardIVsmDo(integer btnNr)
BEGIN
  record IVVc IVr;
  record IVVc prevIVr;
  row IVVc IVrw;
  Integer wn,rownr,nwn;
  LongInt rowstp;  
  val fr,to1,to2,br1,br2;
  val t,t1;  
  string 255 tstr,pmcode;
  record DefCashBlock DefCashRec;
  record RahaxiBlock Rahaxib; 

  wn = CurWindow;
  CashPaymentIVActiveField(wn);
  DeselectWindow(wn,false);
  GetWindowRecord(wn,IVr);
  switch (WindowState(wn)) begin
    case 0: //Rs_normal
      GetWindowRecord(wn,prevIVr); //Rs_update
      if (prevIVr.OKFlag!=0) then begin goto LCredCardIVsm; end;
    case 1: //Rs_insert
    case 2: 
      GetPrevWindowRecord(wn,prevIVr); //Rs_update
      if (prevIVr.OKFlag!=0) then begin goto LCredCardIVsm; end;
  end;
  BlockLoad(Rahaxib);
  if (Rahaxib.TerminalType==kLocalCCTerminalNone) begin
    switch (WindowActiveField(wn)) begin
      otherwise
        BlockLoad(DefCashRec);
        pmcode = GetWindowString(wn,"IVPMCodeCC");
        if (blank(pmcode)) then begin
          pmcode = GetWindowString(wn,"IVPMCode" & btnNr);
        end;
        if (blank(pmcode)) then begin
          pmcode =  DefCashRec.DefCCPayMode;
        end;
        rowstp = StringToLongInt(GetWindowString(wn,"rowstp" & btnNr));
        if (rowstp<0) then begin
          rowstp = StringToLongInt(GetWindowString(wn,"IVrowstp" & btnNr));
        end;
        if (rowstp<0) then begin
          rowstp = StringToInt(GetWindowString(wn,"IVrowstpCC"));  
        end;

        if (rowstp==0) then begin
          ClearRow(IVr,IVrw,kInvoiceRowTypeCreditCardPayment); 
        end else begin
          ClearRow(IVr,IVrw,rowstp); 
        end;
        tstr = IVrw.CurncyCode;
        GetFullCurncyRate(tstr,IVr.TransDate,fr,to1,to2,br1,br2);
        IVrw.CurncyCode = tstr;
        IVrw.FrRate = fr;
        IVrw.ToRateB1 = to1; 
        IVrw.ToRateB2 = to2;
        IVrw.BaseRate1 = br1;
        IVrw.BaseRate2 = br2;    
        IVrw.PayMode =  pmcode;
        rownr = MatRowCnt(IVr);
        MatRowPut(IVr,rownr,IVrw);
        PutWindowRecord(wn,IVr);
        WindowFieldGoto(wn,IVr,rownr,"PayMode",true);
        DisplayIVSubTotalAction(IVr);
    end;
  end else begin
    SubCashRows_IVVc(IVr,true,t,t1);
    switch (Rahaxib.TerminalType) begin
      case kLocalCCTerminalRahaxi: OpenCCPayRahaxiDClass(wn,rownr,IVr.SerNr,IVr.RetnValue,t,IVr.CurncyCode);
      case kLocalCCTerminalSteriaCOM: OpenCCPaySteriaDClass(wn,rownr,IVr.SerNr,IVr.RetnValue,t,IVr.CurncyCode);
      case kLocalCCTerminalSteriaIP: OpenCCPaySteriaDClass(wn,rownr,IVr.SerNr,IVr.RetnValue,t,IVr.CurncyCode);
    end;
  end;
LCredCardIVsm:;  
  RETURN;
END;

global
procedure CredCardIVsm()
BEGIN
  CredCardIVsmDo(0);
  RETURN;
END;

global
procedure CredCardIVsm1()
begin
  CredCardIVsmDo(1);
  return;
end;

global
procedure CredCardIVsm2()
begin
  CredCardIVsmDo(2);
  return;
end;
