/* seteng.hal */

#ifdef HAL

//event startup
begin

  SetLangMode(LangRussian,"RUS",0);

/* When you compile a Office/2, please remove all except Full and None */
  SetBegin(1);
  SetText(kAccessLevelFull,"Full");
/* Not for Office2 */
  SetText(kAccessLevelReadOnly,"Read");
  SetText(kAccessLevelReadNew,"Read/New");
  SetText(kAccessLevelBrowse,"Browse");
  SetText(kAccessLevelBrowseNew,"Browse/New");
  // SetText(4,"Limited");
  SetText(kAccessLevelNone,"None");
  EndSet;
  
  SetBegin(2);
  SetText(kAccessTypeModule,"Module");
  SetText(kAccessTypeRegister,"Регистр");
  SetText(kAccessTypeSetting,"Setting");
  SetText(kAccessTypeReport,"Report");
  SetText(kAccessTypeDocument,"Document");
  SetText(kAccessTypeExport,"Export");
  SetText(kAccessTypeImport,"Import");
  SetText(kAccessTypeMaintenance,"Обслуживание");
  SetText(kAccessTypeAction,"Action");
  SetText(kAccessTypeDisplayGroup,"Display Group");
  // SetText(kAccessTypeSpecial,"Special");
  EndSet;
  
  StrSetBegin(3); /* Try to keep them in alphabetical order */
//  StrSetText(AdminClient,"Admin Client");
  StrSetText(AllowAddingINtoRet,"Allow Adding Items to Return Goods");
  StrSetText(AllowAddingINtoRetPOSIV,"Allow Adding Items to Return POS Invoice");
  StrSetText(AllowIVTSLoyaltyPayment,"Allow Loyalty Payment on Touch Screen Invoice");
  StrSetText(AllowCashDiscountIP,"Allow Adding Settlement Discount to Receipt");
  StrSetText(AllowUsersAdding,"Allow Adding Users");
  StrSetText(AllowWriteoffIP,"Allow Adding Write-off to Receipt");
  StrSetText(AllowAmendLine,"Allow Amending Line on Touch Screen Invoice");
  StrSetText(AllowNPTSIVCancel,"Allow Cancelling Touch Screen Invoice");
  StrSetText(AllowCUSerNrChange,"Allow Changing Contact No.");
  StrSetText(ChangingCostOnInvoiceRow,"Allow Changing Cost on Invoice Rows");
  StrSetText(AllowCustChange,"Allow Changing Customers");
  StrSetText(AllowIVInvDateChange,"Allow Changing Invoice Date");
  StrSetText(AllowIVSerNrChange,"Allow Changing Invoice No.");
  StrSetText(UpdateCashEvent,"Allow Changing of Cash Events");
  StrSetText(AmendLineChangePrice,"Allow Changing Price when Amending Line");
  StrSetText(AllowUsersAdding,"Allow Adding Users");
  StrSetText(AllowAddingINtoRet,"Allow Adding Items to Return Goods");
  StrSetText(AllowAddingINtoRetPOSIV,"Allow Adding Items to Return POS Invoice");
  StrSetText(AllowNPTSIVCancel,"Allow Cancelling Touch Screen Invoice");
  StrSetText(AllowCashierCountChange,"Allow Changing of Cashier Count Date");
  StrSetText(AllowChangeCreditLimit,"Allow Changing of Credit Limit");
  StrSetText(AllowINCostModelChange,"Allow Changing of Item's Cost Model");
  StrSetText(AllowINWeighedAvChange,"Allow Changing of Item's Weighted Average Price");
  StrSetText(AllowLockingChange,"Allow Changing of Locking");
  StrSetText(AllowPasswdChanging,"Allow Changing of Passwords");
  StrSetText(AllowPOSerNrChange,"Allow Changing Purchase № счёта");
  StrSetText(AllowQTSerNrChange,"Allow Changing Quotation No.");
  StrSetText(AllowORSerNrChange,"Allow Changing Sales № счёта");
  StrSetText(AllowSalesmanChange,"Allow Changing Salesman on OKed Sales Invoice");
  StrSetText(AllowSalesmanChangeOnPOS,"Allow Changing Salesman on POS Invoice");
  StrSetText(AllowSuppInvNoChangeOKVI,"Allow Changing Supplier's Inv. No. on OKed Purchase Invoice");
  StrSetText(AllowSuppChange,"Allow Changing Suppliers");
  StrSetText(ChangingUpdateStockFlag,"Allow Changing Update Stock Flag Invoice");
  StrSetText(AllowCreateCust,"Allow Creating Customers");
  StrSetText(AllowCreateSupp,"Allow Creating Suppliers");
  StrSetText(AllowIVTSRowsDelete,"Allow Deleting Items on Touch Screen Invoice");
  StrSetText(AllowDispute,"Allow Disputing Invoice");
  StrSetText(ORToDownPay,"Allow Downpayment from Sales Order");
  StrSetText(AllowLoginOutsideWorkHours,"Allow Login outside Work Hours");
  StrSetText(AllowNPTSIVLogout,"Allow Logout on Touch Screen Invoice");
  StrSetText(AllowIVTSLoyaltyPointsBonus,"Allow Loyalty Bonus Points on Touch Screen Invoice");
  StrSetText(AllowNegCLIn,"Allow Negative Amount on Cash In");
  StrSetText(AllowNegCLOut,"Allow Negative Amount on Cash Out");
  StrSetText(AllowNegOP,"Allow Negative Amount on Payment");
  StrSetText(AllowNegIP,"Allow Negative Amount on Receipt");
  StrSetText(AllowPOSIVNegQty,"Allow Negative Qty on POS Invoices");
  StrSetText(AllowSplitItem,"Allow Splitting Item on Touch Screen Invoice");
  StrSetText(AllowTransfertoSL,"Allow Transferring POS Invoice to Sales Ledger");
  StrSetText(UpdatePOSEvent,"Allow Updating POS Sessions");
  StrSetText(AllowNPTSReprint,"Allow Reprinting Touch Screen Invoice rows");
  StrSetText(AllowPOSOfflineChanging,"Allow POS Offline Invoice Editing");  
  StrSetText(AllowSplitItem,"Allow Spliting Item on Touch Screen Invoice");
  StrSetText(AllowTransfertoSL,"Allow Transfering POS Invoice to Sales Ledger");
  StrSetText(UpdatePOSEvent,"Allow Updating POS Sessions");
  StrSetText(AllowNPTSIVRowsVoid,"Allow Voiding Touch Screen Invoice rows");
  StrSetText(BUQTToIV,"Budget Quotation to Invoice");
  StrSetText(IssueChk,"Change Cheque State");
  StrSetText(ChangeIVItemSpec,"Change Item Description on Invoice");
  StrSetText(IssueOwnChk,"Change Own Cheque State");
  StrSetText(ChangePrices,"Change Prices");
  StrSetText(ChangeReserved,"Change Reserved Status on Orders and Stock Movements");
  StrSetText(ChangeUnitPrices,"Change Unit Prices");
  StrSetText(InvToCO,"Contract from Invoice");
  StrSetText(RetToIV,"Credit Note from Returned Goods");
  StrSetText(RetPUToVI,"Credit Note from Returned Goods to Supplier  ");
  StrSetText(DeleteAnyRecord,"Deleting Records");
  StrSetText(ORToSH,"Delivery from Order");
  StrSetText(DisallowSalesmanChange,"Disallow Changing Salesman on non OKed Sales Invoice//??");
  StrSetText(DisallowORClose,"Disallow Closing Order");
  StrSetText(DisallowCostVariance,"Disallow Cost Price Variance on Goods Receipts");
  StrSetText(NotOKORToSH,"Disallow Delivery from not OKed Order");
  StrSetText(NotOKPOToPU,"Disallow Goods Receipt from not OKed Purchase Order");
  StrSetText(DisallowSerNrItemsOnSR,"Disallow Items with Serial Number Tracking on Stock Revaluation");
  StrSetText(DisallownonSerNrItemsOnSR,"Disallow Items without Serial Number Tracking on Stock Revaluation");
  StrSetText(DisallowPrepToNotOKOR,"Disallow Prepayment for not OKed Order");
  StrSetText(DisallowPrepToNotOKPO,"Disallow Prepayment for not OKed Purchase Order");
  StrSetText(DisallowPriceLowerCost,"Disallow Prices Lower than Cost Price");
  StrSetText(DisallowPrintCopy,"Disallow Printing Copies");
  StrSetText(DisallowSalesPlain,"Disallow Sales of Plain Items");
  StrSetText(DisallowSalesStocked,"Disallow Sales of Stocked Items");
  StrSetText(DisallowSalesStructured,"Disallow Sales of Structured Items");
  StrSetText(DisallowDomSales,"Disallow Sales to Domestic Customers");
  StrSetText(DisallowExpSales,"Disallow Sales to Export Customers");
  StrSetText(DisallowSaleBelowGP,"Disallow Selling Below Minimum GP");
  StrSetText(XXGRToXXGR,"Drag and Drop Balance Sheet and P&L Definitions");
  StrSetText(EMailFromOKPO,"E-mail from OKed Purchase Orders");
  StrSetText(POToPU,"Goods Receipt from Purchase Order");
  StrSetText(ActInvalid,"Invalidating Activities");
  StrSetText(CLInInvalid,"Invalidating Cash In");
  StrSetText(CLOutInvalid,"Invalidating Cash Out");
  StrSetText(PUInvalid,"Invalidating Goods Receipts");
  StrSetText(OPInvalid,"Invalidating Payments");
  StrSetText(InvInvalid,"Invalidating Purchase and Sales Invoices");
  StrSetText(VIInvalid,"Invalidating Purchase Invoices");
  StrSetText(IVInvalid,"Invalidating Sales Invoices");
  StrSetText(InvalidateInvoice,"Invalidating Touch Screen Invoice");
  StrSetText(ORToInv,"Invoice from Order");
  StrSetText(QTToIV,"Invoice from Quotation");
  StrSetText(ActOK,"OKing Activities");
  StrSetText(BudOK,"OKing Budget");
  StrSetText(OKCashIn,"OKing Cash In");
  StrSetText(CashInvOK,"OKing Cash Invoices");
  StrSetText(OKCashOut,"OKing Cash Out");
  StrSetText(CredInvOK,"OKing Credit Notes");
  StrSetText(SHOK,"OKing Deliveries");
  StrSetText(PUOK,"OKing Goods Receipts");
  StrSetText(InvOK,"OKing Invoices");
  StrSetText(OROK,"OKing Orders");
  StrSetText(OPOK,"OKing Payments");
  StrSetText(CredVIOK,"OKing Purchase Credit Notes");
  StrSetText(VIOK,"OKing Purchase Invoices");
  StrSetText(POOK,"OKing Purchase Orders");
  StrSetText(IPOK,"OKing Receipts");
  StrSetText(RetOK,"OKing Returned Goods");
  StrSetText(RetPUOK,"OKing Returned Goods to Supplier");
  StrSetText(RevBudOK,"OKing Revised Budget");
  StrSetText(DropSHOK,"OKing Shipment Notifications");
  StrSetText(SDOK,"OKing Stock Depreciation");
  StrSetText(SROK,"OKing Stock Revaluations");
  StrSetText(OpenCashDrawer,"Open Cash Drawer");
  StrSetText(OpenTRFromSpec,"Open Transactions from Operations Menu");
  StrSetText(QTToOrd,"Order from Quotation");
  StrSetText(OPOrder,"Ordering Payment  ");
  StrSetText(IPToPrepIV,"Prepayment Receipt to Invoice");
  StrSetText(PrintToFiscPrnt,"Print To Fiscal Printer");
  StrSetText(PUToVI,"Purchase Invoice from Goods Receipt");
  StrSetText(POCOToVI,"Purchase Invoice from PO Contract");
  StrSetText(POToVI,"Purchase Invoice from Purchase Order");
  StrSetText(IntORToPO,"Purchase Order from Internal Order");
  StrSetText(ORToPO,"Purchase Order from Order");
  StrSetText(StockMovOK,"Receiving Stock Movements");
  StrSetText(PUToRetPU,"Returned Goods from Goods Receipt");
  StrSetText(ORToRet,"Returned Goods from Order");
  StrSetText(POToRetPU,"Returned Goods from Purchase Order");
  StrSetText(SentStockMovOK,"Sending Stock Movements");
  StrSetText(POToDropSH,"Shipment Notification from Purchase Order");
  StrSetText(ShowSerialNronPOSInvoices,"Show Serial No. On POS Invoices");
  StrSetText(ORToStockMov,"Stock Movement from Order");
  StrSetText(SMToTrans,"Transactions from Simulations");
  StrSetText(UnOKAll,"UnOK all records");
  StrSetText(UnOKBud,"UnOK Budget");
  StrSetText(UnOKCashCount,"UnOK Cash Count");
  StrSetText(UnOKOR,"UnOK Orders");
  StrSetText(UnOKPO,"UnOK Purchase Orders");
  StrSetText(UnOKRevBud,"UnOK Revised Budget");
  StrSetText(ViewCostPrice,"View Cost Price");
  StrSetText(UpdCUSY,"Update Customer System Usage");
  StrSetText(EnabINF,"Enabler Information");
  EndStrSet;  
  SetBegin(11);
  SetText(0,"Проект");
  SetText(1,"Order");
  SetText(2,"Клиент");
  SetText(3,"Production");
  EndSet;
  
  SetBegin(12);
  SetText(0,"Normal");
  SetText(1,"Internal");
  EndSet;
  
  SetBegin(13);
  SetText(0,"-");
  SetText(1,"Running");
  SetText(2,"As Budgeted");
  SetText(3,"Internal");
  EndSet;

  SetBegin(14);
  SetText(0,"Группа товаров");
  SetText(1,"Item");
  EndSet;
  
  SetBegin(15); /* Try to keep them in alphabetical order */
  SetText(ACTFORMPS,"Activity");
  SetText(ADRLABFORMPS,"Address Labels");
  SetText(AGREEMENTFORMPS,"Agreement");
  SetText(AT2WROFFORMPS,"Asset Disposal");
  SetText(AT2FORMPS,"Asset Form");
  SetText(AT2PUFORMPS,"Asset put in use");
  SetText(AT2REVFORMPS,"Asset Revaluation");
  SetText(AT2MOVFORMPS,"Статус актива");
  SetText(RESTACCFORMPS,"Bar Tab");
  SetText(BPCHANGEFORMPS,"Base Price Change"); 
  SetText(LETFORMPS,"Customer Letters");
  SetText(CASHEVENTFORMPS,"Cash Event");
  SetText(CASHINVFORMPS,"Cash Invoice");
  SetText(IVCASHFORMPS,"Cash Invoice(POS)");
  SetText(CLINFORMPS,"Приход");
  SetText(CLINCOLFOMRPS,"Cash In Collection");      
  SetText(CLIN2FORMPS,"Cash In Invoices");
  SetText(CLIN1FORMPS,"Cash In Receipts");
  SetText(CLOUTFORMPS,"Расход");
  SetText(CLOUTCOLFOMRPS,"Cash Out Collection"); 
  SetText(CLOUT2FORMPS,"Cash Out Invoices");
  SetText(CLOUT1FORMPS,"Cash Out Payments");
  SetText(CLOUT3FORMPS,"Cash Out Personnel Payments");
  SetText(COLLECTIONFORMPS,"Collections");
  SetText(CONTRACTFORMPS,"Contract");
  SetText(CONTLABFORMPS,"Contract Label");
  SetText(CONTQUOTEFORMPS,"Contract Quotation");
  SetText(COURSEEVENTFORMPERPS,"Course Event");
  SetText(CREDMANFORMPS,"Credit Agreement");
  SetText(CREDMANSTATFORMPS,"Credit Agreement Statement");
  SetText(CULABFORMPS,"Customer/Contact Label");
  SetText(CUSTOMSFORMPS,"Customs Declaration");       
  SetText(SHLABFORMPS,"Delivery Labels");
  SetText(SH1FORMPS,"Delivery Note");   
  SetText(DETAGREEMENTFORMPS,"Detailed Agreement");
  SetText(DROPSHIPFORMPS,"Shipment Notification");
  SetText(VEIVFORMPS,"Electronic Purchase Invoice");
  SetText(HRMCOFORMPS,"Employment Contract");
  SetText(SLEUVATFORMPS,"EU VAT Sales"); 
  SetText(EXPGETFORMPS,"Затраты");   
  SetText(FEIVFORMPS,"First Event Sales");   
  SetText(GIFTRECEIPTFORMPS,"Gift Receipt");
  SetText(GIFTCERTFORMPS,"Gift Vouchers");
  SetText(PURCHASEFORMPS,"Goods Receipt");
  SetText(PULABFORMPS,"Goods Receipt Labels");
  SetText(GUESTDOCFORMPS,"Guest");
  SetText(HWCONTRACTFORMPS,"HansaWorld Contract"); // We should have an "internal" enabler thing... to show these things or not...
  SetText(INTIVFORMPS,"Internal Invoice");
  SetText(INTMOVEMENTFORMPS,"Internal Movements");
  SetText(INTORFORMPS,"Internal Order");
  SetText(OR2FORMPS,"Internal Sales Order");
  SetText(INTRASTATVIFORMPS,"Intrastat P/L");
  SetText(INTRASTATFORMPS,"Intrastat S/L");
  SetText(INV1FORMPS,"Счёт-фактура");
  SetText(ITEMLABELFORMPS,"Item Label");
  SetText(ITEMSINFORMPS,"Items In");
  SetText(ITEMSOUTFORMPS,"Items Out");
  SetText(KFRFORMPS,"Key Financial Ratio");
  SetText(MAILFORMPS,"Mail");
  SetText(ARSFORMPS,"Open Invoice Customer Statement");      
  SetText(APSFORMPS,"Open Invoice Supplier Statement");      
  SetText(ORDFORMPS,"Order");      
  SetText(OWNCHECKFORMPS,"Own Cheques");      
  SetText(PALLETLABFORMPS,"Pallet Label");
  SetText(OP2DFORMPS,"Payment Cheques");
  SetText(OPDFORMPS,"Payment Form");
  SetText(CUPERFORMPS,"Periodic Customer Statement");
  SetText(VEPERFORMPS,"Periodic Supplier Statement");
  SetText(PERSPAYFORMPS,"Personnel Payment Receipt");
  SetText(SH3FORMPS,"Picking List");
  SetText(PRODORDERFORMPS,"Production");
  SetText(PRODORDER3FORMPS,"Production Picking List");
  SetText(PRODOPERATIONFORMPS,"Production Operation Picking List");
  SetText(PRODORDFORMPS,"Production Order");
  SetText(PRODLABFORMPS,"Production Label");
  SetText(PROJECTFORMPS,"Проект");
  SetText(TBBUDGETFORMPS,"Project Budget");
  SetText(PROJECTINFOFORMPS,"Информация о проекте");
  SetText(PROJECTSCHEDULEFORMPS,"Project Schedule");
  SetText(PROJECTTRANSFORMPS,"Записи операций по проекту");
  SetText(VIFORMPS,"Purchase Invoice"); 
  SetText(PLBOOKFORMFORMPS,"Purchase Book (Russia)");
  SetText(POFORMPS,"Purchase Order");       
  SetText(POCOFORMPS,"Purchase Order Contracts");       
  SetText(POREMFORMPS,"Purchase Order Reminder");       
  SetText(POQTFORMPS,"Purchase Quotation");       
  SetText(QTFORMPS,"Quotation");       
  SetText(IPDFORMPS,"Receipt Form");
  SetText(REMFORMPS,"Reminder");      
  SetText(RENTQTFORMPS,"Rental Quotation");      
  SetText(RENTRESFORMPS,"Rental Reservations");
  SetText(JOBFORMPS,"Reservation");
  SetText(RESAVFORMPS,"Reservation Quotation");
  SetText(RETFORMPS,"Возвраты товаров"); 
  SetText(RETPUFORMPS,"Returned Goods To Supplier"); 
  SetText(ROUTINGPRFORMPS,"Routing Production");
  SetText(ROUTINGPRORDFORMPS,"Routing Production Order");
  SetText(SLBOOKFORMFORMPS,"Sales Book (Russia)");
  SetText(SVOFORMPS,"Service Order");
  SetText(SVGMFORMPS,"Service Stock Transactions");
  SetText(SDFORMPS,"Stock Depreciation");
  SetText(STOCKMOVFORMPS,"Stock Movement");
  SetText(SRFORMPS,"Stock Revaluations");
  SetText(STOCKTRFORMPS,"Stock Transfers");
  SetText(STOCKTAKEFORMPS,"Stocktaking");
  SetText(TIMESHEETFORMPS,"Time Sheet");
  SetText(TAXREPFORMPS,"Tax Report");
  SetText(TOURISMLEVYFORMPS,"Tourism Levy");
  SetText(TRANSFERFORMPS,"Transfer");
  SetText(TRFORMPS,"Записи операций");  
  SetText(VATIVFORMPS,"VAT Correction S/L");
  SetText(VATVIFORMPS,"VAT Correction P/L");
  SetText(VATREPFORMPS,"VAT Report");
  SetText(WAYLISTFORMPS,"Way List"); 
  SetText(WHCERTIFICATEFORMPS,"Withholding Certificate");
  SetText(WHCERTIFICATEFORMPERPS,"Withholding Certificate Periodic Statement");
  SetText(WOFORMPS,"Work Order");
  SetText(WSFORMPS,"Work Sheet");
//  SetText(AT2INFORMPS,"Asset Form"); 
//  SetText(AT2DPRFORMPS,"Asset Depreciation");
//  SetText(ATLABFORMPS,"Asset Labels");
//  SetText(AT2TAKEFORMPS,"Asset Stocktaking");
//  SetText(F_COMPANY,"Company");
//  SetText(CULABFORMPS,"Contact Label"); // Yes, they are the same... (as customer labels)
//  SetText(CONTCREDITFORMPS,"Contract Credit Query");
//  SetText(CONTDELIVERYFORMPS,"Contract Delivery");
//  SetText(CONTINSURANCEFORMPS,"Contract Insurance");
//  SetText(CONTSALESFORMPS,"Contract Sales Agreement");
//  SetText(CONTTRANSFERFORMPS,"Contract Transfer Notice");
//  SetText(PLACELABFORMPS,"Place Label");
//  SetText(PLACELETFORMPS,"Place Letter");
//  SetText(BUDGETQTFORMPS,"Project Quotations"); 
//  SetText(RESLETFORMPS,"Resource Letters");

//  SetText(INKASSOFORMPS,"Inkasso brev");      
//  SetText(INV1FORMPS,"Inv1Form");
//  SetText(INV2FORMPS,"Inv2Form");
//  SetText(INV3FORMPS,"Inv3Form");
//  SetText(AT2RESPFORMPS,"F/A Responsibles");
/*
//jarek, these are missing documents
Bar Tab  modRest);
Cash Invoices  modPOS);
Event  modRsrt);
Transfer  modRsrt);
Internal Invoices  modSL);
Intrastat P/L  modPL);
Pallet Labels  modWHM);
Production Order  modProd);
Prognosis Orders  modPOProg);
Purchase Order Reminders  modPO); 
Returned Goods To Supplier  modIN);
Tax Report  modNL);
VAT Correction  modSL); 
*/
  EndSet;  

/* DON'T CHANGE THE ORDER OR CODES */
  SetBegin(16);
/* Australia */
  SetText(100,"Australia - Personal");
  SetText(101,"Australia - ABA");
/* Czech */
  SetText(70,"Czech - Komercni banka - KB");
  SetText(71,"Czech - Ceskoslovenska obchodni banka - CSOB");
  SetText(72,"Czech - Ceska sporitelna - CS");
  SetText(73,"Czech - CITI bank");
  SetText(74,"Czech - ABO");
/* Norway, Denmark*/
  SetText(0,"Denmark - Midtbank");
  SetText(1,"Denmark - Jyske Bank");
  SetText(2,"Denmark - Den Denske Bank");
  SetText(3,"Denmark - SYDBANK");
  SetText(4,"Denmark - Unibank");
  SetText(5,"Denmark - BGBank");
/* Estonia */
//  SetText(15,"Estonia - Microbanker");
  SetText(16,"Estonia - Telehansa");
//  SetText(17,"Estonia - Tele pank");
//  SetText(18,"Estonia - Ж_hispank");//not allowed, HTS will take over
  SetText(19,"Estonia - Riigikassa");
  SetText(80,"Estonia - SEB");
/* Finland */
  SetText(13,"Finland - LM 00");
  SetText(14,"Finland - LM 02");
  SetText(24,"Finland - LM 03 (Sampo, Nordea, Optia)");
  SetText(25,"Finland - LM 03 (Osuuspankki)");
  SetText(26,"Finland - LM 03 (Handelsbanken)");
  SetText(27,"Finland - SEPA");
/* Hungary */
  SetText(110,"Hungary - HVB");
/* Latvia */
  SetText(20,"Latvia - Unibanka");
  SetText(21,"Latvia - Nordea");
  SetText(22,"Latvia - HansaPlus");
  SetText(32,"Latvia - TeleHansa");
  SetText(52,"Latvia - Nord LB");
//  SetText(33,"Latvia - Pareks-bank"); /* NO code for this bank*/
//  SetText(44,"Latvia - Vereinsbank"); /* NO code for this bank*/
/* Lithuania */
  SetText(61,"Lithuania - LITAS-ESIS 1.1");
  SetText(62,"Lithuania - 2");
/* Cymot uses this to send Bank files, so added to standard */
  SetText(84,"Namibia");

  /* New Zealand */
  SetText(120,"New Zealand - ANZ");
  SetText(121,"New Zealand - ASB");
  SetText(122,"New Zealand - BNZ");
  SetText(123,"New Zealand - KiwiBank");
  SetText(124,"New Zealand - National Bank");
  SetText(125,"New Zealand - Westpac");
  
/* Norway */
  SetText(9,"Norway - DnB Telepay");
  SetText(10,"Norway - K-Link");
  SetText(11,"Norway - SparNett");
  SetText(12,"Norway - Postbanken");
  SetText(35,"Norway - Telepay 2"); //turned out to be unnessesary, if it isn't, we activate it again....
  
/* South Africa */
//  SetText(130,"South Africa - NetBank Business");
  
/* Sweden */
  SetText(6,"Sweden - SE-Banken");
  SetText(7,"Sweden - Handelsbanken");
  SetText(8,"Sweden - Nordea");
  SetText(23,"Sweden - FЪreningsSparbanken");
  SetText(63,"Sweden - PlusGirot");
/* England */
/* Where is the code for this ???? */
/* Why 30 ???? 25 is free. Why skip numbers ???? */
  SetText(30,"UK - Albany");
  SetText(31,"UK - BACS");
  SetText(33,"UK - Hexagon");
/* Iceland */
  SetText(40,"Iceland - bunaМarbankinn");
  SetText(41,"Iceland - LANDSBANKINN");
  SetText(42,"Iceland - ISLANDSBANKI");
  SetText(43,"Iceland - SPARISJODIR");
/* Poland */
  SetText(50,"Poland - ING Bank");
  SetText(51,"Poland - Reiffaisen Bank");
  SetText(53,"Poland - BPH");
//  SetText(54,"Poland - Nordea");

  SetText(90,"Slovenia");
  EndSet;

  SetBegin(17);
  SetText(0,"Клиент");
  SetText(1,"Test dokument");
  EndSet;  
/*
  SetBegin(18);
  SetText(HANSAWORD,"Microsoft Word");
  SetText(HANSAEXCEL,"Microsoft Excel");
  EndSet;  
  
  SetBegin(19);
  SetText(HANSATRANS,"FinHansa");
  SetText(MERITATRANS,"Merita Pankki");
  EndSet;  
*/
  SetBegin(20);
  SetText(1,"Deposit");
  SetText(2,"Withdrawal");
  SetText(3,"Correction of Deposit");
  SetText(4,"Correction of Withdrawal");
  EndSet;  
  
/* IstКllet fЪr kryssruta i matris */
  SetBegin(21);
  SetText(0,"-");
  SetText(1,"OK");
  EndSet;  
  
// Where is this used?? I can't find it anywhere...
  SetBegin(22);
  SetText(700,"BetalningsrЪrelsetjКnst");
  SetText(701,"Service Periodic Payment");
  SetText(702,"Invoice Payment Service");
  SetText(703,"Payment Terminal Service");
  SetText(704,"Direct Debit/Automatic Payment Service");
  SetText(705,"Payment with reference");
  SetText(706,"Payment Service");
  SetText(710,"Deposit");
  SetText(720,"Withdrawal");
  SetText(721,"Payment With Card");
  SetText(722,"Проверить");
  SetText(723,"Taxi/Bus");
  SetText(730,"Commission");
  SetText(740,"Interest debit");
  SetText(750,"Interest credit");
  SetText(760,"Loan (amortisation, interest and commission");
  SetText(761,"Amortisation of loan");
  EndSet;  
  
  StrSetBegin(23);
  StrSetText(BalRn,"Balance Sheet");
  StrSetText(ResRn,"Profit & Loss");
  StrSetText(KeyRn,"Key Financial Ratios");
  StrSetText(VAT2Rn,"VAT Reporting");
  EndStrSet;
  
  SetBegin(24);
  SetText(kTransactionRowTypeAny,"Любые");  //Any
  SetText(kTransactionRowTypeManual,"M");  //Manual
  SetText(kTransactionRowTypeCustomer,"C");  //Customer
  SetText(kTransactionRowTypeSupplier,"S");  //Supplier
  SetText(kTransactionRowTypeStock,"I");  //Stock
  EndSet;
  
  SetBegin(25);
  SetText(10,"Eksport/Import av skip");
  SetText(11,"Eksport/Import av plartform/riggar");
  SetText(12,"Eksport/Import av fly");
  EndSet;

  SetBegin(26);
  SetText(0,"BBS OcrGiro (NOR)");
  SetText(1,"Gjensidige Bank (NOR)");
//  SetText(2,"xxx?");
  SetText(3,"NOR finans (NOR)");
  SetText(4,"Bedriftsfinans");
  SetText(5,"DNB Factoring (NOR)");
  SetText(6,"K-Finans (NOR)");
  SetText(7,"NORD finans (NOR)");
  SetText(21,"SG Finans (NOR)");
//  SetText(8,"xxx"); // Finance Credit Norge ASA");  //should maybe be removed. They are bankrupt.
  SetText(9,"Kid Code 15");
  SetText(10,"Kid Code 14");
  SetText(11,"Kid Code 15(2)");
  SetText(12,"Customer Kid Code");
  SetText(13,"NORD finans (DK)");
  SetText(14,"eCredit");
  SetText(15,"Nordea finans");
  SetText(16,"Bgc standard (SWE)");
  SetText(17,"PBK Outsourcing (SWE)");
  SetText(18,"BPH (POL)");
  SetText(19,"CITI (CZE)");
  SetText(20,"ABO (CZE)");
  EndSet;

  SetBegin(27);
  SetText(0,"-");
  SetText(1,"R");
  EndSet;

  SetBegin(28);
  SetText(0,"Active");
  SetText(1,"Inactive");
  SetText(2,"Deleted");
  EndSet;

  SetBegin(29);
  SetText(0,"No Factoring");
  SetText(1,"Nordea (FIN)");
  SetText(2,"Gjensidige Bank (NOR)");
  SetText(3,"Factoring Finans (NOR)");
  SetText(4,"Osuus Pankki (FIN)");
  SetText(5,"Nordea (SWE)");
  SetText(6,"NORD finans");
//  SetText(7,"xxx"); // Finance Credit Norge ASA");
  SetText(8,"Kredittstyring");
  SetText(9,"LI (ICE)");
  SetText(10,"LB (ICE)");
  SetText(11,"BI (ICE)");
  SetText(12,"SP (ICE)");
  SetText(13,"Faktab Finans");
  SetText(14,"Intrum Justitia");
  SetText(15,"Bedriftsfinans");
  SetText(16,"BunaМarbankinn");
  SetText(17,"ISLANDSBANKI");
  SetText(18,"SPARISJODIR");
  SetText(19,"LANDSBANKINN");
  SetText(20,"NORD finans (DK)");
  SetText(21,"eCredit");
  SetText(22,"Nordea finans");
  SetText(23,"SEB");
  SetText(24,"Handelsbanken (SWE)");
  SetText(25,"Sampo (FIN)");
  SetText(26,"SG Finans (NOR)");
  SetText(27,"Handelsbanken (FIN)");
  EndSet;

  SetBegin(30);
  SetText(1,"Report");
  SetText(2,"Export");
  SetText(3,"Import");
  EndSet;

  SetBegin(31);
  SetText(0,"-");
  SetText(1,"Invoiceable");
  SetText(2,"Warranty");
  SetText(3,"Contract");
  SetText(4,"Goodwill");
  EndSet;

  SetBegin(32); /* */
  SetText(0,"GenTrans");
  SetText(1,"Do Not GenTrans");
  EndSet;

  SetBegin(33);
  SetText(0,"Not Invoiced");
  SetText(1,"Already Invoiced");
  EndSet;
  
  SetBegin(34); // MailVc
  SetText(kMailRowTypeTo,"To");
  SetText(kMailRowTypeFrom,"From");
//  SetText(kMailRowTypeFile,"File");
  SetText(kMailRowTypeCC,"Cc");
  SetText(kMailRowTypeBCC,"Bcc");
  EndSet;
  
  SetBegin(35);
  SetText(kConfClassConference,"Conference");
  SetText(kConfClassNews,"News");
  SetText(kConfClassBillboard,"Billboard");
  SetText(kConfClassLibrary,"Library");
  SetText(kConfClassFolder,"Folder");
  SetText(kConfClassMailbox,"Mailbox");
  SetText(kConfClassArchive,"Archive");
  EndSet;
  
  SetBegin(36); /* */
  SetText(kPayModeTypeFree,"Free");
  SetText(kPayModeTypeCheque,"Received Cheques");
  SetText(kPayModeTypeOwnCheque,"Own Cheques");
  SetText(kPayModeTypeCreditCard,"Credit Card");
  SetText(kPayModeTypeDebitCard,"Debit Card");
  SetText(kPayModeTypeWithholding,"Withholding");
  SetText(kPayModeTypeCash,"Cash");
  SetText(kPayModeTypeResource,"Resource");
  SetText(kPayModeTypeOnAccount,"On Account");
  SetText(kPayModeTypeRegionalWithholding,"Regional Withholding");
  SetText(kPayModeTypeVATWithholding,"VAT Withholding");
  SetText(kPayModeTypeBankTransfer,"Bank Transfer");
  SetText(kPayModeTypeGiftVoucher,"GiftVoucher")
  EndSet;

  SetBegin(37); /* */
  SetText(0,"Другое");
  SetText(1,"Visa");
  SetText(2,"MasterCard");
  SetText(3,"American Express");
  SetText(4,"Diners");
  SetText(5,"Maestro/Switch");
  SetText(6,"Visa Electron");
  SetText(7,"Discover");
  SetText(8,"Carte Blanche");
  SetText(9,"JCB");
  SetText(10,"EnRoute");
  SetText(11,"JAL");
  SetText(12,"Delta");
  SetText(13,"Dankort");
  SetText(14,"Laser");
  SetText(15,"Carte Bleue");
  SetText(16,"Carta Si");
  EndSet;

  SetBegin(38); /* */
  SetText(0,"Allowed Target");
  SetText(1,"Allowed Origin");
  SetText(2,"Allowed Temporary");
  SetText(3,"Default Temporary Own Cheque");
  SetText(4,"Default Target Cheque");
  SetText(5,"Default Target IOU");
  SetText(6,"Default Temporary Cheque");
  SetText(7,"Default Temporary IOU");
  SetText(8,"Default Temporary Own IOU");
  SetText(9,"Allowed Origin Own");
  EndSet;

/* Removed from the Activities now. */
/*
  SetBegin(39);
  SetText(0,"No Link");
  SetText(1,"Quotation");
  SetText(2,"Счета клиентам");
  SetText(3,"Sales Invoice");
  SetText(4,"Проект");
  SetText(5,"Purchase Invoice");
  SetText(6,"Letter");
  SetText(7,"Work Order");
  SetText(8,"Contract");
  EndSet;
*/

  SetBegin(40);
  SetText(0,"Brutto");
  SetText(1,"BN");
  SetText(2,"BasicWithdrawn");
  SetText(3,"BasicTax");
  SetText(4,"Withdrown");
  SetText(5,"Tax");
  EndSet;

  SetBegin(41);
  SetText(0,"No Check");
  SetText(1,"Always Check");
  EndSet;

  SetBegin(42);
  SetText(0,"360 Days");
  SetText(1,"365 Days");
  EndSet;

  SetBegin(43);
  SetText(0,"Country Deal");
  SetText(1,"Special A-Tax");
  SetText(2,"Код НДС");
  EndSet;

  SetBegin(44);
  SetText(0,"Normal");
  SetText(1,"Never Remove");
  SetText(2,"Remove Next Day");
  EndSet;

  SetBegin(45);
  SetText(0,"Active");
  SetText(1,"Transferred");
  SetText(2,"Invalid");
  SetText(3,"Year End Stage 1");
  SetText(4,"Year End Stage 2");
  EndSet;

  SetBegin(46);
  SetText(0,"Black");
  SetText(1,"Red");
  SetText(2,"Green");
  SetText(3,"Deep Blue");
  SetText(4,"Yellow");
  SetText(5,"Cyan");
  SetText(6,"Pink");
  SetText(7,"Strawberry");
  SetText(8,"Lime");
  SetText(9,"Sky Blue");
  SetText(10,"Blue");
  SetText(11,"Deep Purple");
  SetText(12,"Gold");
  SetText(13,"Coffee");
  SetText(14,"Chocolate");
  SetText(15,"Orange");
  SetText(16,"Plum");
  SetText(17,"Night Shade");
  SetText(18,"Deep Forest");
  SetText(19,"Flamingo");
  SetText(20,"Gray");
  EndSet;

  SetBegin(47);
  SetText(0,"No Logging");
  SetText(1,"Log User and Time");
  SetText(2,"Keep Original Record");
  EndSet;

  SetBegin(48);
  SetText(0,"Internal Powerbook G3 Series");
  SetText(1,"U.S. Robotics 56k Faxmodem");
//  SetText(1,"Hayes 288"); /* ? */
//  SetText(2,"US Robotics 56k"); /* ? */
  EndSet;

  SetBegin(49);
  SetText(0,"14400");
  SetText(1,"9600");
  SetText(2,"7200");
  SetText(3,"4800");
  EndSet;

  SetBegin(50);
  SetText(0,"-");
  SetText(1,"Exclude from Official Reports");
//  SetText(2,"No VAT");// in Tax Rules, set 358
  EndSet;

  SetBegin(51);
  SetText(0,"-");
  SetText(1,"+");
  EndSet;

  StrSetBegin(52);
  StrSetText(All,"All mails");
  StrSetText(Recv,"Recipient");
  StrSetText(Received:,"Received");
  StrSetText(To:,"To");
  StrSetText(Send,"Sender");
  StrSetText(Subj,"Subject");
  StrSetText(Body,"Body");
  StrSetText(AllFour,"Recip or Recvd or To"); /* Can't use comma */
  EndStrSet;

  SetBegin(53);
  SetText(0,"New");
  SetText(1,"Used");
  SetText(2,"Repaired");
  EndSet;

  SetBegin(54);
  SetText(0,"Found");
  SetText(1,"Missing");
  SetText(2,"On loan");
  SetText(3,"Borrowed");
  SetText(4,"Laid off");
  SetText(5,"On Repair");
  EndSet;

  SetBegin(55);
  SetText(0,"Asset Category");
  SetText(1,"Asset");
  EndSet;

  SetBegin(56);
  SetText(0,"None");
  SetText(1,"Epson TMU210"); 
  SetText(2,"Star TSP100"); 
  EndSet;

  SetBegin(57);
  SetText(0,"Период");
  SetText(1,"Non Period"); 
  EndSet;

  SetBegin(58);
  SetText(0,"First Day");
  SetText(1,"Every Day");
  SetText(2,"Last Day");
  EndSet;

  SetBegin(59);
  SetText(0,"Print");
  SetText(1,"Не печатать");
  EndSet;

  SetBegin(60);
  SetText(0,"Received");
  SetText(1,"Missing (Will be Charged)");
  SetText(2,"Stolen (Will be Charged)");
  SetText(6,"Keeping it (Will be Charged)");
  SetText(3,"Disposed");
  SetText(4,"For Service");
  SetText(5,"Rental Item");
  SetText(7,"Split Information");
  EndSet;

  SetBegin(61);
  SetText(0,"-");
  SetText(1,"Recipe");
  EndSet;

  SetBegin(62);
  SetText(0,"For Rent");
  SetText(1,"Disposable");
  SetText(2,"Chargeable");
  SetText(3,"3rd Party Rental");
  SetText(4,"Sub Contractor");
  EndSet;

  SetBegin(63);
  SetText(0,"Rental Item");
  SetText(1,"Accessory Item");
  EndSet;

  SetBegin(64);
  SetText(0,"Active");
  SetText(1,"In Service");
  SetText(2,"Inactive");
  EndSet;

  SetBegin(65);
  SetText(0,"-");
  SetText(1,"Force Bank Values in B1");
  SetText(2,"Force Bank Values in B1 and B2");
  EndSet;

  SetBegin(66);
  SetText(0,"Приход");
  SetText(1,"Счёт-фактура");
  SetText(2,"Credit Purchase Invoice");
  SetText(3,"Personnel Payment");
  SetText(4,"Prepayment from Customer");
  SetText(5,"Rev. Prep. to Supplier");
  SetText(6,"Cheque");
  EndSet;

  SetBegin(67);
  SetText(0,"Calendar");
  SetText(1,"To Do");
  SetText(2,"Timed To Do");
  EndSet;

  SetBegin(68);
  SetText(1,"Call");
  SetText(2,"Meeting");
  SetText(3,"Работа в офисе");
  SetText(0,"Другое");
  EndSet;

  SetBegin(69);
  SetText(0,"None");
  SetText(1,"POSNET 1 (Poland)"); 
  SetText(2,"POSNET 2 (Poland)"); 
  SetText(3,"OPTIMUS (Poland)"); 
  SetText(4,"POSNET Thermal 5V (Poland)"); 
  SetText(5,"FP3000 (Slovakia)"); 
  SetText(6,"Hasar (Argentina)"); 
  SetText(7,"Epson (Argentina)"); 
  SetText(8,"Fi-550 (Serbia)"); 
  EndSet;  

  SetBegin(70);
  SetText(0,"No Decimals"); 
  SetText(1,"One Decimal"); 
  SetText(2,"Two Decimals"); 
  SetText(3,"Three Decimals"); 
  SetText(4,"Four Decimals"); 
  SetText(5,"Five Decimals"); 
  SetText(10,"0.05"); 
//  SetText(11,"Down to 0.05"); 
  SetText(-1,"Tens"); 
  SetText(-2,"Hundreds"); 
  SetText(-3,"Thousands"); 
  EndSet;

  SetBegin(71);
  SetText(0,"Master Control");
  SetText(1,"Bar Tab"); 
  SetText(2,"Resource Month"); 
  SetText(3,"Счёт-фактура"); 
  SetText(4,"Bar Tab New"); 
  SetText(5,"Production Time Entry"); 
  SetText(6,"Supermarket Invoice"); 
  SetText(7,"Restaurant Table Layout"); 
  SetText(8,"POS Invoices Touch Screen"); 
  EndSet;

  SetBegin(72);
  SetText(0,"None");
  SetText(1,"Open"); 
  SetText(2,"Close"); 
  EndSet;

  SetBegin(73);
  SetText(0,"Расход");
  SetText(1,"Credit Invoice");
  SetText(2,"Purchase Invoice");
  SetText(3,"Personnel Payment");
  SetText(4,"Prepayment to Supplier");
  SetText(5,"Rev. Prep. from Customer");
  SetText(6,"Cheque");
  SetText(7,"Own Cheque");
  EndSet;

  SetBegin(74);
  SetText(0,"Free");
  SetText(1,"Used");
  SetText(2,"Item on the Way");
  SetText(3,"Error");
  EndSet;

  SetBegin(75);
  SetText(0,"Ready to Send");
  SetText(1,"Sent to NT7000");
  SetText(2,"Accepted by NT7000");
  SetText(3,"Error");
  SetText(10,"On the Conveyour");
  EndSet;

  SetBegin(76);
  SetText(0,"Manual");
  SetText(1,"Delivery");
  SetText(2,"Movement");
  EndSet;

  SetBegin(77);
  SetText(0,"Automatic");
  SetText(1,"Picking");
  SetText(2,"-");//Manual, not implemented
  SetText(3,"Закрыто);
  EndSet;

  SetBegin(78);
  SetText(0,"Per Room");
  SetText(1,"Per Guest");
  EndSet;

  SetBegin(80);
  SetText(LangEnglish,"English");
  SetText(LangFrench,"French");
  SetText(LangGerman,"German");
  SetText(LangItalian,"Italian");
  SetText(LangDutch,"Dutch");
  SetText(LangSwedish,"Swedish");
  SetText(LangSpanish,"Spanish");
  SetText(LangDanish,"Danish");
  SetText(LangPortuguese,"Portuguese");
  SetText(LangNorwegian,"Norwegian");
  SetText(LangJapanese,"Japanese");
  SetText(LangArabic,"Arabic");
  SetText(LangFarsi,"Farsi");
  SetText(LangFinnish,"Finnish");
  SetText(LangGreek,"Greek");
  SetText(LangHebrew,"Hebrew");
  SetText(LangIcelandic,"Icelandic");
  SetText(LangItalian,"Italian");
  SetText(LangLithuanian,"Lithuanian");
  SetText(LangPolish,"Polish");
  SetText(LangHungarian,"Hungarian");
  SetText(LangEstonian,"Estonian");
//  SetText(LangLettish,"Lettish");
  SetText(LangLatvian,"Latvian");
//  SetText(LangLapponian,"Lapponian");
  SetText(LangLappish,"Lappish");
  SetText(LangFaeroese,"Faeroese");
  SetText(LangRussian,"Russian");
  SetText(LangFlemish,"Flemish");
  SetText(LangIrish,"Irish");
  SetText(LangRomanian,"Romanian");
  SetText(LangCzech,"Czech");
  SetText(LangSlovak,"Slovak");
  SetText(LangSlovenian,"Slovenian");
  SetText(LangSerbian,"Serbian");
  SetText(LangMacedonian,"Macedonian");
  SetText(LangBulgarian,"Bulgarian");
  SetText(LangUkrainian,"Ukrainian");
  SetText(LangByelorussian,"Byelorussian");
  SetText(LangUzbek,"Uzbek");
  SetText(LangKazakh,"Kazakh");
  SetText(LangAzerbaijani,"Azerbaijani");
  SetText(LangAzerbaijanAr,"AzerbaijanAr");
  SetText(LangArmenian,"Armenian");
  SetText(LangGeorgian,"Georgian");
  SetText(LangMoldavian,"Moldavian");
  SetText(LangKirghiz,"Kirghiz");
  SetText(LangTajiki,"Tajiki");
  SetText(LangTurkmen,"Turkmen");
  SetText(LangWelsh,"Welsh");
  SetText(LangBasque,"Basque");
  SetText(LangCatalan,"Catalan");
  SetText(LangLatin,"Latin");
  SetText(LangBrazilian,"Brazilian");
  SetText(LangVietnamese,"Vietnamese");
  SetText(LangCanadian,"Canadian English");
  SetText(LangCroatian,"Croatian");
  SetText(LangTurkish,"Turkish");
  EndSet;

  SetBegin(81);
  SetText(vatEnglish,"По умолчанию"); // English is Default, it makes it easier for people in a country not listed
  SetText(vatArgentinean,"Argentinean"); 
  SetText(vatCzech,"Czech");
  SetText(vatDanish,"Danish");
  SetText(vatEstonian,"Estonian");
  SetText(vatFinnish,"Finnish");
  SetText(vatGerman,"German");
  SetText(vatHungarian,"Hungarian");
  SetText(vatIcelandic,"Icelandic");
  SetText(vatLithuanian,"Lithuanian");
  SetText(vatNorwegian,"Norwegian");
  SetText(vatParaguayan,"Paraguayan"); 
  SetText(vatPolish,"Polish");
  SetText(vatPortuguese,"Portuguese");
  SetText(vatRomanian,"Romanian");
  SetText(vatRussian,"Russian");
  SetText(vatSAF,"South African");
  SetText(vatSwedish,"Swedish");
  SetText(vatUkrainian,"Ukrainian");
  EndSet;
  
  SetBegin(82);
  SetText(1,"boolean");
  SetText(2,"integer");
  SetText(3,"real");
  SetText(4,"string");
  SetText(6,"list");
  SetText(7,"record");
  SetText(9,"row");
  SetText(11,"decimal");
  SetText(12,"long");
  SetText(13,"Дата");
  SetText(17,"Время");
  SetText(21,"area");
  SetText(22,"rectangle");
  EndSet;

  SetBegin(83);
  SetText(0,"Repetitive");
  SetText(1,"Invoice Once"); 
  EndSet;

  SetBegin(84);
  SetText(0,"Record");
  SetText(1,"Row"); 
  EndSet;

  SetBegin(85);
  SetText(1,"Single Function");
  SetText(2,"Регистр");
/* Isn't flexible enough to use these...
  SetText(3,"Setting");
  SetText(4,"Report");
  SetText(5,"Document");
  SetText(6,"Export");
  SetText(7,"Import");
  SetText(8,"Обслуживание");
*/
  EndSet;
  
  StrSetBegin(86);
  StrSetText(Orders,"Order Entry");
  StrSetText(Invoices,"Invoice Entry");
  StrSetText(Quotes,"Quotation Entry");
  StrSetText(Mail,"Mail and Conferences");
  EndStrSet;
  
  SetBegin(87);
  SetText(0,"Choose One");
  SetText(1,"Mac OS"); // Should have ™ in the end, but it doesn't work in Windows....
  SetText(2,"Windows");
  SetText(3,"Linux");
  SetText(4,"AIX");
  SetText(5,"OS/400");
  SetText(6,"Solaris");
  SetText(31,"Другое"); // Don't have any higher than this
  EndSet;
  
  SetBegin(88);
  SetText(0,"Choose One");
  SetText(1,"Apple Macintosh");
  SetText(2,"Generic PC");
  SetText(3,"IBM xSeries");
  SetText(4,"IBM pSeries");
  SetText(5,"IBM iSeries");
  SetText(6,"Sun Sparc");
  SetText(31,"Другое"); // Don't have any higher than this
  EndSet;

  StrSetBegin(89);
  StrSetText("","cyrillic (Unicode)");
  StrSetText(ISO-8859-1,"ISO 8859-1 (Western Europe)");
  StrSetText(ISO-8859-4,"ISO 8859-4 (Baltic)");
  StrSetText(ISO-8859-5,"ISO 8859-5 (Cyrillic)");
  StrSetText(ISO-8859-15,"ISO 8859-15 (western european with euro sign)");
  StrSetText(US-ASCII,"US ASCII");
  StrSetText(CP437,"DOS CP 437 (US)");
  StrSetText(CP850,"DOS CP 850 (Western Europe)");
  StrSetText(CP866,"DOS CP 866 (Cyrillic)");
  StrSetText(CP1250,"Windows codepage 1250 (Central Europe)");
  StrSetText(CP1251,"Windows codepage 1251 (Cyrillic)");
  StrSetText(CP1252,"Windows codepage 1252 (Western Europe)");
  StrSetText(CP1257,"Windows codepage 1257 (Baltic)");
  StrSetText(KOI8-R,"KOI8-R (Cyrillic)");
  StrSetText(MACINTOSH,"Apple Western Europe");
  StrSetText(ACE,"Apple Central Europe");
  StrSetText(ACYR,"Apple Cyrillic");
  EndStrSet;
  
  SetBegin(90);
  SetText(kAnyClient,"Any Client");
  SetText(kClientOSX,"Mac OS X Carbon");
  SetText(kClientOSXCocoa,"Mac OS X Cocoa");
  SetText(kClientClassic,"Mac OS 9");
  SetText(kClientWindows,"Windows");
  SetText(kClientXT,"XT Client");
  SetText(kClientSymbian,"Symbian");
  SetText(kClientHandset,"Handset"); // Don't like the word, it WILL be misunderstood...
  SetText(kClientBrowser,"Browser");
  EndSet;

  SetBegin(91);
  SetText(0,"Accept");
  SetText(1,"Reject");
  EndSet;

  SetBegin(92);
  SetText(0,"Choose HansaWorld Company");
  SetText(13,"Аргентина");
  SetText(29,"Australia");
  SetText(33,"Austria");
  SetText(14,"Bolivia");
  SetText(41,"Canada");
  SetText(15,"Czech");
  SetText(5,"Denmark");
  SetText(17,"Ecuador");
  SetText(7,"Estonia HansaWorld");
  SetText(16,"Estonia (Excellent Business Solutions)");
  SetText(25,"Estonia (HansaRaama Customers)");
  SetText(4,"Finland");
  SetText(32,"Germany");
  SetText(18,"Honduras");
  SetText(19,"Hungary");
  SetText(27,"Iceland");
  SetText(40,"Ireland");
  SetText(8,"Latvia");
  SetText(9,"Lithuania");
  SetText(38,"Mexico");
  SetText(20,"Middle-Eastern Customers");
  SetText(42,"New Zealand");  
  SetText(2,"Norway HansaWorld");
  SetText(26,"Norway FirstOffice");
  SetText(21,"Paraguay");
  SetText(6,"Poland");
  SetText(22,"Portugal");
  SetText(10,"Russia");
  SetText(30,"Romania");
  SetText(39,"Singapore");
  SetText(31,"Slovakia");
  SetText(23,"Slovenia");
  SetText(28,"Sudan");
  SetText(12,"South Africa");
  SetText(3,"Sweden");
  SetText(34,"Switzerland");
  SetText(35,"Turkey");
  SetText(1,"UK");
  SetText(36,"Ukraine");
  SetText(37,"United States");
  SetText(24,"Uruguay");
  SetText(99,"Auto Selected Company");
  EndSet;
  
  SetBegin(93);
  SetText(0,"Finnvoice");
  EndSet;

  SetBegin(94);
  SetText(0,"Confirm Date");
  SetText(1,"Дата нач.");
  SetText(2,"Дата оконч.");
  EndSet;

  SetBegin(95);
  SetText(0 ,"-");
  SetText(1 ,"Number");
  SetText(2 ,"Имя");
  SetText(3 ,"Price");
  SetText(4 ,"Picture");
  SetText(5 ,"Item Card Text");
  SetText(6 ,"Extra Text");
  SetText(7 ,"Buy Button");
  SetText(8 ,"Basket Contents");
  SetText(9 ,"Unit");
  SetText(10,"Basket Contents (editable)");
  SetText(11,"HTML code");
  EndSet;
  
  SetBegin(96);
  SetText(0,"no");
  SetText(1,"yes");
  EndSet;

  SetBegin(97);
  SetText(0,"Reminders");
  SetText(1,"No Reminders");
  EndSet;

  SetBegin(98);
  SetText(0 ,"-");
  SetText(1,"Item Unit Price");
  SetText(2,"Customs");
  SetText(3,"Freight");
  SetText(4,"Extra cost 1");
  SetText(5,"Extra cost 2");
  SetText(6,"Extra cost 3");
  SetText(7,"Extra cost 4");
  SetText(8,"Extra cost 5");
  EndSet;
  
  SetBegin(99);
  SetText(0 ,"Все");
  SetText(1,"OKed");
  SetText(2,"Not OKed");
  EndSet;

// Dangerous to add 120, it is in the middle of document types....
  SetBegin(120);
  SetText(0,"-");
  SetText(1,"Hansa");
  SetText(2,"FInvoice");
  SetText(3,"EInvoice Denmark");
  EndSet;

// SETS 121 - 255 are busy (document types)
// We are running out of setnumbers, unless we can start from 255 and go up....

  SetBegin(300);
  SetText(0,"Will Sell At");
  SetText(1,"Not for Sale (official price)");
  EndSet;

  SetBegin(301);
  SetText(0,"Page with Conference Contents");
  SetText(1,"Dropdown list");
  SetText(2,"Own HAL Function (use field to enter)");
  SetText(3,"Логин");
  SetText(4,"Logout");
  SetText(5,"Shopping Basket");
  SetText(6,"Item Browse");
  SetText(7,"Поиск");
  SetText(8,"New Customer");
  SetText(9,"Сменить пароль");
  SetText(10,"Order Journal");  
  SetText(21,"Purchase Shopping Basket");  
  SetText(22,"Purchase Item Browse");  
  SetText(23,"Purchase Search");  
  SetText(24,"Purchase Order Journal");  
  EndSet;

  SetBegin(302);
  SetText(0,"One per Mail (Conference and Dropdowns)");
  SetText(1,"One per Conference (Conference and Dropdowns)");
  SetText(2,"One per Mail with Drilldown (Conference only)");
  SetText(3,"One per Mail with News (Conference only)");
  SetText(4,"One per Mail with Subject as Link (Conference only)");
  SetText(5,"One per Mail with Bulletpoints (Conference only)");
  SetText(6,"Conference Structure (HansaManuals)");
  EndSet;

/* Will be...
  SetBegin(301);
  SetText(0,"Conference Contents. Choose Options Below.");
//  SetText(1,"Dropdown list");
  SetText(2,"Own HAL Function (use field to enter)");
  SetText(3,"Логин");
  SetText(4,"Logout");
  SetText(5,"Shopping Basket");
  SetText(6,"Item Browse");
  SetText(7,"Поиск");
  SetText(8,"New Customer");
  SetText(9,"Сменить пароль");
  SetText(10,"Order Journal");  
  EndSet;

  SetBegin(302);
  SetText(0,"Mail List");
  SetText(1,"Conference List");
  SetText(2,"Drilldowns");
  SetText(3,"News");
  SetText(4,"Subject as Link");
  SetText(5,"Bulletpoints");
  SetText(6,"Conferences as a tree (see www.HansaManuals.com)");
  SetText(7,"Dropdown One Per Mail");
  SetText(8,"Dropdown One Per Conference");
  EndSet;
*/
  SetBegin(303);
  SetText(0,"One Transaction");
  SetText(1,"Reverse Transaction next Month");
  EndSet;

  SetBegin(304);
  SetText(1,"Client Machine Code");
  SetText(2,"Пользователь");
  SetText(3,"Access Group");
  EndSet;
  
  SetBegin(305);
  SetText(1,"Only server");
  SetText(2,"Client and Server");
  EndSet;

  SetBegin(309);// Zero is unknown, HF was set to 100....otherwise same as Set 310
  SetText(typFinancials,"Unspecified");
  SetText(100,"HansaFinancials (use HW instead)");
  SetText(typClassic,"Hansa Classic");
  SetText(typProfessional,"Hansa Professional");
  SetText(typHansaRaama,"HansaRaama");
  SetText(typFirstOffice,"FirstOffice");
  SetText(typFirstOfficePro,"FirstOffice Pro");
  SetText(typClassicLit,"Hansa Classic For Lithuania");
  SetText(typRiigiTarkvara,"HansaRiigitarkvara");
  SetText(typOffice2,"Office/2");
  SetText(typOffice2TB,"Office/2 for TimeBilling");
  SetText(typFirstOfficeSmall,"FirstOffice Small");
  SetText(typFirstOfficeCurrency,"FirstOffice Currency");
  SetText(typFirstContact,"HansaWorld CRM");
  SetText(typOffLine,"FirstOffice POS Offline");
  SetText(typFirstOfficeASP,"FirstOffice ASP");
  SetText(typHansaWorld,"HansaWorld/HansaFinancials");
  SetText(typHansaWorldSMB,"HansaWorld SMB/Express");
  SetText(typBusinessPhone,"Business Communicator");
  SetText(typSmartApps,"SmartApps");
  SetText(typBooks,"Books");
  SetText(typBooksPro,"Books Professional");
  SetText(typBooksProAdv,"Books Professional Advanced");
  SetText(typBooksJobCost,"Books Job Costing");
  SetText(typBooksAcc,"Books Accounting");
  SetText(typBooksPOS,"Books POS");
  SetText(typCRMBasic,"HansaWorld CRM Basic");
  EndSet;
  
  SetBegin(310);// Zero is HF, but HF is added to HW
  SetText(typFinancials,"HansaFinancials (use HansaWorld instead)");
  SetText(typClassic,"Hansa Classic");
  SetText(typProfessional,"Hansa Professional");
  SetText(typHansaRaama,"HansaRaama");
  SetText(typFirstOffice,"FirstOffice");
  SetText(typFirstOfficePro,"FirstOffice Pro");
  SetText(typClassicLit,"Hansa Classic For Lithuania");
  SetText(typRiigiTarkvara,"HansaRiigitarkvara");
  SetText(typOffice2,"Office/2");
  SetText(typOffice2TB,"Office/2 for TimeBilling");
  SetText(typFirstOfficeSmall,"FirstOffice Small");
  SetText(typFirstOfficeCurrency,"FirstOffice Currency");
  SetText(typFirstContact,"HansaWorld CRM");
  SetText(typOffLine,"FirstOffice POS Offline");
  SetText(typFirstOfficeASP,"FirstOffice ASP");
  SetText(typHansaWorld,"HansaWorld/HansaFinancials");
  SetText(typHansaWorldSMB,"HansaWorld SMB/Express");
  SetText(typBusinessPhone,"Business Communicator");
  SetText(typSmartApps,"SmartApps");
  SetText(typBooks,"Books");
  SetText(typBooksPro,"Books Professional");
  SetText(typBooksProAdv,"Books Professional Advanced");
  SetText(typBooksJobCost,"Books Job Costing");
  SetText(typBooksAcc,"Books Accounting");
  SetText(typBooksPOS,"Books POS");
  SetText(typCRMBasic,"HansaWorld CRM Basic");
  EndSet;
  
  SetBegin(311);
  SetText(1,"Комментарий");
  SetText(2,"Клиент");
  SetText(3,"Supplier");
  SetText(4,"Item");
  SetText(5,"Trans. Date");
  SetText(6,"Объекты");
  SetText(7,"Inventory No.");
  SetText(8,"Inventory Name");
  EndSet;
  
  SetBegin(312);
  SetText(kCCPartnerNone,"-");
  SetText(kCCPartnerCommidea,"Commidea");
  SetText(kCCPartnerPayex,"Payex");
  SetText(kCCPartnerCyberSource,"CyberSource");
  SetText(kCCPartnerSamport,"Samport");
  SetText(kCCPartnerAuthorizeNetCHNotPresent,"Authorize.net (Card Holder not Present)");
  SetText(kCCPartnerAuthorizeNetCHPresent,"Authorize.net (Card Holder Present)");
  EndSet;
  
  SetBegin(313);
  SetText(kResTypeSalesOrder,"Sales Order");
  SetText(kResTypeInternalOrder,"Internal Order");
  EndSet;
  
  SetBegin(314);
  SetText(kResTypeUndefined,"Choose");
  SetText(kResTypeExistingPO,"Purchase Order");
  SetText(kResTypeMakeNewPO,"Back to Back Purchase Order");
//  SetText(3,"Production"); // Not done yet
  SetText(kResTypeStock,"Stock");
  SetText(kResTypeNextStockIn,"Next Purchase Order");
  EndSet;
  
  SetBegin(315);
  SetText(0,"During Period");
  SetText(1,"Before Period");
  EndSet;
  
  SetBegin(316);
  SetText(0,"Day");
  SetText(1,"Month");
  EndSet;
  
  SetBegin(317);
  SetText(0,"Fixed Price");
  SetText(1,"Running");
  EndSet;
  
  SetBegin(318);
  SetText(0,"Allow");
  SetText(1,"Do not allow");
  EndSet;
  
  SetBegin(319);
  SetText(0,"Item");
  SetText(1,"Modifiers"); // Item collection would have been my suggestion, but modifiers is a commonly used POS term...
  SetText(2,"Bar Menu");
  EndSet;
  
  SetBegin(320);
  SetText(kWindowStyleFirenze,"Firenze");
  SetText(kWindowStyleClassic,"Normal");
//  SetText(kWindowStyleSpartan,"Spartan");
//  SetText(kWindowStyleHelsinki,"Helsinki");
//  SetText(kWindowStyleAqua,"Aqua");
//  SetText(kWindowStyleBavaria,"Bavaria");
//  SetText(kWindowStyleMetal,"Metal");
  SetText(kWindowStyleMetalBlue,"Blue Metal");
  EndSet;
  
// Please don't translate the first string, as it is a special code (all StrSet works that way)
  StrSetBegin(321);
  StrSetText(";Personal","Personal");
  StrSetText(";Company","Company");
  EndStrSet;
  
  SetBegin(322);
  SetText(kExternalActTypeNone,"None");
  SetText(kExternalActTypePhoneCall,"Phone Call");
  EndSet;
  
  SetBegin(323);
  SetText(kPOSCommandsTypeQuantityAddOne,"Add 1");
  SetText(kPOSCommandsTypeCash,"Cash");
  SetText(kPOSCommandsTypeCreditCardSum,"Credit Card Sum");
  SetText(kPOSCommandsTypeDeleteRow,"Delete Row");
  SetText(kPOSCommandsTypeFinish,"Finish");
  SetText(kPOSCommandsTypeLoyaltyCard,"Loyalty Card No.");
  SetText(kPOSCommandsTypeLoyaltyPointsPayment,"Loyalty Card Payment");
  SetText(kPOSCommandsTypeLoyaltyPointsBonus,"Loyalty Bonus Points");
  SetText(kPOSCommandsTypeLoyaltyPointsPayment,"Loyalty Bonus Points Payment");
  SetText(kPOSCommandsTypeReprintReceipt,"Reprint Receipt");
  SetText(kPOSCommandsTypeQuantity,"Quantity");
  SetText(kPOSCommandsTypeQuantityAndItem,"Quantity Item");
  SetText(kPOSCommandsTypeRebate,"Rebate");
  SetText(kPOSCommandsTypeSalesAssistant,"Sales Assitant");
  SetText(kPOSCommandsTypeVolumetricBarCodeScan,"Scan Dynamic Barcode");
  SetText(kPOSCommandsTypeSerialNr,"Serial No.");
  SetText(kPOSCommandsTypeQuantitySubOne,"Sub 1");
  SetText(kPOSCommandsTypeVoidRow,"Void Row");
//  SetText(3,"Repeat");
//  SetText(5,"Credit Card No.");
//  SetText(7,"YYMM");
//  SetText(8,"CCV");
//  SetText(10,"ID");
//  SetText(11,"Credit");
//  SetText(12,"Control");
//  SetText(13,"Счёт");
//  SetText(14,"Attention");
//  SetText(15,"Yes");
//  SetText(16,"Удалить");
//  SetText(17,"Invalidate");
//  SetText(19,"Online");
//  SetText(20,"Logout");
//  SetText(21,"Finish and Open Summary Window");
  EndSet;
  
  SetBegin(324);
  SetText(kOpenTypeList,"List");
  SetText(kOpenTypeNew,"New Record");
  EndSet;

  SetBegin(325);
  SetText(0,"-");
  SetText(1,"Discarded");
  EndSet;
  
  SetBegin(326);
  SetText(kCourseEventPaticipantStatusPaying,"Paying");
  SetText(kCourseEventPaticipantStatusCancelled,"Cancelled");
  SetText(kCourseEventPaticipantStatusNotPaying,"Non Paying");
  SetText(kCourseEventPaticipantStatusStandby,"Stand by");
  SetText(kCourseEventPaticipantStatusPreliminary,"Preliminary Booking");
  EndSet;

  SetBegin(327);
  SetText(0,"-");
  SetText(1,"HANSA E-Invoices");  
  SetText(2,"ELMA E-Invoices, Finland");
  SetText(3,"STRALFORS E-Invoices, Sweden");
  SetText(4,"ITELLA E-Invoices, Estonia");
  SetText(5,"Danish E-Invoices");
  SetText(6,"SEB E-Payments, Estonia");
  SetText(7,"HANSA E-Payments, Estonia");
  SetText(8,"SAMPO E-Payments, Estonia");
  SetText(9,"Krediidinfo, Estonia");
  SetText(10,"Lursoft, Latvia");
  SetText(11,"Post Coder, UK");
  SetText(12,"SMS Vianett, Норвегия");
  SetText(13,"SMS ASPSMS, Швейцария");
  SetText(14,"Commidea Credit Card Payments, UK");
  SetText(15,"SEB Direct Debit, Estonia");
  SetText(16,"CyberSource Credit Card Payments, UK");
  SetText(17,"Electronic VAT Declarations, UK");
  SetText(18,"Lookup");
  SetText(19,"National Bank Currency Exchange Rates");
  SetText(20,"Samport Credit Card Payments, Sweden");
  SetText(21,"Business Check Credit History and Address Lookup, Sweden");
//  SetText(20,"Payex Credit Card Payments, Norway");
  SetText(22,"AFIP, Argentina");
  SetText(23,"EDB E-Invoices, Sweden");
  SetText(24,"Logiq E-Invoices, Norway");
  EndSet;
  
  SetBegin(328);
  SetText(0,"-");
  SetText(1,"Package");
  SetText(2,"Extra Clicks");
  SetText(3,"First Page");
  SetText(4,"Extra Pages");
  SetText(5,"Default Priority Postage");
  SetText(6,"Heavy Priority Postage");
  SetText(7,"Default Economy Postage");
  SetText(8,"Heavy Economy Postage");
  SetText(9,"Default Economy Postage EU");
  SetText(10,"Heavy Economy Postage EU");
  SetText(11,"Default Economy Postage not EU");
  SetText(12,"Heavy Economy Postage not EU");
  SetText(13,"First Page Storage");
  SetText(14,"Extra Pages Storage");
  SetText(15,"Storage and Console");
  EndSet;
  
  SetBegin(329);
  SetText(kWantedStatusStop,"Stop");
  SetText(kWantedStatusRun,"Запуск");
  SetText(kWantedStatusOnDemand,"On Demand");
  SetText(kWantedStatusMaintenence,"Automatic Maintenence");
  SetText(kWantedStatusManual,"Manual");
  EndSet;
  
  SetBegin(330);
  SetText(typFinancials,"Hansa Financials");
  SetText(typClassic,"Classic"); /* or is it Hansa Classic? */
  SetText(typProfessional,"Professional");
  SetText(typHansaRaama,"HansaRaama");
  SetText(typFirstOffice,"FirstOffice");
  SetText(typClassicLit,"Classic Lit"); /* Lithuanian? */
  SetText(typRiigiTarkvara,"Riigi Tarkvara");
  SetText(typOffice2,"Office/2");
  SetText(typOffice2TB,"Office/2 TB");
  SetText(typFirstOfficeSmall,"FirstOffice Small");
  SetText(typFirstOfficeCurrency,"FirstOffice Currency");  /* Not valid as a type */
  SetText(typFirstContact,"HansaWorld CRM");
  SetText(typOffLine,"Off Line"); /* ??? */
  SetText(typFirstOfficeASP,"FirstOffice ASP");
  SetText(typHansaWorld,"HansaWorld Enterprise");
  SetText(typHansaWorldSMB,"HansaWorld Express");
  SetText(typFirstOfficePro,"FirstOffice Professional");
  SetText(typBusinessPhone,"Business Communicator");
  SetText(typBusinessOrganizer,"Business Organiser");
  SetText(typBooks,"Books"); //?? CHECKBOOKSHAL
  SetText(typBooksPro,"Books Professional"); //?? CHECKBOOKSHAL
  SetText(typBooksProAdv,"Books Professional Advanced"); //?? CHECKBOOKSHAL
  SetText(typBooksJobCost,"Books Job Costing"); //?? CHECKBOOKSHAL
  SetText(typBooksAcc,"Books Accounting"); //?? CHECKBOOKSHAL
  SetText(typBooksPOS,"Books POS"); //?? CHECKBOOKSHAL
  SetText(typCRMBasic,"HansaWorld CRM Basic");
  EndSet;
  
  SetBegin(333);
  SetText(0,"UNKNOWN");
  SetText(1,"ONLINE");
  SetText(2,"UNSTABLE");  
  SetText(3,"BUSY");  
  SetText(4,"OFFLINE");  
  SetText(5,"DISABLED");  
  EndSet;
  
  // SetBegin(102); Is moved to Seteng2.hal
    
  SetBegin(334);
  //SetText(M4NoType,"");
  SetText(M4InvalidType,"-");
  SetText(M4Str,"string");
  SetText(M4Val,"decimal value");
  SetText(M4Chk,"checkbox");
  //SetText(M4Rad,"");
  SetText(M4Long,"long integer");
  SetText(M4Date,"Дата");
  SetText(M4DateTime,"date time");
  //SetText(M4DVal,"");
  //SetText(M4CVal,"");
  SetText(M4Int,"integer");
  //SetText(M4xxx1,"");
  //SetText(M4Label,"");
  //SetText(M4Bool,"");
  //SetText(M4Prcnt,"");
  //SetText(M4TVal,"");
  //SetText(M4MVal,"");
  SetText(M4UStr,"uppercase string");
  SetText(M4Mark,"check mark");
  //SetText(M4NLong,"");
  //SetText(M41Val,"");
  //SetText(M40Val,"");
  //SetText(M4Period,"");
  //SetText(M4UVal,"");
  //SetText(M4longDateTime,"");
  SetText(M4Star,"password input");
  //SetText(M4longDate,"");
  SetText(M4Code,"Код");
  SetText(M4AppCode,"appcode");
  //SetText(M423Val,"");
  SetText(M4Set,"integer set");
  SetText(M4Matrix,"matrix");
  //SetText(M4StatMat,"");
  //SetText(M4XStr,"");
  //SetText(M4NegVal,"");
  //SetText(M4Rate,"");
  //SetText(M45Val,"");
  //SetText(M4UPrcnt,"");
  //SetText(M4Dummy,"");
  SetText(M4StrSet,"string set");
  SetText(M4TextField,"text field");
  SetText(M4Blob,"blob");
  //SetText(M4CStr,"");
  SetText(M4Time,"Время");
  //SetText(M4STime,"");
  //SetText(M4Pict,"");
  //SetText(M4RLink,"");
  //SetText(M4PrcStr,"");
  //SetText(M4String,"");
  //SetText(M4Qty,"");
  SetText(M4CalPeriod,"calendar period");
  EndSet;
  
  SetBegin(335);
  SetText(ctBPadCE,"B-Pad");
  SetText(ctiPhone,"iPhone");
  SetText(ctNokiaE90,"Nokia E90"); // Could be called Series 60 Wide Screen
  SetText(ctNormal,"PC");
  SetText(ctSeries60,"Series 60");
  SetText(ctSeries60ss,"Series 60 Small Screen"); // 172 * 208
  SetText(ctSeries80,"Series 80");
  SetText(ctSeries90,"Series 90");
  SetText(ctWindowsCE,"Windows CE");
  SetText(ctWindowsCELandscape,"Windows CE Landscape");
  EndSet;
  
  SetBegin(336);
  SetText(k4PushButton,"push button");
  SetText(k4CheckBox,"Чекбокс");
  SetText(k4RadioButton,"Переключатель");
  //SetText(k4VScrollBar,"vertical scroll bar");
  //SetText(k4WideScrollBar,"wide scroll bar");
  SetText(k4HTab,"tile");
  //SetText(k4HTabSouth,"horizontal tab (south)");
  //SetText(k4PullDownMenu,"pull down menu");
  //SetText(k4LeftBrowse,"browse left button");
  //SetText(k4RightBrowse,"browse right button");
  //SetText(k4SegmentButton,"segment button");
  //SetText(k4ListHeader,"list header");
  SetText(k4ButtonFrame,"button frame");
  //SetText(k4DropDownMenu,"drop down menu");
  //SetText(k4NewTextArea,"text area");
  //SetText(k4ButtonIcon,"button icon");
  SetText(k4EditField,"edit field");
  //SetText(k4StatusField,"status field");
  // SetText(k4ResourceManager, -- not yet
  // SetText(k4ResourceRow, -- not yet
  //SetText(k4ResourceBox,"resource box");
  SetText(k4Matrix,"matrix");
  //SetText(k4TimeBoxes,"time boxes");
  //SetText(k4Calendar,"calendar");
  SetText(k4RecordList,"record list");
  SetText(k4RecordColumn,"record column");
  SetText(k4MatrixColumn,"matrix column");
  SetText(k4AttachDisplay,"attachments");
  SetText(k4Report,"report");
  SetText(k4VTab,"flip");
  SetText(k4SoundTool,"sound tool");
  SetText(k4Locationer,"location tool");
  SetText(k4StaticText,"static text");
  EndSet;
  
  SetBegin(337);
  SetText(AdjLeft,"Left");
//  SetText(AdjCenter,"Center");  // not implemented
  SetText(AdjRight,"Right");
  EndSet;
  
  SetBegin(338);
  SetText(CGother,"Другое");
  SetText(CGmlist,"mlist");
  SetText(CGslist,"slist");
  SetText(CGview,"Вид");
  SetText(CGRepW,"report");
  SetText(CGToolW,"tool");
  SetText(CGRcW,"rcw");
  SetText(CGEcW,"ecw");
  SetText(CGSbl,"sblock");
  SetText(CGHbl,"hblock");
  SetText(CGMnt,"mnt");
  SetText(CGDocW,"doc");
  SetText(CGEc2W,"ec2w");
  SetText(CGIcW,"icw");
  SetText(CGrlist,"rlist");
  EndSet;
  
  SetBegin(339);
  SetText(Normal,"normal");
  SetText(St_i,"edit on insert");
  SetText(ViewOnly,"view only");
  SetText(NewLOnly,"add lines only");
  EndSet;
  
  SetBegin(340);
  SetText(kFieldPosHeader,"header");
  SetText(kFieldPosRows,"row");
  EndSet;
  
  SetBegin(341);
  SetText(kProgramModeLocal,"Local");
  SetText(kProgramModeClient,"Client");
  SetText(kProgramModeLiveSync,"Live Sync");
  EndSet;
  
  SetBegin(342);
  SetText(0,"Default (binder)");
  SetText(701,"Binder");
  SetText(20409,"Billboard");
  SetText(993,"Birds");
  SetText(503,"Calendar");
  SetText(991,"Car");
  SetText(969,"Coins");
  SetText(997,"Cooking");
  SetText(718,"Document");
  SetText(29017,"Favourites");
  SetText(29021,"Folder");
  SetText(999,"Форум");
  SetText(967,"House");
  SetText(20501,"Mailbox");
  SetText(4017,"Measure");
  SetText(1003,"Navigate");
  SetText(20401,"Newspaper");
  SetText(805,"Key");
  SetText(20403,"Library");
  SetText(971,"Сотрудник");
  SetText(1037,"Phone");
  SetText(1005,"Restaurant");
  SetText(989,"Salad");
  SetText(985,"Поиск");
  SetText(29039,"Stocks");
  SetText(1041,"Todo");
  SetText(625,"Tools");
  SetText(29043,"Timesheets");
  EndSet;
  
  SetBegin(343);
  SetText(kAttachStorageSerNr,"Сер. №");
  SetText(kAttachStorageUUID,"UUID");
  SetText(kAttachStorageInline,"Inline");
  EndSet;
  
  StrSetBegin(344);
  StrSetText("ARB","Arabic");
  StrSetText("AUS","Australian");
  StrSetText("BRA","Brazilian");
  StrSetText("CZE","Czech");
  StrSetText("DAN","Danish");
  StrSetText("ENG","English (UK)");
  StrSetText("USA","English (US)");
  StrSetText("CAN","English (CAN)");
  StrSetText("KEE","English (Kenya)");
  StrSetText("NZE","English (New Zealand)");
  StrSetText("PHE","English (Philippines)");
  StrSetText("ESP","Spanish");
  StrSetText("USS","Spanish (US)");
  StrSetText("EST","Estonian");
  StrSetText("FIN","Finnish");
  StrSetText("FRA","French");
  StrSetText("FRC","French (Canada)");
  StrSetText("FAR","Farsi");
  StrSetText("GER","German");
  StrSetText("HEB","Hebrew");
  StrSetText("HUN","Hungarian");
  StrSetText("ITA","Italian");
  StrSetText("LAT","Latvian");
  StrSetText("LIT","Lithuanian");
  StrSetText("NOR","Norwegian");
  StrSetText("POL","Polish");
  StrSetText("POR","Portuguese");
  StrSetText("ROM","Romanian");
  StrSetText("RUS","Russian");
  StrSetText("SER","Serbian");
  StrSetText("SWE","Swedish");
  StrSetText("SLO","Slovenian");
  StrSetText("SVK","Slovakian");
  StrSetText("UKR","Ukranian");
  StrSetText("VIE","Vietnamese");
  StrSetText("","Другое");
  EndStrSet;
  
  SetBegin(345);
  SetText(kEnablerFunctionDefault,"Package");
  SetText(kEnablerFunctionRegister,"SmartApp Register");
  SetText(kEnablerFunctionApp,"SmartApp Application");
  SetText(kEnablerFunctionAccess,"Access Type");
  SetText(kEnablerFunctionHALFile,"Attached File");
  EndSet;
  
  SetBegin(346);
  SetText(kIndexTypeNone,"None");
  SetText(kIndexTypeNormal,"Indexed");
  SetText(kIndexTypeCalendar,"In Calendar");
  EndSet;
  
  SetBegin(347);
  SetText(0,"-");
  SetText(1,"Box 1");
  SetText(2,"Box 2");
  SetText(3,"Box 3");
  SetText(4,"Box 4");
  SetText(5,"Box 5");
  SetText(6,"Box 6");
  SetText(7,"Box 7");
  SetText(8,"Box 8");
  SetText(9,"Box 9");
  EndSet;
  
  SetBegin(348);
  SetText(kWindowTypeNone,"-");
  SetText(kWindowTypeRecordList,"Record List");
  SetText(kWindowTypeInspect,"Inspect");
  SetText(kWindowTypePaste,"Paste");
  SetText(kWindowTypeOther,"Другое");
  EndSet;
  
  SetBegin(349);
  SetText(kRegOpInsert,"insert"); // can also be translated as "Создать" or "add"
  SetText(kRegOpUpdate,"update");
  SetText(kRegOpDrop,"drop"); // can also be "Удалить" or "Удалить"
  EndSet;
  
  SetBegin(350);
  SetText(0,"Own Account");
  SetText(1,"Will Pay For");
  EndSet;

  SetBegin(351);
  SetText(0,"All Activities");
  SetText(1,"Private Activities");
  SetText(2,"Public Activities");
  EndSet;
  
  SetBegin(352);
  SetText(1,"Full");
  SetText(5,"None");
  EndSet;
  
  SetBegin(353);
  SetText(kStructTypePage,"Page");
  SetText(kStructTypeFolder,"Folder");
  SetText(kStructTypeHALFunction,"Hal function");
  SetText(kStructTypeRedirect,"Redirect");
  SetText(kStructTypeRedirectToCountry,"Redirect to Country Sub Page");
  SetText(kStructTypeRedirectToPlatform,"Redirect to Platform specific sub page");
  SetText(kStructTypeContentHandlerApp,"Content Handler App");
  SetText(kStructTypeForumApp,"Forum App");
  SetText(kStructTypeItemBrowse,"Item Browse");
  SetText(kStructTypeShoppingBasket,"Shopping Basket");
  SetText(kStructTypeItemOrder,"Item Order");
  SetText(kStructTypeUniversityApp,"University App");
  SetText(kStructTypeProductImageApp,"Product Image App");
  SetText(kStructTypeWebshopApp,"Webshop App");
  SetText(kStructTypeASPApp,"ASP App");
  SetText(kStructTypeDownloadRegistration,"Download Registration Page");
  SetText(kStructTypeOnlineReservationApp,"Online Reservation App");
  SetText(kStructTypeMyAccountApp,"My Account App");
  EndSet;

  SetBegin(354);
  SetText(0,"Before");
  SetText(1,"Content");
  SetText(2,"After");
  SetText(3,"Заголовок HTML");
  EndSet;

  SetBegin(355);
  SetText(kElementTypePlainHTML,"Plain HTML");
  SetText(kElementTypeHALFunction,"HAL function");
  SetText(kElementTypeWebMenu,"Веб-меню");
  SetText(kElementTypeLoginControl,"Контроль входа в систему");
//  SetText(kElementTypeShoppingBasket,"Shopping basket");
//  SetText(kElementTypeRegisterForm,"Register form");
//  SetText(kElementTypeEditCustomerDetailsForm,"Edit customer details form");
//  SetText(kElementTypeItemBrowse,"Item browse");
//  SetText(kElementTypeShoppingBasketStatus,"Shopping basket status");
  SetText(kElementTypeLanguageBox,"Language switching combobox");
  SetText(kElementTypeLink,"Link");
  SetText(kElementTypeImage,"Фото");
  SetText(kElementTypeLoginState,"Show Login State");
  SetText(kElementTypeCountryName,"Country name");
//  SetText(kElementTypeShoppingBasketRecommended,"Shopping basket - recommended items");
  SetText(kElementTypeContentList,"Content List");
  SetText(kElementTypeContactUsForm,"Contact Us Form");
  SetText(kElementTypeRegisterNewCustomerForm,"Register New Customer Form");
  SetText(kElementTypeForgotPasswordForm,"Forgot Password Form");
  SetText(kElementTypeWebShopAddToBasketLink,"WebShop - Add to Basket link");
  SetText(kElementTypeWebShopCheckoutLink,"WebShop - Checkout link");
  //SetText(kElementTypeWebShopShoppingBasketStatus,"WebShop - Shopping basket status");
  SetText(kElementTypeUniversityWebTestList,"University - Show Web Test List");
  SetText(kElementTypeWebShopProductCategoryTree,"WebShop - Product Category Tree");
  SetText(kElementTypeLiveChat,"Live Chat");
  SetText(kElementTypeLoggedInUserName,"Logged In Customer/Person Name");
  SetText(kElementTypeCreateMailForm,"Create Mail Form");
  SetText(kElementTypeWebClientWindow,"Окно веб-клиента");
  SetText(kElementTypeWebShopShowField,"Интернет-магазин - показать поле");
  //SetText(kElementTypeWebShopPaymentMethodButtons,"WebShop - Payment Method Buttons");
  EndSet;
    
  SetBegin(356);
  SetText(-1,"Unknown");
  SetText(0,"Element");
  SetText(1,"Content");
  SetText(2,"Product");
  SetText(3,"Component");
  SetText(4,"Page");
  EndSet;

  SetBegin(357);
  SetText(0,"Before");
  SetText(1,"Content");
  SetText(2,"After");
  EndSet;

  SetBegin(358);
  SetText(kVATTypeNormal,"Normal");
  SetText(kVATTypeNormalWithInternalTaxes,"Normal with Internal Taxes");
  SetText(kVATTypeNormalWithVATPerceptions,"Normal with VAT Perceptions");
  SetText(kVATTypeReversed,"Reversed");
  SetText(kVATTypeGrossIncomePerception,"Gross Income Perception");
  SetText(kVATTypeNoVAT,"No VAT");
  SetText(kVATTypeExempt,"Exempt VAT");
  SetText(kVATTypeICETax,"ICE Tax");
  SetText(kVATTypeInputTax,"Input Tax");
  SetText(kVATTypeImport,"Import VAT");
  SetText(kVATTypeVATPerceptions,"VAT Perceptions");
  SetText(kVATTypeIncomePerceptions,"Income Perceptions");
  SetText(kVATTypeTaxedImport,"Taxed Import");
  SetText(kVATTypeRealEstate,"Real Estate VAT");
  SetText(kVATTypeAssets,"Assets VAT");
  SetText(kVATTypeRealEstateExempt,"Real Estate Exempt VAT");
  SetText(kVATTypeAssetsExempt,"Assets Exempt VAT");
  SetText(kVATTypeNonDeductable,"Non-deductable VAT");
  SetText(kVATTypeExportDeductable,"Export with Deductable VAT");
  SetText(kVATTypeExemptwithInput,"Exempt VAT without input VAT");
  SetText(kVATTypeSelfTaxingInsideEU,"Self-taxing inside EU");
  SetText(kVATTypeSelfTaxingInsideImport,"Self-taxing Import");
  SetText(kVATTypeSelfTaxingwithLocalVATID,"Self-taxing with local VAT ID");
  SetText(kVATTypeExemptInsideEU,"Exempt VAT inside EU");
  SetText(kVATTypeTransitSalesInsideEU,"Transit Sales within EU");
  SetText(kVATTypeSaleswithInstallation,"Sales with Installation");
  SetText(kVATTypeExempt3WayDeliveryInsideEU,"Exempt VAT 3-way delivery inside EU");
  SetText(kVATTypeSelTaxingServicesEU,"Self-taxing Services EU");
  SetText(kVATTypeLumpSumCompensation,"Lump Sum Compensation");
  SetText(kVATTypeWithholding,"Withholding");
  SetText(kVATTypeISRWithholding,"ISR Withholding");
  EndSet;

  SetBegin(359);
  SetText(kStockTypePurchased,"Purchased");
  SetText(kStockTypeConsignment,"Consignment");
  EndSet;

  SetBegin(360);
  SetText(0,"-");
  SetText(1,"Tax Registered");//Responsable Inscripto
//  SetText(2,"Tax Not Registered");//Responsable no Inscripto
  SetText(3,"Exempt");//Exento
  SetText(4,"Not Responsible");//No Responsable
  SetText(5,"End Consumer");//Responsable final
//  SetText(6,"Responsible not Registered, Fixed Assets sales");//Responsable no Inscripto enta de bienes de uso
  SetText(7,"Responsible Professional");//Responsable monotributo
  SetText(8,"Responsible Social Professional");    //Monotributista social
  SetText(9,"Eventual Small Contributor");    //Pequeno contribuyene eventual
  SetText(10,"Eventual Small Social Contributor");    //Pequeno contribuyene eventual social
  SetText(11,"No Category");//No categorizado
  EndSet;

  SetBegin(361);
  SetText(0,"-");
  SetText(1,"Invalidated");
  SetText(2,"Lost");
  SetText(3,"Не используется");
  EndSet;

  SetBegin(362);
  SetText(0,"-");
  SetText(kQCProdVc,"Production");
  SetText(kQCProdOperationVc,"Production Operation");
  SetText(kQCSDVc,"Stock Depreciation");
  SetText(kQCPUVc,"Goods Receipts");
  SetText(kQCRetVc,"Return Goods");
  SetText(kQCRetPUVc,"Return Goods to Supplier");
  EndSet;

  SetBegin(363);
  SetText(0,"-");
  SetText(kQCTestWeight,"Weight");
  SetText(kQCTestNetWeight,"Net Weight");
  SetText(kQCTestVolume,"Volume");
  SetText(kQCTestWidth,"Width");
  SetText(kQCTestHeight,"Height");
  SetText(kQCTestDepth,"Depth");
  SetText(kQCTestDensity,"Density");
  SetText(kQCTestAlcPrc,"Alcohol %");
  SetText(kQCTestUserVal1,"User Defined Value 1");
  SetText(kQCTestUserVal2,"User Defined Value 2");
  SetText(kQCTestUserVal3,"User Defined Value 3");
  EndSet;
  
  SetBegin(364);
  SetText(kAutoNumberingNone,"None");
  SetText(kAutoNumberingNormal,"Normal");
  EndSet;
  
  SetBegin(365);
  SetText(0,"From Operations Menu only");
  SetText(1,"From Operations Menu and When OKing Records");
  EndSet;
  
  SetBegin(366);
  SetText(kMSSQL,"Microsoft SQL Server");
  SetText(kOracle,"Oracle");
  //SetText(kIngres,"Ingres");
  //SetText(kDB2,"DB/2");
  EndSet;
    
  SetBegin(367);
  SetText(kStatusConfigInError,"Configuration Error");
  SetText(kStatusStopped,"Stopped");
  SetText(kStatusRunning,"Running");
  SetText(kStatusStopping,"Stopping");
  SetText(kStatusStarting,"Starting");
  EndSet;
  
  SetBegin(368);
  SetText(0,"Increasing Instalment - Decreasing Interest");
  SetText(1,"Same Instalment - Decreasing Interest");
  SetText(2,"Same Instalment - Same Interest");
//  SetText(2,"Using Specific Instalment Record");
  EndSet;

  SetBegin(369); 
  SetText(0,"Unknown");
  SetText(1,"Webshop");
  SetText(2,"University");
  SetText(3,"Online Reservation");
  EndSet;
  
  SetBegin(370);
  SetText(0,"None required");
  SetText(1,"Exactly one");
  SetText(2,"At least one");
  SetText(3,"At most one");
  SetText(4,"All or none");
  EndSet;

  SetBegin(371);
  SetText(0,"Included");
  SetText(1,"Mandatory");
  SetText(2,"Optional");
  SetText(3,"Optional (Recommended)");
  EndSet;

  SetBegin(372);
  SetText(0,"-");
  SetText(1,"Choose least expensive");
  SetText(2,"Choose most expensive");
  EndSet;

  SetBegin(373);
  SetText(0,"One Time");
  SetText(1,"Monthly Fee");
  SetText(2,"Instalment");
  SetText(3,"Interest");
  EndSet;
  
  SetBegin(374);
  SetText(0,"One Time");
  SetText(1,"Monthly Fee");
  EndSet;
  
  SetBegin(375);
  SetText(0,"Full Access");
  SetText(1,"No Access");
  EndSet;
  
  SetBegin(376);
  SetText(0,"halcust");
  SetText(1,"halpatch");
  EndSet;
  
  SetBegin(377);
  SetText(0,"Only in Server");
  SetText(1,"Both in Server and in Client");
  EndSet;
  
  SetBegin(379);
  SetText(0,"Only Page Title");
  SetText(1,"Site and Page Title");
  SetText(2,"Only Site Title");
  SetText(3,"Page and Site Title");
  EndSet;

  SetBegin(380);
  SetText(0,"Product");
//  SetText(1,"Group");
  EndSet;
    
  SetBegin(381);
  SetText(kReportParallelityNone,"Not Parallel");
  SetText(kReportParallelitySingleThread,"Single thread Parallel");
  SetText(kReportParallelityMultiThread,"Multi threaded");
  EndSet;
    
  SetBegin(382);
  SetText(kDefaultCodepage,"По умолчанию");
  SetText(kISO88591,"ISO 8859-1 (Western Europe)");
  SetText(kISO88594,"ISO 8859-4 (Baltic)");
  SetText(kISO88595,"ISO 8859-5 (Cyrillic)");
  SetText(kISO885915,"ISO 8859-15 (western european with euro sign)");
  SetText(kcp1250,"Windows codepage 1250 (Central Europe)");
  SetText(kcp1251,"Windows codepage 1251 (Cyrillic)");
  SetText(kcp1252,"Windows codepage 1252 (Western Europe)");
  SetText(kcp1257,"Windows codepage 1257 (Baltic)");
  SetText(kKOI8R,"KOI8-R (Cyrillic)");
  EndSet;
  
  SetBegin(383);
  SetText(kCodeLevelSystem,"System");
  SetText(kCodeLevelCountry,"Country Specific");
  SetText(kCodeLevelIndustry,"Industry Specific");
  SetText(kCodeLevelSite,"Site Customization"); // Site means approx. "One Customer Site", could possibly be translated "Customer Specific"
  //SetText(kCodeLevelMax,"");
  EndSet;
  
  SetBegin(384);
  SetText(kUserDefRepColumnTypeCode,"Код");
  SetText(kUserDefRepColumnTypeComment,"Комментарий");
  SetText(kUserDefRepColumnTypeActuals,"Actuals");
  SetText(kUserDefRepColumnTypeColumnsSumup,"Columns Sumup");
  SetText(kUserDefRepColumnTypeBudget,"Budget");
  SetText(kUserDefRepColumnTypeRevBudget,"Revised Budget");
  SetText(kUserDefRepColumnTypePOCommitments,"Purchase Order Commitments");
  SetText(kUserDefRepColumnTypePUAccruals,"Goods Receipt Accruals");
  EndSet;
  
  SetBegin(385);
  SetText(0,"Selected Period");
  SetText(1,"Month");
  SetText(2,"Year");
  SetText(3,"Fiscal Year to Date");
  SetText(4,"Fiscal Year");
  EndSet;

  SetBegin(386);
  SetText(0,"-");
  SetText(1,"Post Payment Withholdign Tax");
  EndSet;

  SetBegin(387);
  SetText(0,"Pay. Date");
  SetText(1,"Inv. Date");
  SetText(2,"Rsrv. Date");
  EndSet;

  SetBegin(388);
  SetText(0,"Discount");
  SetText(1,"Markup %");
  SetText(2,"Markup");
  EndSet;

  SetBegin(389);
  SetText(0,"Pay. Mode");
  SetText(1,"Modifier");
  EndSet;

  SetBegin(390);
  SetText(kInvoiceRowTypeCashPayment,"Cash");
  SetText(kInvoiceRowTypeCreditCardPayment,"Credit Card");
//  SetText(kInvoiceRowTypeCreditCardPayment,"Debit Card");
  SetText(kInvoiceRowTypeGiftVoucherPayment,"Gift Voucher");
  SetText(kInvoiceRowTypeChequePayment,"Cheque");
  SetText(kInvoiceRowTypeLoyaltyPointsPayment,"Loyalty Points");
  EndSet;

  SetBegin(391);
  SetText(0,"Not Confirmed");
  SetText(1,"Confirmed");
  EndSet;

  SetBegin(392);
  SetText(0,"Specify Day");
  SetText(1,"Monday");
  SetText(2,"Tuesday");
  SetText(3,"Wednesday");
  SetText(4,"Thursday");
  SetText(5,"Friday");
  SetText(6,"Saturday");
  SetText(7,"Sunday");
  EndSet;
  
  SetBegin(393);
  SetText(0,"По умолчанию");
  SetText(1,"No Limited Access Control");
  EndSet;

  SetBegin(394);
  SetText(kUnknownOS,"Unknown");
  SetText(kAnyOS,"Any OS");
  SetText(kOSMacOSX,"Mac OS X");
  SetText(kOSWindows98,"Windows 98");
  SetText(kOSWindowsXP,"Windows 2K/XP/Vista");
  SetText(kOSMacOS9,"Mac OS 9");
  SetText(kOSLinux,"Linux");
  SetText(kOSWindowsCE,"Windows CE");
  SetText(kOSSymbian,"Symbian");
  SetText(kOSAndroid,"Android");
  EndSet;

  StrSetBegin(395);
  StrSetText("","All Products");
  StrSetText("0","Hansa Financials");
  StrSetText("1","Classic"); /* or is it Hansa Classic? */
  StrSetText("2","Professional");
  StrSetText("3","HansaRaama");
  StrSetText("4","FirstOffice");
  StrSetText("5","Classic Lit"); /* Lithuanian? */
  StrSetText("6","Riigi Tarkvara");
  StrSetText("7","Office/2");
  StrSetText("8","Office/2 TB");
  StrSetText("9","FirstOffice Small");
  StrSetText("10","FirstOffice Currency");  /* Not valid as a type */
  StrSetText("11","First Contact");
  StrSetText("12","Off Line"); /* ??? */
  StrSetText("13","FirstOffice ASP");
  StrSetText("14","HansaWorld Enterprise");
  StrSetText("15","HansaWorld Express");
  StrSetText("16","FirstOffice Professional");
  StrSetText("17","Business Communicator");
  StrSetText("18","Business Organiser");
  StrSetText("19","SmartApps");
  EndStrSet;
  
  SetBegin(396);
  SetText(0,"Default (Cost)");
  SetText(1,"Original Sales Price");
  SetText(2,"Actual Sales Price");
  EndSet;

  StrSetBegin(397);
  StrSetText("Все","Все"); 
  StrSetText("IVVc","Invoices"); 
  StrSetText("QTVc","Quotations"); 
  StrSetText("ORVc","Orders"); 
  StrSetText("IVCashVc","Счета POS"); 
  EndStrSet;

  SetBegin(398);
  SetText(kRoundingStepNone,"no step");
  SetText(kRoundingStep5,"5");
  SetText(kRoundingStep25,"2.5");
  EndSet;
  
  SetBegin(399);
  SetText(kRoundingModeHalfUp,"half up");
  SetText(kRoundingModeHalfDown,"half down");
  SetText(kRoundingModeToEven,"to even");
  SetText(kRoundingModeToOdd,"to odd");
  SetText(kRoundingModeTruncate,"truncate");
  EndSet;
  
  SetBegin(400);
  SetText(kRoundingDirectionToFromPosInf,"up is always positive");
  SetText(kRoundingDirectionToFromZero,"up is away from zero");
  EndSet;
  
  SetBegin(401); 
  SetText(0,"Unknown");
  SetText(1,"Element");
  SetText(2,"Structure");
  SetText(3,"HansaManuals");
  SetText(4,"Click Globe");
  SetText(5,"Click Help");
  SetText(6,"Click PAY");
  EndSet;
  
  SetBegin(402); 
  SetText(0,"По умолчанию");
  SetText(1,"Official No per Page");
  EndSet;
  
  SetBegin(403);
  SetText(kKPITypeNone,"None");
  SetText(kKPITypeAR,"SL On Acc.");
  SetText(kKPITypeAP,"PL On Acc.");
  SetText(kKPITypeARDue,"SL Due");
  SetText(kKPITypeAPDue,"PL Due");
  SetText(kKPITypeORNr,"No. of Orders");
  SetText(kKPITypeORStock,"Order Stock");
  SetText(kKPITypeQTNr,"No. of Quotations");
  SetText(kKPITypeQTStock,"Quotation Stock");
  SetText(kKPITypeSalesInclVAT,"Sales Including VAT");
  SetText(kKPITypeSalesExclVAT,"Sales Excluding VAT");
  SetText(kKPITypeCost,"Cost of Sales");
  SetText(kKPITypeGPPrc,"GP %");
  EndSet;
  
  SetBegin(404);
  SetText(kNavLinkOpenInline,"Inline");
  SetText(kNavLinkOpenExternal,"External");
  EndSet;
  
  SetBegin(405);
  SetText(kKPIStatusInvalid,"Invalid");
  SetText(kKPIStatusValid,"Valid");
  SetText(kKPIStatusInvalidCalculating,"Recalculating");
  SetText(kKPIStatusValidCalculating,"Initial Calc.");
  EndSet;
  
  SetBegin(406);
  SetText(kWindowDataColumn,"Column");
  EndSet;
  
  SetBegin(407);
  SetText(kUniversityURLStateValid,"Valid");
  SetText(kUniversityURLStatePurge,"Purge");
  SetText(kUniversityURLStateRequest,"Request");
  EndSet;
  
  StrSetBegin(408);
  StrSetText("","-");
  StrSetText("LANG","Язык");
  StrSetText("MINVER","From version"); // DB version format
  StrSetText("MAXVER","To version");
  StrSetText("PROD","Product");
  StrSetText("INFOTYPE","Information type at URL");
  EndStrSet;
  
  SetBegin(409);
  SetText(kDeviceTypeiPhone,"iPhone");
  SetText(kDeviceTypePocketPC2003,"PocketPC 2003");
  SetText(kDeviceTypeSymbianS60,"Symbian S60");
  SetText(kDeviceTypeWindowsMobile5,"Windows Mobile");
  SetText(kDeviceTypeMaemo,"Maemo");
  EndSet;

  SetBegin(410);
  SetText(0,"Downpayment");
  SetText(1,"Retention");
  EndSet;

  SetBegin(411);
  SetText(kLocalCCTerminalNone,"None");
  SetText(kLocalCCTerminalRahaxi,"Rahaxi");
  SetText(kLocalCCTerminalSteriaCOM,"SteriaPay (Serial/COM)");
  SetText(kLocalCCTerminalSteriaIP,"SteriaPay (IP)");
  SetText(kLocalCCTerminalYomaniBanksys,"Yomani banksys (Serial/COM)");
  EndSet;
  
  SetBegin(412);
  SetText(kCompanyTypeNonConsolidated,"Non Consolidated");
  SetText(kCompanyTypeConsolidated,"Consolidated");
  SetText(kCompanyTypeSingleUser,"Single User");
  EndSet;

  SetBegin(413);
  SetText(kSerialPortDeviceClassReceiptPrinter,"Receipt Printer");
  SetText(kSerialPortDeviceClassFiscalPrinter,"Fiscal Printer");
  SetText(kSerialPortDeviceClassFiscalControlUnit,"Fiscal Control Unit");
  SetText(kSerialPortDeviceClassDisplay,"Display");
  SetText(kSerialPortDeviceClassDrawer,"Drawer");
  SetText(kSerialPortDeviceClassStockControl,"Stock Control");
  SetText(kSerialPortDeviceClassFiscalControlUnit,"Fiscal Control Unit");
  SetText(kSerialPortDeviceClassCreditCardTerminal,"Credit Card Terminal");
  EndSet;

  SetBegin(414);
  SetText(kFlowControlDefault,"По умолчанию");
  SetText(kFlowControlDTRDSR,"DTR/DSR");
  SetText(kFlowControlRTSCTS,"RTS/CTS");
  SetText(kFlowControlNone,"None");
  EndSet;
  
  SetBegin(415);
  SetText(kSerialPortDeviceModelNone,"None");
  SetText(kSerialPortDeviceModelPrinterAxiohmA777,"Axiohm A777"); 
  SetText(kSerialPortDeviceModelPrinterEPSONTMU210,"Epson TMU210"); 
  SetText(kSerialPortDeviceModelPrinterSTARTSP210,"Star TSP100"); 
  SetText(kSerialPortDeviceModelPrinterEPSONTMT88II,"Epson TM-T88II"); 
  
  SetText(kSerialPortDeviceModelFiscPrinterPOSNET1,"Fiscal Printer POSNET 1 (Poland)"); 
  SetText(kSerialPortDeviceModelFiscPrinterPOSNET2,"Fiscal Printer POSNET 2 (Poland)"); 
  SetText(kSerialPortDeviceModelFiscPrinterOPTIMUS,"Fiscal Printer OPTIMUS (Poland)"); 
  SetText(kSerialPortDeviceModelFiscPrinterPOSNETThermal5V,"Fiscal Printer POSNET Thermal 5V (Poland)"); 
  SetText(kSerialPortDeviceModelFiscPrinterFP2000,"Fiscal Printer FP2000 (Zimbabwe)"); 
  SetText(kSerialPortDeviceModelFiscPrinterFP3000,"Fiscal Printer FP3000 (Slovakia)"); 
  SetText(kSerialPortDeviceModelFiscPrinterHASAR,"Fiscal Printer Hasar (Argentina)"); 
  SetText(kSerialPortDeviceModelFiscPrinterEPSON,"Fiscal Printer Epson (Argentina)"); 
  SetText(kSerialPortDeviceModelFiscPrinterFI550,"Fiscal Printer Fi-550 (Serbia)"); 
  SetText(kSerialPortDeviceModelFiscPrinterEPSONTMU220,"Fiscal Printer Epson TM-U220 (Argentina)");
  SetText(kSerialPortDeviceModelFiscPrinterTSLFP05,"Fiscal Printer TSL FP05 (Kenya)");
  SetText(kSerialPortDeviceModelFiscPrinterFB05,"Fiscal Printer Empirija FB05 (Lithuania)");
  SetText(kSerialPortDeviceModelFiscPrinterST05,"Fiscal Printer Citizen ST-05 (Lithuania)");
  SetText(kSerialPortDeviceModelFiscPrinterFPRINT02K,"Fiscal Printer FPrint 02K");
  SetText(kSerialPortDeviceModelDIGITAG,"Digitag"); 
  SetText(kSerialPortDeviceModelFiscPrinterCLEANCASHTypeA,"Clean Cash Type A(Sweden)"); 
  SetText(kSerialPortDeviceModelDisplayGeneric,"Generic Pole Display");
//  SetText(kSerialPortDeviceModelDisplayPosiFlex,"Posiflex Pole Display");
  SetText(kSerialPortDeviceModelCreditCardTerminalYomaniBanksys,"Credit Card Terminal Yomani Banksys");
  EndSet;

  SetBegin(416);
  SetText(0,"Requested");
  SetText(1,"Planned");
  SetText(2,"Confirmed");
  SetText(3,"?");
  SetText(4,"Cancelled");
  SetText(5,"No Show");
  SetText(6,"Late Cancellation");
  SetText(7,"Not Interested");
  SetText(8,"Not Allowed");
  SetText(9,"Waiting List");
  EndSet;

  SetBegin(417);
  SetText(kShopBaskOwnerCustomer,"Клиент");
  SetText(kShopBaskOwnerReservation,"Reservation");
  SetText(kShopBaskOwnerRsrtEvent,"Курорт - мероприятие");
  EndSet;

  SetBegin(418);
  SetText(kShopBaskDestinationOrder,"Order");
  SetText(kShopBaskDestinationInvoice,"Счёт-фактура");
  SetText(kShopBaskDestinationQuote,"Quotation");
  EndSet;
  
  SetBegin(419);
  SetText(kResortEventInvoiceable,"Invoicable");
  SetText(kResortEventOnReservation,"Reservation");
  SetText(kResortEventGoodwill,"Goodwill");
  EndSet;
  
  StrSetBegin(420);
  StrSetText("","Unknown");
  StrSetText("EA", "Arved.ee");
  StrSetText("EAm","Электронная почта");
  StrSetText("hEA","Swedbanki Internetipank");
  StrSetText("iEAb","Itella B2B Basic");
  StrSetText("kEA","i-pank");
  StrSetText("mEA","Nordea internetipank");
  StrSetText("oEA","S@mpo");
  StrSetText("yEA","U-Net / Business");
  EndStrSet;  
  
  SetBegin(421);
  SetText(kJobTypeUploadBackup,"Upload Backup");
  SetText(kJobTypeDownloadBackup,"Download Backup");
  EndSet;
  
  SetBegin(422);
  SetText(kJobStatusRunning,"Running"); // could be translated "in progress"
  SetText(kJobStatusFinished,"Finished");
  EndSet;

  StrSetBegin(423);
  StrSetText(British,"British");
  StrSetText(Polish,"Polish");
  EndStrSet;

  SetBegin(424);
  SetText(kPeriodLengthMonth,"Month");
  SetText(kPeriodLengthWeek,"Неделя");
  SetText(kPeriodLengthQuarter,"Quarter");
  EndSet;

  SetBegin(425);
  SetText(kPeriodTypeRolling,"Rolling");
  SetText(kPeriodTypeLastFull,"Last Full");
  SetText(kPeriodTypeLastUntilSamePoint,"Last until same point");
  EndSet;

  SetBegin(426);
  SetText(0,"");
  SetText(1,"Transfered");
  EndSet;

  SetBegin(427);
  SetText(kBiometricSignatureNone,"None");
  SetText(kBiometricSignatureFingerprint,"Fingerprint");
//  SetText(kBiometricSignatureVoiceprint,"Voiceprint");
//  SetText(kBiometricSignatureEyeimage,"Eye Image");
  EndSet;

  SetBegin(428);
  SetText(kBiometricDeviceNone,"None");
  SetText(kBiometricDeviceDigitalPersona,"DigitalPersona");
  EndSet;

  SetBegin(429);
  SetText(kRestAccRowStatusNormal,"Normal");
  SetText(kRestAccRowStatusOrdered,"Ordered");
  SetText(kRestAccRowStatusFireOrder,"Fire Order");
  SetText(kRestAccRowStatusFireCancelled,"Cancelled");
  EndSet;
  
/* 31000 32000 reserved for webshops and other customizations */
  
  StrSetBegin(430);
  StrSetText(103,"103 - Very old Hansa version!!");
  StrSetText(104,"104 - Very old Hansa version!!");
  StrSetText(105,"105 - Very old Hansa version!!");
  StrSetText(106,"106 - Very old Hansa version!!");
  StrSetText(107,"107 - Very old Hansa version!!");
  StrSetText(108,"108 - Very old Hansa version!!");
  StrSetText(109,"109 - Very old Hansa version!!");
  StrSetText(110,"110 - Very old Hansa version!!");
  StrSetText(111,"111 - HansaFinancials 3.6");
  StrSetText(112,"112 - Office/2 3.6");
  StrSetText(113,"113 - FirstOffice 3.6");
  StrSetText(115,"115 - HansaFinancials 3.7");
  StrSetText(116,"116 - Office/2 3.7");
  StrSetText(117,"117 - FirstOffice 3.7");
  StrSetText(118,"118 - FirstOffice Mini 3.7");
  StrSetText(119,"119 - FirstOffice Currency 3.7");
  StrSetText(120,"120 - HansaFinancials 3.8");
  StrSetText(121,"121 - Office/2 3.8");
  StrSetText(122,"122 - FirstOffice 3.8");
  StrSetText(123,"123 - FirstOffice Mini 3.8");
  StrSetText(124,"124 - FirstOffice Currency 3.8");
  StrSetText(125,"125 - FirstContact 3.8");
  StrSetText(130,"130 - HansaFinancials 3.9");
  StrSetText(131,"131 - Office/2 3.9");
  StrSetText(132,"132 - FirstOffice 3.9");
  StrSetText(133,"133 - FirstOffice Mini 3.9");
  StrSetText(134,"134 - FirstOffice Currency 3.9");
  StrSetText(135,"135 - FirstContact 3.9");
  StrSetText(140,"140 - HansaFinancials 4.0");
  StrSetText(141,"141 - Office/2 4.0");
  StrSetText(142,"142 - FirstOffice 4.0");
  StrSetText(143,"143 - FirstOffice Mini 4.0");
  StrSetText(144,"144 - FirstOffice Currency 4.0");
  StrSetText(145,"145 - FirstContact 4.0");
  StrSetText(147,"147 - HansaWorld 4.0");
  StrSetText(150,"150 - HansaFinancials 4.1 (first release)");
  StrSetText(151,"151 - Office/2 4.1 (first release)");
  StrSetText(152,"152 - FirstOffice 4.1 (first release)");
  StrSetText(153,"153 - FirstOffice Mini 4.1 (first release)");
  StrSetText(154,"154 - FirstOffice Currency 4.1 (first release)");
  StrSetText(155,"155 - FirstContact 4.1 (first release)");
  StrSetText(156,"156 - FirstOffice ASP 4.1 (first release)");
  StrSetText(157,"157 - HansaWorld SMB 4.1 (first release)");
  StrSetText(159,"159 - HansaWorld 4.1 (first release)");
  StrSetText(160,"160 - HansaFinancials 4.1");
  StrSetText(161,"161 - Office/2 4.1");
  StrSetText(162,"162 - FirstOffice 4.1");
  StrSetText(163,"163 - FirstOffice Mini 4.1");
  StrSetText(164,"164 - FirstOffice Currency 4.1");
  StrSetText(165,"165 - FirstContact 4.1");
  StrSetText(166,"166 - FirstOffice ASP 4.1");
  StrSetText(167,"167 - HansaWorld SMB 4.1");
  StrSetText(169,"169 - HansaWorld 4.1");
  StrSetText(171,"171 - Office/2 4.2");
  StrSetText(172,"172 - FirstOffice 4.2");
  StrSetText(173,"173 - FirstOffice Mini 4.2");
  StrSetText(174,"174 - FirstOffice Currency 4.2");
  StrSetText(175,"175 - FirstContact 4.2");
  StrSetText(176,"176 - FirstOffice ASP 4.2");
  StrSetText(177,"177 - HansaWorld SMB 4.2");
  StrSetText(179,"179 - HansaWorld 4.2");
  StrSetText(181,"181 - Office/2 4.3");
  StrSetText(182,"182 - FirstOffice 4.3");
  StrSetText(183,"183 - FirstOffice Mini 4.3");
  StrSetText(184,"184 - FirstOffice Currency 4.3");
  StrSetText(185,"185 - FirstContact 4.3");
  StrSetText(186,"186 - FirstOffice ASP 4.3");
  StrSetText(187,"187 - HansaWorld SMB 4.3");
  StrSetText(188,"188 - FirstOffice Pro");
  StrSetText(189,"189 - HansaWorld 4.3");
  StrSetText(191,"191 - Office/2 5.0");
  StrSetText(192,"192 - FirstOffice 5.0");
  StrSetText(193,"193 - FirstOffice Mini 5.0");
  StrSetText(194,"194 - FirstOffice Currency 5.0");
  StrSetText(195,"195 - FirstContact 5.0");
  StrSetText(196,"196 - FirstOffice ASP 5.0");
  StrSetText(197,"197 - HansaWorld SMB 5.0");
  StrSetText(198,"198 - FirstOffice Pro");
  StrSetText(199,"199 - HansaWorld 5.0");
  StrSetText(201,"201 - Office/2 5.1");
  StrSetText(202,"202 - FirstOffice 5.1");
  StrSetText(203,"203 - FirstOffice Mini 5.1");
  StrSetText(204,"204 - FirstOffice Currency 5.1");
  StrSetText(205,"205 - FirstContact 5.1");
  StrSetText(206,"206 - FirstOffice ASP 5.1");
  StrSetText(207,"207 - HansaWorld SMB 5.1");
  StrSetText(208,"208 - FirstOffice Pro 5.1");
  StrSetText(209,"209 - HansaWorld 5.1");
  StrSetText(211,"211 - Office/2 5.2");
  StrSetText(212,"212 - FirstOffice 5.2");
  StrSetText(213,"213 - FirstOffice Mini 5.2");
  StrSetText(214,"214 - FirstOffice Currency 5.2");
  StrSetText(215,"215 - FirstContact 5.2");
  StrSetText(216,"216 - FirstOffice ASP 5.2");
  StrSetText(217,"217 - HansaWorld SMB 5.2");
  StrSetText(218,"218 - FirstOffice Pro 5.2");
  StrSetText(219,"219 - HansaWorld 5.2");
  StrSetText(221,"221 - Office/2 5.3");
  StrSetText(222,"222 - FirstOffice 5.3");
  StrSetText(223,"223 - FirstOffice Mini 5.3");
  StrSetText(224,"224 - FirstOffice Currency 5.3");
  StrSetText(225,"225 - FirstContact 5.3");
  StrSetText(226,"226 - FirstOffice ASP 5.3");
  StrSetText(227,"227 - HansaWorld SMB 5.3");
  StrSetText(228,"228 - FirstOffice Pro 5.3");
  StrSetText(229,"229 - HansaWorld 5.3");
  StrSetText(231,"231 - Office/2 5.4");
  StrSetText(232,"232 - FirstOffice 5.4");
  StrSetText(233,"233 - FirstOffice Mini 5.4");
  StrSetText(234,"234 - FirstOffice Currency 5.4");
  StrSetText(235,"235 - FirstContact 5.4");
  StrSetText(236,"236 - FirstOffice ASP 5.4");
  StrSetText(237,"237 - HansaWorld SMB 5.4");
  StrSetText(238,"238 - FirstOffice Pro 5.4");
  StrSetText(239,"239 - HansaWorld 5.4");
  StrSetText(241,"241 - Office/2 6.0");
  StrSetText(242,"242 - FirstOffice 6.0");
  StrSetText(243,"243 - FirstOffice Mini 6.0");
  StrSetText(244,"244 - FirstOffice Currency 6.0");
  StrSetText(245,"245 - FirstContact 6.0");
  StrSetText(246,"246 - FirstOffice ASP 6.0");
  StrSetText(247,"247 - HansaWorld SMB 6.0");
  StrSetText(248,"248 - FirstOffice Pro 6.0");
  StrSetText(249,"249 - HansaWorld 6.0");
  StrSetText(250,"250 - Books 6.0");
  StrSetText(251,"251 - Books Professional 6.0");
  StrSetText(252,"252 - Books Professional Advanced 6.0");
  StrSetText(253,"253 - Books Job Costing 6.0");
  StrSetText(254,"254 - Books Accounting 6.0");
  StrSetText(255,"255 - Books POS 6.0");
  StrSetText(260,"260 - Books 6.1");
  StrSetText(261,"261 - Office/2 6.1");
  StrSetText(262,"262 - FirstOffice 6.1");
  StrSetText(263,"263 - FirstOffice Mini 6.1");
  StrSetText(264,"264 - FirstOffice Currency 6.1");
  StrSetText(265,"265 - FirstContact 6.1");
  StrSetText(266,"266 - FirstOffice ASP 6.1");
  StrSetText(267,"267 - HansaWorld SMB 6.1");
  StrSetText(268,"268 - FirstOffice Pro 6.1");
  StrSetText(269,"269 - HansaWorld 6.1");
  StrSetText(270,"270 - Books 6.2");
  StrSetText(271,"271 - Office/2 6.2");
  StrSetText(272,"272 - FirstOffice 6.2");
  StrSetText(273,"273 - FirstOffice Mini 6.2");
  StrSetText(274,"274 - FirstOffice Currency 6.2");
  StrSetText(275,"275 - FirstContact 6.2");
  StrSetText(276,"276 - FirstOffice ASP 6.2");
  StrSetText(277,"277 - HansaWorld SMB 6.2");
  StrSetText(278,"278 - FirstOffice Pro 6.2");
  StrSetText(279,"279 - HansaWorld 6.2");
  StrSetText(280,"280 - Books 6.3");
  StrSetText(281,"281 - Office/2 6.3");
  StrSetText(282,"282 - FirstOffice 6.3");
  StrSetText(283,"283 - FirstOffice Mini 6.3");
  StrSetText(284,"284 - FirstOffice Currency 6.3");
  StrSetText(285,"285 - FirstContact 6.3");
  StrSetText(286,"286 - FirstOffice ASP 6.3");
  StrSetText(287,"287 - HansaWorld SMB 6.3");
  StrSetText(288,"288 - FirstOffice Pro 6.3");
  StrSetText(289,"289 - HansaWorld 6.3");
  StrSetText(501,"501 - Old Lithuanian Classic!!");
  StrSetText(701,"701 - HansaWorld Money 6.2");
  StrSetText(801,"801 - BusinessPhone 5.2");
  StrSetText(802,"802 - BusinessPhone 5.3");
  StrSetText(803,"803 - BusinessPhone 5.4");
  StrSetText(804,"804 - BusinessPhone 6.0");
  StrSetText(805,"805 - BusinessPhone 6.1");
  StrSetText(806,"806 - BusinessPhone 6.2");
  StrSetText(901,"901 - Very old Raama version!!");
  StrSetText(902,"902 - Very old Raama version!!");
  StrSetText(903,"903 - HansaRaama 3.8");
  StrSetText(905,"905 - HansaRaama 3.9");
  StrSetText(906,"906 - HansaRaama 4.0");
  StrSetText(907,"907 - HansaRaama 4.1 (first release)");
  StrSetText(908,"908 - HansaRaama 4.1");
  StrSetText(909,"909 - HansaRaama 4.2");
  StrSetText(910,"910 - HansaRaama 4.3");
  StrSetText(911,"911 - HansaRaama 5.0");
  StrSetText(912,"912 - HansaRaama 5.1");
  StrSetText(913,"913 - HansaRaama 5.2");
  StrSetText(914,"914 - HansaRaama 5.3");
  StrSetText(915,"915 - HansaRaama 5.4");
  StrSetText(916,"916 - HansaRaama 6.0");
  StrSetText(917,"917 - HansaRaama 6.1");
  StrSetText(918,"918 - HansaRaama 6.2");
  StrSetText(951,"951 - HansaRiigitarkvara");
  EndStrSet;
  
  SetBegin(440); //TODO: move into proper position before commit (position as sorted by Set number)
  SetText(0,"None");
  SetText(1,"FedEx");
  EndSet;

  SetBegin(441);
  SetText(0,"None");
  SetText(1,"Indirect");
  SetText(2,"Direct");
  SetText(3,"Adult");
  EndSet;

  SetBegin(442);
  SetText(0,"KG/CM");
  SetText(1,"LB/IN");
  EndSet;
  
  SetBegin(431);
  SetText(kPOSButtonTypeBlank,"Blank");
  SetText(kPOSButtonTypeServiceCharge,"Add Service Charge");  
  SetText(kPOSButtonTypeAllInvoices,"All Invoices");
  SetText(kPOSButtonTypeAmendLine,"Amend Line");
  SetText(kPOSButtonTypeBaggerSearch,"Bagger Search");
  SetText(kPOSButtonTypeBookings,"Bookings");  
  SetText(kPOSButtonTypeCashPayment,"Cash");
  SetText(kPOSButtonTypeCalculateTip,"Calculate Tip");  
  SetText(kPOSButtonTypeLogin,"Change User");  
  SetText(kPOSButtonTypeChequePayment,"Cheque");
  SetText(kPOSButtonTypeCreditCardPayment,"Credit Card");
  SetText(kPOSButtonTypeCreditCardPaymentReversal,"Credit Card Payment Reversal");
  SetText(kPOSButtonTypeCustomerSearch,"Customer Search");
  SetText(kPOSButtonTypeDebitCardPayment,"Debit Card");
  SetText(kPOSButtonTypeDeleteItem,"Delete Item");
  SetText(kPOSButtonTypeGotoPage,"Display Page");
  SetText(kPOSButtonTypeVolumetricBarCodeScan,"Dynamic Barcode");
  SetText(kPOSButtonTypeFinish,"Finish");  
  SetText(kPOSButtonTypeGiftReceipt,"Gift Receipt");
  SetText(kPOSButtonTypeGiftVoucherPayment,"Gift Voucher");
  SetText(kPOSButtonTypeInstructions,"Instructions");  
  SetText(kPOSButtonTypeGiftVoucherSales,"Sell Gift Voucher");
  SetText(kPOSButtonTypeInvalidateInvoice,"Invalidate Invoice");
  SetText(kPOSButtonTypeItem,"Item");
  SetText(kPOSButtonTypeItemSearch,"Поиск товара");
  SetText(kPOSButtonTypeItemStatus,"Статус товара");
  //SetText(kPOSButtonTypeLevelUp,"Level Up");
  SetText(kPOSButtonTypeLoyaltyPointsBonus,"Loyalty Bonus Points");
  SetText(kPOSButtonTypeLoyaltyCard,"Loyalty Card");
  SetText(kPOSButtonTypeLoyaltyPointsPayment,"Loyalty Points Payment");
  SetText(kPOSButtonTypeMergeBarTabs,"Merge Bar Tabs");  
  SetText(kPOSButtonTypeModifier,"Modifier");
  SetText(kPOSButtonTypeOnHotelGuestAccount,"On Hotel Guest Account");  
  SetText(kPOSButtonTypeOpenCashDrawer,"Open Cash Drawer");  
  SetText(kPOSButtonTypOpenInvoices,"Open Invoices");  
  SetText(kPOSButtonTypeSpecialMenu,"Operations Menu Function");
  SetText(kPOSButtonTypePayment,"Pay");
  SetText(kPOSButtonTypePriceLookup,"Price Lookup");
  SetText(kPOSButtonTypePrintInvoice,"Print Invoice");  
  SetText(kPOSButtonTypePrintOrder,"Print Tab");  
  SetText(kPOSButtonTypePrintOrderToKitchen,"Print Tab to Kitchen");  
  SetText(kPOSButtonTypePrintFireOrder,"Print Fire Order");  
  SetText(kPOSButtonTypePrintCancellation,"Print Cancellation");  
  SetText(kPOSButtonTypeReprintReceipt,"Reprint Receipt");
  SetText(kPOSButtonTypeReturn,"Return");
  SetText(kPOSButtonTypeReturnInvoiceNo,"Return Invoice No.");
  SetText(kPOSButtonTypeSalesAssistant,"Sales Assistant");
  SetText(kPOSButtonTypeSelectSalesman,"Select Salesman");
  SetText(kPOSButtonTypSaveInvoice,"Suspend Invoice");  
  SetText(kPOSButtonTypeSeniorCitizenDiscount,"Senior Citizen Discount");
  SetText(kPOSButtonTypeLookupSerialNr,"Serial No. Lookup");
  SetText(kPOSButtonTypeSetTable,"Set Table");  
  SetText(kPOSButtonTypeSetCovers,"Set Covers");  
  SetText(kPOSButtonTypeHotelGuests,"Show Hotel Guests");  
  SetText(kPOSButtonTypeSplitBarTabs,"Split Bar Tabs");  
  SetText(kPOSButtonTypeSplitItem,"Split Item");
  SetText(kPOSButtonTypeSupervisorSearch,"Supervisor Search");
  SetText(kPOSButtonTypeSyncNow,"Sync Now");
//  SetText(kPOSButtonTypeLevelDown,"Level Down");
  SetText(kPOSButtonTypeLevelTop,"Top Level");
  SetText(kPOSButtonTypeTransfertoSL,"Transfering to Sales Ledger");
  SetText(kPOSButtonTypePOSCommand,"POS Command");
  SetText(kPOSButtonTypeVoidRow,"Void Row");  
  SetText(kPOSButtonTypeXReading,"X-Reading");
  SetText(kPOSButtonTypeYReading,"Y-Reading");
  EndSet;
  
  SetBegin(432);
  SetText(0,"No");
  SetText(1,"Yes");
  EndSet;

  SetBegin(433);
  SetText(kOrderTypeNormal,"Normal");
  SetText(kOrderTypeDropShip,"Drop Ship");
  EndSet;

  SetBegin(434);
  SetText(kAcceptanceExp,"Затраты");
  SetText(kAcceptancePU,"Goods Receipts");
  SetText(kAcceptanceIntOR,"Internal Orders");
  SetText(kAcceptanceLeaveApplication,"Leave Application");
  SetText(kAcceptanceLeaveTransfer,"Leave Transfer");
  SetText(kAcceptanceOP,"Платежи");
  SetText(kAcceptanceTBBU,"Бюджета по проектам");
  SetText(kAcceptanceVI,"Purchase Invoices");
  SetText(kAcceptancePO,"Purchase Orders");
  SetText(kAcceptanceQT,"Quotations");
  SetText(kAcceptanceCashIV,"Sales Cash Notes");
  SetText(kAcceptanceCredIV,"Sales Credit Notes");
  SetText(kAcceptanceIV,"Sales Invoices");
  SetText(kAcceptanceOR,"Счета клиентам");
  SetText(kAcceptanceSD,"Stock Depreciations");
//  SetText(kAcceptanceStockTake,"Stocktaking");
  EndSet;

  SetBegin(435);
  SetText(kAcceptanceTypeNone,"None");
  SetText(kAcceptanceTypeUser,"Пользователь");
//  SetText(kAcceptanceTypeJobGroup,"Job Group");//no code yet
  EndSet;

  SetBegin(436);
  SetText(kAcceptanceTypeActionNone,"None");
  SetText(kAcceptanceTypeActionByOne,"By one");
  SetText(kAcceptanceTypeActionByAll,"By all");
  EndSet;

  SetBegin(437);
  SetText(kAcceptanceTypeResultNone,"None");
  SetText(kAcceptanceTypeResultEmail,"Электронная почта");
  SetText(kAcceptanceTypeResultSMS,"SMS");
  SetText(kAcceptanceTypeResultAlert,"Message");
  EndSet;

  SetBegin(438);
  SetText(kActSeqSetPersonFixed,"Specified Person");
  SetText(kActSeqSetPersonOriginatingRecord,"From Originating Record");
  EndSet;

  SetBegin(439);
  SetText(kAcceptanceNextLevelNone,"Not Required");
  SetText(kAcceptanceNextLevelRequired,"Required");
  EndSet;
  
  SetBegin(443);
  SetText(kAcceptanceStateNotRequired,"Not Required");
  SetText(kAcceptanceStateNotStarted,"Not Started");
  SetText(kAcceptanceStateNotRequested,"Not Requested");
  SetText(kAcceptanceStatePending,"Pending");
  SetText(kAcceptanceStateApproved,"Approved");
  SetText(kAcceptanceStateRejected,"Rejected");  
  EndSet;
  
/*
434-444 
reserved for acceptance
*/

  SetBegin(445);
  SetText(0,"Calculated");
  SetText(1,"String");
  SetText(2,"Separator");
  SetText(3,"Common String");
  SetText(4,"Field");
  EndSet; 
  
  StrSetBegin(446);
  StrSetText("Program_Version","Program Version");
  StrSetText("File_Identificator","File Identificator");//INN**KPPYYYYMMDDHHMMSS
  StrSetText("Document_Identificator","Document Identificator");//INN**KPPYYYYNNNNNNNN
  StrSetText("Current_Date","Current Date");
  StrSetText("Current_Date_YYYYMMDD","Current Date (YYYYMMDD)");
  StrSetText("Year","Year");
  StrSetText("Date_D1","Date D1");
  StrSetText("Date_D2","Date D2");
  StrSetText("Date_D3","Date D3");
  StrSetText("Date_D4","Date D4");
  StrSetText("VAT_Nr","VAT Nr");
  StrSetText("ANA_Code","ANA Code");
  StrSetText("Company_Name","Имя компании");
  StrSetText("Period_Type","Period Type"); //1 - month, 3 - quarter
  StrSetText("Period_Number","Period Number"); //1-12 or 1-4
  StrSetText("Period_Quarter","Period Quarter");//3,6,9
  EndStrSet; 

  SetBegin(447);
  SetText(0,"TXT");
  SetText(1,"DBF");
  SetText(2,"XML");
  EndSet; 
  
  StrSetBegin(448);
  StrSetText(N,"Numeric (N)");
  StrSetText(C,"Char (C)");
  StrSetText(L,"Boolean (L)");
  StrSetText(D,"Date (D)");
  EndStrSet;  
  
  SetBegin(449);
  SetText(0,"-");
  SetText(1,"Fwd Balance");
  SetText(2,"Баланс");
//  SetText(2,"XML");
  EndSet;
  
  SetBegin(450);
  SetText(kDiskErrorNoFile,"File or folder does not exist");
  SetText(kDiskErrorPermission,"Insuficcient permissions");
  SetText(kDiskErrorIO,"I/O Error");
  SetText(kDiskErrorBadFD,"Bad file number");
  SetText(kDiskErrorNoSpace,"No space, Disk full");
  SetText(kDiskErrorBrokenPipe,"Broken pipe");
  SetText(kDiskErrorInternal,"Internal disk error");
  SetText(kDiskErrorChecksum,"Cache checksum disk error");
  SetText(kDiskErrorUnknown,"Unknown disk error");
  SetText(kDiskErrorSeekFailed,"Seek Failed");
  SetText(kDiskErrorWriteFailed,"Write Failed");
  SetText(kDiskErrorCleanSectorInWriteList,"Clean sector in write list");
  SetText(kDiskErrorAllocatedDirtySector,"Allocated dirty sector");
  SetText(kDiskErrorDoubleDirtyingOfSector,"Double dirtying of sector");
  EndSet;
  
  SetBegin(451);
  SetText(0,"km");
  SetText(1,"mile");
  EndSet;
  
  SetBegin(452);
  SetText(kTaxTransInclinTotalNo,"Tax not included in Total");
  SetText(kTaxTransInclinTotalYes,"Tax included in Total");
  EndSet;
  
  SetBegin(453);
  SetText(kTaxTransCalcBaseNet,"Net");
  SetText(kTaxTransCalcBaseInclAllPreviousTaxes,"Incl. all previously Calculated Taxes");
  EndSet;
  
  SetBegin(454);
  SetText(kBugStatusNotVerified,"Not Verified");
  SetText(kBugStatusVerified,"Verified");
  SetText(kBugStatusFixed,"Fixed");
  SetText(kBugStatusTested,"Tested");
  SetText(kBugStatusNotABug,"Not A Bug");
  SetText(kBugStatusDuplicate,"Duplicate");
  EndSet;
  
  SetBegin(455);
  SetText(kBugPrioCrash,"Crash");
  SetText(kBugPrioReleseCritical,"Release Critical");
  SetText(kBugPrioHigh,"High");
  SetText(kBugPrioNormal,"Normal");
  SetText(kBugPrioLow,"Low");
  EndSet;

  SetBegin(456);
  SetText(kCountryAddrLineUserAddrNone,"None");
  SetText(kCountryAddrLineUserAddr0,"Адрес 1");
  SetText(kCountryAddrLineUserAddr1,"Адрес 2");
  SetText(kCountryAddrLineUserAddr2,"Адрес 3");
  SetText(kCountryAddrLineUserAddr3,"Адрес 4");
  SetText(kCountryAddrLineUserAddr4,"Адрес 5");
  EndSet;
  
  SetBegin(457);
  SetText(0,"Main Item");
  SetText(1,"Part Item");
  EndSet;
  
  SetBegin(458);
  SetText(0,"-");
  SetText(kHttpStatusContinue,"100 - Continue");
  SetText(kHttpStatusSwitchingProtocols,"101 - Switching Protocols");
  SetText(kHttpStatusOK,"200 - OK");
  SetText(kHttpStatusCreated,"201 - Created");
  SetText(kHttpStatusAccepted,"202 - Accepted");
  SetText(kHttpStatusNonAuthInfo,"203 - Non Auth Info");
  SetText(kHttpStatusNoContent,"204 - No Content");
  SetText(kHttpStatusResetContent,"205 - Reset Content");
  SetText(kHttpStatusPartialContent,"206 - Partial Content");
  SetText(kHttpStatusMultipleChoices,"300 - Multiple Choices");
  SetText(kHttpStatusMovedPermanently,"301 - Moved Permanently");
  SetText(kHttpStatusFound,"302 - Found");
  SetText(kHttpStatusSeeOther,"303 - See Other");
  SetText(kHttpStatusNotModified,"304 - Not Modified");
  SetText(kHttpStatusUseProxy,"305 - Use Proxy");
  SetText(kHttpStatusUnused,"306 - Unused");
  SetText(kHttpStatusTemporaryRedirect,"307 - Temporary Redirect");
  SetText(kHttpStatusBadRequest,"400 - Bad Request");
  SetText(kHttpStatusUnauthorized,"401 - Unauthorized");
  SetText(kHttpStatusPaymentRequired,"402 - Payment Required");
  SetText(kHttpStatusForbidden,"403 - Forbidden");
  SetText(kHttpStatusNotFound,"404 - Not Found");
  SetText(kHttpStatusMethodNotAllowed,"405 - Method Not Allowed");
  SetText(kHttpStatusNotAcceptable,"406 - Not Acceptable");
  SetText(kHttpStatusProxyAuthRequired,"407 - Proxy Auth Required");
  SetText(kHttpStatusRequestTimeout,"408 - Request Timeout");
  SetText(kHttpStatusConflict,"409 - Conflict");
  SetText(kHttpStatusInternalServerError,"500 - Internal Server Error");
  SetText(kHttpStatusNotImplemented,"501 - Not Implemented");
  SetText(kHttpStatusBadGateway,"502 - Bad Gateway");
  SetText(kHttpStatusServiceUnavailable,"503 - Service Unavailable");
  SetText(kHttpStatusGatewayTimeout,"504 - Gateway Timeout");
  SetText(kHttpStatusHttpVersionNotSupported,"505 - Version Not Supported");
  EndSet;
  
  SetBegin(459);
  SetText(kWebFunctionAccessPublic,"Public");
  SetText(kWebFunctionAccessContactLogin,"Logged In Contact or User");
  SetText(kWebFunctionAccessUserLogin,"Logged In User");
  EndSet;
  
  SetBegin(460);
  SetText(kPURateFromPurchaseOrder,"From Purchase Order");
  SetText(kPURateOnGoodsReceiptDate,"On Goods Receipt Date");
  SetText(kPURateFromPrepayment,"From Prepayment");
  EndSet;
  
  SetBegin(461);
  SetText(kVIRateFromPurchaseOrder,"From Purchase Order");
  SetText(kVIRateOnPurchaseInvoiceDate,"On Purchase Invoice Date");
  SetText(kVIRateFromPrepayment,"From Prepayment");
  EndSet;
  
  SetBegin(462);
  SetText(kCURegFieldTypeName,"Имя");
  SetText(kCURegFieldTypeInvAddr0,"Invoice Address 1");
  SetText(kCURegFieldTypeInvAddr1,"Invoice Address 2");
  SetText(kCURegFieldTypeInvAddr2,"Invoice Address 3");
  SetText(kCURegFieldTypeInvAddr3,"Invoice Address 4");
  SetText(kCURegFieldTypeInvAddr4,"Invoice Address 5");
  SetText(kCURegFieldTypeSorting,"Sort Key");
  SetText(kCURegFieldTypeDepartment,"Департамент");
  SetText(kCURegFieldTypePhone,"Telephone");
  SetText(kCURegFieldTypeFax,"Fax");
  SetText(kCURegFieldTypeAltPhone,"Alternate Phone");
  SetText(kCURegFieldTypeMobile,"Mobile");
  SetText(kCURegFieldTypeSkypeName,"Skype Name");
  SetText(kCURegFieldTypeSIPCode,"SIP");
  SetText(kCURegFieldTypeeMail,"Электронная почта");
  SetText(kCURegFieldTypeeMailConfirm,"E-Mail (confirm)");
  SetText(kCURegFieldTypeExtension,"Extension");
  SetText(kCURegFieldTypePerson,"Primary Contact");
  SetText(kCURegFieldTypewwwAddr,"Веб-сайт");
  SetText(kCURegFieldTypeClassificationSelect,"Classification (select)");
  SetText(kCURegFieldTypeClassificationRadio,"Classification (radio)");
  SetText(kCURegFieldTypeClassificationCheckbox,"Classification (checkbox)");
  SetText(kCURegFieldTypePassword,"Пароль");
  SetText(kCURegFieldTypePasswordConfirm,"Password (confirm)");
  SetText(kCURegFieldTypeDelAddr0,"Delivery Address 1");
  SetText(kCURegFieldTypeDelAddr1,"Delivery Address 2");
  SetText(kCURegFieldTypeDelAddr2,"Delivery Address 3");
  SetText(kCURegFieldTypeDelAddr3,"Delivery Address 4");
  SetText(kCURegFieldTypeDelAddr4,"Delivery Address 5");
  SetText(kCURegFieldTypeRegNr1,"Reg. No. 1");
  SetText(kCURegFieldTypeRegNr2,"Reg. No. 2");
  SetText(kCURegFieldTypeVATNr,"VAT Reg. No.");
  SetText(kCURegFieldTypeCountryCode,"Страна");
  SetText(kCURegFieldTypeRegion,"Region");
  SetText(kCURegFieldTypeCustCat,"Категория клиента");
  SetText(kCURegFieldTypeUserStr1,"User Defined String 1");
  SetText(kCURegFieldTypeUserStr2,"User Defined String 2");
  SetText(kCURegFieldTypeUserStr3,"User Defined String 3");
  SetText(kCURegFieldTypeUserStr4,"User Defined String 4");
  SetText(kCURegFieldTypeUserStr5,"User Defined String 5");
  SetText(kCURegFieldTypeUserVal1,"User Defined Value 1");
  SetText(kCURegFieldTypeUserVal2,"User Defined Value 2");
  SetText(kCURegFieldTypeUserVal3,"User Defined Value 3");
  SetText(kCURegFieldTypeUserDate1,"Пользовательская дата 1");
  SetText(kCURegFieldTypeUserDate2,"Пользовательская дата 2");
  SetText(kCURegFieldTypeUserDate3,"Пользовательская дата 3");
  SetText(kCURegFieldTypeNoLetterPosting,"No Mass Letters");
  SetText(kCURegFieldTypeNoMailPosting,"No Mass Emailing");
  EndSet;
    
  SetBegin(463);
  SetText(kHRMCOSalaryTypeMonthly,"Monthly");
  SetText(kHRMCOSalaryTypeYearly,"Yearly");
  SetText(kHRMCOSalaryTypeWeekly,"Weekly");
  SetText(kHRMCOSalaryTypeFortnightly,"Fortnightly");
  EndSet;
  
  StrSetBegin(465);
  StrSetText(IVCashDClass,"POS Invoice");
  StrSetText(NPTSIVCashDClass,"New TS POS Invoice");
  StrSetText(RestAccDClass,"Bar Tab");
  EndStrSet;
  
  SetBegin(466);
  SetText(kXBRLElementFieldTypeMonetary,"Monetary");
  SetText(kXBRLElementFieldTypeText,"Текст");
  EndSet;
  
  SetBegin(467);
  SetText(kXBRLElementReportTypeI_BAL,"Balance Sheet");
  SetText(kXBRLElementReportTypeD_PL1,"Profit & Loss 1");
  SetText(kXBRLElementReportTypeD_PL2,"Profit & Loss 2");
  SetText(kXBRLElementReportTypeD_CF1,"Cash Flow 1");
  SetText(kXBRLElementReportTypeD_CF2,"Cash Flow 2");
  EndSet;
  
  SetBegin(468);
  SetText(kFunctionKeyNone,"-");
  SetText(kFunctionKeyF1,"F1");
  SetText(kFunctionKeyF2,"F2");
  SetText(kFunctionKeyF3,"F3");
  SetText(kFunctionKeyF4,"F4");
  SetText(kFunctionKeyF5,"F5");
  SetText(kFunctionKeyF6,"F6");
  SetText(kFunctionKeyF7,"F7");
  SetText(kFunctionKeyF8,"F8");
  SetText(kFunctionKeyF9,"F9");
  SetText(kFunctionKeyF10,"F10");
  SetText(kFunctionKeyF11,"F11");
  SetText(kFunctionKeyF12,"F12");
  SetText(kFunctionKeyF13,"F13");
  SetText(kFunctionKeyF14,"F14");
  SetText(kFunctionKeyF15,"F15");
  SetText(kFunctionKeyF16,"F16");
  SetText(kFunctionKeyF17,"F17");
  SetText(kFunctionKeyF18,"F18");
  SetText(kFunctionKeyF19,"F19");
  SetText(kFunctionKeyF20,"F20");
  SetText(kFunctionKeyF21,"F21");
  SetText(kFunctionKeyF22,"F22");
  SetText(kFunctionKeyF23,"F23");
  SetText(kFunctionKeyF24,"F24");
  EndSet;
  
  SetBegin(469);
  SetText(kHRMCOChangeReasonDummy,"");
  SetText(kHRMCOChangeReasonNew,"New Recruitment");
  SetText(kHRMCOChangeReasonPromotion,"Promotion");
  SetText(kHRMCOChangeReasonTransfer,"Transfer");
  SetText(kHRMCOChangeReasonDemotion,"Demotion");
  EndSet;

  SetBegin(470);
  SetText(kHRMCOReasonDummy,"None");
  SetText(kHRMCOReasonResignation,"Resignation");
  SetText(kHRMCOReasonNonRenewal,"Non-renewal of contract");
  SetText(kHRMCOReasonDismissalOperational,"Dismissal - operational requirements");
  SetText(kHRMCOReasonDismissalMisconduct,"Dismissal - misconduct");
  SetText(kHRMCOReasonDismissalIncapacity,"Dismissal - incapacity");
  SetText(kHRMCOReasonDismissalRetirement,"Retirement");
  SetText(kHRMCOReasonDismissalDeath,"Death");
  EndSet;
  
  SetBegin(471);
  SetText(kHRMJPStatusOpening,"Opening");
  SetText(kHRMJPStatusFree,"Free");
  SetText(kHRMJPStatusFilled,"Filled");
  SetText(kHRMJPStatusCancelled,"Cancelled");
  EndSet;

  SetBegin(472);
  SetText(kPOSCommandsBeforeData,"Before Data");
  SetText(kPOSCommandsAfterDate,"After Data");
  EndSet;
  
  SetBegin(473);
  SetText(kPdfFontNone,"None");
  SetText(kPdfFontTimes,"Times");
  SetText(kPdfFontCourier,"Courier");
  SetText(kPdfFontHelvetica,"Helvetica");
  SetText(kPdfFontSymbol,"Symbol");
  SetText(kPdfFontZapfDingbats,"ZapfDingbats");
  EndSet;
  
  SetBegin(474);
  SetText(kPbxTypeAsterisk10,"Asterisk 1.0 (AMI)");
  SetText(kPbxTypeAsterisk12,"Asterisk 1.2 (AMI)");
  SetText(kPbxTypeAsterisk14,"Asterisk 1.4 (AMI)");
  SetText(kPbxTypeAsterisk16,"Asterisk 1.6 (AMI)");
  SetText(kPbxTypeTrixBox,"TrixBox (AMI)");
  SetText(kPbxTypeDigium,"Digium");
  SetText(kPbxTypeTapi,"TAPI 2.1 (3rd-party)");
  SetText(kPbxTypeVPBX,"VPBX");
  EndSet;
  
  SetBegin(475);
  SetText(kPbxRuleIgnoreSIPChannel,"Ignore SIP Channel");
  SetText(kPbxRuleUniqueCallers,"Unique Callers Only");
  EndSet;
  
  SetBegin(476);
  SetText(kRoomPriceRestictionTypeNone,"No restrictions");
  SetText(kRoomPriceRestictionTypeAdultsNo,"Number of Adults");
  SetText(kRoomPriceRestictionTypeChildrenNo,"Number of Children");
  SetText(kRoomPriceRestictionTypeGuestsNo,"Number of Guests");
  EndSet;
  
  SetBegin(477);
  SetText(kCompOpNone,"None");
  SetText(kCompOpEquals,"Equals");
  SetText(kCompOpGreaterThan,"Greater than");
  SetText(kCompOpLessThan,"Less than");
  SetText(kCompOpGreaterThanOrEqualTo,"Greater than or Equal to");
  SetText(kCompOpLessThanOrEqualTo,"Less than or Equal to");
  SetText(kCompOpNotEqual,"Not Equal");
  SetText(kCompOpNotLessThan,"Not Less than");
  SetText(kCompOpNotGreaterThan,"Not Greater than");
  SetText(kCompOpRange,"Between");
  SetText(kCompOpTrue,"True");
  SetText(kCompOpFalse,"False");
  EndSet;

  SetBegin(478);
  SetText(kChargeTypeFixedPrice,"Fixed price");
  SetText(kChargeTypePerAdult,"Per adult");
  SetText(kChargeTypePerChild,"Per child");
  SetText(kChargeTypePerGuest,"Per guest");
  EndSet;

  SetBegin(479);
  SetText(kELockSystemTypeNone,"None");
  SetText(kELockSystemTypeTESAHT28,"Onity TESA HT28");
  EndSet;

  SetBegin(480);
//  SetText(0,"Month, Day, Year");
//  SetText(1,"Day, Month, Year");
//  SetText(2,"Year, Month, Day");
  SetText(kCalendarGregorian,"Gregorian");
  SetText(kCalendarHijri,"Hijri");
  SetText(kCalendarPersian,"Persian");
  EndSet;

  SetBegin(481);
  SetText(kCompOpLessThan,"Must be less than");
  SetText(kCompOpGreaterThan,"Must be more than");
  SetText(kCompOpRange,"Must be between");
  SetText(kCompOpNotEqual,"Must not equal");
  EndSet;
  
  SetBegin(482);
  SetText(kCompOpTrue,"For all");
  SetText(kCompOpGreaterThanOrEqualTo,"From number");
  SetText(kCompOpRange,"Between number");
  EndSet;
  
  SetBegin(483);
  SetText(kRoyaltySaleNoMaint,"Normal - Excluding Maintenance");
  SetText(kRoyaltySaleWithMaint,"Normal - Including Maintenance");
  SetText(kRoyaltySaleRental,"Rental Sale");
  EndSet;

  SetBegin(484);
  SetText(kIncludedinAllowance,"Included in Allowance");
  SetText(kExcludedinAllowance,"Excluded from Allowance");
  EndSet;
  
  SetBegin(485);
  SetText(kMultiBuyTypeNone,"None");
  SetText(kMultiBuyTypeBOGOF,"Buy x get y for free");
  SetText(kMultiBuyTypeAnyQty,"Buy any Quantity from Item Set");
  EndSet; 

  SetBegin(486);
  SetText(kMultiBuyDiscountTypeNone,"None");
  SetText(kMultiBuyDiscountTypeCheapest,"Cheapest");
  SetText(kMultiBuyDiscountTypeMostExpensive,"Most Expensive");
  EndSet; 

  SetBegin(487);
  SetText(kHRMCOJobTypeMonthly,"Monthly");
  SetText(kHRMCOJobTypeYearly,"Yearly");
  SetText(kHRMCOJobTypeWeekly,"Weekly");
  SetText(kHRMCOJobTypeFortnightly,"Fortnightly");
  EndSet;

  SetBegin(488);
  SetText(kVolumetricBarcodeDefault,"Ignore");
  SetText(kVolumetricBarcodeArtCode,"Item");
  SetText(kVolumetricBarcodeWeight,"Weight");
  SetText(kVolumetricBarcodeWeightDecimals,"Weight Decimals");
  SetText(kVolumetricBarcodeDepartment,"Департамент");
  SetText(kVolumetricBarcodePrice,"Price");
  SetText(kVolumetricBarcodeCheckDigit,"Check Digit");
  EndSet;

  SetBegin(489);
  SetText(kMeasurementSystemImperial,"Imperial (lb/in)");
  SetText(kMeasurementSystemMetric,"Metric (kg/cm)");
  EndSet;

  SetBegin(490);
  SetText(kPointsHistoryLoyaltyCard,"Loyalty Card");
  SetText(kPointsHistoryGiftVoucher,"Gift Vouchers");
  EndSet;

  SetBegin(491);
  SetText(kKeyModifierNone,"-");
  if (GuiType==kGuiCocoa) then begin
    SetText(kKeyModifierCtrl,"Cmd");
  end else begin
    SetText(kKeyModifierCtrl,"Ctrl");
  end;
  SetText(kKeyModifierShift,"Shift");
  if (GuiType==kGuiCocoa) then begin
    SetText(kKeyModifierCtrlShift,"Cmd + Shift");
  end else begin
    SetText(kKeyModifierCtrlShift,"Ctrl + Shift");
  end;
  EndSet;

  SetBegin(492);
  SetText(0,"N-Normal");
  SetText(1,"R-Corrections");
  SetText(2,"J-Adjustments");
  SetText(3,"A-Year End");
  EndSet;
     
  StrSetBegin(493);
  StrSetText(OpenPOSSessionsm,"Открыть сессию");
  StrSetText(ClosePOSSessionsm,"Открыть сессию");
  StrSetText(POSMoneyInsm,"Приход");
  StrSetText(POSMoneyOutsm,"Расход");
  StrSetText(IVCashCashupRnsm,"Cash Up Report");
  EndStrSet;
  
  SetBegin(494);
  SetText(kPOSButtonTypeBlank,"Blank");
  SetText(kPOSButtonTypeServiceCharge,"Add Service Charge");  
  SetText(kPOSButtonTypeAmendLine,"Amend Line");
  SetText(kPOSButtonTypeBookings,"Bookings");  
  SetText(kPOSButtonTypeCashPayment,"Cash");
  SetText(kPOSButtonTypeCalculateTip,"Calculate Tip");  
  SetText(kPOSButtonTypeLogin,"Change User");  
  SetText(kPOSButtonTypeChequePayment,"Cheque");
  SetText(kPOSButtonTypeCreditCardPayment,"Credit Card");
  SetText(kPOSButtonTypeCreditCardPaymentReversal,"Credit Card Payment Reversal");
  SetText(kPOSButtonTypeCustomerSearch,"Customer Search");
  SetText(kPOSButtonTypeGotoPage,"Display Page");
  SetText(kPOSButtonTypeDebitCardPayment,"Debit Card");
  SetText(kPOSButtonTypeDeleteItem,"Delete Item");
  SetText(kPOSButtonTypeFinish,"Finish");  
  SetText(kPOSButtonTypeGiftVoucherPayment,"Gift Voucher");
  SetText(kPOSButtonTypeInstructions,"Instructions");  
  SetText(kPOSButtonTypeInvalidateInvoice,"Invalidate Tab");
  SetText(kPOSButtonTypeItem,"Item");
  SetText(kPOSButtonTypeItemSearch,"Поиск товара");
  SetText(kPOSButtonTypeLoyaltyCard,"Loyalty Card");
  SetText(kPOSButtonTypeLoyaltyPointsPayment,"Loyalty Points Payment");
  SetText(kPOSButtonTypeLoyaltyPointsBonus,"Loyalty Bonus Points");
  SetText(kPOSButtonTypeMergeBarTabs,"Merge Bar Tabs");  
  SetText(kPOSButtonTypeModifier,"Modifier");
  SetText(kPOSButtonTypeOnHotelGuestAccount,"On Hotel Guest Account");  
  SetText(kPOSButtonTypeOpenCashDrawer,"Open Cash Drawer");  
  SetText(kPOSButtonTypOpenInvoices,"Открыть счета");  
  SetText(kPOSButtonTypePayment,"Pay");
  SetText(kPOSButtonTypSaveInvoice,"Park Tab");  
  SetText(kPOSButtonTypePriceLookup,"Price Lookup");
  SetText(kPOSButtonTypePrintInvoice,"Print Invoice");  
  SetText(kPOSButtonTypePrintOrder,"Print Tab");  
  SetText(kPOSButtonTypePrintOrderToKitchen,"Print Tab to Kitchen");  
  SetText(kPOSButtonTypePrintFireOrder,"Print Fire Order");  
  SetText(kPOSButtonTypePrintCancellation,"Print Cancellation");  
  SetText(kPOSButtonTypeReprintReceipt,"Reprint Receipt");
  SetText(kPOSButtonTypeReturn,"Return");
  SetText(kPOSButtonTypeReturnInvoiceNo,"Return Invoice No.");
  SetText(kPOSButtonTypeSalesAssistant,"Sales Assistant");
  SetText(kPOSButtonTypeSelectSalesman,"Select Salesman");
  SetText(kPOSButtonTypeSetTable,"Set Table");  
  SetText(kPOSButtonTypeSetCovers,"Set Covers");  
  SetText(kPOSButtonTypeHotelGuests,"Show Hotel Guests");  
  SetText(kPOSButtonTypeSplitBarTabs,"Split Bar Tabs");  
  SetText(kPOSButtonTypeLevelTop,"Top Level");
  SetText(kPOSButtonTypeVoidRow,"Void Row");  
  EndSet;
  
  SetBegin(495);
  SetText(kPOSButtonTypeBlank,"Blank");
  SetText(kPOSButtonTypeAmendLine,"Amend Line");
  SetText(kPOSButtonTypeBaggerSearch,"Bagger Search");
  SetText(kPOSButtonTypeCashPayment,"Cash");
  SetText(kPOSButtonTypeLogin,"Change User");  
  SetText(kPOSButtonTypeChequePayment,"Cheque");
  SetText(kPOSButtonTypeCreditCardPayment,"Credit Card");
  SetText(kPOSButtonTypeCreditCardPaymentReversal,"Credit Card Payment Reversal");
  SetText(kPOSButtonTypeCustomerSearch,"Customer Search");
  SetText(kPOSButtonTypeDebitCardPayment,"Debit Card");
  SetText(kPOSButtonTypeDeleteItem,"Delete Item");
  SetText(kPOSButtonTypeGotoPage,"Display Page");
  SetText(kPOSButtonTypeVolumetricBarCodeScan,"Dynamic Barcode");
  SetText(kPOSButtonTypeFinish,"Finish");  
  SetText(kPOSButtonTypeGiftReceipt,"Gift Receipt");
  SetText(kPOSButtonTypeGiftVoucherPayment,"Gift Voucher");
  SetText(kPOSButtonTypeInvalidateInvoice,"Invalidate Invoice");
  SetText(kPOSButtonTypeItem,"Item");
  SetText(kPOSButtonTypeItemSearch,"Поиск товара");
  SetText(kPOSButtonTypeItemStatus,"Статус товара");
  //SetText(kPOSButtonTypeLevelUp,"Level Up");
  SetText(kPOSButtonTypeLoyaltyCard,"Loyalty Card");
  SetText(kPOSButtonTypeLoyaltyPointsPayment,"Loyalty Points Payment");
  SetText(kPOSButtonTypeLoyaltyPointsBonus,"Loyalty Bonus Points");
  SetText(kPOSButtonTypeModifier,"Modifier");
  SetText(kPOSButtonTypeOpenCashDrawer,"Open Cash Drawer");  
  SetText(kPOSButtonTypOpenInvoices,"Open Invoices");  
  SetText(kPOSButtonTypeSpecialMenu,"Operations Menu Function");
  SetText(kPOSButtonTypePayment,"Pay");
  SetText(kPOSButtonTypePriceLookup,"Price Lookup");
  SetText(kPOSButtonTypeReturn,"Return");
  SetText(kPOSButtonTypeReturnInvoiceNo,"Return Invoice No.");
  SetText(kPOSButtonTypeSelectSalesman,"Select Salesman");
  SetText(kPOSButtonTypeSalesAssistant,"Sales Assistant");
  SetText(kPOSButtonTypSaveInvoice,"Save Invoice");  
  SetText(kPOSButtonTypeLookupSerialNr,"Serial No. Lookup");
  SetText(kPOSButtonTypeSeniorCitizenDiscount,"Senior Citizen Discount");
  SetText(kPOSButtonTypeSplitItem,"Split Item");
  SetText(kPOSButtonTypeSupervisorSearch,"Supervisor Search");
//  SetText(kPOSButtonTypeLevelDown,"Level Down");
  SetText(kPOSButtonTypeLevelTop,"Top Level");
  SetText(kPOSButtonTypeTransfertoSL,"Transfering to Sales Ledger");
  SetText(kPOSButtonTypePOSCommand,"POS Command");
  SetText(kPOSButtonTypeVoidRow,"Void Row");  
  EndSet;
  
  SetBegin(496);
  SetText(kTableShapeRectangular,"Rectangular");
  SetText(kTableShapeRound,"Round");
  EndSet;
  
  SetBegin(497);
  SetText(kEditScale100,"100%");
  SetText(kEditScale150,"150%");
  SetText(kEditScale200,"200%");
  SetText(kEditScale300,"300%");
  EndSet;
  
  StrSetBegin(498);
  StrSetText("CashVc","Cash Events"); 
  StrSetText("CouponVc","Credit Card Slip"); 
  StrSetText("GiftReceiptVc","Gift Receipts");
  StrSetText("GCVc","Issued Gift Vouchers"); 
  //StrSetText("MailVc","Mails"); -- no number series for mails, uses uuid as mainkey instead
  StrSetText("POSBalanceVc","POS Balances"); 
  StrSetText("IVCashVc","Счета POS"); 
  StrSetText("POSEventVc","POS Sessions"); 
  EndStrSet;

  SetBegin(499);
  SetText(kSyncCheckResultIdentical,"Identical");
  SetText(kSyncCheckResultDifferent,"Different");
  SetText(kSyncCheckResultDifferentOK,"Ok Difference");
  SetText(kSyncCheckResultNotOnServer,"Not On Server");
  EndSet;

  SetBegin(500);
  SetText(kOfficialNumTypeAllIVVc,"All Invoices");
  SetText(kOfficialNumTypeInterestIVVc,"Interest Invoices");
  SetText(kOfficialNumTypeCashIVVc,"Cash Notes");
  SetText(kOfficialNumTypeCreditIVVc,"Credit Notes");
  SetText(kOfficialNumTypeIVVc,"Normal Invoice");
  SetText(kOfficialNumTypePOSIVVc,"POS Invoice");
  SetText(kOfficialNumTypeSHVc,"Delivery");
  SetText(kOfficialNumTypeRetVc,"Возвраты товаров");
  SetText(kOfficialNumTypeStockMovVc,"Stock Movements");
  SetText(kOfficialNumTypeORVc,"Счета клиентам");
  EndSet;
  
  SetBegin(501);
  SetText(kLegalInvNrSelectionTypeManual,"Manual");
  SetText(kLegalInvNrSelectionTypeAtOK,"At OK");
  SetText(kLegalInvNrSelectionTypeAtInsert,"At Insert");
  EndSet;

  SetBegin(502);
  SetText(kLegalInvNrChronologyTypeNone,"None");
  SetText(kLegalInvNrChronologyTypeForced,"Force");
  EndSet;

  SetBegin(503);
  SetText(kDelAddrFieldTypeDelCode,"Del. Code");
  SetText(kDelAddrFieldTypeComment,"Комментарий");
  SetText(kDelAddrFieldTypeName,"Имя");
  SetText(kDelAddrFieldTypeDelAddr0,"Delivery Address 1");
  SetText(kDelAddrFieldTypeDelAddr1,"Delivery Address 2");
  SetText(kDelAddrFieldTypeDelAddr2,"Delivery Address 3");
  SetText(kDelAddrFieldTypeDelAddr3,"Delivery Address 4");
  SetText(kDelAddrFieldTypeDelAddr4,"Delivery Address 5");
  SetText(kDelAddrFieldTypeDelCountry,"Страна");
  SetText(kDelAddrFieldTypeContact,"Контакт");
  SetText(kDelAddrFieldTypePhone,"Telephone");
  SetText(kDelAddrFieldTypeFax,"Fax");
  SetText(kDelAddrFieldTypeEmail,"Электронная почта");
  EndSet;
  
  SetBegin(504);
  SetText(kBarcodeTypeNone,"-");
  SetText(kBarcodeCode128,"Code 128");
  SetText(kBarcodeCode39,"Code 39");
  EndSet;

  SetBegin(505);
  SetText(kCalculateTax,"Calculate");
  SetText(kDoNotCalculateTax,"Don't calculate");
  EndSet;
  
  StrSetBegin(506);
  StrSetText(NPTSIVCashDClass,"POS Invoice");
  EndStrSet;

  StrSetBegin(506); //465 Subset for Books
  StrSetText(NPTSIVCashDClass,"POS Invoice");
  EndStrSet;

  SetBegin(507); //subset of set 71
  SetText(0,"Master Control");
  SetText(3,"Счёт-фактура"); 
  SetText(8,"POS Invoices Touch Screen"); 
  EndSet;
  
  SetBegin(508);
  SetText(kAssetTransTypeNone,"None");
  SetText(kAssetTransTypeNewAsset,"New Asset");
  SetText(kAssetTransTypeUpdateAsset,"Update Asset");
  SetText(kAssetTransTypeRevaluateAsset,"Revaluate Asset");
  EndSet;

  SetBegin(509);
  SetText(kNonTREO,"Non-TREO");
  SetText(kTREO,"TREO");
  EndSet;

  return;
end;

#endif
