/* epengm.hal */
/* This is no longer an Event, make sure you don't have this in */
external function Boolean HasDeveloperMode();
external function Boolean HasPersons();
external function Boolean HasModQT();
external function Boolean HasSerialNumbers();
external function Boolean HasModAT2();
external function Boolean HasModCL();
external function Boolean HasModCO();
external function Boolean HasStandardCRM();
external function Boolean HasModExp();
external function Boolean HasSalesmanBonus();
external function Boolean HasStandardOrganizer();
external function Boolean HasStandardCommunicator();
external function Boolean HasModSO();
external function Boolean HasModIN();
external function Boolean HasModNL();
external function Boolean HasModSL();
external function Boolean HasModPL();
external function Boolean HasModPO();
external function Boolean HasModPOS();
external function Boolean HasModRest();
external function Boolean HasModCRM();
external function Boolean HasEMail();
external function Boolean HasModSVO();
external function Boolean HasModProd();
external function Boolean HasModTS();
external function Boolean HasModDI();

external function Boolean HasAccessGroups();
external function Boolean HasAccountRecon();
external function Boolean HasAdvancedPricing();
external function Boolean HasBase2();
external function Boolean HasCategories();
external function Boolean HasConsStockMoveInvoices();
external function Boolean HasContactClassification();
external function Boolean HasFormEditor();
external function Boolean HasItemClassification();
external function Boolean HasItemGroups();
external function Boolean HasKPIs();
external function Boolean HasLanguages();
external function Boolean HasLocalMachines();
external function Boolean HasMultiCurrency();
external function Boolean HasMultiLocations();
external function Boolean HasNumberSeries();
external function Boolean HasObjects();
external function Boolean HasPriceLists();
external function Boolean HasRemoteBackup();
external function Boolean HasReturnedGoods();
external function Boolean HasRetGoodsToSupp();
external function Boolean HasVarieties();
external procedure SetProductTags();
external procedure LoadWindowTags();

//event startup
begin

  SetLangMode(LangRussian,"RUS",0);

  if (BuildProductCode=="TBAS") then begin
  record CYBlock CYb;

  SetProductTags;
  LoadWindowTags;

  SetGlobalBoolean("IsEnterprise",false);
  
  SetWhiteLabelProduct(true);

/* The modules should keep there codes even if we rename the modules. The code is part of the Export format */

  if (HasModAT2) then begin
    Module("Assets","",730,modAT2);
  end;
  if (HasModCL) then begin
    Module("Cash Book","",730,modCL);
  end;
  if (HasModCRM or HasCalendar) then begin
    Module("Calendar","",730,modCAL); //!!TRANSLATE
  end;
  if (HasModCRM or HasStandardCRM) then begin
    Module("CRM","",730,modCRM);
  end;
  
  Module("Database Maintenance","",730,modDBMain);   //!!TRANSLATE
  if (HasEMail) then begin
    Module("Email","",730,modEmail);
  end;
  if (HasModExp) then begin
    Module("Expenses","",730,modExp);
  end;
  if (HasModTS) then begin
    Module("Job Costing","",730,modTS); //!!TRANSLATE
  end;
  if (HasModNL) then begin
    Module("#Nominal Ledger#","",730,modNL);
  end;
   if (HasModDI) then begin
    Module("Pricing","",730,modDI);
  end;
  if (HasModPOS) then begin
    Module("Point of Sales","",730,modPOS); //!!TRANSLATE
  end;
  if (HasModProd) then begin
    Module("Production","",730,modProd); //!!TRANSLATE
  end;
  if (HasModPL) then begin
    Module("#Purchase Ledger#","",730,modPL);
  end;
  if (HasModPO) then begin
    Module("Purchase Orders","",730,modPO);
  end;
  if (HasModQT) then begin
    Module("Quotations","",730,modQT); //!!TRANSLATE
  end;
  if (HasModSL) then begin
    Module("#Sales Ledger#","",730,modSL);
  end;
  if (HasModSO) then begin
    Module("Sales Orders","",730,modSO);
  end;
  if (HasModSVO) then begin
    Module("Service Orders","",730,modSVO); //!!TRANSLATE
  end;
  if (HasModIN) then begin
    Module("#Stock#","",730,modIN);
  end;
  Module("System","",730,modSY);


  // debug
  BlockLoad(CYb);
/* modSY */

  Register("Companies","Companies",CompaniesTClass,modSY); //!!TRANSLATE
  RegisterWS("Persons","Persons","New Person",UserVc,modSY); //!!TRANSLATE
  RegisterWS("Accounts","Accounts","New Account",AccVc,modSY); //!!TRANSLATE
  RegisterWS("Tags/Objects","Tags/Objects","New Tag/Object",ObjVc,modSY); //!!TRANSLATE
  RegisterWS("Currencies","Currencies","New Currency",CurncyCodeVc,modSY); //!!TRANSLATE
  RegisterWS("Exchange Rates","Exchange Rates","New Exchange Rate",ERVc,modSY); //!!TRANSLATE
  RegisterWS("Form Templates","Form Templates","New Form Template",DocVc,modSY); //!!TRANSLATE
  RegisterWS("Activities","Activities","New Activity",ActVc,modSY); //!!TRANSLATE

  Setting("Access Groups",AccessLClass,modSY);
  Setting("Active Users",ListUsersClass,modSY);
  Setting("Auto Actions",AutoActionTClass,modSY); //!!TRANSLATE
  Setting("Backup Settings",BackupSettingsTClass,modSY); //!!TRANSLATE
  Setting("#Bank Holidays#",BHollLClass,modSY); //!!TRANSLATE
  Setting("Base Currency",BaseCurTClass,modSY);
  Setting("Base Currency Rates",BaseERLClass,modSY);  
  Setting("Cloud Services",EnabServerTClass,modSY); //!!TRANSLATE
  Setting("Cloud Services Settings",EInvoiceTClass,modSY); //!!TRANSLATE
  Setting("Company Date and Numeric Format",SysFormatTClass,modSY);
  Setting("Company Info",CYWClass,modSY);
  Setting("Company Timezone",CompanyTimezoneTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Accounts and #VAT Code#",ConvAccTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Activity Types",ConvActTypeTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Contact Classifications",ConvCustClassTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Contacts",ConvCustTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Currency Codes",ConvCurncyCodeTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Items",ConvItemTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Locations",ConvLocationTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Master",ConvMasterTClass,modSY);
  Setting("Conversions - Tags/Objects",ConvObjTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Quotation Classes",ConvQuoteClassTClass,modSY); //!!TRANSLATE
  Setting("Conversions - #Suppliers#",ConvVendTClass,modSY); //!!TRANSLATE
  Setting("Conversions - Users",ConvUserTClass,modSY); //!!TRANSLATE
  Setting("Countries",CountryLClass,modSY); //!!TRANSLATE
  Setting("Countries Regions",CountryRegionLClass,modSY); //!!TRANSLATE
  Setting("Currency Round Off",CurncyRoundOffTClass,modSY); //!!TRANSLATE
  Setting("Days and Months",DNMLClass,modSY); //!!TRANSLATE
  Setting("Default Values Decimals (old)",DefValDecimalsTClass,modSY); //!!TRANSLATE
  Setting("Departments",DepLClass,modSY); //!!TRANSLATE
  Setting("Discount Options",GeneralOptionTClass,modSY); //!!TRANSLATE
  Setting("Display Groups",CalDispGroupTClass,modSY); //!!TRANSLATE
  Setting("Exchange Rates Settings",ERTClass,modSY); //!!TRANSLATE
  Setting("Form Settings",FormTClass,modSY); //!!TRANSLATE
  Setting("Global Warnings on UnOKed Records",UnOkWarnTClass,modSY); //!!TRANSLATE
  if (!WindowsMode) then begin
    Setting("Job Status",JobStatusClass,modSY); //!!TRANSLATE
  end;
  Setting("Journaling",JournalClass,modSY); //!!TRANSLATE
//  Setting("",KPIDefLClass,modSY);
  Setting("Languages",LangTClass,modSY);
  Setting("Locking",DBLockTClass,modSY);
  Setting("Locking Exceptions",LockExceptTClass,modSY); //!!TRANSLATE
  if (HasLocalization("SVN")) then begin
    Setting("Main Premise",CYAWClass,modSY); //!!TRANSLATE
  end;
  Setting("Number Series Defaults",SRTClass,modSY); //!!TRANSLATE
  Setting("Opened Windows History",OpenWindowsHistoryOClass,modSY); //!!TRANSLATE
  Setting("Optional Features",UXFTClass,modSY); //!!TRANSLATE
  Setting("Page Setup",PageSetupTClass,modSY); //!!TRANSLATE
  Setting("Password Security",PasswdSetTClass,modSY); //!!TRANSLATE
  Setting("Persons' Costs",CostUserLClass,modSY); //!!TRANSLATE
  Setting("Printer Settings",PrinterSettingsWClass,modSY); //!!TRANSLATE
  Setting("Printers",PrintGroupTClass,modSY); //!!TRANSLATE
  if (HasRemoteBackup) then begin
    Setting("Remote Backups",RemoteBackupsSClass,modSY); //!!TRANSLATE
  end;
  Setting("Reporting Periods",PeriodTClass,modSY);
  Setting("Round Off",RoundTClass,modSY); //!!TRANSLATE
  Setting("Sales Groups",SalesGroupLClass,modSY); //!!TRANSLATE
  Setting("Single Functions",OneFunctionLClass,modSY); //!!TRANSLATE
  Setting("Special Days",SpecDayLClass,modSY); //!!TRANSLATE
  Setting("Styles",StyleLClass,modSY);
  Setting("Sub-ledger Control Accounts",SLAccTClass,modSY);
  Setting("Task Manager Access",TodoAccessLClass,modSY); //!!TRANSLATE
  Setting("User Warnings on UnOKed Records",UserUnOkWarnLClass,modSY); //!!TRANSLATE
  Setting("Values in Text",LangNrLClass,modSY);
  Setting("#VAT Reg. Number# Masks",VATMaskTClass,modSY); //!!TRANSLATE
  Setting("Weeks",WeekLClass,modSY); //!!TRANSLATE
  if (HasLocalization("HRV,SVN,SRB")) then begin
    Setting("XML Schema Definitions",XMLExportLClass,modSY);
  end;

  Report("Access Control",UserAccessRClass,UserAccessRn,0,modSY); //!!TRANSLATE
  Report("Activities, Persons",ActPersRClass,ActPersRn,0,modSY);
  Report("Company Info",CompInfoRClass,CompInfoRn,0,modSY);
  Report("Electronic Invoices Setup Status",EInvSetupStatusRClass,EInvSetupStatusRn,0,modSY); //!!TRANSLATE
  Report("Exchange Rates",ERDateRClass,ERDateRn,0,modSY); //!!TRANSLATE
  Report("Job Status",JobStatusRClass,JobStatusRn,0,modSY); //!!TRANSLATE
  Report("Numbers per Machine",NrsperMachineRClass,NrsperMachineRn,0,modSY); //!!TRANSLATE
  Report("Person List",UserRClass,UserRn,0,modSY);
  Report("Services Test",ServicesTestRClass,ServicesTestRn,0,modSY); //!!TRANSLATE
  Report("Subsystems Checking",Check1TRRClass,Check1TRRn,0,modSY); //!!TRANSLATE
//  Report("",SyncCheckRClass,SyncCheckRn,0,modSY);
//  Report("",SyncStatusRClass,SyncStatusRn,0,modSY);
  Report("Sync Client Status",SyncClientStatusRClass,SyncClientStatusRn,0,modSY); //!!TRANSLATE
  Report("System Documentation",SysRClass,SysRn,0,modSY); //!!TRANSLATE
  Report("Transaction Checking",Check2TRRClass,Check2TRRn,0,modSY); //!!TRANSLATE
  Report("User Activities",UserActRClass,UserActRn,0,modSY); //!!TRANSLATE
  Report("User Login History",UserHistRClass,UserHistRn,0,modSY); //!!TRANSLATE

  Document("Mail",MailRClass,MailForm,MailFClass,modSY); //!!TRANSLATE

  Export("Client Text Backup",TBEClass,ClientTBEn,modSY); //!!TRANSLATE
  Export("Company Text Backup",TBCompanyEClass,CompanyTBEn,modSY); //!!TRANSLATE
  Export("Database Text Backup",TBDatabaseEClass,DatabaseTBEn,modSY);
  Export("Database Text Backup Without Data Warehouse",TBDatabaseEClass,DatabaseTBNoDWHEn,modSY); //!!TRANSLATE
  Export("Raw Data",TBRawDataEClass,RawDataEn,modSY); //!!TRANSLATE
  Export("Run Timed Backup",TBRunTimedEClass,RunTimedTBEn,modSY); //!!TRANSLATE

  Import("Automatic",FullyAutIn,FullyAutIn,modSY);// if we put it like that we will be able to make access systme working
  Import("Manual file search",AutIn,AutIn,modSY);// if we put it like that we will be able to make access systme working

  Maintenance("Create #N/L# Transactions",TransGenVClass,GenTransMn,modSY);
  Maintenance("Delete Old Transactions",DelTransVClass,DelTransMn,modSY); //!!TRANSLATE
  if (HasLocalization("HRV")) then begin
    Maintenance("Invoices without Official No.",XMLExportVClass,XMLExportMn,modSY);
  end;

  // debug
  if (HasDeveloperMode) then begin
    Setting("Cloud Services",EnabServerTClass,modSY);
    Setting("Configuration",ModulesTClass,modSY);
    Setting("Current License Flags",CurLicensesClass,modSY);
    if (IsUsingActivationCodes==false) then begin
      Setting("Internet Enablers",InternetEnablerTClass,modSY);
    end;
    Setting("Licenses",LicensesLClass,modSY);
    Register("Mailboxes","Mailboxes",ConferenceWClass,modSY);
    Setting("Services Cache",ServiceCacheLClass,modSY);
    Setting("Std Registration Data",StdRegDataWClass,modSY);
  end;

  
/* modAT2 */

  RegisterWS("Assets","Assets","New Asset",AT2UnitVc,modAT2);
  RegisterWS("Asset Categories","Asset Categories","New Asset Category",AT2Vc,modAT2);
  RegisterWS("Asset Disposals","Asset Disposals","New Asset Disposal",AT2WrofVc,modAT2);
  RegisterWS("Asset Revaluations","Asset Revaluations","New Asset Revaluation",AT2DprVc,modAT2);
  RegisterWS("Asset Status","Asset Status","New Asset Status",AT2TakeVc,modAT2);
  Register("Asset Transactions","Asset Transactions",AT2TransVc,modAT2);   //!!TRANSLATE
  RegisterWS("Depreciation Models","Depreciation Models","New Depreciation Model",DprModVc,modAT2);

  Setting("Account Usage Assets",AT2AccTClass,modAT2);
  Setting("Asset Classifications",AT2ClassLClass,modAT2); //!!TRANSLATE
  Setting("Asset Display Groups",AT2DispGroupTClass,modAT2);
  Setting("Assets #N/L# Classes",AC2TClass,modAT2);
  Setting("Contacts",CULClass,modAT2);
  Setting("Departments",DepLClass,modAT2);
  Setting("Inflation Coefficients",ATCoeffLClass,modAT2); //!!TRANSLATE
  Setting("Number Series - Asset Disposals",AT2WrofSerTClass,modAT2);
  Setting("Number Series - Asset Revaluations",AT2DprSerTClass,modAT2);
  Setting("Number Series - Asset Status",AT2TakeSerTClass,modAT2);
  Setting("Number Series - Revaluation Factors",AT2RevSerTClass,modAT2);
  Setting("Revaluation Factors",AT2RevLClass,modAT2);
  Setting("Revaluation Run Lists",AT2RevListLClass,modAT2);

  Report("Accumulated Category Depreciation",AT2CatAcumRClass,AT2CatAcumRn,0,modAT2); //!!TRANSLATE
  Report("Asset at Point in Time",AssetAtTimeRClass,AssetAtTimeRn,0,modAT2); //!!TRANSLATE
  Report("Asset History",AT2HistRClass,AT2HistRn,0,modAT2);
  Report("Asset List",AT2ListRClass,AT2ListRn,0,modAT2);
  Report("Asset Status",AT2HistPortRClass,AT2HistPortRn,0,modAT2);
  Report("Department Summary",AT2DepRClass,AT2DepSumRn,0,modAT2);
  Report("Depreciation Plan",AT2DeprPlanRClass,AT2DeprPlanRn,0,modAT2);
  Report("Depreciations Report",AT2DeprRClass,AT2DeprRn,0,modAT2);
  Report("Disposals Journal",AT2WriteJRClass,AT2WriteJRn,0,modAT2);
  Report("Insurance Value Report",AT2InsValRClass,AT2InsValRn,0,modAT2);
  Report("Missing Asset from Rental Item",MissingAssetRClass,MissingAssetRn,0,modAT2); //!!TRANSLATE
  Report("Responsible Person List",AT2RespPersRClass,AT2RespPersRn,0,modAT2); //!!TRANSLATE
  Report("Responsible Person Summary",AT2CatRespRClass,AT2CatRespRn,0,modAT2); //!!TRANSLATE
  Report("Sim. Preview - Depreciations",AT2GenSMRClass,AT2GenSMRn,0,modAT2);
  Report("#Stocktaking# List, Assets",AT2StockTakeRClass,AT2StockTakeRn,0,modAT2);
  Report("Subsidy Assets",AT2SubRClass,AT2SubRn,0,modAT2);
  Report("Tax Depreciation",TaxDeprRClass,TaxDeprRn,0,modAT2);
  Report("Trans. Preview - Depreciations",AT2GenTRRClass,AT2GenTRRn,0,modAT2);
  Report("Update Department on Asset",DeptAssetRClass,DeptAssetRn,0,modAT2);

  Document("Asset Disposals",AT2WrofRClass,AT2WrofForm,AT2WrofFClass,modAT2);
  Document("Asset Forms",AT2InRClass,AT2InForm,AT2InFClass,modAT2);
  Document("Asset put in use",AT2RClass,AT2Form,AT2FClass,modAT2);
  Document("Asset Status",AT2TakeRClass,AT2TakeForm,AT2TakeFClass,modAT2);  
  Document("Revaluations Factors",AT2RevRClass,AT2RevForm,AT2RevFClass,modAT2);

  Maintenance("Create Depreciation Simulations",AT2GenSMVClass,AT2GenSMMn,modAT2);
  Maintenance("Create Depreciation Transactions",AT2GenTRVClass,AT2GenTRMn,modAT2);
  Maintenance("Create Put in use Transactions",AT2PutinVClass,AT2PutinMn,modAT2);
  Maintenance("Revalue Asset Acquisition Value",AT2ReevalVClass,AT2ReevalMn,modAT2);
  Maintenance("Update Department on Asset",DeptAssetVClass,DeptAssetMn,modAT2);
  Maintenance("Update Purchase Value on Asset",AT2PurchValVClass,AT2PurchValMn,modAT2);

  Export("Export to new Fixed Assets Module",ATVcEClass,ATVcEn,modAT2);

/* modCL */

  RegisterWS("Cash In","Cash In","New Cash In",CLInVc,modCL); //!!TRANSLATE
  RegisterWS("Cash Out","Cash Out","New Cash Out",CLOutVc,modCL); //!!TRANSLATE
  RegisterWS("Receipts","Receipts","New Receipt",IPVc,modCL); //!!TRANSLATE
  RegisterWS("Payments","Payments","New Payment",OPVc,modCL); //!!TRANSLATE
  RegisterWS("Personnel Payments","Personnel Payments","New Personnel Payment",PPVc,modCL); //!!TRANSLATE
  RegisterWS("Simulations","Simulations","New Simulation",SMVc,modCL); //!!TRANSLATE
  Register("Account Reconciliation","Account Reconciliation",BankRecWClass,modCL);
  RegisterWS("Forex Trans.","Forex","New Forex Transaction",ForexTRVc,modCL); //!!TRANSLATE
  
  Setting("Cash Book Settings",MainCLTClass,modCL);
  Setting("Credit Cards",CreditCardLClass,modCL); //!!TRANSLATE
  Setting("Expense Accounts",CLCorspLClass,modCL);
  Setting("Legal Cash In No.",LegalCLInNrTClass,modCL); //!!TRANSLATE
  Setting("Number Series - Cash In",CLInSerTClass,modCL);
  Setting("Number Series - Cash Out",CLOutSerTClass,modCL);
  Setting("Number Series - Forex Transactions",ForexTRSerTClass,modCL); //!!TRANSLATE
  Setting("Payment Modes",PMTClass,modCL);
  
  Report("Cash Book",CLIORClass,CashBRn,0,modCL); /* needs some RUSlish strings. */
  Report("Cash In Journal",CLInJRClass,CLInJRn,0,modCL);  
  Report("Cash Out Journal",CLOutJRClass,CLOutJRn,0,modCL);  
  Report("Cash Report",DayBalCashRClass,DayBalCashRn,0,modCL); //!!TRANSLATE
  Report("Corresponding Accounts List",CCtasRClass,CCtasRn,0,modCL);   //!!TRANSLATE
  Report("Invoices with Cash In",IVCLInRClass,IVCLInRn,0,modCL); //!!TRANSLATE
  Report("Invoices with Cash Out",VICLOutRClass,VICLOutRn,0,modCL); //!!TRANSLATE
  Report("Invoices without Cash In",IVnoCLInRClass,IVnoCLInRn,0,modCL); //!!TRANSLATE
  Report("Invoices without Cash Out",VInoCLOutRClass,VInoCLOutRn,0,modCL); //!!TRANSLATE
  Report("Liquidity Forecast",LiquidityRClass,LiquidityRn,0,modCL); //!!TRANSLATE
  Report("#N/L# Cash Book",CashBookLatRClass,CashBookLatRn,0,modCL);

  Document("Cash In",CLInRClass,CLInForm,CLInFClass,modCL);
  Document("Cash In Invoices",CLIn2RClass,CLIn2Form,CLIn2FClass,modCL); //!!TRANSLATE
  Document("Cash In Receipts",CLIn1RClass,CLIn1Form,CLIn1FClass,modCL); //!!TRANSLATE
  Document("Cash Out",CLOutRClass,CLOutForm,CLOutFClass,modCL);
  Document("Cash Out Invoices",CLOut2RClass,CLOut2Form,CLOut2FClass,modCL); //!!TRANSLATE
  Document("Cash Out Payments",CLOut1RClass,CLOut1Form,CLOut1FClass,modCL); //!!TRANSLATE
  Document("Cash Out Personnel Payments",CLOut3RClass,CLOut3Form,CLOut3FClass,modCL); //!!TRANSLATE

  Maintenance("OK Cash Ins and Cash Outs",OKCLVClass,OKCLMn,modCL);

/* modCRM */

  RegisterWS("Target Time","Target Time","New Target Time",TargTimeVc,modCRM); //!!TRANSLATE
  RegisterWS("Customer Letters","Customer Letters","New Customer Letter",LetVc,modCRM); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modCRM); //!!TRANSLATE
  RegisterWS("Standard Texts","Standard Texts","New Standard Text",LTxtVc,modCRM); //!!TRANSLATE
  RegisterWS("Standard Periods","Standard Periods","New Standard Period",StdPeriodVc,modCRM); //!!TRANSLATE
  RegisterWS("Mailing Lists","Mailing Lists","New Mailing List",PersColVc,modCRM); //!!TRANSLATE
  RegisterWS("Contact Relations","Contact Relations","New Contact Relation",ContactRelVc,modCRM); //!!TRANSLATE
  RegisterWS("Opportunities","Opportunities","New Opportunity",OYVc,modCRM); //!!TRANSLATE

  Report("Activities Journal",ActJRClass,ActJRn,0,modCRM); //!!TRANSLATE
  Report("Activities Check, Persons",UserActCheckRClass,UserActCheckRn,0,modCRM); //!!TRANSLATE
  Report("Activities, Contacts",ActCURClass,ActCURn,0,modCRM);
  Report("Activities, Period", ActWeekRClass,ActWeekRn,0,modCRM); //!!TRANSLATE
  Report("Activities, Persons",ActPersRClass,ActPersRn,0,modCRM); // Shouldn't this be only in System?
  Report("Activity Type List",ActTypeRClass,ActTypRn,0,modCRM); //!!TRANSLATE
  Report("Birthday List",BirthDayRClass,BirthDayRn,0,modCRM);
  Report("Calendar Booking History",ActCalBookRClass,ActCalBookRn,0,modCRM); //!!TRANSLATE
  Report("Contact List",CURClass,CustRn,0,modCRM);
  Report("Contact List for all Companies",CUforAllCompaniesRClass,CustforAllCompaniesRn,0,modCRM);//internal use //!!TRANSLATE
  Report("Customer Sales Statistics",CustSalesRClass,CustSalesRn,0,modCRM); //!!TRANSLATE
  Report("Customer Statistics",CustSTRClass,CustSTRn,0,modCRM);
  Report("Customer Status",CustPSRClass,CustPSRn,0,modCRM);
  Report("Customer/Item Statistics",CuArtSTRClass,CuArtSTRn,0,modCRM);
  Report("Customers without/with Activities",NoActCURClass,NoActCURn,0,modCRM); //!!TRANSLATE
  Report("Employee Calendar",ActCalStaffRClass,ActCalStaffRn,0,modCRM); //!!TRANSLATE
  Report("Employee Time Statistics",EMTimeStatRClass,EMTimeRn,0,modCRM); //!!TRANSLATE
  Report("Item/Salesman Statistics",IStatRClass,IStatRn,0,modCRM);
  Report("Letter List",LetInfoRClass,LetInfoRn,0,modCRM); //!!TRANSLATE
  Report("List Invalid Phone Numbers",InvPhoneNoRClass,InvPhoneNoRn,0,modCRM);
  Report("Monthly Consulting",MonthConsultRClass,MonthConsultRn,0,modCRM); //!!TRANSLATE
  Report("Monthly Consulting Result",MonthConsultResRClass,MonthConsultResRn,0,modCRM); //!!TRANSLATE
  Report("Monthly Sales",MonthSalesRClass,MonthSalesRn,0,modCRM); //!!TRANSLATE
  Report("Monthly Sales Result",MonthSalesResRClass,MonthSalesResRn,0,modCRM); //!!TRANSLATE
  Report("Monthly Support",MonthSupportRClass,MonthSupportRn,0,modCRM); //!!TRANSLATE
  Report("Personal Calendar",ActCalRClass,ActCalRn,0,modCRM);
  Report("Recurring Tasks",ActReqListRClass,ActReqListRn,0,modCRM); //!!TRANSLATE
  Report("Search for Contact Person",SearchContactRClass,SearchContactRn,0,modCRM);
  Report("SIP Extensions, Persons",SIPUserRClass,SIPUserRn,0,modCRM); //!!TRANSLATE
  Report("Switchboard Calls",SwitchboardCallsRClass,SwtchbrdCallsRn,0,modCRM); //!!TRANSLATE
  Report("Target Time List",TargTimeJRClass,TargTimeJRn,0,modCRM); //!!TRANSLATE
  Report("Telephone List",TeleRClass,TeleRn,0,modCRM); //!!TRANSLATE
  Report("Who has bought/not bought",NoSalesRClass,NoSalesRn,0,modCRM); //!!TRANSLATE

  Setting("Activity Classes",ActTypeGrLClass,modCRM);
  Setting("Activity Consequences",ActSeqLClass,modCRM); //!!TRANSLATE
  Setting("Activity Priorities",ActPrioLevelTClass,modCRM); //!!TRANSLATE
  Setting("Activity Types",ActTypeLClass,modCRM);
  Setting("Activity Types, Subsystems",ASTTClass,modCRM); //!!TRANSLATE
  Setting("Additional Email Recipients",EmailRecipLClass,modCRM); //!!TRANSLATE
  Setting("Classification Types",CTypeLClass,modCRM); //!!TRANSLATE
  Setting("Company Workflow Overview",PipelineOverviewTClass,modCRM); //!!TRANSLATE
  Setting("Contact Classifications",CClassLClass,modCRM);
  Setting("Contact Settings",CustomerSettingTClass,modCRM); //!!TRANSLATE
  Setting("Contact Sync",ContactSyncLClass,modCRM); //!!TRANSLATE
  Setting("Customer Letter Senders",LetSenderTClass,modCRM); //!!TRANSLATE
  Setting("CRM Settings",CRMTClass,modCRM); //!!TRANSLATE
  Setting("Courtesy Titles",CourtesyTitlesTClass,modCRM); //!!TRANSLATE
  Setting("Customer Categories",CCatLClass,modCRM);
  Setting("Default Activity Text Codes",CompTextTypeLClass,modCRM); //!!TRANSLATE
  Setting("#Favourite# Activity Types",FavActTypeLClass,modCRM); //!!TRANSLATE
  Setting("Global CRM Settings",GlobalCRMTClass,modCRM); //!!TRANSLATE
  Setting("Industry",IndustryLClass,modCRM); //!!TRANSLATE
  Setting("Lead",CULeadLClass,modCRM); //!!TRANSLATE
  Setting("Lead Source",LeadSourceLClass,modCRM); //!!TRANSLATE
  Setting("Lead Status",LeadStatusLClass,modCRM); //!!TRANSLATE
  Setting("Info in Customer Status Report",CustPSLClass,modCRM);
  Setting("Info in #Supplier# Status Report",VEPSLClass,modCRM); //!!TRANSLATE
  Setting("Job Titles",JobTitleLClass,modCRM); //!!TRANSLATE
  Setting("Lead Registration",LeadRegistTClass,modCRM); //!!TRANSLATE
  Setting("Media Types",MediaTypeLClass,modCRM); //!!TRANSLATE
  Setting("Map Setting",MapBlockTClass,modCRM); //!!TRANSLATE
  Setting("Monthly Forecast",ForecastUserLClass,modCRM); //internal //!!TRANSLATE
  Setting("Monthly Result",ResultUserLClass,modCRM); //internal //!!TRANSLATE
  Setting("Number Series - Activities, #N/L# Transactions",ActNLSerTClass,modCRM); //!!TRANSLATE
  Setting("Number Series - Customer Letters",LetSerTClass,modCRM); //!!TRANSLATE
  Setting("Number Series - Opportunities",OYSerTClass,modCRM); //!!TRANSLATE
  Setting("Normalized Phone Numbers",NormPhoneNumLClass,modCRM); //!!TRANSLATE
  Setting("Telephony Settings",CompPhonePrefsTClass,modCRM); //!!TRANSLATE
  Setting("Text Types",TextTypeLClass,modCRM);
  Setting("User Defined Fields - Activities",ActUserLabelTClass,modCRM); //!!TRANSLATE
  Setting("User Defined Fields - Contacts",CUUserLabelTClass,modCRM);
  Setting("User Defined Fields - Items",INUserLabelTClass,modCRM); //!!TRANSLATE
  Setting("User Workflow Overview",UserPipelineOverviewLClass,modCRM); //!!TRANSLATE
  Setting("User Settings - Monthly Report",MonthlyUserSetLClass,modCRM); //!!TRANSLATE

  Document("Activities",ActDocRClass,ActDocForm,ActDocFClass,modCRM);
  Document("Contact Labels",CoLabRClass,CoLabForm,CoLabFClass,modCRM);
  Document("Customer Letters",LetRClass,LetForm,LetFClass,modCRM); //!!TRANSLATE
  Document("Customer/#Supplier# Labels",CuLabRClass,CuLabForm,CuLabFClass,modCRM); //!!TRANSLATE

  Maintenance("Add Classification to Contacts",NoSalesVClass,NoSalesMn,modCRM); //!!TRANSLATE
  Maintenance("Apply Standard Period",ApyStdPeriodMClass,ApyStdPeriodMn,modCRM); //!!TRANSLATE
  Maintenance("Close Contacts",CloseCUVClass,CloseCUMn,modCRM); //!!TRANSLATE
  Maintenance("Create Mails from Activities",ActToMailVClass,ActToMailMn,modCRM); //!!TRANSLATE
  Maintenance("Mass Emailing",MassMailVClass,MassMailMn,modCRM); //!!TRANSLATE
  Maintenance("Move Activities to Another Company",ActMoveCompVClass,ActMoveCompMn,modCRM); //!!TRANSLATE
  Maintenance("OK Period",OkPeriodVClass,OkPeriodMn,modCRM); //!!TRANSLATE
  Maintenance("Rebuild Number Recognition Register",NormPhoneNumVClass,NormPhoneNumMn,modCRM);
  Maintenance("Remove Classification from Contacts",RemoveClassCUMClass,RemoveClassMn,modCRM); //!!TRANSLATE
  Maintenance("Update Activities",UpdateActVClass,UpdateActMn,modCRM); //!!TRANSLATE
  Maintenance("Update Contact Data",UpdContactVClass,UpdContactMn,modCRM); //!!TRANSLATE


/* modEmail */

  RegisterWS("Email Aliases","Email Aliases","New Email Alias",EmailAliasVc,modEmail); //!!TRANSLATE
  RegisterWS("POP3 Servers","POP3 Servers","New POP3 Server",Pop3ServVc,modEmail); //!!TRANSLATE
  Register("Email Queue","Email Queue",EMailQueVc,modEmail);
  Register("Mailboxes","Mailboxes",ConferenceWClass,modEmail);
  RegisterWS("Available Chat Users","Available Chat Users","New Available Chat User",ExtChatUsersVc,modEmail); //!!TRANSLATE
  RegisterWS("HTML Templates","HTML Templates","New HTML Template",HtmlTemplateVc,modEmail); //!!TRANSLATE

  Setting("Attached Files",Attach2LClass,modEmail); //!!TRANSLATE
  Setting("Auto Replies",ConfAutoReplyLClass,modEmail); //!!TRANSLATE
  Setting("Conference Access Groups",ConfAccLClass,modEmail); //!!TRANSLATE
  Setting("Email Addresses",EmailAddrLClass,modEmail); //!!TRANSLATE
  Setting("Email SMTP Server",EmailTClass,modEmail);
  Setting("Gateway Settings",GatewayTClass,modEmail); //!!TRANSLATE
  Setting("Mail and Conference Settings",MailSettingsTClass,modEmail); //!!TRANSLATE
  Setting("Mail Tags",MailTagLClass,modEmail); //!!TRANSLATE
  Setting("Mail Texts",MailTextLClass,modEmail); //!!TRANSLATE
  Setting("Mailbox Browse",ConfLClass,modEmail); //!!TRANSLATE
  Setting("Number Series - Mails",MailSerTClass,modEmail);   //!!TRANSLATE
  Setting("Presentations",ConfPresLClass,modEmail); //!!TRANSLATE
  Setting("Signatures",ConfSignLClass,modEmail); //!!TRANSLATE

  Report("Active Chats",ChatRClass,ChatRn,0,modEmail); //!!TRANSLATE
  Report("Attached Files",Attach2RClass,Attach2Rn,0,modEmail); //!!TRANSLATE
  Report("Conference Access",ConfAccessRClass,ConfAccessRn,0,modEmail); //!!TRANSLATE
  Report("Email Aliases",EMailAliasRClass,EMailAliasRn,0,modEmail); //!!TRANSLATE
  Report("Email Queue List",EMailQueJRClass,EMailQueJRn,0,modEmail); //!!TRANSLATE
  Report("Email Validation Status",StdIDValidationStatusRClass,StdIDValidationStatusRn,0,modEmail); //!!TRANSLATE
  Report("Find Conference",FindConfRClass,FindConfRn,0,modEmail); //!!TRANSLATE
  Report("Mail Acceptance Status",MailAcptncStatRClass,MailAcptncStatRn,0,modEmail); //!!TRANSLATE
  Report("Mail Count",ConfCntRClass,ConfCntRn,0,modEmail); //!!TRANSLATE
  Report("Mail History",MailReadRClass,MailReadRn,0,modEmail); //!!TRANSLATE
  Report("Sent Email Queue",EmailQueListRClass,EmailQueListRn,0,modEmail); //!!TRANSLATE
  Report("Signatures",SignatureRClass,SignatureRn,0,modEmail); //!!TRANSLATE
  Report("Users missing Email Address",UserWOEmailAddressRClass,UserWOEmailAddressRn,0,modEmail); //!!TRANSLATE
  Report("User Conference Access",UserConfAccessRClass,UserConfAccessRn,0,modEmail); //!!TRANSLATE

  Document("Mail",MailRClass,MailForm,MailFClass,modEmail); //!!TRANSLATE

  Maintenance("Attached Files",Attach2VClass,Attach2Mn,modEmail); //!!TRANSLATE
  Maintenance("Change Default Mailbox Mail Format",ChMaiboxMailFmtVClass,ChMaiboxMailFmtMn,modEmail); //!!TRANSLATE
  Maintenance("Change Mailbox Name",ChMaiboxNameVClass,ChMaiboxNameMn,modEmail); //!!TRANSLATE
  Maintenance("Clean Up Mail Registers",CleanMailVClass,CleanMailMn,modEmail); //!!TRANSLATE
  Maintenance("Clean Up Orphan emails",CleanOrpanedEmailsVClass,CleanOrpanedEmailsMn,modEmail); //!!TRANSLATE
  Maintenance("Deactivate Auto Replies",DeactivateAutoRepliesVClass,DeactivateAutoRepliesMn,modEmail); //!!TRANSLATE
  Maintenance("Delete Email Queue", DelSentMailVClass,DelSentMailMn,modEmail); //!!TRANSLATE
  Maintenance("Empty Mailbox",MailboxCleanVClass,MailboxCleanMn,modEmail); //!!TRANSLATE
  Maintenance("Move Emails",MoveEmailVClass,MoveEmailMn,modEmail); //!!TRANSLATE
  Maintenance("Restore Deleted Mail",RestoreMailVClass,RestoreMailMn,modEmail); //!!TRANSLATE
  Maintenance("Send and Receive Email",SendAndRecVClass,SendAndRecMn,modEmail); //!!TRANSLATE
  Maintenance("Update Postmaster Mailbox",UpdPostmasterVClass,UpdPostmasterMn,modEmail); //!!TRANSLATE

// modExp

  RegisterWS("Expenses","Expenses","New Expense",ExpVc,modExp); //!!TRANSLATE
  RegisterWS("Personnel Payments","Personnel Payments","New Personnel Payment",PPVc,modExp); //!!TRANSLATE
  RegisterWS("#Mileages#","#Mileages#","New #Mileage#",WayListVc,modExp); //!!TRANSLATE
  RegisterWS("Daily Allowances","Daily Allowances","New Daily Allowance",DAVc,modExp); //!!TRANSLATE

  Report("Daily Allowances Journal",DAJRClass,DAJRn,0,modExp); //!!TRANSLATE
  Report("Expenses Journal",ExpJRClass,ExpRn,0,modExp);
  Report("Periodic Personnel Statement",PersPerRClass,PersPerRn,0,modExp); //!!TRANSLATE
  Report("Personnel Payment Journal",PPJRClass,PPRn,0,modExp);
  Report("#VAT Code# Statistics",ExpVATRClass,ExpVATRn,0,modExp);
  Report("Way List Journal",WLJRClass,WLJRn,0,modExp); //!!TRANSLATE

  Setting("Cars",WLCarLClass,modExp); //!!TRANSLATE
  Setting("Daily Allowance Rates",DARateLClass,modExp); //!!TRANSLATE
  Setting("Daily Allowance Setting",DATClass,modExp); //!!TRANSLATE
  Setting("Distances",WLDistLClass,modExp); //!!TRANSLATE
  Setting("Expense Settings",ExpTClass,modExp); //!!TRANSLATE
  Setting("Fuel Types",WLPetroilTClass,modExp); //!!TRANSLATE
  Setting("#Mileage# Settings",WLSettingsWClass,modExp); //!!TRANSLATE
  Setting("Number Series - Daily Allowances",DASerTClass,modExp); //!!TRANSLATE
  Setting("Number Series - Expenses",ExpSerTClass,modExp); //!!TRANSLATE
  Setting("Number Series - Personnel Payments",PPersSerTClass,modExp); //!!TRANSLATE
  Setting("Number Series - #Mileage#",WayListSerTClass,modExp); //!!TRANSLATE
  Setting("Purposes",WLPurposeLClass,modExp); //!!TRANSLATE

  Document("Daily Allowances",DARClass,DAForm,DAFClass,modExp); //!!TRANSLATE
  Document("Expenses",ExpRClass,ExpForm,ExpFClass,modExp);
  Document("Personnel Payment Receipts",PPRClass,PersPayForm,PPDFClass,modExp);
  Document("Way Lists",WayListRClass,WayListForm,WayListFClass,modExp); //!!TRANSLATE

/* modTS */

  RegisterWS("#Time Sheets#","#Time Sheets#","New #Time Sheet#",TSVc,modTS); //!!TRANSLATE
  RegisterWS("Projects","Projects","New Project",PRVc,modTS); //!!TRANSLATE
  Register("Project Transactions","Project Transactions",TBIVVc,modTS);
  RegisterWS("Project Budgets","Project Budgets","New Project Budget",TBBUVc,modTS); //!!TRANSLATE
  RegisterWS("Project Schedules","Project Schedules","New Project Schedule",PRScheduleVc,modTS); //!!TRANSLATE
  RegisterWS("Quotations","Quotations","New Quotation",QTVc,modTS); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modTS); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modTS); //!!TRANSLATE

  Setting("Account Usage J/C",PRAccClass,modTS); //!!TRANSLATE
  Setting("Customer Discount",CDLClass,modTS); //!!TRANSLATE
  Setting("Force Time Entry",ForceTimeEntryTClass,modTS); //!!TRANSLATE
  Setting("Info In Project Info Report",ProjInfoRepLClass,modTS); //!!TRANSLATE
  Setting("Item Groups",ITLClass,modTS);
  Setting("Item/Job Group Prices",TILClass,modTS); //!!TRANSLATE
  Setting("Job Group/Item Prices",TJGILClass,modTS); //!!TRANSLATE
  Setting("Job Groups",EGLClass,modTS); //!!TRANSLATE
  Setting("Number Series - Projects",PRSerTClass,modTS);
  Setting("Number Series - #Time Sheets#",TSSerTClass,modTS); //!!TRANSLATE
  Setting("Project Classes",PRClassTClass,modTS);
  Setting("Project Classification Types",PRClTypeLClass,modTS); //!!TRANSLATE
  Setting("Project Classifications",PRClLClass,modTS); //!!TRANSLATE
  Setting("Project Item Handling",PRITHandleClass,modTS); //!!TRANSLATE
  Setting("Project Phases",PRStageLClass,modTS); //!!TRANSLATE
  Setting("Project Settings",PRITClass,modTS);
  Setting("Specified Project Item Handling",PRITHLClass,modTS); //!!TRANSLATE
  Setting("Time Billing Price Formulae",TBPFormLClass,modTS); //!!TRANSLATE
  Setting("Time Billing Price Lists",TBPLDefLClass,modTS); //!!TRANSLATE
  Setting("Time Classes",TimeClassLClass,modTS); //!!TRANSLATE
  Setting("User Def. Field Labels - Project Managers",PrManagerLabelTClass,modTS); //!!TRANSLATE
  Setting("Work In Progress Control",WIPCheckTClass,modTS); //!!TRANSLATE

  Report("Budget Follow-up",BudFollPRClass,BudPFoll2Rn,0,modTS); // Rewritten version of above report
  Report("Employee Statistics",EMStatRClass,TSRn,0,modTS); //!!TRANSLATE
  Report("Employee Status",EmpStatusRClass,EmpStatusRn,0,modTS); //!!TRANSLATE
  Report("GP, Employees",GPEmpRClass,GPEmpRn,0,modTS); //!!TRANSLATE
  Report("GP, Projects",GPProRClass,GPProRn,0,modTS); //!!TRANSLATE
  Report("Project Actual vs Budget",PRActBudRClass,PRActBudRn,0,modTS); //!!TRANSLATE
  Report("Project Bonus",ProjBonusRClass,ProjBonusRn,0,modTS); //!!TRANSLATE
  Report("Project Invoicing",ProInvRClass,ProInvRn,0,modTS);
  Report("Project List",ProListRClass,PRListRn,0,modTS);
  Report("Project Price List",ProjPLRClass,ProjPLRn,0,modTS);
  Report("Project Profit & Loss",PRPLRClass,PRPLRn,0,modTS); //!!TRANSLATE
  Report("Project Purchases",PRPurRClass,PRPurRn,0,modTS); //!!TRANSLATE
  Report("Project #Purchase Orders#",PRPORClass,PRPORn,0,modTS); //!!TRANSLATE
  Report("Project Quotation/Budget",BUQTTBBURClass,BUQTTBBURn,0,modTS); //!!TRANSLATE
  Report("Project Revenue Recognition",PRRevRecRClass,PRRevRecRn,0,modTS); //!!TRANSLATE
  Report("Project Status",ProStatRClass,ProStatRn,0,modTS);
  Report("Project Transactions",PrTransRClass,PrTranRn,0,modTS);
  Report("Service Item Statistics",PrItemStatRClass,PrItemStatRn,0,modTS); //!!TRANSLATE
  Report("#Time Sheet# Journal",TSJRClass,TSJRn,0,modTS); //!!TRANSLATE
  Report("Validate Project Transactions",ChPrTransRClass,ChPrTransRn,0,modTS); //!!TRANSLATE

  Document("Project Budgets",TBBudgetRClass,TBBudgetForm,TBBudgetFClass,modTS);
  Document("Project Info",ProjectInfoRClass,ProjectInfoForm,ProjectInfoFClass,modTS);
  Document("Project Transactions",ProjectTransRClass,ProjectTransForm,ProjectTransFClass,modTS);
  Document("Projects",ProjectRClass,ProjectForm,ProjectFClass,modTS);
  Document("Project Schedules",PRScheduleRClass,PRScheduleForm,PRScheduleFClass,modTS); //!!TRANSLATE
  Document("Quotations",QTRClass,QTForm,QTFClass,modTS);
  Document("#Time Sheets#",TimeSheetRClass,TimeSheetForm,TimeSheetFClass,modTS); //!!TRANSLATE

  Maintenance("Build Project Transactions from Deliveries",BSHTSVClass,BSHTSMn,modTS); //!!TRANSLATE
  Maintenance("Change Project Currency",ChangePRCurVClass,ChangePRCurMn,modTS); //!!TRANSLATE
  Maintenance("Create Project Invoices",ProInvVClass,ProInvMn,modTS);

/* modNL */
  
  RegisterWS("Transactions","Transactions","New Transaction",TRVc,modNL); //!!TRANSLATE
  RegisterWS("Simulations","Simulations","New Simulation",SMVc,modNL); //!!TRANSLATE
  Register("Account Reconciliation","Account Reconciliation",BankRecWClass,modNL);
  RegisterWS("Accounts","Accounts","New Account",AccVc,modNL); //!!TRANSLATE
  RegisterWS("Tags/Objects","Tags/Objects","New Tag/Object",ObjVc,modNL); //!!TRANSLATE
  RegisterWS("Budgets","Budgets","New Budget",Bud1Vc,modNL); //!!TRANSLATE
  RegisterWS("Revised Budgets","Revised Budgets","New Revised Budget",Bud2Vc,modNL); //!!TRANSLATE
  Register("Payments Plan","Payments Plan",PlannedPaymentsWClass,modNL); //!!TRANSLATE
  Register("Bank Reconciliation","Bank Reconciliation",BankAccountReconWClass,modNL); //!!TRANSLATE

  Setting("Account Classifications",AccClassLClass,modNL); //!!TRANSLATE
  Setting("Account Classification Types",AccClassTypeLClass,modNL); //!!TRANSLATE
  Setting("Account Short Codes",ACShortLClass,modNL); //!!TRANSLATE
  Setting("Account Transfers",AccTransLClass,modNL);
  Setting("Accounting Periods",AccPeriodLClass,modNL); //!!TRANSLATE
  Setting("Autotransactions",AutLClass,modNL); //!!TRANSLATE
  Setting("Auto Eliminations",AccElimLClass,modNL); //!!TRANSLATE
  Setting("Brought Forward Balances",FBLClass,modNL); //!!TRANSLATE
  Setting("Budget Classes",BudgetClassTClass,modNL); //!!TRANSLATE
  Setting("Budget Keys",BFLClass,modNL); //!!TRANSLATE
  Setting("Calculation Formulae",CalcFormLClass,modNL); //!!TRANSLATE
  if (HasLocalization("HRV,SVN")) then begin
    Setting("(Croatia, Slovenia) #VAT# Rate Classification",CashInvCroSBlockTClass,modNL); //!!TRANSLATE
  end;  
  Setting("Electronic #VAT# Declaration",EVATDeclTClass,modNL); //!!TRANSLATE
  Setting("Fiscal Years",YearTClass,modNL);
  Setting("Income & Expense Book",IncExpBookLClass,modNL); //!!TRANSLATE
  
  Setting("Liquidity Report Info",LiqInfoLClass,modNL);   //!!TRANSLATE
  Setting("#N/L# Accruals",AutSimPerLClass,modNL); //!!TRANSLATE
  Setting("Number Series - Simulations",SMSerTClass,modNL);
  Setting("Number Series - Transactions",TRSerTClass,modNL);
  Setting("Tag/Object Type Control",OTCheckTClass,modNL);
  Setting("Tag/Object Types",OTLClass,modNL); //!!TRANSLATE
  if (HasLocalization("FIN,HRV,POL,PRT,SRB,SVN")) then begin
    Setting("Number Series - #VAT# Declarations",VATDeclTClass,modNL); //!!TRANSLATE
  end;
  Setting("Planned Payments",PlannedPaymentLClass,modNL); //!!TRANSLATE
  Setting("Presentation of Balances",AGrTClass,modNL); //!!TRANSLATE
  Setting("Rate Gain/Loss",NLRateTClass,modNL); //!!TRANSLATE
  Setting("Rate Gains/Losses",NLRateLClass,modNL); //!!TRANSLATE
  Setting("Reconciliation Descriptions",ReconCodeLClass,modNL); //!!TRANSLATE
  Setting("Reconciliation Settings",ReconSetTClass,modNL); //!!TRANSLATE
  Setting("Report Settings",Rs2WClass,modNL);
  Setting("Sub Systems",TRGenTClass,modNL);
  Setting("Sub-ledger Control Accounts",SLAccTClass,modNL); // More logical to be here...

  Setting("Tax Account Groups",TAccGroupLClass,modNL); //!!TRANSLATE
  Setting("Tax Accounts",TAccLClass,modNL); //!!TRANSLATE
  Setting("Tax Reports",TaxRepLClass,modNL); //!!TRANSLATE
  Setting("Tax Rules",TaxRulesLClass,modNL);
  Setting("Tax Templates",TaxTemplateLClass,modNL);
  Setting("Transaction Settings",TrTClass,modNL);
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
    Setting("Tax Template Code Control",VATCodeControlTClass,modNL); //!!TRANSLATE
  end else begin
    Setting("#VAT# Code Control",VATCodeControlTClass,modNL); //!!TRANSLATE
  end;
  if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
    Setting("#VAT Code# on Transaction rows",TaxTemplateTClass,modNL); //!!TRANSLATE
  end;
  Setting("#VAT# Codes",VATCodeTClass,modNL);
  if (HasLocalization("DEU,FIN,HRV,NOR,POL,PRT,SRB,SVN")) then begin
    Setting("#VAT# Declarations",VATDeclLClass,modNL); //!!TRANSLATE
  end;
  if (HasLocalization("DEU,FIN,HRV,POL,PRT,SRB,SVN")) then begin
    Setting("XBRL Reporting Elements",XBRLElementLClass,modNL); //!!TRANSLATE
    Setting("XBRL Reporting Settings",XBRLSettingsLClass,modNL); //!!TRANSLATE
  end;
  Setting("XBRL Reporting Elements",XBRLElementLClass,modNL); //!!TRANSLATE
  Setting("XBRL Reporting Settings",XBRLSettingsLClass,modNL); //!!TRANSLATE

  Document("Simulations",Sim2RClass,SMForm,SMFClass,modNL); //!!TRANSLATE
  Document("Tax Report",TaxDocRClass,TaxRepForm,TaxRepFClass,modNL); //!!TRANSLATE
  Document("Transactions",TRRClass,TRForm,TRFClass,modNL);

  Document("Key Financial Ratios",KeyDRClass,KFRForm,KFRFClass,modNL); //!!TRANSLATE
  
  Report("Account Reconciliation",ACReconRClass,ACRecRn,0,modNL); //!!TRANSLATE
  Report("Accrual Report",AccrualNewRClass,AccrualNewRn,0,modNL); //!!TRANSLATE
  Report("Analytical Balance",MBARClass,MBARn,0,modNL);
  Report("Analytical Balance (Fiscal purposes)",MBA3RClass,MBA3Rn,0,modNL); //!!TRANSLATE
  Report("Balance Sheet",BalRClass,BalRn,UserDefRepDClass,modNL);
  Report("Bank Reconciliation",BankReconRClass,BankRecRn,0,modNL);
  Report("Bank Statement",BankStRClass,BankStRn,0,modNL); //!!TRANSLATE
  Report("Base Currency Rate Change",NLBRateRClass,NLBRateRn,0,modNL); //!!TRANSLATE
  Report("Budget Journal",BudgJRClass,BudgJRn,0,modNL); //!!TRANSLATE
  Report("Chart of Accounts",AccListRClass,AccListRn,0,modNL);
  Report("Correction List",CorrRClass,CorrRn,0,modNL);
  Report("Corresponding Accounts",CorspRClass,CorspRn,0,modNL);
  Report("Creditors Account",VeCreditRClass,VeCreditRn,0,modNL); //!!TRANSLATE
  Report("Currency A/C Rate Change",NLRateRClass,NLRateRn,0,modNL); //!!TRANSLATE
  Report("Daily Balances",DayBalNLRClass,DayBalNLRn,0,modNL); //!!TRANSLATE
  Report("Debtors Account",CuDebtorRClass,CuDebtorRn,0,modNL); //!!TRANSLATE
  Report("Forward Balance Journal",ForwBalJRClass,ForwBalJRn,0,modNL); //!!TRANSLATE
  Report("Income & Expense Book",IncExpBookRClass,IncExpBookRn,0,modNL); //!!TRANSLATE
  Report("Key Financial Ratios",KeyRClass,KeyRn,UserDefRepDClass,modNL); //!!TRANSLATE
  Report("Liquidity Forecast",LiquidityRClass,LiquidityRn,0,modNL); //!!TRANSLATE
  Report("Multicurrency Accounts Rate Difference",MultiCurAccRClass,MultiCurAccRn,0,modNL); //!!TRANSLATE
  Report("#N/L# Accrual Transactions",GenPerTRRClass,GenPerTRRn,0,modNL); //!!TRANSLATE
  Report("#N/L# Transfer, Subsystems",TransGenRClass,TransGenRn,0,modNL); //!!TRANSLATE
  Report("#Nominal Ledger#",MainRClass,MainRn,0,modNL);
  Report("Tag/Object Results",ObjResRClass,ObjResRn,0,modNL); //!!TRANSLATE
  Report("Tag/Object/Quantity Results",ObjQtyRClass,ObjQtyRn,0,modNL); //!!TRANSLATE
  Report("Profit & Loss",ResRClass,ResRn,UserDefRepDClass,modNL);
  Report("Revised Budget Journal",RevBudgJRClass,RevBudgJRn,0,modNL); //!!TRANSLATE
  Report("Simulation Journal",SMJRClass,SMJRn,0,modNL); //!!TRANSLATE
  Report("Tax Account Balances",TAccBalRClass,TAccBalRn,0,modNL); //!!TRANSLATE
  Report("Tax Calculations", Tax100Class,Tax100Rn,0,modNL); //!!TRANSLATE
  Report("Tax Transactions for Registers",TTRRClass,TTRRn,0,modNL); //!!TRANSLATE
  Report("Template Transaction Journal",DanTRJRClass,DanTRJRn,0,modNL); //!!TRANSLATE
  Report("Test Corresponding Rules",CorstRClass,CorstRn,0,modNL);//they wanted it back in Latvia //!!TRANSLATE
  Report("Transaction Journal",TransRClass,TransRn,0,modNL);
  Report("Transaction Summary",TransListRClass,TransListRn,0,modNL); //!!TRANSLATE
  Report("Trial Balance",SBRClass,TrialRn,0,modNL);
  Report("#VAT# Listing",ALLVATRClass,ALLVATRn,0,modNL);
  Report("#VAT# Report",VATRClass,VAT2Rn,UserDefRepDClass,modNL);
  Report("#VAT# Report Purchases",PLVATRepRClass,PLVATRepRn,0,modNL);
  Report("#VAT# Report Sales",SLVATRepRClass,SLVATRepRn,0,modNL);
  Report("#VAT# Transaction Journal",VATTransJRClass,VATTransJRn,0,modNL);
  Report("XBRL Report",XBRLReportRClass,XBRLReportRn,0,modNL); //!!TRANSLATE
  
  Export("Accumulated Monthly #P/L# Report",MonthResEClass,MonthResEn,modNL); //!!TRANSLATE
  Export("Consolidation",ConsEClass,ConsEn,modNL); //!!TRANSLATE
  Export("Key Financial Ratios",KeyEClass,KeyEn,modNL); //!!TRANSLATE
  Export("Monthly Balances",MBEClass,MBEn,modNL);
  Export("Tag/Object Balances",FBEClass,FBEn,modNL); //!!TRANSLATE
  if (HasLocalization("SVN")) then begin
    Export("Transactions (Slovenia)",TRSloEClass,TRSloEn,modNL); //!!TRANSLATE
  end;
  Export("Trial Balance",SBEClass,SBEn,modNL);
  if (HasLocalization("SVN")) then begin
    Export("#VAT# Periodic (Slovenia)",SloVATPeriodicEClass,SloVATPeriodicEn,modNL); //!!TRANSLATE
  end;
  Export("XBRL Report",XBRLReportEClass,XBRLReportEn,modNL); //!!TRANSLATE
  
  Import("Bank Transactions",BankTRIClass,BankTRIn,modNL); //!!TRANSLATE
  Import("Update SRU Codes",UpdateSRUIn,UpdateSRUIn,modNL); //!!TRANSLATE

  Maintenance("Account Auto Elimination",AccElimVClass,AccElimMn,modNL); //!!TRANSLATE
  Maintenance("Account Balance Transfer",AccTransVClass,AccTransMn,modNL);
  Maintenance("Add Tag/Object to Transactions",AddObjTRVClass,AddObjTRMn,modNL); //!!TRANSLATE
  Maintenance("Budget",Bud1VClass,Bud1Mn,modNL); //!!TRANSLATE
  Maintenance("Generate #N/L# Accrual Transactions",GenPerTRVClass,GenPerTRMn,modNL); //!!TRANSLATE
  Maintenance("Generate Planned Payments Records",GenPlanPymntVClass,GenPlanPymntMn,modNL); //!!TRANSLATE
  Maintenance("Lock #N/L#",LockNLVClass,LockNLMn,modNL); //!!TRANSLATE
  Maintenance("Put Contact Code as Tag/Object on Transactions",ContactToTRObjVClass,ContactToTRObjMn,modNL); //!!TRANSLATE
  Maintenance("Rate Gain/Loss",NLRateVClass,NLRateMn,modNL); //!!TRANSLATE
  Maintenance("Revaluation of Base Currency 2",NLBRateVClass,NLBRateMn,modNL); //!!TRANSLATE
  Maintenance("Revised Budget from Budget",Bud2FromBud1VClass,Bud2FromBud1Mn,modNL); //!!TRANSLATE
  Maintenance("Revised Budget",Bud2VClass,Bud2Mn,modNL); //!!TRANSLATE
  Maintenance("Update Transactions",NLAddRateVClass,NLAddRateMn,modNL); //!!TRANSLATE
  Maintenance("Year End Simulation",CYearVClass,CloseYMn,modNL); //!!TRANSLATE

/* modDI */
  
  RegisterWS("Items","Items","New Item",INVc,modDI); //!!TRANSLATE
  RegisterWS("Item Formulae","Item Formulae","New Item Formula",CPMVc,modDI); //!!TRANSLATE
  RegisterWS("Discount Matrices","Discount Matrices","New Discount Matrix",RebVc,modDI); //!!TRANSLATE
  RegisterWS("Multi-buy Discounts","Multi-buy Discounts","New Multi-buy Discount",MultiBuyRebVc,modDI); //!!TRANSLATE
  RegisterWS("Prices","Prices","New Price",PLVc,modDI); //!!TRANSLATE
  RegisterWS("Price Lists","Price Lists","New Price List",PLDefVc,modDI); //!!TRANSLATE
  RegisterWS("Price Formulae","Price Formulae","New Price Formula",PFormVc,modDI); //!!TRANSLATE
  RegisterWS("Quantity Dependent Discounts","Qty Depend. Discounts","New Qty Depend. Discount",StaffVc,modDI); //!!TRANSLATE

  Report("Discount Matrices List",RebListRClass,RebListRn,0,modDI);
  Report("Discount Statistics",Cust2STRClass,Cust2STRn,0,modDI);
  Report("Item List",ArtRClass,ArtRn,0,modDI);
  Report("Price List",PriceRClass,PriceRn,0,modDI);
  Report("Sales Price Control",SalesPriceCheckRClass,SalesPriceCheckRn,0,modDI); //!!TRANSLATE

  Import("Update Cost Prices import",INPrUpdIn,INPrUpdIn,modDI);

  Setting("Qty Dependent Prices",PLQLClass,modDI);
  Setting("Item Groups",ITLClass,modDI);

  Maintenance("Calculate Prices",CalcPricesVClass,CalcPriceListsMn,modDI);
  Maintenance("Delete Prices",DelPriceListVClass,DelPriceLMn,modDI);
  Maintenance("Update Item Base Prices",ItemPricesVClass,ItemPricesMn,modDI);
  Maintenance("Update Item Cost Prices",ItemCostPricesVClass,INCostPriceMn,modDI);

/* modPOS */

  RegisterWS("POS Invoices","POS Invoices","New Invoice",IVCashVc,modPOS); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modPOS); //!!TRANSLATE
  RegisterWS("Cashier Counts","Cashier Counts","New Cashier Count",CashierBalVc,modPOS); //!!TRANSLATE
  RegisterWS("Credit Cards","Credit Cards","New Credit Card",CreditCardVc,modPOS); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modPOS); //!!TRANSLATE
  RegisterWS("Loyalty Cards","Loyalty Cards","New Loyalty Card",LoyaltyCardVc,modPOS); //!!TRANSLATE
  RegisterWS("Supermarket Invoices","Supermarket Invoices","New Invoice",POSPIVCashLClass,modPOS); //!!TRANSLATE
  RegisterWS("POS Invoices Touch Screen","POS Invoices Touch Screen","New Invoice",NPTSIVCashLClass,modPOS); //!!TRANSLATE
  
  Setting("Payment Gateways",CCAccountIDLClass,modPOS);  //!!TRANSLATE
  Setting("Apple Care Products",ACPLClass,modPOS); //!!TRANSLATE

  Setting("Baggers",BaggerTCLass,modPOS); //!!TRANSLATE
  Setting("Cash Events",CashLClass,modPOS);
  Setting("Credit Card Slips",CouponLClass,modPOS); //!!TRANSLATE
  Setting("Credit Card Types",CredCardTypeLClass,modPOS);  //!!TRANSLATE
  Setting("Default Payment Modes",DefCashTClass,modPOS);
  Setting("Deferred CC Transactions Rules",DefCCTransTClass,modPOS); //!!TRANSLATE
  Setting("Deferred CC Transactions Settings",DeferCCTClass,modPOS); //!!TRANSLATE
  Setting("Deferred CC Transactions",DefCCTransLClass,modPOS); //!!TRANSLATE
  Setting("Deferred CC Transactions Status",DefCCTransStatusLClass,modPOS); //!!TRANSLATE
  Setting("Drawers",DrawerLClass,modPOS);  //!!TRANSLATE
  Setting("Dynamic Barcode",VolumBarcodeTCLass,modPOS); //!!TRANSLATE
  Setting("Fields for creating New Customer",NPTSNewCUFieldsTCLass,modPOS); //!!TRANSLATE
  Setting("Gift Receipts",GiftReceiptLClass,modPOS); //!!TRANSLATE
  Setting("Gift Voucher Types",GCTypeLClass,modPOS); //!!TRANSLATE
  Setting("Gift Vouchers Settings",GCTClass,modPOS); //!!TRANSLATE
  Setting("Gift Vouchers Issued",GCLClass,modPOS); //!!TRANSLATE
  Setting("Gift Vouchers Received",GCRLClass,modPOS); //!!TRANSLATE
  Setting("Gift Vouchers Sold",GCSLClass,modPOS); //!!TRANSLATE
  Setting("Local Credit Card Terminal",RahaxiTClass,modPOS); //!!TRANSLATE
  Setting("Local Machine Payment Modes",RestPMTClass,modPOS); //!!TRANSLATE
  Setting("Local Machines",LocalMachineLClass,modPOS); //!!TRANSLATE
  Setting("Loyalty Card Membership Levels",LCMemberLevelLClass,modPOS); //!!TRANSLATE
  Setting("Loyalty Card Membership Level Structure",LCMLevelSetTClass,modPOS); //!!TRANSLATE
  Setting("Loyalty Points",LoyaltyPointsLClass,modPOS); //!!TRANSLATE
  Setting("Loyalty Points per Location",LocLoyaltyPointsLClass,modPOS); //!!TRANSLATE
  Setting("Loyalty Points Redemption",LoyPointRedeemLClass,modPOS); //!!TRANSLATE
  Setting("Loyalty Points Redemption per Location",LocLoyPointRedeemLClass,modPOS); //!!TRANSLATE
  Setting("Merchant ID",CCMerchantIDLClass,modPOS);  //!!TRANSLATE
  Setting("Modifiers",ModifiersLClass,modPOS); //!!TRANSLATE
  Setting("Number Series - Cash Events",CashSerTClass,modPOS); //!!TRANSLATE
  Setting("Number Series - Coupons",CouponSerTClass,modPOS); //!!TRANSLATE
  Setting("Number Series - Deferred CC Tansactions",DefCCTransSerTClass,modPOS);  //!!TRANSLATE
  Setting("Number Series - Gift Receipt",GiftReceiptSerTClass,modPOS);  //!!TRANSLATE
  Setting("Number Series - Gift Vouchers",GCSerTClass,modPOS); //!!TRANSLATE
  Setting("Number Series - Gift Vouchers Received",GCRSerTClass,modPOS); //!!TRANSLATE
  Setting("Number Series - POS Balances",POSBalanceSerTClass,modPOS); //!!TRANSLATE
  Setting("Number Series - POS Invoices",IVCashSerTClass,modPOS);  //!!TRANSLATE
  Setting("Number Series - POS Sessions",POSEventSerTClass,modPOS); //!!TRANSLATE
  Setting("Payment Currencies",POSCurrenciesTClass,modPOS);
  Setting("POS Balances",POSBalanceLCLass,modPOS); //!!TRANSLATE
  Setting("POS Button Groups",POSButtonGroupsLClass,modPOS); //!!TRANSLATE
  Setting("POS Button Pictures",POSButtonPictureLClass,modPOS); //!!TRANSLATE
  Setting("POS Buttons",POSButtonsLClass,modPOS);
  Setting("POS Commands",POSCommandsTCLass,modPOS); //!!TRANSLATE
  Setting("POS Sessions",POSEventLCLass,modPOS); //!!TRANSLATE
  Setting("POS Settings",CashierDefTClass,modPOS);
  Setting("Receipt Printer Texts",CashPrintTClass,modPOS); //!!TRANSLATE
  Setting("Receipt Printer Texts per Machine",MachineCashLClass,modPOS); //!!TRANSLATE
  Setting("Receipt Printers",CashPrSetLClass,modPOS); //!!TRANSLATE
  Setting("Split Items",SplitINLClass,modPOS); //!!TRANSLATE
  Setting("Supervisors",SupervisorTCLass,modPOS); //!!TRANSLATE
  Setting("User Defined Field Labels - Local Machine",LocalMachineLBlockTClass,modPOS);   //!!TRANSLATE
  
  if (HasLocalization("SRB")) then begin
    Report("Book of Daily Reports (OEDI, Serbia)",DayRepBookRClass,DayRepBookRn,0,modPOS); //!!TRANSLATE
  end;
  Report("Cash Up",CashupRClass,CashupRn,0,modPOS);
  Report("Cashier Statistics",CashierStatsRClass,CashierStatsRn,0,modPOS); //!!TRANSLATE
  Report("Collections Analysis",CollectionsAnalysisRClass,CollectionsAnalysisRn,0,modPOS);   //!!TRANSLATE
  Report("Credit Card Slips Reconciliation",CouponReconRClass,CouponReconRn,0,modPOS); //!!TRANSLATE
  Report("Daily Balance",DayBalRClass,DayBalRn,0,modPOS); //!!TRANSLATE
  Report("Gift Vouchers",GiftCerRClass,GiftCerRn,0,modPOS); //!!TRANSLATE
  Report("GP, POS Invoices", PIVGPRClass,PIVGPRn,0,modPOS);
  Report("Item Group #VAT#",ITVATRClass,ITVATRn,0,modPOS); //!!TRANSLATE
  Report("Item Multi-Buy Statistics",INMultiBuyStatRClass,INMultiBuyStatRn,0,modPOS); //!!TRANSLATE
  Report("Item Price List Statistics",INPriceListStatRClass,INPriceListStatRn,0,modPOS); //!!TRANSLATE
  Report("Loyalty Card Statement",LoyaltyCardRClass,LoyaltyCardRn,0,modPOS); //!!TRANSLATE
  Report("#N/L# Transfer, Cash Invoices", TransGenPOSRClass,TransGenPOSRn,0,modPOS);
  Report("POS Bonus",POSBonusRClass,POSBonusRn,0,modPOS); //!!TRANSLATE
  Report("POS Invoice Journal",IVCJRClass,InvCashRn,0,modPOS);
  Report("Variety Enquiry",VarEnqRClass,VarEnqRn,0,modPOS);

  if (HasLocalization("HRV,SVN")) then begin
    Export("Cash invoices export",CashInvCroEClass,CashInvExEn,modPOS); //!!TRANSLATE
  end;  
  
  Document("Cash Events",CashRClass,CashForm,CashFClass,modPOS); //!!TRANSLATE
  Document("Gift Receipt",GiftReceiptRClass,GiftReceiptForm,GiftReceiptFClass,modPOS); //!!TRANSLATE
  Document("Gift Vouchers",GCRClass,GCForm,GCFClass,modPOS);   //!!TRANSLATE
  Document("POS Invoices",IVCashRClass,InvCashForm,IVCashFClass,modPOS);
  Document("Return POS Invoices",IVCashRetRClass,InvCashRetForm,IVCashRetFClass,modPOS); //!!TRANSLATE

  Maintenance("Cash Up",CashupVClass,CashupMn,modPOS);
  Maintenance("Create POS Buttons",CreatePOSButtonsVClass,CreatePOSButtonsMn,modPOS);
  Maintenance("Create Slips #N/L# Trans",NLTransCredCardSlipVClass,NLTransCredCardSlipMn,modPOS);
  Maintenance("Process Deferred CC Transactions",ProDefCCTransVClass,ProDefCCTransMn,modPOS);
  Maintenance("Update #Stock#",POSUpdStockVClass,POSUpdStockMn,modPOS);


/* modProd */

  RegisterWS("Productions","Productions","New Production",ProdVc,modProd); //!!TRANSLATE
  RegisterWS("Production Orders","Production Orders","New Production Order",ProdOrderVc,modProd); //!!TRANSLATE
  RegisterWS("Production Item Alternatives","Prod. Item Alternatives","New Prod. Item Alternative",ProdItemVc,modProd); //!!TRANSLATE
  RegisterWS("Production Operations","Production Operations","New Production Operation",ProdOperationVc,modProd); //!!TRANSLATE
  RegisterWS("Recipes","Recipes","New Recipe",RecVc,modProd); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modProd); //!!TRANSLATE
  RegisterWS("Machine Hours","Machine Hours","New Machine Hour",MachineHoursVc,modProd); //!!TRANSLATE
  RegisterWS("Machine Hours Changes","Machine Hours Changes","New Machine Hours Change",MachineHoursChangesLClass,modProd); //!!TRANSLATE

  Setting("Account Usage Production",ProdAccClass,modProd); //!!TRANSLATE
  Setting("Auto Production Items",AutoProdLClass,modProd); //!!TRANSLATE
  Setting("Item Effectivity",INEffLClass,modProd); //!!TRANSLATE
  Setting("Machine Groups",MachineGroupsTClass,modProd); //!!TRANSLATE
  Setting("Materials",MaterialLClass,modProd); //!!TRANSLATE
  Setting("Number Series - Production Operations",ProdOperationSerTClass,modProd); //!!TRANSLATE
  Setting("Number Series - Production Orders",ProdOrderSerTClass,modProd); //!!TRANSLATE
  Setting("Number Series - Productions",ProdSerTClass,modProd);
  Setting("Production Classes",ProdClassLClass,modProd); //!!TRANSLATE
  Setting("Production Settings",ProdSettingsTClass,modProd); //!!TRANSLATE
  Setting("Routings",RoutingLClass,modProd); //!!TRANSLATE
  Setting("Standard Operations",StdOperationLClass,modProd); //!!TRANSLATE
  Setting("Standard Problems",StandProblemLClass,modProd);
  Setting("Work Shifts",WorkShiftLClass,modProd); //!!TRANSLATE

  Report("Deficiency List",PurRClass,PurRn,0,modProd);
  Report("Discarded Statistics",DiscardStatRClass,DiscardStatRn,0,modProd); //!!TRANSLATE
  Report("Item Effectivity",EffectRClass,EffectRn,0,modProd); //!!TRANSLATE
  Report("Process Flow",ProcessFlowRClass,ProcessFlowRn,0,modProd); //!!TRANSLATE
  Report("Producible List",MaxprodRClass,MaxprodRn,0,modProd); //!!TRANSLATE
  Report("Production Cost Allocation",CostAllocPlanRClass,CostAllocPlanRn,0,modProd); //!!TRANSLATE
  Report("Production Deficiency",ProdDefRClass,ProdDefRn,0,modProd); //!!TRANSLATE
  Report("Production Journal",ProdRClass,ProdRn,0,modProd);
  Report("Production Operations",ProdOperationsRClass,ProdOperationsRn,0,modProd); //!!TRANSLATE
  Report("Production Order Journal",ProdOrdRClass,ProdOrdRn,0,modProd); //!!TRANSLATE
  Report("Production Planning",ProdOrderPlanRClass,ProdOrderPlanRn,0,modProd); //!!TRANSLATE
  Report("Production Queue",ProdOrderQueueRClass,ProdOrderQueue2Rn,0,modProd);
  Report("Production Statistics",ProdStatRClass,ProdStatRn,0,modProd); //!!TRANSLATE
  Report("Production Status",ProdStatusRClass,ProdStatusRn,0,modProd);
  Report("Recipe Cost Calculation",CostCalcRClass,CostCalcRn,0,modProd); //!!TRANSLATE
  Report("Recipe Cost Comparison",RecCostCompRClass,RecCostCompRn,0,modProd); //!!TRANSLATE
  Report("Recipe List (Made of)",Rec2RClass,Rec2Rn,0,modProd);
  Report("Recipe List (Part of)",RecRClass,RecRn,0,modProd);
  Report("Running Production Orders",ProdQueueRClass,ProdQueueRn,0,modProd); //!!TRANSLATE

  Document("Production Labels",ProdLabelRClass,ProdLabelForm,ProdLabelFClass,modProd); //!!TRANSLATE
  Document("Production Operation Picking Lists",ProdOperation2RClass,ProdOperation2Form,ProdOperation2FClass,modProd); //!!TRANSLATE
  Document("Production Orders",ProdOrder2RClass,ProdOrder2Form,ProdOrder2FClass,modProd); //!!TRANSLATE
  Document("Production Picking Lists",ProdOrder3RClass,ProdOrder3Form,ProdOrder3FClass,modProd); //!!TRANSLATE
  Document("Productions",ProdOrderRClass,ProdOrderForm,ProdOrderFClass,modProd);
  Document("Recipe",RecDocRClass,RecForm,RecFClass,modProd);
  Document("Routing",RoutingRClass,RoutingForm,RoutingFClass,modProd); //!!TRANSLATE
  Document("Routing Productions",RoutingPrRClass,RoutingPrForm,RoutingPrFClass,modProd); //!!TRANSLATE
  Document("Routing Production Orders",RoutingPrOrdRClass,RoutingPrOrdForm,RoutingPrOrdFClass,modProd); //!!TRANSLATE

  Maintenance("Create Planned Records from Ordered Items",PlanRecordsVClass,PlanRecordsMn,modProd);
  Maintenance("Update Recipes",UpdRecepyVClass,UpdRecepyMn,modProd);

/* modPL */

  RegisterWS("#Purchase Invoices#","#Purchase Invoices#","New #Purchase Invoice#",VIVc,modPL); //!!TRANSLATE
  RegisterWS("Payments","Payments","New Payment",OPVc,modPL); //!!TRANSLATE
  RegisterWS("Purchase Order Contracts","P/Order Contracts","New P/Order Contract",POCOVc,modPL); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modPL); //!!TRANSLATE
  Register("E-#Purchase Invoices#","E-#Purchase Invoices#",VEIVVc,modPL); //!!TRANSLATE

  Setting("Account Usage #P/L#",APAccTClass,modPL);
  Setting("Bank Transfer",BankFileTClass,modPL); //!!TRANSLATE
  Setting("Banks",BankLClass,modPL);
  Setting("Calculation Formulae",CalcFormLClass,modPL); //!!TRANSLATE
  if (HasLocalization("HRV,SVN")) then begin
    Setting("Contact Legal Forms",CULegalFormLClass,modPL); //!!TRANSLATE
  end;
  Setting("Eurocard",EuroCardLClass,modPL); //!!TRANSLATE
  Setting("Eurocard Import Settings",ECInSetTClass,modPL); //!!TRANSLATE
//  Setting("",ExtraCostLClass,modPL); not used
  Setting("Intrastat Purchase",IntrastatVITClass,modPL); //!!TRANSLATE
  Setting("Number Series - Payments",OPSerTClass,modPL);
  Setting("Number Series - #Purchase Invoices#",VISerTClass,modPL);
  if (HasLocalization("HRV,POL,SVN,SRB,UKR")) then begin
    Setting("Number Series - #VAT# Corrections #P/L#",VATVISerTClass,modPL);
  end;
  Setting("Payment Codes",PaymentCodeLClass,modPL); //!!TRANSLATE
  Setting("Payment Modes",PMTClass,modPL);
  Setting("Payment Settings",OPTTClass,modPL); //!!TRANSLATE
  Setting("Payment Terms",PDLClass,modPL);
  Setting("#Purchase Invoice# Settings",VITTClass,modPL); //!!TRANSLATE
  Setting("#Supplier# Categories",VGLClass,modPL);  
  Setting("#VAT# Accounts",VATTClass,modPL); //!!TRANSLATE
    if (HasLocalization("HRV,POL,RUS,SLV,SVN,SRB,UKR")) then begin
    Setting("#VAT# Correction #P/L# Types",VATVITypeTClass,modPL); //!!TRANSLATE
    Setting("#VAT# Corrections #P/L#",VATVILClass,modPL);
  end;

  Document("#Cheque# Documents",OP2DRClass,OP2DForm,OP2DFClass,modPL); //!!TRANSLATE
  Document("Debit Invoices",DebVIRClass,DebVIForm,DebVIFClass,modPL); //!!TRANSLATE
  Document("Electronic #Purchase Invoices#",VEIVRClass,VEIVForm,VEIVFClass,modPL); //!!TRANSLATE
  Document("Intrastat #P/L#",IntraStaPuRClass,InStaPuForm,InStaPuFClass,modPL); //!!TRANSLATE
  Document("Open Invoice #Supplier# Statement",APSRClass,APSForm,APSFClass,modPL);
  Document("Payment Forms",OPDRClass,OPDForm,OPDFClass,modPL);
  Document("Payment Lists",OPRClass,OPForm,0,modPL);
  Document("Periodic #Supplier# Statement",VEPerRClass,VEPerForm,VEPerFClass,modPL); //!!TRANSLATE
  if (HasLocalization("HRV,SVN")) then begin
    Document("Purchase Book",PurchaseBookHRVRClass,PurchaseBookHRVForm,PurchaseBookHRVFClass,modPL);  //!!TRANSLATE
  end;
  Document("#Purchase Invoice# Forms",VIRClass,VIForm,VIFClass,modPL); //!!TRANSLATE
  Document("Purchase Order Contract",POCORClass,POCOForm,POCOFClass,modPL); //!!TRANSLATE

  Report("EU #VAT# Purchases",PLEUVATRClass,PLEUVATRn,0,modPL); //!!TRANSLATE
  Report("Interest Cost Calculation",VIIntCostCalcRClass,VIIntCostCalcRn,0,modPL); //!!TRANSLATE
  if (HasLocalization("SLV")) then begin
    Report("Monthly Purchase Witholdings (El Salvador)",PLRetSLVRClass,PLRetSLVRn,0,modPL); //!!TRANSLATE
  end;
  Report("Open Invoice #Supplier# Statement",APS2RClass,APS2Rn,0,modPL);
  Report("Overview of #Instalments#",InstListPLRClass,InstListPLRn,0,modPL); //!!TRANSLATE
  Report("#P/L# #VAT Code# Statistics",PLVATRClass,PLVATRn,0,modPL); //!!TRANSLATE
  Report("#P/L# #VAT# Report",PLVAT2RClass,PLVAT2Rn,0,modPL); //!!TRANSLATE
  Report("Payment Journal",OPJRClass,OPJRn,0,modPL);
  Report("Payments Forecast",OPProgRClass,OPProgRn,0,modPL);
  Report("Periodic #Supplier# Statement",VePer2RClass,VePerRn,0,modPL);
  Report("Prepayment History #P/L#",PerPayHisPLRClass,PerPayHisPLRn,0,modPL); //!!TRANSLATE
  Report("#Purchase Invoice# Journal",VIJRClass,VIJRn,0,modPL);
  Report("#Purchase Invoice# Status",VIInfoRClass,VIInfoRn,0,modPL); //!!TRANSLATE
  Report("#Purchase Ledger#",APRClass,APRn,0,modPL);
  Report("#Sales & Purchase Ledger#",ARAPRClass,ARAPRn,0,modPL); //!!TRANSLATE
  Report("#Supplier# List",VERClass,VERn,0,modPL);
  Report("#Supplier# Purchase History",MonthSalesHistVERClass,MonthSalesHistVERn,0,modPL); //!!TRANSLATE
  Report("#Supplier# Statistics",VSRClass,VSRn,0,modPL); //!!TRANSLATE
  Report("#Supplier# Withholdings",SuplWithHoldRClass,SuplWithHoldRn,0,modPL); //!!TRANSLATE
  Report("#VAT Reg. Number# History",CUVERClass,CUVERn,0,modPL); //!!TRANSLATE
  Report("#VAT# Report Purchases",PLVATRepRClass,PLVATRepRn,0,modPL);
  if (HasLocalization("SRB")) then begin
    Report("#VAT# Report Purchases (Serbia)",PLVATSerRClass,PLVATSerRn,0,modPL);   //!!TRANSLATE
  end;
  Report("#VAT# #Supplier# Purchases",RealSuppRClass,RealSuppRn,0,modPL);

  Export("Banking File",MPEClass,MPEn,modPL);
  if (HasLocalization("HRV")) then begin
    Export("EU #VAT# Purchases",PLEUVATHRVECLass,PLEUVATHRVEn,modPL); //!!TRANSLATE
  end;
  if (HasLocalization("SVN")) then begin
    Export("Invoices #P/L# (Slovenia)",VISloEClass,VISloEn,modPL); //!!TRANSLATE
  end;
  Export("#P/L# Liquidity List",PLLiqEClass,PLLiqEn,modPL); //!!TRANSLATE
  if (HasLocalization("SVN")) then begin
    Export("#P/L# #VAT# Invoices (Slovenia)",PLVATSloEClass,PLVATSloEn,modPL); //!!TRANSLATE
  end;  

  if (HasLocalization("HRV,POL,SVN,SRB,UKR")) then begin
    Maintenance("Create #VAT# Corrections #P/L#",VATVIVClass,VATVIMn,modPL); //!!TRANSLATE
  end;
  Maintenance("Create Periodic #Supplier# Statement Email",VEPerEmailVClass,VEPerEmailMn,modPL); //!!TRANSLATE
  Maintenance("Update #Suppliers#",UpdSupVClass,UpdSupMn,modPL); //!!TRANSLATE

/* modPO */

  RegisterWS("#Purchase Orders#","#Purchase Orders#","New #Purchase Order#",POVc,modPO); //!!TRANSLATE
  RegisterWS("Purchase Quotations","Purchase Quotations","New Purchase Quotation",POQTVc,modPO); //!!TRANSLATE
  RegisterWS("Internal Orders","Internal Orders","New Internal Order",IntORVc,modPO); //!!TRANSLATE
  RegisterWS("Purchase Items","Purchase Items","New Purchase Item",PIVc,modPO); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modPO); //!!TRANSLATE
  RegisterWS("Purchase Order Processes","P/Order Processes","New P/Order Processes",POCQStatVc,modPO); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modPO); //!!TRANSLATE
  RegisterWS("Shipment Notification","Shipment Notification","New Shipment Notification",DropSHVc,modPO); //!!TRANSLATE
  
  Setting("Delivery Terms",ShipDealLClass,modPO);
  Setting("Down Payments",PODownPayTClass,modPO);
  Setting("Internal Order Classes",IntORClassLClass,modPO); //!!TRANSLATE
  Setting("Internal Order Settings",IntORSettingTClass,modPO); //!!TRANSLATE
  Setting("Number Series - Internal Orders",IntORSerTClass,modPO); //!!TRANSLATE
  Setting("Number Series - Purchase Order Processes",POCQStatSerTClass,modPO); //!!TRANSLATE
  Setting("Number Series - Purchase Order Quotations",POQTSerTClass,modPO); //!!TRANSLATE
  Setting("Number Series - #Purchase Orders#",POSerTClass,modPO); //!!TRANSLATE
  Setting("Price Ranges",PriceRangeTClass,modPO); //!!TRANSLATE
  Setting("Purchase Order Classes",POrderClassLClass,modPO); //!!TRANSLATE
  Setting("Purchase Order Mail",POMailTClass,modPO); //!!TRANSLATE
  Setting("Purchase Order Settings",POSettingTClass,modPO); //!!TRANSLATE
  Setting("Tenders",TenderLClass,modPO); //!!TRANSLATE

  Document("Internal Orders",IntORRClass,IntORForm,IntORFClass,modPO);  //!!TRANSLATE
  Document("Purchase Order Confirmations",POConfRClass,POConfForm,POConfFClass,modPO); //!!TRANSLATE
  Document("Purchase Order Reminders",PORemRClass,PORemForm,PORemFClass,modPO);  //!!TRANSLATE
  Document("#Purchase Orders#",PORClass,POForm,POFClass,modPO);  //!!TRANSLATE
  Document("Purchase Quotations",POQTRClass,POQTForm,POQTFClass,modPO);  //!!TRANSLATE
  Document("Shipment Notifications",DropSHRClass,DropSHForm,DropSHFClass,modPO);  //!!TRANSLATE

  Report("Deficiency List",PurRClass,PurRn,0,modPO);
  Report("Deficiency #Stock#",DfncyStockRClass,DfncyStockRn,0,modPO); //!!TRANSLATE
  Report("Goods Receipt/#Purchase Invoice# Comparison",PUVIDiffRClass,PUVIDiffRn,0,modPO); //!!TRANSLATE
  Report("Internal Order Journal",IntOrdJRClass,IntOrdJRn,0,modPO); //!!TRANSLATE
  Report("Internal Order Status",IntORStatRClass,IntORStatRn,0,modPO); //!!TRANSLATE
  Report("Outstanding Internal Orders",IntORStockRClass,IntORStockRn,0,modPO); //!!TRANSLATE
  Report("Outstanding #Purchase Orders#",POOrdStockRClass,POOrdStockRn,0,modPO);   //!!TRANSLATE
  Report("Purchase Item Price List",PurPriceRClass,PurPriceRn,0,modPO); //!!TRANSLATE
  Report("Purchase Order Accruals",POCommitDetailRClass,POCommitDetailRn,0,modPO); //!!TRANSLATE
  Report("Purchase Order Journal",PurOrdJRClass,PurOrdJRn,0,modPO);
  Report("Purchase Order Status",POStatRClass,POStatRn,0,modPO); //!!TRANSLATE
  Report("Purchase Quotations Journal",PurOrdQTJRClass,PurOrdQTJRn,0,modPO); //!!TRANSLATE
  Report("Purchase Suggestion",CreatePORClass,CreatePORn,0,modPO); //!!TRANSLATE
  Report("Reordering Requirements",PORequireRClass,PORequireRn,0,modPO);   //!!TRANSLATE
  Report("#Supplier# Analysis",VEAnaRClass,VEAnaRn,0,modPO); //!!TRANSLATE
  Report("#Supplier# Evaluation",VEEvalRClass,VEEvalRn,0,modPO); //!!TRANSLATE
  Report("#Supplier#/Item Statistics",VeInRClass,VeInRn,0,modPO);
    
  Maintenance("Create #Purchase Orders#",CreatePOVClass,POCreateMn,modPO); //!!TRANSLATE
  Maintenance("Create #Purchase Orders# from Deficiency #Stock#",PODfncyStockVClass,DfncyStockMn,modPO); //!!TRANSLATE
  Maintenance("Delete Purchase Items",DelPIVcVClass,DelPIVcMn,modPO); //!!TRANSLATE
  Maintenance("Recalculate #Purchase Orders#",RecalcPOVClass,RecalcPOMn,modPO); // should be in modDBMain //!!TRANSLATE
  Maintenance("Reordering Requirements",PORequireVClass,PORequireMn,modPO); //!!TRANSLATE
  Maintenance("Update Purchase Items",UpdatePIVClass,UpdatePIMn,modPO); //!!TRANSLATE

/* modProd */

  RegisterWS("Productions","Productions","New Production",ProdVc,modProd); //!!TRANSLATE
  RegisterWS("Production Orders","Production Orders","New Production Order",ProdOrderVc,modProd); //!!TRANSLATE
  RegisterWS("Production Item Alternatives","Prod. Item Alternatives","New Prod. Item Alternative",ProdItemVc,modProd); //!!TRANSLATE
  RegisterWS("Production Operations","Production Operations","New Production Operation",ProdOperationVc,modProd); //!!TRANSLATE
  RegisterWS("Recipes","Recipes","New Recipe",RecVc,modProd); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modProd); //!!TRANSLATE
  RegisterWS("Machine Hours","Machine Hours","New Machine Hour",MachineHoursVc,modProd); //!!TRANSLATE
  RegisterWS("Machine Hours Changes","Machine Hours Changes","New Machine Hours Change",MachineHoursChangesLClass,modProd); //!!TRANSLATE

  Setting("Account Usage Production",ProdAccClass,modProd); //!!TRANSLATE
  Setting("Auto Production Items",AutoProdLClass,modProd); //!!TRANSLATE
  Setting("Item Effectivity",INEffLClass,modProd); //!!TRANSLATE
  Setting("Machine Groups",MachineGroupsTClass,modProd); //!!TRANSLATE
  Setting("Materials",MaterialLClass,modProd); //!!TRANSLATE
  Setting("Number Series - Production Operations",ProdOperationSerTClass,modProd); //!!TRANSLATE
  Setting("Number Series - Production Orders",ProdOrderSerTClass,modProd); //!!TRANSLATE
  Setting("Number Series - Productions",ProdSerTClass,modProd);
  Setting("Production Classes",ProdClassLClass,modProd); //!!TRANSLATE
  Setting("Production Settings",ProdSettingsTClass,modProd); //!!TRANSLATE
  Setting("Routings",RoutingLClass,modProd); //!!TRANSLATE
  Setting("Standard Operations",StdOperationLClass,modProd); //!!TRANSLATE
  Setting("Standard Problems",StandProblemLClass,modProd);
  Setting("Work Shifts",WorkShiftLClass,modProd); //!!TRANSLATE

  Report("Deficiency List",PurRClass,PurRn,0,modProd);
  Report("Discarded Statistics",DiscardStatRClass,DiscardStatRn,0,modProd); //!!TRANSLATE
  Report("Item Effectivity",EffectRClass,EffectRn,0,modProd); //!!TRANSLATE
  Report("Process Flow",ProcessFlowRClass,ProcessFlowRn,0,modProd); //!!TRANSLATE
  Report("Producible List",MaxprodRClass,MaxprodRn,0,modProd); //!!TRANSLATE
  Report("Production Cost Allocation",CostAllocPlanRClass,CostAllocPlanRn,0,modProd); //!!TRANSLATE
  Report("Production Deficiency",ProdDefRClass,ProdDefRn,0,modProd); //!!TRANSLATE
  Report("Production Journal",ProdRClass,ProdRn,0,modProd);
  Report("Production Operations",ProdOperationsRClass,ProdOperationsRn,0,modProd); //!!TRANSLATE
  Report("Production Order Journal",ProdOrdRClass,ProdOrdRn,0,modProd); //!!TRANSLATE
  Report("Production Planning",ProdOrderPlanRClass,ProdOrderPlanRn,0,modProd); //!!TRANSLATE
  Report("Production Queue",ProdOrderQueueRClass,ProdOrderQueue2Rn,0,modProd);
  Report("Production Statistics",ProdStatRClass,ProdStatRn,0,modProd); //!!TRANSLATE
  Report("Production Status",ProdStatusRClass,ProdStatusRn,0,modProd);
  Report("Recipe Cost Calculation",CostCalcRClass,CostCalcRn,0,modProd); //!!TRANSLATE
  Report("Recipe Cost Comparison",RecCostCompRClass,RecCostCompRn,0,modProd); //!!TRANSLATE
  Report("Recipe List (Made of)",Rec2RClass,Rec2Rn,0,modProd);
  Report("Recipe List (Part of)",RecRClass,RecRn,0,modProd);
  Report("Running Production Orders",ProdQueueRClass,ProdQueueRn,0,modProd); //!!TRANSLATE

  Document("Production Labels",ProdLabelRClass,ProdLabelForm,ProdLabelFClass,modProd); //!!TRANSLATE
  Document("Production Operation Picking Lists",ProdOperation2RClass,ProdOperation2Form,ProdOperation2FClass,modProd); //!!TRANSLATE
  Document("Production Orders",ProdOrder2RClass,ProdOrder2Form,ProdOrder2FClass,modProd); //!!TRANSLATE
  Document("Production Picking Lists",ProdOrder3RClass,ProdOrder3Form,ProdOrder3FClass,modProd); //!!TRANSLATE
  Document("Productions",ProdOrderRClass,ProdOrderForm,ProdOrderFClass,modProd);
  Document("Recipe",RecDocRClass,RecForm,RecFClass,modProd);
  Document("Routing",RoutingRClass,RoutingForm,RoutingFClass,modProd); //!!TRANSLATE
  Document("Routing Productions",RoutingPrRClass,RoutingPrForm,RoutingPrFClass,modProd); //!!TRANSLATE
  Document("Routing Production Orders",RoutingPrOrdRClass,RoutingPrOrdForm,RoutingPrOrdFClass,modProd); //!!TRANSLATE

  Maintenance("Create Planned Records from Ordered Items",PlanRecordsVClass,PlanRecordsMn,modProd);
  Maintenance("Update Recipes",UpdRecepyVClass,UpdRecepyMn,modProd);

/* modQT */

  RegisterWS("Quotations","Quotations","New Quotation",QTVc,modQT); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modQT); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modQT); //!!TRANSLATE
  RegisterWS("Prices","Prices","New Price",PLVc,modQT); //!!TRANSLATE

  Setting("Number Series - Quotations",QTSerTClass,modQT);
  Setting("Quotation Classes",QuoteClassTClass,modQT);
  Setting("Quotation Settings",QTSettTClass,modQT);

  Document("Quotations",QTRClass,QTForm,QTFClass,modQT);

  Report("Accepted Quotations Journal",QTHistoryRClass,QTHstRn,0,modQT);
  Report("Outstanding Quotations",QTStkRClass,QTStkRn,0,modQT);
  Report("Pipeline",QTPipelineRClass,QTPipelineRn,0,modQT);
  Report("Price List",PriceRClass,PriceRn,0,modQT);
  Report("Quotation Decision Statistics",QTAccRClass,QTAccRn,0,modQT); //!!TRANSLATE
  Report("Quotation Forecasting",QTForeCRClass,QTForecRn,0,modQT); //!!TRANSLATE
  Report("Quotation Journal",QTJRClass,QTJRn,0,modQT);
  Report("Quotation #Salesman# Statistics",QTSMStatsRClass,QTSMStatRn,0,modQT); //!!TRANSLATE
  Report("Quotation Status",QTStatusRClass,QTStatusRn,0,modQT); //!!TRANSLATE

  Maintenance("Update Quotations",UpdateQTVClass,UpdateQTMn,modQT); //!!TRANSLATE

/* modSO */

  RegisterWS("Orders","Orders","New Order",ORVc,modSO); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modSO); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modSO); //!!TRANSLATE
  RegisterWS("Prices","Prices","New Price",PLVc,modSO); //!!TRANSLATE
  RegisterWS("Sales Contracts","Sales Contracts","New Sales Contract",ORCOVc,modSO); //!!TRANSLATE

  Setting("Customer Items",CUINLClass,modSO); //!!TRANSLATE
  Setting("Delivery Addresses",DelAddrLClass,modSO); //!!TRANSLATE
  Setting("Delivery Modes",DMLClass,modSO); //!!TRANSLATE
  Setting("Delivery Terms",ShipDealLClass,modSO);
  Setting("Down Payments",DownPayTClass,modSO);
  Setting("Hazard Levels",HazLevLClass,modSO); //!!TRANSLATE
  Setting("Number Series - Orders",ORSerTClass,modSO);
  Setting("Order Classes",OrderClassLClass,modSO); //!!TRANSLATE
  Setting("Order Settings",OrdSettTClass,modSO); //!!TRANSLATE
  Setting("Planned Delivery",PlanDeliveryTClass,modSO);
  Setting("#Stock# Reservation Access",ReservLocAccessLClass,modSO); //!!TRANSLATE
  Setting("#Stock# Reservation Settings",StockReservTClass,modSO); //!!TRANSLATE
  Setting("#Stock# Reservations",StockReservLClass,modSO); //!!TRANSLATE

  Document("Customer/#Supplier# Labels",CuLabRClass,CuLabForm,CuLabFClass,modSO); //!!TRANSLATE
  Document("Internal Sales Orders",Or2RClass,Or2Form,Or2FClass,modSO); //!!TRANSLATE
  Document("Orders",ORRClass,OrdForm,OrdFClass,modSO);
  
  Report("Deliverable List",ShipableRClass,ShipableRn,0,modSO);
  Report("Delivery List",DeliveryRClass,DeliveryRn,0,modSO);
  Report("Forecast",ForecastRClass,ForecastRn,0,modSO); //!!TRANSLATE
  Report("GP, Orders",ORGPRClass,ORGPRn,0,modSO);
  Report("Invoiceable Orders",InvableRClass,InvableRn,0,modSO); //!!TRANSLATE
  Report("Item List",ArtRClass,ArtRn,0,modSO);
  Report("Tag/Object/Order Statistics",ORObjStatRClass,ORObjStatRn,0,modSO); //!!TRANSLATE
  Report("Order Journal",ORJRClass,OrdRn,0,modSO);
  Report("Order Payment Status",ORPayStatusRClass,ORPayStatusRn,0,modSO); //!!TRANSLATE
  Report("Order Status",ORInfoRClass,ORInfoRn,0,modSO); //!!TRANSLATE
  Report("Ordered Items",OrdItemRClass,OrdItemRn,0,modSO);
  Report("Outstanding Orders",OrderStockRClass,OrderStockRn,0,modSO);
  Report("Over Delivered Orders",OverShippedRClass,OverShippedRn,0,modSO); //!!TRANSLATE
  Report("Price List",PriceRClass,PriceRn,0,modSO);
  Report("Producible List",MaxprodRClass,MaxprodRn,0,modSO); //!!TRANSLATE
  Report("Sorted Order List",SORJRClass,SORJRn,0,modSO); //!!TRANSLATE
  Report("Sourcing List",SourceRClass,SourceRn,0,modSO); //!!TRANSLATE
  Report("#Stock# Reservations",INReservRClass,INReservRn,0,modSO); //!!TRANSLATE
  
  Maintenance("Barcode, EU Code and Item Code",ICToBCVClass,ICToBcMn,modSO); //!!TRANSLATE
  Maintenance("Create Deliveries from Orders",CreateSHsFSOsVClass,CreateSHsFromSOsMn,modSO); //!!TRANSLATE
  Maintenance("Create Downpayment Invoices",DPFromORVClass,DownPayFromORMn,modSO); //!!TRANSLATE
  Maintenance("Create Planned Records from Ordered Items",PlanRecordsVClass,PlanRecordsMn,modSO);
  Maintenance("Create Planned Records from Orders",PlanSalesVClass,PlanSalesMn,modSO); //!!TRANSLATE
  Maintenance("Create #Purchase Orders#",GenPOFromORVClass,GenPOFromORMn,modSO); //!!TRANSLATE
  Maintenance("Create #Stock# Movements",SMFromORVClass,SMFromORMn,modSO); //!!TRANSLATE
  Maintenance("Group Invoicing",GroupInvoiceVClass,GroupInvoiceMn,modSO); //!!TRANSLATE
  Maintenance("Invoice Delivered Orders",CreateInvVClass,CreateInvMn,modSO); //!!TRANSLATE
  Maintenance("Recalculate Orders",RecalcORVClass,RecalcORMn,modSO); //!!TRANSLATE

/* modSL */
  
  RegisterWS("Invoices","Invoices","New Invoice",IVVc,modSL); //!!TRANSLATE
  RegisterWS("Receipts","Receipts","New Receipt",IPVc,modSL); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modSL); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modSL); //!!TRANSLATE
  RegisterWS("Item Groups","Item Groups","New Item Group",ITVc,modSL); //!!TRANSLATE
  RegisterWS("Internal Invoices","Internal Invoices","New Internal Invoice",IntIVVc,modSL); //!!TRANSLATE

// Cash settings, report and maintenance were removed from #Sales Ledger# because they are POS things, if you want to use SL POS module, you have to get POS module anyway.
  Setting("Account Usage #S/L#",AccTClass,modSL); //!!TRANSLATE
  Setting("Age Limits",AgedTClass,modSL); //!!TRANSLATE
  Setting("Alternative Items",AltINLClass,modSL); //!!TRANSLATE
  Setting("Bonus",BonusDefLClass,modSL); //!!TRANSLATE
  Setting("Classification Types",CTypeLClass,modSL); //!!TRANSLATE
  Setting("Contact Credit Limits",CreditLimitLClass,modSL); //!!TRANSLATE
  Setting("Contact Document Types",CUDocTypeTClass,modSL); //!!TRANSLATE
  Setting("Contact Settings",CustomerSettingTClass,modSL); //!!TRANSLATE
  Setting("Credit Limit",CreditLimitTClass,modSL); //!!TRANSLATE
  Setting("Cross Sales Items",CrossINLClass,modSL); //!!TRANSLATE
  Setting("Customer Categories",CCatLClass,modSL); //!!TRANSLATE
  Setting("Default Items",CompItemLClass,modSL); //!!TRANSLATE
  Setting("Default Payment Modes",DefCashTClass,modSL); //!!TRANSLATE
  Setting("Electronic Invoices Layouts",EInvoiceLayoutTClass,modSL); //!!TRANSLATE
  Setting("Electronic Invoices Queue",EInvoiceQueLClass,modSL); //!!TRANSLATE
  Setting("Electronic Record Statuses",ERecordStatusLClass,modSL); //!!TRANSLATE
  Setting("Environment Tax",RepaTClass,modSL); //!!TRANSLATE
  Setting("Extra Tax Customer Discounts",Tax1RebLClass,modSL); //!!TRANSLATE
  Setting("Factoring Export",FactoringTClass,modSL); //!!TRANSLATE
  Setting("Freight",FreightTClass,modSL); //!!TRANSLATE
  Setting("Freight/Weight Calculation",FreightWeightTClass,modSL); //!!TRANSLATE
  Setting("Gift Vouchers Issued",GCLClass,modSL); //!!TRANSLATE
  Setting("Gift Vouchers Received",GCRLClass,modSL); //!!TRANSLATE
  Setting("Gift Vouchers Settings",GCTClass,modSL); //!!TRANSLATE
  Setting("Gift Vouchers Sold",GCSLClass,modSL); //!!TRANSLATE
  Setting("#Instalments#",InstallmentLClass,modSL); //!!TRANSLATE
  Setting("Interest",IITClass,modSL); //!!TRANSLATE
  Setting("Interest Codes",IntLClass,modSL); //!!TRANSLATE
  Setting("Interest Terms",IRLClass,modSL); //!!TRANSLATE
  Setting("Intrastat Transaction Codes",IntrastatTransCodeTClass,modSL); //!!TRANSLATE
  Setting("Invoice Mail Settings",IVMailTClass,modSL); //!!TRANSLATE
  Setting("Item Classifications",DILClass,modSL); //!!TRANSLATE
  Setting("Item Group Withholdings",WHITLClass,modSL); //!!TRANSLATE
  Setting("Item Settings",ItemSettingTClass,modSL); //!!TRANSLATE
  Setting("Item Status Settings",ItemStatusSettTClass,modSL); //!!TRANSLATE
  Setting("Legal Record Numbers",LegalInvNrTClass,modSL); //!!TRANSLATE
  Setting("Number Series - Contacts",CUSerTClass,modSL);//PRSerTClass //!!TRANSLATE
  Setting("Number Series - Gift Vouchers",GCSerTClass,modSL); //!!TRANSLATE
  Setting("Number Series - Gift Vouchers Received",GCRSerTClass,modSL); //!!TRANSLATE
  Setting("Number Series - Internal Invoices",IntIVSerTClass,modSL); //!!TRANSLATE
  Setting("Number Series - Invoices",IVSerTClass,modSL); //!!TRANSLATE
  Setting("Number Series - Receipts",IPSerTClass,modSL); //!!TRANSLATE
  if (HasLocalization("HRV,POL,SVN,SRB,UKR")) then begin
    Setting("Number Series - #VAT# Corrections #S/L#",VATIVSerTClass,modSL); //!!TRANSLATE
  end;
  Setting("Payment Modes",PMTClass,modSL); //!!TRANSLATE
  Setting("Payment Term Sales A/C",PDSalesAccTClass,modSL); //!!TRANSLATE
  Setting("Payment Terms",PDLClass,modSL); //!!TRANSLATE
  Setting("Receipts Setting",IPTClass,modSL); //!!TRANSLATE
  Setting("Regions",RegionLClass,modSL); //!!TRANSLATE
  Setting("Registration Defaults",RegDefTClass,modSL); //!!TRANSLATE
  Setting("Reminder Texts",RMLClass,modSL); //!!TRANSLATE
  Setting("Sales Invoice Settings",IVTTClass,modSL); //!!TRANSLATE
  Setting("Standard Problems",StandProblemLClass,modSL); //!!TRANSLATE
  Setting("Units",UnitLClass,modSL); //!!TRANSLATE
  if (HasLocalization("HRV,POL,SVN,SRB,UKR")) then begin
    Setting("#VAT# Correction Originals at Our Company",VATIVReasonLClass,modSL); //!!TRANSLATE
    Setting("#VAT# Correction #S/L# Types",VATIVTypeTClass,modSL); //!!TRANSLATE
    Setting("#VAT# Corrections #S/L#",VATIVLClass,modSL); //!!TRANSLATE
    Setting("#VAT# Correction Settings",VATIVTTClass,modSL); //!!TRANSLATE
  end;
  Setting("#VAT# Zone Label",VATZoneLabelTClass,modSL); //!!TRANSLATE
//  Setting("Sales Codes",SalesCodeTClass,modSL); Manual says not used any more. Hmm, the manual is not correct then, they are used in the code!

  Document("Cash Notes",KIVRClass,CashInvForm,CashFClass,modSL); //!!TRANSLATE
  Document("#Credit Notes#",CIVRClass,CredInvForm,CredFClass,modSL); //!!TRANSLATE
  Document("Customer/#Supplier# Labels",CuLabRClass,CuLabForm,CuLabFClass,modSL); //!!TRANSLATE
  Document("Debtors Letter",DebtLetRClass,DebtorLetForm,DebtLetFClass,modSL); //!!TRANSLATE
  Document("EU #VAT# Sales",SLEUVAT2RClass,SLEUVATForm,SLEUVATFClass,modSL); //!!TRANSLATE
  Document("Gift Vouchers",GCRClass,GCForm,GCFClass,modSL);  //!!TRANSLATE
  Document("Interest Invoices",IIVRClass,IIInvForm,IIFClass,modSL); //!!TRANSLATE
  Document("Internal Invoices",IntIVRClass,IntIVForm,IntIVFClass,modSL); //!!TRANSLATE
  Document("Intrastat #S/L#",IntraStaRClass,InStaForm,InStaFClass,modSL); //!!TRANSLATE
  Document("Invoices",IVRClass,InvForm,InvFClass,modSL);  //!!TRANSLATE
  Document("Open Invoice Customer Statement",ARSRClass,ARSForm,ARSFClass,modSL); //!!TRANSLATE
  Document("Periodic Customer Statement",CuPerRClass,CuPerForm,CuPerFClass,modSL); //!!TRANSLATE
  Document("Project Invoices",PIVRClass,ProjInvForm,PRInvFClass,modSL); //!!TRANSLATE
  Document("Receipt Forms",IPDRClass,IPDForm,IPDFClass,modSL); //!!TRANSLATE
  Document("Reminders",RemRClass,RemForm,RemFClass,modSL); //!!TRANSLATE
  if (HasLocalization("HRV,SVN")) then begin
    Document("Sales Book",SalesBookHRVRClass,SalesBookHRVForm,SalesBookHRVFClass,modSL);  //!!TRANSLATE
  end;
  
  if (HasLocalization("HRV,POL,SVN,SRB,UKR")) then begin
    Document("#VAT# Corrections #S/L#",VATIVRClass,VATIVForm,VATIVFClass,modSL);  //!!TRANSLATE
    Document("#VAT# Corrections #S/L# Credit Notes",VATCIVRClass,VATCIVForm,VATCIVFClass,modSL); //!!TRANSLATE
  end;

  Report("Bonus, #Salesman#",BonusRClass,BonusRn,0,modSL); //!!TRANSLATE
  Report("Cash Receipts",CashReceiptRClass,CashReceiptRn,0,modSL); //!!TRANSLATE
  Report("Contact List",CURClass,CustRn,0,modSL); //!!TRANSLATE
  if (HasLocalization("HRV")) then begin
    Report("Consumption Taxes Summary",ConsTaxSumRClass,ConsTaxSumRn,0,modSL); //!!TRANSLATE
  end;
  Report("Credit Notes, Updating #Stock#",CrStckRClass,CrStckRn,0,modSL); //!!TRANSLATE
  Report("Customer Credit Status",CredStatusRClass,CredStatusRn,0,modSL); //!!TRANSLATE
  Report("Customer Sales Statistics",CustSalesRClass,CustSalesRn,0,modSL); //!!TRANSLATE
  Report("Customer Statistics",CustSTRClass,CustSTRn,0,modSL); //!!TRANSLATE
  Report("Customer Status",CustPSRClass,CustPSRn,0,modSL); //!!TRANSLATE
  Report("Customer/Item Statistics",CuArtSTRClass,CuArtSTRn,0,modSL); //!!TRANSLATE
  Report("Discount Statistics",Cust2STRClass,Cust2STRn,0,modSL); //!!TRANSLATE
  Report("Electronic Invoice Status",HTSStatIVRClass,HTSStatIVRn,0,modSL); //!!TRANSLATE
  Report("EU #VAT# Sales",SLEUVATRClass,SLEUVATRn,0,modSL); //!!TRANSLATE
  Report("Gift Vouchers",GiftCerRClass,GiftCerRn,0,modSL); //!!TRANSLATE
  Report("GP, Invoices",IVGPRClass,IVGPRn,0,modSL); //!!TRANSLATE
  Report("Interest Invoicing",CUIntRClass,CUIntRn,0,modSL); //!!TRANSLATE
  Report("Invoice Journal",IVJRClass,InvoiceRn,0,modSL); //!!TRANSLATE
  Report("Invoice Media Status",IVMediaStatusRClass,IVMediaStatusRn,0,modSL); //!!TRANSLATE
  Report("Invoice Status",IVInfoRClass,IVInfoRn,0,modSL); //!!TRANSLATE
  Report("Item Classifications List",DIListRClass,DIListRn,0,modSL); //!!TRANSLATE
  Report("Item Group List",ITListRClass,ITListRn,0,modSL); //!!TRANSLATE
  Report("Item Group Sales Statistics",ItemGrSalesRClass,ItemSales2Rn,0,modSL); //!!TRANSLATE
  Report("Item Group #VAT#",ITVATRClass,ITVATRn,0,modSL); //!!TRANSLATE
  Report("Item List",ArtRClass,ArtRn,0,modSL); //!!TRANSLATE
  Report("Item Multi-Buy Statistics",INMultiBuyStatRClass,INMultiBuyStatRn,0,modSL); //!!TRANSLATE
  Report("Item Price List Statistics",INPriceListStatRClass,INPriceListStatRn,0,modSL); //!!TRANSLATE
  Report("Item/Quantity Statistics",INQtyRClass,INQtyRn,0,modSL); //!!TRANSLATE
  Report("Item/Salesman Statistics",IStatRClass,IStatRn,0,modSL); //!!TRANSLATE
  Report("Item Sales Statistics",ItemSalesRClass,ItemSalesRn,0,modSL); //!!TRANSLATE
  Report("Item Statistics",ArtSTRClass,ArtSTRn,0,modSL); //!!TRANSLATE
  Report("Item Turnover History",ItemTurnRClass,ItemTurnRn,0,modSL);   //!!TRANSLATE
  Report("Legal Invoice Forms Usage",LegInvFormRClass,LegInvFormRn,0,modSL); //!!TRANSLATE
  Report("Monthly Customer Sales History",MonthSalesHistCURClass,MonthSalesHistCURn,0,modSL); //!!TRANSLATE
  Report("Monthly #Salesman# History",MonthSalesHistSMRClass,MonthSalesHistSMRn,0,modSL); //!!TRANSLATE
  Report("#N/L# Transfer, Invoices",BokundRClass,BokundRn,0,modSL); //!!TRANSLATE
  Report("Open Invoice Customer Statement",ARS2RClass,ARS2Rn,0,modSL); //!!TRANSLATE
  Report("Overview of #Instalments#",InstListSLRClass,InstListSLRn,0,modSL); //!!TRANSLATE
  Report("Periodic Customer Statement",CuPer2RClass,CuPerRn,0,modSL); //!!TRANSLATE
  Report("Prepayment History #S/L#",PerPayHisSLRClass,PerPayHisSLRn,0,modSL); //!!TRANSLATE
  Report("Price List",PriceRClass,PriceRn,0,modSL); //!!TRANSLATE
  Report("Receipt History",CUPayHistoryRClass,CUPayHistoryRn,0,modSL); //!!TRANSLATE
  Report("Receipt Journal",IPRClass,IPRn,0,modSL); //!!TRANSLATE
  Report("Receipt/Salesman History", IPSalesManRClass,IPSalesManRn,0,modSL);   //!!TRANSLATE
  Report("Receipts Forecast",IPProgRClass,IPProgRn,0,modSL); //!!TRANSLATE
  Report("#Sales Ledger#",ARRClass,ARRn,0,modSL); //!!TRANSLATE
  Report("#Sales & Purchase Ledger#",ARAPRClass,ARAPRn,0,modSL); //!!TRANSLATE
  Report("#Sales Ledger# Statistics",SLStatRClass,CUHistRn,0,modSL); //!!TRANSLATE
  Report("Sales Per Hour",IVPerHourRClass,IVPerHourRn,0,modSL); //!!TRANSLATE
  Report("Sales Per Location",IVPerLocRClass,IVPerLocRn,0,modSL); //!!TRANSLATE
  Report("Search for Item",SearchItemRClass,SearchItemRn,0,modSL); //!!TRANSLATE
  Report("Serial No. Item Sales Statistics",SerialItemStatRClass,SerialItemStatRn,0,modSL); //!!TRANSLATE
  Report("Transaction Tax Invoices", TransTaxIVRClass,TransTaxIVRn,0,modSL);   //!!TRANSLATE
  Report("#VAT Code# Statistics",SLVATRClass,SLVATRn,0,modSL); //!!TRANSLATE
  Report("#VAT# Customer Sales",RealCustRClass,RealCustRn,0,modSL); //!!TRANSLATE
  Report("#VAT# Differences",LithDiffRClass,LitDifRn,0,modSL); //!!TRANSLATE
  Report("#VAT# per Customer",SLVATCURClass,SLVATCURn,0,modSL); //!!TRANSLATE
  Report("#VAT Reg. Number# History",CUVERClass,CUVERn,0,modSL); //!!TRANSLATE
  Report("#VAT# Report Sales",SLVATRepRClass,SLVATRepRn,0,modSL); //!!TRANSLATE
  if (HasLocalization("SRB")) then begin
    Report("#VAT# Report Sales (Serbia)",SLVATSerRClass,SLVATSerRn,0,modSL);   //!!TRANSLATE
  end;
  Report("Void Report",VoidedRowsRClass,VoidedRowsRn,0,modSL); //!!TRANSLATE

  Export("Analytical Cash Flow",ExportCashFlowEClass,ExportCashFlowEn,modSL); //!!TRANSLATE
  if (HasLocalization("HRV,SVN")) then begin
    Export("(Croatia, Slovenia) Cash Invoices Export",CashInvCroEClass,CashInvExEn,modSL); //!!TRANSLATE
  end;
  Export("Customer Statistics",CustSTEClass,CustSTEn,modSL); //!!TRANSLATE
  Export("Customer Turnover History",CustTurnEClass,CustTurnEn,modSL); //!!TRANSLATE
  Export("Customer/Item Statistics",ICSEClass,ICSEn,modSL); //!!TRANSLATE
  if (HasLocalization("HRV")) then begin
    Export("EU #VAT# Sales",SLEUVATHRVECLass,SLEUVATHRVEn,modSL); //!!TRANSLATE
  end;
  Export("Intrastat Invoices",EngIntrastatIVEClass,EngIntIVEn,modSL); //!!TRANSLATE
  Export("Invoices for Factoring",InvFactEClass,InvFactEn,modSL); //!!TRANSLATE
  if (HasLocalization("SVN")) then begin
    Export("Invoices #S/L# (Slovenia)",IVSloEClass,IVSloEn,modSL); //!!TRANSLATE
  end;
  Export("Item Statistics",ArtSTEClass,ArtSTEn,modSL); //!!TRANSLATE
  Export("Item Turnover History",ItemTurnEClass,ItemTurnEn,modSL); //!!TRANSLATE
  Export("Items to Fiscal Printer Fi550",ItemstoFi550EClass,ItemstoFi550En,modSL); //!!TRANSLATE
  if (HasLocalization("SVN")) then begin
    Export("#S/L# #VAT# Invoices (Slovenia)",SLVATSloEClass,SLVATSloEn,modSL); //!!TRANSLATE
  end;  
  Import("Banking File",RefIPIn,RefIPIn,modSL); //!!TRANSLATE

  Maintenance("Create Down Payment Invoices from Receipts",DownPayFromIPVClass,DownPayFromIPMn,modSL); //!!TRANSLATE
  Maintenance("Create Interest Invoices",CUIntVClass,CUIntMn,modSL); //!!TRANSLATE
  Maintenance("Create Mails from Invoices",IVToMailVClass,IVToMailMn,modSL); //!!TRANSLATE
  Maintenance("Create Open Invoice Customer Statement Email",ARSEmailVClass,ARSEmailMn,modSL); //!!TRANSLATE
  Maintenance("Create Periodic Customer Statement Email",CUPerEmailVClass,CUPerEmailMn,modSL); // We have this belowe SendPerStatVClass //!!TRANSLATE
  if (HasLocalization("HRV,POL,SVN,SRB,UKR")) then begin
    Maintenance("Create #VAT# Corrections #S/L#",VATIVVClass,VATIVMn,modSL); //!!TRANSLATE
  end;
  Maintenance("Delete Unused Items",DelNotUsedINVClass,DelNotUsedINMn,modSL); //!!TRANSLATE
  Maintenance("OK Invoices",OKInvVClass,OKInvMn,modSL); //!!TRANSLATE
  Maintenance("OK Invoices (Non Stop)",OKInvVClass,OKInvNSMn,modSL); //!!TRANSLATE
  Maintenance("Recreate Reference Field",RebFinRefVClass,RebFinRefMn,modSL); //!!TRANSLATE
  Maintenance("Transfer to Bad Debtors",BadCUVClass,BadCUMn,modSL); //!!TRANSLATE
  Maintenance("Update Customer Classification",CustUpClass,CustUpMn,modSL); //!!TRANSLATE
  Maintenance("Write off Invoices",WriteOffVClass,WriteOffMn,modSL); //!!TRANSLATE

/* modSVO */

  RegisterWS("Service Orders","Service Orders","New Service Order",SVOVc,modSVO); //!!TRANSLATE
  RegisterWS("Work Orders","Work Orders","New Work Order",WOVc,modSVO); //!!TRANSLATE
  RegisterWS("Work Sheets","Work Sheets","New Work Sheet",WSVc,modSVO); //!!TRANSLATE
  Register("Service #Stock# Transactions","Service #Stock# Transactions",SVGMVc,modSVO); //!!TRANSLATE
  Register("Work Sheet Transactions","Work Sheet Transactions",WSIVVc,modSVO); //!!TRANSLATE
  RegisterWS("Contacts","Contacts","New Contact",CUVc,modSVO); //!!TRANSLATE
  RegisterWS("Items","Items","New Item",INVc,modSVO); //!!TRANSLATE
  RegisterWS("Known Serial Numbers","Known Serial Numbers","New Known Serial Number",SVOSerVc,modSVO); //!!TRANSLATE

  Setting("Account Usage Service Order",AccSVOTClass,modSVO); //!!TRANSLATE
//  Setting("Apple GSX Queue",GSXQueueLClass,modSVO);

  Setting("Apple GSX Settings",GSXSettingsTClass,modSVO); //!!TRANSLATE
  Setting("Batch Quality Control",QualConLClass,modSVO); //!!TRANSLATE
  Setting("Batch Quality Control Rules",QCTestRulesTClass,modSVO); //!!TRANSLATE
//  Setting("Batch Quality Control Units",QCUnitLClass,modSVO);
  Setting("Batch Quality Control Templates",QCTemplateLClass,modSVO); //!!TRANSLATE
  Setting("Batch Quality Control Tests",QCTestLClass,modSVO); //!!TRANSLATE
  Setting("Batch Status",BatchStatusLClass,modSVO); //!!TRANSLATE
  Setting("Classification Types",CTypeLClass,modSVO); //!!TRANSLATE
  Setting("Contact Classifications",CClassLClass,modSVO); //!!TRANSLATE
//  Setting("Contact Persons",ContactLClass,modSVO);
  Setting("Info in Customer Status Report",CustPSLClass,modSVO); //!!TRANSLATE
  Setting("Locations",LocationLClass,modSVO); //!!TRANSLATE
  Setting("Number Series - Service Orders",SVOSerTClass,modSVO); //!!TRANSLATE
  Setting("Number Series - Service #Stock# Transactions",SVGMSerTClass,modSVO); //!!TRANSLATE
  Setting("Number Series - Work Orders",WOSerTClass,modSVO); //!!TRANSLATE
  Setting("Number Series - Work Sheets",WSSerTClass,modSVO); //!!TRANSLATE
  Setting("Order Classes",OrderClassLClass,modSVO); //!!TRANSLATE
  Setting("Payment Terms",PDLClass,modSVO); //!!TRANSLATE
  Setting("Planned Delivery",PlanDeliveryTClass,modSVO); //!!TRANSLATE
  Setting("Replaced Items",ReplItemsLClass,modSVO); //!!TRANSLATE
  Setting("Serial Number Text",SVOTextLClass,modSVO); //!!TRANSLATE
  Setting("Standard Problem Modifiers",StdProblemModLClass,modSVO); //!!TRANSLATE
  Setting("Standard Problems",StandProblemLClass,modSVO); //!!TRANSLATE
  Setting("#Stock# Settings",MainStockTClass,modSVO); //!!TRANSLATE

  Import("Known Serial Numbers",SVOSerIn,SVOSerIn,modSVO); // Now it is possible to use, I have changed how it works. //!!TRANSLATE

  Document("Service Orders",SVORClass,SVOForm,SVOFClass,modSVO); //!!TRANSLATE
  Document("Service #Stock# Transactions",SVGMRClass,SVGMForm,SVGMFClass,modSVO); //!!TRANSLATE
  Document("Work Orders",WOrdRClass,WOrdForm,WOrdFClass,modSVO); //!!TRANSLATE
  Document("Work Sheets",WSRClass,WSForm,WSFClass,modSVO); //!!TRANSLATE

  Report("Batch Quality Control Results",QualConResRClass,QualConResRn,0,modSVO); //!!TRANSLATE
  Report("Batch Quality Control Tests",QualConRClass,QualConRn,0,modSVO); //!!TRANSLATE
  Report("Batch Quality Reclamations",QualConRecRClass,QualConRecRn,0,modSVO); //!!TRANSLATE
  Report("Item Statistics",ArtSTRClass,ArtSTRn,0,modSVO); //!!TRANSLATE
  Report("Outstanding Service Orders",SVOStockRClass,SVOStockRn,0,modSVO); //!!TRANSLATE
  Report("Serial Number History",SerialNrRClass,SerialNrRn,0,modSVO); //!!TRANSLATE
  Report("Service Order Employee Statistics",SVOEMStatRClass,SVOEMStatRn,0,modSVO); //!!TRANSLATE
  Report("Service Order Journal",SVOListRClass,SVOListRn,0,modSVO); //!!TRANSLATE
  Report("Service Order Status",SVOStaRClass,SVOStaRn,0,modSVO); //!!TRANSLATE
  Report("Service #Stock# Item History",SVOINRClass,SVOItemRn,0,modSVO); //!!TRANSLATE
  Report("Service #Stock# Transaction Journal",GIOListRClass,GIOListRn,0,modSVO); //!!TRANSLATE
  Report("Work Order Journal",WOListRClass,WOListRn,0,modSVO); //!!TRANSLATE
  Report("Work Sheet Journal",WSListRClass,WSListRn,0,modSVO); //!!TRANSLATE
  Report("Work Sheet Transactions",WSTransRClass,WSTranRn,0,modSVO); //!!TRANSLATE

  Maintenance("Batch Status Change",BatchStatChVClass,BatchStatChMn,modSVO); //!!TRANSLATE
  Maintenance("Create Work Orders",WorkOrderVClass,WorkOrderMn,modSVO); //!!TRANSLATE
  Maintenance("Recalculate Invoiced",RecSVOVClass,RecSVOMn,modSVO); //!!TRANSLATE

/* modIN */

  RegisterWS("Deliveries","Deliveries","New Delivery",SHVc,modIN); //!!TRANSLATE
  RegisterWS("Goods Receipts","Goods Receipts","New Goods Receipt",PUVc,modIN); //!!TRANSLATE
  RegisterWS("#Stock Depreciations#","#Stock Depreciations#","New #Stock Depreciation#",SDVc,modIN); //!!TRANSLATE
  if (HasMultiLocations) then begin
    RegisterWS("#Stock# Movements","#Stock# Movements","New #Stock# Movement",StockMovVc,modIN); //!!TRANSLATE
  end;
  if (HasReturnedGoods) then begin
    RegisterWS("Returned Goods","Returned Goods","New Returned Goods",RetVc,modIN); //!!TRANSLATE
  end;
  if (HasRetGoodsToSupp) then begin
    RegisterWS("Returned Goods to #Suppliers#","Ret. Goods to #Suppliers#","New Ret. Goods to #Supplier#",RetPUVc,modIN); //!!TRANSLATE
  end;
  RegisterWS("#Stocktaking#","#Stocktaking#","New #Stocktaking#",StockTakeVc,modIN); //!!TRANSLATE
  RegisterWS("#Stock# Revaluations","#Stock# Revaluations","New #Stock# Revaluation",SRVc,modIN); //!!TRANSLATE

  Setting("Account Usage #Stock#",INAccTClass,modIN);  //!!TRANSLATE
  Setting("Barcodes",BarcodeLClass,modIN); //!!TRANSLATE
  Setting("Base Price Changes",BPCLClass,modIN); //!!TRANSLATE
  Setting("Batch Specifications",BatchTextLClass,modIN); //!!TRANSLATE
  Setting("Cost Accounting",CostAccTClass,modIN); //!!TRANSLATE
  Setting("Delivery Packages",SHPackagesLClass,modIN); //!!TRANSLATE
  Setting("Freight Companies",FreightCompanyLClass,modIN); //!!TRANSLATE
  Setting("Item Varieties",VARLClass,modIN); //!!TRANSLATE
  Setting("Item Variety Groups",VARGLClass,modIN); //!!TRANSLATE
  Setting("Items",INLClass,modIN); //!!TRANSLATE
  Setting("Location Accounts",LocationAccTClass,modIN);  //!!TRANSLATE
  Setting("Location Classification Types",LocClTypeLClass,modIN); //!!TRANSLATE
  Setting("Location Classifications",LocClLClass,modIN); //!!TRANSLATE
  Setting("Location Groups",LocGrLClass,modIN); //!!TRANSLATE
  Setting("Locations",LocationLClass,modIN); //!!TRANSLATE
  Setting("Minimum #Stock# Levels",MinPerLocLClass,modIN); //!!TRANSLATE
  Setting("Number Series - Deliveries",SHSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - Goods Receipts",PUSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - Returned Goods",RetSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - Returned Goods to #Supplier#",RetPUSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - #Stock Depreciations#",SDSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - #Stock# Movements",StockMovSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - #Stock# Movements Invoices",StockMovInvSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - #Stock# Revaluations",SRSerTClass,modIN); //!!TRANSLATE
  Setting("Number Series - #Stocktaking#",StockTakeSerTClass,modIN); //!!TRANSLATE
  Setting("Pack Types",PackTypeLClass,modIN); //!!TRANSLATE
  Setting("Picking Lists",PrickingListTClass,modIN); //!!TRANSLATE
  Setting("Recipes",RecLClass,modIN); //!!TRANSLATE
  Setting("Returned Goods Settings",RetGoodsTClass,modIN); //!!TRANSLATE
  Setting("Routes",DelRouteLClass,modIN); //!!TRANSLATE
  Setting("Routes/Locations Setting",CustRouteLClass,modIN); //!!TRANSLATE
  Setting("Serial Number Tracking",SerNrTrackTClass,modIN); //!!TRANSLATE
  Setting("Sources",SourceLClass,modIN); //!!TRANSLATE
  Setting("#Stock# Movement Durations",DurationLClass,modIN); //!!TRANSLATE
  Setting("#Stock# Revaluation Settings",SRSTClass,modIN); //!!TRANSLATE
  Setting("#Stock# Settings",MainStockTClass,modIN); //!!TRANSLATE
  Setting("Structured Items",StructPrintTClass,modIN); //!!TRANSLATE
  Setting("Supersession Items",SupersessionINLClass,modIN); //!!TRANSLATE
  Setting("#Supplier# Store ID's",VEStoreIDLClass,modIN); //!!TRANSLATE
  Setting("User Def. Field Labels - Extra Costs",ExtraCostLabelTClass,modIN); //!!TRANSLATE
  Setting("Variety Masks",VARMaskTClass,modIN); //!!TRANSLATE
  Setting("Variety Sets",VARMasksLClass,modIN); //!!TRANSLATE
  Setting("Variety Settings",VarietyTClass,modIN); //!!TRANSLATE
  Setting("Variety Subsets",VARSubsetsLClass,modIN); //!!TRANSLATE
  Setting("Weighted Average",WeigAvLClass,modIN); //!!TRANSLATE

  Document("Address Labels",AdrLabRClass,AdrLabForm,AdrLabFClass,modIN); //!!TRANSLATE
  Document("Base Price Change",BasePriceChangeRClass,BPChangeForm,BasePriceChangeFClass,modIN); //!!TRANSLATE
  Document("Delivery Notes",Sh1RClass,Sh1Form,Sh1FClass,modIN); //!!TRANSLATE
  Document("Freight Labels",SHLabRClass,SHLabForm,SHLabFClass,modIN); //!!TRANSLATE
  Document("Goods Receipt Labels",PULabRClass,PULabForm,PULabFClass,modIN); //!!TRANSLATE
  Document("Goods Receipts",PurchaseRClass,PurchaseForm,PurchaseFClass,modIN); //!!TRANSLATE
  Document("Item Labels",ItemLabelRClass,ItemLabelForm,ItemLabelFClass,modIN); //!!TRANSLATE
  Document("Picking Lists",Sh2RClass,Sh2Form,Sh2FClass,modIN); //!!TRANSLATE
  Document("Proforma Deliveries",Sh3RClass,Sh3Form,Sh3FClass,modIN); //!!TRANSLATE
  Document("Returned Goods",RetRClass,RetForm,RetFClass,modIN); //!!TRANSLATE
  Document("Returned Goods To #Supplier#",RetPURClass,RetPurchaseForm,RetPUFClass,modIN); //!!TRANSLATE
  Document("#Stock Depreciations#",SDRClass,SDForm,SDFClass,modIN); //!!TRANSLATE
  Document("#Stock# Movements",StockMovRClass,StockMovForm,StockMovFClass,modIN); //!!TRANSLATE
  if (HasConsStockMoveInvoices) then begin
    Document("#Stock# Movement Invoices",StockMovInvRClass,StockMovInvForm,StockMovInvFClass,modIN); //!!TRANSLATE
  end;
  Document("#Stock# Revaluations",SRRClass,SRForm,SRFClass,modIN); //!!TRANSLATE
  Document("#Stocktaking# Comparison",STRClass,StockTakeForm,StockTakeFClass,modIN); //!!TRANSLATE

  Report("Aged #Stock# Analysis",AgedINRClass,AgedINRn,0,modIN); //!!TRANSLATE
  Report("Best Before List",BestBefRClass,BestBefRn,0,modIN); //!!TRANSLATE
  Report("Cost Price Analysis",INCostAnalyseRClass,INCostAnalyseRn,0,modIN); //!!TRANSLATE
  Report("Credit Notes, Updating #Stock#",CrStckRClass,CrStckRn,0,modIN); //!!TRANSLATE
  Report("Deficiency List",PurRClass,PurRn,0,modIN); //!!TRANSLATE
  Report("Deficiency List per Location",PurLocRClass,PurLocRn,0,modIN); //!!TRANSLATE
  Report("Delivery Journal",SHJRClass,ShipRn,0,modIN); //!!TRANSLATE
  Report("Delivery List",SHListRClass,ShipListRn,0,modIN); //!!TRANSLATE
  if (HasLocalization("SRB")) then begin
    Report("Evidence of Trade (KEPU)",KEPURClass,KEPURn,0,modIN); //!!TRANSLATE
  end;
  if (HasLocalization("HRV")) then begin
    Report("Evidence of Trade (KP)",KPHRVRClass,KPHRVRn,0,modIN);   //!!TRANSLATE
  end;
  Report("Goods Receipt Journal",PUJRClass,PUJRn,0,modIN); //!!TRANSLATE
  Report("Goods Receipt List",PUListRClass,PUListRn,0,modIN); //!!TRANSLATE
//  Report("Goods Receipt Reconciliation",PUReconRClass,PUReconRn,0,modIN);
  Report("Item Group List",ITListRClass,ITListRn,0,modIN); //!!TRANSLATE
  Report("Item History",INrsRClass,INrsRn,0,modIN);   //!!TRANSLATE
  Report("Item/Delivery Mode Statistics",INDMSRClass,INDMRn,0,modIN); //!!TRANSLATE
  Report("Location List",LocationRClass,LocationRn,0,modIN); //!!TRANSLATE
  Report("Recipe List (Made of)",Rec2RClass,Rec2Rn,0,modIN); //!!TRANSLATE
  Report("Returned Goods Journal",RetJRClass,RetGoodsJRn,0,modIN); //!!TRANSLATE
  Report("Returned Goods To #Supplier# Journal",RetPUJRClass,RetPUJRn,0,modIN); //!!TRANSLATE
  if (HasLocalization("HRV")) then begin
    Report("Sales Price Calculation",SPCHRVRClass,SPCHRVRn,0,modIN); //!!TRANSLATE
  end;
  Report("Serial Number History",SerialNrRClass,SerialNrRn,0,modIN); //!!TRANSLATE
  Report("Source List",SourRClass,SourceListRn,0,modIN);   //!!TRANSLATE
  Report("#Stock Depreciation# Journal",SDJRClass,StockDepRn,0,modIN); //!!TRANSLATE
  Report("#Stock# In Journal",StockJInRClass,StockInRn,0,modIN); //!!TRANSLATE
  Report("#Stock# List",INRClass,InvValRn,0,modIN); //!!TRANSLATE
  Report("#Stock# List Comparison",StDifRClass,StDifRn,0,modIN); //!!TRANSLATE
  Report("#Stock# Movement Journal",StockMovJRClass,StockMovJRn,0,modIN); //!!TRANSLATE
  Report("#Stock# Out Journal",StockJOutRClass,StockOutRn,0,modIN); //!!TRANSLATE
  Report("#Stock# Revaluation Journal",SRJRClass,StockRevJRn,0,modIN); //!!TRANSLATE
  Report("#Stocktaking# Comparison",STCompRClass,STCompRn,0,modIN); //!!TRANSLATE
  Report("#Stocktaking# List",StockTakeRClass,StockTakeRn,0,modIN); //!!TRANSLATE
  Report("#Stocktaking# Journal",StTakeJRClass,StTakeJRn,0,modIN); //!!TRANSLATE
  Report("#Supplier#/Item Statistics",VeInRClass,VeInRn,0,modIN); //!!TRANSLATE
  if (HasLocalization("SRB")) then begin
    Report("Trade Book",TradeBookRClass,TradeBookRn,0,modIN);   //!!TRANSLATE
  end;
  Report("Trip Sheet",TripSheetRClass,TripSheetRn,0,modIN); //!!TRANSLATE
  Report("Varieties Enquiry",AvailVarsRClass,AvailVarsRn,0,modIN); //!!TRANSLATE
  Report("Varieties In #Stock#",VARMaskStockRClass,VARMaskStockRn,0,modIN); //!!TRANSLATE
  Report("Varieties Control",VarsControlRClass,VarsControlRn,0,modIN); //!!TRANSLATE
  Report("Weighted Average",WeighAvRClass,WeighAvRn,0,modIN); //!!TRANSLATE
  
  Export("#Stock# Balance",StBalClass,StBalEn,modIN); //!!TRANSLATE
  Export("#Stock# List",INEClass,InvValEn,modIN); //!!TRANSLATE

  Maintenance("Aged #Stock# Revaluation",AgedStockRevVClass,AgedStockRevMn,modIN); //!!TRANSLATE
  Maintenance("Cost Price Analysis Revaluation",INCostAnalyseVClass,INCostAnalyseMn,modIN); //!!TRANSLATE
  Maintenance("Create #Stocktaking# Records",GenSTVClass,GenSTMn,modIN); //!!TRANSLATE
  Maintenance("#Stocktaking# Comparison",STCompVClass,STCompMn,modIN); //!!TRANSLATE
  Maintenance("Update Item Cost Price",UpdInpriceVClass,UpdInpriceMn,modIN); //!!TRANSLATE
  Maintenance("Update Recipes",UpdRecepyVClass,UpdRecepyMn,modIN); //!!TRANSLATE


/* modDBMain */

  Register("Data Purge","Data Purge",RegArchiveVc,modDBMain); //!!TRANSLATE
  Register("Attached Files","Attached Files",Attach2Vc,modDBMain); //!!TRANSLATE
  Register("Notes","Notes",NotepadVc,modDBMain); //!!TRANSLATE
  Register("Messages","Messages",SMSVc,modDBMain); //!!TRANSLATE

// Norway, you can put this to modSL or something, to have easier access

  Report("Activities in Other Companies",ActUserCompRClass,ActUserCompRn,0,modDBMain); //!!TRANSLATE
  Report("Activity Type Check",ActTypeCheckRClass,ActTypeCheckRn,0,modDBMain); //!!TRANSLATE
  Report("Message History",ChatHistoryRClass,ChatHistoryRn,0,modDBMain); //!!TRANSLATE
  Report("Global Message History",GlobalChatHistoryRClass,GlobalChatHistoryRn,0,modDBMain); //!!TRANSLATE
  Report("Close Items",CloseINRClass,CloseINRn,0,modDBMain); //!!TRANSLATE
  Report("Delay Debug Report",DelayRClass,DelayRn,0,modDBMain); //!!TRANSLATE
  Report("Missing Linked Records",LinkedRecsRClass,LinkedRecsRn,0,modDBMain); //!!TRANSLATE
  Report("Missing Records from Connected Registers",ConectedRecsRClass,ConectedRecsRn,0,modDBMain); //!!TRANSLATE
  Report("Order Integrity Check",ORIntCheckRClass,ORIntCheckRn,0,modDBMain); //!!TRANSLATE
  Report("Old #VAT# Code Invoice Test",OldVATCodeTestRClass,OldVATCodeTestRn,0,modDBMain); //!!TRANSLATE
  Report("Skype Call History",SkypeCallHistoryRClass,SkypeCallHistoryRn,0,modDBMain); //!!TRANSLATE
  Report("Skype Message Count",SkypeMessageCountRClass,SkypeMessageCountRn,0,modDBMain); //!!TRANSLATE
  Report("User Log",UserLogRClass,UserLogRn,0,modDBMain); //!!TRANSLATE
  Report("Transaction Count",TransactionCountRClass,TransactionCountRn,0,modDBMain); //!!TRANSLATE

  Export("Companies Text Backup",TBE2Class,CompanyTBEn,modDBMain); //!!TRANSLATE
  Export(ProductName & " Files",HWFilesClass,HWFilesEn,modDBMain); //!!TRANSLATE
  Export("Special Company Backup",TBE3Class,SpecCompTBEn,modDBMain); //!!TRANSLATE
  Export("Register Export",ExpRegEClass,ExpRegEn,modDBMain); //!!TRANSLATE

  Setting("Agreement Charges",RentChrgLClass,modDBMain); //!!TRANSLATE
  Setting("Asset History Support Register",InvrsLClass,modDBMain); //!!TRANSLATE
  Setting("Chat Name to Contacts",ChatNameContactLClass,modDBMain); //!!TRANSLATE
  Setting("Data Purge Details",RegArchiveDetailLClass,modDBMain); //!!TRANSLATE
  Setting("Deficiency #Stock#",DfncyStockLClass,modDBMain); //!!TRANSLATE
  Setting("#Favourite# Activity Types",FavActTypeLClass,modDBMain); //!!TRANSLATE
  Setting("Form Definitions",FormDefLClass,modDBMain); //!!TRANSLATE
  Setting("#Instalments# AP",APInstallLClass,modDBMain); //!!TRANSLATE
  Setting("#Instalments# AR",ARInstallLClass,modDBMain); //!!TRANSLATE
  Setting("#Instalment# History",ARInstallHistLClass,modDBMain); //!!TRANSLATE
  Setting("Item History Support Register",ItemHistLClass,modDBMain); //!!TRANSLATE
  Setting("Item Sales Statistics",STLClass,modDBMain); //!!TRANSLATE
  Setting("Item Status Support Register",ItemStatusLClass,modDBMain); //!!TRANSLATE
  Setting("Item Internal #Stock# Status Support Register",IntISLClass,modDBMain); //!!TRANSLATE
  Setting("Item Status at Positions Support Register",PISLClass,modDBMain); //!!TRANSLATE
  Setting("Job Descriptions (old)",JobDescTClass,modDBMain); //!!TRANSLATE
  Setting("Local Messages",SMSLocLClass,modDBMain); //!!TRANSLATE
  Setting("Legal Record Numbers",OffSerNrLClass,modDBMain); //!!TRANSLATE
  Setting("Log Item Status Updates",TestItemStatusTClass,modDBMain); //!!TRANSLATE
  Setting("Loyalty Points History",PointsHistLClass,modDBMain); //!!TRANSLATE
  Setting("Message Filter",SMSFilterLClass,modDBMain); //!!TRANSLATE
  Setting("Payment History",OPrsLClass,modDBMain); //!!TRANSLATE
  Setting("POS Journal",POSJournalLClass,modDBMain); //!!TRANSLATE
  Setting("Cashup Hist",CashupHistLClass,modDBMain); //!!TRANSLATE
  Setting("Prepayments AP",APPayHistLClass,modDBMain); //!!TRANSLATE
  Setting("Prepayments AR",ARPayHistLClass,modDBMain); //!!TRANSLATE
  Setting("Prepayments Open AR",ARPayLClass,modDBMain); //!!TRANSLATE
  Setting("Price Variance",VarianceStatusLClass,modDBMain); //!!TRANSLATE
  Setting("Product Name",ProductNameTClass,modDBMain); //!!TRANSLATE
  Setting("Receipt History",IPrsLClass,modDBMain); //!!TRANSLATE
  Setting("Record Links",RLinkLClass,modDBMain); //!!TRANSLATE
  Setting("Resort Event History Support Register",RsrtEventHistLClass,modDBMain); //!!TRANSLATE
  Setting("Sequence Numbers",SeqNrTClass,modDBMain); //!!TRANSLATE
  Setting("Serial Number Support Register",SerBalLClass,modDBMain); //!!TRANSLATE
  Setting("Skype Import Progress",MsgImportProgressLClass,modDBMain); //!!TRANSLATE
  Setting("Status History - Cheques",CheckHistLClass,modDBMain); //!!TRANSLATE
  Setting("Status History - Own Cheques",OwnCheckHistLClass,modDBMain); //!!TRANSLATE
  Setting("#Suppliers# Retentions",VEPRRetentionLClass,modDBMain); //!!TRANSLATE
  Setting("Temp #Stock#",TempStockLClass,modDBMain); //!!TRANSLATE
  Setting("User Defined",RepDefTClass,modDBMain); //!!TRANSLATE
  Setting("User Defined Reports",UserDefRepLClass,modDBMain); //!!TRANSLATE
  Setting("User Defined Columns",UserDefRepColumnsLClass,modDBMain); //!!TRANSLATE
  Setting("User Defined Lines",UserDefRepLinesLClass,modDBMain); //!!TRANSLATE
  Setting("UUID History",UUIDHistoryLClass,modDBMain); //!!TRANSLATE
  Setting("#VAT# Codes (Old)",OldVATCodeTClass,modDBMain); //!!TRANSLATE
  Setting("XS",XSLClass,modDBMain); //!!TRANSLATE
  Setting("XSrs",XSrsLClass,modDBMain); //!!TRANSLATE
  Setting("PurgeTR",PurgeTRLClass,modDBMain); //!!TRANSLATE

  Maintenance("Add #Salesman#",AddSalesManVClass,AddSalesManMn,modDBMain); //!!TRANSLATE
  Maintenance("Clear and resync register",ClearAndResetSyncVClass,ClearAndResetSyncMn,modDBMain); //!!TRANSLATE
  Maintenance("Clear Empty RLinks",ClearRLinkVClass,ClearRLinkMn,modDBMain); //!!TRANSLATE
  Maintenance("Close Items",CloseINVClass,CloseINMn,modDBMain); //!!TRANSLATE
  Maintenance("Correct Attachment Filenames",Attach2FixUUIDFileVClass,Attach2FixUUIDFileMn,modDBMain); //!!TRANSLATE
  Maintenance("Corrections to Shopping Basket",CorrectJobInfVClass,CorrectJobInfMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Autoupdate Clients",MakeAutoClientsVClass,MakeAutoClientsMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Contracts",CreateCOVClass,CreateCOMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Instalments History",CreateInstlHistVClass,CreateInstlHistMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Random Bar Tabs",CreateRandomRestAccVClass,CreateRandomRestAccMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Random Customers",CreateRandomCustomersVClass,CreateRandomCustomersMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Random Invoices",CreateRandomInvoicesVClass,CreateRandomInvoicesMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Random Items",CreateRandomItemsVClass,CreateRandomItemsMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Random Orders",CreateRandomOrdersVClass,CreateRandomOrdersMn,modDBMain); //!!TRANSLATE
  Maintenance("Create Random POS Invoices",CreateRandomIVCashVClass,CreateRandomIVCashMn,modDBMain); //!!TRANSLATE
  Maintenance("Data Purge",RegArchiveVClass,RegArchiveMn,modDBMain); //!!TRANSLATE
  Maintenance("Delete Asset Transactions",DelATTransVClass,DelATTransMn,modDBMain); //!!TRANSLATE
  Maintenance("Delete Attachments",ClearAttachVClass,ClearAttachMn,modDBMain); //!!TRANSLATE
  Maintenance("Fill-up Sales Group",PutSalesGroupVClass,PutSalesGroupMn,modDBMain); //!!TRANSLATE
  Maintenance("Generate Random #N/L# Trans",RandomTransVClass,RandomTransMn,modDBMain); //!!TRANSLATE
  Maintenance("Generate Random Sales Orders",RandomORVClass,RandomORMn,modDBMain); //!!TRANSLATE
  Maintenance("Move Between Companies",MoveRecordsVcVClass,MoveRecordsVcMn,modDBMain); //!!TRANSLATE
  Maintenance("OK #Stock# Records",OKStockVClass,OKStockMn,modDBMain); //!!TRANSLATE
  Maintenance("Rebuild Project Transactions",RebPTVClass,RebPTMn,modDBMain); //!!TRANSLATE
  Maintenance("Restore Project Transactions",ChPrTransVClass,ChPrTransMn,modDBMain); //!!TRANSLATE
  Maintenance("Renumber System Records",RenoSysRecVClass,RenoSysRecMn,modDBMain); //!!TRANSLATE
//  Maintenance("Rebuild Support Registers",RebuildSupVClass,RebuildSupMn,modDBMain);
  Maintenance("Update Invoices",FixIVBaseSumVClass,FixIVBaseSumMn,modDBMain); //!!TRANSLATE
  Maintenance("Update Trans. Registers Base Cur. Rate",UpdTransBRateVClass,UpdTransBRateMn,modDBMain); //!!TRANSLATE

  end;

  return;
end;
