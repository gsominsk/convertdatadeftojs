external procedure SetProductTags();

/* Harusm.hal */

#ifdef HAL
/* This is no longer an Event, make sure you don't have this in */
//external function Boolean HasJewelleryInterface();

//event startup
begin
  string 255 country;
  
  SetGlobalBoolean("IsBooks",true);
  SetProductTags;
 
  SetLangMode(LangRussian,"RUS",0);

/* The modules should keep there codes even if we rename the modules. The code is part of the Export format */
  Module("Активы","",730,modAT2);
  Module("Генератор отчетов","",730,modRepGen);
  Module("Зарплата","",730,modSAL);
  Module("Затраты","",730,modExp);
  Module("Интеграция","",730,modInteg);
  Module("Интернет магазин и CMS","",730,modWebShopNG);
//if (ValuePack(5)) then begin    
  Module("Календарь","",730,modCAL);
//end;
if (ValuePack(2)) then begin    
  Module("Калькуляция проектов","",730,modTS);
end;
  Module("Кассовая книга","",730,modCL);
 if (ValuePack(9)) then begin  
  Module("Кассовый терминал","",730,modPOS);
end;
  Module("Квартирное товарищество","",730,modPY);
  Module("Ключи","",730,modEnabReg);
  Module("Data Integrity","",730,modDY);  
  Module("Контракты","",730,modCO);
  Module("Локально","",730,modLocal);
  Module("Настройки пользователя","",730,modUserSet);
  Module("Обслуживание базы данных","",730,modDBMain);  
  Module("Планирование ресурсов","",730,modPP);
//if (ValuePack(8) or ValuePack(5)) then begin    
  Module("Планировщик задач","",730,modTASK);
//end;
if (ValuePack(6)) then begin    
  Module("Почта и конференции","",730,modEmail);
end; 
  Module("Комплектование","",730,modProd);
  Module("Расчеты с клиентами","",730,modSL);
  Module("Расчеты с поставщиками","",730,modPL);
  Module("Сервер","",730,modServ);
  Module("Система","",730,modSY);
if (ValuePack(1)) then begin    
  Module("Логистика","",730,modIN);
end;
//if (ValuePack(5)) then begin    
  Module("CRM","",730,modCRM);
//end;
if (ValuePack(4)) then begin    
  Module("Управление продажами","",730,modSO);
end;
  Module("Технические параметры","",730,modTC);
  Module("Финансы","",730,modNL);
  
  if (TestEnablerFile("EnAppBill")) then begin
    Module("App Billing","",730,modAppBilling);
  end;
  
  RoleMod("Full Client","",730,rolFC,"");
  RoleMod("Mobile POS","",730,rolMP,"MobilePOSMasterWClass");
  RoleMod("Mobile Reports","",730,rolMR,"MobileReportsMasterWClass");
  RoleMod("Mobile Sales","",730,rolMM,"MobileSalesMasterWClass");
  RoleMod("Mobile Stock","",730,rolMS,"MobileStockMasterWClass");

/* modCL - Касса*/

  Register("Приход","Приход",CLInVc,modCL);
  Register("Расход","Расход",CLOutVc,modCL);
  Register("Платежи клиентов","Платежи клиентов",IPVc,modCL);
  Register("Платежи поставщикам"," Платежи поставщикам",OPVc,modCL);

  Setting("Настройки кассы",MainCLTClass,modCL);
  Setting("Kорреспонденция",CLCorspLClass,modCL);
  Setting("Серии номеров - Приход",CLInSerTClass,modCL);
  Setting("Серии номеров - Расход",CLOutSerTClass,modCL);
  Setting("Способы оплаты",PMTClass,modCL);
  
  Report("Журнал прихода в кассу",CLInJRClass,CLInJRn,0,modCL);  
  Report("Журнал расхода из кассы",CLOutJRClass,CLOutJRn,0,modCL);  
  Report("Кассовая книга по записям операций",CashBookLatRClass,CashBookLatRn,0,modCL);
  Report("Отчет по кассе",DayBalCashRClass,DayBalCashRn,0,modCL);
  Report("Список корреспондирующих счетов",CCtasRClass,CCtasRn,0,modCL);  
  Report("Счета-фактуры с приходными ордерами",IVCLInRClass,IVCLInRn,0,modCL);
  Report("Счета-фактуры с расходными ордерами",VICLOutRClass,VICLOutRn,0,modCL);
  Report("Счета-фактуры без приходных ордеров",IVnoCLInRClass,IVnoCLInRn,0,modCL);
  Report("Счета-фактуры без расходных ордеров",VInoCLOutRClass,VInoCLOutRn,0,modCL);
  Report("Прогноз ликвидности",LiquidityRClass,LiquidityRn,0,modCL);

  Document("Приход в кассу",CLInRClass,CLInForm,CLInFClass,modCL);
  Document("Составные приходные ордера",CLInColRClass,CLInColForm,CLInColFClass,modCL);
  Document("Сч/ф на платежи в кассу",CLIn2RClass,CLIn2Form,CLIn2FClass,modCL);
  Document("Приходные ордера",CLIn1RClass,CLIn1Form,CLIn1FClass,modCL);
  Document("Расход из кассы",CLOutRClass,CLOutForm,CLOutFClass,modCL);
  Document("Составные расходные ордера",CLOutColRClass,CLOutColForm,CLOutColFClass,modCL);
  Document("Сч/ф на платежи из кассы",CLOut2RClass,CLOut2Form,CLOut2FClass,modCL);
  Document("Расходные ордера",CLOut1RClass,CLOut1Form,CLOut1FClass,modCL);
  Document("Выплаты из кассы",CLOut3RClass,CLOut3Form,CLOut3FClass,modCL);

  Maintenance("Утвердить приходные и расходные ордера",OKCLVClass,OKCLMn,modCL);

/* modAT2 */

  Register("Активы","Активы",AT2UnitVc,modAT2);
  Register("Категории активов","Категории активов",AT2Vc,modAT2);
  Register("Выбытие активов","Выбытие",AT2WrofVc,modAT2);
  Register("Переоценка","Переоценка",AT2DprVc,modAT2);
  Register("Статус активов","Статус",AT2TakeVc,modAT2);
  Register("Операции активов","Операции активов",AT2TransVc,modAT2);  
  Register("Модели амортизации","Модели амортизации",DprModVc,modAT2);

  Setting("Настройка записей - активы",AT2AccTClass,modAT2); 
  Setting("Группы активов",AT2DispGroupTClass,modAT2);
  Setting("Виды активов",AC2TClass,modAT2);
  Setting("Контакты",CULClass,modAT2);
  Setting("Отделы",DepLClass,modAT2);
  Setting("Серии номеров - Выбытие активов",AT2WrofSerTClass,modAT2);
  Setting("Серии номеров - Переоценка активов",AT2DprSerTClass,modAT2);
  Setting("Серии номеров - Статус активов",AT2TakeSerTClass,modAT2);
  Setting("Серии номеров - Коэффициенты переоценки",AT2RevSerTClass,modAT2);
  Setting("Коэффициенты переоценки ОС",AT2RevLClass,modAT2);
  Setting("Список переоценки ОС",AT2RevListLClass,modAT2);

  Report("Накопленная амортизация по категории",AT2CatAcumRClass,AT2CatAcumRn,0,modAT2);  
  Report("Состояние актива на дату",AssetAtTimeRClass,AssetAtTimeRn,0,modAT2);
  Report("История активов",AT2HistRClass,AT2HistRn,0,modAT2);
  Report("Список ОС",AT2ListRClass,AT2ListRn,0,modAT2);
  Report("Статус активов",AT2HistPortRClass,AT2HistPortRn,0,modAT2);
  Report("Сводный отчет по отделам",AT2DepRClass,AT2DepSumRn,0,modAT2);
  Report("План амортизации",AT2DeprPlanRClass,AT2DeprPlanRn,0,modAT2);
  Report("Отчет по амортизации",AT2DeprRClass,AT2DeprRn,0,modAT2);
  Report("Журнал выбытий активов",AT2WriteJRClass,AT2WriteJRn,0,modAT2);
  Report("Отчет по страховке",AT2InsValRClass,AT2InsValRn,0,modAT2);
  Report("Список мат. ответственных",AT2RespPersRClass,AT2RespPersRn,0,modAT2);
  Report("Сводный отчет по мат. ответственным",AT2CatRespRClass,AT2CatRespRn,0,modAT2);
  Report("Симуляции по амортизации - предварительно",AT2GenSMRClass,AT2GenSMRn,0,modAT2);
  Report("Инвентаризационная ведомость активов",AT2StockTakeRClass,AT2StockTakeRn,0,modAT2);  
  Report("Налоговая амортизации",TaxDeprRClass,TaxDeprRn,0,modAT2);
  Report("Операции по амортизации - предварительно",AT2GenTRRClass,AT2GenTRRn,0,modAT2);
  Report("Определите обновление отдела в активах",DeptAssetRClass,DeptAssetRn,0,modAT2);
 
  Document("Выбытие активов",AT2WrofRClass,AT2WrofForm,AT2WrofFClass,modAT2);
  Document("Активы",AT2InRClass,AT2InForm,AT2InFClass,modAT2);
  Document("Ввод в эксплуатацию",AT2RClass,AT2Form,AT2FClass,modAT2);
  Document("Статус активов",AT2TakeRClass,AT2TakeForm,AT2TakeFClass,modAT2);  
  Document("Факторы переоценки",AT2RevRClass,AT2RevForm,AT2RevFClass,modAT2);

  Maintenance("Создание симуляций по амортизации",AT2GenSMVClass,AT2GenSMMn,modAT2);
  Maintenance("Создание операций по амортизации",AT2GenTRVClass,AT2GenTRMn,modAT2);
  Maintenance("Создание записей по вводу в эксплуатацию",AT2PutinVClass,AT2PutinMn,modAT2);
  Maintenance("Переоценка стоимости ОС",AT2ReevalVClass,AT2ReevalMn,modAT2);
  Maintenance("Определите обновление отдела в активах",DeptAssetVClass,DeptAssetMn,modAT2);
  Maintenance("Обновить начальную стоимость активов",AT2PurchValVClass,AT2PurchValMn,modAT2);

  Export("Экспорт в новый модуль Активы",ATVcEClass,ATVcEn,modAT2);

/* modSO */
  
  Register("Товары","Товары",INVc,modSO);
  Register("Таблицы скидок","Таблицы скидок",RebVc,modSO);
  Register("Цены","Цены",PLVc,modSO);
  Register("Прейскуранты","Прейску- ранты",PLDefVc,modSO);
  Register("Формулы цен","Формулы цен",PFormVc,modSO);
  Register("Контакты","Контакты",CUVc,modSO);
  Register("Предложения","Предложения",QTVc,modSO);
  Register("Счета клиентам","Счета клиентам",ORVc,modSO);

  Report("Возможность фактурирования",InvableRClass,InvableRn,0,modSO);
  Report("Журнал подтвержденных предложений",QTHistoryRClass,QTHstRn,0,modSO);
  Report("Журнал предложений",QTJRClass,QTJRn,0,modSO);
  Report("Журнал счетов клиентам",ORJRClass,OrdRn,0,modSO);
  Report("Заказанные товары",OrdItemRClass,OrdItemRn,0,modSO);
  Report("Контроль цены продажи",SalesPriceCheckRClass,SalesPriceCheckRn,0,modSO);
  Report("Невыполненная отгрузка по счетам",ShipableRClass,ShipableRn,0,modSO);
  Report("Несоответствие отгрузки счетам",OverShippedRClass,OverShippedRn,0,modSO);
  Report("Отчет по счетам клиентам",OrderStockRClass,OrderStockRn,0,modSO);
  Report("Прейскуранты",PriceRClass,PriceRn,0,modSO);
  Report("Прибыль по счетам",ORGPRClass,ORGPRn,0,modSO);
  Report("Прогноз предложений",QTForeCRClass,QTForecRn,0,modSO);
  Report("Складские резервирования",INReservRClass,INReservRn,0,modSO);
  Report("Список запланированной отгрузки",DeliveryRClass,DeliveryRn,0,modSO);
  Report("Список источников",SourceRClass,SourceRn,0,modSO);
  Report("Список предложений",QTStkRClass,QTStkRn,0,modSO);
  Report("Список таблиц скидок",RebListRClass,RebListRn,0,modSO);
  Report("Список товаров",ArtRClass,ArtRn,0,modSO);
  Report("Статистика объект/счет",ORObjStatRClass,ORObjStatRn,0,modSO);
  Report("Статистика предложений по продавцам",QTSMStatsRClass,QTSMStatRn,0,modSO);
  Report("Статистика решений по предложениям",QTAccRClass,QTAccRn,0,modSO);
  Report("Статистика скидок",Cust2STRClass,Cust2STRn,0,modSO);
  Report("Статус предложения",QTStatusRClass,QTStatusRn,0,modSO);
  Report("Статус счета клиенту",ORInfoRClass,ORInfoRn,0,modSO);
  Report("Труба продаж",QTPipelineRClass,QTPipelineRn,0,modSO);

  Import("Импорт цен товаров",INDanIn,INDanIn,modSO);
  Import("Обновление стоимости",INPrUpdIn,INPrUpdIn,modSO);

  Setting("Авансовые платежи",DownPayTClass,modSO);
  Setting("Адреса доставки",DelAddrLClass,modSO);
  Setting("Виды предложений",QuoteClassTClass,modSO);
  Setting("Виды счетов",OrderClassLClass,modSO);
  Setting("Единицы",UnitLClass,modSO);
  Setting("Запланированная отгрузка",PlanDeliveryTClass,modSO);
  Setting("Контракты",ORCOLClass,modSO);
  Setting("Настройки предложений",QTSettTClass,modSO);
  Setting("Настройки счетов",OrdSettTClass,modSO);
  Setting("Письмо со счетом клиенту",ORMailTClass,modSO);
  Setting("Серии номеров - Предложения",QTSerTClass,modSO);
  Setting("Серии номеров - Счета клиентам",ORSerTClass,modSO);
  Setting("Скидки от количества",StaffLClass,modSO);
  Setting("Способы отгрузки",DMLClass,modSO);
  Setting("Товары клиента",CUINLClass,modSO);
  Setting("Условия отгрузки",ShipDealLClass,modSO);
  Setting("Формулы товаров",CPMLClass,modSO);
  Setting("Цены со скидкой",PLQLClass,modSO);

  Document("Этикетки клиентов/поставщиков",CuLabRClass,CuLabForm,CuLabFClass,modSO);
  Document("Внутренние заказы клиентов",Or2RClass,Or2Form,Or2FClass,modSO);
  Document("Предложения",QTRClass,QTForm,QTFClass,modSO);
  Document("Счета клиентам",ORRClass,OrdForm,OrdFClass,modSO);

  Maintenance("Выписать сч/ф на группу",GroupInvoiceVClass,GroupInvoiceMn,modSO);
  Maintenance("Выписать сч/ф по отгруженным счетам",CreateInvVClass,CreateInvMn,modSO);
  Maintenance("Обновить отпускные цены товаров",ItemPricesVClass,ItemPricesMn,modSO);
  Maintenance("Обновить предложения",UpdateQTVClass,UpdateQTMn,modSO);
  Maintenance("Обновить стоимость товаров",ItemCostPricesVClass,INCostPriceMn,modSO);
  Maintenance("Пересчитать счета",RecalcORVClass,RecalcORMn,modSO);
  Maintenance("Рассчитать цены",CalcPricesVClass,CalcPriceListsMn,modSO);
  Maintenance("Создать заказы поставщикам",GenPOFromORVClass,GenPOFromORMn,modSO);
  Maintenance("Создать запланированные записи",PlanRecordsVClass,PlanRecordsMn,modSO);
  Maintenance("Создать запланированные записи по счетам",PlanSalesVClass,PlanSalesMn,modSO);
  Maintenance("Cоздать перемещение по складам",SMFromORVClass,SMFromORMn,modSO);
  Maintenance("Удалить цены",DelPriceListVClass,DelPriceLMn,modSO);
  Maintenance("Штрих-коды и коды товаров",ICToBCVClass,ICToBcMn,modSO);

/* modCO */

  Register("Контракты","Контракты",COVc,modCO);
  Register("Предложения по контрактам","Предложения",CQVc,modCO);
  Register("Статусы контрактов","Статусы контрактов",COCQStatVc,modCO);
  Register("Контакты","Контакты",CUVc,modCO);
  Register("Товары","Товары",INVc,modCO);
  
  Document("Этикетки контрактов",ContLabRClass,ContLabForm,ContLabFClass,modCO);
  Document("Предложения по контрактам",ContQuoteRClass,ContQuoteForm,ContQuoteFClass,modCO);
  Document("Контракты",ContractRClass,ContractForm,ContractFClass,modCO);
  Document("Этикетки клиентов/поставщиков",CuLabRClass,CuLabForm,CuLabFClass,modCO); 

  Setting("Типы контрактов",ContractClassTClass,modCO);
  Setting("Настройки контрактов",ContractSetTClass,modCO);
  Setting("Постоянные контракта клиента",CUCODefValLClass,modCO);
  Setting("Типы описания товаров",IDTTClass,modCO);
  Setting("Обновление контрактов",RenewCOLClass,modCO);

  Report("Контакты по контрактам",Contra2RClass,Contra2Rn,0,modCO);
  Report("История контрактов",COHistRClass,COHistRn,0,modCO);
//Bk  Report("Статистика по товарам контракта",COINStatisticsRClass,COINStatisticsRn,0,modCO);
  Report("Список контрактов",CORClass,CORn,0,modCO);
  Report("Статус контрактов/предложений",CQStatRClass,CQStatRn,0,modCO);
  Report("Стоимость контрактов",COworthRClass,COworthRn,0,modCO);
  Report("Сч/ф по контрактам",COInvRClass,COInvRn,0,modCO);

  Maintenance("Закрыть неоплаченные контракты",CancelDueCOVClass,CancelDueCOMn,modCO);
  Maintenance("Изменить валюту контракта",ChangeCOCurrencyVClass,ChangeCOCurrencyMn,modCO);
  Maintenance("Выписать сч/ф по контрактам",CreateCOInvVClass,CreateCOInvMn,modCO);
  Maintenance("Изменить контракты",ChangeCOVClass,ChangeCOMn,modCO);
  Maintenance("Возобновить контракты",RenewCOVClass,RenewCOMn,modCO);
  Maintenance("Обновить контракты",UpdateCOVClass,UpdateCOMn,modCO);

  Export("Циркуляция",CirculationEClass,CirculationEn,modCO);

/* modIN */

  Register("Отгрузки","Отгрузки",SHVc,modIN);
  Register("Поступления","Поступления",PUVc,modIN);
  Register("Списания","Списания",SDVc,modIN);
  Register("Перемещения товаров","Перемещения",StockMovVc,modIN);
  Register("Заказы поставщикам","Заказы поставщикам",POVc,modIN);
  Register("Товары поставщиков","Товары поставщиков",PIVc,modIN);
  Register("Товары","Товары",INVc,modIN);
  Register("Контакты","Контакты",CUVc,modIN);

  Setting("Варианты товаров",VARLClass,modIN);
  Setting("Возвраты товаров от клиентов",RetLClass,modIN);
  Setting("Возвраты товаров поставщикам",RetPULClass,modIN);
  Setting("Группы варианта товаров",VARGLClass,modIN);
  Setting("Диапазон цен",PriceRangeTClass,modIN);
  Setting("Инвентаризации",StockTakeLClass,modIN);
  Setting("Источники",SourceLClass,modIN);
  Setting("Маски вариантов товаров",VARMaskTClass,modIN);
  Setting("Минимальные кол-ва по складам",MinPerLocLClass,modIN);
  Setting("Наборы вариантов",VARMasksLClass,modIN);
  Setting("Настройки заказов поставщикам",POSettingTClass,modIN);
  Setting("Настройка записей, склад",INAccTClass,modIN); 
  Setting("Настройки возврата товаров",RetGoodsTClass,modIN);
  Setting("Настройка серийных номеров товаров",SerNrTrackTClass,modIN);
  Setting("Настройка переоценки склада",SRSTClass,modIN);
  Setting("Настройки склада",MainStockTClass,modIN);
  Setting("Серии номеров - Инвентаризации",StockTakeSerTClass,modIN);
  Setting("Серии номеров - Возвраты товаров",RetSerTClass,modIN);
  Setting("Серии номеров - Возвраты товаров поставщикам",RetPUSerTClass,modIN);
  Setting("Серии номеров - Заказы поставщикам",POSerTClass,modIN);
  Setting("Серии номеров - Отгрузки",SHSerTClass,modIN); 
  Setting("Серии номеров - Поступления",PUSerTClass,modIN);
  Setting("Серии номеров - Перемещения товаров",StockMovSerTClass,modIN);
  Setting("Серии номеров - Переоценка склада",SRSerTClass,modIN);
  Setting("Серии номеров - Списания со склада",SDSerTClass,modIN);
  Setting("Средневзвешенные",WeigAvLClass,modIN);
  Setting("Письмо с заказом поставщику",POMailTClass,modIN);
  Setting("Переоценка склада",SRLClass,modIN);
  Setting("Подмножества вариантов",VARSubsetsLClass,modIN);
  Setting("Типы заказов поставщикам",POrderClassLClass,modIN);
  Setting("Типы упаковок",PackTypeLClass,modIN);
  Setting("Склады",LocationLClass,modIN);
  Setting("Спецификации партий",BatchTextLClass,modIN);
  Setting("Структуры",RecLClass,modIN);
  Setting("Структурированные товары",StructPrintTClass,modIN);
  Setting("Счета складов",LocationAccTClass,modIN); 
  Setting("Условия отгрузки",ShipDealLClass,modIN);
  Setting("Учет стоимостей",CostAccTClass,modIN);
  Setting("Штрих-коды",BarcodeLClass,modIN);

  Document("Возврат товаров",RetRClass,RetForm,RetFClass,modIN);
  Document("Возврат товара поставщику",RetPURClass,RetPurchaseForm,RetPUFClass,modIN);
  Document("Заказы поставщикам",PORClass,POForm,POFClass,modIN);
  Document("Изменение отпускной цены",BasePriceChangeRClass,BPChangeForm,BasePriceChangeFClass,modIN);
  Document("Инвентаризация, сравнение",STRClass,StockTakeForm,StockTakeFClass,modIN);
  Document("Intrastat - Расчеты с поставщиками",IntraStaPuRClass,InStaPuForm,InStaPuFClass,modIN);
  Document("Накладные отгрузки",Sh1RClass,Sh1Form,Sh1FClass,modIN);
  Document("Накладные",Sh2RClass,Sh2Form,Sh2FClass,modIN);
  Document("Перемещение товаров",StockMovRClass,StockMovForm,StockMovFClass,modIN);
  Document("Переоценки склада",SRRClass,SRForm,SRFClass,modIN);
  Document("Подтверждения заказов поставщикам",POConfRClass,POConfForm,POConfFClass,modIN); 
  Document("Поступления",PurchaseRClass,PurchaseForm,PurchaseFClass,modIN);
  Document("Проформы отгрузки",Sh3RClass,Sh3Form,Sh3FClass,modIN);
  Document("Списание со склада",SDRClass,SDForm,SDFClass,modIN);
  Document("Уведомления о заказах поставщикам",PORemClass,PORemForm,PORemFClass,modIN);
  Document("Этикетки адресов",AdrLabRClass,AdrLabForm,AdrLabFClass,modIN);
  Document("Этикетки поступлений",PULabRClass,PULabForm,PULabFClass,modIN);
  Document("Этикетки товаров",ItemLabelRClass,ItemLabelForm,ItemLabelFClass,modIN);
  Document("Этикетки фрахта",SHLabRClass,SHLabForm,SHLabFClass,modIN);

  Report("Анализ поставщика",VEAnaRClass,VEAnaRn,0,modIN);
  Report("Анализ просроченности склада",AgedINRClass,AgedINRn,0,modIN);
  Report("Анализ стоимости",INCostAnalyseRClass,INCostAnalyseRn,0,modIN);
  Report("Варианты товаров на складе",VARMaskStockRClass,VARMaskStockRn,0,modIN);
  Report("Доступные варианты товаров",AvailVarsRClass,AvailVarsRn,0,modIN);
  Report("Журнал инвентаризации",StTakeJRClass,StTakeJRn,0,modIN);
  Report("Журнал возвратов на склад",RetJRClass,RetGoodsJRn,0,modIN);
  Report("Журнал возвратов поставщикам",RetPUJRClass,RetPUJRn,0,modIN);
  Report("Журнал заказов поставщикам",PurOrdJRClass,PurOrdJRn,0,modIN);
  Report("Журнал отгрузки",SHJRClass,ShipRn,0,modIN);
  Report("Журнал отсутствия товаров",StockJOutRClass,StockOutRn,0,modIN);
  Report("Журнал поступлений",PUJRClass,PUJRn,0,modIN);
  Report("Журнал по складу",StockJInRClass,StockInRn,0,modIN);
  Report("Журнал перемещения товаров",StockMovJRClass,StockMovJRn,0,modIN);
  Report("Журнал списаний со склада",SDJRClass,StockDepRn,0,modIN);
  Report("Заявки на покупку",CreatePORClass,CreatePORn,0,modIN);
  Report("История товаров",INrsRClass,INrsRn,0,modIN);  
  Report("История серийных номеров",SerialNrRClass,SerialNrRn,0,modIN);
  Report("Контроль вариантов товара",VarsControlRClass,VarsControlRn,0,modIN);
  Report("Кредитные счета, возврат на склад",CrStckRClass,CrStckRn,0,modIN);
  Report("Нормативы остатков склада",PurRClass,PurRn,0,modIN);
  Report("Нормативы остатков по складу",PurLocRClass,PurLocRn,0,modIN);
  Report("Недостаток по складу",DfncyStockRClass,DfncyStockRn,0,modIN);
  Report("Оценка поставщика",VEEvalRClass,VEEvalRn,0,modIN);
  Report("Отчет по заказам поставщикам",POOrdStockRClass,POOrdStockRn,0,modIN);
  Report("Отчет по отгрузкам",SHListRClass,ShipListRn,0,modIN);
  Report("Отчет по складу",INRClass,InvValRn,0,modIN);
  Report("Перечень инвентаризации",StockTakeRClass,StockTakeRn,0,modIN);
  Report("Перераспределение требований",PORequireRClass,PORequireRn,0,modIN);  
  Report("Прейскуранты поставщиков",PurPriceRClass,PurPriceRn,0,modIN);
  Report("Расх. будущих периодов по заказам",POCommitDetailRClass,POCommitDetailRn,0,modIN);
  Report("Список поступлений",PUListRClass,PUListRn,0,modIN);
  Report("Список групп товаров",ITListRClass,ITListRn,0,modIN);
  Report("Список складов",LocationRClass,LocationRn,0,modIN);
  Report("Список структур (сделано из)",Rec2RClass,Rec2Rn,0,modIN);
  Report("Справка по заказам поставщикам",POStatRClass,POStatRn,0,modIN);
  Report("Сравнение инвентаризации",STCompRClass,STCompRn,0,modIN);
  Report("Сравнение поступлений со сч/ф поставщика",PUVIDiffRClass,PUVIDiffRn,0,modIN);
  Report("Статистика поставщик/товар",VeInRClass,VeInRn,0,modIN);
  Report("Статистика товар/способ отгрузки",INDMSRClass,INDMRn,0,modIN); 

  Export("Остатки по складу",StBalClass,StBalEn,modIN);
  Export("Отчет по складу",INEClass,InvValEn,modIN);

  Maintenance("Изменить учетные стоимости",UpdInpriceVClass,UpdInpriceMn,modIN);
  Maintenance("Переоценка склада",AgedStockRevVClass,AgedStockRevMn,modIN);
  Maintenance("Перераспределение требований",PORequireVClass,PORequireMn,modIN);
  Maintenance("Пересчитать заказы поставщикам",RecalcPOVClass,RecalcPOMn,modIN);
  Maintenance("Обновить приобретаемые товары",UpdatePIVClass,UpdatePIMn,modIN);
  Maintenance("Создать записи инвентаризации",GenSTVClass,GenSTMn,modIN);
  Maintenance("Сравнение инвентаризации",STCompVClass,STCompMn,modIN);
  Maintenance("Создать заказы поставщику",CreatePOVClass,POCreateMn,modIN);
  Maintenance("Создать заказы поставщику из недостатка по складу",PODfncyStockVClass,DfncyStockMn,modIN);
  Maintenance("Удалить товары поставщиков",DelPIVcVClass,DelPIVcMn,modIN);
  
  /*modExp*/

  Register("Авансовые отчеты","Авансовые отчеты",ExpVc,modExp);
  Register("Выплаты персоналу","Выплаты",PPVc,modExp);
  Register("Путевые листы","Путевые листы",WayListVc,modExp);

  Report("Журнал авансовых отчетов",ExpJRClass,ExpRn,0,modExp);
  Report("Журнал  расчетов с ПЛ",PersPerRClass,PersPerRn,0,modExp);
  Report("Журнал выплат",PPJRClass,PPRn,0,modExp);
  Report("Статистика НДС по аванс. отчетам",ExpVATRClass,ExpVATRn,0,modExp);
  Report("Журнал путевых листов",WLJRClass,WLJRn,0,modExp);

  Setting("Машины",WLCarLClass,modExp);
  Setting("Расстояния",WLDistLClass,modExp);
  Setting("Настройка авансовых отчетов",ExpTClass,modExp);
  Setting("Типы горючего",WLPetroilTClass,modExp);
  Setting("Серии номеров - Авансовые отчеты",ExpSerTClass,modExp);
  Setting("Серии номеров - Выплаты",PPersSerTClass,modExp);
  Setting("Серии номеров - Путевые листы",WayListSerTClass,modExp);
  Setting("Цели поездок",WLPurposeLClass,modExp);
  Setting("Настройки путевых листов",WLSettingsWClass,modExp);

  Document("Авансовые отчеты",ExpRClass,ExpForm,ExpFClass,modExp);
  Document("Выплаты ПЛ",PPRClass,PersPayForm,PPDFClass,modExp);  
  Document("Путевые листы",WayListRClass,WayListForm,WayListFClass,modExp);

/* modProd */

  Register("Производство","Производство",ProdVc,modProd);
  Register("Структуры","Структуры",RecVc,modProd);
  Register("Товары","Товары",INVc,modProd);

  Setting("Классы производства",ProdClassLClass,modProd);
  Setting("Настройка счетов для модуля Производство",ProdAccClass,modProd);
  Setting("Норма выхода товара",INEffLClass,modProd);
  Setting("Серии номеров - Производство",ProdSerTClass,modProd);
  Setting("Товары автоматического производства",AutoProdLClass,modProd);
  
  Report("Возможности производства",MaxprodRClass,MaxprodRn,0,modProd);
  Report("Журнал производства",ProdRClass,ProdRn,0,modProd);
  Report("Недопроизводство",ProdDefRClass,ProdDefRn,0,modProd);
  Report("Нормативы остатков склада",PurRClass,PurRn,0,modProd);
  Report("Расчет стоимости структуры",CostCalcRClass,CostCalcRn,0,modProd);
  Report("Сравнение стоимости структур",RecCostCompRClass,RecCostCompRn,0,modProd);
  Report("Статистика производства",ProdStatRClass,ProdStatRn,0,modProd);
  Report("Статистика снятий с производства",DiscardStatRClass,DiscardStatRn,0,modProd);
  Report("Статус производства",ProdStatusRClass,ProdStatusRn,0,modProd);
  Report("Список структур (компоненты)",RecRClass,RecRn,0,modProd);
  Report("Список структур (сделано из)",Rec2RClass,Rec2Rn,0,modProd);
  Report("Production Cost Allocation",CostAllocPlanRClass,CostAllocPlanRn,0,modProd);
    
  Document("Накладные производства",ProdOrder3RClass,ProdOrder2Form,ProdOrder3FClass,modProd);
  Document("Производство",ProdOrderRClass,ProdOrderForm,ProdOrderFClass,modProd);

  Maintenance("Обновить структуры",UpdRecepyVClass,UpdRecepyMn,modProd);
  
/* modSL */
  
  Register("Счета-фактуры","Счета- фактуры",IVVc,modSL);
  Register("Платежи","Платежи",IPVc,modSL);
  Register("Структуры","Структуры",RecVc,modSL);
  Register("Контакты","Контакты",CUVc,modSL);
  Register("Товары","Товары",INVc,modSL);
  Register("Цены","Цены",PLVc,modSL);
  Register("Таблицы скидок","Таблицы скидок",RebVc,modSL);
  Register("Формулы цен","Формулы цен",PFormVc,modSL);

  Setting("Взносы",InstallmentLClass,modSL);
  Setting("Виды классификации",CTypeLClass,modSL);
  Setting("Группы товаров",ITLClass,modSL);
  Setting("Данные клиентов электронных сч/ф",EInvCULClass,modSL);
  Setting("Единицы измерения",UnitLClass,modSL);
  Setting("Категории клиентов",CCatLClass,modSL);
  Setting("Классификации товаров",DILClass,modSL);
  Setting("Лимит задолженности",AgedTClass,modSL);
  Setting("Лимит кредита",CreditLimitTClass,modSL);
  Setting("Налог на окружающую среду",RepaTClass,modSL);
  Setting("Настройка записей - активы",AT2AccTClass,modAT2); 
  Setting("Настройки контакта",CustomerSettingTClass,modSL);
  Setting("Настройки товаров",ItemSettingTClass,modSL);
  Setting("Настройки статуса товара",ItemStatusSettTClass,modSL);
  Setting("Настройки счетов-фактур реализации",IVTTClass,modSL);
  Setting("Настройки письма сч/ф",IVMailTClass,modSL);
  Setting("Настройки электронных сч/ф",EInvoiceTClass,modSL);
  Setting("Очередь электронных сч/ф",EInvoiceQueLClass,modSL);
  Setting("Оформление эл. счетов-фактур",EInvoiceLayoutTClass,modSL);
  Setting("Проценты пени",IITClass,modSL);
  Setting("Расчет от веса/фрахта",FreightWeightTClass,modSL);
  Setting("Серии номеров - Сч/ф",IVSerTClass,modSL);
  Setting("Серии номеров - Платежи клиентов",IPSerTClass,modSL);
  Setting("Серии номеров - Контакты",CUSerTClass,modSL);
  Setting("Скидки клиенту с дополнительного налога",Tax1RebLClass,modSL);
  Setting("Способы оплаты",PMTClass,modSL);
  Setting("Статус электронных сч/ф",ERecordStatusLClass,modSL);
  Setting("Тексты напоминаний",RMLClass,modSL);
  Setting("Условия оплаты",PDLClass,modSL);
  Setting("Фрахт",FreightTClass,modSL);
  Setting("Электронное фактурирование",ElecInvTClass,modSL);

  Document("Кассовые ордера",KIVRClass,CashInvForm,CashFClass,modSL);
  Document("Кредитные счета",CIVRClass,CredInvForm,CredFClass,modSL);
  Document("Этикетки клиентов/поставщиков",CuLabRClass,CuLabForm,CuLabFClass,modSL);
  Document("Письмо дебитору",DebtLetRClass,DebtorLetForm,DebtLetFClass,modSL);
  Document("НДС продаж (ЕС)",SLEUVAT2RClass,SLEUVATForm,SLEUVATFClass,modSL);
  Document("Счета пени",IIVRClass,IIInvForm,IIFClass,modSL);
  Document("Intrastat - Расчеты с клиентами",IntraStaRClass,InStaForm,InStaFClass,modSL);
  Document("Счета-фактуры",IVRClass,InvForm,InvFClass,modSL); 
  Document("Ведомость неоплаченных сч/ф",ARSRClass,ARSForm,ARSFClass,modSL);
  Document("Ведомость расчетов с клиентами",CuPerRClass,CuPerForm,CuPerFClass,modSL);
  Document("Проформы сч/ф",Inv1RClass,Inv1Form,Inv1FClass,modSL);
  Document("Сч/ф проекта",PIVRClass,ProjInvForm,PRInvFClass,modSL);
  Document("Платежные документы",IPDRClass,IPDForm,IPDFClass,modSL);
  Document("Напоминания",RemRClass,RemForm,RemFClass,modSL);
  Document("Книга продаж",SalesB2RClass,SLBookForm,SLBookFClass,modSL); 
  Document("Коррекции НДС книги продаж",VATIVRClass,VATIVForm,VATIVFClass,modSL); 

  Report("Ведомость расчетов с клиентами",CuPer2RClass,CuPerRn,0,modSL);
  Report("Дебиторская задолженность",ARRClass,ARRn,0,modSL);
  Report("Журнал записей операций по сч/ф",BokundRClass,BokundRn,0,modSL);
  Report("Журнал неоплаченных сч/ф",ARS2RClass,ARS2Rn,0,modSL);
  Report("Журнал платежей клиентов",IPRClass,IPRn,0,modSL);
  Report("История предоплат клиентов",PerPayHisSLRClass,PerPayHisSLRn,0,modSL);
  Report("Журнал сч/ф",IVJRClass,InvoiceRn,0,modSL);
  Report("История ИНН",CUVERClass,CUVERn,0,modSL);
  Report("История оборота по товарам",ItemTurnRClass,ItemTurnRn,0,modSL);  
  Report("История платежей клиентов",CUPayHistoryRClass,CUPayHistoryRn,0,modSL);
  Report("История платежей по продавцам", IPSalesManRClass,IPSalesManRn,0,modSL);  
  Report("Кредитные счета, обновление склада",CrStckRClass,CrStckRn,0,modSL);
  Report("НДС по продажам",RealCustRClass,RealCustRn,0,modSL);
  Report("Поиск товара",SearchItemRClass,SearchItemRn,0,modSL);
  Report("Прибыль по сч/ф",IVGPRClass,IVGPRn,0,modSL);
  Report("Прейскуранты",PriceRClass,PriceRn,0,modSL);
  Report("Премии продавцам",BonusRClass,BonusRn,0,modSL);
  Report("Приходные ордеры",CashReceiptRClass,CashReceiptRn,0,modSL);
  Report("Прогноз платежей",IPProgRClass,IPProgRn,0,modSL);
  Report("Продажи по часам",IVPerHourRClass,IVPerHourRn,0,modSL);
  Report("Продажи по складам",IVPerLocRClass,IVPerLocRn,0,modSL);
  Report("Список групп товаров",ITListRClass,ITListRn,0,modSL);
  Report("Список клиентов",CURClass,CustRn,0,modSL);
  Report("Список товаров",ArtRClass,ArtRn,0,modSL);
  Report("Справка по клиентам",CustPSRClass,CustPSRn,0,modSL);
  Report("Статистика кампании по товара",INMultiBuyStatRClass,INMultiBuyStatRn,0,modSL);
  Report("Статистика клиент/товар",CuArtSTRClass,CuArtSTRn,0,modSL);
  Report("Статистика клиент/товар",CuArtSTRClass,CuArtSTRn,0,modSL);
  Report("Статистика кодов НДС",SLVATRClass,SLVATRn,0,modSL);
  Report("Статистика по клиентам",CustSTRClass,CustSTRn,0,modSL);
  Report("Статистика прейскуранта товара",INPriceListStatRClass,INPriceListStatRn,0,modSL);
  Report("Статистика продаж (ЕС)",SLEUVATRClass,SLEUVATRn,0,modSL);
  Report("Статистика продаж по группам товаров, исключая скидку",ItemGrSalesRClass,ItemSales2Rn,0,modSL);
  Report("Статистика продаж по клиентам",CustSalesRClass,CustSalesRn,0,modSL);
  Report("Статистика продаж по товарам",ItemSalesRClass,ItemSalesRn,0,modSL);
  Report("Статистика расчетов с клиентами",SLStatRClass,CUHistRn,0,modSL);
  Report("Статистика скидок",Cust2STRClass,Cust2STRn,0,modSL);
  Report("Статистика товар/количество",INQtyRClass,INQtyRn,0,modSL);
  Report("Статистика товар/продавец",IStatRClass,IStatRn,0,modSL);
  Report("Статус электронного сч/ф",HTSStatIVRClass,HTSStatIVRn,0,modSL);
  Report("Счета пени",CUIntRClass,CUIntRn,0,modSL);

  Import("Банковский файл, SwedBank",SwedBankImport,SwedBankImport,modSL);//Bk function from KY module
 
  Export("Анализ движения денежных средств",ExportCashFlowEClass,ExportCashFlowEn,modSL);
  Export("История оборота товаров",ItemTurnEClass,ItemTurnEn,modSL);
  Export("Intrastat продажи",EstIntrastatIVEClass,EstIntIVEn,modSL);
  Export("История оборотов по клиентам",CustTurnEClass,CustTurnEn,modSL);
  Export("Статистика клиентов",CustSTEClass,CustSTEn,modSL);
  Export("Статистика клиент/товар",ICSEClass,ICSEn,modSL);
  Export("Статистика товаров",ArtSTEClass,ArtSTEn,modSL);
  Export("Экспорт продаж для лесных компаний",ForestSLEClass,ForestSLEn,modSL);

  Maintenance("Выписать счет пени",CUIntVClass,CUIntMn,modSL);
  Maintenance("Создать письма из счетов-фактур",IVToMailVClass,IVToMailMn,modSL);
  Maintenance("Создать e-mail с неоплаченными сч/ф",ARSEmailVClass,ARSEmailMn,modSL);
  Maintenance("Создать e-mail с ведомостью расчётов с клиентом",CUPerEmailVClass,CUPerEmailMn,modSL);// We have this belowe SendPerStatVClass
  Maintenance("Создать выписки из банковских операций",IPFromBankTRVClass,IPFromBankTRMn,modSL);
  Maintenance("Создать коррекции НДС книги продаж",VATIVVClass,VATIVMn,modSL);
  Maintenance("Удалить неиспользуемые товары",DelNotUsedINVClass,DelNotUsedINMn,modSL);
  Maintenance("Прямой платёж в SEB",DDSEBOClass,DDSEBMn,modSL);
  Maintenance("Утвердить сч/ф",OKInvVClass,OKInvMn,modSL);
  Maintenance("Утвердить сч/ф (Непрерывно)",OKInvVClass,OKInvNSMn,modSL);
  Maintenance("Перевод в безнадежные дебиторы",BadCUVClass,BadCUMn,modSL);
  Maintenance("Обновить классификацию клиентов",CustUpClass,CustUpMn,modSL);
  Maintenance("Списать безнадежные долги",WriteOffVClass,WriteOffMn,modSL);
  Maintenance("XML, Inkasso",XMLVClass,XMLMn,modSL);//Bk
  Maintenance("Отправить эл. сч/фы заново",ResendEstEInvVClass,ResendEstEInvMn,modSL);//Bk HAL

/* modCRM */

  Register("Письма клиентам","Письма",LetVc,modCRM);
  Register("Контакты","Контакты",CUVc,modCRM);
  Register("Стандартные тексты","Стандартные тексты",LTxtVc,modCRM);
  Register("Связи с контактами","Связи с контактами",ContactRelVc,modCRM);

  Report("Деятельность - клиенты/поставщики",ActCURClass,ActCURn,0,modCRM);
  Report("Деятельность за период", ActWeekRClass,ActWeekRn,0,modCRM);
  Report("Деятельность по сотрудникам",ActPersRClass,ActPersRn,0,modCRM);
  Report("Журнал деятельности",ActJRClass,ActJRn,0,modCRM);
  Report("История заполнения календаря",ActCalBookRClass,ActCalBookRn,0,modCRM);
  Report("Кто купил/не купил",NoSalesRClass,NoSalesRn,0,modCRM);  
  Report("Личный календарь",ActCalRClass,ActCalRn,0,modCRM);
  Report("Поиск контактных лиц",SearchContactRClass,SearchContactRn,0,modCRM);
  Report("Список писем",LetInfoRClass,LetInfoRn,0,modCRM);
  Report("Статистика продаж по клиентам",CustSalesRClass,CustSalesRn,0,modCRM);
  Report("Статистика по клиенту",CustSTRClass,CustSTRn,0,modCRM);
  Report("Список клиентов",CURClass,CustRn,0,modCRM);
  Report("Список видов деятельности",ActTypeRClass,ActTypRn,0,modCRM); 

  Setting("Виды текста",TextTypeLClass,modCRM);
  Setting("Виды деятельности",ActTypeLClass,modCRM);
  Setting("Виды деятельности, подсистемы",ASTTClass,modCRM);
  Setting("Воронка продаж",PipelineOverviewTClass,modCRM);
  Setting("Служебные обязанности",JobTitleLClass,modCRM);
  Setting("Глобальные настройки CRM",GlobalCRMTClass,modCRM);
  Setting("Справка по поставщикам",VEPSLClass,modCRM);
  Setting("Справка по клиентам",CustPSLClass,modCRM);
  Setting("Результаты деятельности",ActSeqLClass,modCRM);
  Setting("Виды классификации",CTypeLClass,modCRM);
  Setting("Настройки CRM",CRMTClass,modCRM);
  Setting("Классификации контактов",CClassLClass,modCRM);
  Setting("Настройки контактов",CustomerSettingTClass,modCRM);
  Setting("Серии номеров - Письма клиентам",LetSerTClass,modCRM);
  Setting("Поля, задаваемые пользователем - Товары",INUserLabelTClass,modCRM);
  Setting("Поля, задаваемые пользователем - Контакты",CUUserLabelTClass,modCRM);
  Setting("Поля, задаваемые пользователем - Деятельности",ActUserLabelTClass,modCRM);
  Setting("Классы деятельности",ActTypeGrLClass,modCRM);
  Setting("Настройки телефонии",CompPhonePrefsTClass,modCRM);
  Setting("Дополнительные получатели e-mail",EmailRecipLClass,modCRM);
  Setting("Должности",CourtesyTitlesTClass,modCRM);
  Setting("Нормализованные телефонные номера",NormPhoneNumLClass,modCRM);

  Document("Деятельность",ActDocRClass,ActDocForm,ActDocFClass,modCRM);
  Document("Этикетки контактных лиц",CoLabRClass,CoLabForm,CoLabFClass,modCRM);
  Document("Письма клиентам",LetRClass,LetForm,LetFClass,modCRM);
  Document("Этикетки клиентов/поставщиков",CuLabRClass,CuLabForm,CuLabFClass,modCRM);

  Maintenance("Добавить классификацию клиентам",NoSalesVClass,NoSalesMn,modCRM);
  Maintenance("Применить стандартный период",ApyStdPeriodMClass,ApyStdPeriodMn,modCRM);
  Maintenance("Закрытие контактов",CloseCUVClass,CloseCUMn,modCRM);
  Maintenance("Массовая электронная рассылка",MassMailVClass,MassMailMn,modCRM);
  Maintenance("Утвердить период",OkPeriodVClass,OkPeriodMn,modCRM);
  Maintenance("Перестр. регистра распознав. номеров",NormPhoneNumVClass,NormPhoneNumMn,modCRM);
  Maintenance("Удалить классификацию с контактов",RemoveClassCUMClass,RemoveClassMn,modCRM);
  Maintenance("Отправить ведомость расчетов с клиентами",SendPerStatVClass,SendPerStatMn,modCRM);
  Maintenance("Обновить данные в регистре контактов",UpdContactVClass,UpdContactMn,modCRM);

/* modNL */
  
  Register("Записи операций","Операции",TRVc,modNL);
  Register("Симуляции","Симуляции",SMVc,modNL);
  Register("План счетов","План счетов",AccVc,modNL);
  Register("Объекты","Объекты",ObjVc,modNL);
  Register("Бюджеты","Бюджеты",Bud1Vc,modNL);
  Register("Начальные сальдо","Начальное сальдо",FBVc,modNL);

  Setting("Автопроводки",AutLClass,modNL);
  Setting("Банковские транзакции",BankTRLClass,modNL);
  Setting("Записи из подсистем",TRGenTClass,modNL);
  Setting("Информация отчета по ликвидности",LiqInfoLClass,modNL);  
  Setting("Коды НДС",VATCodeTClass,modNL);
  Setting("Коды счетов",ACShortLClass,modNL);
  Setting("Контроль типов объектов",OTCheckTClass,modNL);
  Setting("Курсовые разницы",NLRateLClass,modNL);
  Setting("Настройки записей операций",TrTClass,modNL);
  Setting("Настройки отчетов",Rs2WClass,modNL);
  Setting("Настройки RiigiTarkvara",RTViiteNumTClass,modNL);
  Setting("Настройки XBRL отчетности",XBRLSettingsLClass,modNL);
  Setting("Представление сальдо",AGrTClass,modNL);
  Setting("Показатели бюджета",BFLClass,modNL);
  Setting("Расходы/доходы будущих периодов",AutSimPerLClass,modNL);
  Setting("Серии номеров - Симуляции",SMSerTClass,modNL);
  Setting("Серии номеров - Записи операций",TRSerTClass,modNL);
  Setting("Счета контроля подсистем",SLAccTClass,modNL);
  Setting("Типы объектов",OTLClass,modNL);
  Setting("Учет курсовых разниц",NLRateTClass,modNL);
  Setting("Учетные периоды",AccPeriodLClass,modNL);
  Setting("Финансовые годы",YearTClass,modNL);
  Setting("Формулы расчета",CalcFormLClass,modNL);
  Setting("Элементы XBRL отчетности",XBRLElementLClass,modNL);
  Setting("VAT/Tax Template Code Control",VATCodeControlTClass,modNL); //!!TRANSLATE

  Document("Симуляции",Sim2RClass,Sim2Rn,0,modNL);
  Document("Налоговый отчет",TaxDocRClass,TaxRepForm,TaxRepFClass,modNL);
  Document("Записи операций",TRRClass,TRForm,TRFClass,modNL);

  Report("Баланс",BalRClass,BalRn,UserDefRepDClass,modNL);
  Report("Выписка банка",BankStRClass,BankStRn,0,modNL);
  Report("Главная книга",MainRClass,MainRn,0,modNL);
  Report("Журнал бюджетов",BudgJRClass,BudgJRn,0,modNL);
  Report("Журнал начального сальдо",ForwBalJRClass,ForwBalJRn,0,modNL);
  Report("Журнал операций",TransRClass,TransRn,0,modNL); 
  Report("Записи операции по будущим периодам",GenPerTRRClass,GenPerTRRn,0,modNL);
  Report("Записи операций, подсистемы",TransGenRClass,TransGenRn,0,modNL);
  Report("Изменение курса на валютных счетах",NLRateRClass,NLRateRn,0,modNL);
  Report("Курсы обмена основных валют",NLBRateRClass,NLBRateRn,0,modNL);
  Report("Корреспонденция счетов",CorspRClass,CorspRn,0,modNL);
  Report("Книга приходов и расходов",IncExpBookRClass,IncExpBookRn,0,modNL);  
  Report("Оборотно-сальдовая ведомость",MBARClass,MBARn,0,modNL);
  Report("Объектный баланс RiigiTarkvara",RiigiRClass,RiigiRn,0,modNL);//Bk
  Report("Операции банка",BankTRRClass,BankTRRn,0,modNL);
  Report("Остатки на счетах по дням",DayBalNLRClass,DayBalNLRn,0,modNL);
  Report("Отчет бюджета RiigiTarkvara",RTPrLosRClass,RTProLosRn,0,modNL);//Bk 
  Report("Отчет объект/количество",ObjQtyRClass,ObjQtyRn,0,modNL);
  Report("Отчет по записям будущих периодов",AccrualNewRClass,AccrualNewRn,0,modNL);
  Report("Отчет по НДС",VATRClass,VAT2Rn,UserDefRepDClass,modNL);
  Report("Прибыль и убытки",ResRClass,ResRn,UserDefRepDClass,modNL);
  Report("Проверочный баланс",SBRClass,TrialRn,0,modNL);  
  Report("Проверка корреспонденции",CorstRClass,CorstRn,0,modNL);
  Report("Прогноз ликвидности",LiquidityRClass,LiquidityRn,0,modNL);
  Report("RiigiTarkvara - Сальдо объектов",RiigiNewRClass,RiigiNewRn,0,modNL);
  Report("RiigiTarkvara - Сальдо по типу объектов",RiigiOTRClass,RiigiOTRn,0,modNL);
  Report("Сальдо по объектам",ObjResRClass,ObjResRn,0,modNL);
  Report("Сводный отчет по записям операций",TransListRClass,TransListRn,0,modNL);
  Report("Сводный отчет по НДС",ALLVATRClass,ALLVATRn,0,modNL);
  Report("Сравнения бюджета RiigiTarkvara",RTPrLosNewRClass,RTProLosNewRn,0,modNL); 
  Report("Финансовые показатели",KeyRClass,KeyRn,UserDefRepDClass,modNL);
  Report("XBRL Report",XBRLReportRClass,XBRLReportRn,0,modNL);

  Export("Проверочный баланс",SBEClass,SBEn,modNL);
  Export("RiigiTarkvara - Сальдо по объектам",RiigiNewEClass,RiigiNewEn,modNL);
  Export("RiigiTarkvara - Строки записей операций",RiigiTRrwEClass,RiigiTRrwEn,modNL);
  Export("Сальдо по месяцам",MBEClass,MBEn,modNL);
  Export("Сальдо объектов",FBEClass,FBEn,modNL);
  Export("Суммированный ежемесячный отчет о прибылях и убытках",MonthResEClass,MonthResEn,modNL);
  Export("Финансовые показатели",KeyEClass,KeyEn,modNL);
  Export("XBRL отчет",XBRLReportEClass,XBRLReportEn,modNL);

  Maintenance("RiigiTarkvara - Сальдо по объектам",RiigiBalVClass,RiigiOTMn,modNL);
  Maintenance("Автоматическое исключение счетов",AccElimVClass,AccElimMn,modNL);
  Maintenance("Перенос сальдо счетов",AccTransVClass,AccTransMn,modNL);
  Maintenance("Добавить объект в записи операций",AddObjTRVClass,AddObjTRMn,modNL);
  Maintenance("Изменить бюджет",Bud1VClass,Bud1Mn,modNL);
  Maintenance("Создать записи по расходам будущих периодов",GenPerTRVClass,GenPerTRMn,modNL);
  Maintenance("Закрытие записей операций",LockNLVClass,LockNLMn,modNL);
  Maintenance("Списание курсовых разниц",NLRateVClass,NLRateMn,modNL);
  Maintenance("Переоценка основной валюты 2",NLBRateVClass,NLBRateMn,modNL);
  Maintenance("Изменить пересмотренный бюджет",Bud2VClass,Bud2Mn,modNL);
  Maintenance("Обновить записи операций",NLAddRateVClass,NLAddRateMn,modNL);

/* modPL */

  Register("Счета-фактуры поставщиков","Сч/ф поставщиков",VIVc,modPL);
  Register("Платежи","Платежи",OPVc,modPL);
  Register("Контакты","Контакты",CUVc,modPL);
  Register("Эл. cч/ф поставщиков","Эл. cч/ф поставщиков",VEIVVc,modPL);

  Setting("Банки",BankLClass,modPL);
  Setting("Intrastat Purchase",IntrastatVITClass,modPL);
  Setting("Категории поставщиков",VGLClass,modPL);  
  Setting("Настройка записей, расчеты с поставщиками",APAccTClass,modPL);
  Setting("Накладные расходы",ExtraCostLClass,modPL);
  Setting("Настройка платежей",OPTTClass,modPL);
  Setting("Настройки сч/ф поставщиков",VITTClass,modPL);
  Setting("Обмен данными с банк-клиентом",BankFileTClass,modPL);
  Setting("Очередь электронных платежей",EPaymentQueLClass,modPL);
  Setting("Подписание условий оплаты",EPaySignReqTClass,modPL);
  Setting("Серии номеров - Сч/ф поставщиков",VISerTClass,modPL);
  Setting("Серии номеров - Платежи поставщикам",OPSerTClass,modPL);
  Setting("Счета НДС",VATTClass,modPL);
  Setting("Способы оплаты",PMTClass,modPL);
  Setting("Условия оплаты",PDLClass,modPL);
  Setting("Формулы расчета",CalcFormLClass,modPL);

  Document("Ведомость расчета с поставщиками",VEPerRClass,VEPerForm,VEPerFClass,modPL);
  Document("Дебитовые сч/ф",DebVIRClass,DebVIForm,DebVIFClass,modPL);
  Document("Платежи",OPRClass,OPForm,0,modPL);
  Document("Платежные документы",OPDRClass,OPDForm,OPDFClass,modPL);
  Document("Список неоплаченных счетов-фактур поставщика",APSRClass,APSForm,APSFClass,modPL);
  Document("Сч/ф поставщиков",VIRClass,VIForm,VIFClass,modPL);
  Document("Электронные сч/ф поставщикам",VEIVRClass,VEIVForm,VEIVFClass,modPL);

  Report("Ведомость расчетов с поставщиками",VePer2RClass,VePerRn,0,modPL);
  Report("Дебиторская и кредиторская задолженность",ARAPRClass,ARAPRn,0,modPL);
  Report("Журнал платежей",OPJRClass,OPJRn,0,modPL);
  Report("Журнал сч/ф поставщиков",VIJRClass,VIJRn,0,modPL);
  Report("История ИНН",CUVERClass,CUVERn,0,modPL);
  Report("История предоплат поставщикам",PerPayHisPLRClass,PerPayHisPLRn,0,modPL);
  Report("Кредиторская задолженность",APRClass,APRn,0,modPL);
  Report("НДС по покупкам",RealSuppRClass,RealSuppRn,0,modPL);
  Report("НДС покупок для ЕС",PLEUVATRClass,PLEUVATRn,0,modPL);
  Report("Отчет о неоплаченных счетах-фактурах поставщика",APS2RClass,APS2Rn,0,modPL);
  Report("Прогноз платежей",OPProgRClass,OPProgRn,0,modPL);
  Report("Список поставщиков",VERClass,VERn,0,modPL);
  Report("Статистика поставщиков",VSRClass,VSRn,0,modPL);
  Report("Статистика ставок НДС",PLVATRClass,PLVATRn,0,modPL);
  Report("Статистика товаров по продажам и закупкам",ArtST2RClass,ArtST2Rn,0,modPL);//Bk
  Report("Статус электронного платежа",HTSOPStatRClass,HTSOPStatRn,0,modPL);

  Export("Intrastat покупки",EstIntrastatVIEClass,EstIntVIEn,modPL);
  Export("Книга покупок для деревообр. промыш.", ForestPLEClass,ForestPLEn,modPL);
  Export("Отчет о ликвидности - Расчеты с поставщиками",PLLiqEClass,PLLiqEn,modPL);
  Export("Платежи SEPA",MP12EClass,MP12En,modPL);//Bk HAL

  Maintenance("Обновить данные поставщиков",UpdSupVClass,UpdSupMn,modPL);
  Maintenance("Создать коррекции НДС книги покупок",VATVIVClass,VATVIMn,modPL);

/* modTS */

  Register("Таблицы времени","Таблицы времени",TSVc,modTS);
  Register("Проекты","Проекты",PRVc,modTS);
  Register("Записи операций проектов","Записи операций проектов",TBIVVc,modTS);
  Register("Бюджеты проектов","Бюджеты проектов",TBBUVc,modTS);
  Register("Расписания проектов","Расписания проектов",PRScheduleVc,modTS);
  Register("Авансовые отчеты","Авансовые отчеты",ExpVc,modTS);
  Register("Товары","Товары",INVc,modTS);
  Register("Контакты","Контакты",CUVc,modTS);

  Setting("Виды классификаций проектов",PRClTypeLClass,modTS);
  Setting("Группы работ",EGLClass,modTS);
  Setting("Группы товаров",ITLClass,modTS);
  Setting("Классификации проектов",PRClLClass,modTS);
  Setting("Классы времени",TimeClassLClass,modTS);
  Setting("Настройка записей, калькуляция проектов",PRAccClass,modTS);
  Setting("Настройки проектов",PRITClass,modTS);
  Setting("Настройки товаров проекта",PRITHandleClass,modTS);
  Setting("Прейскуранты калькуляции проектов",TBPLDefLClass,modTS);
  Setting("Серии номеров - Проекты",PRSerTClass,modTS);
  Setting("Серии номеров - таблицы времени",TSSerTClass,modTS);
  Setting("Типы проектов",PRClassTClass,modTS);
  Setting("Формулы расчета стоимости времени",TBPFormLClass,modTS);
  Setting("Этапы проекта",PRStageLClass,modTS);

  Report("Контроль исполнения бюджета",BudFollPRClass,BudPFoll2Rn,0,modTS); // Rewritten version of above report
  Report("Статистика сотрудников",EMStatRClass,TSRn,0,modTS);
  Report("Статус сотрудников",EmpStatusRClass,EmpStatusRn,0,modTS);
  Report("Прибыль по сотрудникам",GPEmpRClass,GPEmpRn,0,modTS);
  Report("Прибыль по проектам",GPProRClass,GPProRn,0,modTS);
  Report("Сравнение факта с бюджетом по проектам",PRActBudRClass,PRActBudRn,0,modTS);
  Report("Бонусы проектов",ProjBonusRClass,ProjBonusRn,0,modTS);
  Report("Сч/ф по проектам",ProInvRClass,ProInvRn,0,modTS);
  Report("Список проектов",ProListRClass,PRListRn,0,modTS);
  Report("Прейскуранты проектов",ProjPLRClass,ProjPLRn,0,modTS);
  Report("Отчет о прибыли и убытках по проектам",PRPLRClass,PRPLRn,0,modTS);
  Report("Покупки проекта",PRPurRClass,PRPurRn,0,modTS);
  Report("Заказы поставщикам по проектам",PRPORClass,PRPORn,0,modTS); 
  Report("Определение доходности проекта",PRRevRecRClass,PRRevRecRn,0,modTS);
  Report("Статус проекта",ProStatRClass,ProStatRn,0,modTS);
  Report("Записи операций по проектам",PrTransRClass,PrTranRn,0,modTS);
  Report("Статистика по товарам обслуживания",PrItemStatRClass,PrItemStatRn,0,modTS);
  Report("Журнал таблиц времени",TSJRClass,TSJRn,0,modTS);
  Report("Действительные записи операции по проекту",ChPrTransRClass,ChPrTransRn,0,modTS);

  Document("Бюджеты проекта",TBBudgetRClass,TBBudgetForm,TBBudgetFClass,modTS);
  Document("Информация о проекте",ProjectInfoRClass,ProjectInfoForm,ProjectInfoFClass,modTS);
  Document("Записи операций по проектам",ProjectTransRClass,ProjectTransForm,ProjectTransFClass,modTS);
  Document("Проекты",ProjectRClass,ProjectForm,ProjectFClass,modTS);
  Document("Таблицы времени",TimeSheetRClass,TimeSheetForm,TimeSheetFClass,modTS);

  Maintenance("Создать записи операций по проекту из отгрузок",BSHTSVClass,BSHTSMn,modTS);
  Maintenance("Изменить валюту проекта",ChangePRCurVClass,ChangePRCurMn,modTS);
  Maintenance("Выписать сч/ф по проекту",ProInvVClass,ProInvMn,modTS);
  
  /* modPOS */

  Register("Счета-фактуры","Счета- фактуры",IVVc,modPOS);
  Register("Остатки по кассе","Остатки",CashierBalVc,modPOS);
  Register("Счета-фактуры POS","Счета- фактуры POS",IVCashVc,modPOS);
  Register("Контакты","Контакты",CUVc,modPOS);
  Register("Товары","Товары",INVc,modPOS);
  Register("Накопительные карточки","Накопительные карточки",LoyaltyCardVc,modPOS);
  
  Setting("Виды кредитных карточек",CredCardTypeLClass,modPOS);
  Setting("Идентификаторы счета",CCAccountIDLClass,modPOS); 
  Setting("Упаковщики",BaggerTCLass,modPOS);
  Setting("События кассы",CashLClass,modPOS);
  Setting("Тексты принтеров",CashPrintTClass,modPOS);
  Setting("Тексты принтеров по локальным машинам",MachineCashLClass,modPOS);
  Setting("Принтеры касс",CashPrSetLClass,modPOS);  
  Setting("Квитанции кредитных карт",CouponLClass,modPOS);
  Setting("Способы оплаты по умолчанию",DefCashTClass,modPOS);
  Setting("Deferred CC Transactions Rules",DefCCTransTClass,modPOS);
  Setting("Deferred CC Transactions Settings",DeferCCTClass,modPOS);
  Setting("Deferred CC Transactions",DefCCTransLClass,modPOS);
  Setting("Deferred CC Transactions Status",DefCCTransStatusLClass,modPOS);
  Setting("Ящики",DrawerLClass,modPOS); 
  Setting("Поля для создания нового клиента",NPTSNewCUFieldsTCLass,modPOS);
  Setting("Подарочные чеки",GiftReceiptLClass,modPOS);
  Setting("Подарочные сертификаты выпущенн.",GCLClass,modPOS);
  Setting("Подарочные сертификаты получен.",GCRLClass,modPOS);
  Setting("Подарочные сертификаты продан.",GCSLClass,modPOS);
  Setting("Способы оплаты локальной машины",RestPMTClass,modPOS);
  Setting("Локальные машины",LocalMachineLClass,modPOS);
  Setting("Идентификаторы продавцов",CCMerchantIDLClass,modPOS); 
  Setting("Серии номеров - События кассы",CashSerTClass,modPOS);
  Setting("Серии номеров - Купоны",CouponSerTClass,modPOS);
  Setting("Number Series - Deferred CC Tansactions",DefCCTransSerTClass,modPOS); 
  Setting("Серии номеров - Подарочн. чеки",GiftReceiptSerTClass,modPOS); 
  Setting("Серии номеров - Подарочные сертификаты",GCSerTClass,modPOS);
  Setting("Серии номеров - Подарочные сертификаты получен.",GCRSerTClass,modPOS);
  Setting("Серии номеров - Остатки по кассе",POSBalanceSerTClass,modPOS);
  Setting("Серии номеров - Сч/ф кассового терминала",IVCashSerTClass,modPOS); 
  Setting("Серии номеров - Сессии кассового терминала",POSEventSerTClass,modPOS);
  Setting("Валюты платежей",POSCurrenciesTClass,modPOS);
  Setting("Группы кнопок кас.терм.",POSButtonGroupsLClass,modPOS);
  Setting("Кнопки кас.терм.",POSButtonsLClass,modPOS);
  Setting("Команды кас.терм.",POSCommandsTCLass,modPOS);
  Setting("Сессии кас.терм.",POSEventLCLass,modPOS);
  Setting("Настройки кас.терм.",CashierDefTClass,modPOS);
  Setting("Контролеры",SupervisorTCLass,modPOS);
  Setting("Синронизированные серии номеров",SynkAutoSerLClass,modPOS);
  Setting("Названия полей задан. пользов. - лок. машина",LocalMachineLBlockTClass,modPOS);
  
  Report("Анализ сборов",CollectionsAnalysisRClass,CollectionsAnalysisRn,0,modPOS);  
  Report("Варианты товаров",VarEnqRClass,VarEnqRn,0,modPOS);
  Report("Журнал сч/ф кассового терминала",IVCJRClass,InvCashRn,0,modPOS);
  Report("Остатки по дням",DayBalRClass,DayBalRn,0,modPOS);
  Report("Прибыль, сч/ф кассового терминала", PIVGPRClass,PIVGPRn,0,modPOS);
  Report("Отчет по накопительной карточке",LoyaltyCardRClass,LoyaltyCardRn,0,modPOS);
  Report("Снятия кассы",CashupRClass,CashupRn,0,modPOS);
  Report("Создание записей операций для сч/ф на наличные", TransGenPOSRClass,TransGenPOSRn,0,modPOS);
  Report("Статистика кампании по товара",INMultiBuyStatRClass,INMultiBuyStatRn,0,modPOS);
  Report("Статистика прейскуранта товара",INPriceListStatRClass,INPriceListStatRn,0,modPOS);

  Document("События кассы",CashRClass,CashForm,CashFClass,modPOS);
  Document("Подарочные сертификаты",GCRClass,GCForm,GCFClass,modPOS);
  Document("Подарочный чек",GiftReceiptRClass,GiftReceiptForm,GiftReceiptFClass,modPOS);
  Document("Сч/ф кассового терминала",IVCashRClass,InvCashForm,IVCashFClass,modPOS);

  Maintenance("Обновить склад",POSUpdStockVClass,POSUpdStockMn,modPOS);
  Maintenance("Снятие кассы",CashupVClass,CashupMn,modPOS);
  Maintenance("Создать запись операций квитанций",NLTransCredCardSlipVClass,NLTransCredCardSlipMn,modPOS);
  Maintenance("Создать кнопки POS",CreatePOSButtonsVClass,CreatePOSButtonsMn,modPOS);
  Maintenance("Process Defered CC Transactions",ProDefCCTransVClass,ProDefCCTransMn,modPOS);

  return;
end;

#endif
