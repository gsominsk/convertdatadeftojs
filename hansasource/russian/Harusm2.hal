/* Haengm2.hal */
external function Boolean HasRemoteBackup();

#ifdef HAL
/* This is no longer an Event, make sure you don't have this in */
//event startup
begin
  Real h,v,l,vs;

  SetLangMode(LangRussian,"RUS",0);

/* This window has to be in the startup because it has to be displayed when a HAL error occurs */
  WindowBegin("",ErrorClass,CGother,-);
  SetWRect(20,262,20+468,262+68+40);
  WhiteBackground;
  Modality(1);
  WType(1);
  AddBic(1031,1032,30,84,ToolHelp,0,"");
  PushButton(400,82,460,102,0,"OK");
  EndWindow;

  WindowBegin("",RepWClass,CGRepW,RcType);
  SetWRect(20,80,820,550);
  Sizeable(150,150,0,0);

  ToolBar;
  AddBic(603,604,200,20,ToolAttach,0,"");
  EndToolBar;

  UseView(RcVc);
  WhiteBackground;
  ScrollBar(-17,40,-1,-17);
//    SearchField("Поиск");
  if (IsWebClient==false) then begin
    ToolBar;
    EditFieldTL(-225,6,135,"",M4Str,Normal,20,searchstr,false,0);
    if (GuiType!=kGuiCocoa) then begin
      PushButton(-70,5,-10,22,ToolOK,"Найти");
    end;
    EndToolBar;
  end;
// Why go back to C? Is there a problem when using Report Generator, or?
  SpecMenuItem("Пересчитать",'r',0);
  SpecMenuItem("Пересчитать и распечатать",'p',1);
  SpecMenuItem("Открыть определение отчета",'e',2);

//  SpecialMenu("Пересчитать",'r',0,"RecalculateRepWsm");
//  SpecialMenu("Пересчитать и распечатать",'p',1,"RecalculatePrintRepWsm");
//  SpecialMenu("Открыть определение отчета",' ',2,"ReopenRepWsm");
  EndWindow;

  WindowBegin("",WaitClass,CGother,-);
  AutoSizeWindow(false);
  SetWRect(20,262,20+468,262+68);
  WhiteBackground;
  EndWindow;

  WindowBegin("",UploadWaitClass,CGother,-);
  AutoSizeWindow(false);
  SetWRect(20,262,20+468,262+88);
  WhiteBackground;
  PushButton(-79,55,-19,72,ToolClose,"Отмена");
  ProgressBar(20,33,-20,45,"TransferSz","TransferPos");
  EndWindow;

  WindowBegin("",WaitOrQuitClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(335,44,395,64,ToolRestartApplication,"Перезапуск");
  PushButton(400,44,460,64,ToolRestore,"Выход");
  WhiteBackground;
  EndWindow;

/* This window has to be in the startup because it may be displayed when a Communication error occurs */
  WindowBegin("",ForceQuitClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(335,40,395,60,ToolRestartApplication,"Перезапуск");
  PushButton(400,40,460,60,ToolRestore,"Выход");
  WhiteBackground;
  Modality(1);
  WType(1);
  EndWindow;

  WindowBegin("Синхронизация",SyncClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(360,44,460,64,ToolStopSync,"Остановить синхронизацию");
  Modality(1);
  WType(1);
  BottomBar;
  EndWindow;

  WindowBegin("Синхронизация",SyncOrExitClass,CGother,-);
  SetWRect(20,262,20+468,262+68);
  PushButton(400,44,460,64,ToolQuit,"Выход");
  Modality(1);
  WType(1);
  EndWindow;

  WindowBegin("Пожалуйста, подтвердите",YesNoWClass,CGother,RcType);
  Modality(1);
  UseView(RcVc);
  SetWRect(80,200,400,310);
  Sizeable(-1,-1,0,0);
  h = 50; v = 30;
  v = -30;
  PushButton(h,v,h+80,v+25,1,"Да");
  PushButton(h+=135,v,h+80,v+25,2,"Нет");
  EndWindow;

/* This window has to be in the startup because it may be displayed when a Communication error occurs */
  WindowBegin("Пожалуйста, подтвердите",YesNoCancelWClass,CGother,RcType);
  Modality(1);
  UseView(RcVc);
  SetWRect(80,200,400,300);
  Sizeable(-1,-1,0,0);
  h = 20; v = -30;
  PushButton(h,v,h+80,v+25,1,"Да");
  PushButton(h+=100,v,h+80,v+25,4,"Нет");
  PushButton(h+=100,v,h+80,v+25,2,"Отмена");
  EndWindow;

/* modRest */

  RegisterWS("Счета","Счета","Открыть счёт",RestAccVc,modRest); 
  RegisterWS("Остатки по кассе","Остатки по кассе","Новый остаток по кассе",CashierBalVc,modRest); 
  RegisterWS("Кредитные карты","Кредитные карты","Новая кредитная карта",CreditCardVc,modRest); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modRest); 
  RegisterWS("Балансы кассового терминала","Балансы кассового терминала","Новый баланс кассового терминала",POSBalanceVc,modRest); 
  RegisterWS("Сессии POS","Сессии кассового терминала","Новая сессия кассового терминала",POSEventVc,modRest); 
  RegisterWS("Событие кассы","Событие кассы","Новое событие кассы",CashVc,modRest); 
  RegisterWS("Резервирования ресторана","Резервирования ресторана","Новое резервирование ресторана",RestBookingVc,modRest); 

  Setting("Настройки записей - Ресторан",RestAccTClass,modRest);
  Setting("Активные меню бара",BarMenuSetTClass,modRest);
  Setting("Классы счетов ресторана",RestAccClassLClass,modRest);
  Setting("Типы меню бара",BarMenuTypeLClass,modRest);
  Setting("Меню бара",BarMenuLClass,modRest);
  Setting("Заблокированные товары",BranchBlockINLClass,modRest);
  Setting("Ежедневная статистика",SalesTimeTClass,modRest); 
  Setting("Способы оплаты по умолчанию",DefCashTClass,modRest);
  Setting("Секции",DrawerLClass,modRest); 
  Setting("Классификации товара",DILClass,modRest);
  Setting("Отделения товара",RestItemDeptLClass,modRest);  
  Setting("Отделения кухни",RestOrderDeptLClass,modRest);  
  Setting("Заказы на кухню",KitchenOrderLClass,modRest); 
  Setting("Экран заказов на кухню",RestKItchenOrdWClass,modRest);           
  Setting("Экран заказов кухни #Colours#",RestPanelColourLClass,modRest);  
  Setting("Группы локальных машин",LocalMachineGroupsTClass,modRest);  
  Setting("Локальные машины",LocalMachineLClass,modRest);
  Setting("Способы оплаты локальной машины",RestPMTClass,modRest);
  Setting("Карты лояльности",LoyaltyCardLClass,modRest);  
  Setting("Программы лояльности накопительной карты",LCMemberLevelLClass,modRest);
  Setting("Структура программы лояльности накопительной карты",LCMLevelSetTClass,modRest);
  Setting("Накопительные баллы",LoyaltyPointsLClass,modRest);
  Setting("Накопительные баллы по складу",LocLoyaltyPointsLClass,modRest);
  Setting("Использование накопительных баллов",LoyPointRedeemLClass,modRest);
  Setting("Использование накопительных баллов по магазинам",LocLoyPointRedeemLClass,modRest);
  Setting("Комплекты блюд",MealCourseLClass,modRest);
  Setting("Модиф-ры",ModifiersLClass,modRest);
  Setting("Ночное обслуживание",NightMaintRestTClass,modRest);
//  Setting("Серии номеров - Касса",CashSerTClass,modRest);
  Setting("Серии номеров - Счета ресторанов",RestAccSerTClass,modRest);
  Setting("Группы кнопок кассов. терминала",POSButtonGroupsLClass,modRest);
  Setting("POS Button Pictures",POSButtonPictureLClass,modPOS); //!!TRANSLATE
  Setting("Кнопки кассового терминала (сенсорные)",POSButtonsLClass,modRest);
  Setting("Сессии кассового терминала",POSEventLCLass,modRest);
  Setting("Настройки кассового терминала",CashierDefTClass,modRest);
  Setting("Типы заказов ресторана",RestBookTypeLClass,modRest);
  Setting("Время работы ресторана",RestOpenHoursLClass,modRest);
  Setting("Настройки ресторана",RestTClass,modRest);
  Setting("Настройки ресторана",RestSetupLClass,modRest);
  Setting("Дополнительные услуги",ServiceChargeLClass,modRest);
  Setting("Столики",NeighbourHoodLClass,modRest);
  Setting("Расположение столиков",TablesViewsLClass,modRest);
  Setting("Расположение столиков (старое)",RestAccOldLClass,modRest);
//  Setting("Расположение столиков",TLLClass,modRest);
//  Setting("Схема располож. столиков",TablesViewWClass,modRest);
  Setting("Новая схема расположения столиков",TableLayoutClass,modRest);
  
  Document("Счета ресторана",RestAccRClass,RestAccForm,RestAccFClass,modRest);
  Document("Заказы на кухню ресторана",RestAccKitchenRClass,RestAccKitchenForm,RestAccKitchenFClass,modRest);
  Document("Чеки ресторана",RestAccReceiptRClass,RestAccReceiptForm,RestAccReceiptFClass,modRest);
  Document("Отмена заказа",RestAccRClass,RestAccCancelForm,RestAccCancelFClass,modRest);
  Document("События кассы",CashRClass,CashForm,CashFClass,modRest);
  Document("Срочный заказ",RestAccRClass,RestAccFireOrderForm,RestAccFireOrderFClass,modRest);
  Document("Счёт гостя ",RestAccGuestBillRClass,RestAccGuestBillForm,RestAccGuestBillFClass,modRest);
  if (HasLocalization("HRV,SVN")) then begin
    Export("(Croatia, Slovenia) Cash invoices export",CashInvCroEClass,CashInvExEn,modRest);
  end;
  Export("Ежедневная статистика ресторана",SalesTimeEClass,SalesTimeEn,modRest);  

  Report("Журнал счетов ресторана",RestAccJRClass,RestAccJRn,0,modRest);
  Report("Снятие кассы",CashupRClass,CashupRn,0,modRest);
  Report("Прибыль по счетам ресторана", RestAccGPRClass,RestAccGPRn,0,modRest);
  Report("Отчёт по накопительной карте",LoyaltyCardRClass,LoyaltyCardRn,0,modRest);  
  Report("Заказы ресторана",RestBookingRClass,RestBookingRn,0,modRest);
//  Report("Отчёт по кассе ресторана",BarCashRClass,BarCashRn,0,modRest); // Don't think it does anything useful, should use Cashup Report instead
  Report("Ежедневная статистика ресторана",DetSalesTimeRClass,DetSalesTimeRn,0,modRest);  
  Report("Статистика товаров - Ресторан",BarItemStatRClass,BarItemStatRn,0,modRest);
  Report("Планирование ресторана",RestPlanningRClass,RestPlanningRn,0,modRest);
  Report("Отчёт отмен",VoidedRowsRClass,VoidedRowsRn,0,modRest);
//  Report("Статистика продаж",BarSalesStatRClass,BarSalesStatRn,0,modRest);

  Maintenance("Снятие кассы",CashupVClass,CashupMn,modRest);
  Maintenance("Создать кнопки кассов. терминала",CreatePOSButtonsVClass,CreatePOSButtonsMn,modRest);
//  Maintenance("Создать ежедневные записи операций",BarGenNLVClass,BarGenNLMn,modRest);
  Maintenance("Ночное обслуживание",MidStatRestVClass,MidStatRestMn,modRest);
  Maintenance("Обновить склад",BarGenSDVClass,BarGenSDMn,modRest);
  
/* modHotel */

  RegisterWS("Резервирования","Резервирования","Новое резервирование",JobVc,modHotel); 
  RegisterWS("Групповые резервирования","Групповые резервирования","Новое групповое резервирование",GroupJobLClass,modHotel); 
  RegisterWS("Комм. пред. по резервированиям","Комм. пред. по резервированиям","Новое комм. пред. по резервированию",ResAvVc,modHotel); 
  RegisterWS("Комнаты","Комнаты","Новая комната",ResVc,modHotel); 
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modHotel); 
  RegisterWS("Гости","Гости","Новый гость",CUGuestLClass,modHotel); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modHotel); 
//  Register("Mother Reservation","Group Res.",PRPlVc,modHotel);

  Setting("Agent Addons",AgentAddonLClass,modHotel); 
  Setting("Агентские комнаты",AgentRoomLClass,modHotel);
  Setting("Автоматическая смена статуса резервирования",RSCLClass,modHotel);
  Setting("Источники заказа",BookOrgTClass,modHotel);
  Setting("интеграция Booking.com",BookingComTClass,modHotel); 
  Setting("Border Check Point",BorderCheckPointLClass,modHotel);
  Setting("Условия отмены",CNDLClass,modHotel);
  Setting("Проверочные списки",ResMesLClass,modHotel); 
  Setting("Условия классификации",CClassDLClass,modHotel);
  Setting("Предметы потребления",CommodityLClass,modHotel);
  Setting("Резервирования клиента",HCUALClass,modHotel);
  Setting("Условия клиента",HCUDLClass,modHotel);
  Setting("Ежедневная статистика",SalesTimeTClass,modHotel); 
  Setting("Предоплаты",DownPayHotelTClass,modHotel);
  Setting("Электронная замочная система",ELockSystemTClass,modHotel);
//  Setting("Консьерж",ConciergeLClass,modHotel); // Could be used, but needs a report or something
//  Setting("Контактные лица",ContactLClass,modHotel);
//  Setting("Группы отображения",CalDispGroupTClass,modHotel);
//  Setting("Расписание последующих действий",ProgFollowUpsLClass,modHotel); // Follow Up should be done with Activties, but I am wondering what it was ACTUALLY used for
//  Setting("Диапазон номеров гостей",GuestOptTClass,modHotel);
  Setting("Услуги клиентам",GuestObserLClass,modHotel);
  Setting("Типы услуг клиентам",OBTypeLClass,modHotel);
  Setting("Уборка комнат",HouseKeepingTClass,modHotel);
  Setting("Настройки гостиницы",HotelTClass,modHotel);
  Setting("Оплачиваемые товары/услуги",ResArtCodeLClass,modHotel); 
  Setting("Газеты",NewspaperTClass,modHotel);
  Setting("Настройки ночного аудита",NightAuditPrefLClass,modHotel);
  Setting("Ночное обслуживание системы",NightMaintTClass,modHotel);
  Setting("Серии номеров - Предложения по резервированию",ResAvSerTClass,modHotel);
  Setting("Серии номеров - Резервирования",JobSerTClass,modHotel);
//  Setting("Number of Guests",QtyConvLClass,modHotel);
  Setting("Настройки онлайн-резервирования",OnlineResTClass,modHotel);
  Setting("Правила ценообразования",PriceRulesLClass,modHotel);
//  Setting("Prices",PLLClass,modHotel);
  Setting("Повторяющиеся услуги",RepItemsLClass,modHotel);
//  Setting("Reservation Follow Up",FollowUpLClass,modHotel); // Follow Up should be done with Activties, but I am wondering what it was ACTUALLY used for
  Setting("Цены резервирований",JobPriceLClass,modHotel); 
  Setting("Статус резервирования",ReservationStatusLClass,modHotel);
  Setting("Последовательности статуса резервирования",ReserSeqLClass,modHotel);
  Setting("Тип поддержки ресурса",ResTypeSupportLClass,modHotel);
//  Setting("Заказы ресторана",RestBookingLClass,modHotel);
//  Setting("Время работы ресторана",RestOpenHoursTClass,modHotel);
  Setting("Классификации комнат",ResClasLClass,modHotel);
  Setting("Типы классификаций комнат",ResClasTypeLClass,modHotel);
  Setting("Расположения комнат",ResLocLClass,modHotel);
//  Setting("Обслуживание комнат",ResExistLClass,modHotel); // Very beautiful function, but unfortunatly BLOCK works better.
  Setting("Пакет комнат",ResUsageLClass,modHotel);
  Setting("Типы пакетов комнат",ResUsageTypeLClass,modHotel);
  Setting("Настройки комнат",ResSettingTClass,modHotel);
  Setting("Статус комнаты",ResourceStatusLClass,modHotel);
  Setting("Типы комнат",ResTypeLClass,modHotel);
  Setting("Запланированные правила",ScheduleRuleLClass,modHotel);
  Setting("Цель визита",VisitPurposeLClass,modHotel);

//  Setting("Корзина заказов",ShopBaskLClass,modHotel);
//  Setting("Настройки записей",PPAccTClass,modHotel);
//  Setting("Коды регионов",AreaLClass,modHotel);
//  Setting("Группы работ",EGLClass,modHotel);
//  Setting("Job Place",PlaceLClass,modHotel);
//  Setting("Расположение ключей",PlKeyLClass,modHotel);
//  Setting("Заплпнироанное время",PlanTimeTClass,modHotel);
//  Setting("Категории комнат",ResCatLClass,modHotel);

  Report("Деятельности по комнате",ResActivitiesRClass,RoomActRn,0,modHotel); 
  Report("Статистика каналов",ChannelStatRClass,ChannelStatRn,0,modHotel);  
//  Report("Назначение горничных",AssignCLadyRClass,AssignCLadyRn,0,modHotel); // very advanced report, if we need it, we add it later
//  Report("История прибытия/выбытия",HotelEventsRClass,HotelEventsRn,0,modHotel);  // Very wierd report, activities are now disconnected, this won't work any more
  Report("Прибытия",CheckInRClass,CheckInRn,0,modHotel);
  Report("Выбытия",CheckOutRClass,CheckOutRn,0,modHotel);
  Report("Ежедневная статистика",SalesTimeRClass,SalesTimeRn,0,modHotel);
  Report("Продолжительность пребывания",StayStatsRClass,StayStatsRn,0,modHotel);
//  Report("Журнал последующих действий",FollowUpJRClass,FollowUpJRn,0,modHotel); // Follow Up should be done with Activties, but I am wondering what it was ACTUALLY used for
  Report("Folio Journal",ShopBaskJourRClass,ShopBaskJourRn,0,modHotel); // Proper Name?
  Report("Сводный счет гостя",GuestLedgerRClass,GuestLedgerRn,0,modHotel);
//  Report("Отчёт о размещении гостей",AllocGuestRClass,AllocGuestRn,0,modHotel);
  Report("История гостя",GuestHistRClass,GuestHistRn,0,modHotel);
  Report("Журнал гостей",GuestBookRClass,GuestBookRn,0,modHotel);
  Report("Список гостей",GuestListRClass,GuestListRn,0,modHotel);
  Report("Guest Nationality Statistics",GuestNationStatRClass,GuestNationStatRn,0,modHotel);
  Report("Список услуг клиентам",ObsPerTypeRClass,ObsPerTypeRn,0,modHotel);
  Report("Кассовый регистр гостиницы",HotelCashRClass,HotelCashRn,0,modHotel);
  Report("Обслуживание номеров",HousekeepingRClass,HousekeepingRn,0,modHotel);  
//  Report("Планирование обслуживания номеров",HousePlanningRClass,HousePlanningRn,0,modHotel); // Too complicated, too detailed
//  Report("Обслуживание номеров",HouseMaintRClass,HouseMaintRn,0,modHotel); // Based on Activities, seems crazy
//  Report("Статистика обслуживания номеров",HouseStatRClass,HouseStatRn,0,modHotel); // Based on Activities, seems crazy
  Report("Проживающие гости сегодня",InHouseRClass,InHouseRn,0,modHotel);
  Report("Invoice Audit Trail",InvShopRClass,InvShopRn,0,modHotel);
//  Report("Monthly Statistics",MonthlyHotelStatRClass,MonthlyHotelStatRn,0,modHotel); report doesnt exist
  Report("Статистика гражданства",HotNatStatRClass,HotNatStatRn,0,modHotel);
  Report("Список газет",NewspaperRClass,NewspaperRn,0,modHotel);
  Report("Ночной аудит",NightAuditRClass,NightAuditRn,0,modHotel); 
  Report("Неявившиеся гости",NoShowRClass,NoShowRn,0,modHotel);
  Report("Отчёт о занятых номерах",OcupatationRClass,OcupatationRn,0,modHotel);
  Report("Журнал резервирований",JobJourRClass,JobJourRn,0,modHotel);
//  Report("Заказы ресторана",RestBookingRClass,RestBookingRn,0,modHotel);
  Report("История по комнате",ResHistRClass,RoomHistRn,0,modHotel); 
//  Report("Информация о комнате",ResInfoRClass,ResInfoRn,0,modHotel); // Basically shows same as Room List
  Report("Доступные комнаты сегодня",TodayRoomAvailRClass,TodayRoomAvailRn,0,modHotel);
//  Report("Rooming List",RoomingListRClass,RoomingListRn,0,modHotel);
  Report("Статистика по комнатам",HotelStatRClass,HotelStatRn,0,modHotel);
  if (HasLocalization("NAM")) then begin
    Report("Туристический сбор (Намибия)",TourismLevyNamRClass,TourismLevyNamRn,0,modHotel);
  end;
  Report("Неподтверждённые резервирования",ConfirmRClass,ConfirmRn,0,modHotel);
  Report("Изменения при заселении",UpDownGradeRClass,UpDownGradeRn,0,modHotel);  
//  Report("Assignable Rooms",AsigRoomsRClass,AsigRoomsRn,0,modHotel);
//  Report("Guest Observations",GuestObserRClass,GuestObserRn,0,modHotel); // New specification, new code!!!
//  Report("Last Reservation",LastGuestRClass,LastGuestRn,0,modHotel);
//  Report("Rooms Available",ResAvailRClass,FindJobRn,0,modHotel); What does this show...
//  Report("Room Overview",ResOverRClass,ResOverRn,0,modHotel);

  Document("Гость",GuestDocRClass,GuestDocForm,GuestDocFClass,modHotel);
  Document("Reservation Check Outs",JobCheckOutRClass,Job1Form,Job1FClass,modHotel);  
  Document("Reservation Confirmations",JobConfRClass,Job3Form,Job3FClass,modHotel);  
  Document("Reservation Enquiries",JobEnqRClass,Job2Form,Job2FClass,modHotel);  
  Document("Предложение по резервированию",ResAvRClass,ResAvForm,ResAvFClass,modHotel);
  Document("Резервирования",JobRClass,JobForm,JobFClass,modHotel);
//  Document("Tourism Levy",TourismLevyRClass,TourismLevyForm,TourismLevyFClass,modHotel);

  Maintenance("Создать резервирования комнат",HCUAVClass,HCUAMn,modHotel);
  Maintenance("Создать групповое резервирование из родительского резервирования",GrJobFromMoJobVClass,GrJobFromMoJobMn,modHotel);
  Maintenance("Выписать сч/ф",PPInvVClass,PPInvMn,modHotel);
  Maintenance("Групповое фактурирование резервирования",GenResInv2VClass,GenResInv2Mn,modHotel);
  Maintenance("Create Invoice from Group Reservation",IVFromGroupJobVClass,IVFromGroupJobMn,modHotel); //!!TRANSLATE
  Maintenance("Ночное обслуживание системы",MidStatChangeVClass,MidStatChangeMn,modHotel);
//  Maintenance("Профилактическое обслуживание",AgImpVClass,AgImpMn,modHotel);
  Maintenance("Переделать тип поддержки ресурса",RebuildResTypeSupVClass,RebuildResTypeSupMn,modHotel);
  Maintenance("Пересчитать фактурируемые",RecJobInvVClass,RecJobInvMn,modHotel);
  Maintenance("Неподтверждённые резервирования",ConfirmVClass,ConfirmMn,modHotel);
//  Maintenance("Обновить счет клиента",UpdateCustAccVClass,UpdateCustAccMn,modHotel);
//  Maintenance("Create Time Sheets",GenTSFromJobVClass,GenTSJobMn,modHotel);

/* modPP */

  RegisterWS("Резервирования","Резервирования","Новое резервирование",JobVc,modPP); 
  RegisterWS("Ресурсы","Ресурсы","Новый ресурс",ResVc,modPP); 
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modPP); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modPP); 

  Setting("Группы отображения",CalDispGroupTClass,modPP);
  Setting("Наличие ресурсов",ResExistLClass,modPP);
  Setting("Оплачиваемые товары/услуги",ResArtCodeLClass,modPP);
  Setting("Серии номеров - Резервирование",JobSerTClass,modPP);
  Setting("Цены",PLLClass,modPP);
  Setting("Классификации ресурсов",ResClasLClass,modPP);
  Setting("Типы классификаций ресурсов",ResClasTypeLClass,modPP);
  Setting("Настройки ресурсов",ResSettingTClass,modPP);
  Setting("Тип поддержки ресурсов",ResTypeSupportLClass,modPP);
  Setting("Типы ресурсов",ResTypeLClass,modPP);
  Setting("Местоположения ресурсов",ResLocLClass,modPP);
  Setting("Статусы ресурса",ResourceStatusLClass,modPP);
  Setting("Статусы резервирования",ReservationStatusLClass,modPP);
  Setting("Использование ресурсов",ResUsageLClass,modPP);
  Setting("Последовательности статусов резервирования",ReserSeqLClass,modPP);
// I picket the name, and I don't like it -- Change welcome! -- Erik
  Setting("Типы ресурсов в графическом интерфейсе",ResPlanTClass,modPP);
  
  Report("Доступные ресурсы",ResAvailRClass,FindJobRn,0,modPP);
  Report("Последнее резервирование",LastGuestRClass,LastGuestRn,0,modPP);
  Report("Журнал резервирований",JobJourRClass,JobJourRn,0,modPP);
  Report("Деятельности по ресурсам",ResActivitiesRClass,ResActRn,0,modPP);
  Report("История ресурса",ResHistRClass,ResHistRn,0,modPP);
  Report("Информация о ресурсах",ResInfoRClass,ResInfoRn,0,modPP);
  Report("Список ресурсов",TodayResAvailRClass,TodayResAvailRn,0,modPP);

  Document("Резервирования",JobRClass,JobForm,JobFClass,modPP);
 
  Maintenance("Выписать сч/ф",PPInvVClass,PPInvMn,modPP);
  Maintenance("Перестроить тип поддержки ресурса",RebuildResTypeSupVClass,RebuildResTypeSupMn,modPP);
  Maintenance("Пересчитать фактурируемые",RecJobInvVClass,RecJobInvMn,modPP);
  Maintenance("Обновить счет клиента",UpdateCustAccVClass,UpdateCustAccMn,modPP);

// modTel - Telephone connections

  RegisterWS("Звонки","Звонки","Новый звонок",TelCallsVc,modTel); 
  RegisterWS("Внутренние номера","Внутренние номера","Новый внутренний номер",TelEGroupVc,modTel); 
  RegisterWS("Группы каналов","Группы каналов","Новая группа каналов",TelTGroupVc,modTel); 
  RegisterWS("PBX Connections","PBX Connections","New PBX Connection",PBXConnectionVc,modTel); 
  RegisterWS("Asterisk Users","Asterisk Users","New Asterisk User",AsteriskUser2Vc,modTel); 
  RegisterWS("SIP Trunks","SIP Trunks","New SIP Trunk",SipTrunk2Vc,modTel); 
  Register("Очереди","Очереди",PBXQueueVc,modTel);         
  Register("Меню","Меню",PBXIVRTreeVc,modTel);         
 
  Setting("Дополнительные менеджеры Asterisk",PBXExtraManagersClass,modTel);         
  Setting("Праздничные дни",BHollLClass,modTel);
  Setting("Локальный сервер Asterisk",LocalAsteriskTClass,modTel); 
  Setting("Звуки оповещения PBX",PBXSoundLClass,modTel);         
  Setting("Настройки модуля Телефон",PhoneTClass,modTel);
  Setting("Регистрированные телефонные номера",CallRegTypeLClass,modTel);
  Setting("Матрица тарифов",TelDayMatrixLClass,modTel);
  Setting("Телефонные расширения",ResComLClass,modTel); 
  Setting("Trunk Groups",TelTrunkGroupLClass,modTel);
  Setting("Типы звонков",CallTypeLClass,modTel);

  Report("Статус очереди Asterisk",AsteriskQueueStatusRClass,AsteriskQueueStatusRn,0,modTel); 
  Report("Asterisk User Status",AsteriskPeersRClass,AsteriskPeersRn,0,modTel); 
  Report("История связи",CallHisRClass,CallHisRn,0,modTel);
  Report("История телефонных звонков",PersTelHisRClass,PersTelHisRn,0,modTel);
  Report("Расширения SIP, по сотрудникам",SIPUserRClass,SIPUserRn,0,modTel); 

  Maintenance("Файлы конфигурации Asterisk SIP",AsteriskSIPConfigVClass,AsteriskSIPConfigMn,modTel);         
  Maintenance("Каналы SIP Asterisk",AsteriskSIPTrunkVClass,AsteriskSIPTrunkMn,modTel); 
  Maintenance("Пользователи Asterisk",AsteriskUserVClass,AsteriskUserMn,modTel); 
  Maintenance("Произвести начисление за звонки",ChargeCalVClass,ChargeCalMn,modTel);

/* modRsrt */

  RegisterWS("Event Types","Event Types","New Event Type",RsrtEventTypeLClass,modRsrt); 
  RegisterWS("Events Schedules","Events Schedules","New Events Schedule",RsrtEventScheduleVc,modRsrt); 
  RegisterWS("Events","Events","New Event",RsrtEventLClass,modRsrt); 
  RegisterWS("Resources","Resources","New Resource",RsrtResLClass,modRsrt); 
  RegisterWS("Event Type Packages","Event Type Packages","New Event Type Package",RsrtEventTypePackLClass,modRsrt); 
  RegisterWS("Event Type Resources","Event Type Resources","New Event Type Resource",RsrtEventTypeResLClass,modRsrt); 

  Setting("Типы ресурсов",ResTypeLClass,modRsrt);

  Report("Доступные мероприятия",RsrtEventAvailRClass,RsrtEventAvailRn,0,modRsrt);

  Maintenance("Фактурирование туристических мероприятий",IVRsrtEventVClass,IVRsrtEventMn,modRsrt);

/*
old thing being replaced
  Register("Резервирование","Резерв.",JobLClass,modRsrt);
  Register("Перемещения","Перемещения",TransferLClass,modRsrt);
  Register("События","События",ExcursionLClass,modRsrt);
  Register("Типы событий","Типы событий",ExcurTypeLClass,modRsrt);
  Register("Маршруты","Маршруты",RouteLClass,modRsrt);
  Register("Позиция, км","Позиция, км",KmCountLClass,modRsrt);
  Register("Автомашины","Автомашины",VehicleLClass,modRsrt);

  Setting("Группы событий",ExcurGroupLClass,modRsrt);
  Setting("Места",EventPlaceLClass,modRsrt);
  Setting("Прейскуранты предлагаемых программ",PLProgramLClass,modRsrt);
  Setting("Требуемые маршруты",ReqTranfLClass,modRsrt);
  Setting("Настройки модуля Туризм",ResortTClass,modRsrt);
  Setting("Предлагаемые программы",ResEventTypeLClass,modRsrt);

  Report("История событий",EventHistRClass,EventHistRn,0,modRsrt);
  Report("Журнал событий",EventJourRClass,EventJourRn,0,modRsrt);
  Report("Планируемые события",PlannedStayRClass,PlannedStayRn,0,modRsrt);
  Report("Предлагаемые программы",ResEventTypeRClass,ResEventTypeRn,0,modRsrt);
  Report("Журнал перемещений",TransfJourRClass,TransfJourRn,0,modRsrt);
  Report("Занятость транспорта",VehOcupRClass,VehOcupRn,0,modRsrt);

  Document("Событие",ExcurDocRClass,ExcurDocForm,ExcurDocFClass,modRsrt);
  Document("Перемещение",TransferDocRClass,TransferDocForm,TransferDocFClass,modRsrt);
  
  Maintenance("Создать события",GenExcurVClass,GenExcurMn,modRsrt);
  Maintenance("Создать письмо поставщику",GenVEMailVClass,GenVEMailMn,modRsrt);
  Maintenance("Создать перемещения",GenTransferVClass,GenTransferMn,modRsrt);
*/

/* modRent */

  RegisterWS("Соглашения","Соглашения","Новое соглашение",AgreementVc,modRent); 
  RegisterWS("Резервирования на аренду","Резервирования на аренду","Новое резервирование на аренду",RentResVc,modRent); 
  RegisterWS("Комм. предложения на аренду","Комм. предложения на аренду","Новое комм. предложение на аренду",RentQTVc,modRent); 
  RegisterWS("Возвраты","Возвраты","Новый возврат",CollectionVc,modRent); 
  RegisterWS("Товары на аренду","Товары на аренду","Новый товар на аренду",RentINVc,modRent); 
  RegisterWS("Проверка товаров","Проверка товаров","Новая проверка товаров",InspectConLClass,modRent); 

  Setting("Расширенный шаблон ценообразования",AdvPriceTemplLClass,modRent);
  Setting("Авторизованные клиенты",AuthCustLClass,modRent);
  Setting("Праздничные дни",BHollLClass,modRent);
  Setting("Основной прейскурант аренды",RentPriceListLClass,modRent);
  Setting("Праздничные дни клиентов",BHollCustLClass,modRent);
  Setting("Адреса доставки",DelAddrLClass,modRent);
  Setting("Статус проверки",InspectStatusLClass,modRent);
  Setting("Фактурирование по отделам",RentDepTClass,modRent);
  Setting("Классификации товаров",DILClass,modRent);
  Setting("Товары",INLClass,modRent);
  Setting("Серии номеров - Agreements",RentAgrSerTClass,modRent);  
  Setting("Серии номеров - Предложения аренды",RentQTSerTClass,modRent);
  Setting("Серии номеров - Rental Reservationss",RentResSerTClass,modRent);  
  Setting("Структуры",RecLClass,modRent);
  Setting("Тип начисления для аренды",AgreeTypeLClass,modRent);
  Setting("Дополнительные начисления аренды",RentChargesTClass,modRent);
  Setting("Настройки сч/ф аренды",RentInvoiceTClass,modRent);
  Setting("Группы товаров аренды",RentITLClass,modRent);
  Setting("Настройки модуля Аренда",RentControlTClass,modRent);
  Setting("Письмо с предложением аренды",RentQTMailTClass,modRent);
  Setting("Прейскуранты аренды",RentalPriceListsLClass,modRent);
  Setting("Настройки ценообразования аренды",RentPriceSetTClass,modRent);
  Setting("Статус резервирования аренды",AgreeStatusLClass,modRent);
  Setting("Типы ресурсов в графическом интерфейсе",ResPlanTClass,modRent);
//  Setting("Места",SiteLClass,modRent);
  Setting("Стандартные тексты",LTxtLClass,modRent); 
//  Setting("Расширенные прейскуранты",AdvPriceRecLClass,modRent);

  Report("Фактурирование соглашений",AgreeInvRClass,AgreeInvRn,0,modRent);
  Report("Доступность",RentResAvailRClass,RentResAvailRn,0,modRent);
  Report("Статус возврата",CollectionStatusRClass,CollectionStatusRn,0,modRent);
  Report("Текущие резервирования аренды",CurRentResRClass,CurRentResRn,0,modRent);
  Report("Статус аренды клиента",CustRentStatRClass,CustRentStatRn,0,modRent);
  Report("Статус проверки",InspectionStatusRClass,InspectionStatusRn,0,modRent);
  Report("Статус внутреннего перемещения",IntStockMovStatusRClass,IntStockMovStatusRn,0,modRent);
  Report("Товары у клиента",ItemAtSiteRClass,ItemAtSiteRn,0,modRent);
  Report("Статус принятых товаров",ItemInStatusRClass,ItemInStatusRn,0,modRent);
  Report("Статус выданных товаров",ItemOutStatusRClass,ItemOutStatusRn,0,modRent);
  Report("Отсутствующие возможности аренды",MissedRentOppRClass,MissedrentOppRn,0,modRent);
  Report("Список предложений аренды",RentQTStkRClass,RentQTStkRn,0,modRent);
  Report("Журнал предложений аренды",RentQTJRClass,RentQTJRn,0,modRent);
  Report("Статистика предложений аренды по продавцу",RentQTSMStatsRClass,RentQTSMStatRn,0,modRent);
  Report("Статус предложения аренды",RentQTStatusRClass,RentQTStatusRn,0,modRent);
  Report("Прейскурант аренды",RentResAccesPLRClass,RentResAccesPLRn,0,modRent);
  Report("Операции резервирования аренды",CRentResTransRClass,RentResTransRn,0,modRent);
  Report("История резервирования аренды",RentResHistRClass,RentResHistRn,0,modRent);
  Report("Годовой доход аренды",RentRevenueRClass,RentRevenueRn,0,modRent);
  Report("Статус серийного номера товара аренды",SerialItemRentalStatusRClass,SerialItemRentalStatusRn,0,modRent);
  Report("История по серийному номеру",SerialNrRClass,SerialNrRn,0,modRent);
  Report("Списание невозвратов",UncOffHireRClass,UncOffHireRn,0,modRent);

  Document("Соглашения",AgreementRClass,AgreementForm,AgreementFClass,modRent);
  Document("Возвраты",CollectionRClass,CollectionForm,CollectionFClass,modRent);
  Document("Подробное соглашение",AgreementDetRClass,AgreementDetForm,AgreementDetFClass,modRent);
  Document("Резервирование аренды",RentResRClass,RentResForm,RentResFClass,modRent);
  Document("Предложения аренды",RentQTRClass,RentQTForm,RentQTFClass,modRent);

  Export("Отчёт по использованию товаров аренды",InstrUtilEClass,InstrUtilEn,modRent);

  Maintenance("Создать начисление за резервирование",GenRentChargesVClass,ChargeAgreementMn,modRent);
  Maintenance("Создать возвраты",RentResCollectionVClass,RentResCollectionMn,modRent);
  Maintenance("Создать прием товара",RentResOffHireVClass,RentResOffHireMn,modRent);
  Maintenance("Создать выдачу товара",RentResDispatchVClass,RentResDispatchMn,modRent);
  Maintenance("Создать счета-фактуры для соглашения",GenAgreeInvVClass,GenAgreeInvMn,modRent);
//  Maintenance("Recalculate Rental Reservations",RecalcRentResVClass,RecalcRentResMn,modRent);

/* modIntStock */

  RegisterWS("Приём товара","Приём товара","Новый приём товара",OffHireVc,modIntStock); 
  RegisterWS("Выдача товара","Выдача товара","Новая выдача товара",DispatchVc,modIntStock); 
  RegisterWS("Складские перемещения","Складские перемещения","Новое складское перемещение",INTransferVc,modIntStock); 
  RegisterWS("Внутренние перемещения","Внутренние перемещения","Новое внутреннее перемещение",InternMovVc,modIntStock); 
  RegisterWS("Товары на аренду","Товары на аренду","Новый товар на аренду",RentINVc,modIntStock); 
  RegisterWS("Товары","Товары","Новый товар",INLClass,modIntStock); 
//  Register("Assets","Assets",AT2UnitVc,modIntStock);
//  Register("Known Serial No.","Known Ser.No.",SVOSerVc,modIntStock);

  Setting("Настройки внутреннего склада",IntSettingTClass,modIntStock);
  Setting("Серии номеров - Прием товара",OffHireSerTClass,modIntStock);
  Setting("Серии номеров - Выдача товара",DispatchSerTClass,modIntStock);
  Setting("Серии номеров - Складское перемещение",INTransferSerTClass,modIntStock);

  Report("Отчёт по внутреннему складу",IntINRClass,IntInvValRn,0,modIntStock);
  Report("Журнал приема товара",GoodsINRClass,GoodsinRn,0,modIntStock);
  Report("Журнал выдачи товара",GoodsOutRclass,GoodsOutRn,0,modIntStock);
  Report("Журнал складских перемещений",INTransferRClass,INTransferRn,0,modIntStock);
  Report("История серийных номеров",SerialNrRClass,SerialNrRn,0,modIntStock);

  Document("Внутреннее перемещение",InternMovRClass,InternMovForm,InternMovFClass,modIntStock);
  Document("Прием товара",OffHireRClass,OffHireForm,OffHireFClass,modIntStock);
  Document("Выдача товара",DispatchRClass,DispatchForm,DispatchFClass,modIntStock);
  Document("Складское перемещение",INTransferRClass,INTransferForm,INTransferFClass,modIntStock);

/* modPOProg */
  RegisterWS("Прогноз продаж","Прогноз продаж","Новый прогноз продаж",SalesForecastVc,modPOProg); 
  RegisterWS("Производственный план","Производственный план","Новый производственный план",ProdPlanVc,modPOProg); 
  RegisterWS("Закупочный план","Закупочный план","Новый закупочный план",POPlanVc,modPOProg); 
  RegisterWS("Товары поставщиков","Товары поставщиков","Новый товар поставщика",PIVc,modPOProg); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modPOProg); 
  RegisterWS("Рецепты","Рецепты","Новый рецепт",RecVc,modPOProg); 

  Setting("Товары автоматического производства",AutoProdLClass,modPOProg);
  Setting("Праздничные дни для прогноза продаж",SFBHollLClass,modPOProg);
  Setting("Классы прогнозов",ForecastClassLClass,modPOProg);
  Setting("Настройки прогнозов",SFPeriodsTClass,modPOProg);
//  Setting("Количество производственных дней",SFProdDaysTClass,modPOProg);
//  Setting("Количество торговых дней",SFSalesDaysTClass,modPOProg);
  Setting("Количество рабочих дней",SFWorkDaysLClass,modPOProg);
  Setting("Серии номеров - Планы производства",ProdPlanSerTClass,modPOProg);
  Setting("Серии номеров - Планы закупок",POPlanSerTClass,modPOProg);
  Setting("Серии номеров - Прогнозы продаж",SalesForSerTClass,modPOProg);
  Setting("Альтернативы производимых товаров",ProdItemLClass,modPOProg);
  Setting("Компоненты плана производства",ProdPlanCompLClass,modPOProg); // should possibly not be on screen
  Setting("Политики склада",StockPolicyLClass,modPOProg);

  Report("Основные потребности в товарах",BasicItemReqRClass,BasicItemReqRn,0,modPOProg);
  Report("Рассчитанные месячные остатки на складах",CalcStockLevelsRClass,CalcStockLevelsRn,0,modPOProg);
  Report("Создать произв-ый план - Предв. просмотр",ProdPlanRClass,ProdPlanRn,0,modPOProg);
  Report("Создать произв-ва - Предв. просмотр",ProdPlanProdRClass,ProdPlanProdRn,0,modPOProg);
  Report("Создать заказы поставщикам - Предварительный просмотр",POPlanOrdRClass,POPlanOrdRn,0,modPOProg);
  Report("Создать план заказов поставщ. - Предв. просмотр",POPlanRClass,POPlanRn,0,modPOProg);
  Report("Ожидаемые поступления",ExpArrivalRClass,ExpArrivalRn,0,modPOProg);
  Report("Прогноз продаж",SalesForecastRClass,SalesForecastRn,0,modPOProg);
  Report("Точность прогноза продаж",SalesFCompRClass,SalesFCompRn,0,modPOProg);
  Report("Остатки на складах на основе политик складов",PolicyForecastRClass,PolicyForecastRn,0,modPOProg);
  Report("Отчёт по складу",INRClass,InvValRn,0,modPOProg);

  Maintenance("Создать производственный план",ProdPlanVClass,ProdPlanMn,modPOProg);  
  Maintenance("Создать производства",ProdPlanProdVClass,ProdPlanProdMn,modPOProg);  
  Maintenance("Создать заказы поставщикам",POPlanOrdVClass,POPlanOrdMn,modPOProg);  
  Maintenance("Создать план заказов поставщикам",POPlanVClass,POPlanMn,modPOProg);  

/*
  Register("Прогнозируемые заказы","Прогнозируемые заказы",ORProgVc,modPOProg);
  Register("Детальный прогноз","Детальный прогноз",INProgVc,modPOProg);
  Register("Calculated Order or Purchase Stock","Calculated O/PO Stock",PrelORPUStockVc,modPOProg);
  Register("Рассчитаное количество на складе","Расчитанное кол-во",PrelStockVc,modPOProg);
  Register("Товары поставщиков","Товары поставщиков",PIVc,modPOProg);
  RegisterWS("Товары","Товары","Новый товар",INVc,modPOProg); 

  Report("Журнал прогнозируемых заказов",ORProgJRClass,ORProgJRn,0,modPOProg);
  Report("Список прогнозов",ProgListRClass,ProgListRn,0,modPOProg);
  Report("Прогнозы покупок",PurchProgRClass,PurchProgRn,0,modPOProg);

  Document("Прогнозируемые заказы",ORProgRClass,ORProgForm,ORProgFClass,modPOProg);

  Setting("Выбор складов",INProgLocTClass,modPOProg);
  Setting("Выбор класса заказа",INProgOrdClassTClass,modPOProg);
//  Setting("Серии номеров - Prognosis Orders",ORProgSerTClass,modPOProg);

  Maintenance("Вычислить все",CalcAllPurchProgVClass,CalcAllPurchProgMn,modPOProg);  
  Maintenance("Calculate SO/PO Stock",CalcSOPOStockVClass,CalcSOPOStockMn,modPOProg);  
  Maintenance("Calculate Stocklevels",CalcINLevelsVClass,CalcINLevelsMn,modPOProg);  
  Maintenance("Вычислить прогнозы",UpdProgVClass,UpdProgMn,modPOProg);  
  Maintenance("Очистка временных данных",CallAllCleanVClass,CallAllCleanMn,modPOProg);  
  Maintenance("Создать заказы поставщику",PurchProgVClass,PurchProgMn,modPOProg);  
  Maintenance("Удалить заказы поставщику",DelPOVClass,DelPOMn,modPOProg);  

  Export("Calculate SO/PO Stock",CalcSOPOStockEClass,CalcSOPOStockEn,modPOProg);
  Export("Прогнозы покупок",PurchProgEClass,PurchProgEn,modPOProg);
*/

/* modSVO */

  RegisterWS("Заказы на обслуживание","Заказы на обслуживание","Новый заказ на обслуживание",SVOVc,modSVO); 
  RegisterWS("Рабочие задачи","Рабочие задачи","Новая рабочая задача",WOVc,modSVO); 
  RegisterWS("Таблицы работ","Таблицы работ","Новая таблица работ",WSVc,modSVO); 
  Register("Операции по складу обслуживания","Операции по скл. обсл.",SVGMVc,modSVO);
  Register("Записи операций по табл. работ","Записи операций",WSIVVc,modSVO);
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modSVO); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modSVO); 
  RegisterWS("Использ. серийные №","Использ. серийные №","Новый использ. серийный №",SVOSerVc,modSVO); 

  Setting("Настройки записей - Заказы на обслуживание",AccSVOTClass,modSVO);
//  Setting("Apple GSX Queue",GSXQueueLClass,modSVO);

  Setting("Настройки Apple GSX",GSXSettingsTClass,modSVO);
  Setting("Контроль качества партии",QualConLClass,modSVO);
  Setting("Правила контроля качества партии",QCTestRulesTClass,modSVO);
//  Setting("Batch Quality Control Units",QCUnitLClass,modSVO);
  Setting("Шаблоны контроля качества партии",QCTemplateLClass,modSVO);
  Setting("Тесты контроля качества партии",QCTestLClass,modSVO);
  Setting("Статус партии",BatchStatusLClass,modSVO);
  Setting("Виды классификации",CTypeLClass,modSVO);
  Setting("Классификация контактов",CClassLClass,modSVO);
//  Setting("Контактные лица",ContactLClass,modSVO);
  Setting("Информация в справке по клиентам",CustPSLClass,modSVO);
  Setting("Склады",LocationLClass,modSVO);
  Setting("Серии номеров - Заказы на обслуживание",SVOSerTClass,modSVO);
  Setting("Серии номеров - операции по складу обслуживания",SVGMSerTClass,modSVO);
  Setting("Серии номеров - Заказы на работу",WOSerTClass,modSVO);
  Setting("Серии номеров - Таблицы работ",WSSerTClass,modSVO);
  Setting("Виды счетов",OrderClassLClass,modSVO);
  Setting("Условия оплаты",PDLClass,modSVO);
  Setting("Запланированная отгрузка",PlanDeliveryTClass,modSVO);
  Setting("Товары на замену",ReplItemsLClass,modSVO);
  Setting("Комментарии к сер. номерам",SVOTextLClass,modSVO);
  Setting("Модификаторы стандартных проблем",StdProblemModLClass,modSVO);
  Setting("Стандартные проблемы",StandProblemLClass,modSVO);
  Setting("Настройки склада",MainStockTClass,modSVO);

  Import("Используемые серийные номера",SVOSerIn,SVOSerIn,modSVO); // Now it is possible to use, I have changed how it works.

  Document("Заказы на обслуживание",SVORClass,SVOForm,SVOFClass,modSVO);
  Document("Операции по складу обслуживания",SVGMRClass,SVGMForm,SVGMFClass,modSVO);
  Document("Заказы на работу",WOrdRClass,WOrdForm,WOrdFClass,modSVO);
  Document("Таблицы работ",WSRClass,WSForm,WSFClass,modSVO);

  Report("Результаты контроля качества партии",QualConResRClass,QualConResRn,0,modSVO);
  Report("Тесты контроля качества партии",QualConRClass,QualConRn,0,modSVO);
  Report("Претензии контроля качества",QualConRecRClass,QualConRecRn,0,modSVO);
  Report("Статистика по товарам",ArtSTRClass,ArtSTRn,0,modSVO);
  Report("Невыполненные заказы на обслуживание",SVOStockRClass,SVOStockRn,0,modSVO);
  Report("История серийных номеров",SerialNrRClass,SerialNrRn,0,modSVO);
  Report("Обслуживание и ремонт - Статистика по сотрудникам",SVOEMStatRClass,SVOEMStatRn,0,modSVO);
  Report("Журнал заказов на обслуживание",SVOListRClass,SVOListRn,0,modSVO);
  Report("Статус заказа на обслуживание",SVOStaRClass,SVOStaRn,0,modSVO);  
  Report("История товаров обслуживания",SVOINRClass,SVOItemRn,0,modSVO);
  Report("Журнал операций по складу обслуживания",GIOListRClass,GIOListRn,0,modSVO);
  Report("Журнал заказов на работу",WOListRClass,WOListRn,0,modSVO);
  Report("Журнал учета таблиц работ",WSListRClass,WSListRn,0,modSVO);
  Report("Work Sheet Transactions",WSTransRClass,WSTranRn,0,modSVO);
//  Report("Average Service Interval ##",AvgServIntRClass,AvgServIntRn,0,modSVO);
//  Report("Standard Problems ##",StandProblemsRClass,StandProblemsRn,0,modSVO);

  Maintenance("Изменение статуса партии",BatchStatChVClass,BatchStatChMn,modSVO);
  Maintenance("Создать заказ на работу",WorkOrderVClass,WorkOrderMn,modSVO);
  Maintenance("Пересчитать сч/ф",RecSVOVClass,RecSVOMn,modSVO);
//  Maintenance("Создать счета-фактуры",SVOInvVClass,MakeInvMn,modSVO);//doesn't exist

/* modEDI */
  Register("EDI Orders","EDI Orders",EDIORVc,modEDI);
  Register("EDI Invoices","EDI Invoices",EDIIVVc,modEDI);

  Setting("EDI Settings",EDISetTClass,modEDI);

  Export("Anilink",EDIAnilinkEClass,EDIAnilinkEn,modEDI);
  Export("Golden West Invoice",EDIVGWClass,EDIVGWEn,modEDI);
  Export("HANCOM97 Invoice",EDIHANCOMINVEClass,EDIHANCOMInvEn,modEDI);
  Export("IN Trade Invoice",EDIIntradeEClass,EDIIntradeEn,modEDI);
  Export("INVFIL 8",EDIVDeltaEClass,EDIVDeltaEn,modEDI);
  Export("INVFIL 9",EDIVEClass,EDIVEn,modEDI);
  Export("Kesko Invoice",EDIKeskoEClass,EDIKeskoEn,modEDI);
  Export("Kewill Extract",EDIVKEClass,EDIVKEn,modEDI);
  Export("Sainsbury Invoice",EDIVSEClass,EDIVSEn,modEDI);
  Export("Stralfors",EDIStrEClass,EDIStrEn,modEDI);

  Import("Anilink Order",EDIAnilinkIn,EDIAnilinkIn,modEDI);
  Import("B & Q Order",EDIORDeltaIn,EDIORDeltaIn,modEDI);
  Import("Golden West Order",EDIORGWIn,EDIORGWIn,modEDI);
  Import("HANCOM97 Order",EDIORHANCOMIn,EDIORHANCOMIn,modEDI);
  Import("IN Trade Order",EDIORIntradeIn,EDIORIntradeIn,modEDI);
  Import("Kesko Order",EDIORKeskoIn,EDIORKeskoIn,modEDI);
  Import("Sainsbury Order",EDIORSIn,EDIORSIn,modEDI);
  Import("Tesco Order",EDIORIn,EDIORIn,modEDI);
  Import("Tradeka Order",EDITradekaIn,EDITradekaIn,modEDI);

  Maintenance("Create Orders from EDI Orders",GenORFromEDIORVClass,GenORFromEDIOR,modEDI);

/* modLocal */

  Register("Локальный почтовый ящик","Почт. ящик",LocalMailVc,modLocal);

/* modEmail */

  RegisterWS("Псевдонимы эл. почты","Псевдонимы эл. почты","Новый псевдоним",EmailAliasVc,modEmail); 
  RegisterWS("POP3-серверы","POP3-серверы","Новый POP3-сервер",Pop3ServVc,modEmail); 
  Register("Очередь электронной почты","Очередь",EMailQueVc,modEmail);
  Register("Почтовые ящики","Почтовые ящики",ConferenceWClass,modEmail);
  RegisterWS("Доступные пользователи в чате","Доступные пользователи в чате","Новый доступный польз. чата",ExtChatUsersVc,modEmail); 
  RegisterWS("Шаблоны HTML","Шаблоны HTML","Нвый шаблон HTML",HtmlTemplateVc,modEmail); 
//  Register("Папки почты","Папки почты",MailFolderVc,modEmail);
//  Register("Фильтры почты","Фильтры почты",MailFilterVc,modEmail);

  Setting("Приложения к письмам",Attach2LClass,modEmail);
  Setting("Автоматический ответ",ConfAutoReplyLClass,modEmail);
  Setting("Группы доступа к конференциям",ConfAccLClass,modEmail);
  Setting("Адреса эл. почты",EmailAddrLClass,modEmail);
  Setting("Сервер SMTP",EmailTClass,modEmail);
  Setting("Настройки шлюза",GatewayTClass,modEmail);
  Setting("Настройки почты и конференций",MailSettingsTClass,modEmail);
  Setting("Метки эл. почты",MailTagLClass,modEmail);         
  Setting("Тексты по умолчанию",MailTextLClass,modEmail);         
  Setting("Просмотр почтовых ящиков",ConfLClass,modEmail);
  Setting("Номера Серий - Почта",MailSerTClass,modEmail);
  Setting("Презентации",ConfPresLClass,modEmail);
  Setting("Подписи",ConfSignLClass,modEmail);

  Report("Активные чаты",ChatRClass,ChatRn,0,modEmail);
  Report("Приложения к письмам",Attach2RClass,Attach2Rn,0,modEmail);
  Report("Доступ к конференциям",ConfAccessRClass,ConfAccessRn,0,modEmail);
  Report("Псевдонимы электронной почты",EMailAliasRClass,EMailAliasRn,0,modEmail);
  Report("Очередь электронной почты",EMailQueJRClass,EMailQueJRn,0,modEmail);
  Report("Статус валидации эл. почты",StdIDValidationStatusRClass,StdIDValidationStatusRn,0,modEmail); 
  Report("Найти конференцию",FindConfRClass,FindConfRn,0,modEmail); 
  Report("Mail Acceptance Status",MailAcptncStatRClass,MailAcptncStatRn,0,modEmail); //!!TRANSLATE
  Report("Счетчик писем",ConfCntRClass,ConfCntRn,0,modEmail);
  Report("История почты",MailReadRClass,MailReadRn,0,modEmail);
  Report("Очередь на отправку",EmailQueListRClass,EmailQueListRn,0,modEmail); 
  Report("Подписи",SignatureRClass,SignatureRn,0,modEmail);
  Report("Пользователи без адреса эл. почты",UserWOEmailAddressRClass,UserWOEmailAddressRn,0,modEmail);
  Report("Доступ к пользовательским конференциям",UserConfAccessRClass,UserConfAccessRn,0,modEmail);


  Document("Почта",MailRClass,MailForm,MailFClass,modEmail);

  Maintenance("Приложения к письмам",Attach2VClass,Attach2Mn,modEmail);
  Maintenance("Изменить формат для почтового ящика по умолч.",ChMaiboxMailFmtVClass,ChMaiboxMailFmtMn,modEmail);
  Maintenance("Изменить имя почтового ящика",ChMaiboxNameVClass,ChMaiboxNameMn,modEmail);
  Maintenance("Очистить регистры почты",CleanMailVClass,CleanMailMn,modEmail);
  Maintenance("Очистить почту без адресата",CleanOrpanedEmailsVClass,CleanOrpanedEmailsMn,modEmail);
  Maintenance("Деактивировать все автоответчики",DeactivateAutoRepliesVClass,DeactivateAutoRepliesMn,modEmail);  
  Maintenance("Очистить очередь эл. почты", DelSentMailVClass,DelSentMailMn,modEmail);         
  Maintenance("Очистить почтовый ящик",MailboxCleanVClass,MailboxCleanMn,modEmail);
  Maintenance("Переместить e-mails",MoveEmailVClass,MoveEmailMn,modEmail);
  Maintenance("Восстановить удаленные письма",RestoreMailVClass,RestoreMailMn,modEmail);
  Maintenance("Отправить и получить почту",SendAndRecVClass,SendAndRecMn,modEmail);
  Maintenance("Обновить почтовый ящик Postmaster",UpdPostmasterVClass,UpdPostmasterMn,modEmail);

/* modEG */
  Register("Шлюзы","Шлюзы",GatewayTClass,modEG);
  RegisterWS("Псевдонимы эл. почты","Псевдонимы эл. почты","New E-mail Alias",EmailAliasVc,modEG); 
  RegisterWS("POP3 Servers","POP3 Servers","New POP3 Server",Pop3ServVc,modEG); 
  Register("SMTP сервер","SMTP сервер",EmailTClass,modEG);
  Register("Очередь электронной почты","Очередь электронной почты",EMailQueVc,modEG);
  Register("Очередь факса","Очередь факса",FaxQueVc,modEG);

  Setting("Настройки почты и конференций",MailSettingsTClass,modEG);

/* modSY - Система */

  Register("Компании","Компании",CompaniesTClass,modSY);
  RegisterWS("Сотрудники","Сотрудники","Mew Person",UserVc,modSY); 
  RegisterWS("Счета","Счета","Новый счёт",AccVc,modSY); 
  RegisterWS("Объекты","Объекты","Новый объект",ObjVc,modSY); 
  RegisterWS("Валюты","Валюты","Новая валюта",CurncyCodeVc,modSY); 
  RegisterWS("Курсы обмена","Курсы обмена","Курс обмена",ERVc,modSY); 
//  if (GuiType!=kGuiiPhone) then begin
    RegisterWS("Формы","Формы","Новая форма",DocVc,modSY); 
//  end;
  RegisterWS("Деятельности","Деятельности","Новая деятельность",ActVc,modSY); 

  Setting("Группы доступа",AccessLClass,modSY);
  Setting("Активные пользователи",ListUsersClass,modSY);
  Setting("Автоматические действия",AutoActionTClass,modSY);
  Setting("Настройки резервного копирования",BackupSettingsTClass,modSY);
  Setting("Праздничные дни",BHollLClass,modSY);
  Setting("Основные валюты",BaseCurTClass,modSY);
  Setting("Курсы основных валют",BaseERLClass,modSY);
  if (HasLocalization("BRA")) then begin
    Setting("Brazilian Invoice Types",BrazilEInvTypeLClass,modSY);
  end;
  if (HasLocalization("EST,LVA")) then begin
  	Setting("Контроль доступа к интернет сервисам",ISAccessTClass,modSY);
  end;
  Setting("Интернет сервисы",EnabServerTClass,modSY);
  Setting("Настройки облачных сервисов",EInvoiceTClass,modSY); 
  Setting("Компания - Формат даты и чисел",SysFormatTClass,modSY);
  Setting("Информация о компании",CYWClass,modSY);
  Setting("Часовой пояс компании",CompanyTimezoneTClass,modSY);         
  Setting("Конфигурация",ModulesTClass,modSY);
//  Setting("Configurations (NEW)",CUServiceEnabLClass,modSY);
//  Setting("Conversions - Accounts and #VAT# Codes",ConvAccVATCodeTClass,modSY);
  Setting("Конвертация - счета и коды НДС",ConvAccTClass,modSY);
  Setting("Конвертация - виды деятельности",ConvActTypeTClass,modSY);
  Setting("Конвертация - классификации контактов",ConvCustClassTClass,modSY);
  Setting("Конвертация - контакты",ConvCustTClass,modSY);
  Setting("Конвертация - коды валют",ConvCurncyCodeTClass,modSY);
  Setting("Конвертация - товары",ConvItemTClass,modSY);
  Setting("Конвертация - склады",ConvLocationTClass,modSY);
  Setting("Конвертация - выполнение",ConvMasterTClass,modSY);
  Setting("Конвертация - объекты",ConvObjTClass,modSY);
  Setting("Конвертация - Классы коммерческих предложений",ConvQuoteClassTClass,modSY);
  Setting("Конвертация - поставщики",ConvVendTClass,modSY);
  Setting("Конвертация - пользователи",ConvUserTClass,modSY);
  Setting("Страны",CountryLClass,modSY);
  Setting("Регионы стран",CountryRegionLClass,modSY);
  Setting("Округление валют",CurncyRoundOffTClass,modSY);
  Setting("Названия дней недели и месяцев",DNMLClass,modSY);
  Setting("Десятичные значения по умолчанию (старое)",DefValDecimalsTClass,modSY);
  Setting("Отделы",DepLClass,modSY);
  Setting("Настройки скидок",GeneralOptionTClass,modSY);
  Setting("Группы отображения",CalDispGroupTClass,modSY);
  if (HasLocalization("BRA,ITA")) then begin
    Setting("Districts",DistrictLClass,modSY);
  end;
  if (HasLocalization("BRA")) then begin  
    Setting("Federal Services",FederalSerLClass,modSY);
  end;
  if (HasLocalization("EST")) then begin         
    Setting("Интервал запросов для электронных счетов-фактур",EInvQueryIntrvlTClass,modSY);
  end;
  Setting("Настройки курсов обмена",ERTClass,modSY);
  Setting("Настройки формы",FormTClass,modSY);
  Setting("Глобальные предупреждения на не утвержд. записях",UnOkWarnTClass,modSY);
  Setting("Интернет ключи",InternetEnablerTClass,modSY);
  if (!WindowsMode) then begin
  Setting("Статус задачи",JobStatusClass,modSY);
  end;
  Setting("Журналирование",JournalClass,modSY);
  Setting("КПЭ - Ключевые Показатели Эффективности",KPIDefLClass,modSY);
  Setting("Языки",LangTClass,modSY); 
  Setting("Закрытие периодов",DBLockTClass,modSY);
  Setting("Исключения по закрытию периодов",LockExceptTClass,modSY);         
  if (HasLocalization("SVN")) then begin
    Setting("Главная предпосылка",CYAWClass,modSY);  
  end;
  if (HasLocalization("BRA")) then begin
    Setting("Municipalities",MunicipalityLClass,modSY);
  end;
  Setting("Серии номеров по умолчанию",SRTClass,modSY);
  Setting("Иcтория открытых окон",OpenWindowsHistoryOClass,modSY);
  if (HasLocalization("BRA")) then begin
    Setting("Operation Types",OperationTypeLClass,modSY);
  end;
  Setting("Дополнительные функции",UXFTClass,modSY);
  Setting("Настройки страницы",PageSetupTClass,modSY);
  Setting("Настройки пароля",PasswdSetTClass,modSY);
  Setting("Стоимость сотрудников",CostUserLClass,modSY);
  Setting("Настройки принтера",PrinterSettingsWClass,modSY);
  Setting("Принтеры",PrintGroupTClass,modSY);
  if (HasRemoteBackup) then begin
    Setting("Отдаленные резервные копии",RemoteBackupsSClass,modSY);
  end;
  Setting("Отчётные периоды",PeriodTClass,modSY);
  Setting("Округление",RoundTClass,modSY);
  Setting("Группы продажи",SalesGroupLClass,modSY);
  Setting("Простые функции",OneFunctionLClass,modSY);
  Setting("Выходные дни",SpecDayLClass,modSY);
  Setting("Стили",StyleLClass,modSY);
  Setting("Контроль счетов подсистем",SLAccTClass,modSY);
  Setting("Доступ к планировщику задач",TodoAccessLClass,modSY);
  Setting("Предупреждения пользов. на не утвержд. записях",UserUnOkWarnLClass,modSY);
  Setting("Значения прописью",LangNrLClass,modSY);
  Setting("Шаблон ИНН",VATMaskTClass,modSY);
  Setting("Недели",WeekLClass,modSY);
//  Setting("Communicate With " & ProductName,HWCommTClass,modSY);
//  Setting("Conversions - Conference Addresses",ConvConfAddrTClass,modSY); no code using it
//  Setting("System Usage",ModulesTClass,modSY); // Is no more... Look at the Configuration Window. Tell this to EVERYONE!!!
  if (HasLocalization("HRV,SVN,SRB")) then begin
    Setting("XML Schema Definitions",XMLExportLClass,modSY);
  end;
  //Setting("ZIP Codes",ZIPLClass,modSY);

//  Setting("Панель инструментов",DashboardWClass,modSY);

  Report("Контроль доступа",UserAccessRClass,UserAccessRn,0,modSY);
  Report("Деятельность, сотрудники",ActPersRClass,ActPersRn,0,modSY);
  Report("Информация о компании",CompInfoRClass,CompInfoRn,0,modSY);
  Report("Статус настройки электронных сч/ф",EInvSetupStatusRClass,EInvSetupStatusRn,0,modSY); 
  Report("Курсы обмена валют",ERDateRClass,ERDateRn,0,modSY);
  Report("Статус задачи",JobStatusRClass,JobStatusRn,0,modSY);
  Report("Номера по машинам",NrsperMachineRClass,NrsperMachineRn,0,modSY);
  Report("Список сотрудников",UserRClass,UserRn,0,modSY);
  Report("Тест сервисов",ServicesTestRClass,ServicesTestRn,0,modSY);
  Report("Проверка подсистем",Check1TRRClass,Check1TRRn,0,modSY);
  Report("Проверка синх.",SyncCheckRClass,SyncCheckRn,0,modSY);
  Report("Статус синх.",SyncStatusRClass,SyncStatusRn,0,modSY);
  Report("Статус синх. клиента",SyncClientStatusRClass,SyncClientStatusRn,0,modSY);
  Report("Системная документация",SysRClass,SysRn,0,modSY);
  Report("Проверка записей операций",Check2TRRClass,Check2TRRn,0,modSY);
  Report("Деятельности сотрудников",UserActRClass,UserActRn,0,modSY);
  Report("История подключений пользователей",UserHistRClass,UserHistRn,0,modSY);
//  Report("Mail List",MailListRClass,MailListRn,0,modSY);
/* Why?? it is the Object Result report, why should it be in System ?? */
//  Report("Список объектов",ObjResRClass,ObjResRn,0,modSY);
/* Doesn't do much */
//  Report("Settingscontrol",SettingsRClass,SettingsRn,0,modSY);
 
  Document("Почта",MailRClass,MailForm,MailFClass,modSY);

  Export("Текстовая копия клиента",TBEClass,ClientTBEn,modSY);
  Export("Текстовая копия компании",TBCompanyEClass,CompanyTBEn,modSY);
  Export("Текстовая копия базы данных",TBDatabaseEClass,DatabaseTBEn,modSY);
  Export("Database Text Backup Without Data Warehouse",TBDatabaseEClass,DatabaseTBNoDWHEn,modSY); //!!TRANSLATE
  Export("Только данные",TBRawDataEClass,RawDataEn,modSY);
  Export("Запустить запланированное сохранение данных",TBRunTimedEClass,RunTimedTBEn,modSY);

  Import("Автоматический",FullyAutIn,FullyAutIn,modSY);// if we put it like that we will be able to make access systme working
  Import("Ручной поиск файлов",AutIn,AutIn,modSY);// if we put it like that we will be able to make access systme working

  Maintenance("Создать записи операций",TransGenVClass,GenTransMn,modSY);
  Maintenance("Удалить старые записи",DelTransVClass,DelTransMn,modSY);
  if (HasLocalization("HRV")) then begin
    Maintenance("Invoices without Official No.",XMLExportVClass,XMLExportMn,modSY);
  end;
  
  /* modTC */

  Register("Режим работы программы","Режим",ProgramStatusTClass,modTC);
  RegisterWS("Глобальные пользователи","Глобальные пользователи","Новый глобальный пользователь",GlobalUserVc,modTC); 
  RegisterWS("События ODBC","События ODBC","Новое событие ODBC",ODBCEventVc,modTC); 
  Register("Firewall","Firewall",FirewallTClass,modTC);
  RegisterWS("Презентации","Презентации","Новая презентация",ConfPresVc,modTC); 
  RegisterWS("Signatures","Signatures","New Signature",ConfSignVc,modTC); 
  Register("Очередь электронной почты","Очередь электронной почты",EMailQueVc,modTC);
  Register("Очередь факса","Очередь факса",FaxQueVc,modTC);

  Setting("Оповещения",AlarmLClass,modTC);
  Setting("Архивы",ArchiveLClass,modTC);
  Setting("Доступная версия клиента",AvailableClientTClass,modTC);
  Setting("Биометрические подписи",BiometricSignLClass,modTC);
//  Setting("Client Certificates",ClientCertificateLClass,modTC); //  Not used anymore.
  Setting("Интеграция клиента",ClientIntegrationClass,modTC); 
  Setting("Контактные лица (старый регистр)",ContactLClass,modTC);
  Setting("Ограничения CRM",CRMLimitsTClass,modTC);
  Setting("Логи базы данных",DBLogTClass,modTC);
  Setting("Статус базы данных",DBERecordsTClass,modTC);
  Setting("Escape-последовательности",EscSeqLClass,modTC);
  Setting("Настройки факсового аппарата",FaxSettingsTClass,modTC);
  Setting("Настройки Поля",EditFieldsAccessLClass,modTC);  
  Setting("Глобальные настройки CRM",GlobalCRMTClass,modTC);
  Setting("Гости (старый регистр)",ProfileLClass,modTC);
  Setting("HAL правила",HALRulesLClass,modTC);
  Setting("Внутренние системные оповещения",BASysIntTClass,modTC); 
  Setting("Кнопки товаров по машинам",LocalMachineIBLClass,modTC);
  Setting("Этикетки закладок товаров по машинам",LocalMachineITLLClass,modTC);
//  Setting("Local Machines Fiscal Printer Options",LocalMachineFPLClass,modTC); //where is it ? 
  Setting("Ограниченный доступ",LimitedAccessTClass,modTC);
  Setting("Локальные машины",LocalMachineLClass,modTC);
  Setting("Устройста, подкл. по последовательным портам к лок. машине",SerialPortDeviceLClass,modTC);
  Setting("Настройки локальной машины",LocalMachineSetLClass,modTC);
  Setting("Контроль изменения регистров",RHistSetTClass,modTC);
  Setting("Login Actions",LoginActionLClass,modTC);
  Setting("Ярлыки входа в систему",LocalMachineLoginLClass,modTC);
  Setting("Macro",MacroWClass,modTC);
  Setting("Почтовые ящики",ConferenceWClass,modTC);
  Setting("Мобильные устройства",MobileDeviceLClass,modTC);
  Setting("MS Exchange",MSExchangeTClass,modTC);
  Setting("Мой IP-адрес",MyIPAddrTClass,modTC);
  Setting("Ссылки",NavLinkLClass,modTC);
  Setting("ODBC связи",ODBCLinkTClass,modTC);
  Setting("Открыть TCP/IP", OpenTCPIPTClass,modTC);
  Setting("Сервер паролей",PwdServerTClass,modTC);
  Setting("Poll Registers With Sync",PollRegWithSyncLClass,modTC);
  Setting("Position Alerts",PositionAlertLClass,modTC);
  Setting("Публичные IP адреса",PublicIPTClass,modTC);
  Setting("Тексты для фискальных принтеров по машинам",MachineCashLClass,modTC);
  Setting("Регистрация Режим поиска",RegSearchTClass,modTC);  
  Setting("Регистры реляционной БД", RDBRegsTClass,modTC);
  Setting("Настройки реляционной БД", RDBTClass,modTC);
  Setting("Настройки отчета", RcLClass,modTC);
  Setting("Secondary Servers",SatServersClass,modTC);
  Setting("Последовательный принтер",LocalMachineSPLClass,modTC);
  Setting("Кэш сервисов",ServiceCacheLClass,modTC);
  Setting("Блоки с разделяемым доступом",ShareBlockSetTClass,modTC);
  Setting("Регистры с разделяемым доступом",ShareVcSetTClass,modTC);
  Setting("SIP Серверы (старые, не использ.)",SIPServerTClass,modTC);
  Setting("Категории поставщиков (Старый регистр)",VGLClass,modTC);
  Setting("Поставщики (Старый регистр)",VELClass,modTC);
  Setting("Настройки синхронизации",SyncOptionTClass,modTC);
  Setting("Cинхронизировть серии номеров",SynkAutoSerLClass,modTC);  
  Setting("Synchronised Number Series (global registers)",SynkGlobalAutoSerLClass,modTC);  
  Setting("Sync. Allocated Serial Numbers",SynkDBIDTakenSerLClass,modTC);  
  Setting("Sync. Registered Database ID",SynkDBIDRegLClass,modTC);  
  Setting("Sync. Allocated Serial Numbers (global registers)",SynkGlobalDBIDTakenSerLClass,modTC);  
  Setting("Sync. Registered Database ID (global registers)",SynkGlobalDBIDRegLClass,modTC);  
  Setting("Системные журналы",SysLogTClass,modTC);
  Setting("TAPI Gateway",TAPIGWTClass,modTC);
  Setting("Регулярные операции",BackupTClass,modTC);
  Setting("Timed Imports",TimedImportLClass,modTC);  
  Setting("Timed Maintenances",TimedMaintLClass,modTC);  
  Setting("Настройки Веб Клиента",WebClientSettingsTClass,modTC);  
  Setting("Веб-ссылки",WebNavLinkLClass,modTC);
  Setting("Веб-запросы",WebRequestsTClass,modTC); 
  
//  Setting("User Feature Pref.",UserFeaturePrefTClass,modTC);
//  Setting("Features",FeaturesWClass,modTC);
  
  
//  Setting("Company Signature",CompSignTClass,modTC);
//  Setting("Calendar",CalWClass,modTC);
//  Setting("Загрузить файлы",FileTransferTClass,modTC);

// I guess these things should be available in the Database Maintenance module
//  Setting("INSeres",INSerLClass,modTC);
//  Setting("INrs",INrsLClass,modTC);
//  Setting("PErsVc",PErsLClass,modTC);
//  Setting("MainAcc",MainAccrualLClass,modTC);
//  Setting("CUToCUs",CUToCULClass,modTC);

/* Testing */
/*  Report("Bank Connection",BankConnRClass,BankConnRn,0,modTC);*/
  Report("Access Check",AccessCheckRClass,AccessCheckRn,0,modTC); //!!TRANSLATE
  Report("Активные чаты",ChatRClass,ChatRn,0,modTC);
  Report("Приложения к письмам",Attach2RClass,Attach2Rn,0,modTC);
  Report("Проблемы присоединенных файлов",AttachInfoRClass,AttachInfoRn,0,modTC);
  Report("Информация о компании",CompInfoRClass,CompInfoRn,0,modTC);
  Report("Код",CodeRClass,CodeRn,0,modTC);
  Report("Конвертирование поставщиков в контакты",ConvertVERClass,ConvertVERn,0,modTC);
  Report("Лог базы данных",DBLogRClass,DBLogRn,0,modTC);
  Report("Формат экспорта/импорта",ExpImpRClass,ExpImpRn,0,modTC);
  Report("Files In Container",FilesInContainerRClass,FilesInContainerRn,0,modTC);
//  Report("HAL Profile",HALProfileRClass,HALProfileRn,0,modTC);//HAL_PROFILE is not defined
  Report("Список неактивных задач",IdleTaskListRClass,IdleTaskListRn,0,modTC);
  Report("Проверка hansa.log",InspectHansaLogRClass,InspectLocalLogRn,0,modTC);
  Report("Проверка связей для HAL",HALLinkCheckRClass,HALLinkCheckRn,0,modTC);
  Report("Список ссылок",LinkListRClass,LinkListRn,0,modTC);
//  Report("Связанные файлы",LinkedFilesRClass,LinkedFilesRn,0,modTC);
//  if (DeveloperMode) then begin
    Report("Окна",WindowsRClass,WindowsRn,0,modTC);
//  end;
  Report("Список отложенных сообщений",SlowConPerRClass,SlowConPerRn,0,modTC);
  Report("Группа доступа",PersAccRClass,PersAccRn,0,modTC);
  Report("Счетчик записей",RecCntRClass,RecCntRn,0,modTC);
  Report("Связи записей",RLinkRClass,RLinkRn,0,modTC);
  Report("Статус отчета",StatusRClass,StatusRn,0,modTC);
//  Report("Server Log",ServerLogRClass,ServerLogRn,0,modTC);
  Report("Список настроек",SettingsListRClass,SettingsListRn,0,modTC);
  Report("Порядок сортировки",SortOrderRClass,SortOrderRn,0,modTC);
  Report("Источники",HALSourceRClass,HALSourceRn,0,modTC);
  Report("Записи с отмененным ОК",UnOKedRClass,UnOKedRn,0,modTC);
//  Report("Файлы для удаления",CleanupFileRClass,CleanupFileRn,0,modTC);, not existing
//people use this to access windows from modules they haven't bought,
//please cooment this in when u need it only
  /* Doesn't do much */
// no code  Report("Контроль настроек",SettingsRClass,SettingsRn,0,modTC);
  Report("История записи пользователя",UserRecordHistRClass,UserRecordHistRn,0,modTC);         

  if (DeveloperMode) then begin
    Export("Изменить даты в демонстрационной базе данных",IntChangeDatesEClass,IntChangeDatesTBEn,modTC); 
  end;
  Export("История изменения регистров",RHistEClass,RHistEn,modTC);

  Maintenance("Присоединить картинки к товарам",INAttachPictFileVClass,INAttachPictFileMn,modTC);
  Maintenance("Приложения к письмам",Attach2VClass,Attach2Mn,modTC);
  Maintenance("Изменить тип задач для деятельностей-подтверждений",AprvlActTaskTypeVClass,AprvlActTaskTypeMn,modTC); 
  Maintenance("Конвертировать контактные лица в контакты",ContactToCuVClass,ContactToCuMn,modTC);
  Maintenance("Конвертировать гостей в контакты",GuestToCuVClass,GuestToCuMn,modTC);
  Maintenance("Конвертировать поставщиков в контакты",ConvertVEVClass,ConvertVEMn,modTC);
  Maintenance("Создать ODBC записи",GenODBCVClass,GenODBCMn,modTC);
  Maintenance("Delete Synchronisation History",DelSynchHistVClass,DelSynchHistMn,modTC);  
  Maintenance("Заполн. пустой Склад в ист. товаро и ",FixEmptyLocVClass,FixEmptyLocMn,modTC);
  Maintenance("Подготовить настройки конвертации поставщиков",PrepConvertVEVClass,PrepConvertVEMn,modTC);
  Maintenance("Перекомпилировать HAL-файлы",RecompileHALVClass,RecompileHALMn,modTC);
  Maintenance("Перестроить склад",RebuildStockVClass,RebuildStockMn,modTC);
  Maintenance("Пересчитать статус товара",RecalcItemStatusVClass,RecalcItemStatusMn,modTC);
//  Maintenance("Пересчитать склад",RecalcStockVClass,RecalcStockMn,modTC);//only for special consultants
  Maintenance("Послать SMS-обновление",MobileDeviceVClass,SendUpdateSMSMn,modTC);
  Maintenance("Закрыть карточки сотрудников",CloseUserVClass,CloseUserMn,modTC);
  Maintenance("Системное сообщение",SysMessVClass,SysMessMn,modTC);
  Maintenance("Прекратить разделение регистров",UnshareRegsVClass,UnshareRegsMn,modTC);
  Maintenance("Обновить сч/ф",FixIVBaseSumVClass,FixIVBaseSumMn,modTC);
  Maintenance("Обновить номера факсов",FixFaxNoMClass,FixFaxNoMn,modTC);
  Maintenance("Обновить склад для нескладских товаров",RebuildStockPlainVClass,RebuildStockPlainMn,modTC);

//  Maintenance("Change Varieties",VarChangeVClass,VarChangeMn,modTC); // Not really ready yet.
//  Maintenance("Отправить файл",FtpSendVClass,FtpSendMn,modTC);

/* modDBMain */
/* This module doesn't have to be translated, if you don't want to. */
/* It is for all the functions that help consultants to find logical errors in the database */
/* All functions that could be nice to have but shouldn't be shown to, or used by, the customers, should go here */
/* This module can be activated by placing a file called "DBMAINT" in the CLIENT folder */
/* Feel free to suggest moving things here that really doesn't belong where it is now. */
  Register("Очистка данных","Очистка данных",RegArchiveVc,modDBMain);
  Register("Присоед. файлы","Присоед. файлы",Attach2Vc,modDBMain);
  Register("Записки","Записки",NotepadVc,modDBMain);
  Register("SMS","SMS",SMSVc,modDBMain);

// Norway, you can put this to modSL or something, to have easier access

  Report("Деятельности в других компаниях",ActUserCompRClass,ActUserCompRn,0,modDBMain);
  Report("Проверка видов деятельностей",ActTypeCheckRClass,ActTypeCheckRn,0,modDBMain);
  Report("История сообщений",ChatHistoryRClass,ChatHistoryRn,0,modDBMain);
  Report("История сообщений - глобально",GlobalChatHistoryRClass,GlobalChatHistoryRn,0,modDBMain);         
  Report("Закрыть товары",CloseINRClass,CloseINRn,0,modDBMain);
  Report("Delay Debug Report",DelayRClass,DelayRn,0,modDBMain);
  Report("Отсутсвующие присоединенные записи",LinkedRecsRClass,LinkedRecsRn,0,modDBMain);
  Report("Отсутствующие записи связанных регистров",ConectedRecsRClass,ConectedRecsRn,0,modDBMain);
  Report("Проверка целостности счетов",ORIntCheckRClass,ORIntCheckRn,0,modDBMain);
// Norway, you can put this to modSL or something, to have easier access
  Report("Проверка сч/ф со старыми кодами НДС",OldVATCodeTestRClass,OldVATCodeTestRn,0,modDBMain);
  Report("История звонков Skype",SkypeCallHistoryRClass,SkypeCallHistoryRn,0,modDBMain); 
  Report("Учёт Skype-сообщений",SkypeMessageCountRClass,SkypeMessageCountRn,0,modDBMain); 
  Report("Лог пользователей",UserLogRClass,UserLogRn,0,modDBMain);

//  Import("Sonic Q",SonicQIn,SonicQIn,modDBMain);

  Export("Тестовая копия компаний",TBE2Class,CompanyTBEn,modDBMain);
  Export(ProductName & " Файлы",HWFilesClass,HWFilesEn,modDBMain);
  Export("Специальная текстовая копия компании",TBE3Class,SpecCompTBEn,modDBMain);
  Export("Экспорт регистров",ExpRegEClass,ExpRegEn,modDBMain);

  Setting("Начисления по контрактам",RentChrgLClass,modDBMain);  
  Setting("История активов",InvrsLClass,modDBMain); 
  if (true) then begin//DeveloperMode
  Setting("Aut. Sales Actions",AutSalesActionLClass,modDBMain);//temporary //!!TRANSLATE
  end;
  Setting("Имена контактов в чате ",ChatNameContactLClass,modDBMain);
  Setting("Описание очистки данных",RegArchiveDetailLClass,modDBMain);
  Setting("Нехватка товара",DfncyStockLClass,modDBMain);
  Setting("Избранные типы дейятельностей",FavActTypeLClass,modDBMain);
  Setting("Определения форм",FormDefLClass,modDBMain);
  Setting("#Instalments# AP",APInstallLClass,modDBMain);  
  Setting("Взносы",ARInstallLClass,modDBMain);
  Setting("История взносов",ARInstallHistLClass,modDBMain);
  Setting("Вспомогательный регистр История товаров",ItemHistLClass,modDBMain);
  Setting("Статистика продажи товаров",STLClass,modDBMain);
  Setting("Вспомогательный регистр Статус товаров",ItemStatusLClass,modDBMain);
  Setting("Регистр поддержки статуса внутерннего склада",IntISLClass,modDBMain);  
  Setting("Вспомогательный регистр Статус товаров на местах",PISLClass,modDBMain);
  Setting("Описание обязанностей (old)",JobDescTClass,modDBMain);
  Setting("Локальные сообщения",SMSLocLClass,modDBMain);
  Setting("Нумерация официальных документов",OffSerNrLClass,modDBMain); 
  Setting("Обновления журнала статуса товаров",TestItemStatusTClass,modDBMain);
  Setting("История накопительных баллов",PointsHistLClass,modDBMain);
  Setting("Фильтр сообщений",SMSFilterLClass,modDBMain);
  Setting("История платежа",OPrsLClass,modDBMain);
  Setting("Журнал POS",POSJournalLClass,modDBMain);  
  Setting("История снятия кассы",CashupHistLClass,modDBMain);  
  Setting("Предоплаты AP",APPayHistLClass,modDBMain);
  Setting("Предоплаты AR",ARPayHistLClass,modDBMain);
  Setting("Открытые предоплаты AR",ARPayLClass,modDBMain);  
  Setting("Ценовая вариация",VarianceStatusLClass,modDBMain);         
  Setting("Наименование продукта",ProductNameTClass,modDBMain);
  Setting("История плат. кл.",IPrsLClass,modDBMain);
  Setting("Ссылки записей",RLinkLClass,modDBMain);
  Setting("Регистр поддержки истории мероприятий курорта",RsrtEventHistLClass,modDBMain);
  Setting("Последовательность номеров",SeqNrTClass,modDBMain);
  Setting("Вспомогательный регистр Серийные номера",SerBalLClass,modDBMain);
  Setting("Прогресс Skype-импорта",MsgImportProgressLClass,modDBMain);  
  Setting("История статусов - Чеки",CheckHistLClass,modDBMain);
  Setting("История статусов - Собственные чеки",OwnCheckHistLClass,modDBMain);
  Setting("Удержания поставщиков",VEPRRetentionLClass,modDBMain);
  if (HasLocalization("PRT")) then begin
    Setting("Tax Authorities Replies for e-Deliveries",eShipTaxAuthReplyLClass,modDBMain);
  end;
  Setting("Временный склад",TempStockLClass,modDBMain);
  Setting("Опред. пользователем",RepDefTClass,modDBMain);
  Setting("Отчёты опред. пользователем",UserDefRepLClass,modDBMain);
  Setting("Колонки опред. пользователем",UserDefRepColumnsLClass,modDBMain);
  Setting("Линии опред. пользователем",UserDefRepLinesLClass,modDBMain);
  Setting("История UUID",UUIDHistoryLClass,modDBMain);
  Setting("Старые коды НДС",OldVATCodeTClass,modDBMain);
  Setting("XS",XSLClass,modDBMain);
  Setting("XSrs",XSrsLClass,modDBMain);
  Setting("PurgeTR",PurgeTRLClass,modDBMain);

  Maintenance("Добавить продавца",AddSalesManVClass,AddSalesManMn,modDBMain);
//  Maintenance("Проверить поврежденную БД",FixDBVClass,FixDBMn,modDBMain);// no code
//  Maintenance("Проверить БД",CheckDBVClass,CheckDBMn,modDBMain);// no code
  Maintenance("Очистить и повторно синхр. регистр",ClearAndResetSyncVClass,ClearAndResetSyncMn,modDBMain);
  Maintenance("Очистить пустые ссылки (RLink)",ClearRLinkVClass,ClearRLinkMn,modDBMain);
  Maintenance("Закрыть товары",CloseINVClass,CloseINMn,modDBMain);
  if (HasLocalization("EST")) then begin         
    Maintenance("Конвертация банковских счетов (IBAN)",ConverttoIBANVClass,ConverttoIBANMn,modDBMain);         
  end;
  Maintenance("Исправить присоединенные имена файлов",Attach2FixUUIDFileVClass,Attach2FixUUIDFileMn,modDBMain);
  Maintenance("Исправления в корзине покупок",CorrectJobInfVClass,CorrectJobInfMn,modDBMain);
  Maintenance("Создать автообновление клиентов",MakeAutoClientsVClass,MakeAutoClientsMn,modDBMain);
  Maintenance("Создать контракты",CreateCOVClass,CreateCOMn,modDBMain);
  Maintenance("Create Instalments History",CreateInstlHistVClass,CreateInstlHistMn,modDBMain);
  Maintenance("Создать случайные счета ресторана",CreateRandomRestAccVClass,CreateRandomRestAccMn,modDBMain);
  Maintenance("Создать случайных клиентов",CreateRandomCustomersVClass,CreateRandomCustomersMn,modDBMain);
  Maintenance("Создать случайные сч/ф",CreateRandomInvoicesVClass,CreateRandomInvoicesMn,modDBMain);
  Maintenance("Создать случайные товары",CreateRandomItemsVClass,CreateRandomItemsMn,modDBMain);
  Maintenance("Создать случайные заказы",CreateRandomOrdersVClass,CreateRandomOrdersMn,modDBMain);
  Maintenance("Создать случайные сч/ф кассового терминала",CreateRandomIVCashVClass,CreateRandomIVCashMn,modDBMain);
  Maintenance("Очистка данных",RegArchiveVClass,RegArchiveMn,modDBMain);
  Maintenance("Удаление записей операций активов",DelATTransVClass,DelATTransMn,modDBMain);
  Maintenance("Удаление присоединенных файлов",ClearAttachVClass,ClearAttachMn,modDBMain);
  Maintenance("Заполнить данные Группы Продаж",PutSalesGroupVClass,PutSalesGroupMn,modDBMain);
//  Maintenance("Создать случайные сч/ф клиентам (для тест.)",InvGenVClass,InvGenMn,modDBMain);
  Maintenance("Создать случайные записи операций (для тест.)",RandomTransVClass,RandomTransMn,modDBMain);
  Maintenance("Создать случайные счета клиентам (для тест.)",RandomORVClass,RandomORMn,modDBMain);
  Maintenance("Перенос между компаниями",MoveRecordsVcVClass,MoveRecordsVcMn,modDBMain);
  Maintenance("Утвердить операции по складу",OKStockVClass,OKStockMn,modDBMain);
/* This should maybe not be shown to customers, it is used to fix a bug */
/* ins Time Billing when you update from version 3.1 to 3.2 or 3.3 */
/* There is a HAL report available to see what will happend */
/* You can have it in, since it helps a few customers (one Swedish customer asked for it */
  Maintenance("Перестроить операции по проекту",RebPTVClass,RebPTMn,modDBMain);
/* This is NOT the same routine as the previous line, this is built to restore */
/* more than the #Time Sheets#. It is recreating the Proj.Trans. that is missing */
/* in the report "Check Project Transactions". */
  Maintenance("Восстановить операции по проекту",ChPrTransVClass,ChPrTransMn,modDBMain);
  Maintenance("Перенумеровать системные записи",RenoSysRecVClass,RenoSysRecMn,modDBMain);
//  Maintenance("Перестроить системные регистры",RebuildSupVClass,RebuildSupMn,modDBMain);
  Maintenance("Обновить счет-фактуры",FixIVBaseSumVClass,FixIVBaseSumMn,modDBMain);
  Maintenance("Обновить курс основной валюты в записях операций",UpdTransBRateVClass,UpdTransBRateMn,modDBMain);

  /* modUserSet */

  /* this module is for settings an ordinary user should be allowed to do that would */
  /* otherwise fit in the system module */

  RegisterWS("Кнопки товаров","Кнопки товаров","Новые кнопки товаров",ItemButtonsTClass,modUserSet); 
  RegisterWS("Настройки статуса товара","Настройки статуса товара","Новая настройка статуса товара",ItemStatUserVc,modUserSet); 
  Register("Метки закладок товаров","Метки закладок товаров",ItemTileLabelTClass,modUserSet);
  Register("Кнопки входа в систему","Кнопки входа",LocalLoginTClass,modUserSet);
  RegisterWS("Группы товаров (ресторан)","Группы товаров (ресторан)","Новая группа товаров (ресторан)",RestITVc,modUserSet); 

  Setting("Bluetooth Devices",SelectBluetoothDeviceOClass,modUserSet); //!!TRANSLATE
  Setting("Клиент - Формат даты и чисел",ClientFormatTClass,modUserSet);
  Setting("Язык клиента",UserLanguageTClass,modUserSet); 
  Setting("Отчёты фискального принтера",FM3000CommandsClass,modUserSet);
//  Setting("Локальные товары",LocalINLClass,modUserSet);
//  Setting("Группы локальных товаров",LocalITLClass,modUserSet);
  Setting("Настройки локальной машины",LocalMachineTClass,modUserSet);
  Setting("Локальные дополнительные функции",LocalOptionalFeaturesTClass,modUserSet);         
  
  Setting("Способы оплаты локальной машины",RestPMTClass,modUserSet);
  Setting("Настройки входа",LocalLoginOptionsTClass,modUserSet);
//  Setting("Local Prices",LocalPLLClass,modUserSet);
  Setting("Локал. устр-ва, подключаем. к последов. порту",LSerialPortDeviceLClass,modUserSet);
  Setting("Матричный принтер",PCPrintTClass,modUserSet);
  Setting("Последовательный принтер",SerPrintTClass,modUserSet);
  Setting("Звук Телефонии",TelephonyRingtoneTClass,modUserSet); 
  Setting("Названия полей задан. пользов. - лок. машина",LocalMachineLBlockTClass,modUserSet);
  Setting("Предупеждения на не утвежд. записях",UserUnOkWarnWClass,modUserSet);
  Setting("Веб клиент",WebClientTClass,modUserSet);

  Report("Журнал подключений",ConnectionLogRClass,ConnectionLogRn,0,modUserSet);
  Report("Латентность",LatencyRClass,LatencyRn,0,modUserSet);
  Report("Статус отчета",MyStatusRClass,StatusRn,0,modUserSet);
  
//  Report("Skype Import Status",SkypeImportStatusRClass,SkypeImportStatusRn,0,modUserSet);

/* modWebShop */

  Register("Корзины заказов","Корзины заказов",ShopBaskVc,modWebShop);
  RegisterWS("Классификация товаров","Классификация товаров","Новая классификация товаров",DIVc,modWebShop); 
  RegisterWS("Дополнения HTML","Дополнения HTML","Новое дополнение HTML",WebHTMLVc,modWebShop); 
  RegisterWS("Web Item Listing","Web Item Listing","New Web Item Listing",WebItemListVc,modWebShop); 
//  Register("Mail","Mail",MailVc,modWebShop);
  
  Report("Список идентификаторов",MailIdentRClass,MailIdentRn,0,modWebShop);

  Setting("Доступ к функциям через веб",FunctionsOnWebTClass,modWebShop);
  Setting("Каналы платежей",CCAccountIDLClass,modWebShop);
  Setting("Псевдонимы конференций",ConfAliasLClass,modWebShop);
  Setting("Номера платежей кредитными картами",ORSerNrTClass,modWebShop);
  Setting("Виды кредитных карт",CredCardTypeLClass,modWebShop);
  Setting("Способы платежей по умолчанию",DefCashTClass,modWebShop);
  Setting("Фреймы",WebFramesTClass,modWebShop);
  Setting("Фреймсет",WebFrameSetTClass,modWebShop);
  Setting("Internet Service Tariffs",ISPackageLClass,modWebShop);
  Setting("Торговый ID",CCMerchantIDLClass,modWebShop);
  Setting("Objects for CC Invoices",WebShopSettingTClass,modWebShop);
  Setting("Parameter Conversion",WebParamConvLClass,modWebShop);
  Setting("Веб-сообщения",WebNewAdvertLClass,modWebShop);
  Setting("Настройки веб-сообщений",WebAdvertTClass,modWebShop);
  Setting("Веб-контент",WebContentsTClass,modWebShop);
  Setting("Веб-фрахт",WebFreightLClass,modWebShop);
  Setting("Веб-дескрипторы",WebKeywordsTClass,modWebShop);
  Setting("Списки веб-ссылок",WebLinkListsLClass,modWebShop);
  Setting("Веб-ссылки",WebLinkLClass,modWebShop);
  Setting("Веб-меню",WebMenuLClass,modWebShop);
  Setting("Веб-страницы",WebPagesLClass,modWebShop);
  Setting("Отчёт о веб-заказах",WebOrdRepTClass,modWebShop);
  Setting("Настройки веб",WebControlTClass,modWebShop);
//  Setting("Web Shop Mail",WebRegMailTClass,modWebShop);
  Setting("Веб-сайты",WebSitesTClass,modWebShop);
  Setting("Веб-субкоды",WebSubLClass,modWebShop);
  Setting("Веб-тексты",WebTextLClass,modWebShop);
/*  
  Setting("Таблица записки к товару",WebItemNoteLClass,modWebShop);
  Setting("Item Notes",WebNoteLClass,modWebShop);  
  Setting("Записки к товару",WebItemPicLClass,modWebShop);
  Setting("Item Pictures",WebPicLClass,modWebShop);  
  Setting("Дерево товаров",WebINTreeLClass,modWebShop);
*/
//  Setting("Контроль корзины покупателя",WebBaskCtrlLClass,modWebShop);
//  Setting("Веб-конференции",WebConferenceTClass,modWebShop);

/* modWebShopNG */

  RegisterWS("Контент","Контент","Новый контент",WebNGContentVc,modWebShopNG); 
  RegisterWS("Переводы","Переводы","Новый перевод",WebNGTranslateVc,modWebShopNG); 
  RegisterWS("Страницы","Страницы","Новая страница",WebNGPageVc,modWebShopNG); 
  RegisterWS("Меню","Меню","Новое меню",WebNGMenuVc,modWebShopNG); 
  RegisterWS("Элементы","Элементы","Новый элемент",WebNGElementVc,modWebShopNG); 
  RegisterWS("Структура","Структура","Новая структура",WebNGStructVc,modWebShopNG); 
  RegisterWS("Продукты","Продукты","Новый продукт",WebNGProductVc,modWebShopNG); 
//  Register("Группы компонентов","Группы компонентов",WebNGComponentVc,modWebShopNG);
  Register("Статистика","Статистика",WebNGStatVc,modWebShopNG);

//  Setting("Компоненты категорий",WebNGComponentCatLClass,modWebShopNG);
//  Setting("Amazon WS Integration",AmazonWSTClass,modWebShopNG);  to be finished in 83
  Setting("Категории содержимого",WebNGContentCatLClass,modWebShopNG);
  Setting("Стили содержимого",WebNGContentStyleLClass,modWebShopNG);
  Setting("Cтраны в Веб",WebNGCountryLClass,modWebShopNG);
  Setting("Регионы стран",WebNGCountryRegionLClass,modWebShopNG);
  Setting("Регистрационные поля клиента",CURegFieldLClass,modWebShopNG);
  Setting("Поля адреса доставки",DelAddrFieldLClass,modWebShopNG);
  Setting("Показывать на Web",WebDisplayLClass,modWebShopNG);
  Setting("Товары - фавориты",WebNGFavItemLClass,modWebShopNG); 
  Setting("Записи на форуме",WebNGForumRecLClass,modWebShopNG); 
  Setting("Настройки форума",WebNGForumTClass,modWebShopNG);
  Setting("Forum Subscriptions",WebNGForumFavoritesLClass,modWebShopNG); //!!TRANSLATE
  Setting("Forum Topics",WebNGForumTopicLClass,modWebShopNG); //!!TRANSLATE
  Setting("Метки записей на форуме",WebNGForumTagsTClass,modWebShopNG); 
  Setting("Настройки Google ReCaptcha",WebNGReCaptchaTClass,modWebShopNG);   
  Setting("Переадресаация хостов",HttpHostRedirectLClass,modWebShopNG);
  Setting("Настройки поиска товаров",WebNGSearchTClass,modWebShopNG);
  Setting("Языки в Веб",WebNGLanguageLClass,modWebShopNG);
  Setting("Сессии подтверждения электронных писем",MailConfirmLClass,modWebShopNG);         
  Setting("Соотношение компаний в БД и стран",WebNGCompCountryLClass,modWebShopNG);
  Setting("Соотношение имен хостов и стран",WebNGHostCountryLClass,modWebShopNG);  
  Setting("Настройки моей регистрации",MyAccountTClass,modWebShopNG);
  Setting("Объекты для сч/фактур на платежи кредитными картами",WebShopSettingTClass,modWebShopNG);
  Setting("Переадресация путей",HttpPathRedirectLClass,modWebShopNG);
  Setting("Сессии платежей",WebNGPaySessionLClass,modWebShopNG);
  Setting("Настройки Paypal",PaypalTClass,modWebShopNG); 
  Setting("Категории веб-продуктов",WebNGProductCatLClass,modWebShopNG);
  Setting("Обзоры продуктов",WebNGProductViewLClass,modWebShopNG); 
  Setting("Настройки для тестирования",WebNGTestTClass,modWebShopNG);
  Setting("Настройки простого веб-сайта",SimpleWebTClass,modWebShopNG); 
  Setting("Веб-cайты",WebNGSiteTClass,modWebShopNG);
  Setting("Настройки университета",WebNGUniversityTClass,modWebShopNG);
  Setting("Способы веб-платежей",WebPayMethodLClass,modWebShopNG); 
  Setting("Почта интернет-магазина",WebRegMailTClass,modWebShopNG);
  Setting("Настройки веб-сервера",WebNGSettingsTClass,modWebShopNG);
  Setting("Веб-тексты",WebTextLClass,modWebShopNG);
  Setting("Корзины интернет-магазина",WebNGShopBasketLClass,modWebShopNG);
  Setting("Настройки компании интернет-магазина",WebNGShopCompTClass,modWebShopNG);
  Setting("Настройки интернет-магазина",WebNGShopTClass,modWebShopNG);

  Maintenance("Создать продукты из товаров",WebNGCreateProductsVClass,CreateWebProductsMn,modWebShopNG);
  Maintenance("Generate Forum Records",GenForumSupportVClass,GenForumSupportMn,modWebShopNG); //!!TRANSLATE
  Maintenance("Generate Forum Subscriptions",GenForumSubscriptionVClass,GenForumSubscriptionMn,modWebShopNG); //!!TRANSLATE

  if (TestEnablerFile("EnMarketplace")) then begin  
  	Report("Версии обновления клиента",CustomerVersionsRClass,CustomerVersionsRn,0,modWebShopNG); 
  end;
  Report("Веб-Статистика",WebStatRClass,WebStatRn,0,modWebShopNG);
  Report("Использованные Веб страницы",UsedWebPageListRClass,UsedWebPageListRn,0,modWebShopNG);  
  Report("информация веб-сайта",WebSiteInfoRClass,WebSiteInfoRn,0,modWebShopNG);  

/* modRepGen */

  RegisterWS("Отчёты","Отчёты","Новый отчёт",RepGenVc,modRepGen); 
  RegisterWS("Формы","Формы","Новая форма",DocVc,modRepGen); 
  RegisterWS("Стили","Стили","Новый стиль",StyleVc,modRepGen); 
//  Register("Sets","Sets",RepSetVc,modRepGen);

  Setting("Отчёты в интерфейсе",UIReportLClass,modRepGen);

/* modEnabReg */ // ONLY FOR INTERNAL USE, NO NEED TO TRANSLATE

  RegisterWS("Customer Configurations","Customer Configurations","New Customer Configuration",CustContModuleLClass,modEnabReg); 
  RegisterWS("Enabler Activations","Enabler Activations","New Enabler Activation",CUCOEnabActVc,modEnabReg); 
  RegisterWS("Enabler Requests","Enabler Requests","New Enabler Request",IntEnabKeyReqVc,modEnabReg); 
  RegisterWS("Customer Exceptions","Customer Exceptions","New Customer Exception",EnabExceptionVc,modEnabReg); 

  Setting("Configuration Package",SystemUsageSettingLClass,modEnabReg);
  Setting("Enabler Setting",ServEnabSettTClass,modEnabReg);
  Setting("Function Usage",FunctionUsageLClass,modEnabReg);
  Setting("HTS Customer Services",HTSCUServiceLClass,modEnabReg); 
  Setting("Key Limits for Existing Customers",KeyAllowExistTClass,modEnabReg);
  Setting("Key Limits for New Customers",KeyAllowNewTClass,modEnabReg);
  Setting("Key Limits for Updating Customers",KeyAllowUpdateTClass,modEnabReg);
  Setting("#Licence# Texts",LicenceTxtLClass,modEnabReg);
  Setting("Package Configuration for Serial Numbers",InternalSerialNrConfigLClass,modEnabReg);
  Setting("Packages for Business Communicator",BPProdPackTClass,modEnabReg);
  Setting("Packages for FirstOffice Small",FOSmallProdPackTClass,modEnabReg);
  Setting("Packages for FirstOffice Start",FOStartProdPackTClass,modEnabReg);
  Setting("Packages for FirstOffice Pro",FOProProdPackTClass,modEnabReg);
  Setting("Packages for SmartApps",SmartAppChargeTClass,modEnabReg);
  Setting("Packages for Products",ProdPackLClass,modEnabReg);
  Setting("Registered Apps",RegisteredAppsLClass,modEnabReg);

  Maintenance("Add Object to Customers",AddObjCUVClass,AddObjCUMn,modEnabReg);
  Maintenance("Create Cust. Configurations",MakeCustUsageVClass,MakeCustUsageMn,modEnabReg);
  Maintenance("Configuration Cleanup",CleanConfigurationVClass,CleanConfigurationMn,modEnabReg);
  Maintenance("Enabler To Classification",EnablerToClassVClass,EnablerToClassMn,modEnabReg);
  Maintenance("Enabler To Classification",EnablerToClassVClass,EnablerToClassMn,modEnabReg); //!!TRANSLATE

  Report("Поиск конфигурации",ConfigSearchRClass,ConfigSearchRn,0,modEnabReg);
  Report("Enabler Activations",EnabActRClass,EnabActRn,0,modEnabReg);
  Report("Статус ключа",EnablerStatusRClass,EnablerStatusRn,0,modEnabReg);
  Report("Статистика ключа",EnabStatRClass,EnabStatRn,0,modEnabReg);
  Report("Отчёт ключей Hansa",KeyCodeRClass,KeyCodeRn,0,modEnabReg); // OLD...I think...
  Report("Статистика интернет ключей",IntEnabStatRClass,IntEnabStatRn,0,modEnabReg);
  Report("Кол-во пользователей и инсталяций",NumberOfUsersRClass,NumberOfUsersRn,0,modEnabReg);
//  Report("Customer Configuration Info",CustConfInfoRClass,CustConfInfoRn,0,modEnabReg); // HAL file not included in hob. Runs only for current company.


/* modOurContracts */ // ONLY FOR INTERNAL USE, NO NEED TO TRANSLATE

/*
  RegisterWS(ProductName & " Contracts",ProductName & " Contracts","New " & ProductName & " Contract",COCUServiceVc,modOurContracts); 
  RegisterWS("Contract Packages","Contract Packages","New Contract Package",CUServiceVc,modOurContracts); 
  RegisterWS("Configuration Package","Configuration Package","New Configuration Package",SystemUsageSettingVc,modOurContracts); 
  RegisterWS("Customer Acounts","Customer Accounts","New Customer Account",CUAccountVc,modOurContracts); 
  RegisterWS("Customer Acount Events","Customer Account Events","New Customer Account Event",CUAccountEventVc,modOurContracts); 
  RegisterWS("Int. Serv. Contracts","Int. Serv. Contracts","New Int. Serv. Contract",TXCUServiceVc,modOurContracts); 
  RegisterWS("Royalty Exceptions","Royalty Exceptions","New Royalty Exception",RoyaltyExceptionVc,modOurContracts); 
  RegisterWS("Royalty Sales","Royalty Sales","New Royalty Sales",RoyaltyRepVc,modOurContracts); 
  Register("Royalty Maintenance","Royalty Maintenance",RoyaltyMaintVc,modOurContracts);  

  Setting("Activation Codes",InternalSerialNrLClass,modOurContracts);
  Setting("Check Key Actions",CheckKeyActionTClass,modOurContracts);
  Setting("Contract Classes",ContractClassTClass,modOurContracts);
  Setting("Contract Defaults",CODefValTClass,modOurContracts);
  Setting("Contract History",CUServiceHistLClass,modOurContracts);
  Setting("Contract Invoicing Companies",COCUInvoiceCompTClass,modOurContracts);
  Setting("Customer Account History",CUAccountHistLClass,modOurContracts); 
  Setting("Customer Account Setting",CUAccountSettTClass,modOurContracts); 
  Setting(ProductName & " Настройка контрактов",COCUServiceTClass,modOurContracts);  
  Setting(ProductName & " Типа классификаций контрактов",HWCOClassTypeLClass,modOurContracts);  
  Setting(ProductName & " Классификации контрактов",HWCOClassLClass,modOurContracts);  
  Setting("Invoice Companies for Cloud Services",TXInvCompTClass,modOurContracts);
  Setting(ProductName & " Группы товаров на контрактах",HWCOItemGroupTClass,modOurContracts); 
  Setting("Серии номеров - " & ProductName & " Contracts",COCUServiceSerTClass,modOurContracts);  
  Setting("Классификация продукта",CCandClassTClass,modOurContracts);
  Setting("Royalty Contact",RoyaltyCustTClass,modOurContracts);
  Setting("Royalty Percentage",RoyaltyPrcTClass,modOurContracts);
  Setting("Services Defaults",TXServiceDefLClass,modOurContracts); 
  Setting("Version Classification",VersionClassTClass,modOurContracts);

  Report("Available Activation Codes",ProdSerNoRClass,ProdSerNoRn,0,modOurContracts);
  Report("Customer Account",CUAccountRClass,CUAccountRn,0,modOurContracts);
  Report("Find " & ProductName & " Contracts",FindBadContractsRClass,FindBadContractsRn,0,modOurContracts);  
  Report("Future Royalty Maintenance Records",RoyaltyRepFutureRClass,RoyaltyRepFutureRn,0,modOurContracts);
  Report(ProductName & " Contract Incorreclty Invoiced",COCUWrongInvdRClass,COCUWrongInvRn,0,modOurContracts);  
  Report(ProductName & " Contract List",COCUServiceRClass,COCUServiceRn,0,modOurContracts);  
  Report(ProductName & " Contract Validity Check",COCUServiceValidRClass,COCUServiceValidRn,0,modOurContracts);  
  Report(ProductName & " Contract Worth",COCUServiceworthRClass,COCUServiceworthRn,0,modOurContracts);  
  Report(ProductName & " Contract Worth, Consolidated",ConsCOCUServiceworthRClass,COCUServiceworthRn,0,modOurContracts);  
  Report(ProductName & " Contracts Statistics",COCUServiceStatRClass,COCUServiceStatRn,0,modOurContracts);  
  Report("Invoice Service",InvoiceServiceRClass,InvoiceServiceRn,0,modOurContracts);
  Report("Invoiceable " & ProductName & " Contracts",COCUServiceInvRClass,COCUServiceInvRn,0,modOurContracts);  
  Report("Royalty Report",RoyaltyRepRClass,RoyaltyRepRn,0,modOurContracts);
  Report("Number of Users and Installations",NumberOfUsersRClass,NumberOfUsersRn,0,modOurContracts);
  Report("Service Usage",ServiceUsageRClass,ServiceUsageRn,0,modOurContracts);
  Report("Service Usage Comparison",ServiceUsageCompRClass,ServiceUsageCompRn,0,modOurContracts);
  Report("Short Term Enabler",ShortTermEnabRClass,ShortTermEnabRn,0,modOurContracts);
  Report("Terminated " & ProductName & " Contracts",TerminatedCOCURClass,TerminatedCOCURn,0,modOurContracts);  
  Report("Test Generate Activation Codes",GenerateProdSerNoRClass,GenerateProdSerNoRn,0,modOurContracts);
  Report("Version Update Statistics",VersionUpdateStatsRClass,VersionUpdateStatsRn,0,modOurContracts);

  Document(ProductName & " Contract",HWContractRClass,HWContractForm,HWContractFClass,modOurContracts);  

  Maintenance("Change " & ProductName & " Contract List Period Days",COCUServiceVClass,COCUServiceMn,modOurContracts);  
  Maintenance("Create " & ProductName & " Contract Invoices",CreateCOCUInvVClass,CreateCOCUInvMn,modOurContracts);  
  Maintenance("Create Royalty Maintenance Records",CreateRoyaltyMaintVClass,CreateRoyaltyMaintMn,modOurContracts);
  Maintenance("Create Service Invoice",InvoiceServiceVClass,InvoiceServiceMn,modOurContracts);
  Maintenance("Convert Contracts to " & ProductName & " Contracts",MakeCOCUSerFromCOVClass,MakeCOCUSerFromCOMn,modOurContracts);  
  Maintenance("Find Enterprise Contracts Nrs",EntCOCUNrsVClass,EntCOCUNrsMn,modOurContracts);  
  Maintenance("Generate Activation Codes",GenerateProdSerNoVClass,GenerateProdSerNoMn,modOurContracts);
  Maintenance(ProductName & " Contract Start Date Update",CUCOSDUpdateVClass,CUCOSDUpdateMn,modOurContracts);
  Maintenance("Update " & ProductName & " Contracts",CUCOFixupMClass,CUCOFixupMn,modOurContracts);
  Maintenance("Update/Invoice Royalty Records",RoyaltyRepVClass,RoyaltyRepMn,modOurContracts);
*/
/* Operations */ // ONLY FOR INTERNAL USE, NO NEED TO TRANSLATE

  RegisterWS("Access Groups","Access Groups","New Access Group",AccessVc,modOneFuncMod); 
  Register("Сверка","Сверка",BankRecWClass,modOneFuncMod);
  RegisterWS("Счета","Счета","Новый счёт",AccVc,modOneFuncMod); 
  RegisterWS("Bar Tab","Bar Tab","New Rab",RestAccVc,modOneFuncMod); 
  RegisterWS("Cash Ins","Cash Ins","New Cash In",CLInVc,modOneFuncMod); 
  RegisterWS("Cash Outs","Cash Outs","New Cash Out",CLOutVc,modOneFuncMod); 
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modOneFuncMod); 
  RegisterWS("Contracts","Contracts","New Contract",COVc,modOneFuncMod); 
  RegisterWS("Customer Letters","Customer Letters","New Customer Letter",LetVc,modOneFuncMod); 
  Register("Отгрузки","Отгрузки",SHVc,modOneFuncMod);
  RegisterWS("Exchange Rates","Exchange Rates","New Exchange Rate",ERVc,modOneFuncMod); 
  RegisterWS("Авансовые отчеты","Авансовые отчеты","Новый авансовый отчет",ExpVc,modOneFuncMod); 
  RegisterWS("Формы","Формы","Новая форма",DocVc,modOneFuncMod); 
  RegisterWS("Goods Receipts","Goods Receipts","New Goods Receipt",PUVc,modOneFuncMod); 
  RegisterWS("Internal Orders","Internal Orders","New Internal Order",IntORVc,modOneFuncMod); 
  RegisterWS("Invoices","Invoices","New Invoice",IVVc,modOneFuncMod); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modOneFuncMod); 
  RegisterWS("Объекты","Объекты","Новый объект",ObjVc,modOneFuncMod); 
  RegisterWS("Orders","Orders","New Order",ORVc,modOneFuncMod); 
  RegisterWS("Платежи","Платежи","Новый платёж",OPVc,modOneFuncMod); 
  RegisterWS("Сотрудники","Сотрудники","New Person",UserVc,modOneFuncMod); 
  RegisterWS("Счета-фактуры кассового терминала","Счета-фактуры кассового терминала","Новый счёт-фактура",IVCashVc,modOneFuncMod); 
  RegisterWS("Сч/ф кассового терминала","Сч/ф кассового терминала","Новый сч/ф кассового терминала",NPTSIVCashLClass,modOneFuncMod); 
  RegisterWS("Productions","Productions","New Production",ProdVc,modOneFuncMod); 
  RegisterWS("Production Orders","Production Orders","New Production Order",ProdOrderVc,modOneFuncMod); 
  RegisterWS("Проекты","Проекты","Новый проект",PRVc,modOneFuncMod); 
  RegisterWS("Счета-фактуры поставщика","Счета-фактуры поставщика","Новый счёт-фактура поставщика",VIVc,modOneFuncMod); 
  RegisterWS("Товары поставщиков","Товары поставщиков","Новый товар поставщика",PIVc,modOneFuncMod); 
  RegisterWS("Purchase Orders","Purchase Orders","New Purchase Order",POVc,modOneFuncMod); 
  RegisterWS("Purchase Quotations","Purchase Quotations","New Purchase Quotation",POQTVc,modOneFuncMod); 
  RegisterWS("Коммерческие предложения","Коммерческие предложения","Новое комм. предложение",QTVc,modOneFuncMod); 
  RegisterWS("Платежи","Платежи","Новый платёж",IPVc,modOneFuncMod); 
  RegisterWS("Returned Goods","Returned Goods","Новый возврат",RetVc,modOneFuncMod); 
  RegisterWS("Заказы на обслуживание","Заказы на обслуживание","Новый заказ на обслуживание",SVOVc,modOneFuncMod); 
  RegisterWS("Симуляции","Симуляции","Новая симуляция",SMVc,modOneFuncMod); 
  RegisterWS("#Stock Depreciations#","#Stock Depreciations#","New #Stock Depreciation#",SDVc,modOneFuncMod); 
  RegisterWS("#Stock# Movements","#Stock# Movements","New #Stock# Movement",StockMovVc,modOneFuncMod); 
  RegisterWS("#Stocktaking#","#Stocktaking#","New #Stocktaking#",StockTakeVc,modOneFuncMod); 
  RegisterWS("#Time Sheets#","#Time Sheets#","New #Time Sheet#",TSVc,modOneFuncMod); 
  RegisterWS("Записи операций","Записи операций","Новая запись операций",TRVc,modOneFuncMod); 
  RegisterWS("Way Lists","Way Lists","New Way List",WayListVc,modOneFuncMod); 
  RegisterWS("Рабочие задачи","Рабочие задачи","Новая рабочая задача",WOVc,modOneFuncMod); 
  RegisterWS("Work Sheets","Sheets","New Work Sheet",WSVc,modOneFuncMod); 

//  Register("","",ContactVc,modOneFuncMod);

/* modSharesTrading */

  RegisterWS("Shares Certificates","Shares Certificates","New Shares Certificate",SharesVc,modShares); 
//  Register("","",BuySellRequestVc,modShares);
  RegisterWS("Share Transfers","Share Transfers","New Share Transfer",SharesTranVc,modShares); 
  RegisterWS("Shares For Sale","For Sale","New Shares For Sale",SharesSellVc,modShares); 
  RegisterWS("Shares To Buy","To Buy","New Shares To Buy",SharesBuyVc,modShares); 
  RegisterWS("Official Value","Official Value","New Official Value",OfficialValueVc,modShares); 
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modShares); 

  Setting("Value According to Company",CompanyValueLClass,modShares);
  Setting("Value According to Main Shareholder",MainShareHoldValueLClass,modShares);

  Report("Buy / Sell Orders",BuySellOrdersRClass,BuySellOrdersRn,0,modShares);
  Report("Shares Information",SharesInfoRClass,SharesInfoRn,0,modShares);
  Report("Shares Transfers",SharesTrsfRClass,SharesTrsfRn,0,modShares);

// modExtra
//  Register("Акции","Акции",ActionVc,modExtra); // What is it for?

  Register("Отпр. эл. сч/ф","Отпр. эл. сч/ф",HTSIVVc,modHTS);
  Register("Пол. эл. сч/ф","Пол. эл. сч/ф",HTSVIVc,modHTS);
  Register("HT эл. платежи","HT эл. платежи",HTSEPaymentVc,modHTS);
  Register("Статусы эл. записей","Статусы эл. записей",ERecordStatusVc,modHTS);
  Register("HT Компании","HT Компании",HTSCUVc,modHTS);
  Register("Сервера сервисов","Сервера сервисов",WebServiceServerVc,modHTS);
  Register("Использование сервисов","Использование сервисов",ServiceUsageVc,modHTS);
  Register("Сервисы","Сервисы",WebServiceVc,modHTS);// Changed because of new setting in System called Internet Services :)

  Setting("Доступные версии",AvailableVersionLClass,modHTS);
  Setting("Доступные SmartApps",AvailableAppsLClass,modHTS);
  Setting("Customer Services",CustWebServiceLClass,modHTS);
  Setting("E-Tasks Queue",ETasksQueueLClass,modHTS);
  Setting("E-Learning URL Cache (TX)",UniversityURLTXCacheLClass,modHTS);
  Setting("HOB подписи",HobSignaturesLClass,modHTS);
  Setting("Кеш HOB подписей",HobSigCacheLClass,modHTS);
  Setting("HT Bank Transactions",HTSBankTRLClass,modHTS);
  Setting("HT Blessed DBIDs",HTSBlesDBIDLClass,modHTS);
  Setting("HT - клиентские сервисы",HTSCUServiceLClass,modHTS);
  Setting("HT - очередь SMS",HTSSMSQueueLClass,modHTS);
  Setting("HT - кто онлайн?",HTSWhoPresentLClass,modHTS);
  Setting("HT - управление сервисами",HTSWatchServiceTClass,modHTS); 
  Setting("HW - IP сервера Интернет-сервисов",HWEnabServerTClass,modHTS);
  Setting("Настройки сервера Интернет сервисов",HTSEInvoiceTClass,modHTS);
  Setting("Статусы Интернет сервисов",WebServiceStatusLClass,modHTS);
  Setting("Последняя доступная версия",LastAvailableVersionTClass,modHTS);
  Setting("Сертификаты Уведомления",NotificationCertificateLClass,modHTS);
  Setting("Настройки Партнера",HTSPartnerTClass,modHTS);  
  Setting("Кэш сервисов",ServiceCacheLClass,modHTS);
  Setting("Тест сервер",HTSTestServerTClass,modHTS);
  Setting("Тест сервис",HTSTestServiceTClass,modHTS);
  Setting("TX Confirm",TXConfirmLCLass,modHTS);
  Setting("Действия пользователя",HTSUserActionLClass,modHTS);
  Setting("Точки наблюдения",HTSWatchServerLClass,modHTS);
  Setting("Контакты точек наблюдения",HTSWSContactLClass,modHTS);

  Import("Elma",ImportElmaInvoices,ImportElmaInvoices,modHTS); // modSL?
  
  Export("EHF Export",EHFexportEClass,EHFexportEn,modHTS);
  Export("UI Log Contact Export",UILogEClass,UILogEn,modHTS);    

  Report("Список контрактов облачных сервисов",CloudServiceCoListRClass,CloudServiceCoListRn,0,modHTS);
  Report("Count TX Server unconfirmed confirmations",CountTXUnConfRClass,CountTXUnConfRn,0,modHTS); 
  Report("Статус сервисов клиента",WebServiceStatusRClass,CloudServiceStatusRn,0,modHTS);
  Report("HT компании рег. нр. в стране",HTCompaniesRegCountryRClass,HTCompaniesRegCountryRn,0,modHTS);
  Report("Просмотр hansa.log",InspectHansaLogRClass,InspectHansaLogRn,0,modHTS);
  Report("Использование сервисов",ServiceUsageRClass,ServiceUsageRn,0,modHTS);
  Report("Сравнение использования",ServiceUsageCompRClass,ServiceUsageCompRn,0,modHTS);
  Report("Тестовый TX lookup-запрос ",LookupToTXRClass,LookupToTXRn,0,modHTS);
  Report("Тест серверов",TestServicesRClass,TestServicesRn,0,modHTS);
  Report("Кто присутствует",WhoPresentRClass,WhoPresentRn,0,modHTS);
  Report("Кто получил сообщения",WhoRcvMarketingRClass,WhoRcvMarketingRn,0,modHTS);

//  Maintenance("Enable Internet Service",EnableWebServiceVClass,EnableWebServiceMn,modHTS);
//  Maintenance("Invoice Internet Service",WebServiceInvoiceVClass,CloudServiceInvoiceMn,modHTS);
  Maintenance("Очистка очереди электронных задач SMS",ETasksQueueCleanupVClass,ETasksQueueCleanupMn,modHTS);         
  Maintenance("Delete Service Usage",ServiceUsageDelVClass,ServiceUsageDelMn,modHTS);
  //Maintenance("Delete User Actions",CleanUserActionsVClass,CleanUserActionsMn,modHTS);
  Maintenance("Удалить записи кто в он-лайн",DelHTSWhoPresenVClass,DelHTSWhoPresenMn,modHTS);
  if (HasLocalization("ARG")) then begin
    Maintenance("E-Invoices Export to Archive",ArgEInvExportVClass,ArgEInvExportMn,modHTS);
  end;
  Maintenance("Remove TX Server unconfirmed confirmations",RemoveTXUnConfVClass,RemoveTXUnConfMn,modHTS);
  Maintenance("Rename TX Server confirmations",RenameTXConfVClass,RenameTXConfMn,modHTS);
  Maintenance("Reset Sent for Service Usage",ServiceUsageResetVClass,ServiceUsageResetMn,modHTS);
  Maintenance("Update Service Usage",UpdateServiceUsageVClass,UpdateServiceUsageMn,modHTS);  
//  Maintenance("Send Internet Service Servers",WebServicesVClass,CloudServicesMn,modHTS);//??

//  Maintenance("Получить использование служб",ServiceUsageVClass,ServiceUsageMn,modHTS);

/* modInteg */

  Setting("SugarCRM Integration",SugarCRMTClass,modInteg); //!!TRANSLATE
  Setting("Yodlee Integration",YodleeTClass,modInteg); //!!TRANSLATE
  Setting("Yodlee Users",YodleeUserLClass,modInteg); //!!TRANSLATE

  Import("Банковский файл, TeleHansa",TeleHipmIn,TeleHipmIn,modInteg); // I moved it here because I don't know if it is beeing used
  Import("POS Off-line",POSIn,POSIn,modInteg);
  Import("Строки записей операций",TRRowIn,TRRowIn,modInteg);

//  Import("Банковский файл, Nord Finans",IPNordFNor,IPNordFNor,modInteg); // Nor, no code
//  Import("Check File from Hogia",0,ARFromHogia2In,modInteg);
//  Import("New backup, manual file search",0,NBIn,modInteg);
  if (HasLocalization("NOR")) then begin         
    Import("#Sales Ledger# из Hogia",ICSIClass,ARFromHogiaIn,modInteg);         
  end;
  if (HasLocalization("FIN,NOR,SWE")) then begin         
    Import("Транзации из Analyste",0,SpecTrIn,modInteg);         
  end;
//  Import("Update Known Serial Numbers",SVOSerUpIn,SVOSerUpIn,modInteg); // There is code for a SVOUpIn...


  Export("Деятельности",ExpActEClass,ExpActEn,modInteg);
  Export("Счета ресторана",ExTabRowsEClass,ExTabRowsEn,modInteg);
  Export("Базовые регистры",GBaseEClass,GBaseEn,modInteg);
  Export("Контакты Business Communicator",BPCUEClass,BPCUEn,modInteg);
  Export("Спискок контактов",Customer1EClass,Customer1En,modInteg);
  Export("Спискок контактов (формат Hansa)",ContactsEClass,ContactsEn,modInteg);
//  Export("Contact Data",CustAdrEClass,CustAdrEn,modInteg); // SAme export as contact list, only less info beeing exported...
  Export("Список конт. лиц для Palm3",PalmEClass,PalmEn,modInteg);
  Export("Список отношений контактов",Contact1EClass,Contact1En,modInteg);
  Export("Счета-фактуры",InvEClass,InvEn,modInteg);
  Export("Строки счетов-фактур",InvRowEClass,InvRowEn,modInteg);
//  Export("Базовые регистры товаров",GItemBaseEClass,GItemBaseEn,modInteg);
  Export("Данные товаров",ItemsDataEClass,ItemsDataEn,modInteg);
  Export("Информация о товарах",Art2EClass,Art2En,modInteg);
  Export("Строки счетов",OrdRowEClass,OrdRowEn,modInteg);
  Export("Неоплаченные сч/ф",OpenInvEClass,OpenInvEn,modInteg);
  Export("Неоплаченные сч/ф поставщиков",OpenVIEClass,OpenVIEn,modInteg);
  Export("Экспорт зарплаты",HOLEClass,HOLEn,modInteg);
  Export("POS Server экспорт",POSServEClass,POSServEn,modInteg); //synchronization instead
  Export("POS Off-line экспорт",POSClientEClass,POSClientEn,modInteg); //synchronization instead
  Export("Строки заказов поставщикам",POOrdRowEClass,POOrdRowEn,modInteg);
  Export("Строки предложений",QTRowEClass,QTRowEn,modInteg);
  Export("Данные продаж",SalesDataEClass,SalesDataEn,modInteg);
  Export("Настройки",SettingsEClass,SettingsEn,modInteg);
//  Export("Системные данные",SysEClass,SysEn,modInteg); // Why rewrite it and call i SysDataEn and still keep the old code?
  Export("Системные данные",SysDataEClass,SysDataEn,modInteg);
  Export("Строки таблицы времени",TSRowEClass,TSRowEn,modInteg);
  Export("Регистры зап. опер.",GTransEClass,GTransEn,modInteg);
  Export("Регистры операций (период)",GTrans2EClass,GTrans2En,modInteg);
  Export("Записи операций",TrEClass,GLEn,modInteg);
  if (HasLocalization("UKR")) then begin  
    Export("Регистр коррекций НДС (Украина)",VATIVVIRegUkrEClass,VATIVVIRegUkrEn,modInteg);
  end;
  Export("Данные интернет-магазина",WebShopDataEClass,ToolWebShopDataEn,modInteg);
  Export("Данные интернет-магазина и CMS",WebNGDataEClass,ToolWebNGDataEn,modInteg);

//  Export("Company New Backup",TBEClass,CompanyNBEn,modInteg);
//  Export("Contract Invoicing Per Month",ContrPeriodicEClass,ContrPerEn,modInteg);
//  Export("E-Post Invoices",EPostInvEClass,EPostInvEn,modInteg); // For whom is this??
//  Export("Joined Forest Export", ForestNewClass,ForestNewEn,modInteg); // no source code
//  Export("Электронное фактурирование",ElecInvEClass,ElecInvEn,modInteg);//NO EXPORT ; HTS will TAKE OVER
//  Export("Utleveranser",SHEClass,SHEn,modInteg);
//  Export("Transactions from Other Systems",SpecTrEClass,SFBEn,modInteg);
//  Export("Корреспонденция счетов",CorspEClass,CorspEn,modInteg);
//  Export("Reservation Flow",JobFlowEClass,JobFlowEn,modInteg); // there is code behind it, but it is a confusing function
//  Export("Reservation Journal",JobJourEClass,JobJourEn,modInteg); // there is code behind it, but it is a confusing function
//  Export("E-mail alias",EmailAliasEClass,EmailAliasEn,modInteg);

  Report("Инвентаризация Apple GDV",AppleGDVInvRClass,AppleGDVInvRn,0,modInteg);
  Report("Розничаня торговля Apple GDV ",AppleGDVSellRClass,AppleGDVSellRn,0,modInteg);

  Maintenance("Send Existing Records to Sugar CRM ",SugarCRMInitVClass,SugarCRMInitMn,modInteg); //!!TRANSLATE

/* modBA */
 
  RegisterWS("Approval Rules","Approval Rules","New Approval Rule",AcceptanceRulesVc,modBA); 

  Setting("Бизнес оповещения",BARulesTClass,modBA);
  Setting("Оповещения по отгрузкам контактам",BASHTClass,modBA);
//  Setting("Contact Invoice Alerts",BAIVTClass,modBA); //design flow
  Setting("Оповещения по счетам контактам",BAORTClass,modBA);
  Setting("Оповещения по комм. предложениям",BAQTTClass,modBA);
  Setting("Оповещения по резервированиям",BAJobTClass,modBA); 
  Setting("Оповещения по различию стоимости",BACostVarianceTClass,modBA);
  Setting("Оповещения по малой прибыли",BAMrkUpBelowMinTClass,modBA);
//  Setting("Report Set",ReportSetLClass,modBA);
//  Setting("Dynamic Reporting Dates",ReportingDateLClass,modBA);
//  Setting("Dynamic Reporting Periods",ReportingPeriodLClass,modBA);

  Setting("Оповещения по внутренним сч/ф",BAIVIntTClass,modBA); 
  Setting("Оповещения по внутренним счетам",BAORIntTClass,modBA); 
  Setting("Оповещения по внутренним предложениям",BAQTIntTClass,modBA); 
  Setting("Внутренние системные оповещения",BASysIntTClass,modBA); 
  Setting("Internal System Alerts",BASysIntLClass,modBA); //!!TRANSLATE
  Setting("Отчёт о просрочке",BADueReportTClass,modBA); 

  Report("Approval Status",ApprovalStatusRClass,ApprovalStatusRn,0,modBA);
  Report("Статус SMS",BASMSStatusRClass,BASMSStatusRn,0,modBA);

/* modCourses */

  RegisterWS("Проведение курсов","Проведение курсов","Новое проведение курсов",CourseEventVc,modCourses); 
  RegisterWS("Курсы","Курсы","Новый курс",CourseVc,modCourses); 
  RegisterWS("Аудитории","Аудитории","Новая аудитория",ResVc,modCourses); 
  RegisterWS("Товары","Товары","Новый товар",INVc,modCourses); 
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modCourses); 
  RegisterWS("Связи контактов","Связи контактов","Новая связь контактов",ContactRelVc,modCourses); 
  RegisterWS("Course Tests","Course Tests","New Course Test",UnivTestVc,modCourses); 
  RegisterWS("Course Tests Answers","Course Tests Answers","New Course Test Answer",UnivTestAnswerVc,modCourses); 

//  Setting("Course Settings",CourseTClass,modCourses);
  Setting("Страны",CountryLClass,modCourses);
  Setting("Названия дней недели и месяцев",DNMLClass,modCourses);
  Setting("E-Learning URL Cache",UniversityURLCacheLClass,modCourses);
  Setting("Цены",PLLClass,modCourses);
  Setting("Типы курсов",CourseTypeLClass,modCourses);
  Setting("Напоминания SMS",CourseReminderTClass,modCourses);
  Setting("Файлы для курсов",CourseMediaLClass,modCourses); 
//  Setting("Ответы тестов Университета",UnivTestAnswerLClass,modCourses);//moved to registers
//  Setting("Тесты Университета",UnivTestLClass,modCourses);//moved to registers

  Report("Статус резервирования курсов",CourseBookingStatusRClass,CourseBookingStatusRn,0,modCourses);
  Report("Журнал проведения курсов",CourseEventJournalRClass,CourseEventJournalRn,0,modCourses);
  Report("Фактурируемые проведения курсов",CourseEventIVRClass,CourseEventIVRn,0,modCourses);
  Report("Список участников",CourseEventPartRClass,CourseEventPartRn,0,modCourses);  
  Report("Результаты тестов",UnivTestResRClass,UnivTestResRn,0,modCourses);

  Document("График проведения курсов",CourseEventsRClass,CourseEventForm,CourseEventsFClass,modCourses); 
//  Document("Подтверждение участника",AttendeeRClass,AttendeeForm,AttendeeFClass,modCourses); no code
//  Document("Ярлык участника",AttendeesLabelRClass,AttendeesLabelForm,AttendeesLabelFClass,modCourses);

  Maintenance("Создание сч/ф за курсы",GenIVFromCourseVClass,GenIVFromCourseMn,modCourses);

/* modASP */
  Register("Hansa Versions","Hansa Versions",HansaVersionVc,modASP);
  Register("Cloud Nodes","Cloud Nodes",CloudNodeVc,modASP);
  Register("Remote Cloud Servers","Remote Cloud Servers",RemoteCloudServerVc,modASP);  
  Register("Local Cloud Servers","Local Cloud Servers",LocalCloudServerVc,modASP);  
  Register("Cloud Machine Statistics","Cloud Machine Statistics",CloudMachineStatsVc,modASP);  

/* Register("Тесты Университета","",ManagedUserVc,modASP); */
  //Register("Servers","Servers",ServerMonitorVc,modASP); // Kjells monitor, works, server code already in 5.2 so you can monitor all new 5.2s
  Register("Backup Clients","Backup Clients",BackupClientVc,modASP);
  Register("Cloud Watchpoint","Cloud Watchpoint",CloudWatchpointVc,modASP);
  Register("Sent Watchdog Messages","Sent Watchdog Messages",SWMVc,modASP);

  Maintenance("Обновить облачный контроллер с узлов",ASPUpdCtrlFromNodesVClass,ASPUpdCtrlFromNodesMn,modASP);
  Maintenance("Удалить статистику облачных машин",ASPDelCloudMachineStatVClass,ASPDelCloudMachineStatMn,modASP);
  Maintenance("Удалить историю точек наблюдения",ClearWatchpointHistoryVClass,ClearWatchpointHistoryMn,modASP); 
  Maintenance("Установите уровень ведения журнала сервера",ASPSetDebugLevelVClass,ASPSetDebugLevelMn,modASP); 

  Setting("Архив ASP",ASPArchiveLClass,modASP); 
  Setting("Другие облачные контроллеры",CloudControllerListTClass,modASP); 
  Setting("Настройки облачных сервисов",CloudSettingsTClass,modASP);
  Setting("Натройки хост пула",HostPoolSettingsTClass,modASP);  
  Setting("Конфигурация хостинга",HostingConfigurationLClass,modASP); 
  Setting("Обнаруженная конфигурация хостинга",HostingConfigTClass,modASP); 
  Setting("Ключи",EnablerLClass,modASP);
  Setting("Доступные наименования серверов",CNHostNameTClass,modASP); 
  Setting("Приглашения на подписку",SubscriptionInvitationLClass,modASP);
  Setting("Архив ASP",ASPArchiveLClass,modASP); 
  Setting("Server Activity Log",ASPActionLogLClass,modASP); //!!TRANSLATE

//  Report("Inspect hansa.log",InspectHansaLogRClass,InspectHansaLogRn,0,modASP);
  Report("Статистика облачной машины",CloudMachineStatRClass,CloudMachineStatRn,0,modASP); 
  Report("List Cloud Nodes",ASPListCloudNodeRClass,ASPListCloudNodeRn,0,modASP); //!!TRANSLATE
  Report("List not used On-Demand servers",ASPListNotUsedServersRClass,ASPListNotUsedServersRn,0,modASP); //!!TRANSLATE
  Report("Список удаленных серверов Облака",ASPRemoteCloudServerListRClass,ASPRemoteCloudServerListRn,0,modASP);  
  Report("Список серверов с HAL",ListServersWithHALRClass,ListServersWithHALRn,0,modASP);         
  Report("Список неуправляемых серверов",ListUnmanagedServersRClass,ListUnmanagedServersRn,0,modASP);
  Report("Список используемых версий",ASPListUsedVersionsRClass,ASPListUsedVersionsRn,0,modASP);
  Report("Список версий",ListServerVersionsRClass,ListServerVersionsRn,0,modASP); 
  Report("Серверы без Архива Облака",RCldSvrNoArchvRClass,RCldSvrNoArchvRn,0,modASP); 

/* modMForms */

  RegisterWS("Приложения","Приложения","Новое приложение",SmartAppVc,modMForms); 
  RegisterWS("Регистры","Регистры","Новый регистр",RegisterDefinitionVc,modMForms); 
  RegisterWS("Окна","Окна","Новое окно",WindowDefinitionVc,modMForms); 
  // Register("Функции HAL","Функции HAL",HCVc,modMForms);
  Register("HAL-файлы","HAL-файлы",HALFilesSClass,modMForms);
  Register("HAL-стек","HAL-стек",HALStackTClass,modMForms);
  //Register("Bug Reports","Bug Reports",BugReportRClass,modMForms);
  Register("Create Import Function","Create Import Function",RITWClass,modMForms);
  Register("Find in files","Find in files",FindInFilesWClass,modMForms);
  Register("Create Document Function","Create Document Function",CDFWClass,modMForms);

  Setting("Доступные SmartApps",AvailableAppsLClass,modMForms);
  Setting("Конфликт прогресса синхронизации",SyncProgressLClass,modMForms);
  Setting("Настрокий разработчика",DevSetTClass,modMForms);
  Setting("Test Window Tags",CurLicensesClass,modMForms); //## only for developing w. demodata  

  if (DeveloperMode) then begin
    Report("Окна",WindowsRClass,WindowsRn,0,modMForms);
  end;
  Report("HAL Primitives",HalSpecRClass,HalSpecRn,0,modMForms);
  Report("Test Lookup Connection",TestLookupConRClass,TestLookupConRn,0,modMForms);


/* modTimekeeper */

  Report("Анализ отработанных часов",WorkHoursAnaRClass,WorkHoursAnaRn,0,modTimekeeper);

  Setting("Timekeeper Activity Type",ASTimekepperTClass,modTimekeeper);

/* modHRM */

  RegisterWS("Employment Contracts","Employment Contracts","New Employment Contract",HRMCOVc,modHRM); 
  RegisterWS("Employment Contracts Changes","Employment Contracts Changes","New Employment Contracts Change",HRMCOChangeVc,modHRM); 
  RegisterWS("Employees","Employees","New Employee",CUEmployeeLClass,modHRM); 
  RegisterWS("Контакты","Контакты","Новый контакт",CUVc,modHRM); 
  RegisterWS("Job Positions","Job Positions","New Job Position",HRMJPVc,modHRM); 
  RegisterWS("Performance Appraisals","Performance Appraisals","New Performance Appraisal",HRMPAVc,modHRM); 
  RegisterWS("Skills Evaluation","Skills Evaluation","New Skills Evaluation",HRMSEVc,modHRM); 
  RegisterWS("Leave Applications","Leave Applications","New Leave Application",LeaveApplicationVc,modHRM); 

  Setting("Candidacy Sources",CandidacySourceLClass,modHRM);
  Setting("Courtesy Titles",CourtesyTitlesTClass,modHRM);
  Setting("Отделы",DepLClass,modHRM);
  Setting("Классы трудового договора",HRMCOClassLClass,modHRM);
  Setting("Степени",EducationDegreesTClass,modHRM);
  Setting("Национальности",EthnicityTClass,modHRM);
  Setting("Состояние здоровья",HealthStatusTClass,modHRM);
  Setting("Должности",JobTitleLClass,modHRM);
  Setting("Leave Schemes",LeaveSchemeLClass,modHRM);
  Setting("Leave Settings",LeaveRulesTClass,modHRM);
  Setting("Leave Transfers",LeaveTransferLClass,modHRM);
  Setting("Серии номеров - Трудовые договора",HRMCOSerTClass,modHRM);
  Setting("Серии номеров - Приложения к трудовым договорам",HRMCOChangeSerTClass,modHRM);
  Setting("Серии номеров - Leave Application",LeaveApplSerTClass,modHRM);
  Setting("Серии номеров - Leave Transfers",LeaveTrsfSerTClass,modHRM);
  Setting("Серии номеров - Performance Appraisals",HRMPASerTClass,modHRM);
  Setting("Performance Appraisal Classes",HRMPACLClass,modHRM);
  Setting("Performance Factors",HRMPFLClass,modHRM);
  Setting("Performance Ratings",HRMPRLClass,modHRM);
  Setting("Ratings",HRMRatingLClass,modHRM);
  Setting("Skills",HRMSkillLClass,modHRM);
  Setting("Группы оценки персонала",SoftFactorGroupLClass,modHRM);
  Setting("Оценки персонала",SoftFactorLClass,modHRM);

  Report("Employment Contract List",HRMCOListRClass,HRMCOListRn,0,modHRM);
  Report("Head Count",HeadCountRClass,HeadCountRn,0,modHRM);
  Report("Leave Balance",LeaveBalanceRClass,LeaveBalanceRn,0,modHRM);
  Report("Skills Evaluation",HRMSkillRClass,HRMSkillRn,0,modHRM);
  Report("анализ оценки персонала",SoftFactAnalysisRClass,SoftFactAnalysisRn,0,modHRM); 

  Document("Контракт Найма ",HRMCORClass,HRMCOForm,HRMCOFClass,modHRM);

/* modWorldBankRep */
  Export("World Bank 1-A",WB1AEClass,WB1AEn,modWorldBankRep);
  Export("World Bank 1-B",WB1BEClass,WB1BEn,modWorldBankRep);
  Export("World Bank 1-D",WB1DEClass,WB1DEn,modWorldBankRep);
  Export("World Bank 1-E",WB1EEClass,WB1EEn,modWorldBankRep);
  Export("World Bank 1-F",WB1FEClass,WB1FEn,modWorldBankRep);
  Export("World Bank 2-A",WB2AClass,WB2AEn,modWorldBankRep);
  Export("World Bank 2-B",WB2BEClass,WB2BEn,modWorldBankRep);
  Export("World Bank 3-A",WB3AClass,WB3AEn,modWorldBankRep);
  Export("World Bank 3-B",WB3BClass,WB3BEn,modWorldBankRep);
  Export("World Bank 3-C",WB3CClass,WB3CEn,modWorldBankRep);
  Export("World Bank 3-D",WB3DClass,WB3DEn,modWorldBankRep);

/* modCAL */
  Setting("Настройки календаря",CalendarOptionTClass,modCAL);

/* modDY */
   Report("Управление доступом",AccessControlRClass,AccessControlRn,0,modDY);

  Report("Финансы - Список исправлений",CorrRClass,CorrRn,0,modDY);
  Report("Финансы - Список исправлений, Конcолидированный",CorrRClass,AllCompaniesCorrRn,0,modDY);

  Report("Расчёты с поставщиками - Проверка",APCheckRClass,APCheckRn,0,modDY);
  Report("Расчёты с поставщиками - Откат вперед",APRollFwdRClass,APRollFwdRn,0,modDY);

  Report("Расчёты с клиентами - Проверка",ARCheckRClass,ARCheckRn,0,modDY);
  Report("Расчёты с клиентами - Откат вперед",ARRollFwdRClass,ARRollFwdRn,0,modDY);

  Report("Проверка подсистем",Check1TRRClass,Check1TRRn,0,modDY);
  Report("Проверка транзакции",Check2TRRClass,Check2TRRn,0,modDY);

  Export("Экспорт истории товаров",ItemHistEClass,ItemHistEn,modDY);         

/* modProdSched */

  Register("Machines In Scheduling","Machines In Scheduling",PrPlanMachinesTClass,modProdSched);
  Register("Machine Hours","Machine Hours",MachineHoursLClass,modProdSched);
  Register("Machine Hours Changes","Machine Hours Changes",MachineHoursChangesLClass,modProdSched);

  Setting("Algorythm Settings",ProdPlanCoefTClass,modProdSched);
  Setting("Efficiency Colors",MachineColorTClass,modProdSched);
  Setting("Equal Production Machines",ProdMachineEqLClass,modProdSched);
  Setting("Operation Colors",ProdOpWebColorTClass,modProdSched);
  Setting("Operation Switching Times",ProdSwitchTimeLClass,modProdSched);
  Setting("Plan Records",ProdPlanRecLClass,modProdSched);
  Setting("Production Machine Status",AT2UnitStatusLClass,modProdSched);
  Setting("Production Plans",ProdPlanIDLClass,modProdSched);
  Setting("Планирование Веб-настроек",WebPlanDefTClass,modProdSched);
  Setting("User Access",ProdPlanAccessLClass,modProdSched);

  Report("Production Operation Planning",ProdOperPlanRClass,ProdOperPlanRn,0,modProdSched);

/* modIntProjMan */

  Setting("Статусы деятельности",ActStateLClass,modIntProjMan); 
  Setting("Activity States Sequences",ActStateSeqLClass,modIntProjMan); //!!TRANSLATE
  Setting("Управление рабочими процессами",PipelineOverviewTClass,modIntProjMan); 
  Setting("Обзор воронки продаж пользователя",UserPipelineOverviewLClass,modIntProjMan); 
  Setting("Класификации разработки",DevClassLClass,modIntProjMan); 

  Register("Проекты","Проекты",PipelineWClass,modIntProjMan); 

  Report("Статус проекта",ActProjStatRClass,ActProjStatRn,0,modIntProjMan); 
  Report("Project History",ActProjHistRClass,ActProjHistRn,0,modIntProjMan); //!!TRANSLATE

/* modIC */

  Setting("Межфирменные Настройки",ICClass,modIC);  
  Setting("Правила межфирменных операций",ICTRuleLClass,modIC);  

  Report("Inter Company Account Comparison",ICACRClass,ICACRn,UserDefRepDClass,modIC); //!!TRANSLATE
//  Report("Sales & Purchase A/C Comparison",ICSPAccCompRClass,ICSPAccCompRn,ICSPAccCompDClass,modIC);
//cannot see code for this report

  Maintenance("Создать межфирменные операции",ICTVClass,ICTRMn,modIC);  

/* modRestAPI */

  Register("Rest API Access","Rest API Access",DevCredentialVc,modRestAPI); //!!TRANSLATE
  Register("Authorization Codes","Authorization Codes",OAuthCodeVc,modRestAPI); //!!TRANSLATE
  Register("Refresh Tokens","Refresh Tokens",OAuthRefreshTokenVc,modRestAPI); //!!TRANSLATE
  Register("Access Tokens","Access Tokens",OAuthAccessTokenVc,modRestAPI); //!!TRANSLATE

  Setting("Rest API Setup",RestAPITClass,modRestAPI); //!!TRANSLATE

  return;
end;

#endif
